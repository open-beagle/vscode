{"version":3,"sources":["fake","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/errors.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/arrays.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/functional.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/iterator.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/lifecycle.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/linkedList.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/platform.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/process.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/path.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/stopwatch.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/event.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/cancellation.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/stream.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/strings.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/buffer.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/types.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/extpath.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/objects.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/uri.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/console.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/map.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/marshalling.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/network.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/normalization.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/resources.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/async.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/glob.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/common/uuid.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/node/decoder.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/node/pfs.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/node/extpath.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/node/processes.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/platform/files/common/files.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/platform/files/node/watcher/nsfw/nsfwWatcherService.ts","file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherApp.ts"],"names":[],"mappings":"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","file":"watcherApp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\ttrackDisposable(x: IDisposable): void;\n\tmarkTracked(x: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tdisposableTracker = new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tmarkTracked(x: IDisposable): void {\n\t\t\tif (x && x !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tdisposableTracker.markTracked(x);\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!disposableTracker) {\n\t\treturn x;\n\t}\n\tdisposableTracker.trackDisposable(x);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn toDisposable(() => dispose(disposables));\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick?: (callback: (...args: any[]) => void) => void;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean;\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\nexport const browserCodeLoadingCacheStrategy: 'none' | 'code' | 'bypassHeatCheck' | 'bypassHeatCheckAndEagerCompile' | undefined = (() => {\n\n\t// Always enabled when sandbox is enabled\n\tif (isElectronSandboxed) {\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\t// Otherwise, only enabled conditionally\n\tconst env = nodeProcess?.env['VSCODE_BROWSER_CODE_LOADING'];\n\tif (typeof env === 'string') {\n\t\tif (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\n\t\t\treturn env;\n\t\t}\n\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\treturn undefined;\n})();\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string';\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\ninterface ISetImmediate {\n\t(callback: (...args: unknown[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof nodeProcess?.nextTick === 'function') {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: unknown[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\nlet safeProcess: INodeProcess & { nextTick: (callback: (...args: any[]) => void) => void; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return process.nextTick!(callback); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `nextTick` method in node.js, sandboxed or web\n * environments.\n */\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n}\n\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/** ONLY enable this during development */\n\t_profName?: string\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._listeners?.clear();\n\t\tthis._deliveryQueue?.clear();\n\t\tthis._leakageMon?.dispose();\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T>): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): void {\n\tstream.on('error', error => listener.onError(error));\n\tstream.on('end', () => listener.onEnd());\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => listener.onData(data));\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129750)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean; }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function assertNever(value: never) {\n\tthrow new Error('Unreachable');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string): boolean {\n\tif (isWindows) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring, compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tif (superStr) {\n\t\t\t\t\t// remove children\n\t\t\t\t\tnode.left = undefined;\n\t\t\t\t\tnode.mid = undefined;\n\t\t\t\t\tnode.right = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// remove element\n\t\t\t\t\tnode.value = undefined;\n\t\t\t\t}\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tyield* this._entries(node.left);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tyield [node.key, node.value];\n\t\t\t}\n\t\t\t// mid\n\t\t\tyield* this._entries(node.mid);\n\n\t\t\t// right\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Only convert the URI if we are in a native context and it has `file:` scheme\n\t\t// and we have explicitly enabled the conversion (sandbox, or VSCODE_BROWSER_CODE_LOADING)\n\t\tif (platform.isNative && (__forceCodeFileUri || platform.isPreferringBrowserCodeLoad) && uri.scheme === Schemas.file) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || this.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== this.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { canceled, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event, Listener } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): Queue<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onFinished)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number) { }\n\n\tincrement(): number {\n\t\tconst now = Date.now();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(canceled());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promises.settled(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\texport interface IResolvedPromise<T> {\n\t\tstatus: 'fulfilled';\n\t\tvalue: T;\n\t}\n\n\texport interface IRejectedPromise {\n\t\tstatus: 'rejected';\n\t\treason: Error;\n\t}\n\n\t/**\n\t * Interface of https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\tinterface PromiseWithAllSettled<T> {\n\t\tallSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]>;\n\t}\n\n\t/**\n\t * A polyfill of `Promise.allSettled`: returns after all promises have\n\t * resolved or rejected and provides access to each result or error\n\t * in the order of the original passed in promises array.\n\t * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\texport async function allSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\tif (typeof (Promise as unknown as PromiseWithAllSettled<T>).allSettled === 'function') {\n\t\t\treturn allSettledNative(promises); // in some environments we can benefit from native implementation\n\t\t}\n\n\t\treturn allSettledShim(promises);\n\t}\n\n\tasync function allSettledNative<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn (Promise as unknown as PromiseWithAllSettled<T>).allSettled(promises);\n\t}\n\n\tasync function allSettledShim<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn Promise.all(promises.map(promise => (promise.then(value => {\n\t\t\tconst fulfilled: IResolvedPromise<T> = { status: 'fulfilled', value };\n\n\t\t\treturn fulfilled;\n\t\t}, error => {\n\t\t\tconst rejected: IRejectedPromise = { status: 'rejected', reason: error };\n\n\t\t\treturn rejected;\n\t\t}))));\n\t}\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = paths.sep === paths.posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, paths.sep);\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst targetPathEnd = paths.posix.sep + targetPath;\n\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t((testPath === nativePath || testPath.endsWith(nativePathEnd))\n\t\t\t\t|| !usingPosixSep && (testPath === targetPath || testPath.endsWith(targetPathEnd)))\n\t\t\t? pattern : null;\n\t} : function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t(testPath === nativePath\n\t\t\t\t|| (!usingPosixSep && testPath === targetPath))\n\t\t\t? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\nlet _fillRandomValues: (bucket: Uint8Array) => Uint8Array;\n\ndeclare const crypto: undefined | { getRandomValues(data: Uint8Array): Uint8Array };\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t// browser\n\t_fillRandomValues = crypto.getRandomValues.bind(crypto);\n\n} else {\n\t_fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t}\n\t\treturn bucket;\n\t};\n}\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { isEqualOrParent, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provied path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rmDir\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn fs.promises.rmdir(path, { recursive: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmdirSync(path, { recursive: true });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport async function readdir(path: string): Promise<string[]>;\nexport async function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nexport async function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : fs.promises.readdir(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await fs.promises.readdir(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await fs.promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convinience method to read all children of a path that\n * are directories.\n */\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await fs.promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await fs.promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a non-existing file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await fs.promises.stat(await fs.promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a non-existing file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - updates the `mtime` of the `source` after the operation\n * - allows to move across multiple disks\n */\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\t// We have been updating `mtime` for move operations for files since the\n\t// beginning for reasons that are no longer quite clear, but changing\n\t// this could be risky as well. As such, trying to reason about it:\n\t// It is very common as developer to have file watchers enabled that watch\n\t// the current workspace for changes. Updating the `mtime` might make it\n\t// easier for these watchers to recognize an actual change. Since changing\n\t// a source code file also updates the `mtime`, moving a file should do so\n\t// as well because conceptually it is a change of a similar category.\n\tasync function updateMtime(path: string): Promise<void> {\n\t\ttry {\n\t\t\tconst stat = await fs.promises.lstat(path);\n\t\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\t\treturn; // only for files\n\t\t\t}\n\n\t\t\tconst fh = await fs.promises.open(path, 'a');\n\t\t\ttry {\n\t\t\t\tawait fh.utimes(stat.atime, new Date());\n\t\t\t} finally {\n\t\t\t\tawait fh.close();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Ignore any error\n\t\t}\n\t}\n\n\ttry {\n\t\tawait fs.promises.rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string, target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nexport async function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait fs.promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait fs.promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait fs.promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await fs.promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait fs.promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Async FS Methods\n\nexport async function exists(path: string): Promise<boolean> {\n\ttry {\n\t\tawait fs.promises.access(path);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait fs.promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as process from 'vs/base/common/process';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.exists(path)) {\n\t\t\t\treturn !((await fs.promises.stat(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent proces are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IExpression } from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber, isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions extends FileOverwriteOptions, FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type FileOpenOptions = FileOpenForReadOptions | FileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: FileOpenOptions): options is FileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface FileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface FileOpenForWriteOptions extends FileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface FileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of paths to exclude from watching.\n\t */\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@bpasero remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\t/**\n\t * @deprecated use the `contains()` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly changes: readonly IFileChange[];\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tthis.changes = changes;\n\n\t\tfor (const change of changes) {\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tif (!this.added) {\n\t\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.added.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tif (!this.updated) {\n\t\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updated.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tif (!this.deleted) {\n\t\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.deleted.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\tconst changes: IFileChange[] = [];\n\n\t\tconst eventsForType = type === FileChangeType.ADDED ? this.added : type === FileChangeType.UPDATED ? this.updated : this.deleted;\n\t\tif (eventsForType) {\n\t\t\tfor (const [, change] of eventsForType) {\n\t\t\t\tchanges.push(change);\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.ignorePathCasing);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends Required<IBaseStat> { }\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly children?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occured and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nsfw from 'nsfw';\nimport * as glob from 'vs/base/common/glob';\nimport { join } from 'vs/base/common/path';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { IWatcherService, IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nconst nsfwActionToRawChangeType: { [key: number]: number } = [];\nnsfwActionToRawChangeType[nsfw.actions.CREATED] = FileChangeType.ADDED;\nnsfwActionToRawChangeType[nsfw.actions.MODIFIED] = FileChangeType.UPDATED;\nnsfwActionToRawChangeType[nsfw.actions.DELETED] = FileChangeType.DELETED;\n\ninterface IWatcherObjet {\n\tstart(): void;\n\tstop(): void;\n}\n\ninterface IPathWatcher {\n\tready: Promise<IWatcherObjet>;\n\twatcher?: IWatcherObjet;\n\tignored: glob.ParsedPattern[];\n}\n\nexport class NsfwWatcherService extends Disposable implements IWatcherService {\n\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage: Event<ILogMessage> = this._onDidLogMessage.event;\n\n\tprivate pathWatchers: { [watchPath: string]: IPathWatcher } = {};\n\tprivate verboseLogging: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tasync setRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\tconst normalizedRoots = this._normalizeRoots(roots);\n\n\t\t// Gather roots that are not currently being watched\n\t\tconst rootsToStartWatching = normalizedRoots.filter(r => {\n\t\t\treturn !(r.path in this.pathWatchers);\n\t\t});\n\n\t\t// Gather current roots that don't exist in the new roots array\n\t\tconst rootsToStopWatching = Object.keys(this.pathWatchers).filter(r => {\n\t\t\treturn normalizedRoots.every(normalizedRoot => normalizedRoot.path !== r);\n\t\t});\n\n\t\t// Logging\n\t\tthis.debug(`Start watching: [${rootsToStartWatching.map(r => r.path).join(',')}]\\nStop watching: [${rootsToStopWatching.join(',')}]`);\n\n\t\t// Stop watching some roots\n\t\trootsToStopWatching.forEach(root => {\n\t\t\tthis.pathWatchers[root].ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[root];\n\t\t});\n\n\t\t// Start watching some roots\n\t\trootsToStartWatching.forEach(root => this.doWatch(root));\n\n\t\t// Refresh ignored arrays in case they changed\n\t\troots.forEach(root => {\n\t\t\tif (root.path in this.pathWatchers) {\n\t\t\t\tthis.pathWatchers[root.path].ignored = Array.isArray(root.excludes) ? root.excludes.map(ignored => glob.parse(ignored)) : [];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWatch(request: IWatcherRequest): void {\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tconst fileEventDelayer = new ThrottledDelayer<void>(NsfwWatcherService.FS_EVENT_DELAY);\n\n\t\tlet readyPromiseResolve: (watcher: IWatcherObjet) => void;\n\t\tthis.pathWatchers[request.path] = {\n\t\t\tready: new Promise<IWatcherObjet>(resolve => readyPromiseResolve = resolve),\n\t\t\tignored: Array.isArray(request.excludes) ? request.excludes.map(ignored => glob.parse(ignored)) : []\n\t\t};\n\n\t\tprocess.on('uncaughtException', (e: Error | string) => {\n\n\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t// we are running into a limit. We only want to warn\n\t\t\t// once in this case to avoid log spam.\n\t\t\t// See https://github.com/microsoft/vscode/issues/7950\n\t\t\tif (e === 'Inotify limit reached' && !this.enospcErrorLogged) {\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t}\n\t\t});\n\n\t\t// NSFW does not report file changes in the path provided on macOS if\n\t\t// - the path uses wrong casing\n\t\t// - the path is a symbolic link\n\t\t// We have to detect this case and massage the events to correct this.\n\t\tlet realBasePathDiffers = false;\n\t\tlet realBasePathLength = request.path.length;\n\t\tif (isMacintosh) {\n\t\t\ttry {\n\n\t\t\t\t// First check for symbolic link\n\t\t\t\tlet realBasePath = realpathSync(request.path);\n\n\t\t\t\t// Second check for casing difference\n\t\t\t\tif (request.path === realBasePath) {\n\t\t\t\t\trealBasePath = (realcaseSync(request.path) || request.path);\n\t\t\t\t}\n\n\t\t\t\tif (request.path !== realBasePath) {\n\t\t\t\t\trealBasePathLength = realBasePath.length;\n\t\t\t\t\trealBasePathDiffers = true;\n\n\t\t\t\t\tthis.warn(`Watcher basePath does not match version on disk and will be corrected (original: ${request.path}, real: ${realBasePath})`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\tthis.debug(`Start watching with nsfw: ${request.path}`);\n\n\t\tnsfw(request.path, events => {\n\t\t\tfor (const e of events) {\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tconst logPath = e.action === nsfw.actions.RENAMED ? join(e.directory, e.oldFile || '') + ' -> ' + e.newFile : join(e.directory, e.file || '');\n\t\t\t\t\tthis.log(`${e.action === nsfw.actions.CREATED ? '[CREATED]' : e.action === nsfw.actions.DELETED ? '[DELETED]' : e.action === nsfw.actions.MODIFIED ? '[CHANGED]' : '[RENAMED]'} ${logPath}`);\n\t\t\t\t}\n\n\t\t\t\t// Convert nsfw event to IRawFileChange and add to queue\n\t\t\t\tlet absolutePath: string;\n\t\t\t\tif (e.action === nsfw.actions.RENAMED) {\n\t\t\t\t\t// Rename fires when a file's name changes within a single directory\n\t\t\t\t\tabsolutePath = join(e.directory, e.oldFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.DELETED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t\tabsolutePath = join(e.newDirectory || e.directory, e.newFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.ADDED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tabsolutePath = join(e.directory, e.file || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({\n\t\t\t\t\t\t\ttype: nsfwActionToRawChangeType[e.action],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delay and send buffer\n\t\t\tfileEventDelayer.trigger(async () => {\n\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tevents.forEach(e => {\n\n\t\t\t\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\te.path = normalizeNFC(e.path);\n\n\t\t\t\t\t\t// Convert paths back to original form in case it differs\n\t\t\t\t\t\tif (realBasePathDiffers) {\n\t\t\t\t\t\t\te.path = request.path + e.path.substr(realBasePathLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Broadcast to clients normalized\n\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\tthis._onDidChangeFile.fire(res);\n\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\tthis.log(` >> normalized ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(watcher => {\n\t\t\tthis.pathWatchers[request.path].watcher = watcher;\n\t\t\tconst startPromise = watcher.start();\n\t\t\tstartPromise.then(() => readyPromiseResolve(watcher));\n\n\t\t\treturn startPromise;\n\t\t});\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (let path in this.pathWatchers) {\n\t\t\tlet watcher = this.pathWatchers[path];\n\t\t\twatcher.ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[path];\n\t\t}\n\n\t\tthis.pathWatchers = Object.create(null);\n\t}\n\n\tprotected _normalizeRoots(roots: IWatcherRequest[]): IWatcherRequest[] {\n\t\t// Normalizes a set of root paths by removing any root paths that are\n\t\t// sub-paths of other roots.\n\t\treturn roots.filter(r => roots.every(other => {\n\t\t\treturn !(r.path.length > other.path.length && isEqualOrParent(r.path, other.path));\n\t\t}));\n\t}\n\n\tprivate isPathIgnored(absolutePath: string, ignored: glob.ParsedPattern[]): boolean {\n\t\treturn ignored && ignored.some(i => i(absolutePath));\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'trace', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'error', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate debug(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'debug', message: `[File Watcher (nsfw)] ` + message });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/nsfwWatcherService';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\n\nconst server = new Server('watcher');\nconst service = new NsfwWatcherService();\nserver.registerChannel('watcher', ProxyChannel.fromService(service));\n"]}