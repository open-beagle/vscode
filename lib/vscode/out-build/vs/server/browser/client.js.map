{"version":3,"sources":["vs/server/browser/client.ts"],"names":[],"mappings":"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","file":"client.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["import * as path from 'vs/base/common/path';\nimport { Options } from 'vs/ipc';\nimport { localize } from 'vs/nls';\nimport { MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryChannelClient } from 'vs/server/common/telemetry';\nimport { getOptions } from 'vs/server/common/util';\nimport 'vs/workbench/contrib/localizations/browser/localizations.contribution';\nimport 'vs/workbench/services/localizations/browser/localizationsService';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\n/**\n * All client-side customization to VS Code should live in this file when\n * possible.\n */\n\nconst options = getOptions<Options>();\n\nclass TelemetryService extends TelemetryChannelClient {\n\tpublic constructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t) {\n\t\tsuper(remoteAgentService.getConnection()!.getChannel('telemetry'));\n\t}\n}\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', 'Telemetry'),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', 'Enable usage data and errors to be sent to a Microsoft online service.'),\n\t\t\t'default': !options.disableTelemetry,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n\nregisterSingleton(ITelemetryService, TelemetryService);\n\n/**\n * This is called by vs/workbench/browser/web.main.ts after the workbench has\n * been initialized so we can initialize our own client-side code.\n */\nexport const initialize = async (services: ServiceCollection): Promise<void> => {\n\tconst event = new CustomEvent('ide-ready');\n\twindow.dispatchEvent(event);\n\n\tif (parent) {\n\t\t// Tell the parent loading has completed.\n\t\tparent.postMessage({ event: 'loaded' }, '*');\n\n\t\t// Proxy or stop proxing events as requested by the parent.\n\t\tconst listeners = new Map<string, (event: Event) => void>();\n\t\twindow.addEventListener('message', (parentEvent) => {\n\t\t\tconst eventName = parentEvent.data.bind || parentEvent.data.unbind;\n\t\t\tif (eventName) {\n\t\t\t\tconst oldListener = listeners.get(eventName);\n\t\t\t\tif (oldListener) {\n\t\t\t\t\tdocument.removeEventListener(eventName, oldListener);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parentEvent.data.bind && parentEvent.data.prop) {\n\t\t\t\tconst listener = (event: Event) => {\n\t\t\t\t\tparent.postMessage({\n\t\t\t\t\t\tevent: parentEvent.data.event,\n\t\t\t\t\t\t[parentEvent.data.prop]: event[parentEvent.data.prop as keyof Event]\n\t\t\t\t\t}, window.location.origin);\n\t\t\t\t};\n\t\t\t\tlisteners.set(parentEvent.data.bind, listener);\n\t\t\t\tdocument.addEventListener(parentEvent.data.bind, listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (!window.isSecureContext) {\n\t\t(services.get(INotificationService) as INotificationService).notify({\n\t\t\tseverity: Severity.Warning,\n\t\t\tmessage: 'code-server is being accessed over an insecure domain. Web views, the clipboard, and other functionality will not work as expected.',\n\t\t\tactions: {\n\t\t\t\tprimary: [{\n\t\t\t\t\tid: 'understand',\n\t\t\t\t\tlabel: 'I understand',\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tclass: undefined,\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tchecked: true,\n\t\t\t\t\tdispose: () => undefined,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t}\n\t\t});\n\t}\n\n\tconst logService = (services.get(ILogService) as ILogService);\n\tconst storageService = (services.get(IStorageService) as IStorageService);\n\tconst updateCheckEndpoint = path.join(options.base, '/update/check');\n\tconst getUpdate = async (): Promise<void> => {\n\t\tlogService.debug('Checking for update...');\n\n\t\tconst response = await fetch(updateCheckEndpoint, {\n\t\t\theaders: { 'Accept': 'application/json' },\n\t\t});\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(response.statusText);\n\t\t}\n\t\tconst json = await response.json();\n\t\tif (json.error) {\n\t\t\tthrow new Error(json.error);\n\t\t}\n\t\tif (json.isLatest) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastNoti = storageService.getNumber('csLastUpdateNotification', StorageScope.GLOBAL);\n\t\tif (lastNoti) {\n\t\t\t// Only remind them again after 1 week.\n\t\t\tconst timeout = 1000*60*60*24*7;\n\t\t\tconst threshold = lastNoti + timeout;\n\t\t\tif (Date.now() < threshold) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tstorageService.store('csLastUpdateNotification', Date.now(), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t(services.get(INotificationService) as INotificationService).notify({\n\t\t\tseverity: Severity.Info,\n\t\t\tmessage: `[code-server v${json.latest}](https://github.com/cdr/code-server/releases/tag/v${json.latest}) has been released!`,\n\t\t});\n\t};\n\n\tconst updateLoop = (): void => {\n\t\tgetUpdate().catch((error) => {\n\t\t\tlogService.debug(`failed to check for update: ${error}`);\n\t\t}).finally(() => {\n\t\t\t// Check again every 6 hours.\n\t\t\tsetTimeout(updateLoop, 1000*60*60*6);\n\t\t});\n\t};\n\n\tif (!options.disableUpdateCheck) {\n\t\tupdateLoop();\n\t}\n\n\t// This will be used to set the background color while VS Code loads.\n\tconst theme = storageService.get('colorThemeData', StorageScope.GLOBAL);\n\tif (theme) {\n\t\tlocalStorage.setItem('colorThemeData', theme);\n\t}\n\n\t// Use to show or hide logout commands and menu options.\n\tconst contextKeyService = (services.get(IContextKeyService) as IContextKeyService);\n\tcontextKeyService.createKey('code-server.authed', options.authed);\n\n\t// Add a logout command.\n\tconst logoutEndpoint = path.join(options.base, '/logout') + `?base=${options.base}`;\n\tconst LOGOUT_COMMAND_ID = 'code-server.logout';\n\tCommandsRegistry.registerCommand(\n\t\tLOGOUT_COMMAND_ID,\n\t\t() => {\n\t\t\twindow.location.href = logoutEndpoint;\n\t\t},\n\t);\n\n\t// Add logout to command palette.\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\tcommand: {\n\t\t\tid: LOGOUT_COMMAND_ID,\n\t\t\ttitle: localize('logout', \"Log out\")\n\t\t},\n\t\twhen: ContextKeyExpr.has('code-server.authed')\n\t});\n\n\t// Add logout to the (web-only) home menu.\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHomeMenu, {\n\t\tcommand: {\n\t\t\tid: LOGOUT_COMMAND_ID,\n\t\t\ttitle: localize('logout', \"Log out\")\n\t\t},\n\t\twhen: ContextKeyExpr.has('code-server.authed')\n\t});\n};\n"]}