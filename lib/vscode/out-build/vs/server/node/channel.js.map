{"version":3,"file":"channel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/server/node/channel.ts"],"names":[],"mappings":"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","sourcesContent":["import { field, logger } from '@coder/logger';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as resources from 'vs/base/common/resources';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPtyService, IShellLaunchConfig, ITerminalEnvironment } from 'vs/platform/terminal/common/terminal';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { IEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport * as terminal from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { getMainProcessParentEnv } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic override dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tuseHostProxy: false,\n\t\t\tos: platform.OS,\n\t\t\tmarks: []\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\n// Reference: - ../../workbench/api/common/extHostDebugService.ts\nclass VariableResolverService extends AbstractVariableResolverService {\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (name: string): URI | undefined => {\n\t\t\t\tconst folder = args.workspaceFolders.find((f) => f.name === name);\n\t\t\t\treturn folder && URI.revive(folder.uri);\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn args.workspaceFolders.length;\n\t\t\t},\n\t\t\t// In ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts it\n\t\t\t// looks like there are `config:` entries which must be for this? Not sure\n\t\t\t// how/if the URI comes into play though.\n\t\t\tgetConfigurationValue: (_: URI, section: string): string | undefined => {\n\t\t\t\treturn args.resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_CWD']) || env['VSCODE_CWD'] || process.cwd();\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\t// Assuming that resolverEnv is just for use in the resolver and not for\n\t\t\t\t// the terminal itself.\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_EXEC_PATH']) || env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\t// This is just a guess; this is the only file-related thing we're sent\n\t\t\t// and none of these resolver methods seem to get called so I don't know\n\t\t\t// how to test.\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst resource = transformIncoming(remoteAuthority, args.activeFileResource);\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// See ../../editor/standalone/browser/simpleServices.ts;\n\t\t\t\t// `BaseConfigurationResolverService` calls `getUriLabel` from there.\n\t\t\t\tif (resource.scheme === 'file') {\n\t\t\t\t\treturn resource.fsPath;\n\t\t\t\t}\n\t\t\t\treturn resource.path;\n\t\t\t},\n\t\t\t// It looks like these are set here although they aren't on the types:\n\t\t\t// ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t}, undefined, Promise.resolve(env));\n\t}\n}\n\nexport class TerminalProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tpublic constructor (\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly ptyService: IPtyService,\n\t) {}\n\n\tpublic listen(_: RemoteAgentConnectionContext, event: string, args: any): Event<any> {\n\t\tlogger.trace('TerminalProviderChannel:listen', field('event', event), field('args', args));\n\n\t\tswitch (event) {\n\t\t\tcase '$onPtyHostExitEvent': return this.ptyService.onPtyHostExit || Event.None;\n\t\t\tcase '$onPtyHostStartEvent': return this.ptyService.onPtyHostStart || Event.None;\n\t\t\tcase '$onPtyHostUnresponsiveEvent': return this.ptyService.onPtyHostUnresponsive || Event.None;\n\t\t\tcase '$onPtyHostResponsiveEvent': return this.ptyService.onPtyHostResponsive || Event.None;\n\n\t\t\tcase '$onProcessDataEvent': return this.ptyService.onProcessData;\n\t\t\tcase '$onProcessExitEvent': return this.ptyService.onProcessExit;\n\t\t\tcase '$onProcessReadyEvent': return this.ptyService.onProcessReady;\n\t\t\tcase '$onProcessReplayEvent': return this.ptyService.onProcessReplay;\n\t\t\tcase '$onProcessTitleChangedEvent':  return this.ptyService.onProcessTitleChanged;\n\t\t\tcase '$onProcessShellTypeChangedEvent': return this.ptyService.onProcessShellTypeChanged;\n\t\t\tcase '$onProcessOverrideDimensionsEvent': return this.ptyService.onProcessOverrideDimensions;\n\t\t\tcase '$onProcessResolvedShellLaunchConfigEvent': return this.ptyService.onProcessResolvedShellLaunchConfig;\n\t\t\tcase '$onProcessOrphanQuestion': return this.ptyService.onProcessOrphanQuestion;\n\t\t\t\t// NOTE@asher: I think this must have something to do with running\n\t\t\t\t// commands on the terminal that will do things in VS Code but we\n\t\t\t\t// already have that functionality via a socket so I'm not sure what\n\t\t\t\t// this is for.\n\t\t\tcase '$onExecuteCommand': return Event.None;\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic call(context: RemoteAgentConnectionContext, command: string, args: any): Promise<any> {\n\t\tlogger.trace('TerminalProviderChannel:call', field('command', command), field('args', args));\n\n\t\tswitch (command) {\n\t\t\tcase '$restartPtyHost': return this.restartPtyHost();\n\t\t\tcase '$createProcess': return this.createProcess(context.remoteAuthority, args);\n\t\t\tcase '$attachToProcess': return this.ptyService.attachToProcess(args[0]);\n\t\t\tcase '$start': return this.ptyService.start(args[0]);\n\t\t\tcase '$input': return this.ptyService.input(args[0], args[1]);\n\t\t\tcase '$acknowledgeDataEvent': return this.ptyService.acknowledgeDataEvent(args[0], args[1]);\n\t\t\tcase '$shutdown': return this.ptyService.shutdown(args[0], args[1]);\n\t\t\tcase '$resize': return this.ptyService.resize(args[0], args[1], args[2]);\n\t\t\tcase '$getInitialCwd': return this.ptyService.getInitialCwd(args[0]);\n\t\t\tcase '$getCwd': return this.ptyService.getCwd(args[0]);\n\t\t\tcase '$sendCommandResult': return this.sendCommandResult(args[0], args[1], args[2], args[3]);\n\t\t\tcase '$orphanQuestionReply': return this.ptyService.orphanQuestionReply(args[0]);\n\t\t\tcase '$listProcesses': return this.ptyService.listProcesses();\n\t\t\tcase '$setTerminalLayoutInfo': return this.ptyService.setTerminalLayoutInfo(args);\n\t\t\tcase '$getTerminalLayoutInfo': return this.ptyService.getTerminalLayoutInfo(args);\n\t\t\tcase '$getShellEnvironment': return this.ptyService.getShellEnvironment();\n\t\t\tcase '$getDefaultSystemShell': return this.ptyService.getDefaultSystemShell(args[0]);\n\t\t\tcase '$reduceConnectionGraceTime': return this.ptyService.reduceConnectionGraceTime();\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\t// Nothing at the moment.\n\t}\n\n\tprivate async restartPtyHost(): Promise<void> {\n\t\tif (this.ptyService.restartPtyHost) {\n\t\t\treturn this.ptyService.restartPtyHost();\n\t\t}\n\t}\n\n\n\t// References: - ../../workbench/api/node/extHostTerminalService.ts\n\t//             - ../../workbench/contrib/terminal/browser/terminalProcessManager.ts\n\tprivate async createProcess(remoteAuthority: string, args: terminal.ICreateTerminalProcessArguments): Promise<terminal.ICreateTerminalProcessResult> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\t// TODO: Should we transform if it's a string as well? The incoming\n\t\t\t// transform only takes `UriComponents` so I suspect it's not necessary.\n\t\t\tcwd: typeof args.shellLaunchConfig.cwd !== 'string'\n\t\t\t\t? transformIncoming(remoteAuthority, args.shellLaunchConfig.cwd)\n\t\t\t\t: args.shellLaunchConfig.cwd,\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t};\n\n\t\tconst activeWorkspaceUri = transformIncoming(remoteAuthority, args.activeWorkspaceFolder?.uri);\n\t\tconst activeWorkspace = activeWorkspaceUri && args.activeWorkspaceFolder ? {\n\t\t\t...args.activeWorkspaceFolder,\n\t\t\turi: activeWorkspaceUri,\n\t\t\ttoResource: (relativePath: string) => resources.joinPath(activeWorkspaceUri, relativePath),\n\t\t} : undefined;\n\n\t\tconst resolverService = new VariableResolverService(remoteAuthority, args, process.env);\n\t\tconst resolver = terminalEnvironment.createVariableResolver(activeWorkspace, process.env, resolverService);\n\n\t\tshellLaunchConfig.cwd = terminalEnvironment.getCwd(\n\t\t\tshellLaunchConfig,\n\t\t\tos.homedir(),\n\t\t\tresolver,\n\t\t\tactiveWorkspaceUri,\n\t\t\targs.configuration['terminal.integrated.cwd'],\n\t\t\tthis.logService,\n\t\t);\n\n\t\t// Use instead of `terminal.integrated.env.${platform}` to make types work.\n\t\tconst getEnvFromConfig = (): ITerminalEnvironment => {\n\t\t\tif (platform.isWindows) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.windows'];\n\t\t\t} else if (platform.isMacintosh) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.osx'];\n\t\t\t}\n\t\t\treturn args.configuration['terminal.integrated.env.linux'];\n\t\t};\n\n\t\tconst getNonInheritedEnv = async (): Promise<platform.IProcessEnvironment> => {\n\t\t\tconst env = await getMainProcessParentEnv(process.env);\n\t\t\tenv.VSCODE_IPC_HOOK_CLI = process.env['VSCODE_IPC_HOOK_CLI']!;\n\t\t\treturn env;\n\t\t};\n\n\t\tconst env = terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tgetEnvFromConfig(),\n\t\t\tresolver,\n\t\t\tproduct.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\targs.configuration['terminal.integrated.inheritEnv'] !== false\n\t\t\t\t? process.env as platform.IProcessEnvironment\n\t\t\t\t: await getNonInheritedEnv()\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment.\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\t// They come in an array and in serialized format.\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>();\n\t\t\tfor (const [k, v] of args.envVariableCollections) {\n\t\t\t\tenvVariableCollections.set(k, { map: deserializeEnvironmentVariableCollection(v) });\n\t\t\t}\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tmergedCollection.applyToProcessEnvironment(env);\n\t\t}\n\n\t\tconst persistentTerminalId = await this.ptyService.createProcess(\n\t\t\tshellLaunchConfig,\n\t\t\tshellLaunchConfig.cwd,\n\t\t\targs.cols,\n\t\t\targs.rows,\n\t\t\tenv,\n\t\t\tprocess.env as platform.IProcessEnvironment, // Environment used for findExecutable\n\t\t\tfalse, // windowsEnableConpty\n\t\t\targs.shouldPersistTerminal,\n\t\t\targs.workspaceId,\n\t\t\targs.workspaceName,\n\t\t);\n\n\t\treturn {\n\t\t\tpersistentTerminalId,\n\t\t\tresolvedShellLaunchConfig: shellLaunchConfig,\n\t\t};\n\t}\n\n\tprivate async sendCommandResult(_id: number, _reqId: number, _isError: boolean, _payload: any): Promise<void> {\n\t\t// NOTE: Not required unless we implement the matching event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n}\n\nfunction transformIncoming(remoteAuthority: string, uri: UriComponents | undefined): URI | undefined {\n\tconst transformer = getUriTransformer(remoteAuthority);\n\treturn uri ? URI.revive(transformer.transformIncoming(uri)) : uri;\n}\n"]}