{"version":3,"sources":["vs/workbench/contrib/workspaces/browser/workspaces.contribution.ts"],"names":[],"mappings":"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","file":"workspaces.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { INeverShowAgainOptions, INotificationService, NeverShowAgainScope, Severity } from 'vs/platform/notification/common/notification';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\n\n/**\n * A workbench contribution that will look for `.code-workspace` files in the root of the\n * workspace folder and open a notification to suggest to open one of the workspaces.\n */\nexport class WorkspacesFinderContribution extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper();\n\n\t\tthis.findWorkspaces();\n\t}\n\n\tprivate async findWorkspaces(): Promise<void> {\n\t\tconst folder = this.contextService.getWorkspace().folders[0];\n\t\tif (!folder || this.contextService.getWorkbenchState() !== WorkbenchState.FOLDER) {\n\t\t\treturn; // require a single root folder\n\t\t}\n\n\t\tconst rootFileNames = (await this.fileService.resolve(folder.uri)).children?.map(child => child.name);\n\t\tif (Array.isArray(rootFileNames)) {\n\t\t\tconst workspaceFiles = rootFileNames.filter(hasWorkspaceFileExtension);\n\t\t\tif (workspaceFiles.length > 0) {\n\t\t\t\tthis.doHandleWorkspaceFiles(folder.uri, workspaceFiles);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate doHandleWorkspaceFiles(folder: URI, workspaces: string[]): void {\n\t\tconst neverShowAgain: INeverShowAgainOptions = { id: 'workspaces.dontPromptToOpen', scope: NeverShowAgainScope.WORKSPACE, isSecondary: true };\n\n\t\t// Prompt to open one workspace\n\t\tif (workspaces.length === 1) {\n\t\t\tconst workspaceFile = workspaces[0];\n\n\t\t\tthis.notificationService.prompt(Severity.Info, localize('workspaceFound', \"This folder contains a workspace file '{0}'. Do you want to open it? [Learn more]({1}) about workspace files.\", workspaceFile, 'https://go.microsoft.com/fwlink/?linkid=2025315'), [{\n\t\t\t\tlabel: localize('openWorkspace', \"Open Workspace\"),\n\t\t\t\trun: () => this.hostService.openWindow([{ workspaceUri: joinPath(folder, workspaceFile) }])\n\t\t\t}], { neverShowAgain });\n\t\t}\n\n\t\t// Prompt to select a workspace from many\n\t\telse if (workspaces.length > 1) {\n\t\t\tthis.notificationService.prompt(Severity.Info, localize('workspacesFound', \"This folder contains multiple workspace files. Do you want to open one? [Learn more]({0}) about workspace files.\", 'https://go.microsoft.com/fwlink/?linkid=2025315'), [{\n\t\t\t\tlabel: localize('selectWorkspace', \"Select Workspace\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.quickInputService.pick(\n\t\t\t\t\t\tworkspaces.map(workspace => ({ label: workspace } as IQuickPickItem)),\n\t\t\t\t\t\t{ placeHolder: localize('selectToOpen', \"Select a workspace to open\") }).then(pick => {\n\t\t\t\t\t\t\tif (pick) {\n\t\t\t\t\t\t\t\tthis.hostService.openWindow([{ workspaceUri: joinPath(folder, pick.label) }]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}], { neverShowAgain });\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WorkspacesFinderContribution, LifecyclePhase.Eventually);\n"]}