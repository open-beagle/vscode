{"version":3,"sources":["vs/workbench/contrib/files/common/workspaceWatcher.ts"],"names":[],"mappings":"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","file":"workspaceWatcher.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IFilesConfiguration, IFileService } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService, IWorkspaceFoldersChangeEvent } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { INotificationService, Severity, NeverShowAgainScope } from 'vs/platform/notification/common/notification';\nimport { localize } from 'vs/nls';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\n\nexport class WorkspaceWatcher extends Disposable {\n\n\tprivate readonly watches = new ResourceMap<IDisposable>();\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: FileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\tthis.refresh();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(e => this.onDidChangeWorkspaceFolders(e)));\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.onDidChangeWorkbenchState()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onDidChangeConfiguration(e)));\n\t\tthis._register(this.fileService.onError(error => this.onError(error)));\n\t}\n\n\tprivate onDidChangeWorkspaceFolders(e: IWorkspaceFoldersChangeEvent): void {\n\n\t\t// Removed workspace: Unwatch\n\t\tfor (const removed of e.removed) {\n\t\t\tthis.unwatchWorkspace(removed.uri);\n\t\t}\n\n\t\t// Added workspace: Watch\n\t\tfor (const added of e.added) {\n\t\t\tthis.watchWorkspace(added.uri);\n\t\t}\n\t}\n\n\tprivate onDidChangeWorkbenchState(): void {\n\t\tthis.refresh();\n\t}\n\n\tprivate onDidChangeConfiguration(e: IConfigurationChangeEvent): void {\n\t\tif (e.affectsConfiguration('files.watcherExclude')) {\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tprivate onError(error: Error): void {\n\t\tconst msg = error.toString();\n\n\t\t// Forward to unexpected error handler\n\t\tonUnexpectedError(msg);\n\n\t\t// Detect if we run < .NET Framework 4.5\n\t\tif (msg.indexOf('System.MissingMethodException') >= 0) {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize('netVersionError', \"The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('installNet', \"Download .NET Framework 4.5\"),\n\t\t\t\t\trun: () => this.openerService.open(URI.parse('https://go.microsoft.com/fwlink/?LinkId=786533'))\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tneverShowAgain: { id: 'ignoreNetVersionError', isSecondary: true, scope: NeverShowAgainScope.WORKSPACE }\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Detect if we run into ENOSPC issues\n\t\tif (msg.indexOf('ENOSPC') >= 0) {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize('enospcError', \"Unable to watch for file changes in this large workspace folder. Please follow the instructions link to resolve this issue.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('learnMore', \"Instructions\"),\n\t\t\t\t\trun: () => this.openerService.open(URI.parse('https://go.microsoft.com/fwlink/?linkid=867693'))\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tneverShowAgain: { id: 'ignoreEnospcError', isSecondary: true, scope: NeverShowAgainScope.WORKSPACE }\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate watchWorkspace(resource: URI) {\n\n\t\t// Compute the watcher exclude rules from configuration\n\t\tconst excludes: string[] = [];\n\t\tconst config = this.configurationService.getValue<IFilesConfiguration>({ resource });\n\t\tif (config.files?.watcherExclude) {\n\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\tif (config.files.watcherExclude[key] === true) {\n\t\t\t\t\texcludes.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Watch workspace\n\t\tconst disposable = this.fileService.watch(resource, { recursive: true, excludes });\n\t\tthis.watches.set(resource, disposable);\n\t}\n\n\tprivate unwatchWorkspace(resource: URI) {\n\t\tif (this.watches.has(resource)) {\n\t\t\tdispose(this.watches.get(resource));\n\t\t\tthis.watches.delete(resource);\n\t\t}\n\t}\n\n\tprivate refresh(): void {\n\n\t\t// Unwatch all first\n\t\tthis.unwatchWorkspaces();\n\n\t\t// Watch each workspace folder\n\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\tthis.watchWorkspace(folder.uri);\n\t\t}\n\t}\n\n\tprivate unwatchWorkspaces() {\n\t\tthis.watches.forEach(disposable => dispose(disposable));\n\t\tthis.watches.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.unwatchWorkspaces();\n\t}\n}\n"]}