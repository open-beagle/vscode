{"version":3,"file":"fileOnDiskProvider.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/files/test/browser/fileOnDiskProvider.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAShG,KAAK,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAE/C,IAAI,oBAA2C,CAAC;QAChD,IAAI,QAA6B,CAAC;QAElC,KAAK,CAAC,GAAG,EAAE;YACV,oBAAoB,GAAG,CAAA,GAAA,qDAA6B,CAAA,EAAE,CAAC;YACvD,QAAQ,GAAG,oBAAoB,CAAC,cAAc,CAAC,2CAAmB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;YACrC,MAAM,QAAQ,GAAG,oBAAoB,CAAC,cAAc,CAAC,+BAAuB,CAAC,CAAC;YAC9E,MAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAE7D,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oBAAoB,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE7I,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACnB,MAAM,CAAC,WAAW,CAAC,CAAA,GAAA,4BAAgB,CAAA,CAAC,OAAQ,CAAC,cAAc,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;YACjF,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { workbenchInstantiationService, TestServiceAccessor } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TextFileContentProvider } from 'vs/workbench/contrib/files/common/files';\nimport { snapshotToString } from 'vs/workbench/services/textfile/common/textfiles';\n\nsuite('Files - FileOnDiskContentProvider', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\ttest('provideTextContent', async () => {\n\t\tconst provider = instantiationService.createInstance(TextFileContentProvider);\n\t\tconst uri = URI.parse('testFileOnDiskContentProvider://foo');\n\n\t\tconst content = await provider.provideTextContent(uri.with({ scheme: 'conflictResolution', query: JSON.stringify({ scheme: uri.scheme }) }));\n\n\t\tassert.ok(content);\n\t\tassert.strictEqual(snapshotToString(content!.createSnapshot()), 'Hello Html');\n\t\tassert.strictEqual(accessor.fileService.getLastReadFileUri().scheme, uri.scheme);\n\t\tassert.strictEqual(accessor.fileService.getLastReadFileUri().path, uri.path);\n\t});\n});\n"]}