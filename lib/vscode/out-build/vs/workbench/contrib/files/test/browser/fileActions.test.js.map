{"version":3,"file":"fileActions.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/files/test/browser/fileActions.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { incrementFileName } from 'vs/workbench/contrib/files/browser/fileActions';\n\nsuite('Files - Increment file name simple', () => {\n\n\ttest('Increment file name without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy.js');\n\t});\n\n\ttest('Increment file name with suffix version', function () {\n\t\tconst name = 'test copy.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2.js');\n\t});\n\n\ttest('Increment file name with suffix version with leading zeros', function () {\n\t\tconst name = 'test copy 005.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6.js');\n\t});\n\n\ttest('Increment file name with suffix version, too big number', function () {\n\t\tconst name = 'test copy 9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 9007199254740992 copy.js');\n\t});\n\n\ttest('Increment file name with just version in name', function () {\n\t\tconst name = 'copy.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'copy copy.js');\n\t});\n\n\ttest('Increment file name with just version in name, v2', function () {\n\t\tconst name = 'copy 2.js';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'copy 2 copy.js');\n\t});\n\n\ttest('Increment file name without any extension or version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment file name without any extension or version, trailing dot', function () {\n\t\tconst name = 'test.';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy.');\n\t});\n\n\ttest('Increment file name without any extension or version, leading dot', function () {\n\t\tconst name = '.test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, '.test copy');\n\t});\n\n\ttest('Increment file name without any extension or version, leading dot v2', function () {\n\t\tconst name = '..test';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, '. copy.test');\n\t});\n\n\ttest('Increment file name without any extension but with suffix version', function () {\n\t\tconst name = 'test copy 5';\n\t\tconst result = incrementFileName(name, false, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6');\n\t});\n\n\ttest('Increment folder name without any version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment folder name with suffix version', function () {\n\t\tconst name = 'test copy';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2');\n\t});\n\n\ttest('Increment folder name with suffix version, leading zeros', function () {\n\t\tconst name = 'test copy 005';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 6');\n\t});\n\n\ttest('Increment folder name with suffix version, too big number', function () {\n\t\tconst name = 'test copy 9007199254740992';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 9007199254740992 copy');\n\t});\n\n\ttest('Increment folder name with just version in name', function () {\n\t\tconst name = 'copy';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'copy copy');\n\t});\n\n\ttest('Increment folder name with just version in name, v2', function () {\n\t\tconst name = 'copy 2';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'copy 2 copy');\n\t});\n\n\ttest('Increment folder name \"with extension\" but without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test.js copy');\n\t});\n\n\ttest('Increment folder name \"with extension\" and with suffix version', function () {\n\t\tconst name = 'test.js copy 5';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test.js copy 6');\n\t});\n\n\ttest('Increment file/folder name with suffix version, special case 1', function () {\n\t\tconst name = 'test copy 0';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy');\n\t});\n\n\ttest('Increment file/folder name with suffix version, special case 2', function () {\n\t\tconst name = 'test copy 1';\n\t\tconst result = incrementFileName(name, true, 'simple');\n\t\tassert.strictEqual(result, 'test copy 2');\n\t});\n\n});\n\nsuite('Files - Increment file name smart', () => {\n\n\ttest('Increment file name without any version', function () {\n\t\tconst name = 'test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.1.js');\n\t});\n\n\ttest('Increment folder name without any version', function () {\n\t\tconst name = 'test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.1');\n\t});\n\n\ttest('Increment file name with suffix version', function () {\n\t\tconst name = 'test.1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.2.js');\n\t});\n\n\ttest('Increment file name with suffix version with trailing zeros', function () {\n\t\tconst name = 'test.001.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.002.js');\n\t});\n\n\ttest('Increment file name with suffix version with trailing zeros, changing length', function () {\n\t\tconst name = 'test.009.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.010.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator', function () {\n\t\tconst name = 'test-1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-2.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator, trailing zeros', function () {\n\t\tconst name = 'test-001.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-002.js');\n\t});\n\n\ttest('Increment file name with suffix version with `-` as separator, trailing zeros, changnig length', function () {\n\t\tconst name = 'test-099.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test-100.js');\n\t});\n\n\ttest('Increment file name with suffix version with `_` as separator', function () {\n\t\tconst name = 'test_1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test_2.js');\n\t});\n\n\ttest('Increment folder name with suffix version', function () {\n\t\tconst name = 'test.1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.2');\n\t});\n\n\ttest('Increment folder name with suffix version, trailing zeros', function () {\n\t\tconst name = 'test.001';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.002');\n\t});\n\n\ttest('Increment folder name with suffix version with `-` as separator', function () {\n\t\tconst name = 'test-1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test-2');\n\t});\n\n\ttest('Increment folder name with suffix version with `_` as separator', function () {\n\t\tconst name = 'test_1';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test_2');\n\t});\n\n\ttest('Increment file name with suffix version, too big number', function () {\n\t\tconst name = 'test.9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'test.9007199254740992.1.js');\n\t});\n\n\ttest('Increment folder name with suffix version, too big number', function () {\n\t\tconst name = 'test.9007199254740992';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, 'test.9007199254740992.1');\n\t});\n\n\ttest('Increment file name with prefix version', function () {\n\t\tconst name = '1.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2.test.js');\n\t});\n\n\ttest('Increment file name with just version in name', function () {\n\t\tconst name = '1.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2.js');\n\t});\n\n\ttest('Increment file name with just version in name, too big number', function () {\n\t\tconst name = '9007199254740992.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.1.js');\n\t});\n\n\ttest('Increment file name with prefix version, trailing zeros', function () {\n\t\tconst name = '001.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '002.test.js');\n\t});\n\n\ttest('Increment file name with prefix version with `-` as separator', function () {\n\t\tconst name = '1-test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2-test.js');\n\t});\n\n\ttest('Increment file name with prefix version with `_` as separator', function () {\n\t\tconst name = '1_test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '2_test.js');\n\t});\n\n\ttest('Increment file name with prefix version, too big number', function () {\n\t\tconst name = '9007199254740992.test.js';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.test.1.js');\n\t});\n\n\ttest('Increment file name with just version and no extension', function () {\n\t\tconst name = '001004';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '001005');\n\t});\n\n\ttest('Increment file name with just version and no extension, too big number', function () {\n\t\tconst name = '9007199254740992';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.1');\n\t});\n\n\ttest('Increment file name with no extension and no version', function () {\n\t\tconst name = 'file';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file1');\n\t});\n\n\ttest('Increment file name with no extension', function () {\n\t\tconst name = 'file1';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file2');\n\t});\n\n\ttest('Increment file name with no extension, too big number', function () {\n\t\tconst name = 'file9007199254740992';\n\t\tconst result = incrementFileName(name, false, 'smart');\n\t\tassert.strictEqual(result, 'file9007199254740992.1');\n\t});\n\n\ttest('Increment folder name with prefix version', function () {\n\t\tconst name = '1.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '2.test');\n\t});\n\n\ttest('Increment folder name with prefix version, too big number', function () {\n\t\tconst name = '9007199254740992.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '9007199254740992.test.1');\n\t});\n\n\ttest('Increment folder name with prefix version, trailing zeros', function () {\n\t\tconst name = '001.test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '002.test');\n\t});\n\n\ttest('Increment folder name with prefix version  with `-` as separator', function () {\n\t\tconst name = '1-test';\n\t\tconst result = incrementFileName(name, true, 'smart');\n\t\tassert.strictEqual(result, '2-test');\n\t});\n\n});\n"]}