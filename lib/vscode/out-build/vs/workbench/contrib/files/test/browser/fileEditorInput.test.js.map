{"version":3,"file":"fileEditorInput.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/files/test/browser/fileEditorInput.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { toResource } from 'vs/base/test/common/utils';\nimport { FileEditorInput } from 'vs/workbench/contrib/files/common/editors/fileEditorInput';\nimport { workbenchInstantiationService, TestServiceAccessor, TestEditorService, getLastResolvedFileStat } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IEditorInputFactoryRegistry, Verbosity, EditorExtensions } from 'vs/workbench/common/editor';\nimport { EncodingMode, TextFileOperationError, TextFileOperationResult } from 'vs/workbench/services/textfile/common/textfiles';\nimport { FileOperationResult, FileOperationError } from 'vs/platform/files/common/files';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { timeout } from 'vs/base/common/async';\nimport { ModesRegistry, PLAINTEXT_MODE_ID } from 'vs/editor/common/modes/modesRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { BinaryEditorModel } from 'vs/workbench/common/editor/binaryEditorModel';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { FileEditorInputSerializer } from 'vs/workbench/contrib/files/browser/files';\n\nsuite('Files - FileEditorInput', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tfunction createFileInput(resource: URI, preferredResource?: URI, preferredMode?: string, preferredName?: string, preferredDescription?: string): FileEditorInput {\n\t\treturn instantiationService.createInstance(FileEditorInput, resource, preferredResource, preferredName, preferredDescription, undefined, preferredMode);\n\t}\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService({\n\t\t\teditorService: () => {\n\t\t\t\treturn new class extends TestEditorService {\n\t\t\t\t\toverride createEditorInput(input: IResourceEditorInput) {\n\t\t\t\t\t\treturn createFileInput(input.resource);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\ttest('Basics', async function () {\n\t\tlet input = createFileInput(toResource.call(this, '/foo/bar/file.js'));\n\t\tconst otherInput = createFileInput(toResource.call(this, 'foo/bar/otherfile.js'));\n\t\tconst otherInputSame = createFileInput(toResource.call(this, 'foo/bar/file.js'));\n\n\t\tassert(input.matches(input));\n\t\tassert(input.matches(otherInputSame));\n\t\tassert(!input.matches(otherInput));\n\t\tassert(!input.matches(null));\n\t\tassert.ok(input.getName());\n\t\tassert.ok(input.getDescription());\n\t\tassert.ok(input.getTitle(Verbosity.SHORT));\n\n\t\tassert.strictEqual('file.js', input.getName());\n\n\t\tassert.strictEqual(toResource.call(this, '/foo/bar/file.js').fsPath, input.resource.fsPath);\n\t\tassert(input.resource instanceof URI);\n\n\t\tinput = createFileInput(toResource.call(this, '/foo/bar.html'));\n\n\t\tconst inputToResolve: FileEditorInput = createFileInput(toResource.call(this, '/foo/bar/file.js'));\n\t\tconst sameOtherInput: FileEditorInput = createFileInput(toResource.call(this, '/foo/bar/file.js'));\n\n\t\tlet resolved = await inputToResolve.resolve();\n\t\tassert.ok(inputToResolve.isResolved());\n\n\t\tconst resolvedModelA = resolved;\n\t\tresolved = await inputToResolve.resolve();\n\t\tassert(resolvedModelA === resolved); // OK: Resolved Model cached globally per input\n\n\t\ttry {\n\t\t\tDisposableStore.DISABLE_DISPOSED_WARNING = true; // prevent unwanted warning output from occuring\n\n\t\t\tconst otherResolved = await sameOtherInput.resolve();\n\t\t\tassert(otherResolved === resolvedModelA); // OK: Resolved Model cached globally per input\n\t\t\tinputToResolve.dispose();\n\n\t\t\tresolved = await inputToResolve.resolve();\n\t\t\tassert(resolvedModelA === resolved); // Model is still the same because we had 2 clients\n\t\t\tinputToResolve.dispose();\n\t\t\tsameOtherInput.dispose();\n\t\t\tresolvedModelA.dispose();\n\n\t\t\tresolved = await inputToResolve.resolve();\n\t\t\tassert(resolvedModelA !== resolved); // Different instance, because input got disposed\n\n\t\t\tconst stat = getLastResolvedFileStat(resolved);\n\t\t\tresolved = await inputToResolve.resolve();\n\t\t\tawait timeout(0);\n\t\t\tassert(stat !== getLastResolvedFileStat(resolved)); // Different stat, because resolve always goes to the server for refresh\n\t\t} finally {\n\t\t\tDisposableStore.DISABLE_DISPOSED_WARNING = false;\n\t\t}\n\t});\n\n\ttest('preferred resource', function () {\n\t\tconst resource = toResource.call(this, '/foo/bar/updatefile.js');\n\t\tconst preferredResource = toResource.call(this, '/foo/bar/UPDATEFILE.js');\n\n\t\tconst inputWithoutPreferredResource = createFileInput(resource);\n\t\tassert.strictEqual(inputWithoutPreferredResource.resource.toString(), resource.toString());\n\t\tassert.strictEqual(inputWithoutPreferredResource.preferredResource.toString(), resource.toString());\n\n\t\tconst inputWithPreferredResource = createFileInput(resource, preferredResource);\n\n\t\tassert.strictEqual(inputWithPreferredResource.resource.toString(), resource.toString());\n\t\tassert.strictEqual(inputWithPreferredResource.preferredResource.toString(), preferredResource.toString());\n\n\t\tlet didChangeLabel = false;\n\t\tconst listener = inputWithPreferredResource.onDidChangeLabel(e => {\n\t\t\tdidChangeLabel = true;\n\t\t});\n\n\t\tassert.strictEqual(inputWithPreferredResource.getName(), 'UPDATEFILE.js');\n\n\t\tconst otherPreferredResource = toResource.call(this, '/FOO/BAR/updateFILE.js');\n\t\tinputWithPreferredResource.setPreferredResource(otherPreferredResource);\n\n\t\tassert.strictEqual(inputWithPreferredResource.resource.toString(), resource.toString());\n\t\tassert.strictEqual(inputWithPreferredResource.preferredResource.toString(), otherPreferredResource.toString());\n\t\tassert.strictEqual(inputWithPreferredResource.getName(), 'updateFILE.js');\n\t\tassert.strictEqual(didChangeLabel, true);\n\n\t\tlistener.dispose();\n\t});\n\n\ttest('preferred mode', async function () {\n\t\tconst mode = 'file-input-test';\n\t\tModesRegistry.registerLanguage({\n\t\t\tid: mode,\n\t\t});\n\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/file.js'), undefined, mode);\n\t\tassert.strictEqual(input.getPreferredMode(), mode);\n\n\t\tconst model = await input.resolve() as TextFileEditorModel;\n\t\tassert.strictEqual(model.textEditorModel!.getModeId(), mode);\n\n\t\tinput.setMode('text');\n\t\tassert.strictEqual(input.getPreferredMode(), 'text');\n\t\tassert.strictEqual(model.textEditorModel!.getModeId(), PLAINTEXT_MODE_ID);\n\n\t\tconst input2 = createFileInput(toResource.call(this, '/foo/bar/file.js'));\n\t\tinput2.setPreferredMode(mode);\n\n\t\tconst model2 = await input2.resolve() as TextFileEditorModel;\n\t\tassert.strictEqual(model2.textEditorModel!.getModeId(), mode);\n\t});\n\n\ttest('matches', function () {\n\t\tconst input1 = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\t\tconst input2 = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\t\tconst input3 = createFileInput(toResource.call(this, '/foo/bar/other.js'));\n\t\tconst input2Upper = createFileInput(toResource.call(this, '/foo/bar/UPDATEFILE.js'));\n\n\t\tassert.strictEqual(input1.matches(null), false);\n\t\tassert.strictEqual(input1.matches(input1), true);\n\t\tassert.strictEqual(input1.matches(input2), true);\n\t\tassert.strictEqual(input1.matches(input3), false);\n\n\t\tassert.strictEqual(input1.matches(input2Upper), false);\n\t});\n\n\ttest('getEncoding/setEncoding', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\tawait input.setEncoding('utf16', EncodingMode.Encode);\n\t\tassert.strictEqual(input.getEncoding(), 'utf16');\n\n\t\tconst resolved = await input.resolve() as TextFileEditorModel;\n\t\tassert.strictEqual(input.getEncoding(), resolved.getEncoding());\n\t\tresolved.dispose();\n\t});\n\n\ttest('save', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\tconst resolved = await input.resolve() as TextFileEditorModel;\n\t\tresolved.textEditorModel!.setValue('changed');\n\t\tassert.ok(input.isDirty());\n\n\t\tawait input.save(0);\n\t\tassert.ok(!input.isDirty());\n\t\tresolved.dispose();\n\t});\n\n\ttest('revert', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\tconst resolved = await input.resolve() as TextFileEditorModel;\n\t\tresolved.textEditorModel!.setValue('changed');\n\t\tassert.ok(input.isDirty());\n\n\t\tawait input.revert(0);\n\t\tassert.ok(!input.isDirty());\n\n\t\tinput.dispose();\n\t\tassert.ok(input.isDisposed());\n\n\t\tresolved.dispose();\n\t});\n\n\ttest('resolve handles binary files', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\taccessor.textFileService.setReadStreamErrorOnce(new TextFileOperationError('error', TextFileOperationResult.FILE_IS_BINARY));\n\n\t\tconst resolved = await input.resolve();\n\t\tassert.ok(resolved);\n\t\tresolved.dispose();\n\t});\n\n\ttest('resolve handles too large files', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\taccessor.textFileService.setReadStreamErrorOnce(new FileOperationError('error', FileOperationResult.FILE_TOO_LARGE));\n\n\t\tconst resolved = await input.resolve();\n\t\tassert.ok(resolved);\n\t\tresolved.dispose();\n\t});\n\n\ttest('attaches to model when created and reports dirty', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\tlet listenerCount = 0;\n\t\tconst listener = input.onDidChangeDirty(() => {\n\t\t\tlistenerCount++;\n\t\t});\n\n\t\t// instead of going through file input resolve method\n\t\t// we resolve the model directly through the service\n\t\tconst model = await accessor.textFileService.files.resolve(input.resource);\n\t\tmodel.textEditorModel?.setValue('hello world');\n\n\t\tassert.strictEqual(listenerCount, 1);\n\t\tassert.ok(input.isDirty());\n\n\t\tinput.dispose();\n\t\tlistener.dispose();\n\t});\n\n\ttest('force open text/binary', async function () {\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\t\tinput.setForceOpenAsBinary();\n\n\t\tlet resolved = await input.resolve();\n\t\tassert.ok(resolved instanceof BinaryEditorModel);\n\n\t\tinput.setForceOpenAsText();\n\n\t\tresolved = await input.resolve();\n\t\tassert.ok(resolved instanceof TextFileEditorModel);\n\n\t\tresolved.dispose();\n\t});\n\n\ttest('file editor input serializer', async function () {\n\t\tinstantiationService.invokeFunction(accessor => Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).start(accessor));\n\n\t\tconst input = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'));\n\n\t\tconst disposable = Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer('workbench.editors.files.fileEditorInput', FileEditorInputSerializer);\n\n\t\tconst editorSerializer = Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).getEditorInputSerializer(input.typeId);\n\t\tif (!editorSerializer) {\n\t\t\tassert.fail('File Editor Input Serializer missing');\n\t\t}\n\n\t\tassert.strictEqual(editorSerializer.canSerialize(input), true);\n\n\t\tconst inputSerialized = editorSerializer.serialize(input);\n\t\tif (!inputSerialized) {\n\t\t\tassert.fail('Unexpected serialized file input');\n\t\t}\n\n\t\tconst inputDeserialized = editorSerializer.deserialize(instantiationService, inputSerialized);\n\t\tassert.strictEqual(input.matches(inputDeserialized), true);\n\n\t\tconst preferredResource = toResource.call(this, '/foo/bar/UPDATEfile.js');\n\t\tconst inputWithPreferredResource = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'), preferredResource);\n\n\t\tconst inputWithPreferredResourceSerialized = editorSerializer.serialize(inputWithPreferredResource);\n\t\tif (!inputWithPreferredResourceSerialized) {\n\t\t\tassert.fail('Unexpected serialized file input');\n\t\t}\n\n\t\tconst inputWithPreferredResourceDeserialized = editorSerializer.deserialize(instantiationService, inputWithPreferredResourceSerialized) as FileEditorInput;\n\t\tassert.strictEqual(inputWithPreferredResource.resource.toString(), inputWithPreferredResourceDeserialized.resource.toString());\n\t\tassert.strictEqual(inputWithPreferredResource.preferredResource.toString(), inputWithPreferredResourceDeserialized.preferredResource.toString());\n\n\t\tdisposable.dispose();\n\t});\n\n\ttest('preferred name/description', async function () {\n\n\t\t// Works with custom file input\n\t\tconst customFileInput = createFileInput(toResource.call(this, '/foo/bar/updatefile.js').with({ scheme: 'test-custom' }), undefined, undefined, 'My Name', 'My Description');\n\n\t\tlet didChangeLabelCounter = 0;\n\t\tcustomFileInput.onDidChangeLabel(() => {\n\t\t\tdidChangeLabelCounter++;\n\t\t});\n\n\t\tassert.strictEqual(customFileInput.getName(), 'My Name');\n\t\tassert.strictEqual(customFileInput.getDescription(), 'My Description');\n\n\t\tcustomFileInput.setPreferredName('My Name 2');\n\t\tcustomFileInput.setPreferredDescription('My Description 2');\n\n\t\tassert.strictEqual(customFileInput.getName(), 'My Name 2');\n\t\tassert.strictEqual(customFileInput.getDescription(), 'My Description 2');\n\n\t\tassert.strictEqual(didChangeLabelCounter, 2);\n\n\t\tcustomFileInput.dispose();\n\n\t\t// Disallowed with local file input\n\t\tconst fileInput = createFileInput(toResource.call(this, '/foo/bar/updatefile.js'), undefined, undefined, 'My Name', 'My Description');\n\n\t\tdidChangeLabelCounter = 0;\n\t\tfileInput.onDidChangeLabel(() => {\n\t\t\tdidChangeLabelCounter++;\n\t\t});\n\n\t\tassert.notStrictEqual(fileInput.getName(), 'My Name');\n\t\tassert.notStrictEqual(fileInput.getDescription(), 'My Description');\n\n\t\tfileInput.setPreferredName('My Name 2');\n\t\tfileInput.setPreferredDescription('My Description 2');\n\n\t\tassert.notStrictEqual(fileInput.getName(), 'My Name 2');\n\t\tassert.notStrictEqual(fileInput.getDescription(), 'My Description 2');\n\n\t\tassert.strictEqual(didChangeLabelCounter, 0);\n\n\t\tfileInput.dispose();\n\t});\n});\n"]}