{"version":3,"file":"fileCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/files/electron-sandbox/fileCommands.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,WAAW;IAEX,SAAgB,mBAAmB,CAAC,SAAgB,EAAE,iBAAqC,EAAE,uBAAiD;QAC7I,IAAI,SAAS,CAAC,MAAM,EAAE;YACrB,CAAA,GAAA,gBAAQ,CAAA,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE;gBACtC,IAAI,CAAC,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,EAAE;oBAC/D,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,uBAAuB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE;YACjE,MAAM,GAAG,GAAG,uBAAuB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAClE,IAAI,GAAG,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,EAAE;gBAChC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aAC/C;SACD;IACF,CAAC;IAbD,kDAaC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { sequence } from 'vs/base/common/async';\nimport { Schemas } from 'vs/base/common/network';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\n\n// Commands\n\nexport function revealResourcesInOS(resources: URI[], nativeHostService: INativeHostService, workspaceContextService: IWorkspaceContextService): void {\n\tif (resources.length) {\n\t\tsequence(resources.map(r => async () => {\n\t\t\tif (r.scheme === Schemas.file || r.scheme === Schemas.userData) {\n\t\t\t\tnativeHostService.showItemInFolder(r.fsPath);\n\t\t\t}\n\t\t}));\n\t} else if (workspaceContextService.getWorkspace().folders.length) {\n\t\tconst uri = workspaceContextService.getWorkspace().folders[0].uri;\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\tnativeHostService.showItemInFolder(uri.fsPath);\n\t\t}\n\t}\n}\n"]}