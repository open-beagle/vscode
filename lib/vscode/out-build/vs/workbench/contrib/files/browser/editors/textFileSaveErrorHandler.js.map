{"version":3,"sources":["vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler.ts"],"names":[],"mappings":"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","file":"textFileSaveErrorHandler.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { basename, isEqual } from 'vs/base/common/resources';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport { ITextFileService, ISaveErrorHandler, ITextFileEditorModel, ITextFileSaveAsOptions } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { TextFileContentProvider } from 'vs/workbench/contrib/files/common/files';\nimport { FileEditorInput } from 'vs/workbench/contrib/files/common/editors/fileEditorInput';\nimport { SAVE_FILE_AS_LABEL } from 'vs/workbench/contrib/files/browser/fileCommands';\nimport { INotificationService, INotificationHandle, INotificationActions, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Event } from 'vs/base/common/event';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Schemas } from 'vs/base/common/network';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IEditorIdentifier, SaveReason } from 'vs/workbench/common/editor';\nimport { hash } from 'vs/base/common/hash';\n\nexport const CONFLICT_RESOLUTION_CONTEXT = 'saveConflictResolutionContext';\nexport const CONFLICT_RESOLUTION_SCHEME = 'conflictResolution';\n\nconst LEARN_MORE_DIRTY_WRITE_IGNORE_KEY = 'learnMoreDirtyWriteError';\n\nconst conflictEditorHelp = localize('userGuide', \"Use the actions in the editor tool bar to either undo your changes or overwrite the content of the file with your changes.\");\n\n// A handler for text file save error happening with conflict resolution actions\nexport class TextFileSaveErrorHandler extends Disposable implements ISaveErrorHandler, IWorkbenchContribution {\n\n\tprivate readonly messages = new ResourceMap<INotificationHandle>();\n\tprivate readonly conflictResolutionContext = new RawContextKey<boolean>(CONFLICT_RESOLUTION_CONTEXT, false, true).bindTo(this.contextKeyService);\n\tprivate activeConflictResolutionResource: URI | undefined = undefined;\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tconst provider = this._register(instantiationService.createInstance(TextFileContentProvider));\n\t\tthis._register(textModelService.registerTextModelContentProvider(CONFLICT_RESOLUTION_SCHEME, provider));\n\n\t\t// Set as save error handler to service for text files\n\t\tthis.textFileService.files.saveErrorHandler = this;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.textFileService.files.onDidSave(event => this.onFileSavedOrReverted(event.model.resource)));\n\t\tthis._register(this.textFileService.files.onDidRevert(model => this.onFileSavedOrReverted(model.resource)));\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.onActiveEditorChanged()));\n\t}\n\n\tprivate onActiveEditorChanged(): void {\n\t\tlet isActiveEditorSaveConflictResolution = false;\n\t\tlet activeConflictResolutionResource: URI | undefined;\n\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tif (activeInput instanceof DiffEditorInput) {\n\t\t\tconst resource = activeInput.originalInput.resource;\n\t\t\tif (resource?.scheme === CONFLICT_RESOLUTION_SCHEME) {\n\t\t\t\tisActiveEditorSaveConflictResolution = true;\n\t\t\t\tactiveConflictResolutionResource = activeInput.modifiedInput.resource;\n\t\t\t}\n\t\t}\n\n\t\tthis.conflictResolutionContext.set(isActiveEditorSaveConflictResolution);\n\t\tthis.activeConflictResolutionResource = activeConflictResolutionResource;\n\t}\n\n\tprivate onFileSavedOrReverted(resource: URI): void {\n\t\tconst messageHandle = this.messages.get(resource);\n\t\tif (messageHandle) {\n\t\t\tmessageHandle.close();\n\t\t\tthis.messages.delete(resource);\n\t\t}\n\t}\n\n\tonSaveError(error: unknown, model: ITextFileEditorModel): void {\n\t\tconst fileOperationError = error as FileOperationError;\n\t\tconst resource = model.resource;\n\n\t\tlet message: string;\n\t\tconst primaryActions: IAction[] = [];\n\t\tconst secondaryActions: IAction[] = [];\n\n\t\t// Dirty write prevention\n\t\tif (fileOperationError.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n\n\t\t\t// If the user tried to save from the opened conflict editor, show its message again\n\t\t\tif (this.activeConflictResolutionResource && isEqual(this.activeConflictResolutionResource, model.resource)) {\n\t\t\t\tif (this.storageService.getBoolean(LEARN_MORE_DIRTY_WRITE_IGNORE_KEY, StorageScope.GLOBAL)) {\n\t\t\t\t\treturn; // return if this message is ignored\n\t\t\t\t}\n\n\t\t\t\tmessage = conflictEditorHelp;\n\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(ResolveConflictLearnMoreAction));\n\t\t\t\tsecondaryActions.push(this.instantiationService.createInstance(DoNotShowResolveConflictLearnMoreAction));\n\t\t\t}\n\n\t\t\t// Otherwise show the message that will lead the user into the save conflict editor.\n\t\t\telse {\n\t\t\t\tmessage = localize('staleSaveError', \"Failed to save '{0}': The content of the file is newer. Please compare your version with the file contents or overwrite the content of the file with your changes.\", basename(resource));\n\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(ResolveSaveConflictAction, model));\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(SaveModelIgnoreModifiedSinceAction, model));\n\n\t\t\t\tsecondaryActions.push(this.instantiationService.createInstance(ConfigureSaveConflictAction));\n\t\t\t}\n\t\t}\n\n\t\t// Any other save error\n\t\telse {\n\t\t\tconst isWriteLocked = fileOperationError.fileOperationResult === FileOperationResult.FILE_WRITE_LOCKED;\n\t\t\tconst triedToUnlock = isWriteLocked && fileOperationError.options?.unlock;\n\t\t\tconst isPermissionDenied = fileOperationError.fileOperationResult === FileOperationResult.FILE_PERMISSION_DENIED;\n\t\t\tconst canSaveElevated = resource.scheme === Schemas.file; // currently only supported for local schemes (https://github.com/microsoft/vscode/issues/48659)\n\n\t\t\t// Save Elevated\n\t\t\tif (canSaveElevated && (isPermissionDenied || triedToUnlock)) {\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(SaveModelElevatedAction, model, !!triedToUnlock));\n\t\t\t}\n\n\t\t\t// Unlock\n\t\t\telse if (isWriteLocked) {\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(UnlockModelAction, model));\n\t\t\t}\n\n\t\t\t// Retry\n\t\t\telse {\n\t\t\t\tprimaryActions.push(this.instantiationService.createInstance(RetrySaveModelAction, model));\n\t\t\t}\n\n\t\t\t// Save As\n\t\t\tprimaryActions.push(this.instantiationService.createInstance(SaveModelAsAction, model));\n\n\t\t\t// Discard\n\t\t\tprimaryActions.push(this.instantiationService.createInstance(DiscardModelAction, model));\n\n\t\t\t// Message\n\t\t\tif (isWriteLocked) {\n\t\t\t\tif (triedToUnlock && canSaveElevated) {\n\t\t\t\t\tmessage = isWindows ? localize('readonlySaveErrorAdmin', \"Failed to save '{0}': File is read-only. Select 'Overwrite as Admin' to retry as administrator.\", basename(resource)) : localize('readonlySaveErrorSudo', \"Failed to save '{0}': File is read-only. Select 'Overwrite as Sudo' to retry as superuser.\", basename(resource));\n\t\t\t\t} else {\n\t\t\t\t\tmessage = localize('readonlySaveError', \"Failed to save '{0}': File is read-only. Select 'Overwrite' to attempt to make it writeable.\", basename(resource));\n\t\t\t\t}\n\t\t\t} else if (canSaveElevated && isPermissionDenied) {\n\t\t\t\tmessage = isWindows ? localize('permissionDeniedSaveError', \"Failed to save '{0}': Insufficient permissions. Select 'Retry as Admin' to retry as administrator.\", basename(resource)) : localize('permissionDeniedSaveErrorSudo', \"Failed to save '{0}': Insufficient permissions. Select 'Retry as Sudo' to retry as superuser.\", basename(resource));\n\t\t\t} else {\n\t\t\t\tmessage = localize({ key: 'genericSaveError', comment: ['{0} is the resource that failed to save and {1} the error message'] }, \"Failed to save '{0}': {1}\", basename(resource), toErrorMessage(error, false));\n\t\t\t}\n\t\t}\n\n\t\t// Show message and keep function to hide in case the file gets saved/reverted\n\t\tconst actions: INotificationActions = { primary: primaryActions, secondary: secondaryActions };\n\t\tconst handle = this.notificationService.notify({\n\t\t\tid: `${hash(model.resource.toString())}`, // unique per model (https://github.com/microsoft/vscode/issues/121539)\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage,\n\t\t\tactions\n\t\t});\n\t\tEvent.once(handle.onDidClose)(() => { dispose(primaryActions); dispose(secondaryActions); });\n\t\tthis.messages.set(model.resource, handle);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.messages.clear();\n\t}\n}\n\nconst pendingResolveSaveConflictMessages: INotificationHandle[] = [];\nfunction clearPendingResolveSaveConflictMessages(): void {\n\twhile (pendingResolveSaveConflictMessages.length > 0) {\n\t\tconst item = pendingResolveSaveConflictMessages.pop();\n\t\tif (item) {\n\t\t\titem.close();\n\t\t}\n\t}\n}\n\nclass ResolveConflictLearnMoreAction extends Action {\n\n\tconstructor(\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflictLearnMore', localize('learnMore', \"Learn More\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.openerService.open(URI.parse('https://go.microsoft.com/fwlink/?linkid=868264'));\n\t}\n}\n\nclass DoNotShowResolveConflictLearnMoreAction extends Action {\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflictLearnMoreDoNotShowAgain', localize('dontShowAgain', \"Don't Show Again\"));\n\t}\n\n\toverride async run(notification: IDisposable): Promise<void> {\n\t\tthis.storageService.store(LEARN_MORE_DIRTY_WRITE_IGNORE_KEY, true, StorageScope.GLOBAL, StorageTarget.USER);\n\n\t\t// Hide notification\n\t\tnotification.dispose();\n\t}\n}\n\nclass ResolveSaveConflictAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper('workbench.files.action.resolveConflict', localize('compareChanges', \"Compare\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tconst resource = this.model.resource;\n\t\t\tconst name = basename(resource);\n\t\t\tconst editorLabel = localize('saveConflictDiffLabel', \"{0} (in file) ↔ {1} (in {2}) - Resolve save conflict\", name, name, this.productService.nameLong);\n\n\t\t\tawait TextFileContentProvider.open(resource, CONFLICT_RESOLUTION_SCHEME, editorLabel, this.editorService, { pinned: true });\n\n\t\t\t// Show additional help how to resolve the save conflict\n\t\t\tconst actions = { primary: [this.instantiationService.createInstance(ResolveConflictLearnMoreAction)] };\n\t\t\tconst handle = this.notificationService.notify({\n\t\t\t\tid: `${hash(resource.toString())}`, // unique per model\n\t\t\t\tseverity: Severity.Info,\n\t\t\t\tmessage: conflictEditorHelp,\n\t\t\t\tactions,\n\t\t\t\tneverShowAgain: { id: LEARN_MORE_DIRTY_WRITE_IGNORE_KEY, isSecondary: true }\n\t\t\t});\n\t\t\tEvent.once(handle.onDidClose)(() => dispose(actions.primary));\n\t\t\tpendingResolveSaveConflictMessages.push(handle);\n\t\t}\n\t}\n}\n\nclass SaveModelElevatedAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\tprivate triedToUnlock: boolean\n\t) {\n\t\tsuper('workbench.files.action.saveModelElevated', triedToUnlock ? isWindows ? localize('overwriteElevated', \"Overwrite as Admin...\") : localize('overwriteElevatedSudo', \"Overwrite as Sudo...\") : isWindows ? localize('saveElevated', \"Retry as Admin...\") : localize('saveElevatedSudo', \"Retry as Sudo...\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({\n\t\t\t\twriteElevated: true,\n\t\t\t\twriteUnlock: this.triedToUnlock,\n\t\t\t\treason: SaveReason.EXPLICIT\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RetrySaveModelAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel\n\t) {\n\t\tsuper('workbench.files.action.saveModel', localize('retry', \"Retry\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({ reason: SaveReason.EXPLICIT });\n\t\t}\n\t}\n}\n\nclass DiscardModelAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel\n\t) {\n\t\tsuper('workbench.files.action.discardModel', localize('discard', \"Discard\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.revert();\n\t\t}\n\t}\n}\n\nclass SaveModelAsAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel,\n\t\t@IEditorService private editorService: IEditorService\n\t) {\n\t\tsuper('workbench.files.action.saveModelAs', SAVE_FILE_AS_LABEL);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tconst editor = this.findEditor();\n\t\t\tif (editor) {\n\t\t\t\tawait this.editorService.save(editor, { saveAs: true, reason: SaveReason.EXPLICIT });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findEditor(): IEditorIdentifier | undefined {\n\t\tlet preferredMatchingEditor: IEditorIdentifier | undefined;\n\n\t\tconst editors = this.editorService.findEditors(this.model.resource);\n\t\tfor (const identifier of editors) {\n\t\t\tif (identifier.editor instanceof FileEditorInput) {\n\t\t\t\t// We prefer a `FileEditorInput` for \"Save As\", but it is possible\n\t\t\t\t// that a custom editor is leveraging the text file model and as\n\t\t\t\t// such we need to fallback to any other editor having the resource\n\t\t\t\t// opened for running the save.\n\t\t\t\tpreferredMatchingEditor = identifier;\n\t\t\t\tbreak;\n\t\t\t} else if (!preferredMatchingEditor) {\n\t\t\t\tpreferredMatchingEditor = identifier;\n\t\t\t}\n\t\t}\n\n\t\treturn preferredMatchingEditor;\n\t}\n}\n\nclass UnlockModelAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel\n\t) {\n\t\tsuper('workbench.files.action.unlock', localize('overwrite', \"Overwrite\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({ writeUnlock: true, reason: SaveReason.EXPLICIT });\n\t\t}\n\t}\n}\n\nclass SaveModelIgnoreModifiedSinceAction extends Action {\n\n\tconstructor(\n\t\tprivate model: ITextFileEditorModel\n\t) {\n\t\tsuper('workbench.files.action.saveIgnoreModifiedSince', localize('overwrite', \"Overwrite\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this.model.isDisposed()) {\n\t\t\tawait this.model.save({ ignoreModifiedSince: true, reason: SaveReason.EXPLICIT });\n\t\t}\n\t}\n}\n\nclass ConfigureSaveConflictAction extends Action {\n\n\tconstructor(\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService\n\t) {\n\t\tsuper('workbench.files.action.configureSaveConflict', localize('configure', \"Configure\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.preferencesService.openSettings(undefined, 'files.saveConflictResolution');\n\t}\n}\n\nexport const acceptLocalChangesCommand = (accessor: ServicesAccessor, resource: URI) => {\n\treturn acceptOrRevertLocalChangesCommand(accessor, resource, true);\n};\n\nexport const revertLocalChangesCommand = (accessor: ServicesAccessor, resource: URI) => {\n\treturn acceptOrRevertLocalChangesCommand(accessor, resource, false);\n};\n\nasync function acceptOrRevertLocalChangesCommand(accessor: ServicesAccessor, resource: URI, accept: boolean) {\n\tconst editorService = accessor.get(IEditorService);\n\n\tconst editorPane = editorService.activeEditorPane;\n\tif (!editorPane) {\n\t\treturn;\n\t}\n\n\tconst editor = editorPane.input;\n\tconst group = editorPane.group;\n\n\t// Hide any previously shown message about how to use these actions\n\tclearPendingResolveSaveConflictMessages();\n\n\t// Accept or revert\n\tif (accept) {\n\t\tconst options: ITextFileSaveAsOptions = { ignoreModifiedSince: true, reason: SaveReason.EXPLICIT };\n\t\tawait editorService.save({ editor, groupId: group.id }, options);\n\t} else {\n\t\tawait editorService.revert({ editor, groupId: group.id });\n\t}\n\n\t// Reopen original editor\n\tawait editorService.openEditor({ resource }, group);\n\n\t// Clean up\n\treturn group.closeEditor(editor);\n}\n"]}