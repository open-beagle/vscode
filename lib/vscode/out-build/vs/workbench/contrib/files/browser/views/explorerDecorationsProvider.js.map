{"version":3,"sources":["vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAahG,SAAgB,kBAAkB,CAAC,QAAsB;QACxD,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;YACxC,OAAO;gBACN,OAAO,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAe,EAAE,IAAoC,CAAC;gBACxE,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,yCAAyB;aAChC,CAAC;SACF;QACD,IAAI,QAAQ,CAAC,cAAc,EAAE;YAC5B,OAAO;gBACN,OAAO,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAe,EAAE,IAAe,CAAC;gBACnD,MAAM,EAAE,QAAQ;aAChB,CAAC;SACF;QACD,IAAI,QAAQ,CAAC,SAAS,EAAE;YACvB,OAAO;gBACN,OAAO,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAS,EAAE,IAAmB,CAAC;gBACjD,MAAM,EAAE,GAAG;aACX,CAAC;SACF;QACD,IAAI,QAAQ,CAAC,UAAU,EAAE;YACxB,OAAO;gBACN,KAAK,EAAE,0CAA0B;aACjC,CAAC;SACF;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IA3BD,gDA2BC;IAED,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;QAKvC,YAC2B,eAAiC,EACjC,cAAwC;YADxC,oBAAe,GAAf,eAAe,CAAkB;YALnD,UAAK,GAAW,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAO,EAAE,IAAU,CAAC,CAAC;YACtC,iBAAY,GAAG,IAAI,eAAO,EAAS,CAAC;YACpC,cAAS,GAAG,IAAI,2BAAe,EAAE,CAAC;YAMlD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC,CAAC,EAAE;gBACjE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,yCAAwB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;QAED,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAChC,CAAC;QAED,kBAAkB,CAAC,QAAa;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QAED,OAAO;YACN,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;KACD,CAAA;IAlCY,2BAA2B;QAMrC,WAAA,wBAAgB,CAAA;QAChB,WAAA,oCAAwB,CAAA;OAPd,2BAA2B,CAkCvC;IAlCY,kEAA2B","file":"explorerDecorationsProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IDecorationsProvider, IDecorationData } from 'vs/workbench/services/decorations/browser/decorations';\nimport { listInvalidItemForeground, listDeemphasizedForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { explorerRootErrorEmitter } from 'vs/workbench/contrib/files/browser/views/explorerViewer';\nimport { ExplorerItem } from 'vs/workbench/contrib/files/common/explorerModel';\nimport { IExplorerService } from 'vs/workbench/contrib/files/browser/files';\n\nexport function provideDecorations(fileStat: ExplorerItem): IDecorationData | undefined {\n\tif (fileStat.isRoot && fileStat.isError) {\n\t\treturn {\n\t\t\ttooltip: localize('canNotResolve', \"Unable to resolve workspace folder\"),\n\t\t\tletter: '!',\n\t\t\tcolor: listInvalidItemForeground,\n\t\t};\n\t}\n\tif (fileStat.isSymbolicLink) {\n\t\treturn {\n\t\t\ttooltip: localize('symbolicLlink', \"Symbolic Link\"),\n\t\t\tletter: '\\u2937'\n\t\t};\n\t}\n\tif (fileStat.isUnknown) {\n\t\treturn {\n\t\t\ttooltip: localize('unknown', \"Unknown File Type\"),\n\t\t\tletter: '?'\n\t\t};\n\t}\n\tif (fileStat.isExcluded) {\n\t\treturn {\n\t\t\tcolor: listDeemphasizedForeground,\n\t\t};\n\t}\n\n\treturn undefined;\n}\n\nexport class ExplorerDecorationsProvider implements IDecorationsProvider {\n\treadonly label: string = localize('label', \"Explorer\");\n\tprivate readonly _onDidChange = new Emitter<URI[]>();\n\tprivate readonly toDispose = new DisposableStore();\n\n\tconstructor(\n\t\t@IExplorerService private explorerService: IExplorerService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tthis.toDispose.add(this._onDidChange);\n\t\tthis.toDispose.add(contextService.onDidChangeWorkspaceFolders(e => {\n\t\t\tthis._onDidChange.fire(e.changed.concat(e.added).map(wf => wf.uri));\n\t\t}));\n\t\tthis.toDispose.add(explorerRootErrorEmitter.event((resource => {\n\t\t\tthis._onDidChange.fire([resource]);\n\t\t})));\n\t}\n\n\tget onDidChange(): Event<URI[]> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprovideDecorations(resource: URI): IDecorationData | undefined {\n\t\tconst fileStat = this.explorerService.findClosest(resource);\n\t\tif (!fileStat) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provideDecorations(fileStat);\n\t}\n\n\tdispose(): void {\n\t\tthis.toDispose.dispose();\n\t}\n}\n"]}