{"version":3,"sources":["vs/workbench/contrib/files/browser/fileCommands.ts"],"names":[],"mappings":"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","file":"fileCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorResourceAccessor, IEditorCommandsContext, SideBySideEditor, IEditorIdentifier, SaveReason, SideBySideEditorInput, EditorsOrder } from 'vs/workbench/common/editor';\nimport { IWindowOpenable, IOpenWindowOptions, isWorkspaceToOpen, IOpenEmptyWindowOptions } from 'vs/platform/windows/common/windows';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ExplorerFocusCondition, TextFileContentProvider, VIEWLET_ID, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext, ExplorerCompressedLastFocusContext, FilesExplorerFocusCondition, ExplorerFolderContext } from 'vs/workbench/contrib/files/common/files';\nimport { ExplorerViewPaneContainer } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { RawContextKey, IContextKey, IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyMod, KeyCode, KeyChord } from 'vs/base/common/keyCodes';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { getResourceForCommand, getMultiSelectedResources, getOpenEditorsViewMultiSelection, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { getMultiSelectedEditorContexts } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { Schemas } from 'vs/base/common/network';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IEditorService, SIDE_GROUP, ISaveEditorsOptions } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService, GroupsOrder, IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { basename, joinPath, isEqual } from 'vs/base/common/resources';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { UNTITLED_WORKSPACE_NAME } from 'vs/platform/workspaces/common/workspaces';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { toAction } from 'vs/base/common/actions';\nimport { EditorOverride } from 'vs/platform/editor/common/editor';\nimport { hash } from 'vs/base/common/hash';\n\n// Commands\n\nexport const REVEAL_IN_EXPLORER_COMMAND_ID = 'revealInExplorer';\nexport const REVERT_FILE_COMMAND_ID = 'workbench.action.files.revert';\nexport const OPEN_TO_SIDE_COMMAND_ID = 'explorer.openToSide';\nexport const OPEN_WITH_EXPLORER_COMMAND_ID = 'explorer.openWith';\nexport const SELECT_FOR_COMPARE_COMMAND_ID = 'selectForCompare';\n\nexport const COMPARE_SELECTED_COMMAND_ID = 'compareSelected';\nexport const COMPARE_RESOURCE_COMMAND_ID = 'compareFiles';\nexport const COMPARE_WITH_SAVED_COMMAND_ID = 'workbench.files.action.compareWithSaved';\nexport const COPY_PATH_COMMAND_ID = 'copyFilePath';\nexport const COPY_RELATIVE_PATH_COMMAND_ID = 'copyRelativeFilePath';\n\nexport const SAVE_FILE_AS_COMMAND_ID = 'workbench.action.files.saveAs';\nexport const SAVE_FILE_AS_LABEL = nls.localize('saveAs', \"Save As...\");\nexport const SAVE_FILE_COMMAND_ID = 'workbench.action.files.save';\nexport const SAVE_FILE_LABEL = nls.localize('save', \"Save\");\nexport const SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID = 'workbench.action.files.saveWithoutFormatting';\nexport const SAVE_FILE_WITHOUT_FORMATTING_LABEL = nls.localize('saveWithoutFormatting', \"Save without Formatting\");\n\nexport const SAVE_ALL_COMMAND_ID = 'saveAll';\nexport const SAVE_ALL_LABEL = nls.localize('saveAll', \"Save All\");\n\nexport const SAVE_ALL_IN_GROUP_COMMAND_ID = 'workbench.files.action.saveAllInGroup';\n\nexport const SAVE_FILES_COMMAND_ID = 'workbench.action.files.saveFiles';\n\nexport const OpenEditorsGroupContext = new RawContextKey<boolean>('groupFocusedInOpenEditors', false);\nexport const OpenEditorsDirtyEditorContext = new RawContextKey<boolean>('dirtyEditorFocusedInOpenEditors', false);\nexport const OpenEditorsReadonlyEditorContext = new RawContextKey<boolean>('readonlyEditorFocusedInOpenEditors', false);\nexport const ResourceSelectedForCompareContext = new RawContextKey<boolean>('resourceSelectedForCompare', false);\n\nexport const REMOVE_ROOT_FOLDER_COMMAND_ID = 'removeRootFolder';\nexport const REMOVE_ROOT_FOLDER_LABEL = nls.localize('removeFolderFromWorkspace', \"Remove Folder from Workspace\");\n\nexport const PREVIOUS_COMPRESSED_FOLDER = 'previousCompressedFolder';\nexport const NEXT_COMPRESSED_FOLDER = 'nextCompressedFolder';\nexport const FIRST_COMPRESSED_FOLDER = 'firstCompressedFolder';\nexport const LAST_COMPRESSED_FOLDER = 'lastCompressedFolder';\nexport const NEW_UNTITLED_FILE_COMMAND_ID = 'workbench.action.files.newUntitledFile';\nexport const NEW_UNTITLED_FILE_LABEL = nls.localize('newUntitledFile', \"New Untitled File\");\n\nexport const openWindowCommand = (accessor: ServicesAccessor, toOpen: IWindowOpenable[], options?: IOpenWindowOptions) => {\n\tif (Array.isArray(toOpen)) {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\n\t\t// rewrite untitled: workspace URIs to the absolute path on disk\n\t\ttoOpen = toOpen.map(openable => {\n\t\t\tif (isWorkspaceToOpen(openable) && openable.workspaceUri.scheme === Schemas.untitled) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspaceUri: joinPath(environmentService.untitledWorkspacesHome, openable.workspaceUri.path, UNTITLED_WORKSPACE_NAME)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn openable;\n\t\t});\n\n\t\thostService.openWindow(toOpen, options);\n\t}\n};\n\nexport const newWindowCommand = (accessor: ServicesAccessor, options?: IOpenEmptyWindowOptions) => {\n\tconst hostService = accessor.get(IHostService);\n\thostService.openWindow(options);\n};\n\n// Command registration\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ExplorerFocusCondition,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\tid: OPEN_TO_SIDE_COMMAND_ID, handler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(resource, listService, editorService, explorerService);\n\n\t\t// Set side input\n\t\tif (resources.length) {\n\t\t\tconst untitledResources = resources.filter(resource => resource.scheme === Schemas.untitled);\n\t\t\tconst fileResources = resources.filter(resource => resource.scheme !== Schemas.untitled);\n\n\t\t\tconst items = await Promise.all(fileResources.map(async resource => {\n\t\t\t\tconst item = explorerService.findClosest(resource);\n\t\t\t\tif (item) {\n\t\t\t\t\t// Explorer already resolved the item, no need to go to the file service #109780\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\n\t\t\t\treturn await fileService.resolve(resource);\n\t\t\t}));\n\t\t\tconst files = items.filter(i => !i.isDirectory);\n\t\t\tconst editors = files.map(f => ({\n\t\t\t\tresource: f.resource,\n\t\t\t\toptions: { pinned: true }\n\t\t\t})).concat(...untitledResources.map(untitledResource => ({ resource: untitledResource, options: { pinned: true } })));\n\n\t\t\tawait editorService.openEditors(editors, SIDE_GROUP);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext.toNegated()),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow\n\t},\n\tid: 'explorer.openAndPassFocus', handler: async (accessor, _resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = explorerService.getContext(true);\n\n\t\tif (resources.length) {\n\t\t\tawait editorService.openEditors(resources.map(r => ({ resource: r.resource, options: { preserveFocus: false, pinned: true } })));\n\t\t}\n\t}\n});\n\nconst COMPARE_WITH_SAVED_SCHEMA = 'showModifications';\nlet providerDisposables: IDisposable[] = [];\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: COMPARE_WITH_SAVED_COMMAND_ID,\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_D),\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\t// Register provider at first as needed\n\t\tlet registerEditorListener = false;\n\t\tif (providerDisposables.length === 0) {\n\t\t\tregisterEditorListener = true;\n\n\t\t\tconst provider = instantiationService.createInstance(TextFileContentProvider);\n\t\t\tproviderDisposables.push(provider);\n\t\t\tproviderDisposables.push(textModelService.registerTextModelContentProvider(COMPARE_WITH_SAVED_SCHEMA, provider));\n\t\t}\n\n\t\t// Open editor (only resources that can be handled by file service are supported)\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), editorService);\n\t\tif (uri && fileService.canHandleResource(uri)) {\n\t\t\tconst name = basename(uri);\n\t\t\tconst editorLabel = nls.localize('modifiedLabel', \"{0} (in file) ↔ {1}\", name, name);\n\n\t\t\ttry {\n\t\t\t\tawait TextFileContentProvider.open(uri, COMPARE_WITH_SAVED_SCHEMA, editorLabel, editorService, { pinned: true });\n\t\t\t\t// Dispose once no more diff editor is opened with the scheme\n\t\t\t\tif (registerEditorListener) {\n\t\t\t\t\tproviderDisposables.push(editorService.onDidVisibleEditorsChange(() => {\n\t\t\t\t\t\tif (!editorService.editors.some(editor => !!EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: COMPARE_WITH_SAVED_SCHEMA }))) {\n\t\t\t\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t}\n\t\t}\n\t}\n});\n\nlet globalResourceToCompare: URI | undefined;\nlet resourceSelectedForCompareContext: IContextKey<boolean>;\nCommandsRegistry.registerCommand({\n\tid: SELECT_FOR_COMPARE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst listService = accessor.get(IListService);\n\n\t\tglobalResourceToCompare = getResourceForCommand(resource, listService, accessor.get(IEditorService));\n\t\tif (!resourceSelectedForCompareContext) {\n\t\t\tresourceSelectedForCompareContext = ResourceSelectedForCompareContext.bindTo(accessor.get(IContextKeyService));\n\t\t}\n\t\tresourceSelectedForCompareContext.set(true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_SELECTED_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), editorService, explorerService);\n\n\t\tif (resources.length === 2) {\n\t\t\treturn editorService.openEditor({\n\t\t\t\tleftResource: resources[0],\n\t\t\t\trightResource: resources[1],\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_RESOURCE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\n\t\tconst rightResource = getResourceForCommand(resource, listService, editorService);\n\t\tif (globalResourceToCompare && rightResource) {\n\t\t\teditorService.openEditor({\n\t\t\t\tleftResource: globalResourceToCompare,\n\t\t\t\trightResource,\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\t}\n});\n\nasync function resourcesToClipboard(resources: URI[], relative: boolean, clipboardService: IClipboardService, notificationService: INotificationService, labelService: ILabelService): Promise<void> {\n\tif (resources.length) {\n\t\tconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n\n\t\tconst text = resources.map(resource => labelService.getUriLabel(resource, { relative, noPrefix: true }))\n\t\t\t.join(lineDelimiter);\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_C,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_C\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService));\n\t\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(INotificationService), accessor.get(ILabelService));\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_C,\n\twin: {\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_C)\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService));\n\t\tawait resourcesToClipboard(resources, true, accessor.get(IClipboardService), accessor.get(INotificationService), accessor.get(ILabelService));\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_P),\n\tid: 'workbench.action.files.copyPathOfActiveFile',\n\thandler: async (accessor) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeInput, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tconst resources = resource ? [resource] : [];\n\t\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(INotificationService), accessor.get(ILabelService));\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVEAL_IN_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), accessor.get(IEditorService));\n\n\t\tconst viewlet = (await viewletService.openViewlet(VIEWLET_ID, false))?.getViewPaneContainer() as ExplorerViewPaneContainer;\n\n\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\tconst explorerView = viewlet.getExplorerView();\n\t\t\tif (explorerView) {\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\tawait explorerService.select(uri, true);\n\t\t\t\texplorerView.focus();\n\t\t\t}\n\t\t} else {\n\t\t\tconst openEditorsView = viewlet.getOpenEditorsView();\n\t\t\tif (openEditorsView) {\n\t\t\t\topenEditorsView.setExpanded(true);\n\t\t\t\topenEditorsView.focus();\n\t\t\t}\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: OPEN_WITH_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), accessor.get(IEditorService));\n\t\tif (uri) {\n\t\t\treturn editorService.openEditor({ resource: uri, options: { override: EditorOverride.PICK } });\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n\n// Save / Save As / Save All / Revert\n\nasync function saveSelectedEditors(accessor: ServicesAccessor, options?: ISaveEditorsOptions): Promise<void> {\n\tconst listService = accessor.get(IListService);\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst textFileService = accessor.get(ITextFileService);\n\n\t// Retrieve selected or active editor\n\tlet editors = getOpenEditorsViewMultiSelection(listService, editorGroupService);\n\tif (!editors) {\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tif (activeGroup.activeEditor) {\n\t\t\teditors = [];\n\n\t\t\t// Special treatment for side by side editors: if the active editor\n\t\t\t// has 2 sides, we consider both, to support saving both sides.\n\t\t\t// We only allow this when saving, not for \"Save As\" and not if any\n\t\t\t// editor is untitled which would bring up a \"Save As\" dialog too.\n\t\t\t// See also https://github.com/microsoft/vscode/issues/4180\n\t\t\t// See also https://github.com/microsoft/vscode/issues/106330\n\t\t\tif (\n\t\t\t\tactiveGroup.activeEditor instanceof SideBySideEditorInput &&\n\t\t\t\t!options?.saveAs && !(activeGroup.activeEditor.primary.isUntitled() || activeGroup.activeEditor.secondary.isUntitled())\n\t\t\t) {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.primary });\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.secondary });\n\t\t\t} else {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor });\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!editors || editors.length === 0) {\n\t\treturn; // nothing to save\n\t}\n\n\t// Save editors\n\tawait doSaveEditors(accessor, editors, options);\n\n\t// Special treatment for embedded editors: if we detect that focus is\n\t// inside an embedded code editor, we save that model as well if we\n\t// find it in our text file models. Currently, only textual editors\n\t// support embedded editors.\n\tconst focusedCodeEditor = codeEditorService.getFocusedCodeEditor();\n\tif (focusedCodeEditor instanceof EmbeddedCodeEditorWidget) {\n\t\tconst resource = focusedCodeEditor.getModel()?.uri;\n\n\t\t// Check that the resource of the model was not saved already\n\t\tif (resource && !editors.some(({ editor }) => isEqual(EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY }), resource))) {\n\t\t\tconst model = textFileService.files.get(resource);\n\t\t\tif (!model?.isReadonly()) {\n\t\t\t\tawait textFileService.save(resource, options);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction saveDirtyEditorsOfGroups(accessor: ServicesAccessor, groups: readonly IEditorGroup[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst dirtyEditors: IEditorIdentifier[] = [];\n\tfor (const group of groups) {\n\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (editor.isDirty()) {\n\t\t\t\tdirtyEditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn doSaveEditors(accessor, dirtyEditors, options);\n}\n\nasync function doSaveEditors(accessor: ServicesAccessor, editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\ttry {\n\t\tawait editorService.save(editors, options);\n\t} catch (error) {\n\t\tif (!isPromiseCanceledError(error)) {\n\t\t\tnotificationService.notify({\n\t\t\t\tid: editors.map(({ editor }) => hash(editor.resource?.toString())).join(), // ensure unique notification ID per set of editor\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: nls.localize({ key: 'genericSaveError', comment: ['{0} is the resource that failed to save and {1} the error message'] }, \"Failed to save '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [\n\t\t\t\t\t\ttoAction({ id: 'workbench.action.files.saveEditors', label: nls.localize('retry', \"Retry\"), run: () => instantiationService.invokeFunction(accessor => doSaveEditors(accessor, editors, options)) }),\n\t\t\t\t\t\ttoAction({ id: 'workbench.action.files.revertEditors', label: nls.localize('discard', \"Discard\"), run: () => editorService.revert(editors) })\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_S,\n\tid: SAVE_FILE_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */ });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_S),\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_S) },\n\tid: SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */, skipSaveParticipants: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SAVE_FILE_AS_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_S,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, saveAs: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_S },\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_S) },\n\tid: SAVE_ALL_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn saveDirtyEditorsOfGroups(accessor, accessor.get(IEditorGroupsService).getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE), { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_ALL_IN_GROUP_COMMAND_ID,\n\thandler: (accessor, _: URI | object, editorContext: IEditorCommandsContext) => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst contexts = getMultiSelectedEditorContexts(editorContext, accessor.get(IListService), accessor.get(IEditorGroupsService));\n\n\t\tlet groups: readonly IEditorGroup[] | undefined = undefined;\n\t\tif (!contexts.length) {\n\t\t\tgroups = editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\t} else {\n\t\t\tgroups = coalesce(contexts.map(context => editorGroupService.getGroup(context.groupId)));\n\t\t}\n\n\t\treturn saveDirtyEditorsOfGroups(accessor, groups, { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_FILES_COMMAND_ID,\n\thandler: accessor => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\treturn editorService.saveAll({ includeUntitled: false, reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERT_FILE_COMMAND_ID,\n\thandler: async accessor => {\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t// Retrieve selected or active editor\n\t\tlet editors = getOpenEditorsViewMultiSelection(listService, editorGroupService);\n\t\tif (!editors) {\n\t\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\t\tif (activeGroup.activeEditor) {\n\t\t\t\teditors = [{ groupId: activeGroup.id, editor: activeGroup.activeEditor }];\n\t\t\t}\n\t\t}\n\n\t\tif (!editors || editors.length === 0) {\n\t\t\treturn; // nothing to revert\n\t\t}\n\n\t\ttry {\n\t\t\tawait editorService.revert(editors.filter(({ editor }) => !editor.isUntitled() /* all except untitled */), { force: true });\n\t\t} catch (error) {\n\t\t\tnotificationService.error(nls.localize('genericRevertError', \"Failed to revert '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REMOVE_ROOT_FOLDER_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst workspace = contextService.getWorkspace();\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService)).filter(resource =>\n\t\t\tworkspace.folders.some(folder => uriIdentityService.extUri.isEqual(folder.uri, resource)) // Need to verify resources are workspaces since multi selection can trigger this command on some non workspace resources\n\t\t);\n\n\t\treturn workspaceEditingService.removeFolders(resources);\n\t}\n});\n\n// Compressed item navigation\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.LeftArrow,\n\tid: PREVIOUS_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst viewlet = viewletService.getActiveViewlet();\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.previousCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.RightArrow,\n\tid: NEXT_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst viewlet = viewletService.getActiveViewlet();\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.nextCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.Home,\n\tid: FIRST_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst viewlet = viewletService.getActiveViewlet();\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.firstCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.End,\n\tid: LAST_COMPRESSED_FOLDER,\n\thandler: (accessor) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst viewlet = viewletService.getActiveViewlet();\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.lastCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: null,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_N,\n\tid: NEW_UNTITLED_FILE_COMMAND_ID,\n\tdescription: {\n\t\tdescription: NEW_UNTITLED_FILE_LABEL,\n\t\targs: [\n\t\t\t{\n\t\t\t\tisOptional: true,\n\t\t\t\tname: 'viewType',\n\t\t\t\tdescription: 'The editor view type',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['viewType'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'viewType': {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (accessor, args?: { viewType: string }) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (typeof args?.viewType === 'string') {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst group = editorGroupsService.activeGroup;\n\t\t\tawait editorService.openEditor({ options: { override: args.viewType, pinned: true } }, group);\n\t\t} else {\n\t\t\tawait editorService.openEditor({ options: { pinned: true } }); // untitled are always pinned\n\t\t}\n\t}\n});\n\n\n"]}