{"version":3,"sources":["vs/workbench/contrib/files/browser/views/emptyView.ts"],"names":[],"mappings":"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","file":"emptyView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ResourcesDropHandler, DragAndDropObserver } from 'vs/workbench/browser/dnd';\nimport { listDropBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class EmptyView extends ViewPane {\n\n\tstatic readonly ID: string = 'workbench.explorer.emptyView';\n\tstatic readonly NAME = nls.localize('noWorkspace', \"No Folder Opened\");\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService private labelService: ILabelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.refreshTitle()));\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => this.refreshTitle()));\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._register(new DragAndDropObserver(container, {\n\t\t\tonDrop: e => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t\tconst dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: true });\n\t\t\t\tdropHandler.handleDrop(e, () => undefined, () => undefined);\n\t\t\t},\n\t\t\tonDragEnter: () => {\n\t\t\t\tconst color = this.themeService.getColorTheme().getColor(listDropBackground);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t},\n\t\t\tonDragEnd: () => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragLeave: () => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragOver: e => {\n\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.refreshTitle();\n\t}\n\n\tprivate refreshTitle(): void {\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tthis.updateTitle(EmptyView.NAME);\n\t\t} else {\n\t\t\tthis.updateTitle(this.title);\n\t\t}\n\t}\n}\n"]}