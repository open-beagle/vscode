{"version":3,"file":"explorerService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/files/browser/explorerService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFilesConfiguration, SortOrder } from 'vs/workbench/contrib/files/common/files';\nimport { ExplorerItem, ExplorerModel } from 'vs/workbench/contrib/files/common/explorerModel';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperationEvent, FileOperation, IFileService, FileChangesEvent, FileChangeType, IResolveFileOptions } from 'vs/platform/files/common/files';\nimport { dirname, basename } from 'vs/base/common/resources';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditableData } from 'vs/workbench/common/views';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IBulkEditService, ResourceFileEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IExplorerView, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { IProgressService, ProgressLocation, IProgressNotificationOptions, IProgressCompositeOptions } from 'vs/platform/progress/common/progress';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport const UNDO_REDO_SOURCE = new UndoRedoSource();\n\nexport class ExplorerService implements IExplorerService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly EXPLORER_FILE_CHANGES_REACT_DELAY = 500; // delay in ms to react to file changes to give our internal events a chance to react first\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate editable: { stat: ExplorerItem, data: IEditableData } | undefined;\n\tprivate _sortOrder: SortOrder;\n\tprivate cutItems: ExplorerItem[] | undefined;\n\tprivate view: IExplorerView | undefined;\n\tprivate model: ExplorerModel;\n\tprivate onFileChangesScheduler: RunOnceScheduler;\n\tprivate fileChangeEvents: FileChangesEvent[] = [];\n\n\tconstructor(\n\t\t@IFileService private fileService: IFileService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IClipboardService private clipboardService: IClipboardService,\n\t\t@IEditorService private editorService: IEditorService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t\t@IProgressService private readonly progressService: IProgressService\n\t) {\n\t\tthis._sortOrder = this.configurationService.getValue('explorer.sortOrder');\n\n\t\tthis.model = new ExplorerModel(this.contextService, this.uriIdentityService, this.fileService);\n\t\tthis.disposables.add(this.model);\n\t\tthis.disposables.add(this.fileService.onDidRunOperation(e => this.onDidRunOperation(e)));\n\n\t\tthis.onFileChangesScheduler = new RunOnceScheduler(async () => {\n\t\t\tconst events = this.fileChangeEvents;\n\t\t\tthis.fileChangeEvents = [];\n\n\t\t\t// Filter to the ones we care\n\t\t\tconst types = [FileChangeType.DELETED];\n\t\t\tif (this._sortOrder === SortOrder.Modified) {\n\t\t\t\ttypes.push(FileChangeType.UPDATED);\n\t\t\t}\n\n\t\t\tlet shouldRefresh = false;\n\t\t\t// For DELETED and UPDATED events go through the explorer model and check if any of the items got affected\n\t\t\tthis.roots.forEach(r => {\n\t\t\t\tif (this.view && !shouldRefresh) {\n\t\t\t\t\tshouldRefresh = doesFileEventAffect(r, this.view, events, types);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// For ADDED events we need to go through all the events and check if the explorer is already aware of some of them\n\t\t\t// Or if they affect not yet resolved parts of the explorer. If that is the case we will not refresh.\n\t\t\tevents.forEach(e => {\n\t\t\t\tif (!shouldRefresh) {\n\t\t\t\t\tconst added = e.getAdded();\n\t\t\t\t\tif (added.some(a => {\n\t\t\t\t\t\tconst parent = this.model.findClosest(dirname(a.resource));\n\t\t\t\t\t\t// Parent of the added resource is resolved and the explorer model is not aware of the added resource - we need to refresh\n\t\t\t\t\t\treturn parent && !parent.getChild(basename(a.resource));\n\t\t\t\t\t})) {\n\t\t\t\t\t\tshouldRefresh = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (shouldRefresh) {\n\t\t\t\tawait this.refresh(false);\n\t\t\t}\n\n\t\t}, ExplorerService.EXPLORER_FILE_CHANGES_REACT_DELAY);\n\n\t\tthis.disposables.add(this.fileService.onDidFilesChange(e => {\n\t\t\tthis.fileChangeEvents.push(e);\n\t\t\tif (!this.onFileChangesScheduler.isScheduled()) {\n\t\t\t\tthis.onFileChangesScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.add(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(this.configurationService.getValue<IFilesConfiguration>())));\n\t\tthis.disposables.add(Event.any<{ scheme: string }>(this.fileService.onDidChangeFileSystemProviderRegistrations, this.fileService.onDidChangeFileSystemProviderCapabilities)(async e => {\n\t\t\tlet affected = false;\n\t\t\tthis.model.roots.forEach(r => {\n\t\t\t\tif (r.resource.scheme === e.scheme) {\n\t\t\t\t\taffected = true;\n\t\t\t\t\tr.forgetChildren();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (affected) {\n\t\t\t\tif (this.view) {\n\t\t\t\t\tawait this.view.setTreeInput();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.add(this.model.onDidChangeRoots(() => {\n\t\t\tif (this.view) {\n\t\t\t\tthis.view.setTreeInput();\n\t\t\t}\n\t\t}));\n\t}\n\n\tget roots(): ExplorerItem[] {\n\t\treturn this.model.roots;\n\t}\n\n\tget sortOrder(): SortOrder {\n\t\treturn this._sortOrder;\n\t}\n\n\tregisterView(contextProvider: IExplorerView): void {\n\t\tthis.view = contextProvider;\n\t}\n\n\tgetContext(respectMultiSelection: boolean): ExplorerItem[] {\n\t\tif (!this.view) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.view.getContext(respectMultiSelection);\n\t}\n\n\tasync applyBulkEdit(edit: ResourceFileEdit[], options: { undoLabel: string, progressLabel: string, confirmBeforeUndo?: boolean, progressLocation?: ProgressLocation.Explorer | ProgressLocation.Window }): Promise<void> {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst promise = this.progressService.withProgress(<IProgressNotificationOptions | IProgressCompositeOptions>{\n\t\t\tlocation: options.progressLocation || ProgressLocation.Window,\n\t\t\ttitle: options.progressLabel,\n\t\t\tcancellable: edit.length > 1, // Only allow cancellation when there is more than one edit. Since cancelling will not actually stop the current edit that is in progress.\n\t\t\tdelay: 500,\n\t\t}, async progress => {\n\t\t\tawait this.bulkEditService.apply(edit, {\n\t\t\t\tundoRedoSource: UNDO_REDO_SOURCE,\n\t\t\t\tlabel: options.undoLabel,\n\t\t\t\tprogress,\n\t\t\t\ttoken: cancellationTokenSource.token,\n\t\t\t\tconfirmBeforeUndo: options.confirmBeforeUndo\n\t\t\t});\n\t\t}, () => cancellationTokenSource.cancel());\n\t\tawait this.progressService.withProgress({ location: ProgressLocation.Explorer, delay: 500 }, () => promise);\n\t\tcancellationTokenSource.dispose();\n\t}\n\n\thasViewFocus(): boolean {\n\t\treturn !!this.view && this.view.hasFocus();\n\t}\n\n\t// IExplorerService methods\n\n\tfindClosest(resource: URI): ExplorerItem | null {\n\t\treturn this.model.findClosest(resource);\n\t}\n\n\tfindClosestRoot(resource: URI): ExplorerItem | null {\n\t\tconst parentRoots = this.model.roots.filter(r => this.uriIdentityService.extUri.isEqualOrParent(resource, r.resource))\n\t\t\t.sort((first, second) => second.resource.path.length - first.resource.path.length);\n\t\treturn parentRoots.length ? parentRoots[0] : null;\n\t}\n\n\tasync setEditable(stat: ExplorerItem, data: IEditableData | null): Promise<void> {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!data) {\n\t\t\tthis.editable = undefined;\n\t\t} else {\n\t\t\tthis.editable = { stat, data };\n\t\t}\n\t\tconst isEditing = this.isEditable(stat);\n\t\tawait this.view.setEditable(stat, isEditing);\n\t}\n\n\tasync setToCopy(items: ExplorerItem[], cut: boolean): Promise<void> {\n\t\tconst previouslyCutItems = this.cutItems;\n\t\tthis.cutItems = cut ? items : undefined;\n\t\tawait this.clipboardService.writeResources(items.map(s => s.resource));\n\n\t\tthis.view?.itemsCopied(items, cut, previouslyCutItems);\n\t}\n\n\tisCut(item: ExplorerItem): boolean {\n\t\treturn !!this.cutItems && this.cutItems.indexOf(item) >= 0;\n\t}\n\n\tgetEditable(): { stat: ExplorerItem, data: IEditableData } | undefined {\n\t\treturn this.editable;\n\t}\n\n\tgetEditableData(stat: ExplorerItem): IEditableData | undefined {\n\t\treturn this.editable && this.editable.stat === stat ? this.editable.data : undefined;\n\t}\n\n\tisEditable(stat: ExplorerItem | undefined): boolean {\n\t\treturn !!this.editable && (this.editable.stat === stat || !stat);\n\t}\n\n\tasync select(resource: URI, reveal?: boolean | string): Promise<void> {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileStat = this.findClosest(resource);\n\t\tif (fileStat) {\n\t\t\tawait this.view.selectResource(fileStat.resource, reveal);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Stat needs to be resolved first and then revealed\n\t\tconst options: IResolveFileOptions = { resolveTo: [resource], resolveMetadata: this.sortOrder === SortOrder.Modified };\n\t\tconst root = this.findClosestRoot(resource);\n\t\tif (!root) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(root.resource, options);\n\n\t\t\t// Convert to model\n\t\t\tconst modelStat = ExplorerItem.create(this.fileService, stat, undefined, options.resolveTo);\n\t\t\t// Update Input with disk Stat\n\t\t\tExplorerItem.mergeLocalWithDisk(modelStat, root);\n\t\t\tconst item = root.find(resource);\n\t\t\tawait this.view.refresh(true, root);\n\n\t\t\t// Select and Reveal\n\t\t\tawait this.view.selectResource(item ? item.resource : undefined, reveal);\n\t\t} catch (error) {\n\t\t\troot.isError = true;\n\t\t\tawait this.view.refresh(false, root);\n\t\t}\n\t}\n\n\tasync refresh(reveal = true): Promise<void> {\n\t\tthis.model.roots.forEach(r => r.forgetChildren());\n\t\tif (this.view) {\n\t\t\tawait this.view.refresh(true);\n\t\t\tconst resource = this.editorService.activeEditor?.resource;\n\t\t\tconst autoReveal = this.configurationService.getValue<IFilesConfiguration>().explorer.autoReveal;\n\n\t\t\tif (reveal && resource && autoReveal) {\n\t\t\t\t// We did a top level refresh, reveal the active file #67118\n\t\t\t\tthis.select(resource, autoReveal);\n\t\t\t}\n\t\t}\n\t}\n\n\t// File events\n\n\tprivate async onDidRunOperation(e: FileOperationEvent): Promise<void> {\n\t\t// Add\n\t\tif (e.isOperation(FileOperation.CREATE) || e.isOperation(FileOperation.COPY)) {\n\t\t\tconst addedElement = e.target;\n\t\t\tconst parentResource = dirname(addedElement.resource)!;\n\t\t\tconst parents = this.model.findAll(parentResource);\n\n\t\t\tif (parents.length) {\n\n\t\t\t\t// Add the new file to its parent (Model)\n\t\t\t\tawait Promise.all(parents.map(async p => {\n\t\t\t\t\t// We have to check if the parent is resolved #29177\n\t\t\t\t\tconst resolveMetadata = this.sortOrder === `modified`;\n\t\t\t\t\tif (!p.isDirectoryResolved) {\n\t\t\t\t\t\tconst stat = await this.fileService.resolve(p.resource, { resolveMetadata });\n\t\t\t\t\t\tif (stat) {\n\t\t\t\t\t\t\tconst modelStat = ExplorerItem.create(this.fileService, stat, p.parent);\n\t\t\t\t\t\t\tExplorerItem.mergeLocalWithDisk(modelStat, p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst childElement = ExplorerItem.create(this.fileService, addedElement, p.parent);\n\t\t\t\t\t// Make sure to remove any previous version of the file if any\n\t\t\t\t\tp.removeChild(childElement);\n\t\t\t\t\tp.addChild(childElement);\n\t\t\t\t\t// Refresh the Parent (View)\n\t\t\t\t\tawait this.view?.refresh(false, p);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// Move (including Rename)\n\t\telse if (e.isOperation(FileOperation.MOVE)) {\n\t\t\tconst oldResource = e.resource;\n\t\t\tconst newElement = e.target;\n\t\t\tconst oldParentResource = dirname(oldResource);\n\t\t\tconst newParentResource = dirname(newElement.resource);\n\n\t\t\t// Handle Rename\n\t\t\tif (this.uriIdentityService.extUri.isEqual(oldParentResource, newParentResource)) {\n\t\t\t\tconst modelElements = this.model.findAll(oldResource);\n\t\t\t\tmodelElements.forEach(async modelElement => {\n\t\t\t\t\t// Rename File (Model)\n\t\t\t\t\tmodelElement.rename(newElement);\n\t\t\t\t\tawait this.view?.refresh(false, modelElement.parent);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handle Move\n\t\t\telse {\n\t\t\t\tconst newParents = this.model.findAll(newParentResource);\n\t\t\t\tconst modelElements = this.model.findAll(oldResource);\n\n\t\t\t\tif (newParents.length && modelElements.length) {\n\t\t\t\t\t// Move in Model\n\t\t\t\t\tawait Promise.all(modelElements.map(async (modelElement, index) => {\n\t\t\t\t\t\tconst oldParent = modelElement.parent;\n\t\t\t\t\t\tmodelElement.move(newParents[index]);\n\t\t\t\t\t\tawait this.view?.refresh(false, oldParent);\n\t\t\t\t\t\tawait this.view?.refresh(false, newParents[index]);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete\n\t\telse if (e.isOperation(FileOperation.DELETE)) {\n\t\t\tconst modelElements = this.model.findAll(e.resource);\n\t\t\tawait Promise.all(modelElements.map(async element => {\n\t\t\t\tif (element.parent) {\n\t\t\t\t\tconst parent = element.parent;\n\t\t\t\t\t// Remove Element from Parent (Model)\n\t\t\t\t\tparent.removeChild(element);\n\t\t\t\t\tthis.view?.focusNeighbourIfItemFocused(element);\n\t\t\t\t\t// Refresh Parent (View)\n\t\t\t\t\tawait this.view?.refresh(false, parent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async onConfigurationUpdated(configuration: IFilesConfiguration, event?: IConfigurationChangeEvent): Promise<void> {\n\t\tconst configSortOrder = configuration?.explorer?.sortOrder || 'default';\n\t\tif (this._sortOrder !== configSortOrder) {\n\t\t\tconst shouldRefresh = this._sortOrder !== undefined;\n\t\t\tthis._sortOrder = configSortOrder;\n\t\t\tif (shouldRefresh) {\n\t\t\t\tawait this.refresh();\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nfunction doesFileEventAffect(item: ExplorerItem, view: IExplorerView, events: FileChangesEvent[], types: FileChangeType[]): boolean {\n\tfor (let [_name, child] of item.children) {\n\t\tif (view.isItemVisible(child)) {\n\t\t\tif (events.some(e => e.contains(child.resource, ...types))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (child.isDirectory && child.isDirectoryResolved) {\n\t\t\t\tif (doesFileEventAffect(child, view, events, types)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n"]}