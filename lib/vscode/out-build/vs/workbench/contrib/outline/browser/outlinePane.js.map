{"version":3,"sources":["vs/workbench/contrib/outline/browser/outlinePane.ts"],"names":[],"mappings":"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","file":"outlinePane.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./outlinePane';\nimport * as dom from 'vs/base/browser/dom';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { TimeoutTimer } from 'vs/base/common/async';\nimport { IDisposable, toDisposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyEqualsExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { WorkbenchDataTree } from 'vs/platform/list/browser/listService';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { attachProgressBarStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ViewAction, ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { IDataTreeViewState } from 'vs/base/browser/ui/tree/dataTree';\nimport { basename } from 'vs/base/common/resources';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { OutlineSortOrder, OutlineViewState } from './outlineViewState';\nimport { IOutline, IOutlineComparator, IOutlineService, OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { EditorResourceAccessor, IEditorPane } from 'vs/workbench/common/editor';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { ITreeSorter } from 'vs/base/browser/ui/tree/tree';\nimport { URI } from 'vs/base/common/uri';\n\nconst _ctxFollowsCursor = new RawContextKey('outlineFollowsCursor', false);\nconst _ctxFilterOnType = new RawContextKey('outlineFiltersOnType', false);\nconst _ctxSortMode = new RawContextKey<OutlineSortOrder>('outlineSortMode', OutlineSortOrder.ByPosition);\n\nclass OutlineTreeSorter<E> implements ITreeSorter<E> {\n\n\tconstructor(\n\t\tprivate _comparator: IOutlineComparator<E>,\n\t\tpublic order: OutlineSortOrder\n\t) { }\n\n\tcompare(a: E, b: E): number {\n\t\tif (this.order === OutlineSortOrder.ByKind) {\n\t\t\treturn this._comparator.compareByType(a, b);\n\t\t} else if (this.order === OutlineSortOrder.ByName) {\n\t\t\treturn this._comparator.compareByName(a, b);\n\t\t} else {\n\t\t\treturn this._comparator.compareByPosition(a, b);\n\t\t}\n\t}\n}\n\nexport class OutlinePane extends ViewPane {\n\n\tstatic readonly Id = 'outline';\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _editorDisposables = new DisposableStore();\n\tprivate readonly _outlineViewState = new OutlineViewState();\n\n\tprivate readonly _editorListener = new MutableDisposable();\n\n\tprivate _domNode!: HTMLElement;\n\tprivate _message!: HTMLDivElement;\n\tprivate _progressBar!: ProgressBar;\n\tprivate _treeContainer!: HTMLElement;\n\tprivate _tree?: WorkbenchDataTree<IOutline<any> | undefined, any, FuzzyScore>;\n\tprivate _treeDimensions?: dom.Dimension;\n\tprivate _treeStates = new LRUCache<string, IDataTreeViewState>(10);\n\n\tprivate _ctxFollowsCursor!: IContextKey<boolean>;\n\tprivate _ctxFilterOnType!: IContextKey<boolean>;\n\tprivate _ctxSortMode!: IContextKey<OutlineSortOrder>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IOutlineService private readonly _outlineService: IOutlineService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, _instantiationService, openerService, themeService, telemetryService);\n\t\tthis._outlineViewState.restore(this._storageService);\n\t\tthis._disposables.add(this._outlineViewState);\n\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._ctxFollowsCursor = _ctxFollowsCursor.bindTo(contextKeyService);\n\t\t\tthis._ctxFilterOnType = _ctxFilterOnType.bindTo(contextKeyService);\n\t\t\tthis._ctxSortMode = _ctxSortMode.bindTo(contextKeyService);\n\t\t});\n\n\t\tconst updateContext = () => {\n\t\t\tthis._ctxFollowsCursor.set(this._outlineViewState.followCursor);\n\t\t\tthis._ctxFilterOnType.set(this._outlineViewState.filterOnType);\n\t\t\tthis._ctxSortMode.set(this._outlineViewState.sortBy);\n\t\t};\n\t\tupdateContext();\n\t\tthis._disposables.add(this._outlineViewState.onDidChange(updateContext));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._editorDisposables.dispose();\n\t\tthis._editorListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride focus(): void {\n\t\tthis._tree?.domFocus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._domNode = container;\n\t\tcontainer.classList.add('outline-pane');\n\n\t\tlet progressContainer = dom.$('.outline-progress');\n\t\tthis._message = dom.$('.outline-message');\n\n\t\tthis._progressBar = new ProgressBar(progressContainer);\n\t\tthis._disposables.add(attachProgressBarStyler(this._progressBar, this._themeService));\n\n\t\tthis._treeContainer = dom.$('.outline-tree');\n\t\tdom.append(container, progressContainer, this._message, this._treeContainer);\n\n\t\tthis._disposables.add(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (!visible) {\n\t\t\t\t// stop everything when not visible\n\t\t\t\tthis._editorListener.clear();\n\t\t\t\tthis._editorDisposables.clear();\n\n\t\t\t} else if (!this._editorListener.value) {\n\t\t\t\tconst event = Event.any(this._editorService.onDidActiveEditorChange, this._outlineService.onDidChange);\n\t\t\t\tthis._editorListener.value = event(() => this._handleEditorChanged(this._editorService.activeEditorPane));\n\t\t\t\tthis._handleEditorChanged(this._editorService.activeEditorPane);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._tree?.layout(height, width);\n\t\tthis._treeDimensions = new dom.Dimension(width, height);\n\t}\n\n\tcollapseAll(): void {\n\t\tthis._tree?.collapseAll();\n\t}\n\n\tget outlineViewState() {\n\t\treturn this._outlineViewState;\n\t}\n\n\tprivate _showMessage(message: string) {\n\t\tthis._domNode.classList.add('message');\n\t\tthis._progressBar.stop().hide();\n\t\tthis._message.innerText = message;\n\t}\n\n\tprivate _captureViewState(resource: URI | undefined): boolean {\n\t\tif (resource && this._tree) {\n\t\t\tconst oldOutline = this._tree?.getInput();\n\t\t\tif (oldOutline) {\n\t\t\t\tthis._treeStates.set(`${oldOutline.outlineKind}/${resource}`, this._tree!.getViewState());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async _handleEditorChanged(pane: IEditorPane | undefined): Promise<void> {\n\n\t\t// persist state\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(pane?.input);\n\t\tconst didCapture = this._captureViewState(resource);\n\n\t\tthis._editorDisposables.clear();\n\n\t\tif (!pane || !this._outlineService.canCreateOutline(pane) || !resource) {\n\t\t\treturn this._showMessage(localize('no-editor', \"The active editor cannot provide outline information.\"));\n\t\t}\n\n\t\tlet loadingMessage: IDisposable | undefined;\n\t\tif (!didCapture) {\n\t\t\tloadingMessage = new TimeoutTimer(() => {\n\t\t\t\tthis._showMessage(localize('loading', \"Loading document symbols for '{0}'...\", basename(resource)));\n\t\t\t}, 100);\n\t\t}\n\n\t\tthis._progressBar.infinite().show(500);\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._editorDisposables.add(toDisposable(() => cts.dispose(true)));\n\n\t\tconst newOutline = await this._outlineService.createOutline(pane, OutlineTarget.OutlinePane, cts.token);\n\t\tloadingMessage?.dispose();\n\n\t\tif (!newOutline) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\tnewOutline?.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorDisposables.add(newOutline);\n\t\tthis._progressBar.stop().hide();\n\n\t\tconst sorter = new OutlineTreeSorter(newOutline.config.comparator, this._outlineViewState.sortBy);\n\n\t\tconst tree = <WorkbenchDataTree<IOutline<any> | undefined, any, FuzzyScore>>this._instantiationService.createInstance(\n\t\t\tWorkbenchDataTree,\n\t\t\t'OutlinePane',\n\t\t\tthis._treeContainer,\n\t\t\tnewOutline.config.delegate,\n\t\t\tnewOutline.config.renderers,\n\t\t\tnewOutline.config.treeDataSource,\n\t\t\t{\n\t\t\t\t...newOutline.config.options,\n\t\t\t\tsorter,\n\t\t\t\texpandOnDoubleClick: false,\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\tfilterOnType: this._outlineViewState.filterOnType,\n\t\t\t\toverrideStyles: { listBackground: this.getBackgroundColor() }\n\t\t\t}\n\t\t);\n\n\t\t// update tree, listen to changes\n\t\tconst updateTree = () => {\n\t\t\tif (newOutline.isEmpty) {\n\t\t\t\t// no more elements\n\t\t\t\tthis._showMessage(localize('no-symbols', \"No symbols found in document '{0}'\", basename(resource)));\n\t\t\t\tthis._captureViewState(resource);\n\t\t\t\ttree.setInput(undefined);\n\n\t\t\t} else if (!tree.getInput()) {\n\t\t\t\t// first: init tree\n\t\t\t\tthis._domNode.classList.remove('message');\n\t\t\t\tconst state = this._treeStates.get(`${newOutline.outlineKind}/${resource}`);\n\t\t\t\ttree.setInput(newOutline, state);\n\n\t\t\t} else {\n\t\t\t\t// update: refresh tree\n\t\t\t\tthis._domNode.classList.remove('message');\n\t\t\t\ttree.updateChildren();\n\t\t\t}\n\t\t};\n\t\tupdateTree();\n\t\tthis._editorDisposables.add(newOutline.onDidChange(updateTree));\n\n\t\t// feature: apply panel background to tree\n\t\tthis._editorDisposables.add(this.viewDescriptorService.onDidChangeLocation(({ views }) => {\n\t\t\tif (views.some(v => v.id === this.id)) {\n\t\t\t\ttree.updateOptions({ overrideStyles: { listBackground: this.getBackgroundColor() } });\n\t\t\t}\n\t\t}));\n\n\t\t// feature: filter on type - keep tree and menu in sync\n\t\tthis._editorDisposables.add(tree.onDidUpdateOptions(e => this._outlineViewState.filterOnType = Boolean(e.filterOnType)));\n\n\t\t// feature: reveal outline selection in editor\n\t\t// on change -> reveal/select defining range\n\t\tthis._editorDisposables.add(tree.onDidOpen(e => newOutline.reveal(e.element, e.editorOptions, e.sideBySide)));\n\n\t\t// feature: reveal editor selection in outline\n\t\tconst revealActiveElement = () => {\n\t\t\tif (!this._outlineViewState.followCursor || !newOutline.activeElement) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst item = newOutline.activeElement;\n\t\t\tconst top = tree.getRelativeTop(item);\n\t\t\tif (top === null) {\n\t\t\t\ttree.reveal(item, 0.5);\n\t\t\t}\n\t\t\ttree.setFocus([item]);\n\t\t\ttree.setSelection([item]);\n\t\t};\n\t\trevealActiveElement();\n\t\tthis._editorDisposables.add(newOutline.onDidChange(revealActiveElement));\n\n\t\t// feature: update view when user state changes\n\t\tthis._editorDisposables.add(this._outlineViewState.onDidChange((e: { followCursor?: boolean, sortBy?: boolean, filterOnType?: boolean }) => {\n\t\t\tthis._outlineViewState.persist(this._storageService);\n\t\t\tif (e.filterOnType) {\n\t\t\t\ttree.updateOptions({ filterOnType: this._outlineViewState.filterOnType });\n\t\t\t}\n\t\t\tif (e.followCursor) {\n\t\t\t\trevealActiveElement();\n\t\t\t}\n\t\t\tif (e.sortBy) {\n\t\t\t\tsorter.order = this._outlineViewState.sortBy;\n\t\t\t\ttree.resort();\n\t\t\t}\n\t\t}));\n\n\t\t// feature: expand all nodes when filtering (not when finding)\n\t\tlet viewState: IDataTreeViewState | undefined;\n\t\tthis._editorDisposables.add(tree.onDidChangeTypeFilterPattern(pattern => {\n\t\t\tif (!tree.options.filterOnType) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!viewState && pattern) {\n\t\t\t\tviewState = tree.getViewState();\n\t\t\t\ttree.expandAll();\n\t\t\t} else if (!pattern && viewState) {\n\t\t\t\ttree.setInput(tree.getInput()!, viewState);\n\t\t\t\tviewState = undefined;\n\t\t\t}\n\t\t}));\n\n\t\t// last: set tree property\n\t\ttree.layout(this._treeDimensions?.height, this._treeDimensions?.width);\n\t\tthis._tree = tree;\n\t\tthis._editorDisposables.add(toDisposable(() => {\n\t\t\ttree.dispose();\n\t\t\tthis._tree = undefined;\n\t\t}));\n\t}\n}\n\n\n// --- commands\n\nregisterAction2(class Collapse extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.collapse',\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.collapseAll();\n\t}\n});\n\nregisterAction2(class FollowCursor extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.followCursor',\n\t\t\ttitle: localize('followCur', \"Follow Cursor\"),\n\t\t\tf1: false,\n\t\t\ttoggled: _ctxFollowsCursor,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'config',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.outlineViewState.followCursor = !view.outlineViewState.followCursor;\n\t}\n});\n\nregisterAction2(class FilterOnType extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.filterOnType',\n\t\t\ttitle: localize('filterOnType', \"Filter on Type\"),\n\t\t\tf1: false,\n\t\t\ttoggled: _ctxFilterOnType,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'config',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.outlineViewState.filterOnType = !view.outlineViewState.filterOnType;\n\t}\n});\n\n\nregisterAction2(class SortByPosition extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.sortByPosition',\n\t\t\ttitle: localize('sortByPosition', \"Sort By: Position\"),\n\t\t\tf1: false,\n\t\t\ttoggled: _ctxSortMode.isEqualTo(OutlineSortOrder.ByPosition),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByPosition;\n\t}\n});\n\nregisterAction2(class SortByName extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.sortByName',\n\t\t\ttitle: localize('sortByName', \"Sort By: Name\"),\n\t\t\tf1: false,\n\t\t\ttoggled: _ctxSortMode.isEqualTo(OutlineSortOrder.ByName),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByName;\n\t}\n});\n\nregisterAction2(class SortByKind extends ViewAction<OutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: OutlinePane.Id,\n\t\t\tid: 'outline.sortByKind',\n\t\t\ttitle: localize('sortByKind', \"Sort By: Category\"),\n\t\t\tf1: false,\n\t\t\ttoggled: _ctxSortMode.isEqualTo(OutlineSortOrder.ByKind),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 3,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: OutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByKind;\n\t}\n});\n"]}