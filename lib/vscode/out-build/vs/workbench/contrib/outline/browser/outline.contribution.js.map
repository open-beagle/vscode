{"version":3,"sources":["vs/workbench/contrib/outline/browser/outline.contribution.ts"],"names":[],"mappings":"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","file":"outline.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IViewsRegistry, IViewDescriptor, Extensions as ViewExtensions } from 'vs/workbench/common/views';\nimport { OutlinePane } from './outlinePane';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { VIEW_CONTAINER } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { OutlineConfigKeys } from 'vs/workbench/services/outline/browser/outline';\n\n\nconst outlineViewIcon = registerIcon('outline-view-icon', Codicon.symbolClass, localize('outlineViewIcon', 'View icon of the outline view.'));\n\nconst _outlineDesc = <IViewDescriptor>{\n\tid: OutlinePane.Id,\n\tname: localize('name', \"Outline\"),\n\tcontainerIcon: outlineViewIcon,\n\tctorDescriptor: new SyncDescriptor(OutlinePane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\thideByDefault: false,\n\tcollapsed: true,\n\torder: 2,\n\tweight: 30,\n\tfocusCommand: { id: 'outline.focus' }\n};\n\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([_outlineDesc], VIEW_CONTAINER);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t'id': 'outline',\n\t'order': 117,\n\t'title': localize('outlineConfigurationTitle', \"Outline\"),\n\t'type': 'object',\n\t'properties': {\n\t\t[OutlineConfigKeys.icons]: {\n\t\t\t'description': localize('outline.showIcons', \"Render Outline Elements with Icons.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.problemsEnabled]: {\n\t\t\t'description': localize('outline.showProblem', \"Show Errors & Warnings on Outline Elements.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.problemsColors]: {\n\t\t\t'description': localize('outline.problem.colors', \"Use colors for Errors & Warnings.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t[OutlineConfigKeys.problemsBadges]: {\n\t\t\t'description': localize('outline.problems.badges', \"Use badges for Errors & Warnings.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t},\n\t\t'outline.showFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.file', \"When enabled outline shows `file`-symbols.\")\n\t\t},\n\t\t'outline.showModules': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.module', \"When enabled outline shows `module`-symbols.\")\n\t\t},\n\t\t'outline.showNamespaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.namespace', \"When enabled outline shows `namespace`-symbols.\")\n\t\t},\n\t\t'outline.showPackages': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.package', \"When enabled outline shows `package`-symbols.\")\n\t\t},\n\t\t'outline.showClasses': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.class', \"When enabled outline shows `class`-symbols.\")\n\t\t},\n\t\t'outline.showMethods': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.method', \"When enabled outline shows `method`-symbols.\")\n\t\t},\n\t\t'outline.showProperties': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.property', \"When enabled outline shows `property`-symbols.\")\n\t\t},\n\t\t'outline.showFields': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.field', \"When enabled outline shows `field`-symbols.\")\n\t\t},\n\t\t'outline.showConstructors': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.constructor', \"When enabled outline shows `constructor`-symbols.\")\n\t\t},\n\t\t'outline.showEnums': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.enum', \"When enabled outline shows `enum`-symbols.\")\n\t\t},\n\t\t'outline.showInterfaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.interface', \"When enabled outline shows `interface`-symbols.\")\n\t\t},\n\t\t'outline.showFunctions': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.function', \"When enabled outline shows `function`-symbols.\")\n\t\t},\n\t\t'outline.showVariables': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.variable', \"When enabled outline shows `variable`-symbols.\")\n\t\t},\n\t\t'outline.showConstants': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.constant', \"When enabled outline shows `constant`-symbols.\")\n\t\t},\n\t\t'outline.showStrings': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.string', \"When enabled outline shows `string`-symbols.\")\n\t\t},\n\t\t'outline.showNumbers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.number', \"When enabled outline shows `number`-symbols.\")\n\t\t},\n\t\t'outline.showBooleans': {\n\t\t\ttype: 'boolean',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('filteredTypes.boolean', \"When enabled outline shows `boolean`-symbols.\")\n\t\t},\n\t\t'outline.showArrays': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.array', \"When enabled outline shows `array`-symbols.\")\n\t\t},\n\t\t'outline.showObjects': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.object', \"When enabled outline shows `object`-symbols.\")\n\t\t},\n\t\t'outline.showKeys': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.key', \"When enabled outline shows `key`-symbols.\")\n\t\t},\n\t\t'outline.showNull': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.null', \"When enabled outline shows `null`-symbols.\")\n\t\t},\n\t\t'outline.showEnumMembers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.enumMember', \"When enabled outline shows `enumMember`-symbols.\")\n\t\t},\n\t\t'outline.showStructs': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.struct', \"When enabled outline shows `struct`-symbols.\")\n\t\t},\n\t\t'outline.showEvents': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.event', \"When enabled outline shows `event`-symbols.\")\n\t\t},\n\t\t'outline.showOperators': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.operator', \"When enabled outline shows `operator`-symbols.\")\n\t\t},\n\t\t'outline.showTypeParameters': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\tmarkdownDescription: localize('filteredTypes.typeParameter', \"When enabled outline shows `typeParameter`-symbols.\")\n\t\t}\n\t}\n});\n"]}