{"version":3,"file":"userDataSyncTrigger.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/userDataSync/browser/userDataSyncTrigger.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAgBhG,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,sBAAU;QAElD,YACiB,aAA6B,EACE,kBAAgD,EAChF,YAA2B,EAChB,uBAAiD,EAC7D,WAAyB;YAEvC,KAAK,EAAE,CAAC;YALuC,uBAAkB,GAAlB,kBAAkB,CAA8B;YAM/F,MAAM,KAAK,GAAG,aAAK,CAAC,MAAM,CACzB,aAAK,CAAC,GAAG,CACR,aAAK,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,EACrH,aAAK,CAAC,GAAG,CAAC,aAAK,CAAC,MAAM,CAAC,YAAY,CAAC,kCAAkC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,uBAAU,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAC1H,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC;YACpC,IAAI,gBAAK,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,aAAK,CAAC,QAAQ,CAC5B,aAAK,CAAC,GAAG,CACR,aAAK,CAAC,GAAG,CAAC,WAAW,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,EAC5D,aAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,MAAO,CAAC,CACnC,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAC9D,OAAO,CAAC,EAAE,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;aACzE;iBAAM;gBACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,MAAO,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;aAC7F;QACF,CAAC;QAEO,4BAA4B,CAAC,WAAqC;YACzE,IAAI,CAAC,WAAW,EAAE;gBACjB,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,WAAW,YAAY,6CAAoB,EAAE;gBAChD,OAAO,gBAAgB,CAAC;aACxB;YACD,IAAI,WAAW,YAAY,+CAAsB,EAAE;gBAClD,OAAO,gBAAgB,CAAC;aACxB;YACD,IAAI,WAAW,YAAY,+CAAsB,EAAE;gBAClD,OAAO,mBAAmB,CAAC;aAC3B;YACD,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAA,GAAA,mBAAO,CAAA,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,EAAE;gBAChE,OAAO,gBAAgB,CAAC;aACxB;YACD,IAAI,CAAA,GAAA,mBAAO,CAAA,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,EAAE;gBACnE,OAAO,mBAAmB,CAAC;aAC3B;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;KACD,CAAA;IAjDY,mBAAmB;QAG7B,WAAA,8BAAc,CAAA;QACd,WAAA,iDAA4B,CAAA;QAC5B,WAAA,qBAAa,CAAA;QACb,WAAA,uCAAwB,CAAA;QACxB,WAAA,mBAAY,CAAA;OAPF,mBAAmB,CAiD/B;IAjDY,kDAAmB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { SettingsEditor2Input, KeybindingsEditorInput, PreferencesEditorInput } from 'vs/workbench/services/preferences/browser/preferencesEditorInput';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { VIEWLET_ID } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IEditorInput } from 'vs/workbench/common/editor';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { IUserDataAutoSyncService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\n\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source => userDataAutoSyncService.triggerSync([source!], true, false)));\n\t\t}\n\t}\n\n\tprivate getUserDataEditorInputSource(editorInput: IEditorInput | undefined): string | undefined {\n\t\tif (!editorInput) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (editorInput instanceof SettingsEditor2Input) {\n\t\t\treturn 'settingsEditor';\n\t\t}\n\t\tif (editorInput instanceof PreferencesEditorInput) {\n\t\t\treturn 'settingsEditor';\n\t\t}\n\t\tif (editorInput instanceof KeybindingsEditorInput) {\n\t\t\treturn 'keybindingsEditor';\n\t\t}\n\t\tconst resource = editorInput.resource;\n\t\tif (isEqual(resource, this.environmentService.settingsResource)) {\n\t\t\treturn 'settingsEditor';\n\t\t}\n\t\tif (isEqual(resource, this.environmentService.keybindingsResource)) {\n\t\t\treturn 'keybindingsEditor';\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n"]}