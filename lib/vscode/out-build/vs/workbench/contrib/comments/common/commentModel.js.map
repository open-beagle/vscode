{"version":3,"sources":["vs/workbench/contrib/comments/common/commentModel.ts"],"names":[],"mappings":"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","file":"commentModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { Comment, CommentThread, CommentThreadChangedEvent } from 'vs/editor/common/modes';\nimport { groupBy, flatten } from 'vs/base/common/arrays';\nimport { localize } from 'vs/nls';\n\nexport interface ICommentThreadChangedEvent extends CommentThreadChangedEvent {\n\towner: string;\n}\n\nexport class CommentNode {\n\towner: string;\n\tthreadId: string;\n\trange: IRange;\n\tcomment: Comment;\n\treplies: CommentNode[] = [];\n\tresource: URI;\n\tisRoot: boolean;\n\n\tconstructor(owner: string, threadId: string, resource: URI, comment: Comment, range: IRange) {\n\t\tthis.owner = owner;\n\t\tthis.threadId = threadId;\n\t\tthis.comment = comment;\n\t\tthis.resource = resource;\n\t\tthis.range = range;\n\t\tthis.isRoot = false;\n\t}\n\n\thasReply(): boolean {\n\t\treturn this.replies && this.replies.length !== 0;\n\t}\n}\n\nexport class ResourceWithCommentThreads {\n\tid: string;\n\towner: string;\n\tcommentThreads: CommentNode[]; // The top level comments on the file. Replys are nested under each node.\n\tresource: URI;\n\n\tconstructor(owner: string, resource: URI, commentThreads: CommentThread[]) {\n\t\tthis.owner = owner;\n\t\tthis.id = resource.toString();\n\t\tthis.resource = resource;\n\t\tthis.commentThreads = commentThreads.filter(thread => thread.comments && thread.comments.length).map(thread => ResourceWithCommentThreads.createCommentNode(owner, resource, thread));\n\t}\n\n\tpublic static createCommentNode(owner: string, resource: URI, commentThread: CommentThread): CommentNode {\n\t\tconst { threadId, comments, range } = commentThread;\n\t\tconst commentNodes: CommentNode[] = comments!.map(comment => new CommentNode(owner, threadId!, resource, comment, range));\n\t\tif (commentNodes.length > 1) {\n\t\t\tcommentNodes[0].replies = commentNodes.slice(1, commentNodes.length);\n\t\t}\n\n\t\tcommentNodes[0].isRoot = true;\n\n\t\treturn commentNodes[0];\n\t}\n}\n\nexport class CommentsModel {\n\tresourceCommentThreads: ResourceWithCommentThreads[];\n\tcommentThreadsMap: Map<string, ResourceWithCommentThreads[]>;\n\n\tconstructor() {\n\t\tthis.resourceCommentThreads = [];\n\t\tthis.commentThreadsMap = new Map<string, ResourceWithCommentThreads[]>();\n\t}\n\n\tpublic setCommentThreads(owner: string, commentThreads: CommentThread[]): void {\n\t\tthis.commentThreadsMap.set(owner, this.groupByResource(owner, commentThreads));\n\t\tthis.resourceCommentThreads = flatten([...this.commentThreadsMap.values()]);\n\t}\n\n\tpublic updateCommentThreads(event: ICommentThreadChangedEvent): boolean {\n\t\tconst { owner, removed, changed, added } = event;\n\n\t\tlet threadsForOwner = this.commentThreadsMap.get(owner) || [];\n\n\t\tremoved.forEach(thread => {\n\t\t\t// Find resource that has the comment thread\n\t\t\tconst matchingResourceIndex = threadsForOwner.findIndex((resourceData) => resourceData.id === thread.resource);\n\t\t\tconst matchingResourceData = threadsForOwner[matchingResourceIndex];\n\n\t\t\t// Find comment node on resource that is that thread and remove it\n\t\t\tconst index = matchingResourceData.commentThreads.findIndex((commentThread) => commentThread.threadId === thread.threadId);\n\t\t\tmatchingResourceData.commentThreads.splice(index, 1);\n\n\t\t\t// If the comment thread was the last thread for a resource, remove that resource from the list\n\t\t\tif (matchingResourceData.commentThreads.length === 0) {\n\t\t\t\tthreadsForOwner.splice(matchingResourceIndex, 1);\n\t\t\t}\n\t\t});\n\n\t\tchanged.forEach(thread => {\n\t\t\t// Find resource that has the comment thread\n\t\t\tconst matchingResourceIndex = threadsForOwner.findIndex((resourceData) => resourceData.id === thread.resource);\n\t\t\tconst matchingResourceData = threadsForOwner[matchingResourceIndex];\n\n\t\t\t// Find comment node on resource that is that thread and replace it\n\t\t\tconst index = matchingResourceData.commentThreads.findIndex((commentThread) => commentThread.threadId === thread.threadId);\n\t\t\tif (index >= 0) {\n\t\t\t\tmatchingResourceData.commentThreads[index] = ResourceWithCommentThreads.createCommentNode(owner, URI.parse(matchingResourceData.id), thread);\n\t\t\t} else if (thread.comments && thread.comments.length) {\n\t\t\t\tmatchingResourceData.commentThreads.push(ResourceWithCommentThreads.createCommentNode(owner, URI.parse(matchingResourceData.id), thread));\n\t\t\t}\n\t\t});\n\n\t\tadded.forEach(thread => {\n\t\t\tconst existingResource = threadsForOwner.filter(resourceWithThreads => resourceWithThreads.resource.toString() === thread.resource);\n\t\t\tif (existingResource.length) {\n\t\t\t\tconst resource = existingResource[0];\n\t\t\t\tif (thread.comments && thread.comments.length) {\n\t\t\t\t\tresource.commentThreads.push(ResourceWithCommentThreads.createCommentNode(owner, resource.resource, thread));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthreadsForOwner.push(new ResourceWithCommentThreads(owner, URI.parse(thread.resource!), [thread]));\n\t\t\t}\n\t\t});\n\n\t\tthis.commentThreadsMap.set(owner, threadsForOwner);\n\t\tthis.resourceCommentThreads = flatten([...this.commentThreadsMap.values()]);\n\n\t\treturn removed.length > 0 || changed.length > 0 || added.length > 0;\n\t}\n\n\tpublic hasCommentThreads(): boolean {\n\t\treturn !!this.resourceCommentThreads.length;\n\t}\n\n\tpublic getMessage(): string {\n\t\tif (!this.resourceCommentThreads.length) {\n\t\t\treturn localize('noComments', \"There are no comments in this workspace yet.\");\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate groupByResource(owner: string, commentThreads: CommentThread[]): ResourceWithCommentThreads[] {\n\t\tconst resourceCommentThreads: ResourceWithCommentThreads[] = [];\n\t\tconst commentThreadsByResource = new Map<string, ResourceWithCommentThreads>();\n\t\tfor (const group of groupBy(commentThreads, CommentsModel._compareURIs)) {\n\t\t\tcommentThreadsByResource.set(group[0].resource!, new ResourceWithCommentThreads(owner, URI.parse(group[0].resource!), group));\n\t\t}\n\n\t\tcommentThreadsByResource.forEach((v, i, m) => {\n\t\t\tresourceCommentThreads.push(v);\n\t\t});\n\n\t\treturn resourceCommentThreads;\n\t}\n\n\tprivate static _compareURIs(a: CommentThread, b: CommentThread) {\n\t\tconst resourceA = a.resource!.toString();\n\t\tconst resourceB = b.resource!.toString();\n\t\tif (resourceA < resourceB) {\n\t\t\treturn -1;\n\t\t} else if (resourceA > resourceB) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"]}