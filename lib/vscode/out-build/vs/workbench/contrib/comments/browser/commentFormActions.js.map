{"version":3,"file":"commentFormActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/comments/browser/commentFormActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,kBAAkB;QAK9B,YACS,SAAsB,EACtB,aAAwC,EACxC,YAA2B;YAF3B,cAAS,GAAT,SAAS,CAAa;YACtB,kBAAa,GAAb,aAAa,CAA2B;YACxC,iBAAY,GAAZ,YAAY,CAAe;YAP5B,oBAAe,GAAkB,EAAE,CAAC;YAC3B,eAAU,GAAG,IAAI,2BAAe,EAAE,CAAC;YAC5C,aAAQ,GAAc,EAAE,CAAC;QAM7B,CAAC;QAEL,UAAU,CAAC,IAAW;YACrB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAExB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAE9C,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5D,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;gBAE1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;gBACxB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACxB,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAE1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA,GAAA,2BAAkB,CAAA,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAEzE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAChC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACH;QACF,CAAC;QAED,oBAAoB;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACzB,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAElC,IAAI,UAAU,CAAC,OAAO,EAAE;oBACvB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;iBAC/B;aACD;QACF,CAAC;QAED,OAAO;YACN,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;KACD;IAhDD,gDAgDC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { IAction } from 'vs/base/common/actions';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { IMenu } from 'vs/platform/actions/common/actions';\nimport { attachButtonStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\nexport class CommentFormActions implements IDisposable {\n\tprivate _buttonElements: HTMLElement[] = [];\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _actions: IAction[] = [];\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate actionHandler: (action: IAction) => void,\n\t\tprivate themeService: IThemeService\n\t) { }\n\n\tsetActions(menu: IMenu) {\n\t\tthis._toDispose.clear();\n\n\t\tthis._buttonElements.forEach(b => b.remove());\n\n\t\tconst groups = menu.getActions({ shouldForwardArgs: true });\n\t\tfor (const group of groups) {\n\t\t\tconst [, actions] = group;\n\n\t\t\tthis._actions = actions;\n\t\t\tactions.forEach(action => {\n\t\t\t\tconst button = new Button(this.container);\n\t\t\t\tthis._buttonElements.push(button.element);\n\n\t\t\t\tthis._toDispose.add(button);\n\t\t\t\tthis._toDispose.add(attachButtonStyler(button, this.themeService));\n\t\t\t\tthis._toDispose.add(button.onDidClick(() => this.actionHandler(action)));\n\n\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\tbutton.label = action.label;\n\t\t\t});\n\t\t}\n\t}\n\n\ttriggerDefaultAction() {\n\t\tif (this._actions.length) {\n\t\t\tlet lastAction = this._actions[0];\n\n\t\t\tif (lastAction.enabled) {\n\t\t\t\tthis.actionHandler(lastAction);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._toDispose.dispose();\n\t}\n}\n"]}