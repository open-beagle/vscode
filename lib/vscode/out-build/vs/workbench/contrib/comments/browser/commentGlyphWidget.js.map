{"version":3,"sources":["vs/workbench/contrib/comments/browser/commentGlyphWidget.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAM,oBAAoB,GAAG,IAAI,aAAK,CAAC,IAAI,YAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAEtD,QAAA,sCAAsC,GAAG,CAAA,GAAA,6BAAa,CAAA,CAAC,qCAAqC,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,KAAK,EAAE,oBAAoB,EAAE,EAAE,EAAE,oBAAoB,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoC,EAAE,IAAuD,CAAC,CAAC,CAAC;IAE/S,MAAa,kBAAkB;QAM9B,YAAY,MAAmB,EAAE,UAAkB;YAH3C,wBAAmB,GAAa,EAAE,CAAC;YAI1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACvD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC;QAEO,uBAAuB;YAC9B,MAAM,iBAAiB,GAA4B;gBAClD,WAAW,EAAE,IAAI;gBACjB,aAAa,EAAE;oBACd,KAAK,EAAE,CAAA,GAAA,+BAAgB,CAAA,CAAC,8CAAsC,CAAC;oBAC/D,QAAQ,EAAE,yBAAiB,CAAC,MAAM;iBAClC;gBACD,yBAAyB,EAAE,oCAAoC;aAC/D,CAAC;YAEF,OAAO,kCAAsB,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAChE,CAAC;QAED,aAAa,CAAC,UAAkB;YAC/B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,mBAAmB,GAAG,CAAC;oBAC1B,KAAK,EAAE;wBACN,eAAe,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC;wBAC3C,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;qBACvC;oBACD,OAAO,EAAE,IAAI,CAAC,gBAAgB;iBAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;QACzG,CAAC;QAED,WAAW;YACV,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM;gBACnG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACzE,CAAC,CAAC,IAAI,CAAC;YAER,OAAO;gBACN,QAAQ,EAAE;oBACT,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;oBAC5D,MAAM,EAAE,CAAC;iBACT;gBACD,UAAU,EAAE,eAAuC;aACnD,CAAC;QACH,CAAC;QAED,OAAO;YACN,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;aAC5D;QACF,CAAC;KACD;IAzDD,gDAyDC","file":"commentGlyphWidget.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { IModelDecorationOptions, OverviewRulerLane } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\n\nconst overviewRulerDefault = new Color(new RGBA(197, 197, 197, 1));\n\nexport const overviewRulerCommentingRangeForeground = registerColor('editorGutter.commentRangeForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('editorGutterCommentRangeForeground', 'Editor gutter decoration color for commenting ranges.'));\n\nexport class CommentGlyphWidget {\n\tprivate _lineNumber!: number;\n\tprivate _editor: ICodeEditor;\n\tprivate commentsDecorations: string[] = [];\n\tprivate _commentsOptions: ModelDecorationOptions;\n\n\tconstructor(editor: ICodeEditor, lineNumber: number) {\n\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\tthis._editor = editor;\n\t\tthis.setLineNumber(lineNumber);\n\t}\n\n\tprivate createDecorationOptions(): ModelDecorationOptions {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tisWholeLine: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(overviewRulerCommentingRangeForeground),\n\t\t\t\tposition: OverviewRulerLane.Center\n\t\t\t},\n\t\t\tlinesDecorationsClassName: `comment-range-glyph comment-thread`\n\t\t};\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tsetLineNumber(lineNumber: number): void {\n\t\tthis._lineNumber = lineNumber;\n\t\tlet commentsDecorations = [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber, startColumn: 1,\n\t\t\t\tendLineNumber: lineNumber, endColumn: 1\n\t\t\t},\n\t\t\toptions: this._commentsOptions\n\t\t}];\n\n\t\tthis.commentsDecorations = this._editor.deltaDecorations(this.commentsDecorations, commentsDecorations);\n\t}\n\n\tgetPosition(): IContentWidgetPosition {\n\t\tconst range = this._editor.hasModel() && this.commentsDecorations && this.commentsDecorations.length\n\t\t\t? this._editor.getModel().getDecorationRange(this.commentsDecorations[0])\n\t\t\t: null;\n\n\t\treturn {\n\t\t\tposition: {\n\t\t\t\tlineNumber: range ? range.startLineNumber : this._lineNumber,\n\t\t\t\tcolumn: 1\n\t\t\t},\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\tdispose() {\n\t\tif (this.commentsDecorations) {\n\t\t\tthis._editor.deltaDecorations(this.commentsDecorations, []);\n\t\t}\n\t}\n}\n"]}