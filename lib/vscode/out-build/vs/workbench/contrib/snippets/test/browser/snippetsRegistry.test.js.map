{"version":3,"file":"snippetsRegistry.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/snippets/test/browser/snippetsRegistry.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { getNonWhitespacePrefix } from 'vs/workbench/contrib/snippets/browser/snippetsService';\nimport { Position } from 'vs/editor/common/core/position';\n\nsuite('getNonWhitespacePrefix', () => {\n\n\tfunction assertGetNonWhitespacePrefix(line: string, column: number, expected: string): void {\n\t\tlet model = {\n\t\t\tgetLineContent: (lineNumber: number) => line\n\t\t};\n\t\tlet actual = getNonWhitespacePrefix(model, new Position(1, column));\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\ttest('empty line', () => {\n\t\tassertGetNonWhitespacePrefix('', 1, '');\n\t});\n\n\ttest('singleWordLine', () => {\n\t\tassertGetNonWhitespacePrefix('something', 1, '');\n\t\tassertGetNonWhitespacePrefix('something', 2, 's');\n\t\tassertGetNonWhitespacePrefix('something', 3, 'so');\n\t\tassertGetNonWhitespacePrefix('something', 4, 'som');\n\t\tassertGetNonWhitespacePrefix('something', 5, 'some');\n\t\tassertGetNonWhitespacePrefix('something', 6, 'somet');\n\t\tassertGetNonWhitespacePrefix('something', 7, 'someth');\n\t\tassertGetNonWhitespacePrefix('something', 8, 'somethi');\n\t\tassertGetNonWhitespacePrefix('something', 9, 'somethin');\n\t\tassertGetNonWhitespacePrefix('something', 10, 'something');\n\t});\n\n\ttest('two word line', () => {\n\t\tassertGetNonWhitespacePrefix('something interesting', 1, '');\n\t\tassertGetNonWhitespacePrefix('something interesting', 2, 's');\n\t\tassertGetNonWhitespacePrefix('something interesting', 3, 'so');\n\t\tassertGetNonWhitespacePrefix('something interesting', 4, 'som');\n\t\tassertGetNonWhitespacePrefix('something interesting', 5, 'some');\n\t\tassertGetNonWhitespacePrefix('something interesting', 6, 'somet');\n\t\tassertGetNonWhitespacePrefix('something interesting', 7, 'someth');\n\t\tassertGetNonWhitespacePrefix('something interesting', 8, 'somethi');\n\t\tassertGetNonWhitespacePrefix('something interesting', 9, 'somethin');\n\t\tassertGetNonWhitespacePrefix('something interesting', 10, 'something');\n\t\tassertGetNonWhitespacePrefix('something interesting', 11, '');\n\t\tassertGetNonWhitespacePrefix('something interesting', 12, 'i');\n\t\tassertGetNonWhitespacePrefix('something interesting', 13, 'in');\n\t\tassertGetNonWhitespacePrefix('something interesting', 14, 'int');\n\t\tassertGetNonWhitespacePrefix('something interesting', 15, 'inte');\n\t\tassertGetNonWhitespacePrefix('something interesting', 16, 'inter');\n\t\tassertGetNonWhitespacePrefix('something interesting', 17, 'intere');\n\t\tassertGetNonWhitespacePrefix('something interesting', 18, 'interes');\n\t\tassertGetNonWhitespacePrefix('something interesting', 19, 'interest');\n\t\tassertGetNonWhitespacePrefix('something interesting', 20, 'interesti');\n\t\tassertGetNonWhitespacePrefix('something interesting', 21, 'interestin');\n\t\tassertGetNonWhitespacePrefix('something interesting', 22, 'interesting');\n\t});\n\n\ttest('many separators', () => {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions#special-white-space\n\t\t// \\s matches a single white space character, including space, tab, form feed, line feed.\n\t\t// Equivalent to [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff].\n\n\t\tassertGetNonWhitespacePrefix('something interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\tinteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\finteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\vinteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u00a0interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u2000interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u2028interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u3000interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\ufeffinteresting', 22, 'interesting');\n\n\t});\n});\n"]}