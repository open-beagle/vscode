{"version":3,"sources":["vs/workbench/contrib/snippets/browser/snippetsService.ts"],"names":[],"mappings":"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","file":"snippetsService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { combinedDisposable, IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport * as resources from 'vs/base/common/resources';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { LanguageId } from 'vs/editor/common/modes';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { setSnippetSuggestSupport } from 'vs/editor/contrib/suggest/suggest';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileChangeType, IFileService } from 'vs/platform/files/common/files';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWorkspace, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ISnippetGetOptions, ISnippetsService } from 'vs/workbench/contrib/snippets/browser/snippets.contribution';\nimport { Snippet, SnippetFile, SnippetSource } from 'vs/workbench/contrib/snippets/browser/snippetsFile';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { languagesExtPoint } from 'vs/workbench/services/mode/common/workbenchModeService';\nimport { SnippetCompletionProvider } from './snippetCompletionProvider';\nimport { IExtensionResourceLoaderService } from 'vs/workbench/services/extensionResourceLoader/common/extensionResourceLoader';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { isStringArray } from 'vs/base/common/types';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\n\nnamespace snippetExt {\n\n\texport interface ISnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tpath: string;\n\t}\n\n\texport interface IValidSnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tlocation: URI;\n\t}\n\n\texport function toValidSnippet(extension: IExtensionPointUser<ISnippetsExtensionPoint[]>, snippet: ISnippetsExtensionPoint, modeService: IModeService): IValidSnippetsExtensionPoint | null {\n\n\t\tif (isFalsyOrWhitespace(snippet.path)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.path.0',\n\t\t\t\t\"Expected string in `contributes.{0}.path`. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.path)\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\tif (isFalsyOrWhitespace(snippet.language) && !snippet.path.endsWith('.code-snippets')) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.language.0',\n\t\t\t\t\"When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.path)\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!isFalsyOrWhitespace(snippet.language) && !modeService.isRegisteredMode(snippet.language)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.language',\n\t\t\t\t\"Unknown language in `contributes.{0}.language`. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.language)\n\t\t\t));\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extensionLocation = extension.description.extensionLocation;\n\t\tconst snippetLocation = resources.joinPath(extensionLocation, snippet.path);\n\t\tif (!resources.isEqualOrParent(snippetLocation, extensionLocation)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.path.1',\n\t\t\t\t\"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n\t\t\t\textension.description.name, snippetLocation.path, extensionLocation.path\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tlanguage: snippet.language,\n\t\t\tlocation: snippetLocation\n\t\t};\n\t}\n\n\texport const snippetsContribution: IJSONSchema = {\n\t\tdescription: localize('vscode.extension.contributes.snippets', 'Contributes snippets.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ language: '', path: '' }] }],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { language: '${1:id}', path: './snippets/${2:id}.json.' } }],\n\t\t\tproperties: {\n\t\t\t\tlanguage: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.snippets-language', 'Language identifier for which this snippet is contributed to.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.snippets-path', 'Path of the snippets file. The path is relative to the extension folder and typically starts with \\'./snippets/\\'.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\texport const point = ExtensionsRegistry.registerExtensionPoint<snippetExt.ISnippetsExtensionPoint[]>({\n\t\textensionPoint: 'snippets',\n\t\tdeps: [languagesExtPoint],\n\t\tjsonSchema: snippetExt.snippetsContribution\n\t});\n}\n\nfunction watch(service: IFileService, resource: URI, callback: () => any): IDisposable {\n\treturn combinedDisposable(\n\t\tservice.watch(resource),\n\t\tservice.onDidFilesChange(e => {\n\t\t\tif (e.affects(resource)) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t})\n\t);\n}\n\nclass SnippetEnablement {\n\n\tprivate static _key = 'snippets.ignoredSnippets';\n\n\tprivate readonly _ignored: Set<string>;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\n\t\tconst raw = _storageService.get(SnippetEnablement._key, StorageScope.GLOBAL, '');\n\t\tlet data: string[] | undefined;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch { }\n\n\t\tthis._ignored = isStringArray(data) ? new Set(data) : new Set();\n\t}\n\n\tisIgnored(id: string): boolean {\n\t\treturn this._ignored.has(id);\n\t}\n\n\tupdateIgnored(id: string, value: boolean): void {\n\t\tlet changed = false;\n\t\tif (this._ignored.has(id) && !value) {\n\t\t\tthis._ignored.delete(id);\n\t\t\tchanged = true;\n\t\t} else if (!this._ignored.has(id) && value) {\n\t\t\tthis._ignored.add(id);\n\t\t\tchanged = true;\n\t\t}\n\t\tif (changed) {\n\t\t\tthis._storageService.store(SnippetEnablement._key, JSON.stringify(Array.from(this._ignored)), StorageScope.GLOBAL, StorageTarget.USER);\n\t\t}\n\t}\n}\n\nclass SnippetsService implements ISnippetsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _pendingWork: Promise<any>[] = [];\n\tprivate readonly _files = new ResourceMap<SnippetFile>();\n\tprivate readonly _enablement: SnippetEnablement;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextFileService private readonly _textfileService: ITextFileService,\n\t\t@IExtensionResourceLoaderService private readonly _extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tthis._pendingWork.push(Promise.resolve(lifecycleService.when(LifecyclePhase.Restored).then(() => {\n\t\t\tthis._initExtensionSnippets();\n\t\t\tthis._initUserSnippets();\n\t\t\tthis._initWorkspaceSnippets();\n\t\t})));\n\n\t\tsetSnippetSuggestSupport(new SnippetCompletionProvider(this._modeService, this));\n\n\t\tthis._enablement = instantiationService.createInstance(SnippetEnablement);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tisEnabled(snippet: Snippet): boolean {\n\t\treturn !snippet.snippetIdentifier || !this._enablement.isIgnored(snippet.snippetIdentifier);\n\t}\n\n\tupdateEnablement(snippet: Snippet, enabled: boolean): void {\n\t\tif (snippet.snippetIdentifier) {\n\t\t\tthis._enablement.updateIgnored(snippet.snippetIdentifier, !enabled);\n\t\t}\n\t}\n\n\tprivate _joinSnippets(): Promise<any> {\n\t\tconst promises = this._pendingWork.slice(0);\n\t\tthis._pendingWork.length = 0;\n\t\treturn Promise.all(promises);\n\t}\n\n\tasync getSnippetFiles(): Promise<Iterable<SnippetFile>> {\n\t\tawait this._joinSnippets();\n\t\treturn this._files.values();\n\t}\n\n\tasync getSnippets(languageId: LanguageId, opts?: ISnippetGetOptions): Promise<Snippet[]> {\n\t\tawait this._joinSnippets();\n\n\t\tconst result: Snippet[] = [];\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tconst languageIdentifier = this._modeService.getLanguageIdentifier(languageId);\n\t\tif (languageIdentifier) {\n\t\t\tconst langName = languageIdentifier.language;\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\tpromises.push(file.load()\n\t\t\t\t\t.then(file => file.select(langName, result))\n\t\t\t\t\t.catch(err => this._logService.error(err, file.location.toString()))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(promises);\n\t\treturn this._filterSnippets(result, opts);\n\t}\n\n\tgetSnippetsSync(languageId: LanguageId, opts?: ISnippetGetOptions): Snippet[] {\n\t\tconst result: Snippet[] = [];\n\t\tconst languageIdentifier = this._modeService.getLanguageIdentifier(languageId);\n\t\tif (languageIdentifier) {\n\t\t\tconst langName = languageIdentifier.language;\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\t// kick off loading (which is a noop in case it's already loaded)\n\t\t\t\t// and optimistically collect snippets\n\t\t\t\tfile.load().catch(_err => { /*ignore*/ });\n\t\t\t\tfile.select(langName, result);\n\t\t\t}\n\t\t}\n\t\treturn this._filterSnippets(result, opts);\n\t}\n\n\tprivate _filterSnippets(snippets: Snippet[], opts?: ISnippetGetOptions): Snippet[] {\n\t\treturn snippets.filter(snippet => {\n\t\t\treturn (snippet.prefix || opts?.includeNoPrefixSnippets) // prefix or no-prefix wanted\n\t\t\t\t&& (this.isEnabled(snippet) || opts?.includeDisabledSnippets); // enabled or disabled wanted\n\t\t});\n\t}\n\n\t// --- loading, watching\n\n\tprivate _initExtensionSnippets(): void {\n\t\tsnippetExt.point.setHandler(extensions => {\n\n\t\t\tfor (const [key, value] of this._files) {\n\t\t\t\tif (value.source === SnippetSource.Extension) {\n\t\t\t\t\tthis._files.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tfor (const contribution of extension.value) {\n\t\t\t\t\tconst validContribution = snippetExt.toValidSnippet(extension, contribution, this._modeService);\n\t\t\t\t\tif (!validContribution) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst file = this._files.get(validContribution.location);\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tif (file.defaultScopes) {\n\t\t\t\t\t\t\tfile.defaultScopes.push(validContribution.language);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfile.defaultScopes = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst file = new SnippetFile(SnippetSource.Extension, validContribution.location, validContribution.language ? [validContribution.language] : undefined, extension.description, this._fileService, this._extensionResourceLoaderService);\n\t\t\t\t\t\tthis._files.set(file.location, file);\n\n\t\t\t\t\t\tif (this._environmentService.isExtensionDevelopment) {\n\t\t\t\t\t\t\tfile.load().then(file => {\n\t\t\t\t\t\t\t\t// warn about bad tabstop/variable usage\n\t\t\t\t\t\t\t\tif (file.data.some(snippet => snippet.isBogous)) {\n\t\t\t\t\t\t\t\t\textension.collector.warn(localize(\n\t\t\t\t\t\t\t\t\t\t'badVariableUse',\n\t\t\t\t\t\t\t\t\t\t\"One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)\",\n\t\t\t\t\t\t\t\t\t\textension.description.name\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, err => {\n\t\t\t\t\t\t\t\t// generic error\n\t\t\t\t\t\t\t\textension.collector.warn(localize(\n\t\t\t\t\t\t\t\t\t'badFile',\n\t\t\t\t\t\t\t\t\t\"The snippet file \\\"{0}\\\" could not be read.\",\n\t\t\t\t\t\t\t\t\tfile.location.toString()\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _initWorkspaceSnippets(): void {\n\t\t// workspace stuff\n\t\tlet disposables = new DisposableStore();\n\t\tlet updateWorkspaceSnippets = () => {\n\t\t\tdisposables.clear();\n\t\t\tthis._pendingWork.push(this._initWorkspaceFolderSnippets(this._contextService.getWorkspace(), disposables));\n\t\t};\n\t\tthis._disposables.add(disposables);\n\t\tthis._disposables.add(this._contextService.onDidChangeWorkspaceFolders(updateWorkspaceSnippets));\n\t\tthis._disposables.add(this._contextService.onDidChangeWorkbenchState(updateWorkspaceSnippets));\n\t\tupdateWorkspaceSnippets();\n\t}\n\n\tprivate async _initWorkspaceFolderSnippets(workspace: IWorkspace, bucket: DisposableStore): Promise<any> {\n\t\tconst promises = workspace.folders.map(async folder => {\n\t\t\tconst snippetFolder = folder.toResource('.vscode');\n\t\t\tconst value = await this._fileService.exists(snippetFolder);\n\t\t\tif (value) {\n\t\t\t\tthis._initFolderSnippets(SnippetSource.Workspace, snippetFolder, bucket);\n\t\t\t} else {\n\t\t\t\t// watch\n\t\t\t\tbucket.add(this._fileService.onDidFilesChange(e => {\n\t\t\t\t\tif (e.contains(snippetFolder, FileChangeType.ADDED)) {\n\t\t\t\t\t\tthis._initFolderSnippets(SnippetSource.Workspace, snippetFolder, bucket);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t\tawait Promise.all(promises);\n\t}\n\n\tprivate async _initUserSnippets(): Promise<any> {\n\t\tconst userSnippetsFolder = this._environmentService.snippetsHome;\n\t\tawait this._fileService.createFolder(userSnippetsFolder);\n\t\treturn await this._initFolderSnippets(SnippetSource.User, userSnippetsFolder, this._disposables);\n\t}\n\n\tprivate _initFolderSnippets(source: SnippetSource, folder: URI, bucket: DisposableStore): Promise<any> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst addFolderSnippets = async () => {\n\t\t\tdisposables.clear();\n\t\t\tif (!await this._fileService.exists(folder)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst stat = await this._fileService.resolve(folder);\n\t\t\t\tfor (const entry of stat.children || []) {\n\t\t\t\t\tdisposables.add(this._addSnippetFile(entry.resource, source));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis._logService.error(`Failed snippets from folder '${folder.toString()}'`, err);\n\t\t\t}\n\t\t};\n\n\t\tbucket.add(this._textfileService.files.onDidSave(e => {\n\t\t\tif (resources.isEqualOrParent(e.model.resource, folder)) {\n\t\t\t\taddFolderSnippets();\n\t\t\t}\n\t\t}));\n\t\tbucket.add(watch(this._fileService, folder, addFolderSnippets));\n\t\tbucket.add(disposables);\n\t\treturn addFolderSnippets();\n\t}\n\n\tprivate _addSnippetFile(uri: URI, source: SnippetSource): IDisposable {\n\t\tconst ext = resources.extname(uri);\n\t\tif (source === SnippetSource.User && ext === '.json') {\n\t\t\tconst langName = resources.basename(uri).replace(/\\.json/, '');\n\t\t\tthis._files.set(uri, new SnippetFile(source, uri, [langName], undefined, this._fileService, this._extensionResourceLoaderService));\n\t\t} else if (ext === '.code-snippets') {\n\t\t\tthis._files.set(uri, new SnippetFile(source, uri, undefined, undefined, this._fileService, this._extensionResourceLoaderService));\n\t\t}\n\t\treturn {\n\t\t\tdispose: () => this._files.delete(uri)\n\t\t};\n\t}\n}\n\nregisterSingleton(ISnippetsService, SnippetsService, true);\n\nexport interface ISimpleModel {\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport function getNonWhitespacePrefix(model: ISimpleModel, position: Position): string {\n\t/**\n\t * Do not analyze more characters\n\t */\n\tconst MAX_PREFIX_LENGTH = 100;\n\n\tlet line = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\n\tlet minChIndex = Math.max(0, line.length - MAX_PREFIX_LENGTH);\n\tfor (let chIndex = line.length - 1; chIndex >= minChIndex; chIndex--) {\n\t\tlet ch = line.charAt(chIndex);\n\n\t\tif (/\\s/.test(ch)) {\n\t\t\treturn line.substr(chIndex + 1);\n\t\t}\n\t}\n\n\tif (minChIndex === 0) {\n\t\treturn line;\n\t}\n\n\treturn '';\n}\n"]}