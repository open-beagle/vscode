{"version":3,"file":"startupTimings.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/performance/electron-sandbox/startupTimings.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { timeout } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { ILifecycleService, StartupKind, StartupKindToString } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport * as files from 'vs/workbench/contrib/files/common/files';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { didUseCachedData } from 'vs/workbench/services/timer/electron-sandbox/timerService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport class StartupTimings implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IViewletService private readonly _viewletService: IViewletService,\n\t\t@IPanelService private readonly _panelService: IPanelService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IUpdateService private readonly _updateService: IUpdateService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService\n\t) {\n\t\t//\n\t\tthis._report().catch(onUnexpectedError);\n\t}\n\n\tprivate async _report() {\n\t\tconst standardStartupError = await this._isStandardStartup();\n\t\tthis._appendStartupTimes(standardStartupError).catch(onUnexpectedError);\n\t}\n\n\tprivate async _appendStartupTimes(standardStartupError: string | undefined) {\n\t\tconst appendTo = this._environmentService.args['prof-append-timers'];\n\t\tif (!appendTo) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sessionId } = await this._telemetryService.getTelemetryInfo();\n\n\t\tPromise.all([\n\t\t\tthis._timerService.whenReady(),\n\t\t\ttimeout(15000), // wait: cached data creation, telemetry sending\n\t\t]).then(async () => {\n\t\t\tconst uri = URI.file(appendTo);\n\t\t\tconst chunks: VSBuffer[] = [];\n\t\t\tif (await this._fileService.exists(uri)) {\n\t\t\t\tchunks.push((await this._fileService.readFile(uri)).value);\n\t\t\t}\n\t\t\tchunks.push(VSBuffer.fromString(`${this._timerService.startupMetrics.ellapsed}\\t${this._productService.nameShort}\\t${(this._productService.commit || '').slice(0, 10) || '0000000000'}\\t${sessionId}\\t${standardStartupError === undefined ? 'standard_start' : 'NO_standard_start : ' + standardStartupError}\\n`));\n\t\t\tawait this._fileService.writeFile(uri, VSBuffer.concat(chunks));\n\t\t}).then(() => {\n\t\t\tthis._nativeHostService.quit();\n\t\t}).catch(err => {\n\t\t\tconsole.error(err);\n\t\t\tthis._nativeHostService.quit();\n\t\t});\n\t}\n\n\tprivate async _isStandardStartup(): Promise<string | undefined> {\n\t\t// check for standard startup:\n\t\t// * new window (no reload)\n\t\t// * just one window\n\t\t// * explorer viewlet visible\n\t\t// * one text editor (not multiple, not webview, welcome etc...)\n\t\t// * cached data present (not rejected, not created)\n\t\tif (this._lifecycleService.startupKind !== StartupKind.NewWindow) {\n\t\t\treturn StartupKindToString(this._lifecycleService.startupKind);\n\t\t}\n\t\tconst windowCount = await this._nativeHostService.getWindowCount();\n\t\tif (windowCount !== 1) {\n\t\t\treturn 'Expected window count : 1, Actual : ' + windowCount;\n\t\t}\n\t\tconst activeViewlet = this._viewletService.getActiveViewlet();\n\t\tif (!activeViewlet || activeViewlet.getId() !== files.VIEWLET_ID) {\n\t\t\treturn 'Explorer viewlet not visible';\n\t\t}\n\t\tconst visibleEditorPanes = this._editorService.visibleEditorPanes;\n\t\tif (visibleEditorPanes.length !== 1) {\n\t\t\treturn 'Expected text editor count : 1, Actual : ' + visibleEditorPanes.length;\n\t\t}\n\t\tif (!isCodeEditor(visibleEditorPanes[0].getControl())) {\n\t\t\treturn 'Active editor is not a text editor';\n\t\t}\n\t\tconst activePanel = this._panelService.getActivePanel();\n\t\tif (activePanel) {\n\t\t\treturn 'Current active panel : ' + this._panelService.getPanel(activePanel.getId())?.name;\n\t\t}\n\t\tif (!didUseCachedData()) {\n\t\t\treturn 'Either cache data is rejected or not created';\n\t\t}\n\t\tif (!await this._updateService.isLatestVersion()) {\n\t\t\treturn 'Not on latest version, updates available';\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"]}