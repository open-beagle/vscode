{"version":3,"sources":["vs/workbench/contrib/debug/browser/variablesView.ts"],"names":[],"mappings":"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","file":"variablesView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as dom from 'vs/base/browser/dom';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IDebugService, IExpression, IScope, CONTEXT_VARIABLES_FOCUSED, IStackFrame, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, IDataBreakpointInfoResponse, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, VARIABLES_VIEW_ID, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED } from 'vs/workbench/contrib/debug/common/debug';\nimport { Variable, Scope, ErrorScope, StackFrame, Expression } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { renderViewTree, renderVariable, IInputBoxOptions, AbstractExpressionsRenderer, IExpressionTemplateData } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { IAction } from 'vs/base/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ViewPane, ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { ITreeRenderer, ITreeNode, ITreeMouseEvent, ITreeContextMenuEvent, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IAsyncDataTreeViewState } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { FuzzyScore, createMatches } from 'vs/base/common/filters';\nimport { HighlightedLabel, IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IContextKeyService, IContextKey, ContextKeyEqualsExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\nimport { IMenuService, IMenu, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { localize } from 'vs/nls';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { coalesce } from 'vs/base/common/arrays';\n\nconst $ = dom.$;\nlet forgetScopes = true;\n\nlet variableInternalContext: Variable | undefined;\nlet dataBreakpointInfoResponse: IDataBreakpointInfoResponse | undefined;\n\ninterface IVariablesContext {\n\tcontainer: DebugProtocol.Variable | DebugProtocol.Scope;\n\tvariable: DebugProtocol.Variable;\n}\n\nexport class VariablesView extends ViewPane {\n\n\tprivate updateTreeScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate tree!: WorkbenchAsyncDataTree<IStackFrame | null, IExpression | IScope, FuzzyScore>;\n\tprivate savedViewState = new Map<string, IAsyncDataTreeViewState>();\n\tprivate autoExpandedScopes = new Set<string>();\n\tprivate menu: IMenu;\n\tprivate debugProtocolVariableMenuContext: IContextKey<string>;\n\tprivate breakWhenValueChangesSupported: IContextKey<boolean>;\n\tprivate breakWhenValueIsAccessedSupported: IContextKey<boolean>;\n\tprivate breakWhenValueIsReadSupported: IContextKey<boolean>;\n\tprivate variableEvaluateName: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IMenuService menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis.menu = menuService.createMenu(MenuId.DebugVariablesContext, contextKeyService);\n\t\tthis._register(this.menu);\n\t\tthis.debugProtocolVariableMenuContext = CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT.bindTo(contextKeyService);\n\t\tthis.breakWhenValueChangesSupported = CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED.bindTo(contextKeyService);\n\t\tthis.breakWhenValueIsAccessedSupported = CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED.bindTo(contextKeyService);\n\t\tthis.breakWhenValueIsReadSupported = CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED.bindTo(contextKeyService);\n\t\tthis.variableEvaluateName = CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT.bindTo(contextKeyService);\n\n\t\t// Use scheduler to prevent unnecessary flashing\n\t\tthis.updateTreeScheduler = new RunOnceScheduler(async () => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\n\t\t\tthis.needsRefresh = false;\n\t\t\tconst input = this.tree.getInput();\n\t\t\tif (input) {\n\t\t\t\tthis.savedViewState.set(input.getId(), this.tree.getViewState());\n\t\t\t}\n\t\t\tif (!stackFrame) {\n\t\t\t\tawait this.tree.setInput(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewState = this.savedViewState.get(stackFrame.getId());\n\t\t\tawait this.tree.setInput(stackFrame, viewState);\n\n\t\t\t// Automatically expand the first scope if it is not expensive and if all scopes are collapsed\n\t\t\tconst scopes = await stackFrame.getScopes();\n\t\t\tconst toExpand = scopes.find(s => !s.expensive);\n\t\t\tif (toExpand && (scopes.every(s => this.tree.isCollapsed(s)) || !this.autoExpandedScopes.has(toExpand.getId()))) {\n\t\t\t\tthis.autoExpandedScopes.add(toExpand.getId());\n\t\t\t\tawait this.tree.expand(toExpand);\n\t\t\t}\n\t\t}, 400);\n\t}\n\n\toverride renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add('debug-pane');\n\t\tcontainer.classList.add('debug-variables');\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tthis.tree = <WorkbenchAsyncDataTree<IStackFrame | null, IExpression | IScope, FuzzyScore>>this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'VariablesView', treeContainer, new VariablesDelegate(),\n\t\t\t[this.instantiationService.createInstance(VariablesRenderer), new ScopesRenderer(), new ScopeErrorRenderer()],\n\t\t\tnew VariablesDataSource(), {\n\t\t\taccessibilityProvider: new VariablesAccessibilityProvider(),\n\t\t\tidentityProvider: { getId: (element: IExpression | IScope) => element.getId() },\n\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IExpression | IScope) => e },\n\t\t\toverrideStyles: {\n\t\t\t\tlistBackground: this.getBackgroundColor()\n\t\t\t}\n\t\t});\n\n\t\tthis.tree.setInput(withUndefinedAsNull(this.debugService.getViewModel().focusedStackFrame));\n\n\t\tCONTEXT_VARIABLES_FOCUSED.bindTo(this.tree.contextKeyService);\n\n\t\tthis._register(this.debugService.getViewModel().onDidFocusStackFrame(sf => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Refresh the tree immediately if the user explictly changed stack frames.\n\t\t\t// Otherwise postpone the refresh until user stops stepping.\n\t\t\tconst timeout = sf.explicit ? 0 : undefined;\n\t\t\tthis.updateTreeScheduler.schedule(timeout);\n\t\t}));\n\t\tthis._register(this.debugService.getViewModel().onWillUpdateViews(() => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\tif (stackFrame && forgetScopes) {\n\t\t\t\tstackFrame.forgetScopes();\n\t\t\t}\n\t\t\tforgetScopes = true;\n\t\t\tthis.tree.updateChildren();\n\t\t}));\n\t\tthis._register(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis._register(this.tree.onContextMenu(async e => await this.onContextMenu(e)));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.updateTreeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tlet horizontalScrolling: boolean | undefined;\n\t\tthis._register(this.debugService.getViewModel().onDidSelectExpression(e => {\n\t\t\tif (e instanceof Variable) {\n\t\t\t\thorizontalScrolling = this.tree.options.horizontalScrolling;\n\t\t\t\tif (horizontalScrolling) {\n\t\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t\t}\n\n\t\t\t\tthis.tree.rerender(e);\n\t\t\t} else if (!e && horizontalScrolling !== undefined) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: horizontalScrolling });\n\t\t\t\thorizontalScrolling = undefined;\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.debugService.onDidEndSession(() => {\n\t\t\tthis.savedViewState.clear();\n\t\t\tthis.autoExpandedScopes.clear();\n\t\t}));\n\t}\n\n\toverride layoutBody(width: number, height: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(width, height);\n\t}\n\n\toverride focus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate onMouseDblClick(e: ITreeMouseEvent<IExpression | IScope>): void {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tif (session && e.element instanceof Variable && session.capabilities.supportsSetVariable) {\n\t\t\tthis.debugService.getViewModel().setSelectedExpression(e.element);\n\t\t}\n\t}\n\n\tprivate async onContextMenu(e: ITreeContextMenuEvent<IExpression | IScope>): Promise<void> {\n\t\tconst variable = e.element;\n\t\tif (variable instanceof Variable && !!variable.value) {\n\t\t\tthis.debugProtocolVariableMenuContext.set(variable.variableMenuContext || '');\n\t\t\tvariableInternalContext = variable;\n\t\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\t\tthis.variableEvaluateName.set(!!variable.evaluateName);\n\t\t\tthis.breakWhenValueChangesSupported.reset();\n\t\t\tthis.breakWhenValueIsAccessedSupported.reset();\n\t\t\tthis.breakWhenValueIsReadSupported.reset();\n\t\t\tif (session && session.capabilities.supportsDataBreakpoints) {\n\t\t\t\tdataBreakpointInfoResponse = await session.dataBreakpointInfo(variable.name, variable.parent.reference);\n\t\t\t\tconst dataBreakpointId = dataBreakpointInfoResponse?.dataId;\n\t\t\t\tconst dataBreakpointAccessTypes = dataBreakpointInfoResponse?.accessTypes;\n\t\t\t\tif (!dataBreakpointAccessTypes) {\n\t\t\t\t\t// Assumes default behaviour: Supports breakWhenValueChanges\n\t\t\t\t\tthis.breakWhenValueChangesSupported.set(!!dataBreakpointId);\n\t\t\t\t} else {\n\t\t\t\t\tdataBreakpointAccessTypes.forEach(accessType => {\n\t\t\t\t\t\tswitch (accessType) {\n\t\t\t\t\t\t\tcase 'read':\n\t\t\t\t\t\t\t\tthis.breakWhenValueIsReadSupported.set(!!dataBreakpointId);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'write':\n\t\t\t\t\t\t\t\tthis.breakWhenValueChangesSupported.set(!!dataBreakpointId);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'readWrite':\n\t\t\t\t\t\t\t\tthis.breakWhenValueIsAccessedSupported.set(!!dataBreakpointId);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst context: IVariablesContext = {\n\t\t\t\tcontainer: (variable.parent as (Variable | Scope)).toDebugProtocolObject(),\n\t\t\t\tvariable: variable.toDebugProtocolObject()\n\t\t\t};\n\t\t\tconst actions: IAction[] = [];\n\t\t\tconst actionsDisposable = createAndFillInContextMenuActions(this.menu, { arg: context, shouldForwardArgs: false }, actions);\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => dispose(actionsDisposable)\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction isStackFrame(obj: any): obj is IStackFrame {\n\treturn obj instanceof StackFrame;\n}\n\nexport class VariablesDataSource implements IAsyncDataSource<IStackFrame | null, IExpression | IScope> {\n\n\thasChildren(element: IStackFrame | null | IExpression | IScope): boolean {\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\t\tif (isStackFrame(element)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn element.hasChildren;\n\t}\n\n\tgetChildren(element: IStackFrame | IExpression | IScope): Promise<(IExpression | IScope)[]> {\n\t\tif (isStackFrame(element)) {\n\t\t\treturn element.getScopes();\n\t\t}\n\n\t\treturn element.getChildren();\n\t}\n}\n\ninterface IScopeTemplateData {\n\tname: HTMLElement;\n\tlabel: HighlightedLabel;\n}\n\nclass VariablesDelegate implements IListVirtualDelegate<IExpression | IScope> {\n\n\tgetHeight(element: IExpression | IScope): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IExpression | IScope): string {\n\t\tif (element instanceof ErrorScope) {\n\t\t\treturn ScopeErrorRenderer.ID;\n\t\t}\n\n\t\tif (element instanceof Scope) {\n\t\t\treturn ScopesRenderer.ID;\n\t\t}\n\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\nclass ScopesRenderer implements ITreeRenderer<IScope, FuzzyScore, IScopeTemplateData> {\n\n\tstatic readonly ID = 'scope';\n\n\tget templateId(): string {\n\t\treturn ScopesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IScopeTemplateData {\n\t\tconst name = dom.append(container, $('.scope'));\n\t\tconst label = new HighlightedLabel(name, false);\n\n\t\treturn { name, label };\n\t}\n\n\trenderElement(element: ITreeNode<IScope, FuzzyScore>, index: number, templateData: IScopeTemplateData): void {\n\t\ttemplateData.label.set(element.element.name, createMatches(element.filterData));\n\t}\n\n\tdisposeTemplate(templateData: IScopeTemplateData): void {\n\t\t// noop\n\t}\n}\n\ninterface IScopeErrorTemplateData {\n\terror: HTMLElement;\n}\n\nclass ScopeErrorRenderer implements ITreeRenderer<IScope, FuzzyScore, IScopeErrorTemplateData> {\n\n\tstatic readonly ID = 'scopeError';\n\n\tget templateId(): string {\n\t\treturn ScopeErrorRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IScopeErrorTemplateData {\n\t\tconst wrapper = dom.append(container, $('.scope'));\n\t\tconst error = dom.append(wrapper, $('.error'));\n\t\treturn { error };\n\t}\n\n\trenderElement(element: ITreeNode<IScope, FuzzyScore>, index: number, templateData: IScopeErrorTemplateData): void {\n\t\ttemplateData.error.innerText = element.element.name;\n\t}\n\n\tdisposeTemplate(): void {\n\t\t// noop\n\t}\n}\n\nexport class VariablesRenderer extends AbstractExpressionsRenderer {\n\n\tstatic readonly ID = 'variable';\n\n\tget templateId(): string {\n\t\treturn VariablesRenderer.ID;\n\t}\n\n\tprotected renderExpression(expression: IExpression, data: IExpressionTemplateData, highlights: IHighlight[]): void {\n\t\trenderVariable(expression as Variable, data, true, highlights);\n\t}\n\n\tprotected getInputBoxOptions(expression: IExpression): IInputBoxOptions {\n\t\tconst variable = <Variable>expression;\n\t\treturn {\n\t\t\tinitialValue: expression.value,\n\t\t\tariaLabel: localize('variableValueAriaLabel', \"Type new variable value\"),\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: () => variable.errorMessage ? ({ content: variable.errorMessage }) : null\n\t\t\t},\n\t\t\tonFinish: (value: string, success: boolean) => {\n\t\t\t\tvariable.errorMessage = undefined;\n\t\t\t\tif (success && variable.value !== value) {\n\t\t\t\t\tvariable.setVariable(value)\n\t\t\t\t\t\t// Need to force watch expressions and variables to update since a variable change can have an effect on both\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t// Do not refresh scopes due to a node limitation #15520\n\t\t\t\t\t\t\tforgetScopes = false;\n\t\t\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass VariablesAccessibilityProvider implements IListAccessibilityProvider<IExpression | IScope> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('variablesAriaTreeLabel', \"Debug Variables\");\n\t}\n\n\tgetAriaLabel(element: IExpression | IScope): string | null {\n\t\tif (element instanceof Scope) {\n\t\t\treturn localize('variableScopeAriaLabel', \"Scope {0}\", element.name);\n\t\t}\n\t\tif (element instanceof Variable) {\n\t\t\treturn localize({ key: 'variableAriaLabel', comment: ['Placeholders are variable name and variable value respectivly. They should not be translated.'] }, \"{0}, value {1}\", element.name, element.value);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport const SET_VARIABLE_ID = 'debug.setVariable';\nCommandsRegistry.registerCommand({\n\tid: SET_VARIABLE_ID,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.getViewModel().setSelectedExpression(variableInternalContext);\n\t}\n});\n\nexport const COPY_VALUE_ID = 'workbench.debug.viewlet.action.copyValue';\nCommandsRegistry.registerCommand({\n\tid: COPY_VALUE_ID,\n\thandler: async (accessor: ServicesAccessor, arg: Variable | Expression | unknown, ctx?: (Variable | Expression)[]) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tlet elementContext = '';\n\t\tlet elements: (Variable | Expression)[];\n\t\tif (arg instanceof Variable || arg instanceof Expression) {\n\t\t\telementContext = 'watch';\n\t\t\telements = ctx ? ctx : [];\n\t\t} else {\n\t\t\telementContext = 'variables';\n\t\t\telements = variableInternalContext ? [variableInternalContext] : [];\n\t\t}\n\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tif (!stackFrame || !session || elements.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst evalContext = session.capabilities.supportsClipboardContext ? 'clipboard' : elementContext;\n\t\tconst toEvaluate = elements.map(element => element instanceof Variable ? (element.evaluateName || element.value) : element.name);\n\n\t\ttry {\n\t\t\tconst evaluations = await Promise.all(toEvaluate.map(expr => session.evaluate(expr, stackFrame.frameId, evalContext)));\n\t\t\tconst result = coalesce(evaluations).map(evaluation => evaluation.body.result);\n\t\t\tif (result.length) {\n\t\t\t\tclipboardService.writeText(result.join('\\n'));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconst result = elements.map(element => element.value);\n\t\t\tclipboardService.writeText(result.join('\\n'));\n\t\t}\n\t}\n});\n\nexport const BREAK_WHEN_VALUE_CHANGES_ID = 'debug.breakWhenValueChanges';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_CHANGES_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'write');\n\t\t}\n\t}\n});\n\nexport const BREAK_WHEN_VALUE_IS_ACCESSED_ID = 'debug.breakWhenValueIsAccessed';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_IS_ACCESSED_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'readWrite');\n\t\t}\n\t}\n});\n\nexport const BREAK_WHEN_VALUE_IS_READ_ID = 'debug.breakWhenValueIsRead';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_IS_READ_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'read');\n\t\t}\n\t}\n});\n\nexport const COPY_EVALUATE_PATH_ID = 'debug.copyEvaluatePath';\nCommandsRegistry.registerCommand({\n\tid: COPY_EVALUATE_PATH_ID,\n\thandler: async (accessor: ServicesAccessor, context: IVariablesContext) => {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tawait clipboardService.writeText(context.variable.evaluateName!);\n\t}\n});\n\nexport const ADD_TO_WATCH_ID = 'debug.addToWatchExpressions';\nCommandsRegistry.registerCommand({\n\tid: ADD_TO_WATCH_ID,\n\thandler: async (accessor: ServicesAccessor, context: IVariablesContext) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.addWatchExpression(context.variable.evaluateName);\n\t}\n});\n\nregisterAction2(class extends ViewAction<VariablesView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'variables.collapse',\n\t\t\tviewId: VARIABLES_VIEW_ID,\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', VARIABLES_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: VariablesView) {\n\t\tview.collapseAll();\n\t}\n});\n"]}