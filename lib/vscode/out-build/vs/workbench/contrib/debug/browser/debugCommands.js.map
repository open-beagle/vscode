{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugCommands.ts"],"names":[],"mappings":"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","file":"debugCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { IDebugService, IEnablement, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_VARIABLES_FOCUSED, EDITOR_CONTRIBUTION_ID, IDebugEditorContribution, CONTEXT_IN_DEBUG_MODE, CONTEXT_EXPRESSION_SELECTED, IConfig, IStackFrame, IThread, IDebugSession, CONTEXT_DEBUG_STATE, IDebugConfiguration, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, REPL_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, State, getStateLabel, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_FOCUSED_SESSION_IS_ATTACH } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, Variable, Breakpoint, FunctionBreakpoint, DataBreakpoint } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IExtensionsViewPaneContainer, VIEWLET_ID as EXTENSIONS_VIEWLET_ID } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { ICodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { openBreakpointSource } from 'vs/workbench/contrib/debug/browser/breakpointsView';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { InputFocusedContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { PanelFocusContext } from 'vs/workbench/common/panel';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { deepClone } from 'vs/base/common/objects';\nimport { isWeb, isWindows } from 'vs/base/common/platform';\n\nexport const ADD_CONFIGURATION_ID = 'debug.addConfiguration';\nexport const TOGGLE_INLINE_BREAKPOINT_ID = 'editor.debug.action.toggleInlineBreakpoint';\nexport const COPY_STACK_TRACE_ID = 'debug.copyStackTrace';\nexport const REVERSE_CONTINUE_ID = 'workbench.action.debug.reverseContinue';\nexport const STEP_BACK_ID = 'workbench.action.debug.stepBack';\nexport const RESTART_SESSION_ID = 'workbench.action.debug.restart';\nexport const TERMINATE_THREAD_ID = 'workbench.action.debug.terminateThread';\nexport const STEP_OVER_ID = 'workbench.action.debug.stepOver';\nexport const STEP_INTO_ID = 'workbench.action.debug.stepInto';\nexport const STEP_OUT_ID = 'workbench.action.debug.stepOut';\nexport const PAUSE_ID = 'workbench.action.debug.pause';\nexport const DISCONNECT_ID = 'workbench.action.debug.disconnect';\nexport const STOP_ID = 'workbench.action.debug.stop';\nexport const RESTART_FRAME_ID = 'workbench.action.debug.restartFrame';\nexport const CONTINUE_ID = 'workbench.action.debug.continue';\nexport const FOCUS_REPL_ID = 'workbench.debug.action.focusRepl';\nexport const JUMP_TO_CURSOR_ID = 'debug.jumpToCursor';\nexport const FOCUS_SESSION_ID = 'workbench.action.debug.focusProcess';\nexport const SELECT_AND_START_ID = 'workbench.action.debug.selectandstart';\nexport const DEBUG_CONFIGURE_COMMAND_ID = 'workbench.action.debug.configure';\nexport const DEBUG_START_COMMAND_ID = 'workbench.action.debug.start';\nexport const DEBUG_RUN_COMMAND_ID = 'workbench.action.debug.run';\nexport const EDIT_EXPRESSION_COMMAND_ID = 'debug.renameWatchExpression';\nexport const REMOVE_EXPRESSION_COMMAND_ID = 'debug.removeWatchExpression';\n\nexport const RESTART_LABEL = nls.localize('restartDebug', \"Restart\");\nexport const STEP_OVER_LABEL = nls.localize('stepOverDebug', \"Step Over\");\nexport const STEP_INTO_LABEL = nls.localize('stepIntoDebug', \"Step Into\");\nexport const STEP_OUT_LABEL = nls.localize('stepOutDebug', \"Step Out\");\nexport const PAUSE_LABEL = nls.localize('pauseDebug', \"Pause\");\nexport const DISCONNECT_LABEL = nls.localize('disconnect', \"Disconnect\");\nexport const STOP_LABEL = nls.localize('stop', \"Stop\");\nexport const CONTINUE_LABEL = nls.localize('continueDebug', \"Continue\");\nexport const FOCUS_SESSION_LABEL = nls.localize('focusSession', \"Focus Session\");\nexport const SELECT_AND_START_LABEL = nls.localize('selectAndStartDebugging', \"Select and Start Debugging\");\nexport const DEBUG_CONFIGURE_LABEL = nls.localize('openLaunchJson', \"Open {0}\", 'launch.json');\nexport const DEBUG_START_LABEL = nls.localize('startDebug', \"Start Debugging\");\nexport const DEBUG_RUN_LABEL = nls.localize('startWithoutDebugging', \"Start Without Debugging\");\n\ninterface CallStackContext {\n\tsessionId: string;\n\tthreadId: string;\n\tframeId: string;\n}\n\nfunction isThreadContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string';\n}\n\nasync function getThreadAndRun(accessor: ServicesAccessor, sessionAndThreadId: CallStackContext | unknown, run: (thread: IThread) => Promise<void>): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet thread: IThread | undefined;\n\tif (isThreadContext(sessionAndThreadId)) {\n\t\tconst session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tthread = session.getAllThreads().find(t => t.getId() === sessionAndThreadId.threadId);\n\t\t}\n\t} else {\n\t\tthread = debugService.getViewModel().focusedThread;\n\t\tif (!thread) {\n\t\t\tconst focusedSession = debugService.getViewModel().focusedSession;\n\t\t\tconst threads = focusedSession ? focusedSession.getAllThreads() : undefined;\n\t\t\tthread = threads && threads.length ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (thread) {\n\t\tawait run(thread);\n\t}\n}\n\nfunction isStackFrameContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string' && typeof obj.frameId === 'string';\n}\n\nfunction getFrame(debugService: IDebugService, context: CallStackContext | unknown): IStackFrame | undefined {\n\tif (isStackFrameContext(context)) {\n\t\tconst session = debugService.getModel().getSession(context.sessionId);\n\t\tif (session) {\n\t\t\tconst thread = session.getAllThreads().find(t => t.getId() === context.threadId);\n\t\t\tif (thread) {\n\t\t\t\treturn thread.getCallStack().find(sf => sf.getId() === context.frameId);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction isSessionContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string';\n}\n\n\n// These commands are used in call stack context menu, call stack inline actions, command palette, debug toolbar, mac native touch bar\n// When the command is exectued in the context of a thread(context menu on a thread, inline call stack action) we pass the thread id\n// Otherwise when it is executed \"globaly\"(using the touch bar, debug toolbar, command palette) we do not pass any id and just take whatever is the focussed thread\n// Same for stackFrame commands and session commands.\nCommandsRegistry.registerCommand({\n\tid: COPY_STACK_TRACE_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst textResourcePropertiesService = accessor.get(ITextResourcePropertiesService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tlet frame = getFrame(accessor.get(IDebugService), context);\n\t\tif (frame) {\n\t\t\tconst eol = textResourcePropertiesService.getEOL(frame.source.uri);\n\t\t\tawait clipboardService.writeText(frame.thread.getCallStack().map(sf => sf.toString()).join(eol));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERSE_CONTINUE_ID,\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, thread => thread.reverseContinue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: STEP_BACK_ID,\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, thread => thread.stepBack());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: TERMINATE_THREAD_ID,\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, thread => thread.terminate());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: JUMP_TO_CURSOR_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorControl = editorService.activeTextEditorControl;\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tif (stackFrame && isCodeEditor(activeEditorControl) && activeEditorControl.hasModel()) {\n\t\t\tconst position = activeEditorControl.getPosition();\n\t\t\tconst resource = activeEditorControl.getModel().uri;\n\t\t\tconst source = stackFrame.thread.session.getSourceForUri(resource);\n\t\t\tif (source) {\n\t\t\t\tconst response = await stackFrame.thread.session.gotoTargets(source.raw, position.lineNumber, position.column);\n\t\t\t\tconst targets = response?.body.targets;\n\t\t\t\tif (targets && targets.length) {\n\t\t\t\t\tlet id = targets[0].id;\n\t\t\t\t\tif (targets.length > 1) {\n\t\t\t\t\t\tconst picks = targets.map(t => ({ label: t.label, _id: t.id }));\n\t\t\t\t\t\tconst pick = await quickInputService.pick(picks, { placeHolder: nls.localize('chooseLocation', \"Choose the specific location\") });\n\t\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tid = pick._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await stackFrame.thread.session.goto(stackFrame.thread.threadId, id).catch(e => notificationService.warn(e));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn notificationService.warn(nls.localize('noExecutableCode', \"No executable code is associated at the current cursor position.\"));\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: JUMP_TO_CURSOR_ID,\n\t\ttitle: nls.localize('jumpToCursor', \"Jump to Cursor\"),\n\t\tcategory: { value: nls.localize('debug', \"Debug\"), original: 'Debug' }\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_JUMP_TO_CURSOR_SUPPORTED, EditorContextKeys.editorTextFocus),\n\tgroup: 'debug',\n\torder: 3\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: RESTART_SESSION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.F5,\n\twhen: CONTEXT_IN_DEBUG_MODE,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tlet session: IDebugSession | undefined;\n\t\tif (isSessionContext(context)) {\n\t\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t\t} else {\n\t\t\tsession = debugService.getViewModel().focusedSession;\n\t\t}\n\n\t\tif (!session) {\n\t\t\tconst { launch, name } = debugService.getConfigurationManager().selectedConfiguration;\n\t\t\tawait debugService.startDebugging(launch, name, { noDebug: false });\n\t\t} else {\n\t\t\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t\t\t// Stop should be sent to the root parent session\n\t\t\twhile (!showSubSessions && session && session.parentSession) {\n\t\t\t\tsession = session.parentSession;\n\t\t\t}\n\t\t\tsession.removeReplExpressions();\n\t\t\tawait debugService.restartSession(session);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OVER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: isWeb ? (KeyMod.Alt | KeyCode.F10) : KeyCode.F10, // Browsers do not allow F10 to be binded so we have to bind an alternative\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, (thread: IThread) => thread.next());\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Have a stronger weight to have priority over full screen when debugging\n\tprimary: (isWeb && isWindows) ? (KeyMod.Alt | KeyCode.F11) : KeyCode.F11, // Windows browsers use F11 for full screen, thus use alt+F11 as the default shortcut\n\t// Use a more flexible when clause to not allow full screen command to take over when F11 pressed a lot of times\n\twhen: CONTEXT_DEBUG_STATE.notEqualsTo('inactive'),\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, (thread: IThread) => thread.stepIn());\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OUT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F11,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, (thread: IThread) => thread.stepOut());\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PAUSE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 2, // take priority over focus next part while we are debugging\n\tprimary: KeyCode.F6,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('running'),\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, thread => thread.pause());\n\t}\n});\n\nasync function stopHandler(accessor: ServicesAccessor, _: string, context: CallStackContext | unknown, disconnect: boolean): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet session: IDebugSession | undefined;\n\tif (isSessionContext(context)) {\n\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t} else {\n\t\tsession = debugService.getViewModel().focusedSession;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t// Stop should be sent to the root parent session\n\twhile (!showSubSessions && session && session.parentSession) {\n\t\tsession = session.parentSession;\n\t}\n\n\tawait debugService.stopSession(session, disconnect);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DISCONNECT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true)\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STOP_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated(), CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, false)\n});\n\nCommandsRegistry.registerCommand({\n\tid: RESTART_FRAME_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tlet frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\ttry {\n\t\t\t\tawait frame.restart();\n\t\t\t} catch (e) {\n\t\t\t\tnotificationService.error(e);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CONTINUE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Use a stronger weight to get priority over start debugging F5 shortcut\n\tprimary: KeyCode.F5,\n\twhen: CONTEXT_IN_DEBUG_MODE,\n\thandler: (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tgetThreadAndRun(accessor, context, thread => thread.continue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_REPL_ID,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'debug.startFromConfig',\n\thandler: async (accessor, config: IConfig) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.startDebugging(undefined, config);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor, session: IDebugSession) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst stoppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === State.Stopped);\n\t\tif (stoppedChildSession && session.state !== State.Stopped) {\n\t\t\tsession = stoppedChildSession;\n\t\t}\n\t\tawait debugService.focusStackFrame(undefined, undefined, session, true);\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tif (stackFrame) {\n\t\t\tawait stackFrame.openInEditor(editorService, true);\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_AND_START_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show('debug ');\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_START_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))),\n\thandler: async (accessor: ServicesAccessor, debugStartOptions?: { config?: Partial<IConfig>; noDebug?: boolean }) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tlet { launch, name, getConfig } = debugService.getConfigurationManager().selectedConfiguration;\n\t\tconst config = await getConfig();\n\t\tconst configOrName = config ? Object.assign(deepClone(config), debugStartOptions?.config) : name;\n\t\tawait debugService.startDebugging(launch, configOrName, { noDebug: debugStartOptions?.noDebug });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_RUN_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.F5,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.F5 },\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))),\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand(DEBUG_START_COMMAND_ID, { noDebug: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.toggleBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, InputFocusedContext.toNegated()),\n\tprimary: KeyCode.Space,\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focused = <IEnablement[]>list.getFocusedElements();\n\t\t\tif (focused && focused.length) {\n\t\t\t\tdebugService.enableOrDisableBreakpoints(!focused[0].enabled, focused[0]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.enableOrDisableBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\twhen: EditorContextKeys.editorTextFocus,\n\thandler: (accessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst control = editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(control)) {\n\t\t\tconst model = control.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst position = control.getPosition();\n\t\t\t\tif (position) {\n\t\t\t\t\tconst bps = debugService.getModel().getBreakpoints({ uri: model.uri, lineNumber: position.lineNumber });\n\t\t\t\t\tif (bps.length) {\n\t\t\t\t\t\tdebugService.enableOrDisableBreakpoints(!bps[0].enabled, bps[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: EDIT_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (!(expression instanceof Expression)) {\n\t\t\tconst listService = accessor.get(IListService);\n\t\t\tconst focused = listService.lastFocusedList;\n\t\t\tif (focused) {\n\t\t\t\tconst elements = focused.getFocus();\n\t\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\t\texpression = elements[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.setVariable',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_VARIABLES_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst focused = listService.lastFocusedList;\n\n\t\tif (focused) {\n\t\t\tconst elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Variable) {\n\t\t\t\tdebugService.getViewModel().setSelectedExpression(elements[0]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: REMOVE_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_EXPRESSION_SELECTED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.removeWatchExpressions(expression.getId());\n\t\t\treturn;\n\t\t}\n\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focused = listService.lastFocusedList;\n\t\tif (focused) {\n\t\t\tlet elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\tconst selection = focused.getSelection();\n\t\t\t\tif (selection && selection.indexOf(elements[0]) >= 0) {\n\t\t\t\t\telements = selection;\n\t\t\t\t}\n\t\t\t\telements.forEach((e: Expression) => debugService.removeWatchExpressions(e.getId()));\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.removeBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_INPUT_FOCUSED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\n\t\tif (list instanceof List) {\n\t\t\tconst focused = list.getFocusedElements();\n\t\t\tconst element = focused.length ? focused[0] : undefined;\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tdebugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tdebugService.removeFunctionBreakpoints(element.getId());\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tdebugService.removeDataBreakpoints(element.getId());\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.installAdditionalDebuggers',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, query: string) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst viewlet = (await viewletService.openViewlet(EXTENSIONS_VIEWLET_ID, true))?.getViewPaneContainer() as IExtensionsViewPaneContainer;\n\t\tlet searchFor = `@category:debuggers`;\n\t\tif (typeof query === 'string') {\n\t\t\tsearchFor += ` ${query}`;\n\t\t}\n\t\tviewlet.search(searchFor);\n\t\tviewlet.focus();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: ADD_CONFIGURATION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, launchUri: string) => {\n\t\tconst manager = accessor.get(IDebugService).getConfigurationManager();\n\n\t\tconst launch = manager.getLaunches().find(l => l.uri.toString() === launchUri) || manager.selectedConfiguration.launch;\n\t\tif (launch) {\n\t\t\tconst { editor, created } = await launch.openConfigFile(false);\n\t\t\tif (editor && !created) {\n\t\t\t\tconst codeEditor = <ICodeEditor>editor.getControl();\n\t\t\t\tif (codeEditor) {\n\t\t\t\t\tawait codeEditor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).addLaunchConfiguration();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nconst inlineBreakpointHandler = (accessor: ServicesAccessor) => {\n\tconst debugService = accessor.get(IDebugService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst control = editorService.activeTextEditorControl;\n\tif (isCodeEditor(control)) {\n\t\tconst position = control.getPosition();\n\t\tif (position && control.hasModel() && debugService.canSetBreakpointsIn(control.getModel())) {\n\t\t\tconst modelUri = control.getModel().uri;\n\t\t\tconst breakpointAlreadySet = debugService.getModel().getBreakpoints({ lineNumber: position.lineNumber, uri: modelUri })\n\t\t\t\t.some(bp => (bp.sessionAgnosticData.column === position.column || (!bp.column && position.column <= 1)));\n\n\t\t\tif (!breakpointAlreadySet) {\n\t\t\t\tdebugService.addBreakpoints(modelUri, [{ lineNumber: position.lineNumber, column: position.column > 1 ? position.column : undefined }]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F9,\n\twhen: EditorContextKeys.editorTextFocus,\n\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\thandler: inlineBreakpointHandler\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\t\ttitle: nls.localize('addInlineBreakpoint', \"Add Inline Breakpoint\"),\n\t\tcategory: { value: nls.localize('debug', \"Debug\"), original: 'Debug' }\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, PanelFocusContext.toNegated(), EditorContextKeys.editorTextFocus),\n\tgroup: 'debug',\n\torder: 1\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.openBreakpointToSide',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_BREAKPOINTS_FOCUSED,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tsecondary: [KeyMod.Alt | KeyCode.Enter],\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focus = list.getFocusedElements();\n\t\t\tif (focus.length && focus[0] instanceof Breakpoint) {\n\t\t\t\treturn openBreakpointSource(focus[0], true, false, true, accessor.get(IDebugService), accessor.get(IEditorService));\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n"]}