{"version":3,"sources":["vs/workbench/contrib/debug/browser/linkDetector.ts"],"names":[],"mappings":"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","file":"linkDetector.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport * as osPath from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { localize } from 'vs/nls';\nimport { ITunnelService } from 'vs/platform/remote/common/tunnel';\n\nconst CONTROL_CODES = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\nconst WEB_LINK_REGEX = new RegExp('(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' + CONTROL_CODES + '\"]{2,}[^\\\\s' + CONTROL_CODES + '\"\\')}\\\\],:;.!?]', 'ug');\n\nconst WIN_ABSOLUTE_PATH = /(?:[a-zA-Z]:(?:(?:\\\\|\\/)[\\w\\.-]*)+)/;\nconst WIN_RELATIVE_PATH = /(?:(?:\\~|\\.)(?:(?:\\\\|\\/)[\\w\\.-]*)+)/;\nconst WIN_PATH = new RegExp(`(${WIN_ABSOLUTE_PATH.source}|${WIN_RELATIVE_PATH.source})`);\nconst POSIX_PATH = /((?:\\~|\\.)?(?:\\/[\\w\\.-]*)+)/;\nconst LINE_COLUMN = /(?:\\:([\\d]+))?(?:\\:([\\d]+))?/;\nconst PATH_LINK_REGEX = new RegExp(`${platform.isWindows ? WIN_PATH.source : POSIX_PATH.source}${LINE_COLUMN.source}`, 'g');\n\nconst MAX_LENGTH = 2000;\n\ntype LinkKind = 'web' | 'path' | 'text';\ntype LinkPart = {\n\tkind: LinkKind;\n\tvalue: string;\n\tcaptures: string[];\n};\n\nexport class LinkDetector {\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\t// noop\n\t}\n\n\t/**\n\t * Matches and handles web urls, absolute and relative file links in the string provided.\n\t * Returns <span/> element that wraps the processed string, where matched links are replaced by <a/>.\n\t * 'onclick' event is attached to all anchored links that opens them in the editor.\n\t * When splitLines is true, each line of the text, even if it contains no links, is wrapped in a <span>\n\t * and added as a child of the returned <span>.\n\t */\n\tlinkify(text: string, splitLines?: boolean, workspaceFolder?: IWorkspaceFolder): HTMLElement {\n\t\tif (splitLines) {\n\t\t\tconst lines = text.split('\\n');\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tlines[i] = lines[i] + '\\n';\n\t\t\t}\n\t\t\tif (!lines[lines.length - 1]) {\n\t\t\t\t// Remove the last element ('') that split added.\n\t\t\t\tlines.pop();\n\t\t\t}\n\t\t\tconst elements = lines.map(line => this.linkify(line, false, workspaceFolder));\n\t\t\tif (elements.length === 1) {\n\t\t\t\t// Do not wrap single line with extra span.\n\t\t\t\treturn elements[0];\n\t\t\t}\n\t\t\tconst container = document.createElement('span');\n\t\t\telements.forEach(e => container.appendChild(e));\n\t\t\treturn container;\n\t\t}\n\n\t\tconst container = document.createElement('span');\n\t\tfor (const part of this.detectLinks(text)) {\n\t\t\ttry {\n\t\t\t\tswitch (part.kind) {\n\t\t\t\t\tcase 'text':\n\t\t\t\t\t\tcontainer.appendChild(document.createTextNode(part.value));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'web':\n\t\t\t\t\t\tcontainer.appendChild(this.createWebLink(part.value));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'path':\n\t\t\t\t\t\tconst path = part.captures[0];\n\t\t\t\t\t\tconst lineNumber = part.captures[1] ? Number(part.captures[1]) : 0;\n\t\t\t\t\t\tconst columnNumber = part.captures[2] ? Number(part.captures[2]) : 0;\n\t\t\t\t\t\tcontainer.appendChild(this.createPathLink(part.value, path, lineNumber, columnNumber, workspaceFolder));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tcontainer.appendChild(document.createTextNode(part.value));\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\n\tprivate createWebLink(url: string): Node {\n\t\tconst link = this.createLink(url);\n\n\t\tconst uri = URI.parse(url);\n\t\tthis.decorateLink(link, uri, async () => {\n\n\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\t// Just using fsPath here is unsafe: https://github.com/microsoft/vscode/issues/109076\n\t\t\t\tconst fsPath = uri.fsPath;\n\t\t\t\tconst path = await this.pathService.path;\n\t\t\t\tconst fileUrl = osPath.normalize(((path.sep === osPath.posix.sep) && platform.isWindows) ? fsPath.replace(/\\\\/g, osPath.posix.sep) : fsPath);\n\n\t\t\t\tconst resolvedLink = await this.fileService.resolve(URI.parse(fileUrl));\n\t\t\t\tif (!resolvedLink) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.editorService.openEditor({ resource: resolvedLink.resource, options: { pinned: true } });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.openerService.open(url, { allowTunneling: !!this.environmentService.remoteAuthority });\n\t\t});\n\n\t\treturn link;\n\t}\n\n\tprivate createPathLink(text: string, path: string, lineNumber: number, columnNumber: number, workspaceFolder: IWorkspaceFolder | undefined): Node {\n\t\tif (path[0] === '/' && path[1] === '/') {\n\t\t\t// Most likely a url part which did not match, for example ftp://path.\n\t\t\treturn document.createTextNode(text);\n\t\t}\n\n\t\tconst options = { selection: { startLineNumber: lineNumber, startColumn: columnNumber } };\n\t\tif (path[0] === '.') {\n\t\t\tif (!workspaceFolder) {\n\t\t\t\treturn document.createTextNode(text);\n\t\t\t}\n\t\t\tconst uri = workspaceFolder.toResource(path);\n\t\t\tconst link = this.createLink(text);\n\t\t\tthis.decorateLink(link, uri, (preserveFocus: boolean) => this.editorService.openEditor({ resource: uri, options: { ...options, preserveFocus } }));\n\t\t\treturn link;\n\t\t}\n\n\t\tif (path[0] === '~') {\n\t\t\tconst userHome = this.pathService.resolvedUserHome;\n\t\t\tif (userHome) {\n\t\t\t\tpath = osPath.join(userHome.fsPath, path.substring(1));\n\t\t\t}\n\t\t}\n\n\t\tconst link = this.createLink(text);\n\t\tlink.tabIndex = 0;\n\t\tconst uri = URI.file(osPath.normalize(path));\n\t\tthis.fileService.resolve(uri).then(stat => {\n\t\t\tif (stat.isDirectory) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.decorateLink(link, uri, (preserveFocus: boolean) => this.editorService.openEditor({ resource: uri, options: { ...options, preserveFocus } }));\n\t\t}).catch(() => {\n\t\t\t// If the uri can not be resolved we should not spam the console with error, remain quite #86587\n\t\t});\n\t\treturn link;\n\t}\n\n\tprivate createLink(text: string): HTMLElement {\n\t\tconst link = document.createElement('a');\n\t\tlink.textContent = text;\n\t\treturn link;\n\t}\n\n\tprivate decorateLink(link: HTMLElement, uri: URI, onClick: (preserveFocus: boolean) => void) {\n\t\tlink.classList.add('link');\n\t\tconst followLink = this.tunnelService.canTunnel(uri) ? localize('followForwardedLink', \"follow link using forwarded port\") : localize('followLink', \"follow link\");\n\t\tlink.title = platform.isMacintosh ? localize('fileLinkMac', \"Cmd + click to {0}\", followLink) : localize('fileLink', \"Ctrl + click to {0}\", followLink);\n\t\tlink.onmousemove = (event) => { link.classList.toggle('pointer', platform.isMacintosh ? event.metaKey : event.ctrlKey); };\n\t\tlink.onmouseleave = () => link.classList.remove('pointer');\n\t\tlink.onclick = (event) => {\n\t\t\tconst selection = window.getSelection();\n\t\t\tif (!selection || selection.type === 'Range') {\n\t\t\t\treturn; // do not navigate when user is selecting\n\t\t\t}\n\t\t\tif (!(platform.isMacintosh ? event.metaKey : event.ctrlKey)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopImmediatePropagation();\n\t\t\tonClick(false);\n\t\t};\n\t\tlink.onkeydown = e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.keyCode === KeyCode.Enter || event.keyCode === KeyCode.Space) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tonClick(event.keyCode === KeyCode.Space);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate detectLinks(text: string): LinkPart[] {\n\t\tif (text.length > MAX_LENGTH) {\n\t\t\treturn [{ kind: 'text', value: text, captures: [] }];\n\t\t}\n\n\t\tconst regexes: RegExp[] = [WEB_LINK_REGEX, PATH_LINK_REGEX];\n\t\tconst kinds: LinkKind[] = ['web', 'path'];\n\t\tconst result: LinkPart[] = [];\n\n\t\tconst splitOne = (text: string, regexIndex: number) => {\n\t\t\tif (regexIndex >= regexes.length) {\n\t\t\t\tresult.push({ value: text, kind: 'text', captures: [] });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst regex = regexes[regexIndex];\n\t\t\tlet currentIndex = 0;\n\t\t\tlet match;\n\t\t\tregex.lastIndex = 0;\n\t\t\twhile ((match = regex.exec(text)) !== null) {\n\t\t\t\tconst stringBeforeMatch = text.substring(currentIndex, match.index);\n\t\t\t\tif (stringBeforeMatch) {\n\t\t\t\t\tsplitOne(stringBeforeMatch, regexIndex + 1);\n\t\t\t\t}\n\t\t\t\tconst value = match[0];\n\t\t\t\tresult.push({\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tkind: kinds[regexIndex],\n\t\t\t\t\tcaptures: match.slice(1)\n\t\t\t\t});\n\t\t\t\tcurrentIndex = match.index + value.length;\n\t\t\t}\n\t\t\tconst stringAfterMatches = text.substring(currentIndex);\n\t\t\tif (stringAfterMatches) {\n\t\t\t\tsplitOne(stringAfterMatches, regexIndex + 1);\n\t\t\t}\n\t\t};\n\n\t\tsplitOne(text, 0);\n\t\treturn result;\n\t}\n}\n"]}