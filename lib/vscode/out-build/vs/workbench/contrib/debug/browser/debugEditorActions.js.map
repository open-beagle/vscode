{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugEditorActions.ts"],"names":[],"mappings":"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","file":"debugEditorActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { registerEditorAction, EditorAction, IActionOptions, EditorAction2 } from 'vs/editor/browser/editorExtensions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IDebugService, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE, State, IDebugEditorContribution, EDITOR_CONTRIBUTION_ID, BreakpointWidgetContext, IBreakpoint, BREAKPOINT_EDITOR_CONTRIBUTION_ID, IBreakpointEditorContribution, REPL_VIEW_ID, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, WATCH_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_EXCEPTION_WIDGET_VISIBLE } from 'vs/workbench/contrib/debug/common/debug';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { openBreakpointSource } from 'vs/workbench/contrib/debug/browser/breakpointsView';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { PanelFocusContext } from 'vs/workbench/common/panel';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { Action } from 'vs/base/common/actions';\nimport { getDomNodePagePosition } from 'vs/base/browser/dom';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { Position } from 'vs/editor/common/core/position';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { raceTimeout } from 'vs/base/common/async';\nimport { registerAction2, MenuId } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nclass ToggleBreakpointAction extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.toggleBreakpoint',\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('toggleBreakpointAction', \"Debug: Toggle Breakpoint\"),\n\t\t\t\toriginal: 'Toggle Breakpoint',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miToggleBreakpoint', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Breakpoint\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tkeybinding: {\n\t\t\t\twhen: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F9,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '4_new_breakpoint',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): Promise<void> {\n\t\tif (editor.hasModel()) {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst modelUri = editor.getModel().uri;\n\t\t\tconst canSet = debugService.canSetBreakpointsIn(editor.getModel());\n\t\t\t// Does not account for multi line selections, Set to remove multiple cursor on the same line\n\t\t\tconst lineNumbers = [...new Set(editor.getSelections().map(s => s.getPosition().lineNumber))];\n\n\t\t\tawait Promise.all(lineNumbers.map(async line => {\n\t\t\t\tconst bps = debugService.getModel().getBreakpoints({ lineNumber: line, uri: modelUri });\n\t\t\t\tif (bps.length) {\n\t\t\t\t\tawait Promise.all(bps.map(bp => debugService.removeBreakpoints(bp.getId())));\n\t\t\t\t} else if (canSet) {\n\t\t\t\t\tawait debugService.addBreakpoints(modelUri, [{ lineNumber: line }]);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n\nclass ConditionalBreakpointAction extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.conditionalBreakpoint',\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('conditionalBreakpointEditorAction', \"Debug: Add Conditional Breakpoint...\"),\n\t\t\t\toriginal: 'Debug: Add Conditional Breakpoint...',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miConditionalBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&Conditional Breakpoint...\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst position = editor.getPosition();\n\t\tif (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n\t\t\teditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID).showBreakpointWidget(position.lineNumber, undefined, BreakpointWidgetContext.CONDITION);\n\t\t}\n\t}\n}\n\nclass LogPointAction extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.addLogPoint',\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('logPointEditorAction', \"Debug: Add Logpoint...\"),\n\t\t\t\toriginal: 'Debug: Add Logpoint...',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miLogPoint', comment: ['&& denotes a mnemonic'] }, \"&&Logpoint...\")\n\t\t\t},\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 4,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst position = editor.getPosition();\n\t\tif (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n\t\t\teditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID).showBreakpointWidget(position.lineNumber, position.column, BreakpointWidgetContext.LOG_MESSAGE);\n\t\t}\n\t}\n}\n\nexport class RunToCursorAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.runToCursor';\n\tpublic static readonly LABEL = nls.localize('runToCursor', \"Run to Cursor\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RunToCursorAction.ID,\n\t\t\tlabel: RunToCursorAction.LABEL,\n\t\t\talias: 'Debug: Run to Cursor',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, PanelFocusContext.toNegated(), CONTEXT_DEBUG_STATE.isEqualTo('stopped'), EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst focusedSession = debugService.getViewModel().focusedSession;\n\t\tif (debugService.state !== State.Stopped || !focusedSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = editor.getPosition();\n\t\tif (!(editor.hasModel() && position)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uri = editor.getModel().uri;\n\t\tconst bpExists = !!(debugService.getModel().getBreakpoints({ column: position.column, lineNumber: position.lineNumber, uri }).length);\n\n\t\tlet breakpointToRemove: IBreakpoint | undefined;\n\t\tlet threadToContinue = debugService.getViewModel().focusedThread;\n\t\tif (!bpExists) {\n\t\t\tconst addResult = await this.addBreakpoints(accessor, uri, position);\n\t\t\tif (addResult.thread) {\n\t\t\t\tthreadToContinue = addResult.thread;\n\t\t\t}\n\n\t\t\tif (addResult.breakpoint) {\n\t\t\t\tbreakpointToRemove = addResult.breakpoint;\n\t\t\t}\n\t\t}\n\n\t\tif (!threadToContinue) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oneTimeListener = threadToContinue.session.onDidChangeState(() => {\n\t\t\tconst state = focusedSession.state;\n\t\t\tif (state === State.Stopped || state === State.Inactive) {\n\t\t\t\tif (breakpointToRemove) {\n\t\t\t\t\tdebugService.removeBreakpoints(breakpointToRemove.getId());\n\t\t\t\t}\n\t\t\t\toneTimeListener.dispose();\n\t\t\t}\n\t\t});\n\n\t\tawait threadToContinue.continue();\n\t}\n\n\tprivate async addBreakpoints(accessor: ServicesAccessor, uri: URI, position: Position) {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst debugModel = debugService.getModel();\n\t\tconst viewModel = debugService.getViewModel();\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\n\t\tlet column = 0;\n\t\tconst focusedStackFrame = viewModel.focusedStackFrame;\n\t\tif (focusedStackFrame && uriIdentityService.extUri.isEqual(focusedStackFrame.source.uri, uri) && focusedStackFrame.range.startLineNumber === position.lineNumber) {\n\t\t\t// If the cursor is on a line different than the one the debugger is currently paused on, then send the breakpoint at column 0 on the line\n\t\t\t// otherwise set it at the precise column #102199\n\t\t\tcolumn = position.column;\n\t\t}\n\n\t\tconst breakpoints = await debugService.addBreakpoints(uri, [{ lineNumber: position.lineNumber, column }], false);\n\t\tconst breakpoint = breakpoints?.[0];\n\t\tif (!breakpoint) {\n\t\t\treturn { breakpoint: undefined, thread: viewModel.focusedThread };\n\t\t}\n\n\t\t// If the breakpoint was not initially verified, wait up to 2s for it to become so.\n\t\t// Inherently racey if multiple sessions can verify async, but not solvable...\n\t\tif (!breakpoint.verified) {\n\t\t\tlet listener: IDisposable;\n\t\t\tawait raceTimeout(new Promise<void>(resolve => {\n\t\t\t\tlistener = debugModel.onDidChangeBreakpoints(() => {\n\t\t\t\t\tif (breakpoint.verified) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}), 2000);\n\t\t\tlistener!.dispose();\n\t\t}\n\n\t\t// Look at paused threads for sessions that verified this bp. Prefer, in order:\n\t\tconst enum Score {\n\t\t\t/** The focused thread */\n\t\t\tFocused,\n\t\t\t/** Any other stopped thread of a session that verified the bp */\n\t\t\tVerified,\n\t\t\t/** Any thread that verified and paused in the same file */\n\t\t\tVerifiedAndPausedInFile,\n\t\t\t/** The focused thread if it verified the breakpoint */\n\t\t\tVerifiedAndFocused,\n\t\t}\n\n\t\tlet bestThread = viewModel.focusedThread;\n\t\tlet bestScore = Score.Focused;\n\t\tfor (const sessionId of breakpoint.sessionsThatVerified) {\n\t\t\tconst session = debugModel.getSession(sessionId);\n\t\t\tif (!session) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst threads = session.getAllThreads().filter(t => t.stopped);\n\t\t\tif (bestScore < Score.VerifiedAndFocused) {\n\t\t\t\tif (viewModel.focusedThread && threads.includes(viewModel.focusedThread)) {\n\t\t\t\t\tbestThread = viewModel.focusedThread;\n\t\t\t\t\tbestScore = Score.VerifiedAndFocused;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bestScore < Score.VerifiedAndPausedInFile) {\n\t\t\t\tconst pausedInThisFile = threads.find(t => {\n\t\t\t\t\tconst top = t.getTopStackFrame();\n\t\t\t\t\treturn top && uriIdentityService.extUri.isEqual(top.source.uri, uri);\n\t\t\t\t});\n\n\t\t\t\tif (pausedInThisFile) {\n\t\t\t\t\tbestThread = pausedInThisFile;\n\t\t\t\t\tbestScore = Score.VerifiedAndPausedInFile;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bestScore < Score.Verified) {\n\t\t\t\tbestThread = threads[0];\n\t\t\t\tbestScore = Score.VerifiedAndPausedInFile;\n\t\t\t}\n\t\t}\n\n\t\treturn { thread: bestThread, breakpoint };\n\t}\n}\n\nclass SelectionToReplAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.selectionToRepl',\n\t\t\tlabel: nls.localize('evaluateInDebugConsole', \"Evaluate in Debug Console\"),\n\t\t\talias: 'Evaluate',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.hasNonEmptySelection, CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 0\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst viewModel = debugService.getViewModel();\n\t\tconst session = viewModel.focusedSession;\n\t\tif (!editor.hasModel() || !session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst text = editor.getModel().getValueInRange(editor.getSelection());\n\t\tawait session.addReplExpression(viewModel.focusedStackFrame!, text);\n\t\tawait viewsService.openView(REPL_VIEW_ID, false);\n\t}\n}\n\nclass SelectionToWatchExpressionsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.selectionToWatch',\n\t\t\tlabel: nls.localize('addToWatch', \"Add to Watch\"),\n\t\t\talias: 'Add to Watch',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.hasNonEmptySelection, CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst text = editor.getModel().getValueInRange(editor.getSelection());\n\t\tawait viewsService.openView(WATCH_VIEW_ID);\n\t\tdebugService.addWatchExpression(text);\n\t}\n}\n\nclass ShowDebugHoverAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.showDebugHover',\n\t\t\tlabel: nls.localize('showDebugHover', \"Debug: Show Hover\"),\n\t\t\talias: 'Debug: Show Hover',\n\t\t\tprecondition: CONTEXT_IN_DEBUG_MODE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_I),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst position = editor.getPosition();\n\t\tif (!position || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst word = editor.getModel().getWordAtPosition(position);\n\t\tif (!word) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = new Range(position.lineNumber, position.column, position.lineNumber, word.endColumn);\n\t\treturn editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showHover(range, true);\n\t}\n}\n\nclass StepIntoTargetsAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.stepIntoTargets';\n\tpublic static readonly LABEL = nls.localize({ key: 'stepIntoTargets', comment: ['Step Into Targets lets the user step into an exact function he or she is interested in.'] }, \"Step Into Targets...\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: StepIntoTargetsAction.ID,\n\t\t\tlabel: StepIntoTargetsAction.LABEL,\n\t\t\talias: 'Debug: Step Into Targets...',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'), EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 1.5\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst contextMenuService = accessor.get(IContextMenuService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tconst frame = debugService.getViewModel().focusedStackFrame;\n\n\t\tif (session && frame && editor.hasModel() && uriIdentityService.extUri.isEqual(editor.getModel().uri, frame.source.uri)) {\n\t\t\tconst targets = await session.stepInTargets(frame.frameId);\n\t\t\tif (!targets) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.revealLineInCenterIfOutsideViewport(frame.range.startLineNumber);\n\t\t\tconst cursorCoords = editor.getScrolledVisiblePosition({ lineNumber: frame.range.startLineNumber, column: frame.range.startColumn });\n\t\t\tconst editorCoords = getDomNodePagePosition(editor.getDomNode());\n\t\t\tconst x = editorCoords.left + cursorCoords.left;\n\t\t\tconst y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n\n\t\t\tcontextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => ({ x, y }),\n\t\t\t\tgetActions: () => {\n\t\t\t\t\treturn targets.map(t => new Action(`stepIntoTarget:${t.id}`, t.label, undefined, true, () => session.stepIn(frame.thread.threadId, t.id)));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass GoToBreakpointAction extends EditorAction {\n\tconstructor(private isNext: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<any> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\n\t\tif (editor.hasModel()) {\n\t\t\tconst currentUri = editor.getModel().uri;\n\t\t\tconst currentLine = editor.getPosition().lineNumber;\n\t\t\t//Breakpoints returned from `getBreakpoints` are already sorted.\n\t\t\tconst allEnabledBreakpoints = debugService.getModel().getBreakpoints({ enabledOnly: true });\n\n\t\t\t//Try to find breakpoint in current file\n\t\t\tlet moveBreakpoint =\n\t\t\t\tthis.isNext\n\t\t\t\t\t? allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber > currentLine).shift()\n\t\t\t\t\t: allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber < currentLine).pop();\n\n\t\t\t//Try to find breakpoints in following files\n\t\t\tif (!moveBreakpoint) {\n\t\t\t\tmoveBreakpoint =\n\t\t\t\t\tthis.isNext\n\t\t\t\t\t\t? allEnabledBreakpoints.filter(bp => bp.uri.toString() > currentUri.toString()).shift()\n\t\t\t\t\t\t: allEnabledBreakpoints.filter(bp => bp.uri.toString() < currentUri.toString()).pop();\n\t\t\t}\n\n\t\t\t//Move to first or last possible breakpoint\n\t\t\tif (!moveBreakpoint && allEnabledBreakpoints.length) {\n\t\t\t\tmoveBreakpoint = this.isNext ? allEnabledBreakpoints[0] : allEnabledBreakpoints[allEnabledBreakpoints.length - 1];\n\t\t\t}\n\n\t\t\tif (moveBreakpoint) {\n\t\t\t\treturn openBreakpointSource(moveBreakpoint, false, true, false, debugService, editorService);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass GoToNextBreakpointAction extends GoToBreakpointAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.debug.action.goToNextBreakpoint',\n\t\t\tlabel: nls.localize('goToNextBreakpoint', \"Debug: Go To Next Breakpoint\"),\n\t\t\talias: 'Debug: Go To Next Breakpoint',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t});\n\t}\n}\n\nclass GoToPreviousBreakpointAction extends GoToBreakpointAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.debug.action.goToPreviousBreakpoint',\n\t\t\tlabel: nls.localize('goToPreviousBreakpoint', \"Debug: Go To Previous Breakpoint\"),\n\t\t\talias: 'Debug: Go To Previous Breakpoint',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t});\n\t}\n}\n\nclass CloseExceptionWidgetAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.closeExceptionWidget',\n\t\t\tlabel: nls.localize('closeExceptionWidget', \"Close Exception Widget\"),\n\t\t\talias: 'Close Exception Widget',\n\t\t\tprecondition: CONTEXT_EXCEPTION_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst contribution = editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID);\n\t\tcontribution.closeExceptionWidget();\n\t}\n}\n\nregisterAction2(ToggleBreakpointAction);\nregisterAction2(ConditionalBreakpointAction);\nregisterAction2(LogPointAction);\nregisterEditorAction(RunToCursorAction);\nregisterEditorAction(StepIntoTargetsAction);\nregisterEditorAction(SelectionToReplAction);\nregisterEditorAction(SelectionToWatchExpressionsAction);\nregisterEditorAction(ShowDebugHoverAction);\nregisterEditorAction(GoToNextBreakpointAction);\nregisterEditorAction(GoToPreviousBreakpointAction);\nregisterEditorAction(CloseExceptionWidgetAction);\n"]}