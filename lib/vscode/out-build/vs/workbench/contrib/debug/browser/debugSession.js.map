{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugSession.ts"],"names":[],"mappings":"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","file":"debugSession.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport * as platform from 'vs/base/common/platform';\nimport severity from 'vs/base/common/severity';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Position, IPosition } from 'vs/editor/common/core/position';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { IDebugSession, IConfig, IThread, IRawModelUpdate, IDebugService, IRawStoppedDetails, State, LoadedSourceEvent, IFunctionBreakpoint, IExceptionBreakpoint, IBreakpoint, IExceptionInfo, AdapterEndEvent, IDebugger, VIEWLET_ID, IDebugConfiguration, IReplElement, IStackFrame, IExpression, IReplElementSource, IDataBreakpoint, IDebugSessionOptions } from 'vs/workbench/contrib/debug/common/debug';\nimport { Source } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { mixin } from 'vs/base/common/objects';\nimport { Thread, ExpressionContainer, DebugModel } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { RawDebugSession } from 'vs/workbench/contrib/debug/browser/rawDebugSession';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkspaceFolder, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { RunOnceScheduler, Queue } from 'vs/base/common/async';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ICustomEndpointTelemetryService, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { ReplModel } from 'vs/workbench/contrib/debug/common/replModel';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { distinct } from 'vs/base/common/arrays';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { canceled } from 'vs/base/common/errors';\nimport { filterExceptionsFromTelemetry } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { DebugCompoundRoot } from 'vs/workbench/contrib/debug/common/debugCompoundRoot';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport class DebugSession implements IDebugSession {\n\n\tprivate _subId: string | undefined;\n\tprivate raw: RawDebugSession | undefined;\n\tprivate initialized = false;\n\tprivate _options: IDebugSessionOptions;\n\n\tprivate sources = new Map<string, Source>();\n\tprivate threads = new Map<number, Thread>();\n\tprivate cancellationMap = new Map<number, CancellationTokenSource[]>();\n\tprivate rawListeners: IDisposable[] = [];\n\tprivate fetchThreadsScheduler: RunOnceScheduler | undefined;\n\tprivate repl: ReplModel;\n\tprivate stoppedDetails: IRawStoppedDetails | undefined;\n\n\tprivate readonly _onDidChangeState = new Emitter<void>();\n\tprivate readonly _onDidEndAdapter = new Emitter<AdapterEndEvent | undefined>();\n\n\tprivate readonly _onDidLoadedSource = new Emitter<LoadedSourceEvent>();\n\tprivate readonly _onDidCustomEvent = new Emitter<DebugProtocol.Event>();\n\tprivate readonly _onDidProgressStart = new Emitter<DebugProtocol.ProgressStartEvent>();\n\tprivate readonly _onDidProgressUpdate = new Emitter<DebugProtocol.ProgressUpdateEvent>();\n\tprivate readonly _onDidProgressEnd = new Emitter<DebugProtocol.ProgressEndEvent>();\n\n\tprivate readonly _onDidChangeREPLElements = new Emitter<void>();\n\n\tprivate _name: string | undefined;\n\tprivate readonly _onDidChangeName = new Emitter<string>();\n\n\tconstructor(\n\t\tprivate id: string,\n\t\tprivate _configuration: { resolved: IConfig, unresolved: IConfig | undefined },\n\t\tpublic root: IWorkspaceFolder | undefined,\n\t\tprivate model: DebugModel,\n\t\toptions: IDebugSessionOptions | undefined,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICustomEndpointTelemetryService private readonly customEndpointTelemetryService: ICustomEndpointTelemetryService\n\t) {\n\t\tthis._options = options || {};\n\t\tif (this.hasSeparateRepl()) {\n\t\t\tthis.repl = new ReplModel(this.configurationService);\n\t\t} else {\n\t\t\tthis.repl = (this.parentSession as DebugSession).repl;\n\t\t}\n\n\t\tconst toDispose: IDisposable[] = [];\n\t\ttoDispose.push(this.repl.onDidChangeElements(() => this._onDidChangeREPLElements.fire()));\n\t\tif (lifecycleService) {\n\t\t\ttoDispose.push(lifecycleService.onDidShutdown(() => {\n\t\t\t\tthis.shutdown();\n\t\t\t\tdispose(toDispose);\n\t\t\t}));\n\t\t}\n\n\t\tconst compoundRoot = this._options.compoundRoot;\n\t\tif (compoundRoot) {\n\t\t\ttoDispose.push(compoundRoot.onDidSessionStop(() => this.terminate()));\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tsetSubId(subId: string | undefined) {\n\t\tthis._subId = subId;\n\t}\n\n\tget subId(): string | undefined {\n\t\treturn this._subId;\n\t}\n\n\tget configuration(): IConfig {\n\t\treturn this._configuration.resolved;\n\t}\n\n\tget unresolvedConfiguration(): IConfig | undefined {\n\t\treturn this._configuration.unresolved;\n\t}\n\n\tget parentSession(): IDebugSession | undefined {\n\t\treturn this._options.parentSession;\n\t}\n\n\tget compact(): boolean {\n\t\treturn !!this._options.compact;\n\t}\n\n\tget compoundRoot(): DebugCompoundRoot | undefined {\n\t\treturn this._options.compoundRoot;\n\t}\n\n\tsetConfiguration(configuration: { resolved: IConfig, unresolved: IConfig | undefined }) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetLabel(): string {\n\t\tconst includeRoot = this.workspaceContextService.getWorkspace().folders.length > 1;\n\t\treturn includeRoot && this.root ? `${this.name} (${resources.basenameOrAuthority(this.root.uri)})` : this.name;\n\t}\n\n\tsetName(name: string): void {\n\t\tthis._name = name;\n\t\tthis._onDidChangeName.fire(name);\n\t}\n\n\tget name(): string {\n\t\treturn this._name || this.configuration.name;\n\t}\n\n\tget state(): State {\n\t\tif (!this.initialized) {\n\t\t\treturn State.Initializing;\n\t\t}\n\t\tif (!this.raw) {\n\t\t\treturn State.Inactive;\n\t\t}\n\n\t\tconst focusedThread = this.debugService.getViewModel().focusedThread;\n\t\tif (focusedThread && focusedThread.session === this) {\n\t\t\treturn focusedThread.stopped ? State.Stopped : State.Running;\n\t\t}\n\t\tif (this.getAllThreads().some(t => t.stopped)) {\n\t\t\treturn State.Stopped;\n\t\t}\n\n\t\treturn State.Running;\n\t}\n\n\tget capabilities(): DebugProtocol.Capabilities {\n\t\treturn this.raw ? this.raw.capabilities : Object.create(null);\n\t}\n\n\t//---- events\n\tget onDidChangeState(): Event<void> {\n\t\treturn this._onDidChangeState.event;\n\t}\n\n\tget onDidEndAdapter(): Event<AdapterEndEvent | undefined> {\n\t\treturn this._onDidEndAdapter.event;\n\t}\n\n\tget onDidChangeReplElements(): Event<void> {\n\t\treturn this._onDidChangeREPLElements.event;\n\t}\n\n\tget onDidChangeName(): Event<string> {\n\t\treturn this._onDidChangeName.event;\n\t}\n\n\t//---- DAP events\n\n\tget onDidCustomEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidCustomEvent.event;\n\t}\n\n\tget onDidLoadedSource(): Event<LoadedSourceEvent> {\n\t\treturn this._onDidLoadedSource.event;\n\t}\n\n\tget onDidProgressStart(): Event<DebugProtocol.ProgressStartEvent> {\n\t\treturn this._onDidProgressStart.event;\n\t}\n\n\tget onDidProgressUpdate(): Event<DebugProtocol.ProgressUpdateEvent> {\n\t\treturn this._onDidProgressUpdate.event;\n\t}\n\n\tget onDidProgressEnd(): Event<DebugProtocol.ProgressEndEvent> {\n\t\treturn this._onDidProgressEnd.event;\n\t}\n\n\t//---- DAP requests\n\n\t/**\n\t * create and initialize a new debug adapter for this session\n\t */\n\tasync initialize(dbgr: IDebugger): Promise<void> {\n\n\t\tif (this.raw) {\n\t\t\t// if there was already a connection make sure to remove old listeners\n\t\t\tthis.shutdown();\n\t\t}\n\n\t\ttry {\n\t\t\tconst debugAdapter = await dbgr.createDebugAdapter(this);\n\t\t\tthis.raw = this.instantiationService.createInstance(RawDebugSession, debugAdapter, dbgr, this.id);\n\n\t\t\tawait this.raw.start();\n\t\t\tthis.registerListeners();\n\t\t\tawait this.raw!.initialize({\n\t\t\t\tclientID: 'vscode',\n\t\t\t\tclientName: this.productService.nameLong,\n\t\t\t\tadapterID: this.configuration.type,\n\t\t\t\tpathFormat: 'path',\n\t\t\t\tlinesStartAt1: true,\n\t\t\t\tcolumnsStartAt1: true,\n\t\t\t\tsupportsVariableType: true, // #8858\n\t\t\t\tsupportsVariablePaging: true, // #9537\n\t\t\t\tsupportsRunInTerminalRequest: true, // #10574\n\t\t\t\tlocale: platform.locale,\n\t\t\t\tsupportsProgressReporting: true, // #92253\n\t\t\t\tsupportsInvalidatedEvent: true // #106745\n\t\t\t});\n\n\t\t\tthis.initialized = true;\n\t\t\tthis._onDidChangeState.fire();\n\t\t\tthis.debugService.setExceptionBreakpoints((this.raw && this.raw.capabilities.exceptionBreakpointFilters) || []);\n\t\t} catch (err) {\n\t\t\tthis.initialized = true;\n\t\t\tthis._onDidChangeState.fire();\n\t\t\tthis.shutdown();\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * launch or attach to the debuggee\n\t */\n\tasync launchOrAttach(config: IConfig): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'launch or attach'));\n\t\t}\n\t\tif (this.parentSession && this.parentSession.state === State.Inactive) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\t// __sessionID only used for EH debugging (but we add it always for now...)\n\t\tconfig.__sessionId = this.getId();\n\t\ttry {\n\t\t\tawait this.raw.launchOrAttach(config);\n\t\t} catch (err) {\n\t\t\tthis.shutdown();\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * terminate the current debug adapter session\n\t */\n\tasync terminate(restart = false): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\t// Adapter went down but it did not send a 'terminated' event, simulate like the event has been sent\n\t\t\tthis.onDidExitAdapter();\n\t\t}\n\n\t\tthis.cancelAllRequests();\n\t\tif (this.raw) {\n\t\t\tif (this.raw.capabilities.supportsTerminateRequest && this._configuration.resolved.request === 'launch') {\n\t\t\t\tawait this.raw.terminate(restart);\n\t\t\t} else {\n\t\t\t\tawait this.raw.disconnect({ restart, terminateDebuggee: true });\n\t\t\t}\n\t\t}\n\n\t\tif (!restart) {\n\t\t\tthis._options.compoundRoot?.sessionStopped();\n\t\t}\n\t}\n\n\t/**\n\t * end the current debug adapter session\n\t */\n\tasync disconnect(restart = false): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\t// Adapter went down but it did not send a 'terminated' event, simulate like the event has been sent\n\t\t\tthis.onDidExitAdapter();\n\t\t}\n\n\t\tthis.cancelAllRequests();\n\t\tif (this.raw) {\n\t\t\tawait this.raw.disconnect({ restart, terminateDebuggee: false });\n\t\t}\n\n\t\tif (!restart) {\n\t\t\tthis._options.compoundRoot?.sessionStopped();\n\t\t}\n\t}\n\n\t/**\n\t * restart debug adapter session\n\t */\n\tasync restart(): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'restart'));\n\t\t}\n\n\t\tthis.cancelAllRequests();\n\t\tawait this.raw.restart({ arguments: this.configuration });\n\t}\n\n\tasync sendBreakpoints(modelUri: URI, breakpointsToSend: IBreakpoint[], sourceModified: boolean): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'breakpoints'));\n\t\t}\n\n\t\tif (!this.raw.readyForBreakpoints) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst rawSource = this.getRawSource(modelUri);\n\t\tif (breakpointsToSend.length && !rawSource.adapterData) {\n\t\t\trawSource.adapterData = breakpointsToSend[0].adapterData;\n\t\t}\n\t\t// Normalize all drive letters going out from vscode to debug adapters so we are consistent with our resolving #43959\n\t\tif (rawSource.path) {\n\t\t\trawSource.path = normalizeDriveLetter(rawSource.path);\n\t\t}\n\n\t\tconst response = await this.raw.setBreakpoints({\n\t\t\tsource: rawSource,\n\t\t\tlines: breakpointsToSend.map(bp => bp.sessionAgnosticData.lineNumber),\n\t\t\tbreakpoints: breakpointsToSend.map(bp => ({ line: bp.sessionAgnosticData.lineNumber, column: bp.sessionAgnosticData.column, condition: bp.condition, hitCondition: bp.hitCondition, logMessage: bp.logMessage })),\n\t\t\tsourceModified\n\t\t});\n\t\tif (response && response.body) {\n\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\t\t\tfor (let i = 0; i < breakpointsToSend.length; i++) {\n\t\t\t\tdata.set(breakpointsToSend[i].getId(), response.body.breakpoints[i]);\n\t\t\t}\n\n\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t}\n\t}\n\n\tasync sendFunctionBreakpoints(fbpts: IFunctionBreakpoint[]): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'function breakpoints'));\n\t\t}\n\n\t\tif (this.raw.readyForBreakpoints) {\n\t\t\tconst response = await this.raw.setFunctionBreakpoints({ breakpoints: fbpts });\n\t\t\tif (response && response.body) {\n\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\t\t\t\tfor (let i = 0; i < fbpts.length; i++) {\n\t\t\t\t\tdata.set(fbpts[i].getId(), response.body.breakpoints[i]);\n\t\t\t\t}\n\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync sendExceptionBreakpoints(exbpts: IExceptionBreakpoint[]): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'exception breakpoints'));\n\t\t}\n\n\t\tif (this.raw.readyForBreakpoints) {\n\t\t\tconst args: DebugProtocol.SetExceptionBreakpointsArguments = this.capabilities.supportsExceptionFilterOptions ? {\n\t\t\t\tfilters: [],\n\t\t\t\tfilterOptions: exbpts.map(exb => {\n\t\t\t\t\tif (exb.condition) {\n\t\t\t\t\t\treturn { filterId: exb.filter, condition: exb.condition };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { filterId: exb.filter };\n\t\t\t\t})\n\t\t\t} : { filters: exbpts.map(exb => exb.filter) };\n\n\t\t\tconst response = await this.raw.setExceptionBreakpoints(args);\n\t\t\tif (response && response.body && response.body.breakpoints) {\n\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\t\t\t\tfor (let i = 0; i < exbpts.length; i++) {\n\t\t\t\t\tdata.set(exbpts[i].getId(), response.body.breakpoints[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync dataBreakpointInfo(name: string, variablesReference?: number): Promise<{ dataId: string | null, description: string, canPersist?: boolean } | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'data breakpoints info'));\n\t\t}\n\t\tif (!this.raw.readyForBreakpoints) {\n\t\t\tthrow new Error(localize('sessionNotReadyForBreakpoints', \"Session is not ready for breakpoints\"));\n\t\t}\n\n\t\tconst response = await this.raw.dataBreakpointInfo({ name, variablesReference });\n\t\treturn response?.body;\n\t}\n\n\tasync sendDataBreakpoints(dataBreakpoints: IDataBreakpoint[]): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'data breakpoints'));\n\t\t}\n\n\t\tif (this.raw.readyForBreakpoints) {\n\t\t\tconst response = await this.raw.setDataBreakpoints({ breakpoints: dataBreakpoints });\n\t\t\tif (response && response.body) {\n\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\t\t\t\tfor (let i = 0; i < dataBreakpoints.length; i++) {\n\t\t\t\t\tdata.set(dataBreakpoints[i].getId(), response.body.breakpoints[i]);\n\t\t\t\t}\n\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync breakpointsLocations(uri: URI, lineNumber: number): Promise<IPosition[]> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'breakpoints locations'));\n\t\t}\n\n\t\tconst source = this.getRawSource(uri);\n\t\tconst response = await this.raw.breakpointLocations({ source, line: lineNumber });\n\t\tif (!response || !response.body || !response.body.breakpoints) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst positions = response.body.breakpoints.map(bp => ({ lineNumber: bp.line, column: bp.column || 1 }));\n\n\t\treturn distinct(positions, p => `${p.lineNumber}:${p.column}`);\n\t}\n\n\tgetDebugProtocolBreakpoint(breakpointId: string): DebugProtocol.Breakpoint | undefined {\n\t\treturn this.model.getDebugProtocolBreakpoint(breakpointId, this.getId());\n\t}\n\n\tcustomRequest(request: string, args: any): Promise<DebugProtocol.Response | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", request));\n\t\t}\n\n\t\treturn this.raw.custom(request, args);\n\t}\n\n\tstackTrace(threadId: number, startFrame: number, levels: number, token: CancellationToken): Promise<DebugProtocol.StackTraceResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stackTrace'));\n\t\t}\n\n\t\tconst sessionToken = this.getNewCancellationToken(threadId, token);\n\t\treturn this.raw.stackTrace({ threadId, startFrame, levels }, sessionToken);\n\t}\n\n\tasync exceptionInfo(threadId: number): Promise<IExceptionInfo | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'exceptionInfo'));\n\t\t}\n\n\t\tconst response = await this.raw.exceptionInfo({ threadId });\n\t\tif (response) {\n\t\t\treturn {\n\t\t\t\tid: response.body.exceptionId,\n\t\t\t\tdescription: response.body.description,\n\t\t\t\tbreakMode: response.body.breakMode,\n\t\t\t\tdetails: response.body.details\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tscopes(frameId: number, threadId: number): Promise<DebugProtocol.ScopesResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'scopes'));\n\t\t}\n\n\t\tconst token = this.getNewCancellationToken(threadId);\n\t\treturn this.raw.scopes({ frameId }, token);\n\t}\n\n\tvariables(variablesReference: number, threadId: number | undefined, filter: 'indexed' | 'named' | undefined, start: number | undefined, count: number | undefined): Promise<DebugProtocol.VariablesResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'variables'));\n\t\t}\n\n\t\tconst token = threadId ? this.getNewCancellationToken(threadId) : undefined;\n\t\treturn this.raw.variables({ variablesReference, filter, start, count }, token);\n\t}\n\n\tevaluate(expression: string, frameId: number, context?: string): Promise<DebugProtocol.EvaluateResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'evaluate'));\n\t\t}\n\n\t\treturn this.raw.evaluate({ expression, frameId, context });\n\t}\n\n\tasync restartFrame(frameId: number, threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'restartFrame'));\n\t\t}\n\n\t\tawait this.raw.restartFrame({ frameId }, threadId);\n\t}\n\n\tasync next(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'next'));\n\t\t}\n\n\t\tawait this.raw.next({ threadId });\n\t}\n\n\tasync stepIn(threadId: number, targetId?: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepIn'));\n\t\t}\n\n\t\tawait this.raw.stepIn({ threadId, targetId });\n\t}\n\n\tasync stepOut(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepOut'));\n\t\t}\n\n\t\tawait this.raw.stepOut({ threadId });\n\t}\n\n\tasync stepBack(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepBack'));\n\t\t}\n\n\t\tawait this.raw.stepBack({ threadId });\n\t}\n\n\tasync continue(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'continue'));\n\t\t}\n\n\t\tawait this.raw.continue({ threadId });\n\t}\n\n\tasync reverseContinue(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'reverse continue'));\n\t\t}\n\n\t\tawait this.raw.reverseContinue({ threadId });\n\t}\n\n\tasync pause(threadId: number): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'pause'));\n\t\t}\n\n\t\tawait this.raw.pause({ threadId });\n\t}\n\n\tasync terminateThreads(threadIds?: number[]): Promise<void> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'terminateThreads'));\n\t\t}\n\n\t\tawait this.raw.terminateThreads({ threadIds });\n\t}\n\n\tsetVariable(variablesReference: number, name: string, value: string): Promise<DebugProtocol.SetVariableResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'setVariable'));\n\t\t}\n\n\t\treturn this.raw.setVariable({ variablesReference, name, value });\n\t}\n\n\tgotoTargets(source: DebugProtocol.Source, line: number, column?: number): Promise<DebugProtocol.GotoTargetsResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'gotoTargets'));\n\t\t}\n\n\t\treturn this.raw.gotoTargets({ source, line, column });\n\t}\n\n\tgoto(threadId: number, targetId: number): Promise<DebugProtocol.GotoResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\tthrow new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'goto'));\n\t\t}\n\n\t\treturn this.raw.goto({ threadId, targetId });\n\t}\n\n\tloadSource(resource: URI): Promise<DebugProtocol.SourceResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\treturn Promise.reject(new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'loadSource')));\n\t\t}\n\n\t\tconst source = this.getSourceForUri(resource);\n\t\tlet rawSource: DebugProtocol.Source;\n\t\tif (source) {\n\t\t\trawSource = source.raw;\n\t\t} else {\n\t\t\t// create a Source\n\t\t\tconst data = Source.getEncodedDebugData(resource);\n\t\t\trawSource = { path: data.path, sourceReference: data.sourceReference };\n\t\t}\n\n\t\treturn this.raw.source({ sourceReference: rawSource.sourceReference || 0, source: rawSource });\n\t}\n\n\tasync getLoadedSources(): Promise<Source[]> {\n\t\tif (!this.raw) {\n\t\t\treturn Promise.reject(new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'getLoadedSources')));\n\t\t}\n\n\t\tconst response = await this.raw.loadedSources({});\n\t\tif (response && response.body && response.body.sources) {\n\t\t\treturn response.body.sources.map(src => this.getSource(src));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tasync completions(frameId: number | undefined, threadId: number, text: string, position: Position, overwriteBefore: number, token: CancellationToken): Promise<DebugProtocol.CompletionsResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\treturn Promise.reject(new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'completions')));\n\t\t}\n\t\tconst sessionCancelationToken = this.getNewCancellationToken(threadId, token);\n\n\t\treturn this.raw.completions({\n\t\t\tframeId,\n\t\t\ttext,\n\t\t\tcolumn: position.column,\n\t\t\tline: position.lineNumber,\n\t\t}, sessionCancelationToken);\n\t}\n\n\tasync stepInTargets(frameId: number): Promise<{ id: number, label: string }[] | undefined> {\n\t\tif (!this.raw) {\n\t\t\treturn Promise.reject(new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepInTargets')));\n\t\t}\n\n\t\tconst response = await this.raw.stepInTargets({ frameId });\n\t\treturn response?.body.targets;\n\t}\n\n\tasync cancel(progressId: string): Promise<DebugProtocol.CancelResponse | undefined> {\n\t\tif (!this.raw) {\n\t\t\treturn Promise.reject(new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'cancel')));\n\t\t}\n\n\t\treturn this.raw.cancel({ progressId });\n\t}\n\n\t//---- threads\n\n\tgetThread(threadId: number): Thread | undefined {\n\t\treturn this.threads.get(threadId);\n\t}\n\n\tgetAllThreads(): IThread[] {\n\t\tconst result: IThread[] = [];\n\t\tthis.threads.forEach(t => result.push(t));\n\t\treturn result;\n\t}\n\n\tclearThreads(removeThreads: boolean, reference: number | undefined = undefined): void {\n\t\tif (reference !== undefined && reference !== null) {\n\t\t\tconst thread = this.threads.get(reference);\n\t\t\tif (thread) {\n\t\t\t\tthread.clearCallStack();\n\t\t\t\tthread.stoppedDetails = undefined;\n\t\t\t\tthread.stopped = false;\n\n\t\t\t\tif (removeThreads) {\n\t\t\t\t\tthis.threads.delete(reference);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.threads.forEach(thread => {\n\t\t\t\tthread.clearCallStack();\n\t\t\t\tthread.stoppedDetails = undefined;\n\t\t\t\tthread.stopped = false;\n\t\t\t});\n\n\t\t\tif (removeThreads) {\n\t\t\t\tthis.threads.clear();\n\t\t\t\tExpressionContainer.allValues.clear();\n\t\t\t}\n\t\t}\n\t}\n\n\trawUpdate(data: IRawModelUpdate): void {\n\t\tconst threadIds: number[] = [];\n\t\tdata.threads.forEach(thread => {\n\t\t\tthreadIds.push(thread.id);\n\t\t\tif (!this.threads.has(thread.id)) {\n\t\t\t\t// A new thread came in, initialize it.\n\t\t\t\tthis.threads.set(thread.id, new Thread(this, thread.name, thread.id));\n\t\t\t} else if (thread.name) {\n\t\t\t\t// Just the thread name got updated #18244\n\t\t\t\tconst oldThread = this.threads.get(thread.id);\n\t\t\t\tif (oldThread) {\n\t\t\t\t\toldThread.name = thread.name;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.threads.forEach(t => {\n\t\t\t// Remove all old threads which are no longer part of the update #75980\n\t\t\tif (threadIds.indexOf(t.threadId) === -1) {\n\t\t\t\tthis.threads.delete(t.threadId);\n\t\t\t}\n\t\t});\n\n\t\tconst stoppedDetails = data.stoppedDetails;\n\t\tif (stoppedDetails) {\n\t\t\t// Set the availability of the threads' callstacks depending on\n\t\t\t// whether the thread is stopped or not\n\t\t\tif (stoppedDetails.allThreadsStopped) {\n\t\t\t\tthis.threads.forEach(thread => {\n\t\t\t\t\tthread.stoppedDetails = thread.threadId === stoppedDetails.threadId ? stoppedDetails : { reason: undefined };\n\t\t\t\t\tthread.stopped = true;\n\t\t\t\t\tthread.clearCallStack();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst thread = typeof stoppedDetails.threadId === 'number' ? this.threads.get(stoppedDetails.threadId) : undefined;\n\t\t\t\tif (thread) {\n\t\t\t\t\t// One thread is stopped, only update that thread.\n\t\t\t\t\tthread.stoppedDetails = stoppedDetails;\n\t\t\t\t\tthread.clearCallStack();\n\t\t\t\t\tthread.stopped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async fetchThreads(stoppedDetails?: IRawStoppedDetails): Promise<void> {\n\t\tif (this.raw) {\n\t\t\tconst response = await this.raw.threads();\n\t\t\tif (response && response.body && response.body.threads) {\n\t\t\t\tthis.model.rawUpdate({\n\t\t\t\t\tsessionId: this.getId(),\n\t\t\t\t\tthreads: response.body.threads,\n\t\t\t\t\tstoppedDetails\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tinitializeForTest(raw: RawDebugSession): void {\n\t\tthis.raw = raw;\n\t\tthis.registerListeners();\n\t}\n\n\t//---- private\n\n\tprivate registerListeners(): void {\n\t\tif (!this.raw) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rawListeners.push(this.raw.onDidInitialize(async () => {\n\t\t\taria.status(localize('debuggingStarted', \"Debugging started.\"));\n\t\t\tconst sendConfigurationDone = async () => {\n\t\t\t\tif (this.raw && this.raw.capabilities.supportsConfigurationDoneRequest) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.raw.configurationDone();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Disconnect the debug session on configuration done error #10596\n\t\t\t\t\t\tthis.notificationService.error(e);\n\t\t\t\t\t\tif (this.raw) {\n\t\t\t\t\t\t\tthis.raw.disconnect({});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t};\n\n\t\t\t// Send all breakpoints\n\t\t\ttry {\n\t\t\t\tawait this.debugService.sendAllBreakpoints(this);\n\t\t\t} finally {\n\t\t\t\tawait sendConfigurationDone();\n\t\t\t\tawait this.fetchThreads();\n\t\t\t}\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidStop(async event => {\n\t\t\tthis.stoppedDetails = event.body;\n\t\t\tawait this.fetchThreads(event.body);\n\t\t\tconst thread = typeof event.body.threadId === 'number' ? this.getThread(event.body.threadId) : undefined;\n\t\t\tif (thread) {\n\t\t\t\t// Call fetch call stack twice, the first only return the top stack frame.\n\t\t\t\t// Second retrieves the rest of the call stack. For performance reasons #25605\n\t\t\t\tconst promises = this.model.fetchCallStack(<Thread>thread);\n\t\t\t\tconst focus = async () => {\n\t\t\t\t\tif (!event.body.preserveFocusHint && thread.getCallStack().length) {\n\t\t\t\t\t\tawait this.debugService.focusStackFrame(undefined, thread);\n\t\t\t\t\t\tif (thread.stoppedDetails) {\n\t\t\t\t\t\t\tif (this.configurationService.getValue<IDebugConfiguration>('debug').openDebug === 'openOnDebugBreak') {\n\t\t\t\t\t\t\t\tthis.viewletService.openViewlet(VIEWLET_ID);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this.configurationService.getValue<IDebugConfiguration>('debug').focusWindowOnBreak) {\n\t\t\t\t\t\t\t\tthis.hostService.focus({ force: true /* Application may not be active */ });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tawait promises.topCallStack;\n\t\t\t\tfocus();\n\t\t\t\tawait promises.wholeCallStack;\n\t\t\t\tconst focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\t\tif (!focusedStackFrame || !focusedStackFrame.source || focusedStackFrame.source.presentationHint === 'deemphasize') {\n\t\t\t\t\t// The top stack frame can be deemphesized so try to focus again #68616\n\t\t\t\t\tfocus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidChangeState.fire();\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidThread(event => {\n\t\t\tif (event.body.reason === 'started') {\n\t\t\t\t// debounce to reduce threadsRequest frequency and improve performance\n\t\t\t\tif (!this.fetchThreadsScheduler) {\n\t\t\t\t\tthis.fetchThreadsScheduler = new RunOnceScheduler(() => {\n\t\t\t\t\t\tthis.fetchThreads();\n\t\t\t\t\t}, 100);\n\t\t\t\t\tthis.rawListeners.push(this.fetchThreadsScheduler);\n\t\t\t\t}\n\t\t\t\tif (!this.fetchThreadsScheduler.isScheduled()) {\n\t\t\t\t\tthis.fetchThreadsScheduler.schedule();\n\t\t\t\t}\n\t\t\t} else if (event.body.reason === 'exited') {\n\t\t\t\tthis.model.clearThreads(this.getId(), true, event.body.threadId);\n\t\t\t\tconst viewModel = this.debugService.getViewModel();\n\t\t\t\tconst focusedThread = viewModel.focusedThread;\n\t\t\t\tif (focusedThread && event.body.threadId === focusedThread.threadId) {\n\t\t\t\t\t// De-focus the thread in case it was focused\n\t\t\t\t\tthis.debugService.focusStackFrame(undefined, undefined, viewModel.focusedSession, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidTerminateDebugee(async event => {\n\t\t\taria.status(localize('debuggingStopped', \"Debugging stopped.\"));\n\t\t\tif (event.body && event.body.restart) {\n\t\t\t\tawait this.debugService.restartSession(this, event.body.restart);\n\t\t\t} else if (this.raw) {\n\t\t\t\tawait this.raw.disconnect({ terminateDebuggee: false });\n\t\t\t}\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidContinued(event => {\n\t\t\tconst threadId = event.body.allThreadsContinued !== false ? undefined : event.body.threadId;\n\t\t\tif (threadId) {\n\t\t\t\tconst tokens = this.cancellationMap.get(threadId);\n\t\t\t\tthis.cancellationMap.delete(threadId);\n\t\t\t\tif (tokens) {\n\t\t\t\t\ttokens.forEach(t => t.cancel());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.cancelAllRequests();\n\t\t\t}\n\n\t\t\tthis.model.clearThreads(this.getId(), false, threadId);\n\t\t\tthis._onDidChangeState.fire();\n\t\t}));\n\n\t\tconst outputQueue = new Queue<void>();\n\t\tthis.rawListeners.push(this.raw.onDidOutput(async event => {\n\t\t\toutputQueue.queue(async () => {\n\t\t\t\tif (!event.body || !this.raw) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst outputSeverity = event.body.category === 'stderr' ? severity.Error : event.body.category === 'console' ? severity.Warning : severity.Info;\n\t\t\t\tif (event.body.category === 'telemetry') {\n\t\t\t\t\t// only log telemetry events from debug adapter if the debug extension provided the telemetry key\n\t\t\t\t\t// and the user opted in telemetry\n\t\t\t\t\tconst telemetryEndpoint = this.raw.dbgr.getCustomTelemetryEndpoint();\n\t\t\t\t\tif (telemetryEndpoint && this.telemetryService.isOptedIn) {\n\t\t\t\t\t\t// __GDPR__TODO__ We're sending events in the name of the debug extension and we can not ensure that those are declared correctly.\n\t\t\t\t\t\tlet data = event.body.data;\n\t\t\t\t\t\tif (!telemetryEndpoint.sendErrorTelemetry && event.body.data) {\n\t\t\t\t\t\t\tdata = filterExceptionsFromTelemetry(event.body.data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.customEndpointTelemetryService.publicLog(telemetryEndpoint, event.body.output, data);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Make sure to append output in the correct order by properly waiting on preivous promises #33822\n\t\t\t\tconst source = event.body.source && event.body.line ? {\n\t\t\t\t\tlineNumber: event.body.line,\n\t\t\t\t\tcolumn: event.body.column ? event.body.column : 1,\n\t\t\t\t\tsource: this.getSource(event.body.source)\n\t\t\t\t} : undefined;\n\n\t\t\t\tif (event.body.group === 'start' || event.body.group === 'startCollapsed') {\n\t\t\t\t\tconst expanded = event.body.group === 'start';\n\t\t\t\t\tthis.repl.startGroup(event.body.output || '', expanded, source);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (event.body.group === 'end') {\n\t\t\t\t\tthis.repl.endGroup();\n\t\t\t\t\tif (!event.body.output) {\n\t\t\t\t\t\t// Only return if the end event does not have additional output in it\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (event.body.variablesReference) {\n\t\t\t\t\tconst container = new ExpressionContainer(this, undefined, event.body.variablesReference, generateUuid());\n\t\t\t\t\tawait container.getChildren().then(children => {\n\t\t\t\t\t\tchildren.forEach(child => {\n\t\t\t\t\t\t\t// Since we can not display multiple trees in a row, we are displaying these variables one after the other (ignoring their names)\n\t\t\t\t\t\t\t(<any>child).name = null;\n\t\t\t\t\t\t\tthis.appendToRepl(child, outputSeverity, source);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof event.body.output === 'string') {\n\t\t\t\t\tthis.appendToRepl(event.body.output, outputSeverity, source);\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidBreakpoint(event => {\n\t\t\tconst id = event.body && event.body.breakpoint ? event.body.breakpoint.id : undefined;\n\t\t\tconst breakpoint = this.model.getBreakpoints().find(bp => bp.getIdFromAdapter(this.getId()) === id);\n\t\t\tconst functionBreakpoint = this.model.getFunctionBreakpoints().find(bp => bp.getIdFromAdapter(this.getId()) === id);\n\t\t\tconst dataBreakpoint = this.model.getDataBreakpoints().find(dbp => dbp.getIdFromAdapter(this.getId()) === id);\n\t\t\tconst exceptionBreakpoint = this.model.getExceptionBreakpoints().find(excbp => excbp.getIdFromAdapter(this.getId()) === id);\n\n\t\t\tif (event.body.reason === 'new' && event.body.breakpoint.source && event.body.breakpoint.line) {\n\t\t\t\tconst source = this.getSource(event.body.breakpoint.source);\n\t\t\t\tconst bps = this.model.addBreakpoints(source.uri, [{\n\t\t\t\t\tcolumn: event.body.breakpoint.column,\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tlineNumber: event.body.breakpoint.line,\n\t\t\t\t}], false);\n\t\t\t\tif (bps.length === 1) {\n\t\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>([[bps[0].getId(), event.body.breakpoint]]);\n\t\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (event.body.reason === 'removed') {\n\t\t\t\tif (breakpoint) {\n\t\t\t\t\tthis.model.removeBreakpoints([breakpoint]);\n\t\t\t\t}\n\t\t\t\tif (functionBreakpoint) {\n\t\t\t\t\tthis.model.removeFunctionBreakpoints(functionBreakpoint.getId());\n\t\t\t\t}\n\t\t\t\tif (dataBreakpoint) {\n\t\t\t\t\tthis.model.removeDataBreakpoints(dataBreakpoint.getId());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (event.body.reason === 'changed') {\n\t\t\t\tif (breakpoint) {\n\t\t\t\t\tif (!breakpoint.column) {\n\t\t\t\t\t\tevent.body.breakpoint.column = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>([[breakpoint.getId(), event.body.breakpoint]]);\n\t\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t\t}\n\t\t\t\tif (functionBreakpoint) {\n\t\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>([[functionBreakpoint.getId(), event.body.breakpoint]]);\n\t\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t\t}\n\t\t\t\tif (dataBreakpoint) {\n\t\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>([[dataBreakpoint.getId(), event.body.breakpoint]]);\n\t\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t\t}\n\t\t\t\tif (exceptionBreakpoint) {\n\t\t\t\t\tconst data = new Map<string, DebugProtocol.Breakpoint>([[exceptionBreakpoint.getId(), event.body.breakpoint]]);\n\t\t\t\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidLoadedSource(event => {\n\t\t\tthis._onDidLoadedSource.fire({\n\t\t\t\treason: event.body.reason,\n\t\t\t\tsource: this.getSource(event.body.source)\n\t\t\t});\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidCustomEvent(event => {\n\t\t\tthis._onDidCustomEvent.fire(event);\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidProgressStart(event => {\n\t\t\tthis._onDidProgressStart.fire(event);\n\t\t}));\n\t\tthis.rawListeners.push(this.raw.onDidProgressUpdate(event => {\n\t\t\tthis._onDidProgressUpdate.fire(event);\n\t\t}));\n\t\tthis.rawListeners.push(this.raw.onDidProgressEnd(event => {\n\t\t\tthis._onDidProgressEnd.fire(event);\n\t\t}));\n\t\tthis.rawListeners.push(this.raw.onDidInvalidated(async event => {\n\t\t\tif (!(event.body.areas && event.body.areas.length === 1 && (event.body.areas[0] === 'variables' || event.body.areas[0] === 'watch'))) {\n\t\t\t\t// If invalidated event only requires to update variables or watch, do that, otherwise refatch threads https://github.com/microsoft/vscode/issues/106745\n\t\t\t\tthis.cancelAllRequests();\n\t\t\t\tthis.model.clearThreads(this.getId(), true);\n\t\t\t\tawait this.fetchThreads(this.stoppedDetails);\n\t\t\t}\n\n\t\t\tconst viewModel = this.debugService.getViewModel();\n\t\t\tif (viewModel.focusedSession === this) {\n\t\t\t\tviewModel.updateViews();\n\t\t\t}\n\t\t}));\n\n\t\tthis.rawListeners.push(this.raw.onDidExitAdapter(event => this.onDidExitAdapter(event)));\n\t}\n\n\tprivate onDidExitAdapter(event?: AdapterEndEvent): void {\n\t\tthis.initialized = true;\n\t\tthis.model.setBreakpointSessionData(this.getId(), this.capabilities, undefined);\n\t\tthis.shutdown();\n\t\tthis._onDidEndAdapter.fire(event);\n\t}\n\n\t// Disconnects and clears state. Session can be initialized again for a new connection.\n\tprivate shutdown(): void {\n\t\tdispose(this.rawListeners);\n\t\tif (this.raw) {\n\t\t\tthis.raw.disconnect({});\n\t\t\tthis.raw.dispose();\n\t\t\tthis.raw = undefined;\n\t\t}\n\t\tthis.fetchThreadsScheduler = undefined;\n\t\tthis.model.clearThreads(this.getId(), true);\n\t\tthis._onDidChangeState.fire();\n\t}\n\n\t//---- sources\n\n\tgetSourceForUri(uri: URI): Source | undefined {\n\t\treturn this.sources.get(this.uriIdentityService.asCanonicalUri(uri).toString());\n\t}\n\n\tgetSource(raw?: DebugProtocol.Source): Source {\n\t\tlet source = new Source(raw, this.getId(), this.uriIdentityService);\n\t\tconst uriKey = source.uri.toString();\n\t\tconst found = this.sources.get(uriKey);\n\t\tif (found) {\n\t\t\tsource = found;\n\t\t\t// merge attributes of new into existing\n\t\t\tsource.raw = mixin(source.raw, raw);\n\t\t\tif (source.raw && raw) {\n\t\t\t\t// Always take the latest presentation hint from adapter #42139\n\t\t\t\tsource.raw.presentationHint = raw.presentationHint;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.sources.set(uriKey, source);\n\t\t}\n\n\t\treturn source;\n\t}\n\n\tprivate getRawSource(uri: URI): DebugProtocol.Source {\n\t\tconst source = this.getSourceForUri(uri);\n\t\tif (source) {\n\t\t\treturn source.raw;\n\t\t} else {\n\t\t\tconst data = Source.getEncodedDebugData(uri);\n\t\t\treturn { name: data.name, path: data.path, sourceReference: data.sourceReference };\n\t\t}\n\t}\n\n\tprivate getNewCancellationToken(threadId: number, token?: CancellationToken): CancellationToken {\n\t\tconst tokenSource = new CancellationTokenSource(token);\n\t\tconst tokens = this.cancellationMap.get(threadId) || [];\n\t\ttokens.push(tokenSource);\n\t\tthis.cancellationMap.set(threadId, tokens);\n\n\t\treturn tokenSource.token;\n\t}\n\n\tprivate cancelAllRequests(): void {\n\t\tthis.cancellationMap.forEach(tokens => tokens.forEach(t => t.cancel()));\n\t\tthis.cancellationMap.clear();\n\t}\n\n\t// REPL\n\n\tgetReplElements(): IReplElement[] {\n\t\treturn this.repl.getReplElements();\n\t}\n\n\thasSeparateRepl(): boolean {\n\t\treturn !this.parentSession || this._options.repl !== 'mergeWithParent';\n\t}\n\n\tremoveReplExpressions(): void {\n\t\tthis.repl.removeReplExpressions();\n\t}\n\n\tasync addReplExpression(stackFrame: IStackFrame | undefined, name: string): Promise<void> {\n\t\tawait this.repl.addReplExpression(this, stackFrame, name);\n\t\t// Evaluate all watch expressions and fetch variables again since repl evaluation might have changed some.\n\t\tthis.debugService.getViewModel().updateViews();\n\t}\n\n\tappendToRepl(data: string | IExpression, severity: severity, source?: IReplElementSource): void {\n\t\tthis.repl.appendToRepl(this, data, severity, source);\n\t}\n\n\tlogToRepl(sev: severity, args: any[], frame?: { uri: URI, line: number, column: number }) {\n\t\tthis.repl.logToRepl(this, sev, args, frame);\n\t}\n}\n"]}