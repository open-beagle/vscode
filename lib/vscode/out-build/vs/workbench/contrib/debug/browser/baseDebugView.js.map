{"version":3,"file":"baseDebugView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/browser/baseDebugView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IExpression, IDebugService, IExpressionContainer } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, Variable, ExpressionContainer } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInputValidationOptions, InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { ITreeRenderer, ITreeNode } from 'vs/base/browser/ui/tree/tree';\nimport { IDisposable, dispose, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { HighlightedLabel, IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { FuzzyScore, createMatches } from 'vs/base/common/filters';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\nimport { ReplEvaluationResult } from 'vs/workbench/contrib/debug/common/replModel';\nimport { once } from 'vs/base/common/functional';\n\nexport const MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nexport const twistiePixels = 20;\nconst booleanRegex = /^true|false$/i;\nconst stringRegex = /^(['\"]).*\\1$/;\nconst $ = dom.$;\n\nexport interface IRenderValueOptions {\n\tshowChanged?: boolean;\n\tmaxValueLength?: number;\n\tshowHover?: boolean;\n\tcolorize?: boolean;\n\tlinkDetector?: LinkDetector;\n}\n\nexport interface IVariableTemplateData {\n\texpression: HTMLElement;\n\tname: HTMLElement;\n\tvalue: HTMLElement;\n\tlabel: HighlightedLabel;\n}\n\nexport function renderViewTree(container: HTMLElement): HTMLElement {\n\tconst treeContainer = $('.');\n\ttreeContainer.classList.add('debug-view-content');\n\tcontainer.appendChild(treeContainer);\n\treturn treeContainer;\n}\n\nexport function renderExpressionValue(expressionOrValue: IExpressionContainer | string, container: HTMLElement, options: IRenderValueOptions): void {\n\tlet value = typeof expressionOrValue === 'string' ? expressionOrValue : expressionOrValue.value;\n\n\t// remove stale classes\n\tcontainer.className = 'value';\n\t// when resolving expressions we represent errors from the server as a variable with name === null.\n\tif (value === null || ((expressionOrValue instanceof Expression || expressionOrValue instanceof Variable || expressionOrValue instanceof ReplEvaluationResult) && !expressionOrValue.available)) {\n\t\tcontainer.classList.add('unavailable');\n\t\tif (value !== Expression.DEFAULT_VALUE) {\n\t\t\tcontainer.classList.add('error');\n\t\t}\n\t} else if ((expressionOrValue instanceof ExpressionContainer) && options.showChanged && expressionOrValue.valueChanged && value !== Expression.DEFAULT_VALUE) {\n\t\t// value changed color has priority over other colors.\n\t\tcontainer.className = 'value changed';\n\t\texpressionOrValue.valueChanged = false;\n\t}\n\n\tif (options.colorize && typeof expressionOrValue !== 'string') {\n\t\tif (expressionOrValue.type === 'number' || expressionOrValue.type === 'boolean' || expressionOrValue.type === 'string') {\n\t\t\tcontainer.classList.add(expressionOrValue.type);\n\t\t} else if (!isNaN(+value)) {\n\t\t\tcontainer.classList.add('number');\n\t\t} else if (booleanRegex.test(value)) {\n\t\t\tcontainer.classList.add('boolean');\n\t\t} else if (stringRegex.test(value)) {\n\t\t\tcontainer.classList.add('string');\n\t\t}\n\t}\n\n\tif (options.maxValueLength && value && value.length > options.maxValueLength) {\n\t\tvalue = value.substr(0, options.maxValueLength) + '...';\n\t}\n\tif (!value) {\n\t\tvalue = '';\n\t}\n\n\tif (options.linkDetector) {\n\t\tcontainer.textContent = '';\n\t\tconst session = (expressionOrValue instanceof ExpressionContainer) ? expressionOrValue.getSession() : undefined;\n\t\tcontainer.appendChild(options.linkDetector.linkify(value, false, session ? session.root : undefined));\n\t} else {\n\t\tcontainer.textContent = value;\n\t}\n\tif (options.showHover) {\n\t\tcontainer.title = value || '';\n\t}\n}\n\nexport function renderVariable(variable: Variable, data: IVariableTemplateData, showChanged: boolean, highlights: IHighlight[], linkDetector?: LinkDetector): void {\n\tif (variable.available) {\n\t\tlet text = variable.name;\n\t\tif (variable.value && typeof variable.name === 'string') {\n\t\t\ttext += ':';\n\t\t}\n\t\tdata.label.set(text, highlights, variable.type ? variable.type : variable.name);\n\t\tdata.name.classList.toggle('virtual', !!variable.presentationHint && variable.presentationHint.kind === 'virtual');\n\t} else if (variable.value && typeof variable.name === 'string' && variable.name) {\n\t\tdata.label.set(':');\n\t}\n\n\trenderExpressionValue(variable, data.value, {\n\t\tshowChanged,\n\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\tshowHover: true,\n\t\tcolorize: true,\n\t\tlinkDetector\n\t});\n}\n\nexport interface IInputBoxOptions {\n\tinitialValue: string;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tvalidationOptions?: IInputValidationOptions;\n\tonFinish: (value: string, success: boolean) => void;\n}\n\nexport interface IExpressionTemplateData {\n\texpression: HTMLElement;\n\tname: HTMLSpanElement;\n\tvalue: HTMLSpanElement;\n\tinputBoxContainer: HTMLElement;\n\ttoDispose: IDisposable;\n\tlabel: HighlightedLabel;\n}\n\nexport abstract class AbstractExpressionsRenderer implements ITreeRenderer<IExpression, FuzzyScore, IExpressionTemplateData> {\n\n\tconstructor(\n\t\t@IDebugService protected debugService: IDebugService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) { }\n\n\tabstract get templateId(): string;\n\n\trenderTemplate(container: HTMLElement): IExpressionTemplateData {\n\t\tconst expression = dom.append(container, $('.expression'));\n\t\tconst name = dom.append(expression, $('span.name'));\n\t\tconst value = dom.append(expression, $('span.value'));\n\t\tconst label = new HighlightedLabel(name, false);\n\n\t\tconst inputBoxContainer = dom.append(expression, $('.inputBoxContainer'));\n\n\t\treturn { expression, name, value, label, inputBoxContainer, toDispose: Disposable.None };\n\t}\n\n\trenderElement(node: ITreeNode<IExpression, FuzzyScore>, index: number, data: IExpressionTemplateData): void {\n\t\tdata.toDispose.dispose();\n\t\tdata.toDispose = Disposable.None;\n\t\tconst { element } = node;\n\t\tthis.renderExpression(element, data, createMatches(node.filterData));\n\t\tif (element === this.debugService.getViewModel().getSelectedExpression() || (element instanceof Variable && element.errorMessage)) {\n\t\t\tconst options = this.getInputBoxOptions(element);\n\t\t\tif (options) {\n\t\t\t\tdata.toDispose = this.renderInputBox(data.name, data.value, data.inputBoxContainer, options);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\trenderInputBox(nameElement: HTMLElement, valueElement: HTMLElement, inputBoxContainer: HTMLElement, options: IInputBoxOptions): IDisposable {\n\t\tnameElement.style.display = 'none';\n\t\tvalueElement.style.display = 'none';\n\t\tinputBoxContainer.style.display = 'initial';\n\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, options);\n\t\tconst styler = attachInputBoxStyler(inputBox, this.themeService);\n\n\t\tinputBox.value = options.initialValue;\n\t\tinputBox.focus();\n\t\tinputBox.select();\n\n\t\tconst done = once((success: boolean, finishEditing: boolean) => {\n\t\t\tnameElement.style.display = 'initial';\n\t\t\tvalueElement.style.display = 'initial';\n\t\t\tinputBoxContainer.style.display = 'none';\n\t\t\tconst value = inputBox.value;\n\t\t\tdispose(toDispose);\n\n\t\t\tif (finishEditing) {\n\t\t\t\tthis.debugService.getViewModel().setSelectedExpression(undefined);\n\t\t\t\toptions.onFinish(value, success);\n\t\t\t}\n\t\t});\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tdom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, (e: IKeyboardEvent) => {\n\t\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\t\tif (isEscape || isEnter) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tdone(isEnter, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, () => {\n\t\t\t\tdone(true, true);\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.CLICK, e => {\n\t\t\t\t// Do not expand / collapse selected elements\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}),\n\t\t\tstyler\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tprotected abstract renderExpression(expression: IExpression, data: IExpressionTemplateData, highlights: IHighlight[]): void;\n\tprotected abstract getInputBoxOptions(expression: IExpression): IInputBoxOptions | undefined;\n\n\tdisposeElement(node: ITreeNode<IExpression, FuzzyScore>, index: number, templateData: IExpressionTemplateData): void {\n\t\ttemplateData.toDispose.dispose();\n\t}\n\n\tdisposeTemplate(templateData: IExpressionTemplateData): void {\n\t\ttemplateData.toDispose.dispose();\n\t}\n}\n"]}