{"version":3,"sources":["vs/workbench/contrib/debug/browser/rawDebugSession.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkChG;;OAEG;IACH,IAAa,eAAe,GAA5B,MAAa,eAAe;QAuC3B,YACC,YAA2B,EACX,IAAe,EACd,SAAiB,EACE,gBAAmC,EACrB,sBAAuD,EAC5D,yBAAqD,EACjE,aAA6B,EACvB,mBAAyC,EAC/C,aAA6B;YAP9C,SAAI,GAAJ,IAAI,CAAW;YACd,cAAS,GAAT,SAAS,CAAQ;YACE,qBAAgB,GAAhB,gBAAgB,CAAmB;YACrB,2BAAsB,GAAtB,sBAAsB,CAAiC;YAC5D,8BAAyB,GAAzB,yBAAyB,CAA4B;YACjE,kBAAa,GAAb,aAAa,CAAgB;YACvB,wBAAmB,GAAnB,mBAAmB,CAAsB;YAC/C,kBAAa,GAAb,aAAa,CAAgB;YA9CvD,wBAAmB,GAAG,IAAI,CAAC;YAC3B,yBAAoB,GAAG,KAAK,CAAC;YAGrC,WAAW;YACH,wBAAmB,GAAG,KAAK,CAAC;YAC5B,eAAU,GAAG,KAAK,CAAC;YACnB,eAAU,GAAG,KAAK,CAAC;YACnB,0BAAqB,GAAG,KAAK,CAAC;YAEtC,YAAY;YACJ,cAAS,GAAG,CAAC,CAAC;YACd,2BAAsB,GAAG,KAAK,CAAC;YAEvC,aAAa;YACI,qBAAgB,GAAG,IAAI,eAAO,EAAkC,CAAC;YACjE,eAAU,GAAG,IAAI,eAAO,EAA8B,CAAC;YACvD,oBAAe,GAAG,IAAI,eAAO,EAAgC,CAAC;YAC9D,2BAAsB,GAAG,IAAI,eAAO,EAAiC,CAAC;YACtE,sBAAiB,GAAG,IAAI,eAAO,EAA6B,CAAC;YAC7D,iBAAY,GAAG,IAAI,eAAO,EAA6B,CAAC;YACxD,iBAAY,GAAG,IAAI,eAAO,EAA6B,CAAC;YACxD,qBAAgB,GAAG,IAAI,eAAO,EAAiC,CAAC;YAChE,uBAAkB,GAAG,IAAI,eAAO,EAAmC,CAAC;YACpE,wBAAmB,GAAG,IAAI,eAAO,EAAoC,CAAC;YACtE,yBAAoB,GAAG,IAAI,eAAO,EAAqC,CAAC;YACxE,sBAAiB,GAAG,IAAI,eAAO,EAAkC,CAAC;YAClE,sBAAiB,GAAG,IAAI,eAAO,EAAkC,CAAC;YAClE,sBAAiB,GAAG,IAAI,eAAO,EAAuB,CAAC;YACvD,gBAAW,GAAG,IAAI,eAAO,EAAuB,CAAC;YAElE,YAAY;YACK,sBAAiB,GAAG,IAAI,eAAO,EAAmB,CAAC;YAG5D,cAAS,GAAkB,EAAE,CAAC;YAarC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACnD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,CAAC;iBAC/C;qBAAM;oBACN,cAAc;oBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;iBAChB;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACjC,QAAQ,KAAK,CAAC,KAAK,EAAE;oBACpB,KAAK,aAAa;wBACjB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;wBACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAClC,MAAM;oBACP,KAAK,cAAc;wBAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAkC,KAAK,CAAC,CAAC;wBACrE,MAAM;oBACP,KAAK,cAAc;wBAClB,IAAI,KAAK,CAAC,IAAI,EAAE;4BACf,MAAM,YAAY,GAAqC,KAAM,CAAC,IAAI,CAAC,YAAY,CAAC;4BAChF,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;yBACrC;wBACD,MAAM;oBACP,KAAK,SAAS;wBACb,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAE,yDAAyD;wBAC9F,IAAI,CAAC,UAAU,CAAC,IAAI,CAA6B,KAAK,CAAC,CAAC;wBACxD,MAAM;oBACP,KAAK,WAAW;wBACf,IAAI,CAAC,mBAAmB,GAAkC,KAAM,CAAC,IAAI,CAAC,mBAAmB,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;wBACnH,IAAI,CAAC,eAAe,CAAC,IAAI,CAA+B,KAAK,CAAC,CAAC;wBAC/D,MAAM;oBACP,KAAK,QAAQ;wBACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAA4B,KAAK,CAAC,CAAC;wBACzD,MAAM;oBACP,KAAK,QAAQ;wBACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAA4B,KAAK,CAAC,CAAC;wBACzD,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAgC,KAAK,CAAC,CAAC;wBACjE,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAgC,KAAK,CAAC,CAAC;wBACvE,MAAM;oBACP,KAAK,MAAM;wBACV,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAA4B,KAAK,CAAC,CAAC;wBAC9D,MAAM;oBACP,KAAK,eAAe;wBACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAyC,CAAC,CAAC;wBACzE,MAAM;oBACP,KAAK,gBAAgB;wBACpB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAA0C,CAAC,CAAC;wBAC3E,MAAM;oBACP,KAAK,aAAa;wBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAuC,CAAC,CAAC;wBACrE,MAAM;oBACP,KAAK,aAAa;wBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAuC,CAAC,CAAC;wBACrE,MAAM;oBACP,KAAK,SAAS;wBACb,MAAM;oBACP,KAAK,QAAQ;wBACZ,MAAM;oBACP;wBACC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACnC,MAAM;iBACP;gBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAI,YAAY;YACf,OAAO,IAAI,CAAC,aAAa,CAAC;QAC3B,CAAC;QAED;;;WAGG;QACH,IAAI,mBAAmB;YACtB,OAAO,IAAI,CAAC,oBAAoB,CAAC;QAClC,CAAC;QAED,iBAAiB;QAEjB,IAAI,eAAe;YAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACpC,CAAC;QAED,IAAI,SAAS;YACZ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC9B,CAAC;QAED,IAAI,cAAc;YACjB,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACnC,CAAC;QAED,IAAI,qBAAqB;YACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAC1C,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAChC,CAAC;QAED,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAChC,CAAC;QAED,IAAI,eAAe;YAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACpC,CAAC;QAED,IAAI,iBAAiB;YACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACtC,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAI,kBAAkB;YACrB,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACvC,CAAC;QAED,IAAI,mBAAmB;YACtB,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QACxC,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAI,UAAU;YACb,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAC/B,CAAC;QAED,6BAA6B;QAE7B;;WAEG;QACH,KAAK,CAAC,KAAK;YACV,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACvB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAqB,EAAE,IAAgD,CAAC,CAAC,CAAC,CAAC;aACxH;YAED,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;QAED;;WAEG;QACH,KAAK,CAAC,UAAU,CAAC,IAA8C;YAC9D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,QAAQ,EAAE;gBACb,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACtC;YAED,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED;;WAEG;QACH,UAAU,CAAC,IAAuC;YACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;YAC1G,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QAClE,CAAC;QAED,mBAAmB;QAEnB,KAAK,CAAC,cAAc,CAAC,MAAe;YACnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACzD,IAAI,QAAQ,EAAE;gBACb,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACtC;YAED,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED;;WAEG;QACH,SAAS,CAAC,OAAO,GAAG,KAAK;YACxB,IAAI,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;iBAC5D;gBACD,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;aAC7D;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC9D,CAAC;QAED,OAAO,CAAC,IAAoC;YAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE;gBAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAClC;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,KAAK,CAAC,IAAI,CAAC,IAAiC;YAC3C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED,KAAK,CAAC,MAAM,CAAC,IAAmC;YAC/C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED,KAAK,CAAC,OAAO,CAAC,IAAoC;YACjD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED,KAAK,CAAC,QAAQ,CAAC,IAAqC;YACnD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAiC,UAAU,EAAE,IAAI,CAAC,CAAC;YACnF,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;gBACjF,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;aAC7D;YACD,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAE1E,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED,KAAK,CAAC,IAAkC;YACvC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC;QAED,gBAAgB,CAAC,IAA6C;YAC7D,IAAI,IAAI,CAAC,YAAY,CAAC,+BAA+B,EAAE;gBACtD,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;aAC3C;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,WAAW,CAAC,IAAwC;YACnD,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE;gBAC1C,OAAO,IAAI,CAAC,IAAI,CAAoC,aAAa,EAAE,IAAI,CAAC,CAAC;aACzE;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC/D,CAAC;QAED,KAAK,CAAC,YAAY,CAAC,IAAyC,EAAE,QAAgB;YAC7E,IAAI,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE;gBAC3C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;gBACvD,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;gBAC3C,OAAO,QAAQ,CAAC;aAChB;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAChE,CAAC;QAED,aAAa,CAAC,IAA0C;YACvD,IAAI,IAAI,CAAC,YAAY,CAAC,4BAA4B,EAAE;gBACnD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACxC;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,WAAW,CAAC,IAAwC,EAAE,KAAwB;YAC7E,IAAI,IAAI,CAAC,YAAY,CAAC,0BAA0B,EAAE;gBACjD,OAAO,IAAI,CAAC,IAAI,CAAoC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAChF;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC/D,CAAC;QAED,cAAc,CAAC,IAA2C;YACzD,OAAO,IAAI,CAAC,IAAI,CAAuC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAChF,CAAC;QAED,sBAAsB,CAAC,IAAmD;YACzE,IAAI,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE;gBAClD,OAAO,IAAI,CAAC,IAAI,CAA+C,wBAAwB,EAAE,IAAI,CAAC,CAAC;aAC/F;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,kBAAkB,CAAC,IAA+C;YACjE,IAAI,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE;gBAC9C,OAAO,IAAI,CAAC,IAAI,CAA2C,oBAAoB,EAAE,IAAI,CAAC,CAAC;aACvF;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,kBAAkB,CAAC,IAA+C;YACjE,IAAI,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE;gBAC9C,OAAO,IAAI,CAAC,IAAI,CAA2C,oBAAoB,EAAE,IAAI,CAAC,CAAC;aACvF;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,uBAAuB,CAAC,IAAoD;YAC3E,OAAO,IAAI,CAAC,IAAI,CAAgD,yBAAyB,EAAE,IAAI,CAAC,CAAC;QAClG,CAAC;QAED,mBAAmB,CAAC,IAAgD;YACnE,IAAI,IAAI,CAAC,YAAY,CAAC,kCAAkC,EAAE;gBACzD,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;aAC9C;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,iBAAiB;YAChB,IAAI,IAAI,CAAC,YAAY,CAAC,gCAAgC,EAAE;gBACvD,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;aAC5C;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;QACrE,CAAC;QAED,UAAU,CAAC,IAAuC,EAAE,KAAwB;YAC3E,OAAO,IAAI,CAAC,IAAI,CAAmC,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/E,CAAC;QAED,aAAa,CAAC,IAA0C;YACvD,IAAI,IAAI,CAAC,YAAY,CAAC,4BAA4B,EAAE;gBACnD,OAAO,IAAI,CAAC,IAAI,CAAsC,eAAe,EAAE,IAAI,CAAC,CAAC;aAC7E;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,MAAM,CAAC,IAAmC,EAAE,KAAwB;YACnE,OAAO,IAAI,CAAC,IAAI,CAA+B,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACvE,CAAC;QAED,SAAS,CAAC,IAAsC,EAAE,KAAyB;YAC1E,OAAO,IAAI,CAAC,IAAI,CAAkC,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC;QAED,MAAM,CAAC,IAAmC;YACzC,OAAO,IAAI,CAAC,IAAI,CAA+B,QAAQ,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC;QAED,aAAa,CAAC,IAA0C;YACvD,IAAI,IAAI,CAAC,YAAY,CAAC,4BAA4B,EAAE;gBACnD,OAAO,IAAI,CAAC,IAAI,CAAsC,eAAe,EAAE,IAAI,CAAC,CAAC;aAC7E;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,OAAO;YACN,OAAO,IAAI,CAAC,IAAI,CAAgC,SAAS,EAAE,IAAI,CAAC,CAAC;QAClE,CAAC;QAED,QAAQ,CAAC,IAAqC;YAC7C,OAAO,IAAI,CAAC,IAAI,CAAiC,UAAU,EAAE,IAAI,CAAC,CAAC;QACpE,CAAC;QAED,KAAK,CAAC,QAAQ,CAAC,IAAqC;YACnD,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;gBACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBACnD,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,OAAO,QAAQ,CAAC;aAChB;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,KAAK,CAAC,eAAe,CAAC,IAA4C;YACjE,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;gBACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;gBAC1D,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,OAAO,QAAQ,CAAC;aAChB;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,WAAW,CAAC,IAAwC;YACnD,IAAI,IAAI,CAAC,YAAY,CAAC,0BAA0B,EAAE;gBACjD,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACtC;YACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAClE,CAAC;QAED,KAAK,CAAC,IAAI,CAAC,IAAiC;YAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,0BAA0B,EAAE;gBACjD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,OAAO,QAAQ,CAAC;aAChB;YAED,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,CAAC,IAAmC;YACzC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,CAAC,OAAe,EAAE,IAAS;YAChC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC;QAED,cAAc;QAEN,KAAK,CAAC,QAAQ,CAAC,KAAa,EAAE,OAAO,GAAG,KAAK,EAAE,oBAAyC,SAAS;YACxG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,IAAI,CAAC,YAAY,EAAE;oBACtB,IAAI;wBACH,MAAM,IAAI,GAAG,OAAO,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC;wBACnG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;qBAC/C;oBAAC,OAAO,CAAC,EAAE;wBACX,6GAA6G;qBAC7G;4BAAS;wBACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACD;qBAAM;oBACN,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC/B;aACD;QACF,CAAC;QAEO,KAAK,CAAC,WAAW,CAAC,KAAa;YACtC,IAAI;gBACH,IAAI,IAAI,CAAC,YAAY,EAAE;oBACtB,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;oBAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,MAAM,EAAE,CAAC,WAAW,EAAE,CAAC;oBACvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;iBAChC;aACD;oBAAS;gBACT,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;aACjC;QACF,CAAC;QAEO,oBAAoB,CAAC,KAAa;YACzC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBAChC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAElC,MAAM,CAAC,GAAoB;oBAC1B,cAAc,EAAE,IAAI,CAAC,sBAAsB;oBAC3C,sBAAsB,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI;iBACtE,CAAC;gBACF,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;oBACvC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;iBAChB;gBACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC/B;QACF,CAAC;QAEO,KAAK,CAAC,eAAe,CAAC,OAA8B,EAAE,IAAe;YAE5E,MAAM,QAAQ,GAA2B;gBACxC,IAAI,EAAE,UAAU;gBAChB,GAAG,EAAE,CAAC;gBACN,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,WAAW,EAAE,OAAO,CAAC,GAAG;gBACxB,OAAO,EAAE,IAAI;aACb,CAAC;YAEF,MAAM,gBAAgB,GAAG,CAAC,QAAgC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAE7H,QAAQ,OAAO,CAAC,OAAO,EAAE;gBACxB,KAAK,cAAc;oBAClB,IAAI;wBACH,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAyB,OAAO,CAAC,SAAS,CAAC,CAAC;wBAChF,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;4BACpB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,uBAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAa,EAAE,IAAuI,CAAC,EACtO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAU,EAAE,IAAU,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAQ,EAAE,IAAQ,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;4BAC5F,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gCAC5B,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAyB,OAAO,CAAC,SAAS,CAAC,CAAC;6BAC5E;iCAAM;gCACN,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;gCACzB,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gCAC3B,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;6BACtB;yBACD;wBACD,QAAQ,CAAC,IAAI,GAAG;4BACf,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;yBAC3C,CAAC;wBACF,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBAC3B;oBAAC,OAAO,GAAG,EAAE;wBACb,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;wBACzB,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC/B,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBAC3B;oBACD,MAAM;gBACP,KAAK,eAAe;oBACnB,IAAI;wBACH,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAwD,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;wBAClI,MAAM,IAAI,GAAG,QAA+C,CAAC;wBAC7D,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;wBACf,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;4BACvC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;yBAC1C;wBACD,gBAAgB,CAAC,IAAI,CAAC,CAAC;qBACvB;oBAAC,OAAO,GAAG,EAAE;wBACb,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;wBACzB,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC/B,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBAC3B;oBACD,MAAM;gBACP;oBACC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;oBACzB,QAAQ,CAAC,OAAO,GAAG,oBAAoB,OAAO,CAAC,OAAO,GAAG,CAAC;oBAC1D,gBAAgB,CAAC,QAAQ,CAAC,CAAC;oBAC3B,MAAM;aACP;QACF,CAAC;QAEO,YAAY,CAAC,UAAkC;YAEtD,MAAM,IAAI,GAAa,EAAE,CAAC;YAE1B,KAAK,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE;gBAChC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;gBACjD,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBAChC,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAErB,IAAI,CAAC,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,YAAY,CAAC,IAAI,CAAC,CAAA,GAAA,kBAAK,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBACrE,KAAK,GAAG,SAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;qBACnC;oBACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC;iBAC/B;qBAAM;oBACN,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACd;aACD;YAED,OAAO,IAAI,CAAC,yBAAyB,CAAC,kCAAkC,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC5H,CAAC;QAEO,IAAI,CAAmC,OAAe,EAAE,IAAS,EAAE,KAAyB,EAAE,OAAgB;YACrH,OAAO,IAAI,OAAO,CAAqC,CAAC,gBAAgB,EAAE,aAAa,EAAE,EAAE;gBAC1F,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACvB,IAAI,IAAI,CAAC,UAAU,EAAE;wBACpB,uCAAuC;wBACvC,gBAAgB,CAAC,SAAS,CAAC,CAAC;qBAC5B;yBAAM;wBACN,aAAa,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAAkD,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;qBACtH;oBACD,OAAO;iBACP;gBAED,IAAI,mBAAgC,CAAC;gBACrC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,QAAgC,EAAE,EAAE;oBACnG,IAAI,mBAAmB,EAAE;wBACxB,mBAAmB,CAAC,OAAO,EAAE,CAAC;qBAC9B;oBAED,IAAI,QAAQ,CAAC,OAAO,EAAE;wBACrB,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBAC3B;yBAAM;wBACN,aAAa,CAAC,QAAQ,CAAC,CAAC;qBACxB;gBACF,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEZ,IAAI,KAAK,EAAE;oBACV,mBAAmB,GAAG,KAAK,CAAC,uBAAuB,CAAC,GAAG,EAAE;wBACxD,mBAAmB,CAAC,OAAO,EAAE,CAAC;wBAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE;4BAC5C,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;yBAC3B;oBACF,CAAC,CAAC,CAAC;iBACH;YACF,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1E,CAAC;QAEO,mBAAmB,CAAC,aAAqC;;YAEhE,IAAI,aAAa,CAAC,OAAO,KAAK,UAAU,IAAI,aAAa,CAAC,OAAO,KAAK,UAAU,EAAE;gBACjF,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;aACzB;YAED,MAAM,KAAK,GAAsC,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,IAAI,0CAAE,KAAK,CAAC;YAC5E,MAAM,YAAY,GAAG,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,KAAI,EAAE,CAAC;YAElD,IAAI,KAAK,IAAI,KAAK,CAAC,aAAa,EAAE;gBACjC,MAAM,gBAAgB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA,GAAA,sBAAS,CAAA,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBAC/F,IAAI,CAAC,mCAAmC,CAAC,gBAAgB,CAAC,CAAC;aAC3D;YAED,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA,GAAA,sBAAS,CAAA,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAC3F,MAAM,GAAG,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC;YACvB,IAAI,KAAK,IAAI,GAAG,EAAE;gBACjB,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAU,EAAE,IAAW,CAAC,CAAC;gBACtF,OAAO,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE;oBACjD,OAAO,EAAE,CAAC,IAAI,gBAAM,CAAC,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;4BACzE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;wBACzC,CAAC,CAAC,CAAC;iBACH,CAAC,CAAC;aACH;YACD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAC5C,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAC5C;YAED,OAAO,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC;QAEO,iBAAiB,CAAC,YAAoD;YAC7E,IAAI,YAAY,EAAE;gBACjB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;aACrE;QACF,CAAC;QAEO,2BAA2B,CAAC,QAAgB,EAAE,mBAAmB,GAAG,KAAK;YAChF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBACzB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE;oBACL,QAAQ;oBACR,mBAAmB;iBACnB;gBACD,GAAG,EAAE,SAAU;aACf,CAAC,CAAC;QACJ,CAAC;QAEO,mCAAmC,CAAC,gBAAoC;YAC/E;;;;cAIE;YACF,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,4BAA4B,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAChG,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACjE,IAAI,iBAAiB,EAAE;gBACtB;;;kBAGE;gBACF,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,iBAAiB,EAAE,4BAA4B,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;aACzH;QACF,CAAC;QAED,OAAO;YACN,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC;KACD,CAAA;IA/rBY,eAAe;QA2CzB,WAAA,6BAAiB,CAAA;QACjB,WAAA,2CAA+B,CAAA;QAC/B,WAAA,+CAA0B,CAAA;QAC1B,WAAA,uBAAc,CAAA;QACd,WAAA,mCAAoB,CAAA;QACpB,WAAA,wBAAc,CAAA;OAhDJ,eAAe,CA+rB3B;IA/rBY,0CAAe","file":"rawDebugSession.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as objects from 'vs/base/common/objects';\nimport { Action } from 'vs/base/common/actions';\nimport * as errors from 'vs/base/common/errors';\nimport { ICustomEndpointTelemetryService, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { formatPII, isUri } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IDebugAdapter, IConfig, AdapterEndEvent, IDebugger } from 'vs/workbench/contrib/debug/common/debug';\nimport { IExtensionHostDebugService, IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { URI } from 'vs/base/common/uri';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\n\n/**\n * This interface represents a single command line argument split into a \"prefix\" and a \"path\" half.\n * The optional \"prefix\" contains arbitrary text and the optional \"path\" contains a file system path.\n * Concatenating both results in the original command line argument.\n */\ninterface ILaunchVSCodeArgument {\n\tprefix?: string;\n\tpath?: string;\n}\n\ninterface ILaunchVSCodeArguments {\n\targs: ILaunchVSCodeArgument[];\n\tdebugRenderer?: boolean;\n\tenv?: { [key: string]: string | null; };\n}\n\n/**\n * Encapsulates the DebugAdapter lifecycle and some idiosyncrasies of the Debug Adapter Protocol.\n */\nexport class RawDebugSession implements IDisposable {\n\n\tprivate allThreadsContinued = true;\n\tprivate _readyForBreakpoints = false;\n\tprivate _capabilities: DebugProtocol.Capabilities;\n\n\t// shutdown\n\tprivate debugAdapterStopped = false;\n\tprivate inShutdown = false;\n\tprivate terminated = false;\n\tprivate firedAdapterExitEvent = false;\n\n\t// telemetry\n\tprivate startTime = 0;\n\tprivate didReceiveStoppedEvent = false;\n\n\t// DAP events\n\tprivate readonly _onDidInitialize = new Emitter<DebugProtocol.InitializedEvent>();\n\tprivate readonly _onDidStop = new Emitter<DebugProtocol.StoppedEvent>();\n\tprivate readonly _onDidContinued = new Emitter<DebugProtocol.ContinuedEvent>();\n\tprivate readonly _onDidTerminateDebugee = new Emitter<DebugProtocol.TerminatedEvent>();\n\tprivate readonly _onDidExitDebugee = new Emitter<DebugProtocol.ExitedEvent>();\n\tprivate readonly _onDidThread = new Emitter<DebugProtocol.ThreadEvent>();\n\tprivate readonly _onDidOutput = new Emitter<DebugProtocol.OutputEvent>();\n\tprivate readonly _onDidBreakpoint = new Emitter<DebugProtocol.BreakpointEvent>();\n\tprivate readonly _onDidLoadedSource = new Emitter<DebugProtocol.LoadedSourceEvent>();\n\tprivate readonly _onDidProgressStart = new Emitter<DebugProtocol.ProgressStartEvent>();\n\tprivate readonly _onDidProgressUpdate = new Emitter<DebugProtocol.ProgressUpdateEvent>();\n\tprivate readonly _onDidProgressEnd = new Emitter<DebugProtocol.ProgressEndEvent>();\n\tprivate readonly _onDidInvalidated = new Emitter<DebugProtocol.InvalidatedEvent>();\n\tprivate readonly _onDidCustomEvent = new Emitter<DebugProtocol.Event>();\n\tprivate readonly _onDidEvent = new Emitter<DebugProtocol.Event>();\n\n\t// DA events\n\tprivate readonly _onDidExitAdapter = new Emitter<AdapterEndEvent>();\n\tprivate debugAdapter: IDebugAdapter | null;\n\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\tdebugAdapter: IDebugAdapter,\n\t\tpublic readonly dbgr: IDebugger,\n\t\tprivate readonly sessionId: string,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ICustomEndpointTelemetryService private readonly customTelemetryService: ICustomEndpointTelemetryService,\n\t\t@IExtensionHostDebugService private readonly extensionHostDebugService: IExtensionHostDebugService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogSerivce: IDialogService,\n\t) {\n\t\tthis.debugAdapter = debugAdapter;\n\t\tthis._capabilities = Object.create(null);\n\n\t\tthis.toDispose.push(this.debugAdapter.onError(err => {\n\t\t\tthis.shutdown(err);\n\t\t}));\n\n\t\tthis.toDispose.push(this.debugAdapter.onExit(code => {\n\t\t\tif (code !== 0) {\n\t\t\t\tthis.shutdown(new Error(`exit code: ${code}`));\n\t\t\t} else {\n\t\t\t\t// normal exit\n\t\t\t\tthis.shutdown();\n\t\t\t}\n\t\t}));\n\n\t\tthis.debugAdapter.onEvent(event => {\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'initialized':\n\t\t\t\t\tthis._readyForBreakpoints = true;\n\t\t\t\t\tthis._onDidInitialize.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tthis._onDidLoadedSource.fire(<DebugProtocol.LoadedSourceEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'capabilities':\n\t\t\t\t\tif (event.body) {\n\t\t\t\t\t\tconst capabilities = (<DebugProtocol.CapabilitiesEvent>event).body.capabilities;\n\t\t\t\t\t\tthis.mergeCapabilities(capabilities);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stopped':\n\t\t\t\t\tthis.didReceiveStoppedEvent = true;\t\t// telemetry: remember that debugger stopped successfully\n\t\t\t\t\tthis._onDidStop.fire(<DebugProtocol.StoppedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'continued':\n\t\t\t\t\tthis.allThreadsContinued = (<DebugProtocol.ContinuedEvent>event).body.allThreadsContinued === false ? false : true;\n\t\t\t\t\tthis._onDidContinued.fire(<DebugProtocol.ContinuedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thread':\n\t\t\t\t\tthis._onDidThread.fire(<DebugProtocol.ThreadEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output':\n\t\t\t\t\tthis._onDidOutput.fire(<DebugProtocol.OutputEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tthis._onDidBreakpoint.fire(<DebugProtocol.BreakpointEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'terminated':\n\t\t\t\t\tthis._onDidTerminateDebugee.fire(<DebugProtocol.TerminatedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'exit':\n\t\t\t\t\tthis._onDidExitDebugee.fire(<DebugProtocol.ExitedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressStart':\n\t\t\t\t\tthis._onDidProgressStart.fire(event as DebugProtocol.ProgressStartEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressUpdate':\n\t\t\t\t\tthis._onDidProgressUpdate.fire(event as DebugProtocol.ProgressUpdateEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressEnd':\n\t\t\t\t\tthis._onDidProgressEnd.fire(event as DebugProtocol.ProgressEndEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'invalidated':\n\t\t\t\t\tthis._onDidInvalidated.fire(event as DebugProtocol.InvalidatedEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'process':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'module':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis._onDidCustomEvent.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._onDidEvent.fire(event);\n\t\t});\n\n\t\tthis.debugAdapter.onRequest(request => this.dispatchRequest(request, dbgr));\n\t}\n\n\tget onDidExitAdapter(): Event<AdapterEndEvent> {\n\t\treturn this._onDidExitAdapter.event;\n\t}\n\n\tget capabilities(): DebugProtocol.Capabilities {\n\t\treturn this._capabilities;\n\t}\n\n\t/**\n\t * DA is ready to accepts setBreakpoint requests.\n\t * Becomes true after \"initialized\" events has been received.\n\t */\n\tget readyForBreakpoints(): boolean {\n\t\treturn this._readyForBreakpoints;\n\t}\n\n\t//---- DAP events\n\n\tget onDidInitialize(): Event<DebugProtocol.InitializedEvent> {\n\t\treturn this._onDidInitialize.event;\n\t}\n\n\tget onDidStop(): Event<DebugProtocol.StoppedEvent> {\n\t\treturn this._onDidStop.event;\n\t}\n\n\tget onDidContinued(): Event<DebugProtocol.ContinuedEvent> {\n\t\treturn this._onDidContinued.event;\n\t}\n\n\tget onDidTerminateDebugee(): Event<DebugProtocol.TerminatedEvent> {\n\t\treturn this._onDidTerminateDebugee.event;\n\t}\n\n\tget onDidExitDebugee(): Event<DebugProtocol.ExitedEvent> {\n\t\treturn this._onDidExitDebugee.event;\n\t}\n\n\tget onDidThread(): Event<DebugProtocol.ThreadEvent> {\n\t\treturn this._onDidThread.event;\n\t}\n\n\tget onDidOutput(): Event<DebugProtocol.OutputEvent> {\n\t\treturn this._onDidOutput.event;\n\t}\n\n\tget onDidBreakpoint(): Event<DebugProtocol.BreakpointEvent> {\n\t\treturn this._onDidBreakpoint.event;\n\t}\n\n\tget onDidLoadedSource(): Event<DebugProtocol.LoadedSourceEvent> {\n\t\treturn this._onDidLoadedSource.event;\n\t}\n\n\tget onDidCustomEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidCustomEvent.event;\n\t}\n\n\tget onDidProgressStart(): Event<DebugProtocol.ProgressStartEvent> {\n\t\treturn this._onDidProgressStart.event;\n\t}\n\n\tget onDidProgressUpdate(): Event<DebugProtocol.ProgressUpdateEvent> {\n\t\treturn this._onDidProgressUpdate.event;\n\t}\n\n\tget onDidProgressEnd(): Event<DebugProtocol.ProgressEndEvent> {\n\t\treturn this._onDidProgressEnd.event;\n\t}\n\n\tget onDidInvalidated(): Event<DebugProtocol.InvalidatedEvent> {\n\t\treturn this._onDidInvalidated.event;\n\t}\n\n\tget onDidEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidEvent.event;\n\t}\n\n\t//---- DebugAdapter lifecycle\n\n\t/**\n\t * Starts the underlying debug adapter and tracks the session time for telemetry.\n\t */\n\tasync start(): Promise<void> {\n\t\tif (!this.debugAdapter) {\n\t\t\treturn Promise.reject(new Error(nls.localize('noDebugAdapterStart', \"No debug adapter, can not start debug session.\")));\n\t\t}\n\n\t\tawait this.debugAdapter.startSession();\n\t\tthis.startTime = new Date().getTime();\n\t}\n\n\t/**\n\t * Send client capabilities to the debug adapter and receive DA capabilities in return.\n\t */\n\tasync initialize(args: DebugProtocol.InitializeRequestArguments): Promise<DebugProtocol.InitializeResponse | undefined> {\n\t\tconst response = await this.send('initialize', args);\n\t\tif (response) {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Terminate the debuggee and shutdown the adapter\n\t */\n\tdisconnect(args: DebugProtocol.DisconnectArguments): Promise<any> {\n\t\tconst terminateDebuggee = this.capabilities.supportTerminateDebuggee ? args.terminateDebuggee : undefined;\n\t\treturn this.shutdown(undefined, args.restart, terminateDebuggee);\n\t}\n\n\t//---- DAP requests\n\n\tasync launchOrAttach(config: IConfig): Promise<DebugProtocol.Response | undefined> {\n\t\tconst response = await this.send(config.request, config);\n\t\tif (response) {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Try killing the debuggee softly...\n\t */\n\tterminate(restart = false): Promise<DebugProtocol.TerminateResponse | undefined> {\n\t\tif (this.capabilities.supportsTerminateRequest) {\n\t\t\tif (!this.terminated) {\n\t\t\t\tthis.terminated = true;\n\t\t\t\treturn this.send('terminate', { restart }, undefined, 2000);\n\t\t\t}\n\t\t\treturn this.disconnect({ terminateDebuggee: true, restart });\n\t\t}\n\t\treturn Promise.reject(new Error('terminated not supported'));\n\t}\n\n\trestart(args: DebugProtocol.RestartArguments): Promise<DebugProtocol.RestartResponse | undefined> {\n\t\tif (this.capabilities.supportsRestartRequest) {\n\t\t\treturn this.send('restart', args);\n\t\t}\n\t\treturn Promise.reject(new Error('restart not supported'));\n\t}\n\n\tasync next(args: DebugProtocol.NextArguments): Promise<DebugProtocol.NextResponse | undefined> {\n\t\tconst response = await this.send('next', args);\n\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\treturn response;\n\t}\n\n\tasync stepIn(args: DebugProtocol.StepInArguments): Promise<DebugProtocol.StepInResponse | undefined> {\n\t\tconst response = await this.send('stepIn', args);\n\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\treturn response;\n\t}\n\n\tasync stepOut(args: DebugProtocol.StepOutArguments): Promise<DebugProtocol.StepOutResponse | undefined> {\n\t\tconst response = await this.send('stepOut', args);\n\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\treturn response;\n\t}\n\n\tasync continue(args: DebugProtocol.ContinueArguments): Promise<DebugProtocol.ContinueResponse | undefined> {\n\t\tconst response = await this.send<DebugProtocol.ContinueResponse>('continue', args);\n\t\tif (response && response.body && response.body.allThreadsContinued !== undefined) {\n\t\t\tthis.allThreadsContinued = response.body.allThreadsContinued;\n\t\t}\n\t\tthis.fireSimulatedContinuedEvent(args.threadId, this.allThreadsContinued);\n\n\t\treturn response;\n\t}\n\n\tpause(args: DebugProtocol.PauseArguments): Promise<DebugProtocol.PauseResponse | undefined> {\n\t\treturn this.send('pause', args);\n\t}\n\n\tterminateThreads(args: DebugProtocol.TerminateThreadsArguments): Promise<DebugProtocol.TerminateThreadsResponse | undefined> {\n\t\tif (this.capabilities.supportsTerminateThreadsRequest) {\n\t\t\treturn this.send('terminateThreads', args);\n\t\t}\n\t\treturn Promise.reject(new Error('terminateThreads not supported'));\n\t}\n\n\tsetVariable(args: DebugProtocol.SetVariableArguments): Promise<DebugProtocol.SetVariableResponse | undefined> {\n\t\tif (this.capabilities.supportsSetVariable) {\n\t\t\treturn this.send<DebugProtocol.SetVariableResponse>('setVariable', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setVariable not supported'));\n\t}\n\n\tasync restartFrame(args: DebugProtocol.RestartFrameArguments, threadId: number): Promise<DebugProtocol.RestartFrameResponse | undefined> {\n\t\tif (this.capabilities.supportsRestartFrame) {\n\t\t\tconst response = await this.send('restartFrame', args);\n\t\t\tthis.fireSimulatedContinuedEvent(threadId);\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('restartFrame not supported'));\n\t}\n\n\tstepInTargets(args: DebugProtocol.StepInTargetsArguments): Promise<DebugProtocol.StepInTargetsResponse | undefined> {\n\t\tif (this.capabilities.supportsStepInTargetsRequest) {\n\t\t\treturn this.send('stepInTargets', args);\n\t\t}\n\t\treturn Promise.reject(new Error('stepInTargets not supported'));\n\t}\n\n\tcompletions(args: DebugProtocol.CompletionsArguments, token: CancellationToken): Promise<DebugProtocol.CompletionsResponse | undefined> {\n\t\tif (this.capabilities.supportsCompletionsRequest) {\n\t\t\treturn this.send<DebugProtocol.CompletionsResponse>('completions', args, token);\n\t\t}\n\t\treturn Promise.reject(new Error('completions not supported'));\n\t}\n\n\tsetBreakpoints(args: DebugProtocol.SetBreakpointsArguments): Promise<DebugProtocol.SetBreakpointsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SetBreakpointsResponse>('setBreakpoints', args);\n\t}\n\n\tsetFunctionBreakpoints(args: DebugProtocol.SetFunctionBreakpointsArguments): Promise<DebugProtocol.SetFunctionBreakpointsResponse | undefined> {\n\t\tif (this.capabilities.supportsFunctionBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.SetFunctionBreakpointsResponse>('setFunctionBreakpoints', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setFunctionBreakpoints not supported'));\n\t}\n\n\tdataBreakpointInfo(args: DebugProtocol.DataBreakpointInfoArguments): Promise<DebugProtocol.DataBreakpointInfoResponse | undefined> {\n\t\tif (this.capabilities.supportsDataBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.DataBreakpointInfoResponse>('dataBreakpointInfo', args);\n\t\t}\n\t\treturn Promise.reject(new Error('dataBreakpointInfo not supported'));\n\t}\n\n\tsetDataBreakpoints(args: DebugProtocol.SetDataBreakpointsArguments): Promise<DebugProtocol.SetDataBreakpointsResponse | undefined> {\n\t\tif (this.capabilities.supportsDataBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.SetDataBreakpointsResponse>('setDataBreakpoints', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setDataBreakpoints not supported'));\n\t}\n\n\tsetExceptionBreakpoints(args: DebugProtocol.SetExceptionBreakpointsArguments): Promise<DebugProtocol.SetExceptionBreakpointsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SetExceptionBreakpointsResponse>('setExceptionBreakpoints', args);\n\t}\n\n\tbreakpointLocations(args: DebugProtocol.BreakpointLocationsArguments): Promise<DebugProtocol.BreakpointLocationsResponse | undefined> {\n\t\tif (this.capabilities.supportsBreakpointLocationsRequest) {\n\t\t\treturn this.send('breakpointLocations', args);\n\t\t}\n\t\treturn Promise.reject(new Error('breakpointLocations is not supported'));\n\t}\n\n\tconfigurationDone(): Promise<DebugProtocol.ConfigurationDoneResponse | undefined> {\n\t\tif (this.capabilities.supportsConfigurationDoneRequest) {\n\t\t\treturn this.send('configurationDone', null);\n\t\t}\n\t\treturn Promise.reject(new Error('configurationDone not supported'));\n\t}\n\n\tstackTrace(args: DebugProtocol.StackTraceArguments, token: CancellationToken): Promise<DebugProtocol.StackTraceResponse | undefined> {\n\t\treturn this.send<DebugProtocol.StackTraceResponse>('stackTrace', args, token);\n\t}\n\n\texceptionInfo(args: DebugProtocol.ExceptionInfoArguments): Promise<DebugProtocol.ExceptionInfoResponse | undefined> {\n\t\tif (this.capabilities.supportsExceptionInfoRequest) {\n\t\t\treturn this.send<DebugProtocol.ExceptionInfoResponse>('exceptionInfo', args);\n\t\t}\n\t\treturn Promise.reject(new Error('exceptionInfo not supported'));\n\t}\n\n\tscopes(args: DebugProtocol.ScopesArguments, token: CancellationToken): Promise<DebugProtocol.ScopesResponse | undefined> {\n\t\treturn this.send<DebugProtocol.ScopesResponse>('scopes', args, token);\n\t}\n\n\tvariables(args: DebugProtocol.VariablesArguments, token?: CancellationToken): Promise<DebugProtocol.VariablesResponse | undefined> {\n\t\treturn this.send<DebugProtocol.VariablesResponse>('variables', args, token);\n\t}\n\n\tsource(args: DebugProtocol.SourceArguments): Promise<DebugProtocol.SourceResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SourceResponse>('source', args);\n\t}\n\n\tloadedSources(args: DebugProtocol.LoadedSourcesArguments): Promise<DebugProtocol.LoadedSourcesResponse | undefined> {\n\t\tif (this.capabilities.supportsLoadedSourcesRequest) {\n\t\t\treturn this.send<DebugProtocol.LoadedSourcesResponse>('loadedSources', args);\n\t\t}\n\t\treturn Promise.reject(new Error('loadedSources not supported'));\n\t}\n\n\tthreads(): Promise<DebugProtocol.ThreadsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.ThreadsResponse>('threads', null);\n\t}\n\n\tevaluate(args: DebugProtocol.EvaluateArguments): Promise<DebugProtocol.EvaluateResponse | undefined> {\n\t\treturn this.send<DebugProtocol.EvaluateResponse>('evaluate', args);\n\t}\n\n\tasync stepBack(args: DebugProtocol.StepBackArguments): Promise<DebugProtocol.StepBackResponse | undefined> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\tconst response = await this.send('stepBack', args);\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('stepBack not supported'));\n\t}\n\n\tasync reverseContinue(args: DebugProtocol.ReverseContinueArguments): Promise<DebugProtocol.ReverseContinueResponse | undefined> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\tconst response = await this.send('reverseContinue', args);\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('reverseContinue not supported'));\n\t}\n\n\tgotoTargets(args: DebugProtocol.GotoTargetsArguments): Promise<DebugProtocol.GotoTargetsResponse | undefined> {\n\t\tif (this.capabilities.supportsGotoTargetsRequest) {\n\t\t\treturn this.send('gotoTargets', args);\n\t\t}\n\t\treturn Promise.reject(new Error('gotoTargets is not supported'));\n\t}\n\n\tasync goto(args: DebugProtocol.GotoArguments): Promise<DebugProtocol.GotoResponse | undefined> {\n\t\tif (this.capabilities.supportsGotoTargetsRequest) {\n\t\t\tconst response = await this.send('goto', args);\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t}\n\n\t\treturn Promise.reject(new Error('goto is not supported'));\n\t}\n\n\tcancel(args: DebugProtocol.CancelArguments): Promise<DebugProtocol.CancelResponse | undefined> {\n\t\treturn this.send('cancel', args);\n\t}\n\n\tcustom(request: string, args: any): Promise<DebugProtocol.Response | undefined> {\n\t\treturn this.send(request, args);\n\t}\n\n\t//---- private\n\n\tprivate async shutdown(error?: Error, restart = false, terminateDebuggee: boolean | undefined = undefined): Promise<any> {\n\t\tif (!this.inShutdown) {\n\t\t\tthis.inShutdown = true;\n\t\t\tif (this.debugAdapter) {\n\t\t\t\ttry {\n\t\t\t\t\tconst args = typeof terminateDebuggee === 'boolean' ? { restart, terminateDebuggee } : { restart };\n\t\t\t\t\tthis.send('disconnect', args, undefined, 2000);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Catch the potential 'disconnect' error - no need to show it to the user since the adapter is shutting down\n\t\t\t\t} finally {\n\t\t\t\t\tthis.stopAdapter(error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.stopAdapter(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async stopAdapter(error?: Error): Promise<any> {\n\t\ttry {\n\t\t\tif (this.debugAdapter) {\n\t\t\t\tconst da = this.debugAdapter;\n\t\t\t\tthis.debugAdapter = null;\n\t\t\t\tawait da.stopSession();\n\t\t\t\tthis.debugAdapterStopped = true;\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.fireAdapterExitEvent(error);\n\t\t}\n\t}\n\n\tprivate fireAdapterExitEvent(error?: Error): void {\n\t\tif (!this.firedAdapterExitEvent) {\n\t\t\tthis.firedAdapterExitEvent = true;\n\n\t\t\tconst e: AdapterEndEvent = {\n\t\t\t\temittedStopped: this.didReceiveStoppedEvent,\n\t\t\t\tsessionLengthInSeconds: (new Date().getTime() - this.startTime) / 1000\n\t\t\t};\n\t\t\tif (error && !this.debugAdapterStopped) {\n\t\t\t\te.error = error;\n\t\t\t}\n\t\t\tthis._onDidExitAdapter.fire(e);\n\t\t}\n\t}\n\n\tprivate async dispatchRequest(request: DebugProtocol.Request, dbgr: IDebugger): Promise<void> {\n\n\t\tconst response: DebugProtocol.Response = {\n\t\t\ttype: 'response',\n\t\t\tseq: 0,\n\t\t\tcommand: request.command,\n\t\t\trequest_seq: request.seq,\n\t\t\tsuccess: true\n\t\t};\n\n\t\tconst safeSendResponse = (response: DebugProtocol.Response) => this.debugAdapter && this.debugAdapter.sendResponse(response);\n\n\t\tswitch (request.command) {\n\t\t\tcase 'launchVSCode':\n\t\t\t\ttry {\n\t\t\t\t\tlet result = await this.launchVsCode(<ILaunchVSCodeArguments>request.arguments);\n\t\t\t\t\tif (!result.success) {\n\t\t\t\t\t\tconst showResult = await this.dialogSerivce.show(Severity.Warning, nls.localize('canNotStart', \"The debugger needs to open a new tab or window for the debuggee but the browser prevented this. You must give permission to continue.\"),\n\t\t\t\t\t\t\t[nls.localize('continue', \"Continue\"), nls.localize('cancel', \"Cancel\")], { cancelId: 1 });\n\t\t\t\t\t\tif (showResult.choice === 0) {\n\t\t\t\t\t\t\tresult = await this.launchVsCode(<ILaunchVSCodeArguments>request.arguments);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponse.success = false;\n\t\t\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t\t\t\tawait this.shutdown();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresponse.body = {\n\t\t\t\t\t\trendererDebugPort: result.rendererDebugPort,\n\t\t\t\t\t};\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = err.message;\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'runInTerminal':\n\t\t\t\ttry {\n\t\t\t\t\tconst shellProcessId = await dbgr.runInTerminal(request.arguments as DebugProtocol.RunInTerminalRequestArguments, this.sessionId);\n\t\t\t\t\tconst resp = response as DebugProtocol.RunInTerminalResponse;\n\t\t\t\t\tresp.body = {};\n\t\t\t\t\tif (typeof shellProcessId === 'number') {\n\t\t\t\t\t\tresp.body.shellProcessId = shellProcessId;\n\t\t\t\t\t}\n\t\t\t\t\tsafeSendResponse(resp);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = err.message;\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresponse.success = false;\n\t\t\t\tresponse.message = `unknown request '${request.command}'`;\n\t\t\t\tsafeSendResponse(response);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate launchVsCode(vscodeArgs: ILaunchVSCodeArguments): Promise<IOpenExtensionWindowResult> {\n\n\t\tconst args: string[] = [];\n\n\t\tfor (let arg of vscodeArgs.args) {\n\t\t\tconst a2 = (arg.prefix || '') + (arg.path || '');\n\t\t\tconst match = /^--(.+)=(.+)$/.exec(a2);\n\t\t\tif (match && match.length === 3) {\n\t\t\t\tconst key = match[1];\n\t\t\t\tlet value = match[2];\n\n\t\t\t\tif ((key === 'file-uri' || key === 'folder-uri') && !isUri(arg.path)) {\n\t\t\t\t\tvalue = URI.file(value).toString();\n\t\t\t\t}\n\t\t\t\targs.push(`--${key}=${value}`);\n\t\t\t} else {\n\t\t\t\targs.push(a2);\n\t\t\t}\n\t\t}\n\n\t\treturn this.extensionHostDebugService.openExtensionDevelopmentHostWindow(args, vscodeArgs.env, !!vscodeArgs.debugRenderer);\n\t}\n\n\tprivate send<R extends DebugProtocol.Response>(command: string, args: any, token?: CancellationToken, timeout?: number): Promise<R | undefined> {\n\t\treturn new Promise<DebugProtocol.Response | undefined>((completeDispatch, errorDispatch) => {\n\t\t\tif (!this.debugAdapter) {\n\t\t\t\tif (this.inShutdown) {\n\t\t\t\t\t// We are in shutdown silently complete\n\t\t\t\t\tcompleteDispatch(undefined);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(new Error(nls.localize('noDebugAdapter', \"No debugger available found. Can not send '{0}'.\", command)));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet cancelationListener: IDisposable;\n\t\t\tconst requestId = this.debugAdapter.sendRequest(command, args, (response: DebugProtocol.Response) => {\n\t\t\t\tif (cancelationListener) {\n\t\t\t\t\tcancelationListener.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (response.success) {\n\t\t\t\t\tcompleteDispatch(response);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(response);\n\t\t\t\t}\n\t\t\t}, timeout);\n\n\t\t\tif (token) {\n\t\t\t\tcancelationListener = token.onCancellationRequested(() => {\n\t\t\t\t\tcancelationListener.dispose();\n\t\t\t\t\tif (this.capabilities.supportsCancelRequest) {\n\t\t\t\t\t\tthis.cancel({ requestId });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}).then(undefined, err => Promise.reject(this.handleErrorResponse(err)));\n\t}\n\n\tprivate handleErrorResponse(errorResponse: DebugProtocol.Response): Error {\n\n\t\tif (errorResponse.command === 'canceled' && errorResponse.message === 'canceled') {\n\t\t\treturn errors.canceled();\n\t\t}\n\n\t\tconst error: DebugProtocol.Message | undefined = errorResponse?.body?.error;\n\t\tconst errorMessage = errorResponse?.message || '';\n\n\t\tif (error && error.sendTelemetry) {\n\t\t\tconst telemetryMessage = error ? formatPII(error.format, true, error.variables) : errorMessage;\n\t\t\tthis.telemetryDebugProtocolErrorResponse(telemetryMessage);\n\t\t}\n\n\t\tconst userMessage = error ? formatPII(error.format, false, error.variables) : errorMessage;\n\t\tconst url = error?.url;\n\t\tif (error && url) {\n\t\t\tconst label = error.urlLabel ? error.urlLabel : nls.localize('moreInfo', \"More Info\");\n\t\t\treturn errors.createErrorWithActions(userMessage, {\n\t\t\t\tactions: [new Action('debug.moreInfo', label, undefined, true, async () => {\n\t\t\t\t\tthis.openerService.open(URI.parse(url));\n\t\t\t\t})]\n\t\t\t});\n\t\t}\n\t\tif (error && error.format && error.showUser) {\n\t\t\tthis.notificationService.error(userMessage);\n\t\t}\n\n\t\treturn new Error(userMessage);\n\t}\n\n\tprivate mergeCapabilities(capabilities: DebugProtocol.Capabilities | undefined): void {\n\t\tif (capabilities) {\n\t\t\tthis._capabilities = objects.mixin(this._capabilities, capabilities);\n\t\t}\n\t}\n\n\tprivate fireSimulatedContinuedEvent(threadId: number, allThreadsContinued = false): void {\n\t\tthis._onDidContinued.fire({\n\t\t\ttype: 'event',\n\t\t\tevent: 'continued',\n\t\t\tbody: {\n\t\t\t\tthreadId,\n\t\t\t\tallThreadsContinued\n\t\t\t},\n\t\t\tseq: undefined!\n\t\t});\n\t}\n\n\tprivate telemetryDebugProtocolErrorResponse(telemetryMessage: string | undefined) {\n\t\t/* __GDPR__\n\t\t\t\"debugProtocolErrorResponse\" : {\n\t\t\t\t\"error\" : { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError('debugProtocolErrorResponse', { error: telemetryMessage });\n\t\tconst telemetryEndpoint = this.dbgr.getCustomTelemetryEndpoint();\n\t\tif (telemetryEndpoint) {\n\t\t\t/* __GDPR__TODO__\n\t\t\t\tThe message is sent in the name of the adapter but the adapter doesn't know about it.\n\t\t\t\tHowever, since adapters are an open-ended set, we can not declared the events statically either.\n\t\t\t*/\n\t\t\tthis.customTelemetryService.publicLogError(telemetryEndpoint, 'debugProtocolErrorResponse', { error: telemetryMessage });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n"]}