{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugEditorContribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IA6ChG,MAAM,iBAAiB,GAAG,yBAAyB,CAAC;IACpD,MAAM,2BAA2B,GAAG,uBAAuB,CAAC;IAC5D,MAAM,qBAAqB,GAAG,GAAG,CAAC,CAAC,qFAAqF;IACxH,MAAM,2BAA2B,GAAG,GAAG,CAAC,CAAC,sFAAsF;IAC/H,MAAM,yBAAyB,GAAG,GAAG,CAAC,CAAC,mEAAmE;IAE1G,MAAM,aAAa;QAClB,YAAmB,MAAc,EAAS,IAAY;YAAnC,WAAM,GAAN,MAAM,CAAQ;YAAS,SAAI,GAAJ,IAAI,CAAQ;QACtD,CAAC;KACD;IAED,SAAS,2BAA2B,CAAC,UAAkB,EAAE,WAAmB,EAAE,MAAM,0CAAmC;QACtH,6HAA6H;QAC7H,IAAI,WAAW,CAAC,MAAM,GAAG,2BAA2B,EAAE;YACrD,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,2BAA2B,CAAC,GAAG,KAAK,CAAC;SACzE;QAED,OAAO;YACN,KAAK,EAAE;gBACN,eAAe,EAAE,UAAU;gBAC3B,aAAa,EAAE,UAAU;gBACzB,WAAW,EAAE,MAAM;gBACnB,SAAS,EAAE,MAAM;aACjB;YACD,aAAa,EAAE;gBACd,KAAK,EAAE;oBACN,WAAW;oBACX,eAAe,EAAE,wBAAwB;oBACzC,MAAM,EAAE,MAAM;iBACd;gBACD,IAAI,EAAE;oBACL,KAAK,EAAE;wBACN,KAAK,EAAE,0BAA0B;qBACjC;iBACD;gBACD,KAAK,EAAE;oBACN,KAAK,EAAE;wBACN,KAAK,EAAE,oBAAoB;qBAC3B;iBACD;aACD;SACD,CAAC;IACH,CAAC;IAED,SAAS,uCAAuC,CAAC,WAAuC,EAAE,KAAY,EAAE,KAAiB,EAAE,oBAA2C;QACrK,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC/C,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;YAC7B,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,0DAA0D;YAC1D,IAAI,YAAY,CAAC,IAAI,IAAI,qBAAqB,EAAE;gBAC/C,MAAM;aACN;SACD;QAED,MAAM,cAAc,GAA0B,IAAI,GAAG,EAAoB,CAAC;QAE1E,2CAA2C;QAC3C,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YACrC,MAAM,WAAW,GAAG,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,WAAW,EAAE;gBAChB,KAAK,IAAI,UAAU,IAAI,WAAW,EAAE;oBACnC,IAAI,KAAK,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;wBACxD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;4BACpC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;yBACnC;wBAED,IAAI,cAAc,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;4BACzD,cAAc,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC3C;qBACD;iBACD;aACD;QACF,CAAC,CAAC,CAAC;QAEH,MAAM,WAAW,GAAyB,EAAE,CAAC;QAC7C,mCAAmC;QACnC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;YACtC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBAChD,MAAM,OAAO,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC3C,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,MAAM,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjE,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAED,SAAS,uBAAuB,CAAC,KAAwB;QACxD,MAAM,MAAM,GAAG,IAAI,GAAG,EAAoB,CAAC;QAC3C,IAAI,CAAC,KAAK,EAAE;YACX,OAAO,MAAM,CAAC;SACd;QAED,+DAA+D;QAC/D,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,YAAY,EAAE,EAAE,UAAU,IAAI,GAAG,EAAE,EAAE,UAAU,EAAE;YACrF,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAErD,yCAAyC;YACzC,IAAI,WAAW,CAAC,MAAM,GAAG,yBAAyB,EAAE;gBACnD,SAAS;aACT;YAED,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YACpC,MAAM,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACnD,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,EAAE,EAAE;gBACnG,MAAM,SAAS,GAAG,UAAU,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;gBAE9D,oCAAoC;gBACpC,IAAI,SAAS,kBAA4B,EAAE;oBAC1C,gCAAmB,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,+DAA+D;oBAElG,MAAM,gBAAgB,GAAG,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;oBAC/D,MAAM,cAAc,GAAG,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;oBAC3D,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;oBACzE,MAAM,SAAS,GAAG,gCAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAErD,IAAI,SAAS,EAAE;wBAEd,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;4BACtB,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;yBACrB;wBAED,MAAM,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACnC;iBACD;aACD;SACD;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAED,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;QAcnC,YACS,MAAmB,EACK,YAA2B,EACnB,oBAA2C,EACjD,cAA+B,EAC5B,iBAAqC,EACtC,gBAAmC,EAC/B,oBAA2C,EACpD,WAAyB,EAClB,kBAAuC,EACzD,iBAAqC;YATjD,WAAM,GAAN,MAAM,CAAa;YACK,iBAAY,GAAZ,YAAY,CAAe;YACnB,yBAAoB,GAApB,oBAAoB,CAAuB;YACjD,mBAAc,GAAd,cAAc,CAAiB;YAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;YACtC,qBAAgB,GAAhB,gBAAgB,CAAmB;YAC/B,yBAAoB,GAApB,oBAAoB,CAAuB;YACpD,gBAAW,GAAX,WAAW,CAAc;YAClB,uBAAkB,GAAlB,kBAAkB,CAAqB;YAnBtE,eAAU,GAAiB,IAAI,CAAC;YAChC,cAAS,GAAG,KAAK,CAAC;YAOlB,eAAU,GAAG,KAAK,CAAC;YAc1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,6BAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3F,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,mCAAmC,EAAE,CAAC;YAC3C,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,sBAAsB,GAAG,wCAAgC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzF,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC9B,CAAC;QAEO,iBAAiB;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEtH,iCAAiC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAA2B,EAAE,EAAE;gBAC5E,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;gBACnD,IAAI,CAAC,YAAY,EAAE;oBAClB,OAAO;iBACP;gBAED,MAAM,IAAI,GAAG,YAAY,CAAC,qBAAqB,EAAE,CAAC;gBAClD,+FAA+F;gBAC/F,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;oBACnH,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAC5D,uBAAuB,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACzC,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC3H,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE;gBAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACtE,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,IAAI,KAAK,EAAE;oBACV,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;iBAChD;gBACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,mCAAmC,EAAE,CAAC;gBAC3C,uBAAuB,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACzC,MAAM,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBACtD,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,8DAA8D;gBAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,IAAI,KAAK,IAAI,oCAA4B,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACrD,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC;iBAC5C;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,KAAY,EAAE,EAAE;gBACvE,IAAI,KAAK,oBAAkB,EAAE;oBAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,IAAY,oBAAoB;YAC/B,OAAO,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxD,CAAC;QAEO,uBAAuB,CAAC,KAAiB,EAAE,UAAmC;;YACrF,IAAI,UAAU,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC3F,IAAI,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;iBAC3B;gBACD,wFAAwF;gBACxF,IAAI,CAAC,WAAW,GAAG,CAAA,GAAA,gBAAQ,CAAA,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,YAAY,CAAC,EAAE;oBAC/D,MAAM,qBAAqB,GAAG,IAAI,qCAAqB,CAAC,YAAY,CAAC,CAAC;oBACtE,IAAI,qBAAqB,CAAC,OAAO,gBAAgB,EAAE;wBAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,MAAM,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;wBAC1D,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;wBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,IAAI,oBAAoB,IAAI,IAAI,CAAC,UAAU,EAAE;4BAC5C,uGAAuG;4BACvG,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAuB,4BAAoB,CAAC,EAAE,CAAC,CAAC;4BACnG,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,qBAA4B,KAAK,CAAC,CAAC;yBACnF;wBAED,MAAM,QAAQ,GAAG,aAAK,CAAC,GAAG,CAA0B,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAA,GAAA,gBAAQ,CAAA,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;4BAChI,IAAI,qBAAqB,GAAG,SAAS,CAAC;4BACtC,IAAI,UAAU,YAAY,aAAa,EAAE;gCACxC,qBAAqB,GAAG,IAAI,qCAAqB,CAAC,UAAU,CAAC,CAAC;6BAC9D;4BACD,IAAI,CAAC,qBAAqB,IAAI,qBAAqB,CAAC,OAAO,gBAAgB,EAAE;gCAC5E,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gCACxB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;gCACzD,QAAQ,CAAC,OAAO,EAAE,CAAC;6BACnB;wBACF,CAAC,CAAC,CAAC;qBACH;gBACF,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;aACzD;iBAAM;gBACN,MAAA,IAAI,CAAC,WAAW,0CAAE,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;QACF,CAAC;QAEO,iBAAiB;YACxB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;gBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,IAAI,SAAS,GAAG;oBACf,QAAQ,EAAE,KAAK,CAAC,GAAG;oBACnB,kBAAkB,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,QAAQ;iBAC1D,CAAC;gBACF,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAsB,cAAc,EAAE,SAAS,CAAC,CAAC;gBAChH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;oBACzB,KAAK,EAAE;wBACN,OAAO,EAAE,oBAAoB,CAAC,OAAO;wBACrC,KAAK,EAAE,oBAAoB,CAAC,KAAK;wBACjC,MAAM,EAAE,oBAAoB,CAAC,MAAM;qBACnC;iBACD,CAAC,CAAC;aACH;QACF,CAAC;QAED,KAAK,CAAC,SAAS,CAAC,KAAY,EAAE,KAAc;YAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC;YAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxG,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7C;QACF,CAAC;QAEO,KAAK,CAAC,iBAAiB,CAAC,EAA2B;YAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,KAAK,EAAE;gBACV,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACxC,IAAI,EAAE,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;oBAC3E,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBACnC;qBAAM;oBACN,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;aACD;YAED,MAAM,IAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC;QAC7C,CAAC;QAGD,IAAY,kBAAkB;YAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,gBAAoB,CAAC;YAC9D,MAAM,SAAS,GAAG,IAAI,wBAAgB,CAAC,GAAG,EAAE;gBAC3C,IAAI,IAAI,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;iBACvC;YACF,CAAC,EAAE,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE/B,OAAO,SAAS,CAAC;QAClB,CAAC;QAGD,IAAY,kBAAkB;YAC7B,MAAM,SAAS,GAAG,IAAI,wBAAgB,CAAC,GAAG,EAAE;gBAC3C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE;oBAClC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;iBACxB;YACF,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE/B,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,eAAe;YACtB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE;gBAC/E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;aACnC;YACD,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;QAClC,CAAC;QAED,iBAAiB;QAET,iBAAiB,CAAC,UAA6B;YACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,2BAAmC,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,KAAK,6BAAgB,CAAC,EAAE,EAAE;gBAClH,OAAO;aACP;YAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC;QAEO,iBAAiB,CAAC,UAA6B;YACtD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,oBAAkB,EAAE;gBAC9C,OAAO;aACP;YAED,MAAM,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;YAC1C,MAAM,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YAExD,IAAI,UAAU,2BAAmC,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,KAAK,6BAAgB,CAAC,EAAE,IAAI,CAAO,UAAU,CAAC,KAAM,CAAC,OAAO,CAAC,EAAE;gBAC3I,2CAA2C;gBAC3C,OAAO;aACP;YACD,IAAI,UAAU,yBAAiC,EAAE;gBAChD,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;oBACrF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC1C,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;oBACjC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;iBACnC;aACD;iBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3B,0GAA0G;gBAC1G,IAAI,CAAC,eAAe,EAAE,CAAC;aACvB;QACF,CAAC;QAEO,SAAS,CAAC,CAAiB;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,eAAc,CAAC,aAAa,CAAC;YAC9D,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE;gBAC1B,8CAA8C;gBAC9C,IAAI,CAAC,eAAe,EAAE,CAAC;aACvB;QACF,CAAC;QACD,qBAAqB;QAErB,mBAAmB;QACX,KAAK,CAAC,qBAAqB;YAClC,gGAAgG;YAChG,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC;YACrE,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACrE,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjE,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,OAAO;aACP;YAED,wFAAwF;YACxF,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC,MAAM,CAAC,gBAAgB,KAAK,aAAa,CAAC,CAAC,CAAC;YACrI,IAAI,CAAC,WAAW,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC9C,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,OAAO;aACP;YAED,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1F,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,OAAO,EAAE;gBACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC5B;iBAAM,IAAI,OAAO,EAAE;gBACnB,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC3D,IAAI,aAAa,EAAE;oBAClB,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC3J;aACD;QACF,CAAC;QAEO,mBAAmB,CAAC,aAA6B,EAAE,YAAuC,EAAE,UAAkB,EAAE,MAAc;YACrI,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAC/B;YAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,iCAAe,EAAE,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;YAC3H,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACnC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvC,CAAC;QAED,oBAAoB;YACnB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,MAAM,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAC1D,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;gBAC/B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;gBACjC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvC,IAAI,iBAAiB,EAAE;oBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;iBACpB;aACD;QACF,CAAC;QAED,uBAAuB;QACf,mCAAmC;YAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;aACnC;YACD,IAAI,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,mBAAuB,EAAE;gBAC3G,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,gCAAmB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtK,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;gBAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;aAC3F;QACF,CAAC;QAED,KAAK,CAAC,sBAAsB;YAC3B;;cAEE;YACF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,CAAC,KAAK,EAAE;gBACX,OAAO;aACP;YAED,IAAI,2BAAiD,CAAC;YACtD,IAAI,YAAoB,CAAC;YAEzB,MAAM,wBAAwB,GAAG,GAAG,EAAE;gBACrC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,CAAA,GAAA,YAAK,CAAA,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE;oBACvB,gBAAgB,EAAE,CAAC,QAAgB,EAAE,EAAE;wBACtC,YAAY,GAAG,QAAQ,CAAC;oBACzB,CAAC;oBACD,YAAY,EAAE,CAAC,MAAc,EAAE,EAAE;wBAChC,IAAI,YAAY,KAAK,gBAAgB,IAAI,YAAY,KAAK,CAAC,EAAE;4BAC5D,2BAA2B,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBAC9D;wBACD,YAAY,EAAE,CAAC;oBAChB,CAAC;oBACD,UAAU,EAAE,GAAG,EAAE;wBAChB,YAAY,EAAE,CAAC;oBAChB,CAAC;iBACD,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,wBAAwB,EAAE,CAAC;YAE3B,IAAI,CAAC,2BAA2B,EAAE;gBACjC,qDAAqD;gBACrD,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;gBACrD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,CAAC,CAAA,GAAA,eAAQ,CAAA,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC;oBAC5D,CAAA,GAAA,sBAAW,CAAA,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1F,CAAA,GAAA,sBAAW,CAAA,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxG,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvD,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;gBAC5C,MAAM,KAAK,GAAG,IAAI,aAAK,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1G,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,6BAAa,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;gBACzF,kDAAkD;gBAClD,wBAAwB,EAAE,CAAC;aAC3B;YACD,IAAI,CAAC,2BAA2B,EAAE;gBACjC,OAAO;aACP;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAEpB,MAAM,UAAU,GAAG,CAAC,QAAkB,EAAgB,EAAE;gBACvD,mGAAmG;gBACnG,IAAI,KAAK,CAAC,8BAA8B,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;oBAChF,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAClC,kCAAmB,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC9E;gBACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,+BAA+B,CAAC,CAAC;YAC5E,CAAC,CAAC;YAEF,MAAM,UAAU,CAAC,2BAA2B,CAAC,CAAC;YAC9C,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QAC1E,CAAC;QAED,qBAAqB;QAGrB,IAAY,2BAA2B;YACtC,OAAO,IAAI,wBAAgB,CAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,EAChE,GAAG,CACH,CAAC;QACH,CAAC;QAGD,IAAY,2BAA2B;YACtC,OAAO,IAAI,wBAAgB,CAC1B,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC,EACvG,GAAG,CACH,CAAC;QACH,CAAC;QAEO,KAAK,CAAC,4BAA4B,CAAC,UAAmC;YAE7E,MAAM,gBAAgB,GAAG,WAAW,CAAC;YACrC,MAAM,SAAS,GAAG,IAAI,CAAC;YAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrC,MAAM,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAsB,OAAO,CAAC,CAAC,YAAY,CAAC;YAC1G,MAAM,oBAAoB,GAAG,mBAAmB,KAAK,IAAI,IAAI,CAAC,mBAAmB,KAAK,MAAM,IAAI,KAAK,IAAI,oCAA4B,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAClJ,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE;gBAChH,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,EAAE;oBACpD,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC;iBAC5C;gBACD,OAAO;aACP;YAED,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,CAAC;YAE1C,IAAI,cAAoC,CAAC;YAEzC,IAAI,oCAA4B,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAE5C,MAAM,YAAY,GAAG,KAAK,EAAE,IAAY,EAAE,mBAA4B,EAA+B,EAAE;oBACtG,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBACxE,MAAM,GAAG,GAAG,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC5D,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;wBACzB,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAC;wBAC5C,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;wBAC3G,IAAI,KAAK,EAAE;4BACV,OAAO,KAAK,CAAC,KAAK,CAAC;yBACnB;qBACD;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC,CAAC;gBAEF,MAAM,GAAG,GAAuB;oBAC/B,OAAO,EAAE,UAAU,CAAC,OAAO;oBAC3B,eAAe,EAAE,IAAI,aAAK,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;iBAC9J,CAAC;gBACF,MAAM,KAAK,GAAG,IAAI,sCAAuB,EAAE,CAAC,KAAK,CAAC;gBAElD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,sCAAsC,EAAE,CAAC;gBACpE,MAAM,SAAS,GAAG,oCAA4B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;gBAExE,cAAc,GAAG,EAAE,CAAC;gBACpB,MAAM,eAAe,GAAG,IAAI,GAAG,EAA2B,CAAC;gBAE3D,MAAM,QAAQ,GAAG,CAAA,GAAA,gBAAO,CAAA,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;oBACpK,IAAI,MAAM,EAAE;wBACX,KAAK,IAAI,EAAE,IAAI,MAAM,EAAE;4BAEtB,IAAI,IAAI,GAAuB,SAAS,CAAC;4BACzC,QAAQ,EAAE,CAAC,IAAI,EAAE;gCAChB,KAAK,MAAM;oCACV,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;oCACf,MAAM;gCACP,KAAK,UAAU;oCACd,IAAI,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC;oCACzB,IAAI,CAAC,EAAE,EAAE;wCACR,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;wCACnE,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;qCAC7E;oCACD,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;oCAC7D,IAAI,KAAK,EAAE;wCACV,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;qCACnD;oCACD,MAAM;gCACP,KAAK,YAAY;oCAChB,IAAI,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC;oCACzB,IAAI,CAAC,IAAI,EAAE;wCACV,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;wCACnE,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;qCAC/E;oCACD,IAAI,IAAI,EAAE;wCACT,MAAM,UAAU,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC;wCACxC,MAAM,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;wCAC1E,IAAI,UAAU,CAAC,SAAS,EAAE;4CACzB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;yCAChE;qCACD;oCACD,MAAM;6BACP;4BAED,IAAI,IAAI,EAAE;gCACT,MAAM,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;gCACtC,IAAI,YAAY,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gCAC7C,IAAI,CAAC,YAAY,EAAE;oCAClB,YAAY,GAAG,EAAE,CAAC;oCAClB,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;iCACxC;gCACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,UAAU;oCAC3D,YAAY,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;iCACjE;6BACD;yBACD;qBACD;gBACF,CAAC,EAAE,GAAG,CAAC,EAAE;oBACR,CAAA,GAAA,kCAAyB,CAAA,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEN,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAE5B,4DAA4D;gBAE5D,eAAe,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;oBAC1C,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;wBACxD,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACvD,cAAc,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;qBAC7D;gBACF,CAAC,CAAC,CAAC;aAEH;iBAAM;gBACN,mCAAmC;gBAEnC,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACxE,iDAAiD;gBACjD,MAAM,mBAAmB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;oBACtE,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAC;oBAE5C,IAAI,KAAK,GAAG,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC5F,IAAI,KAAK,CAAC,KAAK,EAAE;wBAChB,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;qBACrF;oBAED,OAAO,uCAAuC,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC,CAAC;gBAEJ,cAAc,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;aACjG;YAED,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC;QACzE,CAAC;QAED,OAAO;YACN,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,GAAG,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC;KACD,CAAA;IAvhBwB,gCAAQ,GAAG,CAAA,GAAA,2BAAc,CAAA,EAAE,CAAC;IAkFpD;QADC,uBAAuB,CAAC,QAAQ;uEAGhC;IAmFD;QADC,oBAAO;qEAWP;IAGD;QADC,oBAAO;qEAUP;IA6LD;QADC,oBAAO;8EAMP;IAGD;QADC,oBAAO;8EAMP;IA9YW,uBAAuB;QAgBjC,WAAA,qBAAa,CAAA;QACb,WAAA,qCAAqB,CAAA;QACrB,WAAA,0BAAe,CAAA;QACf,WAAA,sCAAkB,CAAA;QAClB,WAAA,6BAAiB,CAAA;QACjB,WAAA,qCAAqB,CAAA;QACrB,WAAA,mBAAY,CAAA;QACZ,WAAA,iCAAmB,CAAA;QACnB,WAAA,+BAAkB,CAAA;OAxBR,uBAAuB,CA8hBnC;IA9hBY,0DAAuB","file":"debugEditorContribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as env from 'vs/base/common/platform';\nimport { visit } from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Constants } from 'vs/base/common/uint';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IKeyboardEvent, StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { InlineValueContext, InlineValuesProviderRegistry, StandardTokenType } from 'vs/editor/common/modes';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { flatten } from 'vs/base/common/arrays';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { DEFAULT_WORD_REGEXP } from 'vs/editor/common/model/wordHelper';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType, IPartialEditorMouseEvent } from 'vs/editor/browser/editorBrowser';\nimport { IDecorationOptions } from 'vs/editor/common/editorCommon';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IDebugEditorContribution, IDebugService, State, IStackFrame, IDebugConfiguration, IExpression, IExceptionInfo, IDebugSession, CONTEXT_EXCEPTION_WIDGET_VISIBLE } from 'vs/workbench/contrib/debug/common/debug';\nimport { ExceptionWidget } from 'vs/workbench/contrib/debug/browser/exceptionWidget';\nimport { FloatingClickWidget } from 'vs/workbench/browser/codeeditor';\nimport { Position } from 'vs/editor/common/core/position';\nimport { CoreEditingCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { memoize, createMemoizer } from 'vs/base/common/decorators';\nimport { IEditorHoverOptions, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { DebugHoverWidget } from 'vs/workbench/contrib/debug/browser/debugHover';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { basename } from 'vs/base/common/path';\nimport { domEvent } from 'vs/base/browser/event';\nimport { ModesHoverController } from 'vs/editor/contrib/hover/hover';\nimport { HoverStartMode } from 'vs/editor/contrib/hover/hoverOperation';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { Event } from 'vs/base/common/event';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Expression } from 'vs/workbench/contrib/debug/common/debugModel';\n\nconst LAUNCH_JSON_REGEX = /\\.vscode\\/launch\\.json$/;\nconst INLINE_VALUE_DECORATION_KEY = 'inlinevaluedecoration';\nconst MAX_NUM_INLINE_VALUES = 100; // JS Global scope can have 700+ entries. We want to limit ourselves for perf reasons\nconst MAX_INLINE_DECORATOR_LENGTH = 150; // Max string length of each inline decorator when debugging. If exceeded ... is added\nconst MAX_TOKENIZATION_LINE_LEN = 500; // If line is too long, then inline values for the line are skipped\n\nclass InlineSegment {\n\tconstructor(public column: number, public text: string) {\n\t}\n}\n\nfunction createInlineValueDecoration(lineNumber: number, contentText: string, column = Constants.MAX_SAFE_SMALL_INTEGER): IDecorationOptions {\n\t// If decoratorText is too long, trim and add ellipses. This could happen for minified files with everything on a single line\n\tif (contentText.length > MAX_INLINE_DECORATOR_LENGTH) {\n\t\tcontentText = contentText.substr(0, MAX_INLINE_DECORATOR_LENGTH) + '...';\n\t}\n\n\treturn {\n\t\trange: {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tendLineNumber: lineNumber,\n\t\t\tstartColumn: column,\n\t\t\tendColumn: column\n\t\t},\n\t\trenderOptions: {\n\t\t\tafter: {\n\t\t\t\tcontentText,\n\t\t\t\tbackgroundColor: 'rgba(255, 200, 0, 0.2)',\n\t\t\t\tmargin: '10px'\n\t\t\t},\n\t\t\tdark: {\n\t\t\t\tafter: {\n\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.5)',\n\t\t\t\t}\n\t\t\t},\n\t\t\tlight: {\n\t\t\t\tafter: {\n\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction createInlineValueDecorationsInsideRange(expressions: ReadonlyArray<IExpression>, range: Range, model: ITextModel, wordToLineNumbersMap: Map<string, number[]>): IDecorationOptions[] {\n\tconst nameValueMap = new Map<string, string>();\n\tfor (let expr of expressions) {\n\t\tnameValueMap.set(expr.name, expr.value);\n\t\t// Limit the size of map. Too large can have a perf impact\n\t\tif (nameValueMap.size >= MAX_NUM_INLINE_VALUES) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst lineToNamesMap: Map<number, string[]> = new Map<number, string[]>();\n\n\t// Compute unique set of names on each line\n\tnameValueMap.forEach((_value, name) => {\n\t\tconst lineNumbers = wordToLineNumbersMap.get(name);\n\t\tif (lineNumbers) {\n\t\t\tfor (let lineNumber of lineNumbers) {\n\t\t\t\tif (range.containsPosition(new Position(lineNumber, 0))) {\n\t\t\t\t\tif (!lineToNamesMap.has(lineNumber)) {\n\t\t\t\t\t\tlineToNamesMap.set(lineNumber, []);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lineToNamesMap.get(lineNumber)!.indexOf(name) === -1) {\n\t\t\t\t\t\tlineToNamesMap.get(lineNumber)!.push(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst decorations: IDecorationOptions[] = [];\n\t// Compute decorators for each line\n\tlineToNamesMap.forEach((names, line) => {\n\t\tconst contentText = names.sort((first, second) => {\n\t\t\tconst content = model.getLineContent(line);\n\t\t\treturn content.indexOf(first) - content.indexOf(second);\n\t\t}).map(name => `${name} = ${nameValueMap.get(name)}`).join(', ');\n\t\tdecorations.push(createInlineValueDecoration(line, contentText));\n\t});\n\n\treturn decorations;\n}\n\nfunction getWordToLineNumbersMap(model: ITextModel | null): Map<string, number[]> {\n\tconst result = new Map<string, number[]>();\n\tif (!model) {\n\t\treturn result;\n\t}\n\n\t// For every word in every line, map its ranges for fast lookup\n\tfor (let lineNumber = 1, len = model.getLineCount(); lineNumber <= len; ++lineNumber) {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\n\t\t// If line is too long then skip the line\n\t\tif (lineContent.length > MAX_TOKENIZATION_LINE_LEN) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmodel.forceTokenization(lineNumber);\n\t\tconst lineTokens = model.getLineTokens(lineNumber);\n\t\tfor (let tokenIndex = 0, tokenCount = lineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n\t\t\tconst tokenType = lineTokens.getStandardTokenType(tokenIndex);\n\n\t\t\t// Token is a word and not a comment\n\t\t\tif (tokenType === StandardTokenType.Other) {\n\t\t\t\tDEFAULT_WORD_REGEXP.lastIndex = 0; // We assume tokens will usually map 1:1 to words if they match\n\n\t\t\t\tconst tokenStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\tconst tokenEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\tconst tokenStr = lineContent.substring(tokenStartOffset, tokenEndOffset);\n\t\t\t\tconst wordMatch = DEFAULT_WORD_REGEXP.exec(tokenStr);\n\n\t\t\t\tif (wordMatch) {\n\n\t\t\t\t\tconst word = wordMatch[0];\n\t\t\t\t\tif (!result.has(word)) {\n\t\t\t\t\t\tresult.set(word, []);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.get(word)!.push(lineNumber);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport class DebugEditorContribution implements IDebugEditorContribution {\n\n\tprivate toDispose: IDisposable[];\n\tprivate hoverWidget: DebugHoverWidget;\n\tprivate hoverRange: Range | null = null;\n\tprivate mouseDown = false;\n\tprivate exceptionWidgetVisible: IContextKey<boolean>;\n\tprivate static readonly MEMOIZER = createMemoizer();\n\n\tprivate exceptionWidget: ExceptionWidget | undefined;\n\tprivate configurationWidget: FloatingClickWidget | undefined;\n\tprivate altListener: IDisposable | undefined;\n\tprivate altPressed = false;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis.hoverWidget = this.instantiationService.createInstance(DebugHoverWidget, this.editor);\n\t\tthis.toDispose = [];\n\t\tthis.registerListeners();\n\t\tthis.updateConfigurationWidgetVisibility();\n\t\tthis.codeEditorService.registerDecorationType(INLINE_VALUE_DECORATION_KEY, {});\n\t\tthis.exceptionWidgetVisible = CONTEXT_EXCEPTION_WIDGET_VISIBLE.bindTo(contextKeyService);\n\t\tthis.toggleExceptionWidget();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.debugService.getViewModel().onDidFocusStackFrame(e => this.onFocusStackFrame(e.stackFrame)));\n\n\t\t// hover listeners & hover widget\n\t\tthis.toDispose.push(this.editor.onMouseDown((e: IEditorMouseEvent) => this.onEditorMouseDown(e)));\n\t\tthis.toDispose.push(this.editor.onMouseUp(() => this.mouseDown = false));\n\t\tthis.toDispose.push(this.editor.onMouseMove((e: IEditorMouseEvent) => this.onEditorMouseMove(e)));\n\t\tthis.toDispose.push(this.editor.onMouseLeave((e: IPartialEditorMouseEvent) => {\n\t\t\tconst hoverDomNode = this.hoverWidget.getDomNode();\n\t\t\tif (!hoverDomNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rect = hoverDomNode.getBoundingClientRect();\n\t\t\t// Only hide the hover widget if the editor mouse leave event is outside the hover widget #3528\n\t\t\tif (e.event.posx < rect.left || e.event.posx > rect.right || e.event.posy < rect.top || e.event.posy > rect.bottom) {\n\t\t\t\tthis.hideHoverWidget();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onKeyDown((e: IKeyboardEvent) => this.onKeyDown(e)));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelContent(() => {\n\t\t\tDebugEditorContribution.MEMOIZER.clear();\n\t\t\tthis.updateInlineValuesScheduler.schedule();\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.getViewModel().onWillUpdateViews(() => this.updateInlineValuesScheduler.schedule()));\n\t\tthis.toDispose.push(this.editor.onDidChangeModel(async () => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (model) {\n\t\t\t\tthis.applyHoverConfiguration(model, stackFrame);\n\t\t\t}\n\t\t\tthis.toggleExceptionWidget();\n\t\t\tthis.hideHoverWidget();\n\t\t\tthis.updateConfigurationWidgetVisibility();\n\t\t\tDebugEditorContribution.MEMOIZER.clear();\n\t\t\tawait this.updateInlineValueDecorations(stackFrame);\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onDidScrollChange(() => {\n\t\t\tthis.hideHoverWidget();\n\n\t\t\t// Inline value provider should get called on view port change\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (model && InlineValuesProviderRegistry.has(model)) {\n\t\t\t\tthis.updateInlineValuesScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.onDidChangeState((state: State) => {\n\t\t\tif (state !== State.Stopped) {\n\t\t\t\tthis.toggleExceptionWidget();\n\t\t\t}\n\t\t}));\n\t}\n\n\t@DebugEditorContribution.MEMOIZER\n\tprivate get wordToLineNumbersMap(): Map<string, number[]> {\n\t\treturn getWordToLineNumbersMap(this.editor.getModel());\n\t}\n\n\tprivate applyHoverConfiguration(model: ITextModel, stackFrame: IStackFrame | undefined): void {\n\t\tif (stackFrame && this.uriIdentityService.extUri.isEqual(model.uri, stackFrame.source.uri)) {\n\t\t\tif (this.altListener) {\n\t\t\t\tthis.altListener.dispose();\n\t\t\t}\n\t\t\t// When the alt key is pressed show regular editor hover and hide the debug hover #84561\n\t\t\tthis.altListener = domEvent(document, 'keydown')(keydownEvent => {\n\t\t\t\tconst standardKeyboardEvent = new StandardKeyboardEvent(keydownEvent);\n\t\t\t\tif (standardKeyboardEvent.keyCode === KeyCode.Alt) {\n\t\t\t\t\tthis.altPressed = true;\n\t\t\t\t\tconst debugHoverWasVisible = this.hoverWidget.isVisible();\n\t\t\t\t\tthis.hoverWidget.hide();\n\t\t\t\t\tthis.enableEditorHover();\n\t\t\t\t\tif (debugHoverWasVisible && this.hoverRange) {\n\t\t\t\t\t\t// If the debug hover was visible immediately show the editor hover for the alt transition to be smooth\n\t\t\t\t\t\tconst hoverController = this.editor.getContribution<ModesHoverController>(ModesHoverController.ID);\n\t\t\t\t\t\thoverController.showContentHover(this.hoverRange, HoverStartMode.Immediate, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst listener = Event.any<KeyboardEvent | boolean>(this.hostService.onDidChangeFocus, domEvent(document, 'keyup'))(keyupEvent => {\n\t\t\t\t\t\tlet standardKeyboardEvent = undefined;\n\t\t\t\t\t\tif (keyupEvent instanceof KeyboardEvent) {\n\t\t\t\t\t\t\tstandardKeyboardEvent = new StandardKeyboardEvent(keyupEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!standardKeyboardEvent || standardKeyboardEvent.keyCode === KeyCode.Alt) {\n\t\t\t\t\t\t\tthis.altPressed = false;\n\t\t\t\t\t\t\tthis.editor.updateOptions({ hover: { enabled: false } });\n\t\t\t\t\t\t\tlistener.dispose();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.editor.updateOptions({ hover: { enabled: false } });\n\t\t} else {\n\t\t\tthis.altListener?.dispose();\n\t\t\tthis.enableEditorHover();\n\t\t}\n\t}\n\n\tprivate enableEditorHover(): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\tconst model = this.editor.getModel();\n\t\t\tlet overrides = {\n\t\t\t\tresource: model.uri,\n\t\t\t\toverrideIdentifier: model.getLanguageIdentifier().language\n\t\t\t};\n\t\t\tconst defaultConfiguration = this.configurationService.getValue<IEditorHoverOptions>('editor.hover', overrides);\n\t\t\tthis.editor.updateOptions({\n\t\t\t\thover: {\n\t\t\t\t\tenabled: defaultConfiguration.enabled,\n\t\t\t\t\tdelay: defaultConfiguration.delay,\n\t\t\t\t\tsticky: defaultConfiguration.sticky\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tasync showHover(range: Range, focus: boolean): Promise<void> {\n\t\tconst sf = this.debugService.getViewModel().focusedStackFrame;\n\t\tconst model = this.editor.getModel();\n\t\tif (sf && model && this.uriIdentityService.extUri.isEqual(sf.source.uri, model.uri) && !this.altPressed) {\n\t\t\treturn this.hoverWidget.showAt(range, focus);\n\t\t}\n\t}\n\n\tprivate async onFocusStackFrame(sf: IStackFrame | undefined): Promise<void> {\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\tthis.applyHoverConfiguration(model, sf);\n\t\t\tif (sf && this.uriIdentityService.extUri.isEqual(sf.source.uri, model.uri)) {\n\t\t\t\tawait this.toggleExceptionWidget();\n\t\t\t} else {\n\t\t\t\tthis.hideHoverWidget();\n\t\t\t}\n\t\t}\n\n\t\tawait this.updateInlineValueDecorations(sf);\n\t}\n\n\t@memoize\n\tprivate get showHoverScheduler(): RunOnceScheduler {\n\t\tconst hoverOption = this.editor.getOption(EditorOption.hover);\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tif (this.hoverRange) {\n\t\t\t\tthis.showHover(this.hoverRange, false);\n\t\t\t}\n\t\t}, hoverOption.delay * 2);\n\t\tthis.toDispose.push(scheduler);\n\n\t\treturn scheduler;\n\t}\n\n\t@memoize\n\tprivate get hideHoverScheduler(): RunOnceScheduler {\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tif (!this.hoverWidget.isHovered()) {\n\t\t\t\tthis.hoverWidget.hide();\n\t\t\t}\n\t\t}, 0);\n\t\tthis.toDispose.push(scheduler);\n\n\t\treturn scheduler;\n\t}\n\n\tprivate hideHoverWidget(): void {\n\t\tif (!this.hideHoverScheduler.isScheduled() && this.hoverWidget.willBeVisible()) {\n\t\t\tthis.hideHoverScheduler.schedule();\n\t\t}\n\t\tthis.showHoverScheduler.cancel();\n\t}\n\n\t// hover business\n\n\tprivate onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis.mouseDown = true;\n\t\tif (mouseEvent.target.type === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === DebugHoverWidget.ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hideHoverWidget();\n\t}\n\n\tprivate onEditorMouseMove(mouseEvent: IEditorMouseEvent): void {\n\t\tif (this.debugService.state !== State.Stopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetType = mouseEvent.target.type;\n\t\tconst stopKey = env.isMacintosh ? 'metaKey' : 'ctrlKey';\n\n\t\tif (targetType === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === DebugHoverWidget.ID && !(<any>mouseEvent.event)[stopKey]) {\n\t\t\t// mouse moved on top of debug hover widget\n\t\t\treturn;\n\t\t}\n\t\tif (targetType === MouseTargetType.CONTENT_TEXT) {\n\t\t\tif (mouseEvent.target.range && !mouseEvent.target.range.equalsRange(this.hoverRange)) {\n\t\t\t\tthis.hoverRange = mouseEvent.target.range;\n\t\t\t\tthis.hideHoverScheduler.cancel();\n\t\t\t\tthis.showHoverScheduler.schedule();\n\t\t\t}\n\t\t} else if (!this.mouseDown) {\n\t\t\t// Do not hide debug hover when the mouse is pressed because it usually leads to accidental closing #64620\n\t\t\tthis.hideHoverWidget();\n\t\t}\n\t}\n\n\tprivate onKeyDown(e: IKeyboardEvent): void {\n\t\tconst stopKey = env.isMacintosh ? KeyCode.Meta : KeyCode.Ctrl;\n\t\tif (e.keyCode !== stopKey) {\n\t\t\t// do not hide hover when Ctrl/Meta is pressed\n\t\t\tthis.hideHoverWidget();\n\t\t}\n\t}\n\t// end hover business\n\n\t// exception widget\n\tprivate async toggleExceptionWidget(): Promise<void> {\n\t\t// Toggles exception widget based on the state of the current editor model and debug stack frame\n\t\tconst model = this.editor.getModel();\n\t\tconst focusedSf = this.debugService.getViewModel().focusedStackFrame;\n\t\tconst callStack = focusedSf ? focusedSf.thread.getCallStack() : null;\n\t\tif (!model || !focusedSf || !callStack || callStack.length === 0) {\n\t\t\tthis.closeExceptionWidget();\n\t\t\treturn;\n\t\t}\n\n\t\t// First call stack frame that is available is the frame where exception has been thrown\n\t\tconst exceptionSf = callStack.find(sf => !!(sf && sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize'));\n\t\tif (!exceptionSf || exceptionSf !== focusedSf) {\n\t\t\tthis.closeExceptionWidget();\n\t\t\treturn;\n\t\t}\n\n\t\tconst sameUri = this.uriIdentityService.extUri.isEqual(exceptionSf.source.uri, model.uri);\n\t\tif (this.exceptionWidget && !sameUri) {\n\t\t\tthis.closeExceptionWidget();\n\t\t} else if (sameUri) {\n\t\t\tconst exceptionInfo = await focusedSf.thread.exceptionInfo;\n\t\t\tif (exceptionInfo) {\n\t\t\t\tthis.showExceptionWidget(exceptionInfo, this.debugService.getViewModel().focusedSession, exceptionSf.range.startLineNumber, exceptionSf.range.startColumn);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showExceptionWidget(exceptionInfo: IExceptionInfo, debugSession: IDebugSession | undefined, lineNumber: number, column: number): void {\n\t\tif (this.exceptionWidget) {\n\t\t\tthis.exceptionWidget.dispose();\n\t\t}\n\n\t\tthis.exceptionWidget = this.instantiationService.createInstance(ExceptionWidget, this.editor, exceptionInfo, debugSession);\n\t\tthis.exceptionWidget.show({ lineNumber, column }, 0);\n\t\tthis.exceptionWidget.focus();\n\t\tthis.editor.revealLine(lineNumber);\n\t\tthis.exceptionWidgetVisible.set(true);\n\t}\n\n\tcloseExceptionWidget(): void {\n\t\tif (this.exceptionWidget) {\n\t\t\tconst shouldFocusEditor = this.exceptionWidget.hasfocus();\n\t\t\tthis.exceptionWidget.dispose();\n\t\t\tthis.exceptionWidget = undefined;\n\t\t\tthis.exceptionWidgetVisible.set(false);\n\t\t\tif (shouldFocusEditor) {\n\t\t\t\tthis.editor.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t// configuration widget\n\tprivate updateConfigurationWidgetVisibility(): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (this.configurationWidget) {\n\t\t\tthis.configurationWidget.dispose();\n\t\t}\n\t\tif (model && LAUNCH_JSON_REGEX.test(model.uri.toString()) && !this.editor.getOption(EditorOption.readOnly)) {\n\t\t\tthis.configurationWidget = this.instantiationService.createInstance(FloatingClickWidget, this.editor, nls.localize('addConfiguration', \"Add Configuration...\"), null);\n\t\t\tthis.configurationWidget.render();\n\t\t\tthis.toDispose.push(this.configurationWidget.onClick(() => this.addLaunchConfiguration()));\n\t\t}\n\t}\n\n\tasync addLaunchConfiguration(): Promise<any> {\n\t\t/* __GDPR__\n\t\t\t\"debug/addLaunchConfiguration\" : {}\n\t\t*/\n\t\tthis.telemetryService.publicLog('debug/addLaunchConfiguration');\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet configurationsArrayPosition: Position | undefined;\n\t\tlet lastProperty: string;\n\n\t\tconst getConfigurationPosition = () => {\n\t\t\tlet depthInArray = 0;\n\t\t\tvisit(model.getValue(), {\n\t\t\t\tonObjectProperty: (property: string) => {\n\t\t\t\t\tlastProperty = property;\n\t\t\t\t},\n\t\t\t\tonArrayBegin: (offset: number) => {\n\t\t\t\t\tif (lastProperty === 'configurations' && depthInArray === 0) {\n\t\t\t\t\t\tconfigurationsArrayPosition = model.getPositionAt(offset + 1);\n\t\t\t\t\t}\n\t\t\t\t\tdepthInArray++;\n\t\t\t\t},\n\t\t\t\tonArrayEnd: () => {\n\t\t\t\t\tdepthInArray--;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tgetConfigurationPosition();\n\n\t\tif (!configurationsArrayPosition) {\n\t\t\t// \"configurations\" array doesn't exist. Add it here.\n\t\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\t\tconst eol = model.getEOL();\n\t\t\tconst edit = (basename(model.uri.fsPath) === 'launch.json') ?\n\t\t\t\tsetProperty(model.getValue(), ['configurations'], [], { tabSize, insertSpaces, eol })[0] :\n\t\t\t\tsetProperty(model.getValue(), ['launch'], { 'configurations': [] }, { tabSize, insertSpaces, eol })[0];\n\t\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\t\tconst lineNumber = startPosition.lineNumber;\n\t\t\tconst range = new Range(lineNumber, startPosition.column, lineNumber, model.getLineMaxColumn(lineNumber));\n\t\t\tmodel.pushEditOperations(null, [EditOperation.replace(range, edit.content)], () => null);\n\t\t\t// Go through the file again since we've edited it\n\t\t\tgetConfigurationPosition();\n\t\t}\n\t\tif (!configurationsArrayPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.focus();\n\n\t\tconst insertLine = (position: Position): Promise<any> => {\n\t\t\t// Check if there are more characters on a line after a \"configurations\": [, if yes enter a newline\n\t\t\tif (model.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n\t\t\t\tthis.editor.setPosition(position);\n\t\t\t\tCoreEditingCommands.LineBreakInsert.runEditorCommand(null, this.editor, null);\n\t\t\t}\n\t\t\tthis.editor.setPosition(position);\n\t\t\treturn this.commandService.executeCommand('editor.action.insertLineAfter');\n\t\t};\n\n\t\tawait insertLine(configurationsArrayPosition);\n\t\tawait this.commandService.executeCommand('editor.action.triggerSuggest');\n\t}\n\n\t// Inline Decorations\n\n\t@memoize\n\tprivate get removeInlineValuesScheduler(): RunOnceScheduler {\n\t\treturn new RunOnceScheduler(\n\t\t\t() => this.editor.removeDecorations(INLINE_VALUE_DECORATION_KEY),\n\t\t\t100\n\t\t);\n\t}\n\n\t@memoize\n\tprivate get updateInlineValuesScheduler(): RunOnceScheduler {\n\t\treturn new RunOnceScheduler(\n\t\t\tasync () => await this.updateInlineValueDecorations(this.debugService.getViewModel().focusedStackFrame),\n\t\t\t200\n\t\t);\n\t}\n\n\tprivate async updateInlineValueDecorations(stackFrame: IStackFrame | undefined): Promise<void> {\n\n\t\tconst var_value_format = '{0} = {1}';\n\t\tconst separator = ', ';\n\n\t\tconst model = this.editor.getModel();\n\t\tconst inlineValuesSetting = this.configurationService.getValue<IDebugConfiguration>('debug').inlineValues;\n\t\tconst inlineValuesTurnedOn = inlineValuesSetting === true || (inlineValuesSetting === 'auto' && model && InlineValuesProviderRegistry.has(model));\n\t\tif (!inlineValuesTurnedOn || !model || !stackFrame || model.uri.toString() !== stackFrame.source.uri.toString()) {\n\t\t\tif (!this.removeInlineValuesScheduler.isScheduled()) {\n\t\t\t\tthis.removeInlineValuesScheduler.schedule();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeInlineValuesScheduler.cancel();\n\n\t\tlet allDecorations: IDecorationOptions[];\n\n\t\tif (InlineValuesProviderRegistry.has(model)) {\n\n\t\t\tconst findVariable = async (_key: string, caseSensitiveLookup: boolean): Promise<string | undefined> => {\n\t\t\t\tconst scopes = await stackFrame.getMostSpecificScopes(stackFrame.range);\n\t\t\t\tconst key = caseSensitiveLookup ? _key : _key.toLowerCase();\n\t\t\t\tfor (let scope of scopes) {\n\t\t\t\t\tconst variables = await scope.getChildren();\n\t\t\t\t\tconst found = variables.find(v => caseSensitiveLookup ? (v.name === key) : (v.name.toLowerCase() === key));\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\treturn found.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t};\n\n\t\t\tconst ctx: InlineValueContext = {\n\t\t\t\tframeId: stackFrame.frameId,\n\t\t\t\tstoppedLocation: new Range(stackFrame.range.startLineNumber, stackFrame.range.startColumn + 1, stackFrame.range.endLineNumber, stackFrame.range.endColumn + 1)\n\t\t\t};\n\t\t\tconst token = new CancellationTokenSource().token;\n\n\t\t\tconst ranges = this.editor.getVisibleRangesPlusViewportAboveBelow();\n\t\t\tconst providers = InlineValuesProviderRegistry.ordered(model).reverse();\n\n\t\t\tallDecorations = [];\n\t\t\tconst lineDecorations = new Map<number, InlineSegment[]>();\n\n\t\t\tconst promises = flatten(providers.map(provider => ranges.map(range => Promise.resolve(provider.provideInlineValues(model, range, ctx, token)).then(async (result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (let iv of result) {\n\n\t\t\t\t\t\tlet text: string | undefined = undefined;\n\t\t\t\t\t\tswitch (iv.type) {\n\t\t\t\t\t\t\tcase 'text':\n\t\t\t\t\t\t\t\ttext = iv.text;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'variable':\n\t\t\t\t\t\t\t\tlet va = iv.variableName;\n\t\t\t\t\t\t\t\tif (!va) {\n\t\t\t\t\t\t\t\t\tconst lineContent = model.getLineContent(iv.range.startLineNumber);\n\t\t\t\t\t\t\t\t\tva = lineContent.substring(iv.range.startColumn - 1, iv.range.endColumn - 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst value = await findVariable(va, iv.caseSensitiveLookup);\n\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\ttext = strings.format(var_value_format, va, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'expression':\n\t\t\t\t\t\t\t\tlet expr = iv.expression;\n\t\t\t\t\t\t\t\tif (!expr) {\n\t\t\t\t\t\t\t\t\tconst lineContent = model.getLineContent(iv.range.startLineNumber);\n\t\t\t\t\t\t\t\t\texpr = lineContent.substring(iv.range.startColumn - 1, iv.range.endColumn - 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (expr) {\n\t\t\t\t\t\t\t\t\tconst expression = new Expression(expr);\n\t\t\t\t\t\t\t\t\tawait expression.evaluate(stackFrame.thread.session, stackFrame, 'watch');\n\t\t\t\t\t\t\t\t\tif (expression.available) {\n\t\t\t\t\t\t\t\t\t\ttext = strings.format(var_value_format, expr, expression.value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (text) {\n\t\t\t\t\t\t\tconst line = iv.range.startLineNumber;\n\t\t\t\t\t\t\tlet lineSegments = lineDecorations.get(line);\n\t\t\t\t\t\t\tif (!lineSegments) {\n\t\t\t\t\t\t\t\tlineSegments = [];\n\t\t\t\t\t\t\t\tlineDecorations.set(line, lineSegments);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!lineSegments.some(iv => iv.text === text)) {\t// de-dupe\n\t\t\t\t\t\t\t\tlineSegments.push(new InlineSegment(iv.range.startColumn, text));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}))));\n\n\t\t\tawait Promise.all(promises);\n\n\t\t\t// sort line segments and concatenate them into a decoration\n\n\t\t\tlineDecorations.forEach((segments, line) => {\n\t\t\t\tif (segments.length > 0) {\n\t\t\t\t\tsegments = segments.sort((a, b) => a.column - b.column);\n\t\t\t\t\tconst text = segments.map(s => s.text).join(separator);\n\t\t\t\t\tallDecorations.push(createInlineValueDecoration(line, text));\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\t// old \"one-size-fits-all\" strategy\n\n\t\t\tconst scopes = await stackFrame.getMostSpecificScopes(stackFrame.range);\n\t\t\t// Get all top level variables in the scope chain\n\t\t\tconst decorationsPerScope = await Promise.all(scopes.map(async scope => {\n\t\t\t\tconst variables = await scope.getChildren();\n\n\t\t\t\tlet range = new Range(0, 0, stackFrame.range.startLineNumber, stackFrame.range.startColumn);\n\t\t\t\tif (scope.range) {\n\t\t\t\t\trange = range.setStartPosition(scope.range.startLineNumber, scope.range.startColumn);\n\t\t\t\t}\n\n\t\t\t\treturn createInlineValueDecorationsInsideRange(variables, range, model, this.wordToLineNumbersMap);\n\t\t\t}));\n\n\t\t\tallDecorations = decorationsPerScope.reduce((previous, current) => previous.concat(current), []);\n\t\t}\n\n\t\tthis.editor.setDecorations(INLINE_VALUE_DECORATION_KEY, allDecorations);\n\t}\n\n\tdispose(): void {\n\t\tif (this.hoverWidget) {\n\t\t\tthis.hoverWidget.dispose();\n\t\t}\n\t\tif (this.configurationWidget) {\n\t\t\tthis.configurationWidget.dispose();\n\t\t}\n\t\tthis.toDispose = dispose(this.toDispose);\n\t}\n}\n"]}