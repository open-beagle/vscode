{"version":3,"sources":["vs/workbench/contrib/debug/browser/repl.ts"],"names":[],"mappings":"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","file":"repl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/repl';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IAction } from 'vs/base/common/actions';\nimport * as dom from 'vs/base/browser/dom';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { SuggestController } from 'vs/editor/contrib/suggest/suggestController';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { registerEditorAction, EditorAction } from 'vs/editor/browser/editorExtensions';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IContextKeyService, IContextKey, ContextKeyEqualsExpr, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IThemeService, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ICodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { memoize } from 'vs/base/common/decorators';\nimport { dispose, IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IDebugService, DEBUG_SCHEME, CONTEXT_IN_DEBUG_REPL, IDebugSession, State, IReplElement, IDebugConfiguration, REPL_VIEW_ID, CONTEXT_MULTI_SESSION_REPL, CONTEXT_DEBUG_STATE, getStateLabel } from 'vs/workbench/contrib/debug/common/debug';\nimport { HistoryNavigator } from 'vs/base/common/history';\nimport { IHistoryNavigationWidget } from 'vs/base/browser/history';\nimport { createAndBindHistoryNavigationWidgetScopedContextKeyService } from 'vs/platform/browser/contextScopedHistoryWidget';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { getSimpleEditorOptions, getSimpleCodeEditorWidgetOptions } from 'vs/workbench/contrib/codeEditor/browser/simpleEditorOptions';\nimport { IDecorationOptions } from 'vs/editor/common/editorCommon';\nimport { transparent, editorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { FocusSessionActionViewItem } from 'vs/workbench/contrib/debug/browser/debugActionViewItems';\nimport { CompletionContext, CompletionList, CompletionProviderRegistry, CompletionItem, completionKindFromString, CompletionItemKind, CompletionItemInsertTextRule } from 'vs/editor/common/modes';\nimport { ITreeNode, ITreeContextMenuEvent, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { removeAnsiEscapeCodes } from 'vs/base/common/strings';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ReplDelegate, ReplVariablesRenderer, ReplSimpleElementsRenderer, ReplEvaluationInputsRenderer, ReplEvaluationResultsRenderer, ReplRawObjectsRenderer, ReplDataSource, ReplAccessibilityProvider, ReplGroupRenderer } from 'vs/workbench/contrib/debug/browser/replViewer';\nimport { localize } from 'vs/nls';\nimport { ViewPane, IViewPaneOptions, ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ReplGroup } from 'vs/workbench/contrib/debug/common/replModel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { EDITOR_FONT_DEFAULTS, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from 'vs/base/browser/ui/mouseCursor/mouseCursor';\nimport { ReplFilter, ReplFilterState, ReplFilterActionViewItem } from 'vs/workbench/contrib/debug/browser/replFilter';\nimport { debugConsoleClearAll, debugConsoleEvaluationPrompt } from 'vs/workbench/contrib/debug/browser/debugIcons';\nimport { registerAction2, MenuId, Action2, IMenuService, IMenu } from 'vs/platform/actions/common/actions';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\n\nconst $ = dom.$;\n\nconst HISTORY_STORAGE_KEY = 'debug.repl.history';\nconst FILTER_HISTORY_STORAGE_KEY = 'debug.repl.filterHistory';\nconst DECORATION_KEY = 'replinputdecoration';\nconst FILTER_ACTION_ID = `workbench.actions.treeView.repl.filter`;\n\nfunction revealLastElement(tree: WorkbenchAsyncDataTree<any, any, any>) {\n\ttree.scrollTop = tree.scrollHeight - tree.renderHeight;\n}\n\nconst sessionsToIgnore = new Set<IDebugSession>();\nconst identityProvider = { getId: (element: IReplElement) => element.getId() };\n\nexport class Repl extends ViewPane implements IHistoryNavigationWidget {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly REFRESH_DELAY = 50; // delay in ms to refresh the repl for new elements to show\n\tprivate static readonly URI = uri.parse(`${DEBUG_SCHEME}:replinput`);\n\n\tprivate history: HistoryNavigator<string>;\n\tprivate tree!: WorkbenchAsyncDataTree<IDebugSession, IReplElement, FuzzyScore>;\n\tprivate replDelegate!: ReplDelegate;\n\tprivate container!: HTMLElement;\n\tprivate treeContainer!: HTMLElement;\n\tprivate replInput!: CodeEditorWidget;\n\tprivate replInputContainer!: HTMLElement;\n\tprivate dimension!: dom.Dimension;\n\tprivate replInputLineCount = 1;\n\tprivate model: ITextModel | undefined;\n\tprivate historyNavigationEnablement!: IContextKey<boolean>;\n\tprivate scopedInstantiationService!: IInstantiationService;\n\tprivate replElementsChangeListener: IDisposable | undefined;\n\tprivate styleElement: HTMLStyleElement | undefined;\n\tprivate completionItemProvider: IDisposable | undefined;\n\tprivate modelChangeListener: IDisposable = Disposable.None;\n\tprivate filter: ReplFilter;\n\tprivate filterState: ReplFilterState;\n\tprivate filterActionViewItem: ReplFilterActionViewItem | undefined;\n\tprivate multiSessionRepl: IContextKey<boolean>;\n\tprivate menu: IMenu;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly textResourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IMenuService menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis.menu = menuService.createMenu(MenuId.DebugConsoleContext, contextKeyService);\n\t\tthis._register(this.menu);\n\t\tthis.history = new HistoryNavigator(JSON.parse(this.storageService.get(HISTORY_STORAGE_KEY, StorageScope.WORKSPACE, '[]')), 50);\n\t\tthis.filter = new ReplFilter();\n\t\tthis.filterState = new ReplFilterState(this);\n\t\tthis.multiSessionRepl = CONTEXT_MULTI_SESSION_REPL.bindTo(contextKeyService);\n\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\n\t\tcodeEditorService.registerDecorationType(DECORATION_KEY, {});\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.debugService.getViewModel().onDidFocusSession(async session => {\n\t\t\tif (session) {\n\t\t\t\tsessionsToIgnore.delete(session);\n\t\t\t\tif (this.completionItemProvider) {\n\t\t\t\t\tthis.completionItemProvider.dispose();\n\t\t\t\t}\n\t\t\t\tif (session.capabilities.supportsCompletionsRequest) {\n\t\t\t\t\tthis.completionItemProvider = CompletionProviderRegistry.register({ scheme: DEBUG_SCHEME, pattern: '**/replinput', hasAccessToAllModels: true }, {\n\t\t\t\t\t\ttriggerCharacters: session.capabilities.completionTriggerCharacters || ['.'],\n\t\t\t\t\t\tprovideCompletionItems: async (_: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\t\t\t\t// Disable history navigation because up and down are used to navigate through the suggest widget\n\t\t\t\t\t\t\tthis.historyNavigationEnablement.set(false);\n\n\t\t\t\t\t\t\tconst model = this.replInput.getModel();\n\t\t\t\t\t\t\tif (model) {\n\t\t\t\t\t\t\t\tconst word = model.getWordAtPosition(position);\n\t\t\t\t\t\t\t\tconst overwriteBefore = word ? word.word.length : 0;\n\t\t\t\t\t\t\t\tconst text = model.getValue();\n\t\t\t\t\t\t\t\tconst focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\t\t\t\t\t\tconst frameId = focusedStackFrame ? focusedStackFrame.frameId : undefined;\n\t\t\t\t\t\t\t\tconst response = await session.completions(frameId, focusedStackFrame?.thread.threadId || 0, text, position, overwriteBefore, token);\n\n\t\t\t\t\t\t\t\tconst suggestions: CompletionItem[] = [];\n\t\t\t\t\t\t\t\tconst computeRange = (length: number) => Range.fromPositions(position.delta(0, -length), position);\n\t\t\t\t\t\t\t\tif (response && response.body && response.body.targets) {\n\t\t\t\t\t\t\t\t\tresponse.body.targets.forEach(item => {\n\t\t\t\t\t\t\t\t\t\tif (item && item.label) {\n\t\t\t\t\t\t\t\t\t\t\tlet insertTextRules: CompletionItemInsertTextRule | undefined = undefined;\n\t\t\t\t\t\t\t\t\t\t\tlet insertText = item.text || item.label;\n\t\t\t\t\t\t\t\t\t\t\tif (typeof item.selectionStart === 'number') {\n\t\t\t\t\t\t\t\t\t\t\t\t// If a debug completion item sets a selection we need to use snippets to make sure the selection is selected #90974\n\t\t\t\t\t\t\t\t\t\t\t\tinsertTextRules = CompletionItemInsertTextRule.InsertAsSnippet;\n\t\t\t\t\t\t\t\t\t\t\t\tconst selectionLength = typeof item.selectionLength === 'number' ? item.selectionLength : 0;\n\t\t\t\t\t\t\t\t\t\t\t\tconst placeholder = selectionLength > 0 ? '${1:' + insertText.substr(item.selectionStart, selectionLength) + '}$0' : '$0';\n\t\t\t\t\t\t\t\t\t\t\t\tinsertText = insertText.substr(0, item.selectionStart) + placeholder + insertText.substr(item.selectionStart + selectionLength);\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tsuggestions.push({\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\t\t\t\t\t\t\tinsertText,\n\t\t\t\t\t\t\t\t\t\t\t\tkind: completionKindFromString(item.type || 'property'),\n\t\t\t\t\t\t\t\t\t\t\t\tfilterText: (item.start && item.length) ? text.substr(item.start, item.length).concat(item.label) : undefined,\n\t\t\t\t\t\t\t\t\t\t\t\trange: computeRange(item.length || overwriteBefore),\n\t\t\t\t\t\t\t\t\t\t\t\tsortText: item.sortText,\n\t\t\t\t\t\t\t\t\t\t\t\tinsertTextRules\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (this.configurationService.getValue<IDebugConfiguration>('debug').console.historySuggestions) {\n\t\t\t\t\t\t\t\t\tconst history = this.history.getHistory();\n\t\t\t\t\t\t\t\t\thistory.forEach(h => suggestions.push({\n\t\t\t\t\t\t\t\t\t\tlabel: h,\n\t\t\t\t\t\t\t\t\t\tinsertText: h,\n\t\t\t\t\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\t\t\t\t\trange: computeRange(h.length),\n\t\t\t\t\t\t\t\t\t\tsortText: 'ZZZ'\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn { suggestions };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn Promise.resolve({ suggestions: [] });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.selectSession();\n\t\t}));\n\t\tthis._register(this.debugService.onWillNewSession(async newSession => {\n\t\t\t// Need to listen to output events for sessions which are not yet fully initialised\n\t\t\tconst input = this.tree.getInput();\n\t\t\tif (!input || input.state === State.Inactive) {\n\t\t\t\tawait this.selectSession(newSession);\n\t\t\t}\n\t\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\t}));\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => {\n\t\t\tthis.refreshReplElements(false);\n\t\t\tif (this.isVisible()) {\n\t\t\t\tthis.updateInputDecoration();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (!visible) {\n\t\t\t\tdispose(this.model);\n\t\t\t} else {\n\t\t\t\tthis.model = this.modelService.getModel(Repl.URI) || this.modelService.createModel('', null, Repl.URI, true);\n\t\t\t\tthis.setMode();\n\t\t\t\tthis.replInput.setModel(this.model);\n\t\t\t\tthis.updateInputDecoration();\n\t\t\t\tthis.refreshReplElements(true);\n\t\t\t\tthis.layoutBody(this.dimension.height, this.dimension.width);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('debug.console.wordWrap')) {\n\t\t\t\tthis.tree.dispose();\n\t\t\t\tthis.treeContainer.innerText = '';\n\t\t\t\tdom.clearNode(this.treeContainer);\n\t\t\t\tthis.createReplTree();\n\t\t\t} else if (e.affectsConfiguration('debug.console.lineHeight') || e.affectsConfiguration('debug.console.fontSize') || e.affectsConfiguration('debug.console.fontFamily')) {\n\t\t\t\tthis.onDidStyleChange();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(e => {\n\t\t\tthis.onDidStyleChange();\n\t\t}));\n\n\t\tthis._register(this.viewDescriptorService.onDidChangeLocation(e => {\n\t\t\tif (e.views.some(v => v.id === this.id)) {\n\t\t\t\tthis.onDidStyleChange();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => {\n\t\t\tthis.setMode();\n\t\t}));\n\n\t\tthis._register(this.filterState.onDidChange(() => {\n\t\t\tthis.filter.filterQuery = this.filterState.filterText;\n\t\t\tthis.tree.refilter();\n\t\t\trevealLastElement(this.tree);\n\t\t}));\n\t}\n\n\tgetFilterStats(): { total: number, filtered: number } {\n\t\treturn {\n\t\t\ttotal: this.tree.getNode().children.length,\n\t\t\tfiltered: this.tree.getNode().children.filter(c => c.visible).length\n\t\t};\n\t}\n\n\tget isReadonly(): boolean {\n\t\t// Do not allow to edit inactive sessions\n\t\tconst session = this.tree.getInput();\n\t\tif (session && session.state !== State.Inactive) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tshowPreviousValue(): void {\n\t\tif (!this.isReadonly) {\n\t\t\tthis.navigateHistory(true);\n\t\t}\n\t}\n\n\tshowNextValue(): void {\n\t\tif (!this.isReadonly) {\n\t\t\tthis.navigateHistory(false);\n\t\t}\n\t}\n\n\tfocusFilter(): void {\n\t\tthis.filterActionViewItem?.focus();\n\t}\n\n\tprivate setMode(): void {\n\t\tif (!this.isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorControl = this.editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(activeEditorControl)) {\n\t\t\tthis.modelChangeListener.dispose();\n\t\t\tthis.modelChangeListener = activeEditorControl.onDidChangeModelLanguage(() => this.setMode());\n\t\t\tif (this.model && activeEditorControl.hasModel()) {\n\t\t\t\tthis.model.setMode(activeEditorControl.getModel().getLanguageIdentifier());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidStyleChange(): void {\n\t\tif (this.styleElement) {\n\t\t\tconst debugConsole = this.configurationService.getValue<IDebugConfiguration>('debug').console;\n\t\t\tconst fontSize = debugConsole.fontSize;\n\t\t\tconst fontFamily = debugConsole.fontFamily === 'default' ? 'var(--monaco-monospace-font)' : `${debugConsole.fontFamily}`;\n\t\t\tconst lineHeight = debugConsole.lineHeight ? `${debugConsole.lineHeight}px` : '1.4em';\n\t\t\tconst backgroundColor = this.themeService.getColorTheme().getColor(this.getBackgroundColor());\n\n\t\t\tthis.replInput.updateOptions({\n\t\t\t\tfontSize,\n\t\t\t\tlineHeight: debugConsole.lineHeight,\n\t\t\t\tfontFamily: debugConsole.fontFamily === 'default' ? EDITOR_FONT_DEFAULTS.fontFamily : debugConsole.fontFamily\n\t\t\t});\n\n\t\t\tconst replInputLineHeight = this.replInput.getOption(EditorOption.lineHeight);\n\n\t\t\t// Set the font size, font family, line height and align the twistie to be centered, and input theme color\n\t\t\tthis.styleElement.textContent = `\n\t\t\t\t.repl .repl-input-wrapper .repl-input-chevron {\n\t\t\t\t\tline-height: ${replInputLineHeight}px\n\t\t\t\t}\n\n\t\t\t\t.repl .repl-input-wrapper .monaco-editor .lines-content {\n\t\t\t\t\tbackground-color: ${backgroundColor};\n\t\t\t\t}\n\t\t\t`;\n\t\t\tthis.container.style.setProperty(`--vscode-repl-font-family`, fontFamily);\n\t\t\tthis.container.style.setProperty(`--vscode-repl-font-size`, `${fontSize}px`);\n\t\t\tthis.container.style.setProperty(`--vscode-repl-font-size-for-twistie`, `${fontSize * 1.4 / 2 - 8}px`);\n\t\t\tthis.container.style.setProperty(`--vscode-repl-line-height`, lineHeight);\n\n\t\t\tthis.tree.rerender();\n\n\t\t\tif (this.dimension) {\n\t\t\t\tthis.layoutBody(this.dimension.height, this.dimension.width);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate navigateHistory(previous: boolean): void {\n\t\tconst historyInput = previous ? this.history.previous() : this.history.next();\n\t\tif (historyInput) {\n\t\t\tthis.replInput.setValue(historyInput);\n\t\t\taria.status(historyInput);\n\t\t\t// always leave cursor at the end.\n\t\t\tthis.replInput.setPosition({ lineNumber: 1, column: historyInput.length + 1 });\n\t\t\tthis.historyNavigationEnablement.set(true);\n\t\t}\n\t}\n\n\tasync selectSession(session?: IDebugSession): Promise<void> {\n\t\tconst treeInput = this.tree.getInput();\n\t\tif (!session) {\n\t\t\tconst focusedSession = this.debugService.getViewModel().focusedSession;\n\t\t\t// If there is a focusedSession focus on that one, otherwise just show any other not ignored session\n\t\t\tif (focusedSession) {\n\t\t\t\tsession = focusedSession;\n\t\t\t} else if (!treeInput || sessionsToIgnore.has(treeInput)) {\n\t\t\t\tsession = this.debugService.getModel().getSessions(true).find(s => !sessionsToIgnore.has(s));\n\t\t\t}\n\t\t}\n\t\tif (session) {\n\t\t\tif (this.replElementsChangeListener) {\n\t\t\t\tthis.replElementsChangeListener.dispose();\n\t\t\t}\n\t\t\tthis.replElementsChangeListener = session.onDidChangeReplElements(() => {\n\t\t\t\tthis.refreshReplElements(session!.getReplElements().length === 0);\n\t\t\t});\n\n\t\t\tif (this.tree && treeInput !== session) {\n\t\t\t\tawait this.tree.setInput(session);\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t}\n\t\t}\n\n\t\tthis.replInput.updateOptions({ readOnly: this.isReadonly });\n\t\tthis.updateInputDecoration();\n\t}\n\n\tasync clearRepl(): Promise<void> {\n\t\tconst session = this.tree.getInput();\n\t\tif (session) {\n\t\t\tsession.removeReplExpressions();\n\t\t\tif (session.state === State.Inactive) {\n\t\t\t\t// Ignore inactive sessions which got cleared - so they are not shown any more\n\t\t\t\tsessionsToIgnore.add(session);\n\t\t\t\tawait this.selectSession();\n\t\t\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\t\t}\n\t\t}\n\t\tthis.replInput.focus();\n\t}\n\n\tacceptReplInput(): void {\n\t\tconst session = this.tree.getInput();\n\t\tif (session && !this.isReadonly) {\n\t\t\tsession.addReplExpression(this.debugService.getViewModel().focusedStackFrame, this.replInput.getValue());\n\t\t\trevealLastElement(this.tree);\n\t\t\tthis.history.add(this.replInput.getValue());\n\t\t\tthis.replInput.setValue('');\n\t\t\tconst shouldRelayout = this.replInputLineCount > 1;\n\t\t\tthis.replInputLineCount = 1;\n\t\t\tif (shouldRelayout) {\n\t\t\t\t// Trigger a layout to shrink a potential multi line input\n\t\t\t\tthis.layoutBody(this.dimension.height, this.dimension.width);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetVisibleContent(): string {\n\t\tlet text = '';\n\t\tif (this.model) {\n\t\t\tconst lineDelimiter = this.textResourcePropertiesService.getEOL(this.model.uri);\n\t\t\tconst traverseAndAppend = (node: ITreeNode<IReplElement, FuzzyScore>) => {\n\t\t\t\tnode.children.forEach(child => {\n\t\t\t\t\ttext += child.element.toString().trimRight() + lineDelimiter;\n\t\t\t\t\tif (!child.collapsed && child.children.length) {\n\t\t\t\t\t\ttraverseAndAppend(child);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\ttraverseAndAppend(this.tree.getNode());\n\t\t}\n\n\t\treturn removeAnsiEscapeCodes(text);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.dimension = new dom.Dimension(width, height);\n\t\tconst replInputHeight = Math.min(this.replInput.getContentHeight(), height);\n\t\tif (this.tree) {\n\t\t\tconst lastElementVisible = this.tree.scrollTop + this.tree.renderHeight >= this.tree.scrollHeight;\n\t\t\tconst treeHeight = height - replInputHeight;\n\t\t\tthis.tree.getHTMLElement().style.height = `${treeHeight}px`;\n\t\t\tthis.tree.layout(treeHeight, width);\n\t\t\tif (lastElementVisible) {\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t}\n\t\t}\n\t\tthis.replInputContainer.style.height = `${replInputHeight}px`;\n\n\t\tthis.replInput.layout({ width: width - 30, height: replInputHeight });\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tgetReplInput(): CodeEditorWidget {\n\t\treturn this.replInput;\n\t}\n\n\toverride focus(): void {\n\t\tsetTimeout(() => this.replInput.focus(), 0);\n\t}\n\n\toverride getActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\tif (action.id === selectReplCommandId) {\n\t\t\tconst session = (this.tree ? this.tree.getInput() : undefined) ?? this.debugService.getViewModel().focusedSession;\n\t\t\treturn this.instantiationService.createInstance(SelectReplActionViewItem, action, session);\n\t\t} else if (action.id === FILTER_ACTION_ID) {\n\t\t\tconst filterHistory = JSON.parse(this.storageService.get(FILTER_HISTORY_STORAGE_KEY, StorageScope.WORKSPACE, '[]')) as string[];\n\t\t\tthis.filterActionViewItem = this.instantiationService.createInstance(ReplFilterActionViewItem, action,\n\t\t\t\tlocalize({ key: 'workbench.debug.filter.placeholder', comment: ['Text in the brackets after e.g. is not localizable'] }, \"Filter (e.g. text, !exclude)\"), this.filterState, filterHistory);\n\t\t\treturn this.filterActionViewItem;\n\t\t}\n\n\t\treturn super.getActionViewItem(action);\n\t}\n\n\tprivate get isMultiSessionView(): boolean {\n\t\treturn this.debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl() && !sessionsToIgnore.has(s)).length > 1;\n\t}\n\n\t// --- Cached locals\n\n\t@memoize\n\tprivate get refreshScheduler(): RunOnceScheduler {\n\t\tconst autoExpanded = new Set<string>();\n\t\treturn new RunOnceScheduler(async () => {\n\t\t\tif (!this.tree.getInput()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lastElementVisible = this.tree.scrollTop + this.tree.renderHeight >= this.tree.scrollHeight;\n\t\t\tawait this.tree.updateChildren(undefined, true, false, { diffIdentityProvider: identityProvider });\n\n\t\t\tconst session = this.tree.getInput();\n\t\t\tif (session) {\n\t\t\t\t// Automatically expand repl group elements when specified\n\t\t\t\tconst autoExpandElements = async (elements: IReplElement[]) => {\n\t\t\t\t\tfor (let element of elements) {\n\t\t\t\t\t\tif (element instanceof ReplGroup) {\n\t\t\t\t\t\t\tif (element.autoExpand && !autoExpanded.has(element.getId())) {\n\t\t\t\t\t\t\t\tautoExpanded.add(element.getId());\n\t\t\t\t\t\t\t\tawait this.tree.expand(element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this.tree.isCollapsed(element)) {\n\t\t\t\t\t\t\t\t// Repl groups can have children which are repl groups thus we might need to expand those as well\n\t\t\t\t\t\t\t\tawait autoExpandElements(element.getChildren());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tawait autoExpandElements(session.getReplElements());\n\t\t\t}\n\n\t\t\tif (lastElementVisible) {\n\t\t\t\t// Only scroll if we were scrolled all the way down before tree refreshed #10486\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t}\n\t\t\t// Repl elements count changed, need to update filter stats on the badge\n\t\t\tthis.filterState.updateFilterStats();\n\t\t}, Repl.REFRESH_DELAY);\n\t}\n\n\t// --- Creation\n\n\tprotected override renderBody(parent: HTMLElement): void {\n\t\tsuper.renderBody(parent);\n\t\tthis.container = dom.append(parent, $('.repl'));\n\t\tthis.treeContainer = dom.append(this.container, $(`.repl-tree.${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`));\n\t\tthis.createReplInput(this.container);\n\t\tthis.createReplTree();\n\t}\n\n\tprivate createReplTree(): void {\n\t\tthis.replDelegate = new ReplDelegate(this.configurationService);\n\t\tconst wordWrap = this.configurationService.getValue<IDebugConfiguration>('debug').console.wordWrap;\n\t\tthis.treeContainer.classList.toggle('word-wrap', wordWrap);\n\t\tconst linkDetector = this.instantiationService.createInstance(LinkDetector);\n\t\tthis.tree = <WorkbenchAsyncDataTree<IDebugSession, IReplElement, FuzzyScore>>this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t'DebugRepl',\n\t\t\tthis.treeContainer,\n\t\t\tthis.replDelegate,\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(ReplVariablesRenderer, linkDetector),\n\t\t\t\tthis.instantiationService.createInstance(ReplSimpleElementsRenderer, linkDetector),\n\t\t\t\tnew ReplEvaluationInputsRenderer(),\n\t\t\t\tthis.instantiationService.createInstance(ReplGroupRenderer, linkDetector),\n\t\t\t\tnew ReplEvaluationResultsRenderer(linkDetector),\n\t\t\t\tnew ReplRawObjectsRenderer(linkDetector),\n\t\t\t],\n\t\t\t// https://github.com/microsoft/TypeScript/issues/32526\n\t\t\tnew ReplDataSource() as IAsyncDataSource<IDebugSession, IReplElement>,\n\t\t\t{\n\t\t\t\tfilter: this.filter,\n\t\t\t\taccessibilityProvider: new ReplAccessibilityProvider(),\n\t\t\t\tidentityProvider,\n\t\t\t\tmouseSupport: false,\n\t\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IReplElement) => e.toString(true) },\n\t\t\t\thorizontalScrolling: !wordWrap,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tsupportDynamicHeights: wordWrap,\n\t\t\t\toverrideStyles: {\n\t\t\t\t\tlistBackground: this.getBackgroundColor()\n\t\t\t\t}\n\t\t\t});\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\t\tlet lastSelectedString: string;\n\t\tthis._register(this.tree.onMouseClick(() => {\n\t\t\tconst selection = window.getSelection();\n\t\t\tif (!selection || selection.type !== 'Range' || lastSelectedString === selection.toString()) {\n\t\t\t\t// only focus the input if the user is not currently selecting.\n\t\t\t\tthis.replInput.focus();\n\t\t\t}\n\t\t\tlastSelectedString = selection ? selection.toString() : '';\n\t\t}));\n\t\t// Make sure to select the session if debugging is already active\n\t\tthis.selectSession();\n\t\tthis.styleElement = dom.createStyleSheet(this.container);\n\t\tthis.onDidStyleChange();\n\t}\n\n\tprivate createReplInput(container: HTMLElement): void {\n\t\tthis.replInputContainer = dom.append(container, $('.repl-input-wrapper'));\n\t\tdom.append(this.replInputContainer, $('.repl-input-chevron' + ThemeIcon.asCSSSelector(debugConsoleEvaluationPrompt)));\n\n\t\tconst { scopedContextKeyService, historyNavigationEnablement } = createAndBindHistoryNavigationWidgetScopedContextKeyService(this.contextKeyService, { target: container, historyNavigator: this });\n\t\tthis.historyNavigationEnablement = historyNavigationEnablement;\n\t\tthis._register(scopedContextKeyService);\n\t\tCONTEXT_IN_DEBUG_REPL.bindTo(scopedContextKeyService).set(true);\n\n\t\tthis.scopedInstantiationService = this.instantiationService.createChild(new ServiceCollection([IContextKeyService, scopedContextKeyService]));\n\t\tconst options = getSimpleEditorOptions();\n\t\toptions.readOnly = true;\n\t\toptions.ariaLabel = localize('debugConsole', \"Debug Console\");\n\n\t\tthis.replInput = this.scopedInstantiationService.createInstance(CodeEditorWidget, this.replInputContainer, options, getSimpleCodeEditorWidgetOptions());\n\n\t\tthis._register(this.replInput.onDidChangeModelContent(() => {\n\t\t\tconst model = this.replInput.getModel();\n\t\t\tthis.historyNavigationEnablement.set(!!model && model.getValue() === '');\n\t\t\tconst lineCount = model ? Math.min(10, model.getLineCount()) : 1;\n\t\t\tif (lineCount !== this.replInputLineCount) {\n\t\t\t\tthis.replInputLineCount = lineCount;\n\t\t\t\tthis.layoutBody(this.dimension.height, this.dimension.width);\n\t\t\t}\n\t\t}));\n\t\t// We add the input decoration only when the focus is in the input #61126\n\t\tthis._register(this.replInput.onDidFocusEditorText(() => this.updateInputDecoration()));\n\t\tthis._register(this.replInput.onDidBlurEditorText(() => this.updateInputDecoration()));\n\n\t\tthis._register(dom.addStandardDisposableListener(this.replInputContainer, dom.EventType.FOCUS, () => this.replInputContainer.classList.add('synthetic-focus')));\n\t\tthis._register(dom.addStandardDisposableListener(this.replInputContainer, dom.EventType.BLUR, () => this.replInputContainer.classList.remove('synthetic-focus')));\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<IReplElement>): void {\n\t\tconst actions: IAction[] = [];\n\t\tconst actionsDisposable = createAndFillInContextMenuActions(this.menu, { arg: e.element, shouldForwardArgs: false }, actions);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => e.element,\n\t\t\tonHide: () => dispose(actionsDisposable)\n\t\t});\n\t}\n\n\t// --- Update\n\n\tprivate refreshReplElements(noDelay: boolean): void {\n\t\tif (this.tree && this.isVisible()) {\n\t\t\tif (this.refreshScheduler.isScheduled()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.refreshScheduler.schedule(noDelay ? 0 : undefined);\n\t\t}\n\t}\n\n\tprivate updateInputDecoration(): void {\n\t\tif (!this.replInput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations: IDecorationOptions[] = [];\n\t\tif (this.isReadonly && this.replInput.hasTextFocus() && !this.replInput.getValue()) {\n\t\t\tconst transparentForeground = transparent(editorForeground, 0.4)(this.themeService.getColorTheme());\n\t\t\tdecorations.push({\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: 0,\n\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t},\n\t\t\t\trenderOptions: {\n\t\t\t\t\tafter: {\n\t\t\t\t\t\tcontentText: localize('startDebugFirst', \"Please start a debug session to evaluate expressions\"),\n\t\t\t\t\t\tcolor: transparentForeground ? transparentForeground.toString() : undefined\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.replInput.setDecorations(DECORATION_KEY, decorations);\n\t}\n\n\toverride saveState(): void {\n\t\tconst replHistory = this.history.getHistory();\n\t\tif (replHistory.length) {\n\t\t\tthis.storageService.store(HISTORY_STORAGE_KEY, JSON.stringify(replHistory), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(HISTORY_STORAGE_KEY, StorageScope.WORKSPACE);\n\t\t}\n\t\tif (this.filterActionViewItem) {\n\t\t\tconst filterHistory = this.filterActionViewItem.getHistory();\n\t\t\tif (filterHistory.length) {\n\t\t\t\tthis.storageService.store(FILTER_HISTORY_STORAGE_KEY, JSON.stringify(filterHistory), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove(FILTER_HISTORY_STORAGE_KEY, StorageScope.WORKSPACE);\n\t\t\t}\n\t\t}\n\n\t\tsuper.saveState();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.replInput.dispose();\n\t\tif (this.replElementsChangeListener) {\n\t\t\tthis.replElementsChangeListener.dispose();\n\t\t}\n\t\tthis.refreshScheduler.dispose();\n\t\tthis.modelChangeListener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\n// Repl actions and commands\n\nclass AcceptReplInputAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'repl.action.acceptInput',\n\t\t\tlabel: localize({ key: 'actions.repl.acceptInput', comment: ['Apply input from the debug console input box'] }, \"REPL Accept Input\"),\n\t\t\talias: 'REPL Accept Input',\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\tSuggestController.get(editor).acceptSelectedSuggestion(false, true);\n\t\tconst repl = getReplView(accessor.get(IViewsService));\n\t\trepl?.acceptReplInput();\n\t}\n}\n\nclass FilterReplAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'repl.action.filter',\n\t\t\tlabel: localize('repl.action.filter', \"REPL Focus Content to Filter\"),\n\t\t\talias: 'REPL Filter',\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_F,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\tSuggestController.get(editor).acceptSelectedSuggestion(false, true);\n\t\tconst repl = getReplView(accessor.get(IViewsService));\n\t\trepl?.focusFilter();\n\t}\n}\n\nclass ReplCopyAllAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'repl.action.copyAll',\n\t\t\tlabel: localize('actions.repl.copyAll', \"Debug: Console Copy All\"),\n\t\t\talias: 'Debug Console Copy All',\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst repl = getReplView(accessor.get(IViewsService));\n\t\tif (repl) {\n\t\t\treturn clipboardService.writeText(repl.getVisibleContent());\n\t\t}\n\t}\n}\n\nregisterEditorAction(AcceptReplInputAction);\nregisterEditorAction(ReplCopyAllAction);\nregisterEditorAction(FilterReplAction);\n\nclass SelectReplActionViewItem extends FocusSessionActionViewItem {\n\n\tprotected override getSessions(): ReadonlyArray<IDebugSession> {\n\t\treturn this.debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl() && !sessionsToIgnore.has(s));\n\t}\n\n\tprotected override mapFocusedSessionToSelected(focusedSession: IDebugSession): IDebugSession {\n\t\twhile (focusedSession.parentSession && !focusedSession.hasSeparateRepl()) {\n\t\t\tfocusedSession = focusedSession.parentSession;\n\t\t}\n\t\treturn focusedSession;\n\t}\n}\n\nfunction getReplView(viewsService: IViewsService): Repl | undefined {\n\treturn viewsService.getActiveViewWithId(REPL_VIEW_ID) as Repl ?? undefined;\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FILTER_ACTION_ID,\n\t\t\ttitle: localize('filter', \"Filter\"),\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', REPL_VIEW_ID),\n\t\t\t\torder: 10\n\t\t\t}\n\t\t});\n\t}\n\n\trun(_accessor: ServicesAccessor) {\n\t\t// noop this action is just a placeholder for the filter action view item\n\t}\n});\n\nconst selectReplCommandId = 'workbench.action.debug.selectRepl';\nregisterAction2(class extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: selectReplCommandId,\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\ttitle: localize('selectRepl', \"Select Debug Console\"),\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', REPL_VIEW_ID), CONTEXT_MULTI_SESSION_REPL),\n\t\t\t\torder: 20\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(accessor: ServicesAccessor, view: Repl, session: IDebugSession | undefined) {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\t// If session is already the focused session we need to manualy update the tree since view model will not send a focused change event\n\t\tif (session && session.state !== State.Inactive && session !== debugService.getViewModel().focusedSession) {\n\t\t\tif (session.state !== State.Stopped) {\n\t\t\t\t// Focus child session instead if it is stopped #112595\n\t\t\t\tconst stopppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === State.Stopped);\n\t\t\t\tif (stopppedChildSession) {\n\t\t\t\t\tsession = stopppedChildSession;\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait debugService.focusStackFrame(undefined, undefined, session, true);\n\t\t}\n\t\t// Need to select the session in the view since the focussed session might not have changed\n\t\tawait view.selectSession(session);\n\t}\n});\n\nregisterAction2(class extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.panel.action.clearReplAction',\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\ttitle: { value: localize('clearRepl', \"Clear Console\"), original: 'Clear Console' },\n\t\t\tf1: true,\n\t\t\ticon: debugConsoleClearAll,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', REPL_VIEW_ID),\n\t\t\t\torder: 30\n\t\t\t}, {\n\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 20\n\t\t\t}]\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: Repl): void {\n\t\tview.clearRepl();\n\t\taria.status(localize('debugConsoleCleared', \"Debug console was cleared\"));\n\t}\n});\n\nregisterAction2(class extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.collapseRepl',\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 10\n\t\t\t}\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: Repl): void {\n\t\tview.collapseAll();\n\t\tview.focus();\n\t}\n});\n\nregisterAction2(class extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.replPaste',\n\t\t\ttitle: localize('paste', \"Paste\"),\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\tprecondition: CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Inactive)),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\tgroup: '2_cutcopypaste',\n\t\t\t\torder: 30\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(accessor: ServicesAccessor, view: Repl): Promise<void> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst clipboardText = await clipboardService.readText();\n\t\tif (clipboardText) {\n\t\t\tconst replInput = view.getReplInput();\n\t\t\treplInput.setValue(replInput.getValue().concat(clipboardText));\n\t\t\tview.focus();\n\t\t\tconst model = replInput.getModel();\n\t\t\tconst lineNumber = model ? model.getLineCount() : 0;\n\t\t\tconst column = model?.getLineMaxColumn(lineNumber);\n\t\t\tif (typeof lineNumber === 'number' && typeof column === 'number') {\n\t\t\t\treplInput.setPosition({ lineNumber, column });\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.action.copyAll',\n\t\t\ttitle: localize('copyAll', \"Copy All\"),\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\tgroup: '2_cutcopypaste',\n\t\t\t\torder: 20\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(accessor: ServicesAccessor, view: Repl): Promise<void> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tawait clipboardService.writeText(view.getVisibleContent());\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.replCopy',\n\t\t\ttitle: localize('copy', \"Copy\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\tgroup: '2_cutcopypaste',\n\t\t\t\torder: 10\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, element: IReplElement): Promise<void> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst nativeSelection = window.getSelection();\n\t\tconst selectedText = nativeSelection?.toString();\n\t\tif (selectedText && selectedText.length > 0) {\n\t\t\tawait clipboardService.writeText(selectedText);\n\t\t} else if (element) {\n\t\t\tawait clipboardService.writeText(element.toString());\n\t\t}\n\t}\n});\n"]}