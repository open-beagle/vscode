{"version":3,"file":"debugViewModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/common/debugViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { CONTEXT_EXPRESSION_SELECTED, IViewModel, IStackFrame, IDebugSession, IThread, IExpression, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED } from 'vs/workbench/contrib/debug/common/debug';\nimport { IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { isSessionAttach } from 'vs/workbench/contrib/debug/common/debugUtils';\n\nexport class ViewModel implements IViewModel {\n\n\tfirstSessionStart = true;\n\n\tprivate _focusedStackFrame: IStackFrame | undefined;\n\tprivate _focusedSession: IDebugSession | undefined;\n\tprivate _focusedThread: IThread | undefined;\n\tprivate selectedExpression: IExpression | undefined;\n\tprivate readonly _onDidFocusSession = new Emitter<IDebugSession | undefined>();\n\tprivate readonly _onDidFocusStackFrame = new Emitter<{ stackFrame: IStackFrame | undefined, explicit: boolean }>();\n\tprivate readonly _onDidSelectExpression = new Emitter<IExpression | undefined>();\n\tprivate readonly _onWillUpdateViews = new Emitter<void>();\n\tprivate expressionSelectedContextKey!: IContextKey<boolean>;\n\tprivate loadedScriptsSupportedContextKey!: IContextKey<boolean>;\n\tprivate stepBackSupportedContextKey!: IContextKey<boolean>;\n\tprivate focusedSessionIsAttach!: IContextKey<boolean>;\n\tprivate restartFrameSupportedContextKey!: IContextKey<boolean>;\n\tprivate stepIntoTargetsSupported!: IContextKey<boolean>;\n\tprivate jumpToCursorSupported!: IContextKey<boolean>;\n\tprivate setVariableSupported!: IContextKey<boolean>;\n\tprivate multiSessionDebug!: IContextKey<boolean>;\n\tprivate terminateDebuggeeSuported!: IContextKey<boolean>;\n\n\tconstructor(private contextKeyService: IContextKeyService) {\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis.expressionSelectedContextKey = CONTEXT_EXPRESSION_SELECTED.bindTo(contextKeyService);\n\t\t\tthis.loadedScriptsSupportedContextKey = CONTEXT_LOADED_SCRIPTS_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.stepBackSupportedContextKey = CONTEXT_STEP_BACK_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.focusedSessionIsAttach = CONTEXT_FOCUSED_SESSION_IS_ATTACH.bindTo(contextKeyService);\n\t\t\tthis.restartFrameSupportedContextKey = CONTEXT_RESTART_FRAME_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.stepIntoTargetsSupported = CONTEXT_STEP_INTO_TARGETS_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.jumpToCursorSupported = CONTEXT_JUMP_TO_CURSOR_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.setVariableSupported = CONTEXT_SET_VARIABLE_SUPPORTED.bindTo(contextKeyService);\n\t\t\tthis.multiSessionDebug = CONTEXT_MULTI_SESSION_DEBUG.bindTo(contextKeyService);\n\t\t\tthis.terminateDebuggeeSuported = CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED.bindTo(contextKeyService);\n\t\t});\n\t}\n\n\tgetId(): string {\n\t\treturn 'root';\n\t}\n\n\tget focusedSession(): IDebugSession | undefined {\n\t\treturn this._focusedSession;\n\t}\n\n\tget focusedThread(): IThread | undefined {\n\t\treturn this._focusedThread;\n\t}\n\n\tget focusedStackFrame(): IStackFrame | undefined {\n\t\treturn this._focusedStackFrame;\n\t}\n\n\tsetFocus(stackFrame: IStackFrame | undefined, thread: IThread | undefined, session: IDebugSession | undefined, explicit: boolean): void {\n\t\tconst shouldEmitForStackFrame = this._focusedStackFrame !== stackFrame;\n\t\tconst shouldEmitForSession = this._focusedSession !== session;\n\n\t\tthis._focusedStackFrame = stackFrame;\n\t\tthis._focusedThread = thread;\n\t\tthis._focusedSession = session;\n\n\t\tthis.contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis.loadedScriptsSupportedContextKey.set(session ? !!session.capabilities.supportsLoadedSourcesRequest : false);\n\t\t\tthis.stepBackSupportedContextKey.set(session ? !!session.capabilities.supportsStepBack : false);\n\t\t\tthis.restartFrameSupportedContextKey.set(session ? !!session.capabilities.supportsRestartFrame : false);\n\t\t\tthis.stepIntoTargetsSupported.set(session ? !!session.capabilities.supportsStepInTargetsRequest : false);\n\t\t\tthis.jumpToCursorSupported.set(session ? !!session.capabilities.supportsGotoTargetsRequest : false);\n\t\t\tthis.setVariableSupported.set(session ? !!session.capabilities.supportsSetVariable : false);\n\t\t\tthis.terminateDebuggeeSuported.set(session ? !!session.capabilities.supportTerminateDebuggee : false);\n\t\t\tconst attach = !!session && isSessionAttach(session);\n\t\t\tthis.focusedSessionIsAttach.set(attach);\n\t\t});\n\n\t\tif (shouldEmitForSession) {\n\t\t\tthis._onDidFocusSession.fire(session);\n\t\t}\n\t\tif (shouldEmitForStackFrame) {\n\t\t\tthis._onDidFocusStackFrame.fire({ stackFrame, explicit });\n\t\t}\n\t}\n\n\tget onDidFocusSession(): Event<IDebugSession | undefined> {\n\t\treturn this._onDidFocusSession.event;\n\t}\n\n\tget onDidFocusStackFrame(): Event<{ stackFrame: IStackFrame | undefined, explicit: boolean }> {\n\t\treturn this._onDidFocusStackFrame.event;\n\t}\n\n\tgetSelectedExpression(): IExpression | undefined {\n\t\treturn this.selectedExpression;\n\t}\n\n\tsetSelectedExpression(expression: IExpression | undefined) {\n\t\tthis.selectedExpression = expression;\n\t\tthis.expressionSelectedContextKey.set(!!expression);\n\t\tthis._onDidSelectExpression.fire(expression);\n\t}\n\n\tget onDidSelectExpression(): Event<IExpression | undefined> {\n\t\treturn this._onDidSelectExpression.event;\n\t}\n\n\tupdateViews(): void {\n\t\tthis._onWillUpdateViews.fire();\n\t}\n\n\tget onWillUpdateViews(): Event<void> {\n\t\treturn this._onWillUpdateViews.event;\n\t}\n\n\tisMultiSessionView(): boolean {\n\t\treturn !!this.multiSessionDebug.get();\n\t}\n\n\tsetMultiSessionView(isMultiSessionView: boolean): void {\n\t\tthis.multiSessionDebug.set(isMultiSessionView);\n\t}\n}\n"]}