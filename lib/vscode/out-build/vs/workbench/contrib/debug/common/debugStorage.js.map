{"version":3,"file":"debugStorage.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/common/debugStorage.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG,MAAM,qBAAqB,GAAG,kBAAkB,CAAC;IACjD,MAAM,8BAA8B,GAAG,0BAA0B,CAAC;IAClE,MAAM,0BAA0B,GAAG,sBAAsB,CAAC;IAC1D,MAAM,+BAA+B,GAAG,2BAA2B,CAAC;IACpE,MAAM,2BAA2B,GAAG,wBAAwB,CAAC;IAC7D,MAAM,kBAAkB,GAAG,eAAe,CAAC;IAE3C,IAAa,YAAY,GAAzB,MAAa,YAAY;QACxB,YACmC,cAA+B,EAC9B,eAAiC,EAC9B,kBAAuC;YAF3C,mBAAc,GAAd,cAAc,CAAiB;YAC9B,oBAAe,GAAf,eAAe,CAAkB;YAC9B,uBAAkB,GAAlB,kBAAkB,CAAqB;QAC1E,CAAC;QAEL,gBAAgB;YACf,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,qBAA0B,SAAS,CAAyB,CAAC;QAC/G,CAAC;QAED,iBAAiB,CAAC,KAA2B;YAC5C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,kCAA6C,CAAC;QAClG,CAAC;QAED,eAAe;YACd,IAAI,MAAgC,CAAC;YACrC,IAAI;gBACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,qBAA0B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAe,EAAE,EAAE;oBACzH,OAAO,IAAI,uBAAU,CAAC,SAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,IAAI,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACxS,CAAC,CAAC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE,GAAG;YAEf,OAAO,MAAM,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,uBAAuB;YACtB,IAAI,MAAwC,CAAC;YAC7C,IAAI;gBACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,8BAA8B,qBAA0B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,EAAE;oBAC1H,OAAO,IAAI,+BAAkB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;gBAClG,CAAC,CAAC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE,GAAG;YAEf,OAAO,MAAM,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,wBAAwB;YACvB,IAAI,MAAyC,CAAC;YAC9C,IAAI;gBACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,+BAA+B,qBAA0B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,YAAiB,EAAE,EAAE;oBACrI,OAAO,IAAI,gCAAmB,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,iBAAiB,EAAE,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC,oBAAoB,CAAC,CAAC;gBACpN,CAAC,CAAC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE,GAAG;YAEf,OAAO,MAAM,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,mBAAmB;YAClB,IAAI,MAAoC,CAAC;YACzC,IAAI;gBACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,0BAA0B,qBAA0B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;oBACvH,OAAO,IAAI,2BAAc,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC7J,CAAC,CAAC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE,GAAG;YAEf,OAAO,MAAM,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,oBAAoB;YACnB,IAAI,MAAgC,CAAC;YACrC,IAAI;gBACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,2BAA2B,qBAA0B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,eAA6C,EAAE,EAAE;oBAC7J,OAAO,IAAI,uBAAU,CAAC,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE,GAAG;YAEf,OAAO,MAAM,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,qBAAqB,CAAC,gBAA6C;YAClE,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,kCAA6C,CAAC;aACpL;iBAAM;gBACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,2BAA2B,oBAAyB,CAAC;aAChF;QACF,CAAC;QAED,gBAAgB,CAAC,UAAuB;YACvC,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,EAAE,CAAC;YAChD,IAAI,WAAW,CAAC,MAAM,EAAE;gBACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,kCAA6C,CAAC;aAC1H;iBAAM;gBACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,qBAAqB,oBAAyB,CAAC;aAC1E;YAED,MAAM,mBAAmB,GAAG,UAAU,CAAC,sBAAsB,EAAE,CAAC;YAChE,IAAI,mBAAmB,CAAC,MAAM,EAAE;gBAC/B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,kCAA6C,CAAC;aAC3I;iBAAM;gBACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,8BAA8B,oBAAyB,CAAC;aACnF;YAED,MAAM,eAAe,GAAG,UAAU,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACtF,IAAI,eAAe,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,kCAA6C,CAAC;aACnI;iBAAM;gBACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,0BAA0B,oBAAyB,CAAC;aAC/E;YAED,MAAM,oBAAoB,GAAG,UAAU,CAAC,uBAAuB,EAAE,CAAC;YAClE,IAAI,oBAAoB,CAAC,MAAM,EAAE;gBAChC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,+BAA+B,EAAE,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,kCAA6C,CAAC;aAC7I;iBAAM;gBACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,+BAA+B,oBAAyB,CAAC;aACpF;QACF,CAAC;KACD,CAAA;IA3GY,YAAY;QAEtB,WAAA,yBAAe,CAAA;QACf,WAAA,4BAAgB,CAAA;QAChB,WAAA,iCAAmB,CAAA;OAJT,YAAY,CA2GxB;IA3GY,oCAAY","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { StorageScope, IStorageService, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ExceptionBreakpoint, Expression, Breakpoint, FunctionBreakpoint, DataBreakpoint } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IEvaluate, IExpression, IDebugModel } from 'vs/workbench/contrib/debug/common/debug';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\n\nconst DEBUG_BREAKPOINTS_KEY = 'debug.breakpoint';\nconst DEBUG_FUNCTION_BREAKPOINTS_KEY = 'debug.functionbreakpoint';\nconst DEBUG_DATA_BREAKPOINTS_KEY = 'debug.databreakpoint';\nconst DEBUG_EXCEPTION_BREAKPOINTS_KEY = 'debug.exceptionbreakpoint';\nconst DEBUG_WATCH_EXPRESSIONS_KEY = 'debug.watchexpressions';\nconst DEBUG_UX_STATE_KEY = 'debug.uxstate';\n\nexport class DebugStorage {\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) { }\n\n\tloadDebugUxState(): 'simple' | 'default' {\n\t\treturn this.storageService.get(DEBUG_UX_STATE_KEY, StorageScope.WORKSPACE, 'default') as 'simple' | 'default';\n\t}\n\n\tstoreDebugUxState(value: 'simple' | 'default'): void {\n\t\tthis.storageService.store(DEBUG_UX_STATE_KEY, value, StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\n\tloadBreakpoints(): Breakpoint[] {\n\t\tlet result: Breakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(this.storageService.get(DEBUG_BREAKPOINTS_KEY, StorageScope.WORKSPACE, '[]')).map((breakpoint: any) => {\n\t\t\t\treturn new Breakpoint(URI.parse(breakpoint.uri.external || breakpoint.source.uri.external), breakpoint.lineNumber, breakpoint.column, breakpoint.enabled, breakpoint.condition, breakpoint.hitCondition, breakpoint.logMessage, breakpoint.adapterData, this.textFileService, this.uriIdentityService);\n\t\t\t});\n\t\t} catch (e) { }\n\n\t\treturn result || [];\n\t}\n\n\tloadFunctionBreakpoints(): FunctionBreakpoint[] {\n\t\tlet result: FunctionBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(this.storageService.get(DEBUG_FUNCTION_BREAKPOINTS_KEY, StorageScope.WORKSPACE, '[]')).map((fb: any) => {\n\t\t\t\treturn new FunctionBreakpoint(fb.name, fb.enabled, fb.hitCondition, fb.condition, fb.logMessage);\n\t\t\t});\n\t\t} catch (e) { }\n\n\t\treturn result || [];\n\t}\n\n\tloadExceptionBreakpoints(): ExceptionBreakpoint[] {\n\t\tlet result: ExceptionBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(this.storageService.get(DEBUG_EXCEPTION_BREAKPOINTS_KEY, StorageScope.WORKSPACE, '[]')).map((exBreakpoint: any) => {\n\t\t\t\treturn new ExceptionBreakpoint(exBreakpoint.filter, exBreakpoint.label, exBreakpoint.enabled, exBreakpoint.supportsCondition, exBreakpoint.condition, exBreakpoint.description, exBreakpoint.conditionDescription);\n\t\t\t});\n\t\t} catch (e) { }\n\n\t\treturn result || [];\n\t}\n\n\tloadDataBreakpoints(): DataBreakpoint[] {\n\t\tlet result: DataBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(this.storageService.get(DEBUG_DATA_BREAKPOINTS_KEY, StorageScope.WORKSPACE, '[]')).map((dbp: any) => {\n\t\t\t\treturn new DataBreakpoint(dbp.description, dbp.dataId, true, dbp.enabled, dbp.hitCondition, dbp.condition, dbp.logMessage, dbp.accessTypes, dbp.accessType);\n\t\t\t});\n\t\t} catch (e) { }\n\n\t\treturn result || [];\n\t}\n\n\tloadWatchExpressions(): Expression[] {\n\t\tlet result: Expression[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(this.storageService.get(DEBUG_WATCH_EXPRESSIONS_KEY, StorageScope.WORKSPACE, '[]')).map((watchStoredData: { name: string, id: string }) => {\n\t\t\t\treturn new Expression(watchStoredData.name, watchStoredData.id);\n\t\t\t});\n\t\t} catch (e) { }\n\n\t\treturn result || [];\n\t}\n\n\tstoreWatchExpressions(watchExpressions: (IExpression & IEvaluate)[]): void {\n\t\tif (watchExpressions.length) {\n\t\t\tthis.storageService.store(DEBUG_WATCH_EXPRESSIONS_KEY, JSON.stringify(watchExpressions.map(we => ({ name: we.name, id: we.getId() }))), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(DEBUG_WATCH_EXPRESSIONS_KEY, StorageScope.WORKSPACE);\n\t\t}\n\t}\n\n\tstoreBreakpoints(debugModel: IDebugModel): void {\n\t\tconst breakpoints = debugModel.getBreakpoints();\n\t\tif (breakpoints.length) {\n\t\t\tthis.storageService.store(DEBUG_BREAKPOINTS_KEY, JSON.stringify(breakpoints), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(DEBUG_BREAKPOINTS_KEY, StorageScope.WORKSPACE);\n\t\t}\n\n\t\tconst functionBreakpoints = debugModel.getFunctionBreakpoints();\n\t\tif (functionBreakpoints.length) {\n\t\t\tthis.storageService.store(DEBUG_FUNCTION_BREAKPOINTS_KEY, JSON.stringify(functionBreakpoints), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(DEBUG_FUNCTION_BREAKPOINTS_KEY, StorageScope.WORKSPACE);\n\t\t}\n\n\t\tconst dataBreakpoints = debugModel.getDataBreakpoints().filter(dbp => dbp.canPersist);\n\t\tif (dataBreakpoints.length) {\n\t\t\tthis.storageService.store(DEBUG_DATA_BREAKPOINTS_KEY, JSON.stringify(dataBreakpoints), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(DEBUG_DATA_BREAKPOINTS_KEY, StorageScope.WORKSPACE);\n\t\t}\n\n\t\tconst exceptionBreakpoints = debugModel.getExceptionBreakpoints();\n\t\tif (exceptionBreakpoints.length) {\n\t\t\tthis.storageService.store(DEBUG_EXCEPTION_BREAKPOINTS_KEY, JSON.stringify(exceptionBreakpoints), StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(DEBUG_EXCEPTION_BREAKPOINTS_KEY, StorageScope.WORKSPACE);\n\t\t}\n\t}\n}\n"]}