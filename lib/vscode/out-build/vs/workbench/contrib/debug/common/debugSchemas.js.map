{"version":3,"sources":["vs/workbench/contrib/debug/common/debugSchemas.ts"],"names":[],"mappings":"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","file":"debugSchemas.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extensionsRegistry from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport * as nls from 'vs/nls';\nimport { IDebuggerContribution, ICompound } from 'vs/workbench/contrib/debug/common/debug';\nimport { launchSchemaId } from 'vs/workbench/services/configuration/common/configuration';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { inputsSchema } from 'vs/workbench/services/configurationResolver/common/configurationResolverSchema';\n\n// debuggers extension point\nexport const debuggersExtPoint = extensionsRegistry.ExtensionsRegistry.registerExtensionPoint<IDebuggerContribution[]>({\n\textensionPoint: 'debuggers',\n\tdefaultExtensionKind: 'workspace',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.debuggers', 'Contributes debug adapters.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ type: '' }] }],\n\t\titems: {\n\t\t\tadditionalProperties: false,\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { type: '', program: '', runtime: '' } }],\n\t\t\tproperties: {\n\t\t\t\ttype: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.type', \"Unique identifier for this debug adapter.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.label', \"Display name for this debug adapter.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tprogram: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.program', \"Path to the debug adapter program. Path is either absolute or relative to the extension folder.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.args', \"Optional arguments to pass to the adapter.\"),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\truntime: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.runtime', \"Optional runtime in case the program attribute is not an executable but requires a runtime.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\truntimeArgs: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.runtimeArgs', \"Optional runtime arguments.\"),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\tvariables: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.variables', \"Mapping from interactive variables (e.g. ${action.pickProcess}) in `launch.json` to a command.\"),\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\tinitialConfigurations: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.initialConfigurations', \"Configurations for generating the initial \\'launch.json\\'.\"),\n\t\t\t\t\ttype: ['array', 'string'],\n\t\t\t\t},\n\t\t\t\tlanguages: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.languages', \"List of languages for which the debug extension could be considered the \\\"default debugger\\\".\"),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\tconfigurationSnippets: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.configurationSnippets', \"Snippets for adding new configurations in \\'launch.json\\'.\"),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\tconfigurationAttributes: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.configurationAttributes', \"JSON schema configurations for validating \\'launch.json\\'.\"),\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\twindows: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.windows', \"Windows specific settings.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.windows.runtime', \"Runtime used for Windows.\"),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tosx: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.osx', \"macOS specific settings.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.osx.runtime', \"Runtime used for macOS.\"),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinux: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.linux', \"Linux specific settings.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.debuggers.linux.runtime', \"Runtime used for Linux.\"),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport interface IRawBreakpointContribution {\n\tlanguage: string;\n}\n\n// breakpoints extension point #9037\nexport const breakpointsExtPoint = extensionsRegistry.ExtensionsRegistry.registerExtensionPoint<IRawBreakpointContribution[]>({\n\textensionPoint: 'breakpoints',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.breakpoints', 'Contributes breakpoints.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ language: '' }] }],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\tdefaultSnippets: [{ body: { language: '' } }],\n\t\t\tproperties: {\n\t\t\t\tlanguage: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.breakpoints.language', \"Allow breakpoints for this language.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t}\n});\n\n// debug general schema\n\nexport const presentationSchema: IJSONSchema = {\n\ttype: 'object',\n\tdescription: nls.localize('presentation', \"Presentation options on how to show this configuration in the debug configuration dropdown and the command palette.\"),\n\tproperties: {\n\t\thidden: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('presentation.hidden', \"Controls if this configuration should be shown in the configuration dropdown and the command palette.\")\n\t\t},\n\t\tgroup: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription: nls.localize('presentation.group', \"Group that this configuration belongs to. Used for grouping and sorting in the configuration dropdown and the command palette.\")\n\t\t},\n\t\torder: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 1,\n\t\t\tdescription: nls.localize('presentation.order', \"Order of this configuration within a group. Used for grouping and sorting in the configuration dropdown and the command palette.\")\n\t\t}\n\t},\n\tdefault: {\n\t\thidden: false,\n\t\tgroup: '',\n\t\torder: 1\n\t}\n};\nconst defaultCompound: ICompound = { name: 'Compound', configurations: [] };\nexport const launchSchema: IJSONSchema = {\n\tid: launchSchemaId,\n\ttype: 'object',\n\ttitle: nls.localize('app.launch.json.title', \"Launch\"),\n\tallowTrailingCommas: true,\n\tallowComments: true,\n\trequired: [],\n\tdefault: { version: '0.2.0', configurations: [], compounds: [] },\n\tproperties: {\n\t\tversion: {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('app.launch.json.version', \"Version of this file format.\"),\n\t\t\tdefault: '0.2.0'\n\t\t},\n\t\tconfigurations: {\n\t\t\ttype: 'array',\n\t\t\tdescription: nls.localize('app.launch.json.configurations', \"List of configurations. Add new configurations or edit existing ones by using IntelliSense.\"),\n\t\t\titems: {\n\t\t\t\tdefaultSnippets: [],\n\t\t\t\t'type': 'object',\n\t\t\t\toneOf: []\n\t\t\t}\n\t\t},\n\t\tcompounds: {\n\t\t\ttype: 'array',\n\t\t\tdescription: nls.localize('app.launch.json.compounds', \"List of compounds. Each compound references multiple configurations which will get launched together.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'object',\n\t\t\t\trequired: ['name', 'configurations'],\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('app.launch.json.compound.name', \"Name of compound. Appears in the launch configuration drop down menu.\")\n\t\t\t\t\t},\n\t\t\t\t\tpresentation: presentationSchema,\n\t\t\t\t\tconfigurations: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\toneOf: [{\n\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\tdescription: nls.localize('useUniqueNames', \"Please use unique configuration names.\")\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\trequired: ['name'],\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('app.launch.json.compound.name', \"Name of compound. Appears in the launch configuration drop down menu.\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfolder: {\n\t\t\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('app.launch.json.compound.folder', \"Name of folder in which the compound is located.\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: nls.localize('app.launch.json.compounds.configurations', \"Names of configurations that will be started as part of this compound.\")\n\t\t\t\t\t},\n\t\t\t\t\tstopAll: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: nls.localize('app.launch.json.compound.stopAll', \"Controls whether manually terminating one session will stop all of the compound sessions.\")\n\t\t\t\t\t},\n\t\t\t\t\tpreLaunchTask: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: nls.localize('compoundPrelaunchTask', \"Task to run before any of the compound configurations start.\")\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefault: defaultCompound\n\t\t\t},\n\t\t\tdefault: [\n\t\t\t\tdefaultCompound\n\t\t\t]\n\t\t},\n\t\tinputs: inputsSchema.definitions!.inputs\n\t}\n};\n"]}