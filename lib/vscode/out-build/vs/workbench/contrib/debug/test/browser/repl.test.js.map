{"version":3,"file":"repl.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/test/browser/repl.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport * as assert from 'assert';\nimport severity from 'vs/base/common/severity';\nimport { DebugModel, StackFrame, Thread } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { MockRawSession, MockDebugAdapter, createMockDebugModel } from 'vs/workbench/contrib/debug/test/browser/mockDebug';\nimport { SimpleReplElement, RawObjectReplElement, ReplEvaluationInput, ReplModel, ReplEvaluationResult, ReplGroup } from 'vs/workbench/contrib/debug/common/replModel';\nimport { RawDebugSession } from 'vs/workbench/contrib/debug/browser/rawDebugSession';\nimport { timeout } from 'vs/base/common/async';\nimport { createMockSession } from 'vs/workbench/contrib/debug/test/browser/callStack.test';\nimport { ReplFilter } from 'vs/workbench/contrib/debug/browser/replFilter';\nimport { TreeVisibility } from 'vs/base/browser/ui/tree/tree';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\n\nsuite('Debug - REPL', () => {\n\tlet model: DebugModel;\n\tlet rawSession: MockRawSession;\n\tconst configurationService = new TestConfigurationService({ debug: { console: { collapseIdenticalLines: true } } });\n\n\tsetup(() => {\n\t\tmodel = createMockDebugModel();\n\t\trawSession = new MockRawSession();\n\t});\n\n\ttest('repl output', () => {\n\t\tconst session = createMockSession(model);\n\t\tconst repl = new ReplModel(configurationService);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Error);\n\t\trepl.appendToRepl(session, 'second line ', severity.Error);\n\t\trepl.appendToRepl(session, 'third line ', severity.Error);\n\t\trepl.appendToRepl(session, 'fourth line', severity.Error);\n\n\t\tlet elements = <SimpleReplElement[]>repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 2);\n\t\tassert.strictEqual(elements[0].value, 'first line\\n');\n\t\tassert.strictEqual(elements[0].severity, severity.Error);\n\t\tassert.strictEqual(elements[1].value, 'second line third line fourth line');\n\t\tassert.strictEqual(elements[1].severity, severity.Error);\n\n\t\trepl.appendToRepl(session, '1', severity.Warning);\n\t\telements = <SimpleReplElement[]>repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 3);\n\t\tassert.strictEqual(elements[2].value, '1');\n\t\tassert.strictEqual(elements[2].severity, severity.Warning);\n\n\t\tconst keyValueObject = { 'key1': 2, 'key2': 'value' };\n\t\trepl.appendToRepl(session, new RawObjectReplElement('fakeid', 'fake', keyValueObject), severity.Info);\n\t\tconst element = <RawObjectReplElement>repl.getReplElements()[3];\n\t\tassert.strictEqual(element.value, 'Object');\n\t\tassert.deepStrictEqual(element.valueObj, keyValueObject);\n\n\t\trepl.removeReplExpressions();\n\t\tassert.strictEqual(repl.getReplElements().length, 0);\n\n\t\trepl.appendToRepl(session, '1\\n', severity.Info);\n\t\trepl.appendToRepl(session, '2', severity.Info);\n\t\trepl.appendToRepl(session, '3\\n4', severity.Info);\n\t\trepl.appendToRepl(session, '5\\n', severity.Info);\n\t\trepl.appendToRepl(session, '6', severity.Info);\n\t\telements = <SimpleReplElement[]>repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 3);\n\t\tassert.strictEqual(elements[0].toString(), '1\\n');\n\t\tassert.strictEqual(elements[1].toString(), '23\\n45\\n');\n\t\tassert.strictEqual(elements[2].toString(), '6');\n\n\t\trepl.removeReplExpressions();\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'second line', severity.Info);\n\t\trepl.appendToRepl(session, 'second line', severity.Info);\n\t\trepl.appendToRepl(session, 'third line', severity.Info);\n\t\telements = <SimpleReplElement[]>repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 3);\n\t\tassert.strictEqual(elements[0].value, 'first line\\n');\n\t\tassert.strictEqual(elements[0].count, 3);\n\t\tassert.strictEqual(elements[1].value, 'second line');\n\t\tassert.strictEqual(elements[1].count, 2);\n\t\tassert.strictEqual(elements[2].value, 'third line');\n\t\tassert.strictEqual(elements[2].count, 1);\n\t});\n\n\ttest('repl output count', () => {\n\t\tconst session = createMockSession(model);\n\t\tconst repl = new ReplModel(configurationService);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'second line', severity.Info);\n\t\trepl.appendToRepl(session, 'second line', severity.Info);\n\t\trepl.appendToRepl(session, 'third line', severity.Info);\n\t\tconst elements = <SimpleReplElement[]>repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 3);\n\t\tassert.strictEqual(elements[0].value, 'first line\\n');\n\t\tassert.strictEqual(elements[0].toString(), 'first line\\nfirst line\\nfirst line\\n');\n\t\tassert.strictEqual(elements[0].count, 3);\n\t\tassert.strictEqual(elements[1].value, 'second line');\n\t\tassert.strictEqual(elements[1].toString(), 'second line\\nsecond line');\n\t\tassert.strictEqual(elements[1].count, 2);\n\t\tassert.strictEqual(elements[2].value, 'third line');\n\t\tassert.strictEqual(elements[2].count, 1);\n\t});\n\n\ttest('repl merging', () => {\n\t\t// 'mergeWithParent' should be ignored when there is no parent.\n\t\tconst parent = createMockSession(model, 'parent', { repl: 'mergeWithParent' });\n\t\tconst child1 = createMockSession(model, 'child1', { parentSession: parent, repl: 'separate' });\n\t\tconst child2 = createMockSession(model, 'child2', { parentSession: parent, repl: 'mergeWithParent' });\n\t\tconst grandChild = createMockSession(model, 'grandChild', { parentSession: child2, repl: 'mergeWithParent' });\n\t\tconst child3 = createMockSession(model, 'child3', { parentSession: parent });\n\n\t\tlet parentChanges = 0;\n\t\tparent.onDidChangeReplElements(() => ++parentChanges);\n\n\t\tparent.appendToRepl('1\\n', severity.Info);\n\t\tassert.strictEqual(parentChanges, 1);\n\t\tassert.strictEqual(parent.getReplElements().length, 1);\n\t\tassert.strictEqual(child1.getReplElements().length, 0);\n\t\tassert.strictEqual(child2.getReplElements().length, 1);\n\t\tassert.strictEqual(grandChild.getReplElements().length, 1);\n\t\tassert.strictEqual(child3.getReplElements().length, 0);\n\n\t\tgrandChild.appendToRepl('2\\n', severity.Info);\n\t\tassert.strictEqual(parentChanges, 2);\n\t\tassert.strictEqual(parent.getReplElements().length, 2);\n\t\tassert.strictEqual(child1.getReplElements().length, 0);\n\t\tassert.strictEqual(child2.getReplElements().length, 2);\n\t\tassert.strictEqual(grandChild.getReplElements().length, 2);\n\t\tassert.strictEqual(child3.getReplElements().length, 0);\n\n\t\tchild3.appendToRepl('3\\n', severity.Info);\n\t\tassert.strictEqual(parentChanges, 2);\n\t\tassert.strictEqual(parent.getReplElements().length, 2);\n\t\tassert.strictEqual(child1.getReplElements().length, 0);\n\t\tassert.strictEqual(child2.getReplElements().length, 2);\n\t\tassert.strictEqual(grandChild.getReplElements().length, 2);\n\t\tassert.strictEqual(child3.getReplElements().length, 1);\n\n\t\tchild1.appendToRepl('4\\n', severity.Info);\n\t\tassert.strictEqual(parentChanges, 2);\n\t\tassert.strictEqual(parent.getReplElements().length, 2);\n\t\tassert.strictEqual(child1.getReplElements().length, 1);\n\t\tassert.strictEqual(child2.getReplElements().length, 2);\n\t\tassert.strictEqual(grandChild.getReplElements().length, 2);\n\t\tassert.strictEqual(child3.getReplElements().length, 1);\n\t});\n\n\ttest('repl expressions', () => {\n\t\tconst session = createMockSession(model);\n\t\tassert.strictEqual(session.getReplElements().length, 0);\n\t\tmodel.addSession(session);\n\n\t\tsession['raw'] = <any>rawSession;\n\t\tconst thread = new Thread(session, 'mockthread', 1);\n\t\tconst stackFrame = new StackFrame(thread, 1, <any>undefined, 'app.js', 'normal', { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 10 }, 1, true);\n\t\tconst replModel = new ReplModel(configurationService);\n\t\treplModel.addReplExpression(session, stackFrame, 'myVariable').then();\n\t\treplModel.addReplExpression(session, stackFrame, 'myVariable').then();\n\t\treplModel.addReplExpression(session, stackFrame, 'myVariable').then();\n\n\t\tassert.strictEqual(replModel.getReplElements().length, 3);\n\t\treplModel.getReplElements().forEach(re => {\n\t\t\tassert.strictEqual((<ReplEvaluationInput>re).value, 'myVariable');\n\t\t});\n\n\t\treplModel.removeReplExpressions();\n\t\tassert.strictEqual(replModel.getReplElements().length, 0);\n\t});\n\n\ttest('repl ordering', async () => {\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\n\t\tconst adapter = new MockDebugAdapter();\n\t\tconst raw = new RawDebugSession(adapter, undefined!, '', undefined!, undefined!, undefined!, undefined!, undefined!, undefined!);\n\t\tsession.initializeForTest(raw);\n\n\t\tawait session.addReplExpression(undefined, 'before.1');\n\t\tassert.strictEqual(session.getReplElements().length, 3);\n\t\tassert.strictEqual((<ReplEvaluationInput>session.getReplElements()[0]).value, 'before.1');\n\t\tassert.strictEqual((<SimpleReplElement>session.getReplElements()[1]).value, 'before.1');\n\t\tassert.strictEqual((<ReplEvaluationResult>session.getReplElements()[2]).value, '=before.1');\n\n\t\tawait session.addReplExpression(undefined, 'after.2');\n\t\tawait timeout(0);\n\t\tassert.strictEqual(session.getReplElements().length, 6);\n\t\tassert.strictEqual((<ReplEvaluationInput>session.getReplElements()[3]).value, 'after.2');\n\t\tassert.strictEqual((<ReplEvaluationResult>session.getReplElements()[4]).value, '=after.2');\n\t\tassert.strictEqual((<SimpleReplElement>session.getReplElements()[5]).value, 'after.2');\n\t});\n\n\ttest('repl groups', async () => {\n\t\tconst session = createMockSession(model);\n\t\tconst repl = new ReplModel(configurationService);\n\n\t\trepl.appendToRepl(session, 'first global line', severity.Info);\n\t\trepl.startGroup('group_1', true);\n\t\trepl.appendToRepl(session, 'first line in group', severity.Info);\n\t\trepl.appendToRepl(session, 'second line in group', severity.Info);\n\t\tconst elements = repl.getReplElements();\n\t\tassert.strictEqual(elements.length, 2);\n\t\tconst group = elements[1] as ReplGroup;\n\t\tassert.strictEqual(group.name, 'group_1');\n\t\tassert.strictEqual(group.autoExpand, true);\n\t\tassert.strictEqual(group.hasChildren, true);\n\t\tassert.strictEqual(group.hasEnded, false);\n\n\t\trepl.startGroup('group_2', false);\n\t\trepl.appendToRepl(session, 'first line in subgroup', severity.Info);\n\t\trepl.appendToRepl(session, 'second line in subgroup', severity.Info);\n\t\tconst children = group.getChildren();\n\t\tassert.strictEqual(children.length, 3);\n\t\tassert.strictEqual((<SimpleReplElement>children[0]).value, 'first line in group');\n\t\tassert.strictEqual((<SimpleReplElement>children[1]).value, 'second line in group');\n\t\tassert.strictEqual((<ReplGroup>children[2]).name, 'group_2');\n\t\tassert.strictEqual((<ReplGroup>children[2]).hasEnded, false);\n\t\tassert.strictEqual((<ReplGroup>children[2]).getChildren().length, 2);\n\t\trepl.endGroup();\n\t\tassert.strictEqual((<ReplGroup>children[2]).hasEnded, true);\n\t\trepl.appendToRepl(session, 'third line in group', severity.Info);\n\t\tassert.strictEqual(group.getChildren().length, 4);\n\t\tassert.strictEqual(group.hasEnded, false);\n\t\trepl.endGroup();\n\t\tassert.strictEqual(group.hasEnded, true);\n\t\trepl.appendToRepl(session, 'second global line', severity.Info);\n\t\tassert.strictEqual(repl.getReplElements().length, 3);\n\t\tassert.strictEqual((<SimpleReplElement>repl.getReplElements()[2]).value, 'second global line');\n\t});\n\n\ttest('repl filter', async () => {\n\t\tconst session = createMockSession(model);\n\t\tconst repl = new ReplModel(configurationService);\n\t\tconst replFilter = new ReplFilter();\n\n\t\tconst getFilteredElements = () => {\n\t\t\tconst elements = repl.getReplElements();\n\t\t\treturn elements.filter(e => {\n\t\t\t\tconst filterResult = replFilter.filter(e, TreeVisibility.Visible);\n\t\t\t\treturn filterResult === true || filterResult === TreeVisibility.Visible;\n\t\t\t});\n\t\t};\n\n\t\trepl.appendToRepl(session, 'first line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'second line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'third line\\n', severity.Info);\n\t\trepl.appendToRepl(session, 'fourth line\\n', severity.Info);\n\n\t\treplFilter.filterQuery = 'first';\n\t\tlet r1 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r1.length, 1);\n\t\tassert.strictEqual(r1[0].value, 'first line\\n');\n\n\t\treplFilter.filterQuery = '!first';\n\t\tlet r2 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r1.length, 1);\n\t\tassert.strictEqual(r2[0].value, 'second line\\n');\n\t\tassert.strictEqual(r2[1].value, 'third line\\n');\n\t\tassert.strictEqual(r2[2].value, 'fourth line\\n');\n\n\t\treplFilter.filterQuery = 'first, line';\n\t\tlet r3 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r3.length, 4);\n\t\tassert.strictEqual(r3[0].value, 'first line\\n');\n\t\tassert.strictEqual(r3[1].value, 'second line\\n');\n\t\tassert.strictEqual(r3[2].value, 'third line\\n');\n\t\tassert.strictEqual(r3[3].value, 'fourth line\\n');\n\n\t\treplFilter.filterQuery = 'line, !second';\n\t\tlet r4 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r4.length, 3);\n\t\tassert.strictEqual(r4[0].value, 'first line\\n');\n\t\tassert.strictEqual(r4[1].value, 'third line\\n');\n\t\tassert.strictEqual(r4[2].value, 'fourth line\\n');\n\n\t\treplFilter.filterQuery = '!second, line';\n\t\tlet r4_same = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r4.length, r4_same.length);\n\n\t\treplFilter.filterQuery = '!line';\n\t\tlet r5 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r5.length, 0);\n\n\t\treplFilter.filterQuery = 'smth';\n\t\tlet r6 = <SimpleReplElement[]>getFilteredElements();\n\t\tassert.strictEqual(r6.length, 0);\n\t});\n});\n"]}