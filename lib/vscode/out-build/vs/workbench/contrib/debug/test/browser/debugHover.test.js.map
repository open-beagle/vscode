{"version":3,"file":"debugHover.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/test/browser/debugHover.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAUhG,KAAK,CAAC,eAAe,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YACjD,MAAM,KAAK,GAAG,CAAA,GAAA,gCAAoB,CAAA,EAAE,CAAC;YACrC,MAAM,OAAO,GAAG,CAAA,GAAA,kCAAiB,CAAA,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,UAAsB,CAAC;YAE3B,MAAM,MAAM,GAAG,IAAI,KAAM,SAAQ,mBAAM;gBACtB,YAAY;oBAC3B,OAAO,CAAC,UAAU,CAAC,CAAC;gBACrB,CAAC;aACD,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;YAE5B,MAAM,WAAW,GAAG,IAAI,oBAAM,CAAC;gBAC9B,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,2BAA2B;gBACjC,eAAe,EAAE,EAAE;aACnB,EAAE,iBAAiB,EAAE,kCAAsB,CAAC,CAAC;YAE9C,IAAI,KAAY,CAAC;YACjB,UAAU,GAAG,IAAI,KAAM,SAAQ,uBAAU;gBAC/B,SAAS;oBACjB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjC,CAAC;aACD,CAAC,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAGhI,IAAI,SAAmB,CAAC;YACxB,IAAI,SAAmB,CAAC;YACxB,KAAK,GAAG,IAAI,KAAM,SAAQ,kBAAK;gBACrB,WAAW;oBACnB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,CAAC;aACD,CAAC,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAE5C,SAAS,GAAG,IAAI,KAAM,SAAQ,qBAAQ;gBAC5B,WAAW;oBACnB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,CAAC;aACD,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,SAAU,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;YAClE,SAAS,GAAG,IAAI,qBAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,SAAU,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;YAE3F,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACpG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACxF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAExF,uCAAuC;YACvC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAA,GAAA,uCAA0B,CAAA,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { findExpressionInStackFrame } from 'vs/workbench/contrib/debug/browser/debugHover';\nimport { createMockSession } from 'vs/workbench/contrib/debug/test/browser/callStack.test';\nimport { StackFrame, Thread, Scope, Variable } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { Source } from 'vs/workbench/contrib/debug/common/debugSource';\nimport type { IScope, IExpression } from 'vs/workbench/contrib/debug/common/debug';\nimport { createMockDebugModel, mockUriIdentityService } from 'vs/workbench/contrib/debug/test/browser/mockDebug';\n\nsuite('Debug - Hover', () => {\n\ttest('find expression in stack frame', async () => {\n\t\tconst model = createMockDebugModel();\n\t\tconst session = createMockSession(model);\n\t\tlet stackFrame: StackFrame;\n\n\t\tconst thread = new class extends Thread {\n\t\t\tpublic override getCallStack(): StackFrame[] {\n\t\t\t\treturn [stackFrame];\n\t\t\t}\n\t\t}(session, 'mockthread', 1);\n\n\t\tconst firstSource = new Source({\n\t\t\tname: 'internalModule.js',\n\t\t\tpath: 'a/b/c/d/internalModule.js',\n\t\t\tsourceReference: 10,\n\t\t}, 'aDebugSessionId', mockUriIdentityService);\n\n\t\tlet scope: Scope;\n\t\tstackFrame = new class extends StackFrame {\n\t\t\toverride getScopes(): Promise<IScope[]> {\n\t\t\t\treturn Promise.resolve([scope]);\n\t\t\t}\n\t\t}(thread, 1, firstSource, 'app.js', 'normal', { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 10 }, 1, true);\n\n\n\t\tlet variableA: Variable;\n\t\tlet variableB: Variable;\n\t\tscope = new class extends Scope {\n\t\t\toverride getChildren(): Promise<IExpression[]> {\n\t\t\t\treturn Promise.resolve([variableA]);\n\t\t\t}\n\t\t}(stackFrame, 1, 'local', 1, false, 10, 10);\n\n\t\tvariableA = new class extends Variable {\n\t\t\toverride getChildren(): Promise<IExpression[]> {\n\t\t\t\treturn Promise.resolve([variableB]);\n\t\t\t}\n\t\t}(session, 1, scope, 2, 'A', 'A', undefined!, 0, 0, {}, 'string');\n\t\tvariableB = new Variable(session, 1, scope, 2, 'B', 'A.B', undefined!, 0, 0, {}, 'string');\n\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, []), undefined);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['A']), variableA);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['doesNotExist', 'no']), undefined);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['a']), undefined);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['B']), undefined);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['A', 'B']), variableB);\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['A', 'C']), undefined);\n\n\t\t// We do not search in expensive scopes\n\t\tscope.expensive = true;\n\t\tassert.strictEqual(await findExpressionInStackFrame(stackFrame, ['A']), undefined);\n\t});\n});\n"]}