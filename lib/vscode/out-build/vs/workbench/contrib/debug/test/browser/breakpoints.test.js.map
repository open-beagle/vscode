{"version":3,"file":"breakpoints.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/test/browser/breakpoints.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { DebugModel, Breakpoint } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { getExpandedBodySize, getBreakpointMessageAndIcon } from 'vs/workbench/contrib/debug/browser/breakpointsView';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IBreakpointData, IBreakpointUpdateData, State } from 'vs/workbench/contrib/debug/common/debug';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { LanguageIdentifier, LanguageId } from 'vs/editor/common/modes';\nimport { createBreakpointDecorations } from 'vs/workbench/contrib/debug/browser/breakpointEditorContribution';\nimport { OverviewRulerLane } from 'vs/editor/common/model';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { createMockSession } from 'vs/workbench/contrib/debug/test/browser/callStack.test';\nimport { createMockDebugModel } from 'vs/workbench/contrib/debug/test/browser/mockDebug';\n\nfunction addBreakpointsAndCheckEvents(model: DebugModel, uri: uri, data: IBreakpointData[]): void {\n\tlet eventCount = 0;\n\tconst toDispose = model.onDidChangeBreakpoints(e => {\n\t\tassert.strictEqual(e?.sessionOnly, false);\n\t\tassert.strictEqual(e?.changed, undefined);\n\t\tassert.strictEqual(e?.removed, undefined);\n\t\tconst added = e?.added;\n\t\tassert.notStrictEqual(added, undefined);\n\t\tassert.strictEqual(added!.length, data.length);\n\t\teventCount++;\n\t\tdispose(toDispose);\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tassert.strictEqual(e!.added![i] instanceof Breakpoint, true);\n\t\t\tassert.strictEqual((e!.added![i] as Breakpoint).lineNumber, data[i].lineNumber);\n\t\t}\n\t});\n\tmodel.addBreakpoints(uri, data);\n\tassert.strictEqual(eventCount, 1);\n}\n\nsuite('Debug - Breakpoints', () => {\n\tlet model: DebugModel;\n\n\tsetup(() => {\n\t\tmodel = createMockDebugModel();\n\t});\n\n\t// Breakpoints\n\n\ttest('simple', () => {\n\t\tconst modelUri = uri.file('/myfolder/myfile.js');\n\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [{ lineNumber: 5, enabled: true }, { lineNumber: 10, enabled: false }]);\n\t\tassert.strictEqual(model.areBreakpointsActivated(), true);\n\t\tassert.strictEqual(model.getBreakpoints().length, 2);\n\n\t\tlet eventCount = 0;\n\t\tconst toDispose = model.onDidChangeBreakpoints(e => {\n\t\t\teventCount++;\n\t\t\tassert.strictEqual(e?.added, undefined);\n\t\t\tassert.strictEqual(e?.sessionOnly, false);\n\t\t\tassert.strictEqual(e?.removed?.length, 2);\n\t\t\tassert.strictEqual(e?.changed, undefined);\n\n\t\t\tdispose(toDispose);\n\t\t});\n\n\t\tmodel.removeBreakpoints(model.getBreakpoints());\n\t\tassert.strictEqual(eventCount, 1);\n\t\tassert.strictEqual(model.getBreakpoints().length, 0);\n\t});\n\n\ttest('toggling', () => {\n\t\tconst modelUri = uri.file('/myfolder/myfile.js');\n\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [{ lineNumber: 5, enabled: true }, { lineNumber: 10, enabled: false }]);\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [{ lineNumber: 12, enabled: true, condition: 'fake condition' }]);\n\t\tassert.strictEqual(model.getBreakpoints().length, 3);\n\t\tconst bp = model.getBreakpoints().pop();\n\t\tif (bp) {\n\t\t\tmodel.removeBreakpoints([bp]);\n\t\t}\n\t\tassert.strictEqual(model.getBreakpoints().length, 2);\n\n\t\tmodel.setBreakpointsActivated(false);\n\t\tassert.strictEqual(model.areBreakpointsActivated(), false);\n\t\tmodel.setBreakpointsActivated(true);\n\t\tassert.strictEqual(model.areBreakpointsActivated(), true);\n\t});\n\n\ttest('two files', () => {\n\t\tconst modelUri1 = uri.file('/myfolder/my file first.js');\n\t\tconst modelUri2 = uri.file('/secondfolder/second/second file.js');\n\t\taddBreakpointsAndCheckEvents(model, modelUri1, [{ lineNumber: 5, enabled: true }, { lineNumber: 10, enabled: false }]);\n\t\tassert.strictEqual(getExpandedBodySize(model, 9), 44);\n\n\t\taddBreakpointsAndCheckEvents(model, modelUri2, [{ lineNumber: 1, enabled: true }, { lineNumber: 2, enabled: true }, { lineNumber: 3, enabled: false }]);\n\t\tassert.strictEqual(getExpandedBodySize(model, 9), 110);\n\n\t\tassert.strictEqual(model.getBreakpoints().length, 5);\n\t\tassert.strictEqual(model.getBreakpoints({ uri: modelUri1 }).length, 2);\n\t\tassert.strictEqual(model.getBreakpoints({ uri: modelUri2 }).length, 3);\n\t\tassert.strictEqual(model.getBreakpoints({ lineNumber: 5 }).length, 1);\n\t\tassert.strictEqual(model.getBreakpoints({ column: 5 }).length, 0);\n\n\t\tconst bp = model.getBreakpoints()[0];\n\t\tconst update = new Map<string, IBreakpointUpdateData>();\n\t\tupdate.set(bp.getId(), { lineNumber: 100 });\n\t\tlet eventFired = false;\n\t\tconst toDispose = model.onDidChangeBreakpoints(e => {\n\t\t\teventFired = true;\n\t\t\tassert.strictEqual(e?.added, undefined);\n\t\t\tassert.strictEqual(e?.removed, undefined);\n\t\t\tassert.strictEqual(e?.changed?.length, 1);\n\t\t\tdispose(toDispose);\n\t\t});\n\t\tmodel.updateBreakpoints(update);\n\t\tassert.strictEqual(eventFired, true);\n\t\tassert.strictEqual(bp.lineNumber, 100);\n\n\t\tassert.strictEqual(model.getBreakpoints({ enabledOnly: true }).length, 3);\n\t\tmodel.enableOrDisableAllBreakpoints(false);\n\t\tmodel.getBreakpoints().forEach(bp => {\n\t\t\tassert.strictEqual(bp.enabled, false);\n\t\t});\n\t\tassert.strictEqual(model.getBreakpoints({ enabledOnly: true }).length, 0);\n\n\t\tmodel.setEnablement(bp, true);\n\t\tassert.strictEqual(bp.enabled, true);\n\n\t\tmodel.removeBreakpoints(model.getBreakpoints({ uri: modelUri1 }));\n\t\tassert.strictEqual(getExpandedBodySize(model, 9), 66);\n\n\t\tassert.strictEqual(model.getBreakpoints().length, 3);\n\t});\n\n\ttest('conditions', () => {\n\t\tconst modelUri1 = uri.file('/myfolder/my file first.js');\n\t\taddBreakpointsAndCheckEvents(model, modelUri1, [{ lineNumber: 5, condition: 'i < 5', hitCondition: '17' }, { lineNumber: 10, condition: 'j < 3' }]);\n\t\tconst breakpoints = model.getBreakpoints();\n\n\t\tassert.strictEqual(breakpoints[0].condition, 'i < 5');\n\t\tassert.strictEqual(breakpoints[0].hitCondition, '17');\n\t\tassert.strictEqual(breakpoints[1].condition, 'j < 3');\n\t\tassert.strictEqual(!!breakpoints[1].hitCondition, false);\n\n\t\tassert.strictEqual(model.getBreakpoints().length, 2);\n\t\tmodel.removeBreakpoints(model.getBreakpoints());\n\t\tassert.strictEqual(model.getBreakpoints().length, 0);\n\t});\n\n\ttest('function breakpoints', () => {\n\t\tmodel.addFunctionBreakpoint('foo', '1');\n\t\tmodel.addFunctionBreakpoint('bar', '2');\n\t\tmodel.updateFunctionBreakpoint('1', { name: 'fooUpdated' });\n\t\tmodel.updateFunctionBreakpoint('2', { name: 'barUpdated' });\n\n\t\tconst functionBps = model.getFunctionBreakpoints();\n\t\tassert.strictEqual(functionBps[0].name, 'fooUpdated');\n\t\tassert.strictEqual(functionBps[1].name, 'barUpdated');\n\n\t\tmodel.removeFunctionBreakpoints();\n\t\tassert.strictEqual(model.getFunctionBreakpoints().length, 0);\n\t});\n\n\ttest('multiple sessions', () => {\n\t\tconst modelUri = uri.file('/myfolder/myfile.js');\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [{ lineNumber: 5, enabled: true, condition: 'x > 5' }, { lineNumber: 10, enabled: false }]);\n\t\tconst breakpoints = model.getBreakpoints();\n\t\tconst session = createMockSession(model);\n\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\n\t\tassert.strictEqual(breakpoints[0].lineNumber, 5);\n\t\tassert.strictEqual(breakpoints[1].lineNumber, 10);\n\n\t\tdata.set(breakpoints[0].getId(), { verified: false, line: 10 });\n\t\tdata.set(breakpoints[1].getId(), { verified: true, line: 50 });\n\t\tmodel.setBreakpointSessionData(session.getId(), {}, data);\n\t\tassert.strictEqual(breakpoints[0].lineNumber, 5);\n\t\tassert.strictEqual(breakpoints[1].lineNumber, 50);\n\n\t\tconst session2 = createMockSession(model);\n\t\tconst data2 = new Map<string, DebugProtocol.Breakpoint>();\n\t\tdata2.set(breakpoints[0].getId(), { verified: true, line: 100 });\n\t\tdata2.set(breakpoints[1].getId(), { verified: true, line: 500 });\n\t\tmodel.setBreakpointSessionData(session2.getId(), {}, data2);\n\n\t\t// Breakpoint is verified only once, show that line\n\t\tassert.strictEqual(breakpoints[0].lineNumber, 100);\n\t\t// Breakpoint is verified two times, show the original line\n\t\tassert.strictEqual(breakpoints[1].lineNumber, 10);\n\n\t\tmodel.setBreakpointSessionData(session.getId(), {}, undefined);\n\t\t// No more double session verification\n\t\tassert.strictEqual(breakpoints[0].lineNumber, 100);\n\t\tassert.strictEqual(breakpoints[1].lineNumber, 500);\n\n\t\tassert.strictEqual(breakpoints[0].supported, false);\n\t\tconst data3 = new Map<string, DebugProtocol.Breakpoint>();\n\t\tdata3.set(breakpoints[0].getId(), { verified: true, line: 500 });\n\t\tmodel.setBreakpointSessionData(session2.getId(), { supportsConditionalBreakpoints: true }, data2);\n\t\tassert.strictEqual(breakpoints[0].supported, true);\n\t});\n\n\ttest('exception breakpoints', () => {\n\t\tlet eventCount = 0;\n\t\tmodel.onDidChangeBreakpoints(() => eventCount++);\n\t\tmodel.setExceptionBreakpoints([{ filter: 'uncaught', label: 'UNCAUGHT', default: true }]);\n\t\tassert.strictEqual(eventCount, 1);\n\t\tlet exceptionBreakpoints = model.getExceptionBreakpoints();\n\t\tassert.strictEqual(exceptionBreakpoints.length, 1);\n\t\tassert.strictEqual(exceptionBreakpoints[0].filter, 'uncaught');\n\t\tassert.strictEqual(exceptionBreakpoints[0].enabled, true);\n\n\t\tmodel.setExceptionBreakpoints([{ filter: 'uncaught', label: 'UNCAUGHT' }, { filter: 'caught', label: 'CAUGHT' }]);\n\t\tassert.strictEqual(eventCount, 2);\n\t\texceptionBreakpoints = model.getExceptionBreakpoints();\n\t\tassert.strictEqual(exceptionBreakpoints.length, 2);\n\t\tassert.strictEqual(exceptionBreakpoints[0].filter, 'uncaught');\n\t\tassert.strictEqual(exceptionBreakpoints[0].enabled, true);\n\t\tassert.strictEqual(exceptionBreakpoints[1].filter, 'caught');\n\t\tassert.strictEqual(exceptionBreakpoints[1].label, 'CAUGHT');\n\t\tassert.strictEqual(exceptionBreakpoints[1].enabled, false);\n\t});\n\n\ttest('data breakpoints', () => {\n\t\tlet eventCount = 0;\n\t\tmodel.onDidChangeBreakpoints(() => eventCount++);\n\n\t\tmodel.addDataBreakpoint('label', 'id', true, ['read'], 'read');\n\t\tmodel.addDataBreakpoint('second', 'secondId', false, ['readWrite'], 'readWrite');\n\t\tconst dataBreakpoints = model.getDataBreakpoints();\n\t\tassert.strictEqual(dataBreakpoints[0].canPersist, true);\n\t\tassert.strictEqual(dataBreakpoints[0].dataId, 'id');\n\t\tassert.strictEqual(dataBreakpoints[0].accessType, 'read');\n\t\tassert.strictEqual(dataBreakpoints[1].canPersist, false);\n\t\tassert.strictEqual(dataBreakpoints[1].description, 'second');\n\t\tassert.strictEqual(dataBreakpoints[1].accessType, 'readWrite');\n\n\t\tassert.strictEqual(eventCount, 2);\n\n\t\tmodel.removeDataBreakpoints(dataBreakpoints[0].getId());\n\t\tassert.strictEqual(eventCount, 3);\n\t\tassert.strictEqual(model.getDataBreakpoints().length, 1);\n\n\t\tmodel.removeDataBreakpoints();\n\t\tassert.strictEqual(model.getDataBreakpoints().length, 0);\n\t\tassert.strictEqual(eventCount, 4);\n\t});\n\n\ttest('message and class name', () => {\n\t\tconst modelUri = uri.file('/myfolder/my file first.js');\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [\n\t\t\t{ lineNumber: 5, enabled: true, condition: 'x > 5' },\n\t\t\t{ lineNumber: 10, enabled: false },\n\t\t\t{ lineNumber: 12, enabled: true, logMessage: 'hello' },\n\t\t\t{ lineNumber: 15, enabled: true, hitCondition: '12' },\n\t\t\t{ lineNumber: 500, enabled: true },\n\t\t]);\n\t\tconst breakpoints = model.getBreakpoints();\n\n\t\tlet result = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[0]);\n\t\tassert.strictEqual(result.message, 'Expression condition: x > 5');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-conditional');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[1]);\n\t\tassert.strictEqual(result.message, 'Disabled Breakpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-disabled');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[2]);\n\t\tassert.strictEqual(result.message, 'Log Message: hello');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-log');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[3]);\n\t\tassert.strictEqual(result.message, 'Hit Count: 12');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-conditional');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[4]);\n\t\tassert.strictEqual(result.message, 'Breakpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, false, breakpoints[2]);\n\t\tassert.strictEqual(result.message, 'Disabled Logpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-log-disabled');\n\n\t\tmodel.addDataBreakpoint('label', 'id', true, ['read'], 'read');\n\t\tconst dataBreakpoints = model.getDataBreakpoints();\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, dataBreakpoints[0]);\n\t\tassert.strictEqual(result.message, 'Data Breakpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-data');\n\n\t\tconst functionBreakpoint = model.addFunctionBreakpoint('foo', '1');\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, functionBreakpoint);\n\t\tassert.strictEqual(result.message, 'Function Breakpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-function');\n\n\t\tconst data = new Map<string, DebugProtocol.Breakpoint>();\n\t\tdata.set(breakpoints[0].getId(), { verified: false, line: 10 });\n\t\tdata.set(breakpoints[1].getId(), { verified: true, line: 50 });\n\t\tdata.set(breakpoints[2].getId(), { verified: true, line: 50, message: 'world' });\n\t\tdata.set(functionBreakpoint.getId(), { verified: true });\n\t\tmodel.setBreakpointSessionData('mocksessionid', { supportsFunctionBreakpoints: false, supportsDataBreakpoints: true, supportsLogPoints: true }, data);\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[0]);\n\t\tassert.strictEqual(result.message, 'Unverified Breakpoint');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-unverified');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, functionBreakpoint);\n\t\tassert.strictEqual(result.message, 'Function breakpoints not supported by this debug type');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-function-unverified');\n\n\t\tresult = getBreakpointMessageAndIcon(State.Stopped, true, breakpoints[2]);\n\t\tassert.strictEqual(result.message, 'Log Message: hello, world');\n\t\tassert.strictEqual(result.icon.id, 'debug-breakpoint-log');\n\t});\n\n\ttest('decorations', () => {\n\t\tconst modelUri = uri.file('/myfolder/my file first.js');\n\t\tconst languageIdentifier = new LanguageIdentifier('testMode', LanguageId.PlainText);\n\t\tconst textModel = createTextModel(\n\t\t\t['this is line one', 'this is line two', '    this is line three it has whitespace at start', 'this is line four', 'this is line five'].join('\\n'),\n\t\t\tTextModel.DEFAULT_CREATION_OPTIONS,\n\t\t\tlanguageIdentifier\n\t\t);\n\t\taddBreakpointsAndCheckEvents(model, modelUri, [\n\t\t\t{ lineNumber: 1, enabled: true, condition: 'x > 5' },\n\t\t\t{ lineNumber: 2, column: 4, enabled: false },\n\t\t\t{ lineNumber: 3, enabled: true, logMessage: 'hello' },\n\t\t\t{ lineNumber: 500, enabled: true },\n\t\t]);\n\t\tconst breakpoints = model.getBreakpoints();\n\n\t\tlet decorations = createBreakpointDecorations(textModel, breakpoints, State.Running, true, true);\n\t\tassert.strictEqual(decorations.length, 3); // last breakpoint filtered out since it has a large line number\n\t\tassert.deepStrictEqual(decorations[0].range, new Range(1, 1, 1, 2));\n\t\tassert.deepStrictEqual(decorations[1].range, new Range(2, 4, 2, 5));\n\t\tassert.deepStrictEqual(decorations[2].range, new Range(3, 5, 3, 6));\n\t\tassert.strictEqual(decorations[0].options.beforeContentClassName, undefined);\n\t\tassert.strictEqual(decorations[1].options.beforeContentClassName, `debug-breakpoint-placeholder`);\n\t\tassert.strictEqual(decorations[0].options.overviewRuler?.position, OverviewRulerLane.Left);\n\t\tconst expected = new MarkdownString().appendCodeblock(languageIdentifier.language, 'Expression condition: x > 5');\n\t\tassert.deepStrictEqual(decorations[0].options.glyphMarginHoverMessage, expected);\n\n\t\tdecorations = createBreakpointDecorations(textModel, breakpoints, State.Running, true, false);\n\t\tassert.strictEqual(decorations[0].options.overviewRuler, null);\n\t});\n});\n"]}