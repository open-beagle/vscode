{"version":3,"file":"callStack.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/debug/test/browser/callStack.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DebugModel, StackFrame, Thread } from 'vs/workbench/contrib/debug/common/debugModel';\nimport * as sinon from 'sinon';\nimport { MockRawSession, createMockDebugModel, mockUriIdentityService } from 'vs/workbench/contrib/debug/test/browser/mockDebug';\nimport { Source } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { DebugSession } from 'vs/workbench/contrib/debug/browser/debugSession';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IDebugSessionOptions, State, IDebugService } from 'vs/workbench/contrib/debug/common/debug';\nimport { createDecorationsForStackFrame } from 'vs/workbench/contrib/debug/browser/callStackEditorContribution';\nimport { Constants } from 'vs/base/common/uint';\nimport { getContext, getContextForContributedActions, getSpecificSourceName } from 'vs/workbench/contrib/debug/browser/callStackView';\nimport { getStackFrameThreadAndSessionToFocus } from 'vs/workbench/contrib/debug/browser/debugService';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { debugStackframe, debugStackframeFocused } from 'vs/workbench/contrib/debug/browser/debugIcons';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\n\nconst mockWorkspaceContextService = {\n\tgetWorkspace: () => {\n\t\treturn {\n\t\t\tfolders: []\n\t\t};\n\t}\n} as any;\n\nexport function createMockSession(model: DebugModel, name = 'mockSession', options?: IDebugSessionOptions): DebugSession {\n\treturn new DebugSession(generateUuid(), { resolved: { name, type: 'node', request: 'launch' }, unresolved: undefined }, undefined!, model, options, {\n\t\tgetViewModel(): any {\n\t\t\treturn {\n\t\t\t\tupdateViews(): void {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} as IDebugService, undefined!, undefined!, new TestConfigurationService({ debug: { console: { collapseIdenticalLines: true } } }), undefined!, mockWorkspaceContextService, undefined!, undefined!, undefined!, mockUriIdentityService, new TestInstantiationService(), undefined!);\n}\n\nfunction createTwoStackFrames(session: DebugSession): { firstStackFrame: StackFrame, secondStackFrame: StackFrame } {\n\tlet firstStackFrame: StackFrame;\n\tlet secondStackFrame: StackFrame;\n\tconst thread = new class extends Thread {\n\t\tpublic override getCallStack(): StackFrame[] {\n\t\t\treturn [firstStackFrame, secondStackFrame];\n\t\t}\n\t}(session, 'mockthread', 1);\n\n\tconst firstSource = new Source({\n\t\tname: 'internalModule.js',\n\t\tpath: 'a/b/c/d/internalModule.js',\n\t\tsourceReference: 10,\n\t}, 'aDebugSessionId', mockUriIdentityService);\n\tconst secondSource = new Source({\n\t\tname: 'internalModule.js',\n\t\tpath: 'z/x/c/d/internalModule.js',\n\t\tsourceReference: 11,\n\t}, 'aDebugSessionId', mockUriIdentityService);\n\n\tfirstStackFrame = new StackFrame(thread, 0, firstSource, 'app.js', 'normal', { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 10 }, 0, true);\n\tsecondStackFrame = new StackFrame(thread, 1, secondSource, 'app2.js', 'normal', { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 10 }, 1, true);\n\n\treturn { firstStackFrame, secondStackFrame };\n}\n\nsuite('Debug - CallStack', () => {\n\tlet model: DebugModel;\n\tlet rawSession: MockRawSession;\n\n\tsetup(() => {\n\t\tmodel = createMockDebugModel();\n\t\trawSession = new MockRawSession();\n\t});\n\n\t// Threads\n\n\ttest('threads simple', () => {\n\t\tconst threadId = 1;\n\t\tconst threadName = 'firstThread';\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\n\t\tassert.strictEqual(model.getSessions(true).length, 1);\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: threadId,\n\t\t\t\tname: threadName\n\t\t\t}]\n\t\t});\n\n\t\tassert.strictEqual(session.getThread(threadId)!.name, threadName);\n\n\t\tmodel.clearThreads(session.getId(), true);\n\t\tassert.strictEqual(session.getThread(threadId), undefined);\n\t\tassert.strictEqual(model.getSessions(true).length, 1);\n\t});\n\n\ttest('threads multiple wtih allThreadsStopped', async () => {\n\t\tconst threadId1 = 1;\n\t\tconst threadName1 = 'firstThread';\n\t\tconst threadId2 = 2;\n\t\tconst threadName2 = 'secondThread';\n\t\tconst stoppedReason = 'breakpoint';\n\n\t\t// Add the threads\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\n\t\tsession['raw'] = <any>rawSession;\n\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: threadId1,\n\t\t\t\tname: threadName1\n\t\t\t}]\n\t\t});\n\n\t\t// Stopped event with all threads stopped\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: threadId1,\n\t\t\t\tname: threadName1\n\t\t\t}, {\n\t\t\t\tid: threadId2,\n\t\t\t\tname: threadName2\n\t\t\t}],\n\t\t\tstoppedDetails: {\n\t\t\t\treason: stoppedReason,\n\t\t\t\tthreadId: 1,\n\t\t\t\tallThreadsStopped: true\n\t\t\t},\n\t\t});\n\n\t\tconst thread1 = session.getThread(threadId1)!;\n\t\tconst thread2 = session.getThread(threadId2)!;\n\n\t\t// at the beginning, callstacks are obtainable but not available\n\t\tassert.strictEqual(session.getAllThreads().length, 2);\n\t\tassert.strictEqual(thread1.name, threadName1);\n\t\tassert.strictEqual(thread1.stopped, true);\n\t\tassert.strictEqual(thread1.getCallStack().length, 0);\n\t\tassert.strictEqual(thread1.stoppedDetails!.reason, stoppedReason);\n\t\tassert.strictEqual(thread2.name, threadName2);\n\t\tassert.strictEqual(thread2.stopped, true);\n\t\tassert.strictEqual(thread2.getCallStack().length, 0);\n\t\tassert.strictEqual(thread2.stoppedDetails!.reason, undefined);\n\n\t\t// after calling getCallStack, the callstack becomes available\n\t\t// and results in a request for the callstack in the debug adapter\n\t\tawait thread1.fetchCallStack();\n\t\tassert.notStrictEqual(thread1.getCallStack().length, 0);\n\n\t\tawait thread2.fetchCallStack();\n\t\tassert.notStrictEqual(thread2.getCallStack().length, 0);\n\n\t\t// calling multiple times getCallStack doesn't result in multiple calls\n\t\t// to the debug adapter\n\t\tawait thread1.fetchCallStack();\n\t\tawait thread2.fetchCallStack();\n\n\t\t// clearing the callstack results in the callstack not being available\n\t\tthread1.clearCallStack();\n\t\tassert.strictEqual(thread1.stopped, true);\n\t\tassert.strictEqual(thread1.getCallStack().length, 0);\n\n\t\tthread2.clearCallStack();\n\t\tassert.strictEqual(thread2.stopped, true);\n\t\tassert.strictEqual(thread2.getCallStack().length, 0);\n\n\t\tmodel.clearThreads(session.getId(), true);\n\t\tassert.strictEqual(session.getThread(threadId1), undefined);\n\t\tassert.strictEqual(session.getThread(threadId2), undefined);\n\t\tassert.strictEqual(session.getAllThreads().length, 0);\n\t});\n\n\ttest('threads mutltiple without allThreadsStopped', async () => {\n\t\tconst sessionStub = sinon.spy(rawSession, 'stackTrace');\n\n\t\tconst stoppedThreadId = 1;\n\t\tconst stoppedThreadName = 'stoppedThread';\n\t\tconst runningThreadId = 2;\n\t\tconst runningThreadName = 'runningThread';\n\t\tconst stoppedReason = 'breakpoint';\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\n\t\tsession['raw'] = <any>rawSession;\n\n\t\t// Add the threads\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: stoppedThreadId,\n\t\t\t\tname: stoppedThreadName\n\t\t\t}]\n\t\t});\n\n\t\t// Stopped event with only one thread stopped\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: 1,\n\t\t\t\tname: stoppedThreadName\n\t\t\t}, {\n\t\t\t\tid: runningThreadId,\n\t\t\t\tname: runningThreadName\n\t\t\t}],\n\t\t\tstoppedDetails: {\n\t\t\t\treason: stoppedReason,\n\t\t\t\tthreadId: 1,\n\t\t\t\tallThreadsStopped: false\n\t\t\t}\n\t\t});\n\n\t\tconst stoppedThread = session.getThread(stoppedThreadId)!;\n\t\tconst runningThread = session.getThread(runningThreadId)!;\n\n\t\t// the callstack for the stopped thread is obtainable but not available\n\t\t// the callstack for the running thread is not obtainable nor available\n\t\tassert.strictEqual(stoppedThread.name, stoppedThreadName);\n\t\tassert.strictEqual(stoppedThread.stopped, true);\n\t\tassert.strictEqual(session.getAllThreads().length, 2);\n\t\tassert.strictEqual(stoppedThread.getCallStack().length, 0);\n\t\tassert.strictEqual(stoppedThread.stoppedDetails!.reason, stoppedReason);\n\t\tassert.strictEqual(runningThread.name, runningThreadName);\n\t\tassert.strictEqual(runningThread.stopped, false);\n\t\tassert.strictEqual(runningThread.getCallStack().length, 0);\n\t\tassert.strictEqual(runningThread.stoppedDetails, undefined);\n\n\t\t// after calling getCallStack, the callstack becomes available\n\t\t// and results in a request for the callstack in the debug adapter\n\t\tawait stoppedThread.fetchCallStack();\n\t\tassert.notStrictEqual(stoppedThread.getCallStack().length, 0);\n\t\tassert.strictEqual(runningThread.getCallStack().length, 0);\n\t\tassert.strictEqual(sessionStub.callCount, 1);\n\n\t\t// calling getCallStack on the running thread returns empty array\n\t\t// and does not return in a request for the callstack in the debug\n\t\t// adapter\n\t\tawait runningThread.fetchCallStack();\n\t\tassert.strictEqual(runningThread.getCallStack().length, 0);\n\t\tassert.strictEqual(sessionStub.callCount, 1);\n\n\t\t// clearing the callstack results in the callstack not being available\n\t\tstoppedThread.clearCallStack();\n\t\tassert.strictEqual(stoppedThread.stopped, true);\n\t\tassert.strictEqual(stoppedThread.getCallStack().length, 0);\n\n\t\tmodel.clearThreads(session.getId(), true);\n\t\tassert.strictEqual(session.getThread(stoppedThreadId), undefined);\n\t\tassert.strictEqual(session.getThread(runningThreadId), undefined);\n\t\tassert.strictEqual(session.getAllThreads().length, 0);\n\t});\n\n\ttest('stack frame get specific source name', () => {\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\t\tconst { firstStackFrame, secondStackFrame } = createTwoStackFrames(session);\n\n\t\tassert.strictEqual(getSpecificSourceName(firstStackFrame), '.../b/c/d/internalModule.js');\n\t\tassert.strictEqual(getSpecificSourceName(secondStackFrame), '.../x/c/d/internalModule.js');\n\t});\n\n\ttest('stack frame toString()', () => {\n\t\tconst session = createMockSession(model);\n\t\tconst thread = new Thread(session, 'mockthread', 1);\n\t\tconst firstSource = new Source({\n\t\t\tname: 'internalModule.js',\n\t\t\tpath: 'a/b/c/d/internalModule.js',\n\t\t\tsourceReference: 10,\n\t\t}, 'aDebugSessionId', mockUriIdentityService);\n\t\tconst stackFrame = new StackFrame(thread, 1, firstSource, 'app', 'normal', { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 10 }, 1, true);\n\t\tassert.strictEqual(stackFrame.toString(), 'app (internalModule.js:1)');\n\n\t\tconst secondSource = new Source(undefined, 'aDebugSessionId', mockUriIdentityService);\n\t\tconst stackFrame2 = new StackFrame(thread, 2, secondSource, 'module', 'normal', { startLineNumber: undefined!, startColumn: undefined!, endLineNumber: undefined!, endColumn: undefined! }, 2, true);\n\t\tassert.strictEqual(stackFrame2.toString(), 'module');\n\t});\n\n\ttest('debug child sessions are added in correct order', () => {\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\t\tconst secondSession = createMockSession(model, 'mockSession2');\n\t\tmodel.addSession(secondSession);\n\t\tconst firstChild = createMockSession(model, 'firstChild', { parentSession: session });\n\t\tmodel.addSession(firstChild);\n\t\tconst secondChild = createMockSession(model, 'secondChild', { parentSession: session });\n\t\tmodel.addSession(secondChild);\n\t\tconst thirdSession = createMockSession(model, 'mockSession3');\n\t\tmodel.addSession(thirdSession);\n\t\tconst anotherChild = createMockSession(model, 'secondChild', { parentSession: secondSession });\n\t\tmodel.addSession(anotherChild);\n\n\t\tconst sessions = model.getSessions();\n\t\tassert.strictEqual(sessions[0].getId(), session.getId());\n\t\tassert.strictEqual(sessions[1].getId(), firstChild.getId());\n\t\tassert.strictEqual(sessions[2].getId(), secondChild.getId());\n\t\tassert.strictEqual(sessions[3].getId(), secondSession.getId());\n\t\tassert.strictEqual(sessions[4].getId(), anotherChild.getId());\n\t\tassert.strictEqual(sessions[5].getId(), thirdSession.getId());\n\t});\n\n\ttest('decorations', () => {\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\t\tconst { firstStackFrame, secondStackFrame } = createTwoStackFrames(session);\n\t\tlet decorations = createDecorationsForStackFrame(firstStackFrame, true);\n\t\tassert.strictEqual(decorations.length, 3);\n\t\tassert.deepStrictEqual(decorations[0].range, new Range(1, 2, 1, 3));\n\t\tassert.strictEqual(decorations[0].options.glyphMarginClassName, ThemeIcon.asClassName(debugStackframe));\n\t\tassert.deepStrictEqual(decorations[1].range, new Range(1, 2, 1, Constants.MAX_SAFE_SMALL_INTEGER));\n\t\tassert.strictEqual(decorations[1].options.className, 'debug-top-stack-frame-line');\n\t\tassert.strictEqual(decorations[1].options.isWholeLine, true);\n\n\t\tdecorations = createDecorationsForStackFrame(secondStackFrame, true);\n\t\tassert.strictEqual(decorations.length, 2);\n\t\tassert.deepStrictEqual(decorations[0].range, new Range(1, 2, 1, 3));\n\t\tassert.strictEqual(decorations[0].options.glyphMarginClassName, ThemeIcon.asClassName(debugStackframeFocused));\n\t\tassert.deepStrictEqual(decorations[1].range, new Range(1, 2, 1, Constants.MAX_SAFE_SMALL_INTEGER));\n\t\tassert.strictEqual(decorations[1].options.className, 'debug-focused-stack-frame-line');\n\t\tassert.strictEqual(decorations[1].options.isWholeLine, true);\n\n\t\tdecorations = createDecorationsForStackFrame(firstStackFrame, true);\n\t\tassert.strictEqual(decorations.length, 3);\n\t\tassert.deepStrictEqual(decorations[0].range, new Range(1, 2, 1, 3));\n\t\tassert.strictEqual(decorations[0].options.glyphMarginClassName, ThemeIcon.asClassName(debugStackframe));\n\t\tassert.deepStrictEqual(decorations[1].range, new Range(1, 2, 1, Constants.MAX_SAFE_SMALL_INTEGER));\n\t\tassert.strictEqual(decorations[1].options.className, 'debug-top-stack-frame-line');\n\t\tassert.strictEqual(decorations[1].options.isWholeLine, true);\n\t\t// Inline decoration gets rendered in this case\n\t\tassert.strictEqual(decorations[2].options.beforeContentClassName, 'debug-top-stack-frame-column');\n\t\tassert.deepStrictEqual(decorations[2].range, new Range(1, 2, 1, Constants.MAX_SAFE_SMALL_INTEGER));\n\t});\n\n\ttest('contexts', () => {\n\t\tconst session = createMockSession(model);\n\t\tmodel.addSession(session);\n\t\tconst { firstStackFrame, secondStackFrame } = createTwoStackFrames(session);\n\t\tlet context = getContext(firstStackFrame);\n\t\tassert.strictEqual(context.sessionId, firstStackFrame.thread.session.getId());\n\t\tassert.strictEqual(context.threadId, firstStackFrame.thread.getId());\n\t\tassert.strictEqual(context.frameId, firstStackFrame.getId());\n\n\t\tcontext = getContext(secondStackFrame.thread);\n\t\tassert.strictEqual(context.sessionId, secondStackFrame.thread.session.getId());\n\t\tassert.strictEqual(context.threadId, secondStackFrame.thread.getId());\n\t\tassert.strictEqual(context.frameId, undefined);\n\n\t\tcontext = getContext(session);\n\t\tassert.strictEqual(context.sessionId, session.getId());\n\t\tassert.strictEqual(context.threadId, undefined);\n\t\tassert.strictEqual(context.frameId, undefined);\n\n\t\tlet contributedContext = getContextForContributedActions(firstStackFrame);\n\t\tassert.strictEqual(contributedContext, firstStackFrame.source.raw.path);\n\t\tcontributedContext = getContextForContributedActions(firstStackFrame.thread);\n\t\tassert.strictEqual(contributedContext, firstStackFrame.thread.threadId);\n\t\tcontributedContext = getContextForContributedActions(session);\n\t\tassert.strictEqual(contributedContext, session.getId());\n\t});\n\n\ttest('focusStackFrameThreadAndSesion', () => {\n\t\tconst threadId1 = 1;\n\t\tconst threadName1 = 'firstThread';\n\t\tconst threadId2 = 2;\n\t\tconst threadName2 = 'secondThread';\n\t\tconst stoppedReason = 'breakpoint';\n\n\t\t// Add the threads\n\t\tconst session = new class extends DebugSession {\n\t\t\toverride get state(): State {\n\t\t\t\treturn State.Stopped;\n\t\t\t}\n\t\t}(generateUuid(), { resolved: { name: 'stoppedSession', type: 'node', request: 'launch' }, unresolved: undefined }, undefined!, model, undefined, undefined!, undefined!, undefined!, undefined!, undefined!, mockWorkspaceContextService, undefined!, undefined!, undefined!, mockUriIdentityService, new TestInstantiationService(), undefined!);\n\n\t\tconst runningSession = createMockSession(model);\n\t\tmodel.addSession(runningSession);\n\t\tmodel.addSession(session);\n\n\t\tsession['raw'] = <any>rawSession;\n\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: threadId1,\n\t\t\t\tname: threadName1\n\t\t\t}]\n\t\t});\n\n\t\t// Stopped event with all threads stopped\n\t\tmodel.rawUpdate({\n\t\t\tsessionId: session.getId(),\n\t\t\tthreads: [{\n\t\t\t\tid: threadId1,\n\t\t\t\tname: threadName1\n\t\t\t}, {\n\t\t\t\tid: threadId2,\n\t\t\t\tname: threadName2\n\t\t\t}],\n\t\t\tstoppedDetails: {\n\t\t\t\treason: stoppedReason,\n\t\t\t\tthreadId: 1,\n\t\t\t\tallThreadsStopped: true\n\t\t\t},\n\t\t});\n\n\t\tconst thread = session.getThread(threadId1)!;\n\t\tconst runningThread = session.getThread(threadId2);\n\n\t\tlet toFocus = getStackFrameThreadAndSessionToFocus(model, undefined);\n\t\t// Verify stopped session and stopped thread get focused\n\t\tassert.deepStrictEqual(toFocus, { stackFrame: undefined, thread: thread, session: session });\n\n\t\ttoFocus = getStackFrameThreadAndSessionToFocus(model, undefined, undefined, runningSession);\n\t\tassert.deepStrictEqual(toFocus, { stackFrame: undefined, thread: undefined, session: runningSession });\n\n\t\ttoFocus = getStackFrameThreadAndSessionToFocus(model, undefined, thread);\n\t\tassert.deepStrictEqual(toFocus, { stackFrame: undefined, thread: thread, session: session });\n\n\t\ttoFocus = getStackFrameThreadAndSessionToFocus(model, undefined, runningThread);\n\t\tassert.deepStrictEqual(toFocus, { stackFrame: undefined, thread: runningThread, session: session });\n\n\t\tconst stackFrame = new StackFrame(thread, 5, undefined!, 'stackframename2', undefined, undefined!, 1, true);\n\t\ttoFocus = getStackFrameThreadAndSessionToFocus(model, stackFrame);\n\t\tassert.deepStrictEqual(toFocus, { stackFrame: stackFrame, thread: thread, session: session });\n\t});\n});\n"]}