{"version":3,"file":"util.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/scm/browser/util.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ISCMResource, ISCMRepository, ISCMResourceGroup, ISCMInput } from 'vs/workbench/contrib/scm/common/scm';\nimport { IMenu } from 'vs/platform/actions/common/actions';\nimport { ActionBar, IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IDisposable, Disposable, combinedDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { createActionViewItem, createAndFillInActionBarActions, createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { equals } from 'vs/base/common/arrays';\nimport { ActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { Command } from 'vs/editor/common/modes';\nimport { reset } from 'vs/base/browser/dom';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport function isSCMRepository(element: any): element is ISCMRepository {\n\treturn !!(element as ISCMRepository).provider && !!(element as ISCMRepository).input;\n}\n\nexport function isSCMInput(element: any): element is ISCMInput {\n\treturn !!(element as ISCMInput).validateInput && typeof (element as ISCMInput).value === 'string';\n}\n\nexport function isSCMResourceGroup(element: any): element is ISCMResourceGroup {\n\treturn !!(element as ISCMResourceGroup).provider && !!(element as ISCMResourceGroup).elements;\n}\n\nexport function isSCMResource(element: any): element is ISCMResource {\n\treturn !!(element as ISCMResource).sourceUri && isSCMResourceGroup((element as ISCMResource).resourceGroup);\n}\n\nconst compareActions = (a: IAction, b: IAction) => a.id === b.id;\n\nexport function connectPrimaryMenu(menu: IMenu, callback: (primary: IAction[], secondary: IAction[]) => void, primaryGroup?: string): IDisposable {\n\tlet cachedDisposable: IDisposable = Disposable.None;\n\tlet cachedPrimary: IAction[] = [];\n\tlet cachedSecondary: IAction[] = [];\n\n\tconst updateActions = () => {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\n\t\tconst disposable = createAndFillInActionBarActions(menu, { shouldForwardArgs: true }, { primary, secondary }, primaryGroup);\n\n\t\tif (equals(cachedPrimary, primary, compareActions) && equals(cachedSecondary, secondary, compareActions)) {\n\t\t\tdisposable.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tcachedDisposable = disposable;\n\t\tcachedPrimary = primary;\n\t\tcachedSecondary = secondary;\n\n\t\tcallback(primary, secondary);\n\t};\n\n\tupdateActions();\n\n\treturn combinedDisposable(\n\t\tmenu.onDidChange(updateActions),\n\t\ttoDisposable(() => cachedDisposable.dispose())\n\t);\n}\n\nexport function connectPrimaryMenuToInlineActionBar(menu: IMenu, actionBar: ActionBar): IDisposable {\n\treturn connectPrimaryMenu(menu, (primary) => {\n\t\tactionBar.clear();\n\t\tactionBar.push(primary, { icon: true, label: false });\n\t}, 'inline');\n}\n\nexport function collectContextMenuActions(menu: IMenu): [IAction[], IDisposable] {\n\tconst primary: IAction[] = [];\n\tconst actions: IAction[] = [];\n\tconst disposable = createAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, { primary, secondary: actions }, 'inline');\n\treturn [actions, disposable];\n}\n\nexport class StatusBarAction extends Action {\n\n\tconstructor(\n\t\tprivate command: Command,\n\t\tprivate commandService: ICommandService\n\t) {\n\t\tsuper(`statusbaraction{${command.id}}`, command.title, '', true);\n\t\tthis.tooltip = command.tooltip || '';\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.commandService.executeCommand(this.command.id, ...(this.command.arguments || []));\n\t}\n}\n\nclass StatusBarActionViewItem extends ActionViewItem {\n\n\tconstructor(action: StatusBarAction) {\n\t\tsuper(null, action, {});\n\t}\n\n\toverride updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\treset(this.label, ...renderLabelWithIcons(this.getAction().label));\n\t\t}\n\t}\n}\n\nexport function getActionViewItemProvider(instaService: IInstantiationService): IActionViewItemProvider {\n\treturn action => {\n\t\tif (action instanceof StatusBarAction) {\n\t\t\treturn new StatusBarActionViewItem(action);\n\t\t}\n\n\t\treturn createActionViewItem(instaService, action);\n\t};\n}\n"]}