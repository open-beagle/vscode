{"version":3,"sources":["vs/workbench/contrib/scm/browser/activity.ts"],"names":[],"mappings":"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","file":"activity.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { basename } from 'vs/base/common/resources';\nimport { IDisposable, dispose, Disposable, DisposableStore, combinedDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { VIEW_PANE_ID, ISCMService, ISCMRepository, ISCMViewService } from 'vs/workbench/contrib/scm/common/scm';\nimport { IActivityService, NumberBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IStatusbarService, StatusbarAlignment as MainThreadStatusBarAlignment } from 'vs/workbench/services/statusbar/common/statusbar';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { stripIcons } from 'vs/base/common/iconLabels';\n\nfunction getCount(repository: ISCMRepository): number {\n\tif (typeof repository.provider.count === 'number') {\n\t\treturn repository.provider.count;\n\t} else {\n\t\treturn repository.provider.groups.elements.reduce<number>((r, g) => r + g.elements.length, 0);\n\t}\n}\n\nexport class SCMStatusController implements IWorkbenchContribution {\n\n\tprivate statusBarDisposable: IDisposable = Disposable.None;\n\tprivate focusDisposable: IDisposable = Disposable.None;\n\tprivate focusedRepository: ISCMRepository | undefined = undefined;\n\tprivate readonly badgeDisposable = new MutableDisposable<IDisposable>();\n\tprivate disposables = new DisposableStore();\n\tprivate repositoryDisposables = new Set<IDisposable>();\n\n\tconstructor(\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IContextKeyService readonly contextKeyService: IContextKeyService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tthis.scmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\t\tthis.scmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\n\t\tconst onDidChangeSCMCountBadge = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.countBadge'));\n\t\tonDidChangeSCMCountBadge(this.renderActivityCount, this, this.disposables);\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tthis.onDidAddRepository(repository);\n\t\t}\n\n\t\tthis.scmViewService.onDidFocusRepository(this.focusRepository, this, this.disposables);\n\t\tthis.focusRepository(this.scmViewService.focusedRepository);\n\n\t\teditorService.onDidActiveEditorChange(this.tryFocusRepositoryBasedOnActiveEditor, this, this.disposables);\n\t\tthis.renderActivityCount();\n\t}\n\n\tprivate tryFocusRepositoryBasedOnActiveEditor(): boolean {\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor);\n\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet bestRepository: ISCMRepository | null = null;\n\t\tlet bestMatchLength = Number.POSITIVE_INFINITY;\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tconst root = repository.provider.rootUri;\n\n\t\t\tif (!root) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst path = this.uriIdentityService.extUri.relativePath(root, resource);\n\n\t\t\tif (path && !/^\\.\\./.test(path) && path.length < bestMatchLength) {\n\t\t\t\tbestRepository = repository;\n\t\t\t\tbestMatchLength = path.length;\n\t\t\t}\n\t\t}\n\n\t\tif (!bestRepository) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.focusRepository(bestRepository);\n\t\treturn true;\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst onDidChange = Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n\t\tconst changeDisposable = onDidChange(() => this.renderActivityCount());\n\n\t\tconst onDidRemove = Event.filter(this.scmService.onDidRemoveRepository, e => e === repository);\n\t\tconst removeDisposable = onDidRemove(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis.repositoryDisposables.delete(disposable);\n\t\t\tthis.renderActivityCount();\n\t\t});\n\n\t\tconst disposable = combinedDisposable(changeDisposable, removeDisposable);\n\t\tthis.repositoryDisposables.add(disposable);\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tif (this.focusedRepository !== repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusRepository(this.scmService.repositories[0]);\n\t}\n\n\tprivate focusRepository(repository: ISCMRepository | undefined): void {\n\t\tif (this.focusedRepository === repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusDisposable.dispose();\n\t\tthis.focusedRepository = repository;\n\n\t\tif (repository && repository.provider.onDidChangeStatusBarCommands) {\n\t\t\tthis.focusDisposable = repository.provider.onDidChangeStatusBarCommands(() => this.renderStatusBar(repository));\n\t\t}\n\n\t\tthis.renderStatusBar(repository);\n\t\tthis.renderActivityCount();\n\t}\n\n\tprivate renderStatusBar(repository: ISCMRepository | undefined): void {\n\t\tthis.statusBarDisposable.dispose();\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commands = repository.provider.statusBarCommands || [];\n\t\tconst label = repository.provider.rootUri\n\t\t\t? `${basename(repository.provider.rootUri)} (${repository.provider.label})`\n\t\t\t: repository.provider.label;\n\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const command of commands) {\n\t\t\tconst tooltip = `${label}${command.tooltip ? ` - ${command.tooltip}` : ''}`;\n\n\t\t\tlet ariaLabel = stripIcons(command.title).trim();\n\t\t\tariaLabel = ariaLabel ? `${ariaLabel}, ${label}` : label;\n\n\t\t\tdisposables.add(this.statusbarService.addEntry({\n\t\t\t\ttext: command.title,\n\t\t\t\tariaLabel: `${ariaLabel}${command.tooltip ? ` - ${command.tooltip}` : ''}`,\n\t\t\t\ttooltip,\n\t\t\t\tcommand: command.id ? command : undefined\n\t\t\t}, 'status.scm', localize('status.scm', \"Source Control\"), MainThreadStatusBarAlignment.LEFT, 10000));\n\t\t}\n\n\t\tthis.statusBarDisposable = disposables;\n\t}\n\n\tprivate renderActivityCount(): void {\n\t\tconst countBadgeType = this.configurationService.getValue<'all' | 'focused' | 'off'>('scm.countBadge');\n\n\t\tlet count = 0;\n\n\t\tif (countBadgeType === 'all') {\n\t\t\tcount = this.scmService.repositories.reduce((r, repository) => r + getCount(repository), 0);\n\t\t} else if (countBadgeType === 'focused' && this.focusedRepository) {\n\t\t\tcount = getCount(this.focusedRepository);\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tconst badge = new NumberBadge(count, num => localize('scmPendingChangesBadge', '{0} pending changes', num));\n\t\t\tthis.badgeDisposable.value = this.activityService.showViewActivity(VIEW_PANE_ID, { badge, clazz: 'scm-viewlet-label' });\n\t\t} else {\n\t\t\tthis.badgeDisposable.value = undefined;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.focusDisposable.dispose();\n\t\tthis.statusBarDisposable.dispose();\n\t\tthis.badgeDisposable.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t\tdispose(this.repositoryDisposables.values());\n\t\tthis.repositoryDisposables.clear();\n\t}\n}\n"]}