{"version":3,"sources":["vs/workbench/contrib/scm/browser/scm.contribution.ts"],"names":[],"mappings":"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","file":"scm.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { DirtyDiffWorkbenchController } from './dirtydiffDecorator';\nimport { VIEWLET_ID, ISCMRepository, ISCMService, VIEW_PANE_ID, ISCMProvider, ISCMViewService, REPOSITORIES_VIEW_PANE_ID } from 'vs/workbench/contrib/scm/common/scm';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { SCMStatusController } from './activity';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { SCMService } from 'vs/workbench/contrib/scm/common/scmService';\nimport { IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry } from 'vs/workbench/common/views';\nimport { SCMViewPaneContainer } from 'vs/workbench/contrib/scm/browser/scmViewPaneContainer';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ModesRegistry } from 'vs/editor/common/modes/modesRegistry';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { SCMViewPane } from 'vs/workbench/contrib/scm/browser/scmViewPane';\nimport { SCMViewService } from 'vs/workbench/contrib/scm/browser/scmViewService';\nimport { SCMRepositoriesViewPane } from 'vs/workbench/contrib/scm/browser/scmRepositoriesViewPane';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Context as SuggestContext } from 'vs/editor/contrib/suggest/suggest';\n\nModesRegistry.registerLanguage({\n\tid: 'scminput',\n\textensions: [],\n\tmimetypes: ['text/x-scm-input']\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(DirtyDiffWorkbenchController, LifecyclePhase.Restored);\n\nconst sourceControlViewIcon = registerIcon('source-control-view-icon', Codicon.sourceControl, localize('sourceControlViewIcon', 'View icon of the Source Control view.'));\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: localize('source control', \"Source Control\"),\n\tctorDescriptor: new SyncDescriptor(SCMViewPaneContainer),\n\tstorageId: 'workbench.scm.views.state',\n\ticon: sourceControlViewIcon,\n\talwaysUseContainerInfo: true,\n\torder: 2,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Sidebar, { donotRegisterOpenCommand: true });\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize('no open repo', \"No source control providers registered.\"),\n\twhen: 'default'\n});\n\nviewsRegistry.registerViews([{\n\tid: VIEW_PANE_ID,\n\tname: localize('source control', \"Source Control\"),\n\tctorDescriptor: new SyncDescriptor(SCMViewPane),\n\tcanToggleVisibility: true,\n\tworkspace: true,\n\tcanMoveView: true,\n\tweight: 80,\n\torder: -999,\n\tcontainerIcon: sourceControlViewIcon,\n\topenCommandActionDescriptor: {\n\t\tid: viewContainer.id,\n\t\tmnemonicTitle: localize({ key: 'miViewSCM', comment: ['&& denotes a mnemonic'] }, \"S&&CM\"),\n\t\tkeybindings: {\n\t\t\tprimary: 0,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_G },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_G },\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_G },\n\t\t},\n\t\torder: 2,\n\t}\n}], viewContainer);\n\nviewsRegistry.registerViews([{\n\tid: REPOSITORIES_VIEW_PANE_ID,\n\tname: localize('source control repositories', \"Source Control Repositories\"),\n\tctorDescriptor: new SyncDescriptor(SCMRepositoriesViewPane),\n\tcanToggleVisibility: true,\n\thideByDefault: true,\n\tworkspace: true,\n\tcanMoveView: true,\n\tweight: 20,\n\torder: -1000,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scm.providerCount'), ContextKeyExpr.notEquals('scm.providerCount', 0)),\n\t// readonly when = ContextKeyExpr.or(ContextKeyExpr.equals('config.scm.alwaysShowProviders', true), ContextKeyExpr.and(ContextKeyExpr.notEquals('scm.providerCount', 0), ContextKeyExpr.notEquals('scm.providerCount', 1)));\n\tcontainerIcon: sourceControlViewIcon\n}], viewContainer);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(SCMStatusController, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'scm',\n\torder: 5,\n\ttitle: localize('scmConfigurationTitle', \"SCM\"),\n\ttype: 'object',\n\tscope: ConfigurationScope.RESOURCE,\n\tproperties: {\n\t\t'scm.diffDecorations': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'gutter', 'overview', 'minimap', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorations.all', \"Show the diff decorations in all available locations.\"),\n\t\t\t\tlocalize('scm.diffDecorations.gutter', \"Show the diff decorations only in the editor gutter.\"),\n\t\t\t\tlocalize('scm.diffDecorations.overviewRuler', \"Show the diff decorations only in the overview ruler.\"),\n\t\t\t\tlocalize('scm.diffDecorations.minimap', \"Show the diff decorations only in the minimap.\"),\n\t\t\t\tlocalize('scm.diffDecorations.none', \"Do not show the diff decorations.\")\n\t\t\t],\n\t\t\tdefault: 'all',\n\t\t\tdescription: localize('diffDecorations', \"Controls diff decorations in the editor.\")\n\t\t},\n\t\t'scm.diffDecorationsGutterWidth': {\n\t\t\ttype: 'number',\n\t\t\tenum: [1, 2, 3, 4, 5],\n\t\t\tdefault: 3,\n\t\t\tdescription: localize('diffGutterWidth', \"Controls the width(px) of diff decorations in gutter (added & modified).\")\n\t\t},\n\t\t'scm.diffDecorationsGutterVisibility': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['always', 'hover'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.always', \"Show the diff decorator in the gutter at all times.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.hover', \"Show the diff decorator in the gutter only on hover.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterVisibility', \"Controls the visibility of the Source Control diff decorator in the gutter.\"),\n\t\t\tdefault: 'always'\n\t\t},\n\t\t'scm.diffDecorationsGutterAction': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['diff', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.diff', \"Show the inline diff peek view on click.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.none', \"Do nothing.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterAction', \"Controls the behavior of Source Control diff gutter decorations.\"),\n\t\t\tdefault: 'diff'\n\t\t},\n\t\t'scm.alwaysShowActions': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('alwaysShowActions', \"Controls whether inline actions are always visible in the Source Control view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.countBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'focused', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.countBadge.all', \"Show the sum of all Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.countBadge.focused', \"Show the count badge of the focused Source Control Provider.\"),\n\t\t\t\tlocalize('scm.countBadge.off', \"Disable the Source Control count badge.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.countBadge', \"Controls the count badge on the Source Control icon on the Activity Bar.\"),\n\t\t\tdefault: 'all'\n\t\t},\n\t\t'scm.providerCountBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['hidden', 'auto', 'visible'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.providerCountBadge.hidden', \"Hide Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.auto', \"Only show count badge for Source Control Provider when non-zero.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.visible', \"Show Source Control Provider count badges.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.providerCountBadge', \"Controls the count badges on Source Control Provider headers. These headers only appear when there is more than one provider.\"),\n\t\t\tdefault: 'hidden'\n\t\t},\n\t\t'scm.defaultViewMode': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['tree', 'list'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.defaultViewMode.tree', \"Show the repository changes as a tree.\"),\n\t\t\t\tlocalize('scm.defaultViewMode.list', \"Show the repository changes as a list.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.defaultViewMode', \"Controls the default Source Control repository view mode.\"),\n\t\t\tdefault: 'list'\n\t\t},\n\t\t'scm.autoReveal': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('autoReveal', \"Controls whether the SCM view should automatically reveal and select files when opening them.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.inputFontFamily': {\n\t\t\ttype: 'string',\n\t\t\tmarkdownDescription: localize('inputFontFamily', \"Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.\"),\n\t\t\tdefault: 'default'\n\t\t},\n\t\t'scm.inputFontSize': {\n\t\t\ttype: 'number',\n\t\t\tmarkdownDescription: localize('inputFontSize', \"Controls the font size for the input message in pixels.\"),\n\t\t\tdefault: 13\n\t\t},\n\t\t'scm.alwaysShowRepositories': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('alwaysShowRepository', \"Controls whether repositories should always be visible in the SCM view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.repositories.visible': {\n\t\t\ttype: 'number',\n\t\t\tdescription: localize('providersVisible', \"Controls how many repositories are visible in the Source Control Repositories section. Set to `0` to be able to manually resize the view.\"),\n\t\t\tdefault: 10\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'scm.acceptInput',\n\tdescription: { description: localize('scm accept', \"SCM: Accept Input\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\thandler: accessor => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repository = context.getValue<ISCMRepository>('scmRepository');\n\n\t\tif (!repository || !repository.provider.acceptInputCommand) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst id = repository.provider.acceptInputCommand.id;\n\t\tconst args = repository.provider.acceptInputCommand.arguments;\n\n\t\tconst commandService = accessor.get(ICommandService);\n\t\treturn commandService.executeCommand(id, ...(args || []));\n\t}\n});\n\nconst viewNextCommitCommand = {\n\tdescription: { description: localize('scm view next commit', \"SCM: View Next Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repository = context.getValue<ISCMRepository>('scmRepository');\n\t\trepository?.input.showNextHistoryValue();\n\t}\n};\n\nconst viewPreviousCommitCommand = {\n\tdescription: { description: localize('scm view previous commit', \"SCM: View Previous Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repository = context.getValue<ISCMRepository>('scmRepository');\n\t\trepository?.input.showPreviousHistoryValue();\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.viewNextCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInLastPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.viewPreviousCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInFirstPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.UpArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.forceViewNextCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.forceViewPreviousCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.UpArrow\n});\n\nCommandsRegistry.registerCommand('scm.openInTerminal', async (accessor, provider: ISCMProvider) => {\n\tif (!provider || !provider.rootUri) {\n\t\treturn;\n\t}\n\n\tconst commandService = accessor.get(ICommandService);\n\tawait commandService.executeCommand('openInTerminal', provider.rootUri);\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: '100_end',\n\tcommand: {\n\t\tid: 'scm.openInTerminal',\n\t\ttitle: localize('open in terminal', \"Open In Terminal\")\n\t},\n\twhen: ContextKeyExpr.equals('scmProviderHasRootUri', true)\n});\n\nregisterSingleton(ISCMService, SCMService);\nregisterSingleton(ISCMViewService, SCMViewService);\n"]}