{"version":3,"file":"scmRepositoryRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/scm/browser/scmRepositoryRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/scm';\nimport { IDisposable, Disposable, DisposableStore, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { append, $ } from 'vs/base/browser/dom';\nimport { ISCMRepository, ISCMViewService } from 'vs/workbench/contrib/scm/common/scm';\nimport { CountBadge } from 'vs/base/browser/ui/countBadge/countBadge';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IAction } from 'vs/base/common/actions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { connectPrimaryMenu, isSCMRepository, StatusBarAction } from './util';\nimport { attachBadgeStyler } from 'vs/platform/theme/common/styler';\nimport { ITreeNode } from 'vs/base/browser/ui/tree/tree';\nimport { ICompressibleTreeRenderer } from 'vs/base/browser/ui/tree/objectTree';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { ToolBar } from 'vs/base/browser/ui/toolbar/toolbar';\nimport { IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { basename } from 'vs/base/common/resources';\nimport { IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\n\ninterface RepositoryTemplate {\n\treadonly label: HTMLElement;\n\treadonly name: HTMLElement;\n\treadonly description: HTMLElement;\n\treadonly countContainer: HTMLElement;\n\treadonly count: CountBadge;\n\treadonly toolBar: ToolBar;\n\tdisposable: IDisposable;\n\treadonly templateDisposable: IDisposable;\n}\n\nexport class RepositoryRenderer implements ICompressibleTreeRenderer<ISCMRepository, FuzzyScore, RepositoryTemplate>, IListRenderer<ISCMRepository, RepositoryTemplate> {\n\n\tstatic readonly TEMPLATE_ID = 'repository';\n\tget templateId(): string { return RepositoryRenderer.TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\t@ISCMViewService private scmViewService: ISCMViewService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService,\n\t\t@IThemeService private themeService: IThemeService,\n\t\t@IWorkspaceContextService private workspaceContextService: IWorkspaceContextService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): RepositoryTemplate {\n\t\t// hack\n\t\tif (container.classList.contains('monaco-tl-contents')) {\n\t\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-twistie');\n\t\t}\n\n\t\tconst provider = append(container, $('.scm-provider'));\n\t\tconst label = append(provider, $('.label'));\n\t\tconst name = append(label, $('span.name'));\n\t\tconst description = append(label, $('span.description'));\n\t\tconst actions = append(provider, $('.actions'));\n\t\tconst toolBar = new ToolBar(actions, this.contextMenuService, { actionViewItemProvider: this.actionViewItemProvider });\n\t\tconst countContainer = append(provider, $('.count'));\n\t\tconst count = new CountBadge(countContainer);\n\t\tconst badgeStyler = attachBadgeStyler(count, this.themeService);\n\t\tconst visibilityDisposable = toolBar.onDidChangeDropdownVisibility(e => provider.classList.toggle('active', e));\n\n\t\tconst disposable = Disposable.None;\n\t\tconst templateDisposable = combinedDisposable(visibilityDisposable, toolBar, badgeStyler);\n\n\t\treturn { label, name, description, countContainer, count, toolBar, disposable, templateDisposable };\n\t}\n\n\trenderElement(arg: ISCMRepository | ITreeNode<ISCMRepository, FuzzyScore>, index: number, templateData: RepositoryTemplate, height: number | undefined): void {\n\t\ttemplateData.disposable.dispose();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst repository = isSCMRepository(arg) ? arg : arg.element;\n\n\t\tif (repository.provider.rootUri) {\n\t\t\tconst folder = this.workspaceContextService.getWorkspaceFolder(repository.provider.rootUri);\n\n\t\t\tif (folder?.uri.toString() === repository.provider.rootUri.toString()) {\n\t\t\t\ttemplateData.name.textContent = folder.name;\n\t\t\t} else {\n\t\t\t\ttemplateData.name.textContent = basename(repository.provider.rootUri);\n\t\t\t}\n\n\t\t\ttemplateData.label.title = `${repository.provider.label}: ${repository.provider.rootUri.fsPath}`;\n\t\t\ttemplateData.description.textContent = repository.provider.label;\n\t\t} else {\n\t\t\ttemplateData.label.title = repository.provider.label;\n\t\t\ttemplateData.name.textContent = repository.provider.label;\n\t\t\ttemplateData.description.textContent = '';\n\t\t}\n\n\t\tlet statusPrimaryActions: IAction[] = [];\n\t\tlet menuPrimaryActions: IAction[] = [];\n\t\tlet menuSecondaryActions: IAction[] = [];\n\t\tconst updateToolbar = () => {\n\t\t\ttemplateData.toolBar.setActions([...statusPrimaryActions, ...menuPrimaryActions], menuSecondaryActions);\n\t\t};\n\n\t\tconst onDidChangeProvider = () => {\n\t\t\tconst commands = repository.provider.statusBarCommands || [];\n\t\t\tstatusPrimaryActions = commands.map(c => new StatusBarAction(c, this.commandService));\n\t\t\tupdateToolbar();\n\n\t\t\tconst count = repository.provider.count || 0;\n\t\t\ttemplateData.countContainer.setAttribute('data-count', String(count));\n\t\t\ttemplateData.count.setCount(count);\n\t\t};\n\t\tdisposables.add(repository.provider.onDidChange(onDidChangeProvider, null));\n\t\tonDidChangeProvider();\n\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(repository.provider);\n\t\tdisposables.add(connectPrimaryMenu(menus.titleMenu.menu, (primary, secondary) => {\n\t\t\tmenuPrimaryActions = primary;\n\t\t\tmenuSecondaryActions = secondary;\n\t\t\tupdateToolbar();\n\t\t}));\n\t\ttemplateData.toolBar.context = repository.provider;\n\n\t\ttemplateData.disposable = disposables;\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error('Should never happen since node is incompressible');\n\t}\n\n\tdisposeElement(group: ISCMRepository | ITreeNode<ISCMRepository, FuzzyScore>, index: number, template: RepositoryTemplate): void {\n\t\ttemplate.disposable.dispose();\n\t}\n\n\tdisposeTemplate(templateData: RepositoryTemplate): void {\n\t\ttemplateData.disposable.dispose();\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n"]}