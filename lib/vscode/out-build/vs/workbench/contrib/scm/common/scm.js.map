{"version":3,"file":"scm.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/scm/common/scm.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWnF,QAAA,UAAU,GAAG,oBAAoB,CAAC;IAClC,QAAA,YAAY,GAAG,eAAe,CAAC;IAC/B,QAAA,yBAAyB,GAAG,4BAA4B,CAAC;IAMzD,QAAA,WAAW,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAc,KAAK,CAAC,CAAC;IAiD/D,IAAkB,mBAIjB;IAJD,WAAkB,mBAAmB;QACpC,+DAAS,CAAA;QACT,mEAAW,CAAA;QACX,2EAAe,CAAA;IAChB,CAAC,EAJiB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAIpC;IAWD,IAAY,oBAGX;IAHD,WAAY,oBAAoB;QAC/B,qFAAe,CAAA;QACf,6EAAW,CAAA;IACZ,CAAC,EAHW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAG/B;IAmEY,QAAA,eAAe,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAkB,SAAS,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Command } from 'vs/editor/common/modes';\nimport { ISequence } from 'vs/base/common/sequence';\nimport { IAction } from 'vs/base/common/actions';\nimport { IMenu } from 'vs/platform/actions/common/actions';\n\nexport const VIEWLET_ID = 'workbench.view.scm';\nexport const VIEW_PANE_ID = 'workbench.scm';\nexport const REPOSITORIES_VIEW_PANE_ID = 'workbench.scm.repositories';\n\nexport interface IBaselineResourceProvider {\n\tgetBaselineResource(resource: URI): Promise<URI>;\n}\n\nexport const ISCMService = createDecorator<ISCMService>('scm');\n\nexport interface ISCMResourceDecorations {\n\ticon?: URI;\n\ticonDark?: URI;\n\ttooltip?: string;\n\tstrikeThrough?: boolean;\n\tfaded?: boolean;\n}\n\nexport interface ISCMResource {\n\treadonly resourceGroup: ISCMResourceGroup;\n\treadonly sourceUri: URI;\n\treadonly decorations: ISCMResourceDecorations;\n\treadonly contextValue: string | undefined;\n\treadonly command: Command | undefined;\n\topen(preserveFocus: boolean): Promise<void>;\n}\n\nexport interface ISCMResourceGroup extends ISequence<ISCMResource> {\n\treadonly provider: ISCMProvider;\n\treadonly label: string;\n\treadonly id: string;\n\treadonly hideWhenEmpty: boolean;\n\treadonly onDidChange: Event<void>;\n}\n\nexport interface ISCMProvider extends IDisposable {\n\treadonly label: string;\n\treadonly id: string;\n\treadonly contextValue: string;\n\n\treadonly groups: ISequence<ISCMResourceGroup>;\n\n\t// TODO@Joao: remove\n\treadonly onDidChangeResources: Event<void>;\n\n\treadonly rootUri?: URI;\n\treadonly count?: number;\n\treadonly commitTemplate: string;\n\treadonly onDidChangeCommitTemplate: Event<string>;\n\treadonly onDidChangeStatusBarCommands?: Event<Command[]>;\n\treadonly acceptInputCommand?: Command;\n\treadonly statusBarCommands?: Command[];\n\treadonly onDidChange: Event<void>;\n\n\tgetOriginalResource(uri: URI): Promise<URI | null>;\n}\n\nexport const enum InputValidationType {\n\tError = 0,\n\tWarning = 1,\n\tInformation = 2\n}\n\nexport interface IInputValidation {\n\tmessage: string;\n\ttype: InputValidationType;\n}\n\nexport interface IInputValidator {\n\t(value: string, cursorPosition: number): Promise<IInputValidation | undefined>;\n}\n\nexport enum SCMInputChangeReason {\n\tHistoryPrevious,\n\tHistoryNext\n}\n\nexport interface ISCMInputChangeEvent {\n\treadonly value: string;\n\treadonly reason?: SCMInputChangeReason;\n}\n\nexport interface ISCMInput {\n\treadonly repository: ISCMRepository;\n\n\treadonly value: string;\n\tsetValue(value: string, fromKeyboard: boolean): void;\n\treadonly onDidChange: Event<ISCMInputChangeEvent>;\n\n\tplaceholder: string;\n\treadonly onDidChangePlaceholder: Event<string>;\n\n\tvalidateInput: IInputValidator;\n\treadonly onDidChangeValidateInput: Event<void>;\n\n\tvisible: boolean;\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\tsetFocus(): void;\n\treadonly onDidChangeFocus: Event<void>;\n\n\tshowValidationMessage(message: string, type: InputValidationType): void;\n\treadonly onDidChangeValidationMessage: Event<IInputValidation>;\n\n\tshowNextHistoryValue(): void;\n\tshowPreviousHistoryValue(): void;\n}\n\nexport interface ISCMRepository extends IDisposable {\n\treadonly provider: ISCMProvider;\n\treadonly input: ISCMInput;\n}\n\nexport interface ISCMService {\n\n\treadonly _serviceBrand: undefined;\n\treadonly onDidAddRepository: Event<ISCMRepository>;\n\treadonly onDidRemoveRepository: Event<ISCMRepository>;\n\treadonly repositories: ISCMRepository[];\n\n\tregisterSCMProvider(provider: ISCMProvider): ISCMRepository;\n}\n\nexport interface ISCMTitleMenu {\n\treadonly actions: IAction[];\n\treadonly secondaryActions: IAction[];\n\treadonly onDidChangeTitle: Event<void>;\n\treadonly menu: IMenu;\n}\n\nexport interface ISCMRepositoryMenus {\n\treadonly titleMenu: ISCMTitleMenu;\n\treadonly repositoryMenu: IMenu;\n\tgetResourceGroupMenu(group: ISCMResourceGroup): IMenu;\n\tgetResourceMenu(resource: ISCMResource): IMenu;\n\tgetResourceFolderMenu(group: ISCMResourceGroup): IMenu;\n}\n\nexport interface ISCMMenus {\n\tgetRepositoryMenus(provider: ISCMProvider): ISCMRepositoryMenus;\n}\n\nexport const ISCMViewService = createDecorator<ISCMViewService>('scmView');\n\nexport interface ISCMViewVisibleRepositoryChangeEvent {\n\treadonly added: Iterable<ISCMRepository>;\n\treadonly removed: Iterable<ISCMRepository>;\n}\n\nexport interface ISCMViewService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly menus: ISCMMenus;\n\n\tvisibleRepositories: ISCMRepository[];\n\treadonly onDidChangeVisibleRepositories: Event<ISCMViewVisibleRepositoryChangeEvent>;\n\n\tisVisible(repository: ISCMRepository): boolean;\n\ttoggleVisibility(repository: ISCMRepository, visible?: boolean): void;\n\n\treadonly focusedRepository: ISCMRepository | undefined;\n\treadonly onDidFocusRepository: Event<ISCMRepository | undefined>;\n\tfocus(repository: ISCMRepository): void;\n}\n"]}