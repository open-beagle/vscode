{"version":3,"file":"menuPreventer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/codeEditor/browser/menuPreventer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG;;OAEG;IACH,MAAa,aAAc,SAAQ,sBAAU;QAQ5C,YAAY,MAAmB;YAC9B,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,iEAAiE;YACjE,iEAAiE;YACjE,wDAAwD;YAExD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC7C,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAC/B;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC3C,IAAI,CAAC,CAAC,MAAM,eAAY,EAAE;oBACzB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;wBAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;qBAChC;oBACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAC/B;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,CAAC,MAAM,eAAY,EAAE;oBACzB,IAAI,IAAI,CAAC,kBAAkB,EAAE;wBAC5B,CAAC,CAAC,cAAc,EAAE,CAAC;qBACnB;oBACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBAChC;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;;IA1CF,sCA2CC;IAzCuB,gBAAE,GAAG,8BAA8B,CAAC;IA2C5D,CAAA,GAAA,6CAA0B,CAAA,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\n\n/**\n * Prevents the top-level menu from showing up when doing Alt + Click in the editor\n */\nexport class MenuPreventer extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.menuPreventer';\n\n\tprivate _editor: ICodeEditor;\n\tprivate _altListeningMouse: boolean;\n\tprivate _altMouseTriggered: boolean;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._altListeningMouse = false;\n\t\tthis._altMouseTriggered = false;\n\n\t\t// A global crossover handler to prevent menu bar from showing up\n\t\t// When <alt> is hold, we will listen to mouse events and prevent\n\t\t// the release event up <alt> if the mouse is triggered.\n\n\t\tthis._register(this._editor.onMouseDown((e) => {\n\t\t\tif (this._altListeningMouse) {\n\t\t\t\tthis._altMouseTriggered = true;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._editor.onKeyDown((e) => {\n\t\t\tif (e.equals(KeyMod.Alt)) {\n\t\t\t\tif (!this._altListeningMouse) {\n\t\t\t\t\tthis._altMouseTriggered = false;\n\t\t\t\t}\n\t\t\t\tthis._altListeningMouse = true;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._editor.onKeyUp((e) => {\n\t\t\tif (e.equals(KeyMod.Alt)) {\n\t\t\t\tif (this._altMouseTriggered) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tthis._altListeningMouse = false;\n\t\t\t\tthis._altMouseTriggered = false;\n\t\t\t}\n\t\t}));\n\t}\n}\n\nregisterEditorContribution(MenuPreventer.ID, MenuPreventer);\n"]}