{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/accessibility/accessibility.ts"],"names":[],"mappings":"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","file":"accessibility.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./accessibility';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { renderFormattedText } from 'vs/base/browser/formattedTextRenderer';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, registerEditorContribution, registerEditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { IEditorOptions, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ToggleTabFocusModeAction } from 'vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { contrastBorder, editorWidgetBackground, widgetShadow, editorWidgetForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { NEW_UNTITLED_FILE_COMMAND_ID } from 'vs/workbench/contrib/files/browser/fileCommands';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\n\nconst CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE = new RawContextKey<boolean>('accessibilityHelpWidgetVisible', false);\n\nexport class AccessibilityHelpController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.accessibilityHelpController';\n\n\tpublic static get(editor: ICodeEditor): AccessibilityHelpController {\n\t\treturn editor.getContribution<AccessibilityHelpController>(AccessibilityHelpController.ID);\n\t}\n\n\tprivate _editor: ICodeEditor;\n\tprivate _widget: AccessibilityHelpWidget;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\t\tthis._widget = this._register(instantiationService.createInstance(AccessibilityHelpWidget, this._editor));\n\t}\n\n\tpublic show(): void {\n\t\tthis._widget.show();\n\t}\n\n\tpublic hide(): void {\n\t\tthis._widget.hide();\n\t}\n}\n\nclass AccessibilityHelpWidget extends Widget implements IOverlayWidget {\n\n\tprivate static readonly ID = 'editor.contrib.accessibilityHelpWidget';\n\tprivate static readonly WIDTH = 500;\n\tprivate static readonly HEIGHT = 300;\n\n\tprivate _editor: ICodeEditor;\n\tprivate _domNode: FastDomNode<HTMLElement>;\n\tprivate _contentDomNode: FastDomNode<HTMLElement>;\n\tprivate _isVisible: boolean;\n\tprivate _isVisibleKey: IContextKey<boolean>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService\n\t) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\t\tthis._isVisibleKey = CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE.bindTo(this._contextKeyService);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setClassName('accessibilityHelpWidget');\n\t\tthis._domNode.setWidth(AccessibilityHelpWidget.WIDTH);\n\t\tthis._domNode.setHeight(AccessibilityHelpWidget.HEIGHT);\n\t\tthis._domNode.setDisplay('none');\n\t\tthis._domNode.setAttribute('role', 'dialog');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._contentDomNode = createFastDomNode(document.createElement('div'));\n\t\tthis._contentDomNode.setAttribute('role', 'document');\n\t\tthis._domNode.appendChild(this._contentDomNode);\n\n\t\tthis._isVisible = false;\n\n\t\tthis._register(this._editor.onDidLayoutChange(() => {\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis._layout();\n\t\t\t}\n\t\t}));\n\n\t\t// Intentionally not configurable!\n\t\tthis._register(dom.addStandardDisposableListener(this._contentDomNode.domNode, 'keydown', (e) => {\n\t\t\tif (!this._isVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.equals(KeyMod.CtrlCmd | KeyCode.KEY_E)) {\n\t\t\t\talert(nls.localize('emergencyConfOn', \"Now changing the setting `editor.accessibilitySupport` to 'on'.\"));\n\n\t\t\t\tthis._configurationService.updateValue('editor.accessibilitySupport', 'on');\n\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\tif (e.equals(KeyMod.CtrlCmd | KeyCode.KEY_H)) {\n\t\t\t\talert(nls.localize('openingDocs', \"Now opening the VS Code Accessibility documentation page.\"));\n\n\t\t\t\tthis._openerService.open(URI.parse('https://go.microsoft.com/fwlink/?linkid=851010'));\n\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\tthis.onblur(this._contentDomNode.domNode, () => {\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getId(): string {\n\t\treturn AccessibilityHelpWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: null\n\t\t};\n\t}\n\n\tpublic show(): void {\n\t\tif (this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = true;\n\t\tthis._isVisibleKey.set(true);\n\t\tthis._layout();\n\t\tthis._domNode.setDisplay('block');\n\t\tthis._domNode.setAttribute('aria-hidden', 'false');\n\t\tthis._contentDomNode.domNode.tabIndex = 0;\n\t\tthis._buildContent();\n\t\tthis._contentDomNode.domNode.focus();\n\t}\n\n\tprivate _descriptionForCommand(commandId: string, msg: string, noKbMsg: string): string {\n\t\tlet kb = this._keybindingService.lookupKeybinding(commandId);\n\t\tif (kb) {\n\t\t\treturn strings.format(msg, kb.getAriaLabel());\n\t\t}\n\t\treturn strings.format(noKbMsg, commandId);\n\t}\n\n\tprivate _buildContent() {\n\t\tconst options = this._editor.getOptions();\n\t\tlet text = nls.localize('introMsg', \"Thank you for trying out VS Code's accessibility options.\");\n\n\t\ttext += '\\n\\n' + nls.localize('status', \"Status:\");\n\n\t\tconst configuredValue = this._configurationService.getValue<IEditorOptions>('editor').accessibilitySupport;\n\t\tconst actualValue = options.get(EditorOption.accessibilitySupport);\n\n\t\tconst emergencyTurnOnMessage = (\n\t\t\tplatform.isMacintosh\n\t\t\t\t? nls.localize('changeConfigToOnMac', \"To configure the editor to be permanently optimized for usage with a Screen Reader press Command+E now.\")\n\t\t\t\t: nls.localize('changeConfigToOnWinLinux', \"To configure the editor to be permanently optimized for usage with a Screen Reader press Control+E now.\")\n\t\t);\n\n\t\tswitch (configuredValue) {\n\t\t\tcase 'auto':\n\t\t\t\tswitch (actualValue) {\n\t\t\t\t\tcase AccessibilitySupport.Unknown:\n\t\t\t\t\t\t// Should never happen in VS Code\n\t\t\t\t\t\ttext += '\\n\\n - ' + nls.localize('auto_unknown', \"The editor is configured to use platform APIs to detect when a Screen Reader is attached, but the current runtime does not support this.\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AccessibilitySupport.Enabled:\n\t\t\t\t\t\ttext += '\\n\\n - ' + nls.localize('auto_on', \"The editor has automatically detected a Screen Reader is attached.\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AccessibilitySupport.Disabled:\n\t\t\t\t\t\ttext += '\\n\\n - ' + nls.localize('auto_off', \"The editor is configured to automatically detect when a Screen Reader is attached, which is not the case at this time.\");\n\t\t\t\t\t\ttext += ' ' + emergencyTurnOnMessage;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'on':\n\t\t\t\ttext += '\\n\\n - ' + nls.localize('configuredOn', \"The editor is configured to be permanently optimized for usage with a Screen Reader - you can change this by editing the setting `editor.accessibilitySupport`.\");\n\t\t\t\tbreak;\n\t\t\tcase 'off':\n\t\t\t\ttext += '\\n\\n - ' + nls.localize('configuredOff', \"The editor is configured to never be optimized for usage with a Screen Reader.\");\n\t\t\t\ttext += ' ' + emergencyTurnOnMessage;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst NLS_TAB_FOCUS_MODE_ON = nls.localize('tabFocusModeOnMsg', \"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.\");\n\t\tconst NLS_TAB_FOCUS_MODE_ON_NO_KB = nls.localize('tabFocusModeOnMsgNoKb', \"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.\");\n\t\tconst NLS_TAB_FOCUS_MODE_OFF = nls.localize('tabFocusModeOffMsg', \"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.\");\n\t\tconst NLS_TAB_FOCUS_MODE_OFF_NO_KB = nls.localize('tabFocusModeOffMsgNoKb', \"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.\");\n\n\t\tif (options.get(EditorOption.tabFocusMode)) {\n\t\t\ttext += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, NLS_TAB_FOCUS_MODE_ON, NLS_TAB_FOCUS_MODE_ON_NO_KB);\n\t\t} else {\n\t\t\ttext += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, NLS_TAB_FOCUS_MODE_OFF, NLS_TAB_FOCUS_MODE_OFF_NO_KB);\n\t\t}\n\n\t\tconst openDocMessage = (\n\t\t\tplatform.isMacintosh\n\t\t\t\t? nls.localize('openDocMac', \"Press Command+H now to open a browser window with more VS Code information related to Accessibility.\")\n\t\t\t\t: nls.localize('openDocWinLinux', \"Press Control+H now to open a browser window with more VS Code information related to Accessibility.\")\n\t\t);\n\n\t\ttext += '\\n\\n' + openDocMessage;\n\n\t\ttext += '\\n\\n' + nls.localize('outroMsg', \"You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.\");\n\n\t\tthis._contentDomNode.domNode.appendChild(renderFormattedText(text));\n\t\t// Per https://www.w3.org/TR/wai-aria/roles#document, Authors SHOULD provide a title or label for documents\n\t\tthis._contentDomNode.domNode.setAttribute('aria-label', text);\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isVisible = false;\n\t\tthis._isVisibleKey.reset();\n\t\tthis._domNode.setDisplay('none');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._contentDomNode.domNode.tabIndex = -1;\n\t\tdom.clearNode(this._contentDomNode.domNode);\n\n\t\tthis._editor.focus();\n\t}\n\n\tprivate _layout(): void {\n\t\tlet editorLayout = this._editor.getLayoutInfo();\n\n\t\tconst width = Math.min(editorLayout.width - 40, AccessibilityHelpWidget.WIDTH);\n\t\tconst height = Math.min(editorLayout.height - 40, AccessibilityHelpWidget.HEIGHT);\n\n\t\tthis._domNode.setTop(Math.round((editorLayout.height - height) / 2));\n\t\tthis._domNode.setLeft(Math.round((editorLayout.width - width) / 2));\n\t\tthis._domNode.setWidth(width);\n\t\tthis._domNode.setHeight(height);\n\t}\n}\n\n// Show Accessibility Help is a workench command so it can also be shown when there is no editor open #108850\nclass ShowAccessibilityHelpAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.showAccessibilityHelp',\n\t\t\ttitle: { value: nls.localize('ShowAccessibilityHelpAction', \"Show Accessibility Help\"), original: 'Show Accessibility Help' },\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F1,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F1,\n\t\t\t\t\tsecondary: [KeyMod.Alt | KeyCode.F1]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst editorService = accessor.get(ICodeEditorService);\n\t\tlet activeEditor = editorService.getActiveCodeEditor();\n\t\tif (!activeEditor) {\n\t\t\tawait commandService.executeCommand(NEW_UNTITLED_FILE_COMMAND_ID);\n\t\t}\n\t\tactiveEditor = editorService.getActiveCodeEditor();\n\n\t\tif (activeEditor) {\n\t\t\tconst controller = AccessibilityHelpController.get(activeEditor);\n\t\t\tif (controller) {\n\t\t\t\tcontroller.show();\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterEditorContribution(AccessibilityHelpController.ID, AccessibilityHelpController);\nregisterAction2(ShowAccessibilityHelpAction);\n\nconst AccessibilityHelpCommand = EditorCommand.bindToContribution<AccessibilityHelpController>(AccessibilityHelpController.get);\n\nregisterEditorCommand(new AccessibilityHelpCommand({\n\tid: 'closeAccessibilityHelp',\n\tprecondition: CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE,\n\thandler: x => x.hide(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 100,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterThemingParticipant((theme, collector) => {\n\tconst widgetBackground = theme.getColor(editorWidgetBackground);\n\tif (widgetBackground) {\n\t\tcollector.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${widgetBackground}; }`);\n\t}\n\n\tconst widgetForeground = theme.getColor(editorWidgetForeground);\n\tif (widgetBackground) {\n\t\tcollector.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${widgetForeground}; }`);\n\t}\n\n\tconst widgetShadowColor = theme.getColor(widgetShadow);\n\tif (widgetShadowColor) {\n\t\tcollector.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${widgetShadowColor}; }`);\n\t}\n\n\tconst hcBorder = theme.getColor(contrastBorder);\n\tif (hcBorder) {\n\t\tcollector.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${hcBorder}; }`);\n\t}\n});\n"]}