{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier.ts"],"names":[],"mappings":"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","file":"toggleMultiCursorModifier.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport * as platform from 'vs/base/common/platform';\nimport { MenuId, MenuRegistry, SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\n\nexport class ToggleMultiCursorModifierAction extends Action {\n\n\tpublic static readonly ID = 'workbench.action.toggleMultiCursorModifier';\n\tpublic static readonly LABEL = nls.localize('toggleLocation', \"Toggle Multi-Cursor Modifier\");\n\n\tprivate static readonly multiCursorModifierConfigurationKey = 'editor.multiCursorModifier';\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\tconst editorConf = this.configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tconst newValue: 'ctrlCmd' | 'alt' = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'alt' : 'ctrlCmd');\n\n\t\treturn this.configurationService.updateValue(ToggleMultiCursorModifierAction.multiCursorModifierConfigurationKey, newValue);\n\t}\n}\n\nconst multiCursorModifier = new RawContextKey<string>('multiCursorModifier', 'altKey');\n\nclass MultiCursorModifierContextKeyController implements IWorkbenchContribution {\n\n\tprivate readonly _multiCursorModifier: IContextKey<string>;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis._multiCursorModifier = multiCursorModifier.bindTo(contextKeyService);\n\n\t\tthis._update();\n\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.multiCursorModifier')) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _update(): void {\n\t\tconst editorConf = this.configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tconst value = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'ctrlCmd' : 'altKey');\n\t\tthis._multiCursorModifier.set(value);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(MultiCursorModifierContextKeyController, LifecyclePhase.Restored);\n\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleMultiCursorModifierAction), 'Toggle Multi-Cursor Modifier');\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n\tgroup: '4_config',\n\tcommand: {\n\t\tid: ToggleMultiCursorModifierAction.ID,\n\t\ttitle: nls.localize('miMultiCursorAlt', \"Switch to Alt+Click for Multi-Cursor\")\n\t},\n\twhen: multiCursorModifier.isEqualTo('ctrlCmd'),\n\torder: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n\tgroup: '4_config',\n\tcommand: {\n\t\tid: ToggleMultiCursorModifierAction.ID,\n\t\ttitle: (\n\t\t\tplatform.isMacintosh\n\t\t\t\t? nls.localize('miMultiCursorCmd', \"Switch to Cmd+Click for Multi-Cursor\")\n\t\t\t\t: nls.localize('miMultiCursorCtrl', \"Switch to Ctrl+Click for Multi-Cursor\")\n\t\t)\n\t},\n\twhen: multiCursorModifier.isEqualTo('altKey'),\n\torder: 1\n});\n"]}