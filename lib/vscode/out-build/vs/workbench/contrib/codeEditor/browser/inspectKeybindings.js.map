{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/inspectKeybindings.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAYhG,MAAM,aAAc,SAAQ,+BAAY;QAEvC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,qCAAqC;gBACzC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgC,EAAE,IAAiC,CAAC;gBACxF,KAAK,EAAE,iCAAiC;gBACxC,YAAY,EAAE,SAAS;aACvB,CAAC,CAAC;QACJ,CAAC;QAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;YACzD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,+BAAkB,CAAC,CAAC;YAC3D,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC;YAEnD,aAAa,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,iBAAiB,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACvG,CAAC;KACD;IAED,CAAA,GAAA,uCAAoB,CAAA,CAAC,aAAa,CAAC,CAAC;IAEpC,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,gBAAM;QAIrC,YACC,EAAU,EACV,KAAa,EACwB,kBAAsC,EAC1C,cAA8B;YAE/D,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAHoB,uBAAkB,GAAlB,kBAAkB,CAAoB;YAC1C,mBAAc,GAAd,cAAc,CAAgB;QAGhE,CAAC;QAEe,GAAG;YAClB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC9H,CAAC;KACD,CAAA;IAfuB,oBAAE,GAAG,yCAAyC,CAAC;IAC/C,uBAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAoC,EAAE,IAA6B,CAAC,CAAC;IAF5G,iBAAiB;QAOpB,WAAA,+BAAkB,CAAA;QAClB,WAAA,8BAAc,CAAA;OARX,iBAAiB,CAgBtB;IAED,MAAM,QAAQ,GAAG,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC,CAAC;IAC1F,QAAQ,CAAC,uBAAuB,CAAC,8BAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,wCAAwC,EAAE,oBAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC","file":"inspectKeybindings.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { CATEGORIES, Extensions as ActionExtensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { Action } from 'vs/base/common/actions';\n\nclass InspectKeyMap extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.inspectKeyMappings',\n\t\t\tlabel: nls.localize('workbench.action.inspectKeyMap', \"Developer: Inspect Key Mappings\"),\n\t\t\talias: 'Developer: Inspect Key Mappings',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\teditorService.openEditor({ contents: keybindingService._dumpDebugInfo(), options: { pinned: true } });\n\t}\n}\n\nregisterEditorAction(InspectKeyMap);\n\nclass InspectKeyMapJSON extends Action {\n\tpublic static readonly ID = 'workbench.action.inspectKeyMappingsJSON';\n\tpublic static readonly LABEL = nls.localize('workbench.action.inspectKeyMapJSON', \"Inspect Key Mappings (JSON)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IEditorService private readonly _editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\treturn this._editorService.openEditor({ contents: this._keybindingService._dumpDebugInfoJSON(), options: { pinned: true } });\n\t}\n}\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(InspectKeyMapJSON), 'Developer: Inspect Key Mappings (JSON)', CATEGORIES.Developer.value);\n"]}