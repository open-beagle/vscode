{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/largeFileOptimizations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWhG;;OAEG;IACH,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,sBAAU;QAI3D,YACkB,OAAoB,EACE,oBAA0C,EACzC,qBAA4C;YAEpF,KAAK,EAAE,CAAC;YAJS,YAAO,GAAP,OAAO,CAAa;YACE,yBAAoB,GAApB,oBAAoB,CAAsB;YACzC,0BAAqB,GAArB,qBAAqB,CAAuB;YAIpF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAE;gBAClD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACtC,IAAI,CAAC,KAAK,EAAE;oBACX,OAAO;iBACP;gBAED,IAAI,KAAK,CAAC,yBAAyB,EAAE,EAAE;oBACtC,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,CAC3B;wBACC,GAAG,EAAE,WAAW;wBAChB,OAAO,EAAE;4BACR,iCAAiC;yBACjC;kDACD,EACD,IAAkJ,EAClJ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAC7B,CAAC;oBAEF,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,uBAAQ,CAAC,IAAI,EAAE,OAAO,EAAE;wBACxD;4BACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAqB,EAAE,IAA4B,CAAC;4BACxE,GAAG,EAAE,GAAG,EAAE;gCACT,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oCACxF,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAA8D,CAAC,CAAC,CAAC;gCAClI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oCACV,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACtC,CAAC,CAAC,CAAC;4BACJ,CAAC;yBACD;qBACD,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,EAAE,6CAA6C,EAAE,EAAE,CAAC,CAAC;iBAC9E;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAA;IA1CuB,+BAAE,GAAG,6CAA6C,CAAC;IAF9D,4BAA4B;QAMtC,WAAA,mCAAoB,CAAA;QACpB,WAAA,qCAAqB,CAAA;OAPX,4BAA4B,CA4CxC;IA5CY,oEAA4B;IA8CzC,CAAA,GAAA,6CAA0B,CAAA,CAAC,4BAA4B,CAAC,EAAE,EAAE,4BAA4B,CAAC,CAAC","file":"largeFileOptimizations.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\n\n/**\n * Shows a message when opening a large file which has been memory optimized (and features disabled).\n */\nexport class LargeFileOptimizationsWarner extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.largeFileOptimizationsWarner';\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._editor.onDidChangeModel((e) => {\n\t\t\tconst model = this._editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (model.isTooLargeForTokenization()) {\n\t\t\t\tconst message = nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'largeFile',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'Variable 0 will be a file name.'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"{0}: tokenization, wrapping and folding have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.\",\n\t\t\t\t\tpath.basename(model.uri.path)\n\t\t\t\t);\n\n\t\t\t\tthis._notificationService.prompt(Severity.Info, message, [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize('removeOptimizations', \"Forcefully Enable Features\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tthis._configurationService.updateValue(`editor.largeFileOptimizations`, false).then(() => {\n\t\t\t\t\t\t\t\tthis._notificationService.info(nls.localize('reopenFilePrompt', \"Please reopen file in order for this setting to take effect.\"));\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tthis._notificationService.error(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t], { neverShowAgain: { id: 'editor.contrib.largeFileOptimizationsWarner' } });\n\t\t\t}\n\t\t}));\n\t}\n}\n\nregisterEditorContribution(LargeFileOptimizationsWarner.ID, LargeFileOptimizationsWarner);\n"]}