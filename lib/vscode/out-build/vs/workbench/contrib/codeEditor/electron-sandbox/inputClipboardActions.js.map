{"version":3,"file":"inputClipboardActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/codeEditor/electron-sandbox/inputClipboardActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,IAAI,QAAQ,CAAC,WAAW,EAAE;QAEzB,yEAAyE;QACzE,6EAA6E;QAC7E,+BAA+B;QAE/B,yCAAmB,CAAC,gCAAgC,CAAC;YACpD,EAAE,EAAE,SAAS;YACb,OAAO,EAAE,mCAA8B;YACvC,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC;YAClC,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,SAAS;SACf,CAAC,CAAC;QACH,yCAAmB,CAAC,gCAAgC,CAAC;YACpD,EAAE,EAAE,UAAU;YACd,OAAO,EAAE,mCAA8B;YACvC,OAAO,EAAE,kBAAkB,CAAC,MAAM,CAAC;YACnC,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,SAAS;SACf,CAAC,CAAC;QACH,yCAAmB,CAAC,gCAAgC,CAAC;YACpD,EAAE,EAAE,WAAW;YACf,OAAO,EAAE,mCAA8B;YACvC,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC;YACpC,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,SAAS;SACf,CAAC,CAAC;QAEH,SAAS,kBAAkB,CAAC,OAAiC;YAC5D,OAAO,GAAG,EAAE;gBACX,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC/B,CAAC,CAAC;QACH,CAAC;KACD","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport * as platform from 'vs/base/common/platform';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\n\nif (platform.isMacintosh) {\n\n\t// On the mac, cmd+x, cmd+c and cmd+v do not result in cut / copy / paste\n\t// We therefore add a basic keybinding rule that invokes document.execCommand\n\t// This is to cover <input>s...\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: 'execCut',\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_X,\n\t\thandler: bindExecuteCommand('cut'),\n\t\tweight: 0,\n\t\twhen: undefined,\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: 'execCopy',\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_C,\n\t\thandler: bindExecuteCommand('copy'),\n\t\tweight: 0,\n\t\twhen: undefined,\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: 'execPaste',\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_V,\n\t\thandler: bindExecuteCommand('paste'),\n\t\tweight: 0,\n\t\twhen: undefined,\n\t});\n\n\tfunction bindExecuteCommand(command: 'cut' | 'copy' | 'paste') {\n\t\treturn () => {\n\t\t\tdocument.execCommand(command);\n\t\t};\n\t}\n}\n"]}