{"version":3,"file":"sleepResumeRepaintMinimap.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/codeEditor/electron-sandbox/sleepResumeRepaintMinimap.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAShG,IAAM,yBAAyB,GAA/B,MAAM,yBAA0B,SAAQ,sBAAU;QAEjD,YACqB,iBAAqC,EACrC,iBAAqC;YAEzD,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,EAAE;gBACnD,iBAAiB,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAA;IAZK,yBAAyB;QAG5B,WAAA,sCAAkB,CAAA;QAClB,WAAA,2BAAkB,CAAA;OAJf,yBAAyB,CAY9B;IAED,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,yBAAyB,qBAA4B,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nclass SleepResumeRepaintMinimap extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(nativeHostService.onDidResumeOS(() => {\n\t\t\tcodeEditorService.listCodeEditors().forEach(editor => editor.render(true));\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(SleepResumeRepaintMinimap, LifecyclePhase.Eventually);\n"]}