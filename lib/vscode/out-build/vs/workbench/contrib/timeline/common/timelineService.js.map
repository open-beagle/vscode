{"version":3,"file":"timelineService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/timeline/common/timelineService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n// import { basename } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITimelineService, TimelineChangeEvent, TimelineOptions, TimelineProvidersChangeEvent, TimelineProvider, InternalTimelineOptions, TimelinePaneId } from './timeline';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const TimelineHasProviderContext = new RawContextKey<boolean>('timelineHasProvider', false);\n\nexport class TimelineService implements ITimelineService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeProviders = new Emitter<TimelineProvidersChangeEvent>();\n\treadonly onDidChangeProviders: Event<TimelineProvidersChangeEvent> = this._onDidChangeProviders.event;\n\n\tprivate readonly _onDidChangeTimeline = new Emitter<TimelineChangeEvent>();\n\treadonly onDidChangeTimeline: Event<TimelineChangeEvent> = this._onDidChangeTimeline.event;\n\tprivate readonly _onDidChangeUri = new Emitter<URI>();\n\treadonly onDidChangeUri: Event<URI> = this._onDidChangeUri.event;\n\n\tprivate readonly hasProviderContext: IContextKey<boolean>;\n\tprivate readonly providers = new Map<string, TimelineProvider>();\n\tprivate readonly providerSubscriptions = new Map<string, IDisposable>();\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IViewsService protected viewsService: IViewsService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IContextKeyService protected contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.hasProviderContext = TimelineHasProviderContext.bindTo(this.contextKeyService);\n\t\tthis.updateHasProviderContext();\n\n\t\t// let source = 'fast-source';\n\t\t// this.registerTimelineProvider({\n\t\t// \tscheme: '*',\n\t\t// \tid: source,\n\t\t// \tlabel: 'Fast Source',\n\t\t// \tprovideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: { cacheResults?: boolean | undefined; }) {\n\t\t// \t\tif (options.cursor === undefined) {\n\t\t// \t\t\treturn Promise.resolve<Timeline>({\n\t\t// \t\t\t\tsource: source,\n\t\t// \t\t\t\titems: [\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|1`,\n\t\t// \t\t\t\t\t\tid: '1',\n\t\t// \t\t\t\t\t\tlabel: 'Fast Timeline1',\n\t\t// \t\t\t\t\t\tdescription: '',\n\t\t// \t\t\t\t\t\ttimestamp: Date.now(),\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t},\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|2`,\n\t\t// \t\t\t\t\t\tid: '2',\n\t\t// \t\t\t\t\t\tlabel: 'Fast Timeline2',\n\t\t// \t\t\t\t\t\tdescription: '',\n\t\t// \t\t\t\t\t\ttimestamp: Date.now() - 3000000000,\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\tpaging: {\n\t\t// \t\t\t\t\tcursor: 'next'\n\t\t// \t\t\t\t}\n\t\t// \t\t\t});\n\t\t// \t\t}\n\t\t// \t\treturn Promise.resolve<Timeline>({\n\t\t// \t\t\tsource: source,\n\t\t// \t\t\titems: [\n\t\t// \t\t\t\t{\n\t\t// \t\t\t\t\thandle: `${source}|3`,\n\t\t// \t\t\t\t\tid: '3',\n\t\t// \t\t\t\t\tlabel: 'Fast Timeline3',\n\t\t// \t\t\t\t\tdescription: '',\n\t\t// \t\t\t\t\ttimestamp: Date.now() - 4000000000,\n\t\t// \t\t\t\t\tsource: source\n\t\t// \t\t\t\t},\n\t\t// \t\t\t\t{\n\t\t// \t\t\t\t\thandle: `${source}|4`,\n\t\t// \t\t\t\t\tid: '4',\n\t\t// \t\t\t\t\tlabel: 'Fast Timeline4',\n\t\t// \t\t\t\t\tdescription: '',\n\t\t// \t\t\t\t\ttimestamp: Date.now() - 300000000000,\n\t\t// \t\t\t\t\tsource: source\n\t\t// \t\t\t\t}\n\t\t// \t\t\t],\n\t\t// \t\t\tpaging: {\n\t\t// \t\t\t\tcursor: undefined\n\t\t// \t\t\t}\n\t\t// \t\t});\n\t\t// \t},\n\t\t// \tdispose() { }\n\t\t// });\n\n\t\t// let source = 'slow-source';\n\t\t// this.registerTimelineProvider({\n\t\t// \tscheme: '*',\n\t\t// \tid: source,\n\t\t// \tlabel: 'Slow Source',\n\t\t// \tprovideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: { cacheResults?: boolean | undefined; }) {\n\t\t// \t\treturn new Promise<Timeline>(resolve => setTimeout(() => {\n\t\t// \t\t\tresolve({\n\t\t// \t\t\t\tsource: source,\n\t\t// \t\t\t\titems: [\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|1`,\n\t\t// \t\t\t\t\t\tid: '1',\n\t\t// \t\t\t\t\t\tlabel: 'Slow Timeline1',\n\t\t// \t\t\t\t\t\tdescription: basename(uri.fsPath),\n\t\t// \t\t\t\t\t\ttimestamp: Date.now(),\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t},\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|2`,\n\t\t// \t\t\t\t\t\tid: '2',\n\t\t// \t\t\t\t\t\tlabel: 'Slow Timeline2',\n\t\t// \t\t\t\t\t\tdescription: basename(uri.fsPath),\n\t\t// \t\t\t\t\t\ttimestamp: new Date(0).getTime(),\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t]\n\t\t// \t\t\t});\n\t\t// \t\t}, 5000));\n\t\t// \t},\n\t\t// \tdispose() { }\n\t\t// });\n\n\t\t// source = 'very-slow-source';\n\t\t// this.registerTimelineProvider({\n\t\t// \tscheme: '*',\n\t\t// \tid: source,\n\t\t// \tlabel: 'Very Slow Source',\n\t\t// \tprovideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: { cacheResults?: boolean | undefined; }) {\n\t\t// \t\treturn new Promise<Timeline>(resolve => setTimeout(() => {\n\t\t// \t\t\tresolve({\n\t\t// \t\t\t\tsource: source,\n\t\t// \t\t\t\titems: [\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|1`,\n\t\t// \t\t\t\t\t\tid: '1',\n\t\t// \t\t\t\t\t\tlabel: 'VERY Slow Timeline1',\n\t\t// \t\t\t\t\t\tdescription: basename(uri.fsPath),\n\t\t// \t\t\t\t\t\ttimestamp: Date.now(),\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t},\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\thandle: `${source}|2`,\n\t\t// \t\t\t\t\t\tid: '2',\n\t\t// \t\t\t\t\t\tlabel: 'VERY Slow Timeline2',\n\t\t// \t\t\t\t\t\tdescription: basename(uri.fsPath),\n\t\t// \t\t\t\t\t\ttimestamp: new Date(0).getTime(),\n\t\t// \t\t\t\t\t\tsource: source\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t]\n\t\t// \t\t\t});\n\t\t// \t\t}, 10000));\n\t\t// \t},\n\t\t// \tdispose() { }\n\t\t// });\n\t}\n\n\tgetSources() {\n\t\treturn [...this.providers.values()].map(p => ({ id: p.id, label: p.label }));\n\t}\n\n\tgetTimeline(id: string, uri: URI, options: TimelineOptions, tokenSource: CancellationTokenSource, internalOptions?: InternalTimelineOptions) {\n\t\tthis.logService.trace(`TimelineService#getTimeline(${id}): uri=${uri.toString(true)}`);\n\n\t\tconst provider = this.providers.get(id);\n\t\tif (provider === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (typeof provider.scheme === 'string') {\n\t\t\tif (provider.scheme !== '*' && provider.scheme !== uri.scheme) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else if (!provider.scheme.includes(uri.scheme)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tresult: provider.provideTimeline(uri, options, tokenSource.token, internalOptions)\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.items = result.items.map(item => ({ ...item, source: provider.id }));\n\t\t\t\t\tresult.items.sort((a, b) => (b.timestamp - a.timestamp) || b.source.localeCompare(a.source, undefined, { numeric: true, sensitivity: 'base' }));\n\n\t\t\t\t\treturn result;\n\t\t\t\t}),\n\t\t\toptions: options,\n\t\t\tsource: provider.id,\n\t\t\ttokenSource: tokenSource,\n\t\t\turi: uri\n\t\t};\n\t}\n\n\tregisterTimelineProvider(provider: TimelineProvider): IDisposable {\n\t\tthis.logService.trace(`TimelineService#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst id = provider.id;\n\n\t\tconst existing = this.providers.get(id);\n\t\tif (existing) {\n\t\t\t// For now to deal with https://github.com/microsoft/vscode/issues/89553 allow any overwritting here (still will be blocked in the Extension Host)\n\t\t\t// TODO@eamodio: Ultimately will need to figure out a way to unregister providers when the Extension Host restarts/crashes\n\t\t\t// throw new Error(`Timeline Provider ${id} already exists.`);\n\t\t\ttry {\n\t\t\t\texisting?.dispose();\n\t\t\t}\n\t\t\tcatch { }\n\t\t}\n\n\t\tthis.providers.set(id, provider);\n\n\t\tthis.updateHasProviderContext();\n\n\t\tif (provider.onDidChange) {\n\t\t\tthis.providerSubscriptions.set(id, provider.onDidChange(e => this._onDidChangeTimeline.fire(e)));\n\t\t}\n\t\tthis._onDidChangeProviders.fire({ added: [id] });\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.providers.delete(id);\n\t\t\t\tthis._onDidChangeProviders.fire({ removed: [id] });\n\t\t\t}\n\t\t};\n\t}\n\n\tunregisterTimelineProvider(id: string): void {\n\t\tthis.logService.trace(`TimelineService#unregisterTimelineProvider: id=${id}`);\n\n\t\tif (!this.providers.has(id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.providers.delete(id);\n\t\tthis.providerSubscriptions.delete(id);\n\n\t\tthis.updateHasProviderContext();\n\n\t\tthis._onDidChangeProviders.fire({ removed: [id] });\n\t}\n\n\tsetUri(uri: URI) {\n\t\tthis.viewsService.openView(TimelinePaneId, true);\n\t\tthis._onDidChangeUri.fire(uri);\n\t}\n\n\tprivate updateHasProviderContext() {\n\t\tthis.hasProviderContext.set(this.providers.size !== 0);\n\t}\n}\n"]}