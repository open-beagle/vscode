{"version":3,"file":"timeline.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/timeline/common/timeline.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,SAAgB,KAAK,CAAC,SAAuC,EAAE,MAAc;QAC5E,OAAO,GAAG,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,gCAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE,CAAC;IACxG,CAAC;IAFD,sBAEC;IAEY,QAAA,cAAc,GAAG,UAAU,CAAC;IA8FzC,MAAM,mBAAmB,GAAG,UAAU,CAAC;IAC1B,QAAA,gBAAgB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAmB,mBAAmB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Command } from 'vs/editor/common/modes';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\n\nexport function toKey(extension: ExtensionIdentifier | string, source: string) {\n\treturn `${typeof extension === 'string' ? extension : ExtensionIdentifier.toKey(extension)}|${source}`;\n}\n\nexport const TimelinePaneId = 'timeline';\n\nexport interface TimelineItem {\n\thandle: string;\n\tsource: string;\n\n\tid?: string;\n\ttimestamp: number;\n\tlabel: string;\n\taccessibilityInformation?: IAccessibilityInformation;\n\ticon?: URI,\n\ticonDark?: URI,\n\tthemeIcon?: { id: string },\n\tdescription?: string;\n\tdetail?: string;\n\tcommand?: Command;\n\tcontextValue?: string;\n\n\trelativeTime?: string;\n\thideRelativeTime?: boolean;\n}\n\nexport interface TimelineChangeEvent {\n\tid: string;\n\turi: URI | undefined;\n\treset: boolean\n}\n\nexport interface TimelineOptions {\n\tcursor?: string;\n\tlimit?: number | { timestamp: number; id?: string };\n}\n\nexport interface InternalTimelineOptions {\n\tcacheResults: boolean;\n\tresetCache: boolean;\n}\n\nexport interface Timeline {\n\tsource: string;\n\titems: TimelineItem[];\n\n\tpaging?: {\n\t\tcursor: string | undefined;\n\t}\n}\n\nexport interface TimelineProvider extends TimelineProviderDescriptor, IDisposable {\n\tonDidChange?: Event<TimelineChangeEvent>;\n\n\tprovideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\nexport interface TimelineSource {\n\tid: string;\n\tlabel: string;\n}\n\nexport interface TimelineProviderDescriptor {\n\tid: string;\n\tlabel: string;\n\tscheme: string | string[];\n}\n\nexport interface TimelineProvidersChangeEvent {\n\treadonly added?: string[];\n\treadonly removed?: string[];\n}\n\nexport interface TimelineRequest {\n\treadonly result: Promise<Timeline | undefined>;\n\treadonly options: TimelineOptions;\n\treadonly source: string;\n\treadonly tokenSource: CancellationTokenSource;\n\treadonly uri: URI;\n}\n\nexport interface ITimelineService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeProviders: Event<TimelineProvidersChangeEvent>;\n\tonDidChangeTimeline: Event<TimelineChangeEvent>;\n\tonDidChangeUri: Event<URI>;\n\n\tregisterTimelineProvider(provider: TimelineProvider): IDisposable;\n\tunregisterTimelineProvider(id: string): void;\n\n\tgetSources(): TimelineSource[];\n\n\tgetTimeline(id: string, uri: URI, options: TimelineOptions, tokenSource: CancellationTokenSource, internalOptions?: InternalTimelineOptions): TimelineRequest | undefined;\n\n\tsetUri(uri: URI): void;\n}\n\nconst TIMELINE_SERVICE_ID = 'timeline';\nexport const ITimelineService = createDecorator<ITimelineService>(TIMELINE_SERVICE_ID);\n"]}