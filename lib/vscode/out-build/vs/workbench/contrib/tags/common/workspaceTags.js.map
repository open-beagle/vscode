{"version":3,"file":"workspaceTags.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/tags/common/workspaceTags.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQnF,QAAA,qBAAqB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAwB,sBAAsB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkbenchState, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport type Tags = { [index: string]: boolean | number | string | undefined };\n\nexport const IWorkspaceTagsService = createDecorator<IWorkspaceTagsService>('workspaceTagsService');\n\nexport interface IWorkspaceTagsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetTags(): Promise<Tags>;\n\n\t/**\n\t * Returns an id for the workspace, different from the id returned by the context service. A hash based\n\t * on the folder uri or workspace configuration, not time-based, and undefined for empty workspaces.\n\t */\n\tgetTelemetryWorkspaceId(workspace: IWorkspace, state: WorkbenchState): Promise<string | undefined>;\n\n\tgetHashedRemotesFromUri(workspaceUri: URI, stripEndingDotGit?: boolean): Promise<string[]>;\n}\n"]}