{"version":3,"sources":["vs/workbench/contrib/tasks/browser/abstractTaskService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkFhG,MAAM,8BAA8B,GAAG,wBAAwB,CAAC;IAChE,MAAM,4BAA4B,GAAG,kCAAkC,CAAC;IACxE,MAAM,eAAe,GAAG,wBAAwB,CAAC;IAEjD,IAAiB,mBAAmB,CAGnC;IAHD,WAAiB,mBAAmB;QACtB,sBAAE,GAAG,4CAA4C,CAAC;QAClD,wBAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAiC,EAAE,IAAgB,CAAC,CAAC;IACvF,CAAC,EAHgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAGnC;IAID,MAAM,eAAe;QAIpB,YAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;YACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0BAAgB,EAAE,CAAC;QACjD,CAAC;QAEM,IAAI,CAAC,OAAe;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,eAAuB,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC5C,CAAC;QAEM,IAAI,CAAC,OAAe;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,kBAA0B,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC5C,CAAC;QAEM,KAAK,CAAC,OAAe;YAC3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,gBAAwB,CAAC;YACrD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC5C,CAAC;QAEM,KAAK,CAAC,OAAe;YAC3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,gBAAwB,CAAC;YACrD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC5C,CAAC;QAED,IAAW,MAAM;YAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;KACD;IAiBD,MAAM,OAAO;QAAb;YACS,WAAM,GAAwB,IAAI,GAAG,EAAE,CAAC;QA0CjD,CAAC;QAxCO,OAAO,CAAC,QAAiD;YAC/D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAEO,MAAM,CAAC,eAAuD;YACrE,IAAI,GAAuB,CAAC;YAC5B,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;gBACpC,GAAG,GAAG,eAAe,CAAC;aACtB;iBAAM;gBACN,MAAM,GAAG,GAA2B,CAAA,GAAA,iCAAiB,CAAA,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC;gBAC7H,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;aAChC;YACD,OAAO,GAAG,CAAC;QACZ,CAAC;QAEM,GAAG,CAAC,eAAuD;YACjE,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACzC,IAAI,MAAM,GAAuB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aAC7B;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,GAAG,CAAC,eAAuD,EAAE,GAAG,IAAY;YAClF,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACzC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aAC7B;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QACtB,CAAC;QAEM,GAAG;YACT,IAAI,MAAM,GAAW,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YACxD,OAAO,MAAM,CAAC;QACf,CAAC;KACD;IASD,IAAsB,mBAAmB,GAAzC,MAAsB,mBAAoB,SAAQ,sBAAU;QAsC3D,YACyC,oBAA2C,EAChD,aAA6B,EAC7B,aAA6B,EAChC,YAA2B,EAC3B,YAA2B,EACzB,cAA+B,EAChC,aAA6B,EAC7B,WAAyB,EACb,cAAwC,EAC/C,gBAAmC,EACtC,eAAiC,EAClC,YAA2B,EACzB,gBAAmC,EAClC,iBAAqC,EACxB,4BAA2D,EAC1E,eAAiC,EAClC,cAA+B,EAC9B,eAAiC,EACnC,aAA6B,EAC3B,aAA6B,EACzB,mBAAyC,EACzC,iBAAqC,EAC7B,kBAAgD,EAC7C,8BAA+D,EAClF,WAAyB,EACpB,wBAA2C,EACzC,kBAAuC,EACpC,qBAA6C,EACtC,4BAA2D,EACxD,+BAAiE,EACtF,UAAuB;YAErD,KAAK,EAAE,CAAC;YAhCgC,yBAAoB,GAApB,oBAAoB,CAAuB;YAChD,kBAAa,GAAb,aAAa,CAAgB;YAC7B,kBAAa,GAAb,aAAa,CAAgB;YAChC,iBAAY,GAAZ,YAAY,CAAe;YAC3B,iBAAY,GAAZ,YAAY,CAAe;YACzB,mBAAc,GAAd,cAAc,CAAiB;YAChC,kBAAa,GAAb,aAAa,CAAgB;YAC7B,gBAAW,GAAX,WAAW,CAAc;YACb,mBAAc,GAAd,cAAc,CAA0B;YAC/C,qBAAgB,GAAhB,gBAAgB,CAAmB;YACtC,oBAAe,GAAf,eAAe,CAAkB;YAClC,iBAAY,GAAZ,YAAY,CAAe;YACzB,qBAAgB,GAAhB,gBAAgB,CAAmB;YAClC,sBAAiB,GAAjB,iBAAiB,CAAoB;YACxB,iCAA4B,GAA5B,4BAA4B,CAA+B;YAC1E,oBAAe,GAAf,eAAe,CAAkB;YAClC,mBAAc,GAAd,cAAc,CAAiB;YAC9B,oBAAe,GAAf,eAAe,CAAkB;YACnC,kBAAa,GAAb,aAAa,CAAgB;YAC3B,kBAAa,GAAb,aAAa,CAAgB;YACzB,wBAAmB,GAAnB,mBAAmB,CAAsB;YACzC,sBAAiB,GAAjB,iBAAiB,CAAoB;YAC7B,uBAAkB,GAAlB,kBAAkB,CAA8B;YAC7C,mCAA8B,GAA9B,8BAA8B,CAAiC;YAClF,gBAAW,GAAX,WAAW,CAAc;YACpB,6BAAwB,GAAxB,wBAAwB,CAAmB;YACzC,uBAAkB,GAAlB,kBAAkB,CAAqB;YACpC,0BAAqB,GAArB,qBAAqB,CAAwB;YACtC,iCAA4B,GAA5B,4BAA4B,CAA+B;YACxD,oCAA+B,GAA/B,+BAA+B,CAAkC;YACtF,eAAU,GAAV,UAAU,CAAa;YAjC9C,sCAAiC,GAAkB,IAAI,eAAO,EAAE,CAAC;YAqCxE,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,mBAAmB,CAAC,eAAe,CAAE,CAAC;YAC1F,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAyB,CAAC;YACnD,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAkB,CAAC;YAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAA0B,CAAC;YAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,GAAG,EAAE;gBACnE,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;oBACtD,OAAO;iBACP;gBACD,IAAI,WAAW,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;gBACrD,IAAI,IAAI,CAAC,eAAe,KAAK,WAAW,CAAC,CAAC,CAAC,EAAE;oBAC5C,IAAI,CAAC,0BAA0B,EAAE,CAAC;oBAClC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;iBAC7B;gBACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,GAAG,EAAE;gBACtE,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;oBACtD,OAAO;iBACP;gBACD,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,YAAY,uCAAkB,EAAE;oBACxE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC5B;gBAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,oBAAoB,6BAAmC,CAAC;YAC9D,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,iBAAiB,GAAG,0BAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACtE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,KAAK,IAAiC,EAAE;gBAChH,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;gBACzD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACxD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC1B,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;qBAC1B;yBAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9C,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC/B;iBACD;gBAED,IAAI,KAA4C,CAAC;gBACjD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9B,KAAK,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,gEAAgE,CAAC,CAAC,CAAC;iBAC7J;gBAED,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnE,IAAI,CAAC,IAAI,EAAE;oBACV,OAAO,SAAS,CAAC;iBACjB;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,2BAA2B,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;gBACxD,CAAA,GAAA,iBAAI,CAAA,CAAC,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;QAEM,2BAA2B,CAAC,MAAgB,EAAE,KAAe,EAAE,OAAiB;YACtF,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzB,MAAM,aAAa,GAAG,6CAA+B,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACrF,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aAC1B;YACD,MAAM,SAAS,GAAG,CAAC,CAAC,qCAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7E,IAAI,KAAK,KAAK,SAAS,EAAE;gBACxB,MAAM,YAAY,GAAG,4CAA8B,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACnF,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC1B,MAAM,cAAc,GAAG,8CAAgC,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACvF,cAAc,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,iCAAiC,CAAC,IAAI,EAAE,CAAC;QAC/C,CAAC;QAED,IAAW,gBAAgB;YAC1B,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACrC,CAAC;QAED,IAAW,8BAA8B;YACxC,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;QAC1B,CAAC;QAEO,gBAAgB;YACvB,2BAAgB,CAAC,eAAe,CAAC;gBAChC,EAAE,EAAE,gCAAgC;gBACpC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;oBAChC,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;wBACvB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;qBACzB;gBACF,CAAC;gBACD,WAAW,EAAE;oBACZ,WAAW,EAAE,UAAU;oBACvB,IAAI,EAAE,CAAC;4BACN,IAAI,EAAE,MAAM;4BACZ,MAAM,EAAE;gCACP,MAAM,EAAE,QAAQ;6BAChB;yBACD,CAAC;iBACF;aACD,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,kCAAkC,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC5F,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACxB;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,oCAAoC,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC9F,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;iBAChC;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,kCAAkC,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC5F,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;iBAC9B;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,EAAE;gBACvE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;oBAC1B,OAAO;iBACP;gBACD,IAAI,CAAC,UAAU,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;gBAC3E,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;oBAC1B,OAAO;iBACP;gBACD,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;gBAC1E,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;oBAC1B,OAAO;iBACP;gBACD,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACtB;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;gBACzF,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBACzB;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;gBAC/F,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,4BAA4B,EAAE,CAAC;iBACpC;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;gBAC9F,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,2BAA2B,EAAE,CAAC;iBACnC;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;gBAC/E,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE;oBACvB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;iBAC3B;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,uCAAuC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,mBAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC;YAE7J,2BAAgB,CAAC,eAAe,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;gBACnF,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAc,CAAC,IAAI,CAAC,CAAC;gBAC9D,IAAI,QAAQ,EAAE;oBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,sBAAc,CAAC,IAAI,CAAC,CAAC;iBACjD;YACF,CAAC,CAAC,CAAC;YAEH,2BAAgB,CAAC,eAAe,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;gBAC5F,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAc,CAAC,aAAa,CAAC,CAAC;gBACvE,IAAI,QAAQ,EAAE;oBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,sBAAc,CAAC,aAAa,CAAC,CAAC;iBAC1D;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,IAAY,gBAAgB;YAC3B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;YACD,OAAO,IAAI,CAAC,iBAAkB,CAAC;QAChC,CAAC;QAED,IAAY,uBAAuB;YAClC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;gBACnC,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;YACD,OAAO,IAAI,CAAC,wBAAyB,CAAC;QACvC,CAAC;QAED,IAAc,eAAe;YAC5B,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;gBACxC,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;YACD,OAAO,IAAI,CAAC,gBAAiB,CAAC;QAC/B,CAAC;QAED,IAAY,aAAa;YACxB,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;gBACtC,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;YACD,OAAO,IAAI,CAAC,cAAe,CAAC;QAC7B,CAAC;QAED,IAAY,iBAAiB;YAC5B,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;gBAC1C,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,mBAAmB,CAAC,+BAA+B,qBAA0B,KAAK,CAAC,CAAC;aAC9I;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;QAChC,CAAC;QAEO,WAAW,CAAC,KAA4G;YAC/H,IAAI,CAAC,KAAK,EAAE;gBACX,KAAK,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;aAC3C;YACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAClC,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;oBAC7D,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;iBACpC;qBAAM;oBACN,IAAI,GAAG,GAAgB,IAAI,GAAG,EAAE,CAAC;oBACjC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAChF,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;wBAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE;4BACpC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;4BACpC,MAAM;yBACN;qBACD;iBACD;aACD;YACD,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;QAES,UAAU,CAAC,wBAA6C;YACjE,IAAI,CAAC,SAAS,iBAAuB,CAAC,IAAI,CAAC,SAAS,gCAAsC,CAAC,EAAE;gBAC5F,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,oDAAoD,CAAC,EAC9I,CAAC;wBACA,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC;wBAChD,GAAG,EAAE,GAAG,EAAE;4BACT,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;wBAC9D,CAAC;qBACD,CAAC,CAAC,CAAC;aACL;QACF,CAAC;QAES,0BAA0B;YACnC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;aACnC;QACF,CAAC;QAEM,oBAAoB,CAAC,QAAuB,EAAE,IAAY;YAChE,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO;oBACN,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC;iBAClB,CAAC;aACF;YACD,IAAI,MAAM,GAAG,mBAAmB,CAAC,UAAU,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACtC,OAAO;gBACN,OAAO,EAAE,GAAG,EAAE;oBACb,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC;aACD,CAAC;QACH,CAAC;QAEM,kBAAkB,CAAC,GAAW,EAAE,IAAoB;YAC1D,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,gBAA0B,EAAE;gBAC/E,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACrC;QACF,CAAC;QAEO,iBAAiB,CAAC,GAAW;YACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC;QAEM,6BAA6B,CAAC,IAAU,EAAE,MAAc;YAC9D,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;aACzB;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/D,CAAC;QAEM,KAAK,CAAC,OAAO,CAAC,MAA8C,EAAE,UAAmC,EAAE,YAAqB,KAAK;YACnI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO;aACP;YACD,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,GAAA,iCAAiB,CAAA,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACrK,IAAI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;gBACxE,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,4DAA4D,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAC/I;YACD,MAAM,GAAG,GAA6C,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAChF,CAAC,CAAC,sBAAc,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC;gBAC1D,CAAC,CAAC,UAAU,CAAC;YAEd,IAAI,GAAG,KAAK,SAAS,EAAE;gBACtB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YACD,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1C,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC7B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,kCAAoB,CAAC,CAAC,CAAC;gBAEtD,IAAI,CAAC,MAAM,EAAE;oBACZ,OAAO,SAAS,CAAC;iBACjB;gBACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnI,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,KAAK,CAAC,cAAc,CAAC,eAAgC;YAC3D,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO;aACP;YACD,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,0CAA0C,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAC;YAClK,IAAI,gBAA2C,CAAC;YAChD,IAAI,2BAA2B,GAAY,KAAK,CAAC;YACjD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjD,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACrD,IAAI,eAAe,CAAC,IAAI,KAAK,YAAY,EAAE;oBAC1C,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,EAAE;wBAC9D,2BAA2B,GAAG,IAAI,CAAC;wBACnC,SAAS;qBACT;oBACD,gBAAgB,GAAG,QAAQ,CAAC;oBAC5B,MAAM;iBACN;aACD;YAED,IAAI,CAAC,gBAAgB,EAAE;gBACtB,IAAI,2BAA2B,EAAE;oBAChC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CACtC,iCAAiC,EACjC,kEAAkE,EAClE,eAAe,CAAC,UAAU,CAAC,IAAI,CAC/B,CAAC,CAAC;iBACH;gBACD,OAAO;aACP;YAED,gCAAgC;YAChC,IAAI;gBACH,MAAM,YAAY,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;gBACzE,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC,EAAE;oBAC/D,OAAO,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;iBAClE;aACD;YAAC,OAAO,KAAK,EAAE;gBACf,yEAAyE;aACzE;YAED,8EAA8E;YAC9E,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;YAC/D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACzB,IAAI,IAAI,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,EAAE;oBACrC,OAAO,UAAU,CAAC,gBAAgB,CAAkB,IAAI,EAAE,eAAe,CAAC,CAAC;iBAC3E;aACD;YAED,OAAO;QACR,CAAC;QAIM,KAAK,CAAC,KAAK,CAAC,MAAmB;YACrC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO,EAAE,CAAC;aACV;YACD,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,EAAE;gBAC7C,OAAO,OAAO,CAAC,OAAO,CAAS,EAAE,CAAC,CAAC;aACnC;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1E,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBAC5B,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC;iBACjB;gBACD,IAAI,MAAM,GAAW,EAAE,CAAC;gBACxB,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACrB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;4BAC9G,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAClB;6BAAM,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;4BAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;gCAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAClB;iCAAM;gCACN,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;gCACnC,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;oCAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCAClB;6BACD;yBACD;qBACD;gBACF,CAAC,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,SAAS;YACf,MAAM,KAAK,GAAa,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;gBACjC,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC7C,IAAI,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE;wBAC7C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACjB;iBACD;aACD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEM,YAAY;YAClB,OAAO,IAAI,kBAAU,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7G,CAAC;QAEO,QAAQ;YACf,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QAEM,KAAK,CAAC,cAAc;YAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,EAAE,CAAC;aACV;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QAEM,KAAK,CAAC,YAAY;YACxB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,EAAE,CAAC;aACV;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC;QAEM,sBAAsB;YAC5B,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,OAAO,IAAI,CAAC,oBAAoB,CAAC;aACjC;YACD,MAAM,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAS,8BAA8B,CAAC,CAAC;YACzG,IAAI,CAAC,oBAAoB,GAAG,IAAI,cAAQ,CAAiB,qBAAqB,CAAC,CAAC;YAEhF,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAC,qBAAqB,oBAAyB,CAAC;YAC9G,IAAI,YAAY,EAAE;gBACjB,IAAI;oBACH,IAAI,MAAM,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBAChD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC1B,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;4BACzB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;yBAC5C;qBACD;iBACD;gBAAC,OAAO,KAAK,EAAE;oBACf,kCAAkC;iBAClC;aACD;YACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;QAClC,CAAC;QAEO,oBAAoB;YAC3B,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAC/B;YACD,MAAM,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAS,8BAA8B,CAAC,CAAC;YACzG,IAAI,CAAC,kBAAkB,GAAG,IAAI,cAAQ,CAAiB,qBAAqB,CAAC,CAAC;YAE9E,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,mBAAmB,CAAC,uBAAuB,oBAAyB,CAAC;YAChH,IAAI,YAAY,EAAE;gBACjB,IAAI;oBACH,IAAI,MAAM,GAAuB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBAC1D,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC1B,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;4BACzB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBAChD;qBACD;iBACD;gBAAC,OAAO,KAAK,EAAE;oBACf,kCAAkC;iBAClC;aACD;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;QAChC,CAAC;QAEO,oBAAoB,CAAC,GAAW;YACvC,MAAM,QAAQ,GAAmC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjE,OAAO,QAAQ,CAAC,MAAM,CAAC;QACxB,CAAC;QAEM,KAAK,CAAC,eAAe;;YAC3B,MAAM,SAAS,GAAwC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3E,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACtC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,MAAM,CAAC;YAC3C,CAAC,CAAC,CAAC;YACH,MAAM,gBAAgB,GAAqB,IAAI,GAAG,EAAE,CAAC;YACrD,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACtD,MAAM,KAAK,GAA+B,EAAE,CAAC;YAC7C,KAAK,MAAM,KAAK,IAAI,iBAAiB,CAAC,OAAO,EAAE,EAAE;gBAChD,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBAC5C,gBAAgB,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;iBACjC;gBACD,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kCAAoB,CAAC,CAAC,IAAI,IAAI,EAAE;oBAC/E,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACxC;aACD;YACD,MAAM,YAAY,GAA0C,IAAI,GAAG,EAAE,CAAC;YACtE,KAAK,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,EAAE;gBAC1C,IAAI,MAAM,GAAiB,EAAE,CAAC;gBAC9B,IAAI,UAAU,GAAuC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzE,MAAM,IAAI,CAAC,2BAA2B,CAAC,MAAA,SAAS,CAAC,GAAG,CAAC,mCAAI,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE;oBACjF,OAAO,EAAE,OAAO;oBAChB,KAAK,EAAE,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC;iBAChC,kBAAwB,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC9I,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACrB,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1C,IAAI,OAAO,EAAE;wBACZ,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAChC;gBACF,CAAC,CAAC,CAAC;gBACH,KAAK,MAAM,aAAa,IAAI,UAAU,EAAE;oBACvC,MAAM,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC,kBAAkB,EAAE,CAAC;oBAC/D,IAAI,OAAO,EAAE;wBACZ,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;qBACrD;iBACD;aACD;YAED,KAAK,MAAM,GAAG,IAAI,iBAAiB,CAAC,IAAI,EAAE,EAAE;gBAC3C,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBAC1B,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC;iBACnC;aACD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEM,sBAAsB,CAAC,mBAA2B;YACxD,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;gBACzD,IAAI,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;gBACxD,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC7B;QACF,CAAC;QAEO,oBAAoB;YAC3B,MAAM,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAS,8BAA8B,CAAC,CAAC;YACzG,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,qBAAqB,CAAC;aACtD;QACF,CAAC;QAEO,KAAK,CAAC,mBAAmB,CAAC,IAAU;;YAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE;gBAClC,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,cAAc,EAAE;oBAC/C,IAAI,MAAM,GAAiB,EAAE,CAAC;oBAC9B,IAAI,UAAU,GAAuC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACzE,MAAM,IAAI,CAAC,2BAA2B,CAAC,MAAA,IAAI,CAAC,OAAO,CAAC,eAAe,mCAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;wBAChG,OAAO,EAAE,OAAO;wBAChB,KAAK,EAAE,CAAC,cAAc,CAAC;qBACvB,kBAAwB,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBAC1F,KAAK,MAAM,aAAa,IAAI,UAAU,EAAE;wBACvC,GAAG,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC,kBAAkB,EAAG,CAAC;qBACtD;iBACD;gBACD,IAAI,CAAC,oBAAoB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC7B;QACF,CAAC;QAEO,qBAAqB;YAC5B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,OAAO;aACP;YACD,MAAM,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAS,8BAA8B,CAAC,CAAC;YACzG,kDAAkD;YAClD,IAAI,qBAAqB,KAAK,CAAC,EAAE;gBAChC,OAAO;aACP;YACD,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,MAAM,GAAG,qBAAqB,EAAE;gBACxC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC;aAC5C;YACD,MAAM,SAAS,GAAuB,EAAE,CAAC;YACzC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACvB,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,eAAc,CAAC,CAAC,CAAC;aACrE;YACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kCAA6C,CAAC;QAC/I,CAAC;QAEO,iBAAiB;YACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAG,CAAC,KAAK,CAAC,6EAA6E,CAAC,CAAC,CAAC;QACnH,CAAC;QAEO,KAAK;YACZ,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,iBAAS,CAAC,KAAK,CAAC,CAAC;gBAC/D,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAChC,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;wBACpD,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,oFAAoF,CAAC,sBAAyB,CAAC;qBAC3L;yBAAM;wBACN,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,sFAAsF,CAAC,sBAAyB,CAAC;qBAC7L;iBACD;gBACD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,eAAqB,CAAC;YAC/E,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,OAAO;YACd,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,iBAAS,CAAC,IAAI,CAAC,CAAC;gBAC9D,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAChC,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;wBACpD,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,kFAAkF,CAAC,qBAAwB,CAAC;qBACvL;yBAAM;wBACN,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,oFAAoF,CAAC,qBAAwB,CAAC;qBACzL;iBACD;gBACD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,eAAqB,CAAC;YAC/E,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,KAAK,CAAC,GAAG,CAAC,IAAsB,EAAE,OAAkC,EAAE,0BAA+C;YAC3H,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO;aACP;YAED,IAAI,CAAC,IAAI,EAAE;gBACV,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,mBAAmB,EAAE,8BAA8B,CAAC,uBAA0B,CAAC;aAC/H;YAED,OAAO,IAAI,OAAO,CAA2B,KAAK,EAAE,OAAO,EAAE,EAAE;gBAC9D,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,OAAO,IAAI,OAAO,CAAC,oBAAoB,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBAC/G,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;oBACxD,IAAI,SAAS,EAAE;wBACd,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC1D;yBAAM;wBACN,OAAO,CAAC,SAAS,CAAC,CAAC;qBACnB;iBACD;qBAAM;oBACN,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;iBACrD;YACF,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,SAAS,iBAAuB,EAAE;oBACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;wBAC9C,qCAAiB,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;oBACtK,CAAC,CAAC,CAAC;iBACH;gBACD,OAAO,KAAK,CAAC;YACd,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,qBAAqB;YAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAC3E,OAAO,YAAY,KAAK,IAAI,CAAC;QAC9B,CAAC;QAEO,6BAA6B,CAAC,IAAa;YAClD,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;YACtF,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAClC,OAAO,CAAC,YAAY,CAAC;aACrB;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvB,OAAO,IAAI,CAAC;aACZ;YACD,MAAM,eAAe,GAAoC,YAAY,CAAC;YACtE,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAEO,cAAc,CAAC,IAAU;YAChC,IAAI,IAAY,CAAC;YACjB,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,gBAAgB,GAAuC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;gBACvF,IAAI,GAAS,gBAAiB,CAAC,IAAI,CAAC;aACpC;iBAAM;gBACN,IAAI,GAAG,IAAI,CAAC,aAAa,EAAG,CAAC,IAAI,CAAC;aAClC;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAEO,0BAA0B,CAAC,IAAU;YAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9E,IAAI,OAAO,KAAK,KAAK,EAAE;gBACtB,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;gBAC7B,OAAO,KAAK,CAAC;aACb;YACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,iBAAS,CAAC,KAAK,EAAE;gBAC/G,OAAO,KAAK,CAAC;aACb;YACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,KAAK,SAAS,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1H,OAAO,KAAK,CAAC;aACb;YACD,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;aACjJ;YACD,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,gBAAgB,GAAuC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;gBACvF,OAAO,gBAAgB,CAAC,cAAc,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aACjF;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,KAAK,CAAC,gCAAgC,CAAC,IAAY;YAC1D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAA2E,wBAAwB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/I,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;YACjF,IAAI,OAAO,KAAK,IAAI,EAAE;gBACrB,OAAO;aACP;YACD,IAAI,QAAoC,CAAC;YACzC,IAAI,OAAO,KAAK,KAAK,EAAE;gBACtB,QAAQ,GAAQ,OAAO,CAAC;aACxB;iBAAM;gBACN,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACtB,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;QACtF,CAAC;QAEO,oBAAoB,CAAC,IAAkC;YAO9D,IAAI,OAAO,GAA8C,EAAE,CAAC;YAC5D,KAAK,IAAI,GAAG,IAAI,uCAAsB,CAAC,IAAI,EAAE,EAAE;gBAC9C,IAAI,OAAO,GAAG,uCAAsB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,OAAO,CAAC,UAAU,EAAE;oBACvB,SAAS;iBACT;gBACD,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,EAAE;oBACnC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;iBACxD;qBAAM;oBACN,OAAO,CAAC,IAAI,CAAC;wBACZ,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,WAAW,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;wBAC/B,OAAO,EAAE,OAAO;qBAChB,CAAC,CAAC;iBACH;aACD;YACD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE;wBACvB,OAAO,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qBACtC;yBAAM;wBACN,OAAO,CAAC,CAAC;qBACT;gBACF,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;gBAClG,IAAI,QAAgB,CAAC;gBACrB,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,gBAAgB,GAAuC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;oBACvF,QAAQ,GAAS,gBAAiB,CAAC,IAAI,CAAC;iBACxC;qBAAM;oBACN,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC;iBACrC;gBACD,OAAO,CAAC,OAAO,CACd,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,kDAAkD,EAAE,2CAA2C,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,EAC5I,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,wCAAwC,EAAE,0CAA0C,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,EAC9I,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,4CAA4C,EAAE,0CAA0C,EAAE,QAAQ,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,EAClK,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,iDAAiD,EAAE,2CAA2C,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,CAC5J,CAAC;gBACF,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC3C,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,sEAAsE,CAAC;iBACzH,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;oBAC1B,IAAI,QAAQ,EAAE;wBACb,IAAI,QAAQ,CAAC,SAAS,EAAE;4BACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BACzB,OAAO,SAAS,CAAC;yBACjB;6BAAM,IAAI,QAAQ,CAAC,KAAK,EAAE;4BAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;4BACnD,OAAO,IAAI,CAAC;yBACZ;6BAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;4BAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;4BAC3B,IAAI,gBAAgB,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;4BACnD,IAAI,UAAU,GAA4B,EAAE,cAAc,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC;4BACjF,OAAO,CAAC,uBAAuB,CAAC,eAAe,GAAG,CAAC,gBAAgB,CAAC,CAAC;4BACrE,IAAI,OAAO,GAAG,uCAAsB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;4BAChE,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;gCAC9C,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;gCAC/B,OAAO,CAAC,uBAAuB,CAAC,YAAY,GAAG,IAAI,CAAC;6BACpD;4BACD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;4BACvC,OAAO,OAAO,CAAC;yBACf;6BAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;4BAC5B,MAAM,IAAI,CAAC,gCAAgC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;4BAC9D,OAAO,IAAI,CAAC;yBACZ;6BAAM;4BACN,OAAO,IAAI,CAAC;yBACZ;qBACD;yBAAM;wBACN,OAAO,SAAS,CAAC;qBACjB;gBACF,CAAC,CAAC,CAAC;aACH;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QAEO,gBAAgB,CAAC,KAAa;YACrC,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC7C,IAAI,MAAM,GAAW,EAAE,CAAC;gBACxB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACxB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,KAAK,EAAE;4BACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAClB;qBACD;gBACF,CAAC,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,wBAAwB;YAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,sBAA6B,CAAC;QAC7E,CAAC;QAEO,YAAY,CAAC,IAAU;YAC9B,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,OAAO,KAAK,CAAC;aACb;YACD,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC7B,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;aACnC;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,KAAK,CAAC,iBAAiB,CAAC,QAAa,EAAE,IAAwD;YACtG,IAAI,SAA2D,CAAC;YAChE,IAAI,WAAW,GAAW,EAAE,CAAC;YAC7B,IAAI;gBACH,SAAS,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;gBAC/E,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC;gBAC/C,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;gBACrD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC3B,MAAM,KAAK,GAAG,CAAA,GAAA,sBAAM,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;gBACtF,IAAI,WAAW,GAAG,CAAA,GAAA,qBAAU,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC1D,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;gBAClF,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpG,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAChE,WAAW,GAAG,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC3H;oBAAS;gBACT,IAAI,SAAS,EAAE;oBACd,SAAS,CAAC,OAAO,EAAE,CAAC;iBACpB;aACD;YACD,OAAO,WAAW,CAAC;QACpB,CAAC;QAEO,gBAAgB,CAAC,QAAyB,EAAE,IAA6E,EAAE,cAAsB,CAAC,CAAC;YAC1J,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC9B;YACD,IAAI,SAA2C,CAAC;YAChD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,EAAC,EAAE;gBAC9F,IAAI,CAAC,OAAO,EAAE;oBACb,OAAO,KAAK,CAAC;iBACb;gBACD,IAAI,IAAI,EAAE;oBACT,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACxC,IAAI,WAA+B,CAAC;oBACpC,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;wBACvB,MAAM,IAAI,GAA+C,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAA6C,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;wBAC/J,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,EAAE;4BACpD,WAAW,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;yBAC9E;qBACD;oBACD,IAAI,CAAC,WAAW,EAAE;wBACjB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;4BAC7B,WAAW,GAAG,IAAI,CAAC;yBACnB;6BAAM;4BACN,WAAW,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;yBAC3D;qBACD;oBAED,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAChD,IAAI,eAAe,GAAG,CAAC,CAAC;oBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC/B,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;4BACpC,eAAe,EAAE,CAAC;yBAClB;qBACD;oBACD,IAAI,aAAa,GAAG,eAAe,CAAC;oBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC5C,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;4BACnC,aAAa,EAAE,CAAC;yBAChB;qBACD;oBACD,SAAS,GAAG,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,KAAK,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;iBACvM;gBAED,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;oBACpC,QAAQ;oBACR,OAAO,EAAE;wBACR,MAAM,EAAE,KAAK;wBACb,WAAW,EAAE,IAAI;wBACjB,SAAS;wBACT,mBAAmB,iCAAuD;qBAC1E;iBACD,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,sBAAsB,CAAC,IAAoD;YAClF,IAAI,WAA2E,CAAC;YAChF,IAAI,UAAU,GAAG,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;YACnG,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE;gBACrC,WAAW,qBAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAE,CAAC;aAC1C;iBAAM,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACpC,WAAW,GAAG,EACb,CAAC;gBACF,IAAI,UAAU,GAA8B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC7F,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC1B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAO,WAAa,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnF,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,EAAE;oBACjL,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC;iBAC1E;gBACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE;oBACvC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;iBACvD;aACD;YACD,IAAI,CAAC,WAAW,EAAE;gBACjB,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,WAAW,CAAC,cAAc,KAAK,SAAS,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;gBAC1N,WAAW,CAAC,cAAc,GAAG,EAAE,CAAC;aAChC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,WAAW,EAAE;gBACvC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC;aAC5D;iBAAM;gBACN,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;aAChC;YACD,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC;YACzD,OAAO,WAAW,CAAC;QACpB,CAAC;QAEM,KAAK,CAAC,SAAS,CAAC,IAAoD,EAAE,UAAoC,EAAE,UAAoB;YACtI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO;aACP;YAED,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAClD,IAAI,CAAC,eAAe,EAAE;gBACrB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YACD,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9E,IAAI,aAAa,CAAC,cAAc,EAAE;gBACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,mGAAmG,CAAC,CAAC,CAAC;gBACzK,OAAO,OAAO,CAAC,OAAO,CAAO,SAAS,CAAC,CAAC;aACxC;YAED,IAAI,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC;YACtC,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,EAAE;gBACjB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YACD,MAAM,KAAK,GAAuB,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;YAC9F,IAAI,UAAU,EAAE;gBACf,KAAK,IAAI,QAAQ,IAAI,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE;oBAC5D,IAAI,KAAK,GAAS,UAAW,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;wBACpC,WAAY,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;qBACrC;iBACD;aACD;YAED,IAAI,OAAkC,CAAC;YACvC,IAAI,CAAC,UAAU,EAAE;gBAChB,IAAI,KAAK,GAAG;oBACX,OAAO,EAAE,OAAO;oBAChB,KAAK,EAAE,CAAC,WAAW,CAAC;iBACpB,CAAC;gBACF,IAAI,OAAO,GAAG;oBACb,GAAG;oBACH,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,kHAAkH,CAAC;iBACpJ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAO,CAAC;gBAC7D,IAAI,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE;oBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjH;gBACD,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,eAAe,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;aACxI;iBAAM;gBACN,sCAAsC;gBACtC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,UAAU,EAAE;oBACjC,IAAI,UAAU,CAAC,cAAc,KAAK,SAAS,EAAE;wBAC5C,UAAU,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;wBACtD,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,uBAAuB,EAAE,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBAC1H;yBAAM,IAAI,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE;wBAC1C,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;wBACpC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,aAAa,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACvG;iBACD;qBAAM;oBACN,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;wBACrC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;qBACtB;oBACD,IAAI,KAAK,KAAK,SAAS,EAAE;wBACxB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACnC;yBAAM;wBACN,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;qBACtC;oBACD,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,aAAa,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACvG;aACD;YACD,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YACD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;gBACxB,IAAI,KAAK,GAAoC;oBAC5C,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;iBACpE,CAAC;gBACF;;;;kBAIE;gBACF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;gBAC5F,IAAI,UAAU,EAAE;oBACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;iBAClE;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,kBAAkB,CAAC,eAAiC,EAAE,GAAW,EAAE,KAAU,EAAE,MAAe;YACrG,IAAI,MAAM,GAAoC,SAAS,CAAC;YACxD,QAAQ,MAAM,EAAE;gBACf,KAAK,sBAAc,CAAC,IAAI;oBAAE,MAAM,eAA2B,CAAC;oBAAC,MAAM;gBACnE,KAAK,sBAAc,CAAC,aAAa;oBAAE,MAAM,oBAAgC,CAAC;oBAAC,MAAM;gBACjF,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,mBAA0B,EAAE;oBAC/E,MAAM,oBAAgC,CAAC;iBACvC;qBAAM,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,sBAA6B,EAAE;oBAChF,MAAM,2BAAuC,CAAC;iBAC9C;aACD;YACD,IAAI,MAAM,EAAE;gBACX,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;aACpG;iBAAM;gBACN,OAAO,SAAS,CAAC;aACjB;QACF,CAAC;QAEO,kBAAkB,CAAC,IAAY;YACtC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,QAAQ,IAAI,EAAE;gBACb,KAAK,sBAAc,CAAC,IAAI,CAAC,CAAC;oBACzB,OAAO,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;iBACzG;gBACD,KAAK,sBAAc,CAAC,aAAa,CAAC,CAAC;oBAClC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;wBACrD,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;qBACrC;iBACD;gBACD,OAAO,CAAC,CAAC;oBACR,OAAO,SAAS,CAAC;iBACjB;aACD;QACF,CAAC;QAEO,kBAAkB,CAAC,IAAoD;YAC9E,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,GAAG,EAAE;oBACT,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC7C,IAAI,UAAU,EAAE;wBACf,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACtD;yBAAM;wBACN,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;qBACnC;iBACD;gBACD,OAAO,GAAG,CAAC;aACX;iBAAM;gBACN,OAAO,IAAI,CAAC,kBAAkB,EAAG,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;aACnE;QACF,CAAC;QAEM,KAAK,CAAC,UAAU,CAAC,IAA8C;YACrE,IAAI,QAAyB,CAAC;YAC9B,IAAI,IAAI,EAAE;gBACT,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACzC;iBAAM;gBACN,QAAQ,GAAG,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;aACpJ;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/G,CAAC;QAEO,kBAAkB,CAAC,KAAc,EAAE,KAAgB;YAO1D,IAAI,YAAY,GAA8B,IAAI,GAAG,EAAE,CAAC;YACxD,IAAI,cAAc,GAAW,EAAE,CAAC;YAChC,IAAI,cAAc,GAAW,EAAE,CAAC;YAChC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBAC/B,IAAI,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,EAAE;oBACV,IAAI,GAAG;wBACN,EAAE,EAAE,IAAI,GAAG,EAAgB;wBAC3B,KAAK,EAAE,IAAI,GAAG,EAAgB;wBAC9B,UAAU,EAAE,IAAI,GAAG,EAAgB;qBACnC,CAAC;oBACF,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC/B;gBACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;oBACvB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAClC,IAAI,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE;wBAC5C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;qBACnE;oBACD,IAAI,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,KAAK,EAAE;wBAC1D,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,SAAS,EAAE;4BACnD,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;6BAAM;4BACN,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;qBACD;iBACD;YACF,CAAC,CAAC,CAAC;YACH,IAAI,QAAQ,GAAkB;gBAC7B,OAAO,EAAE,KAAK,EAAE,GAAiB,EAAE,KAAa,EAAE,EAAE;oBACnD,IAAI,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC5E,IAAI,CAAC,IAAI,EAAE;wBACV,OAAO,SAAS,CAAC;qBACjB;oBACD,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClF,CAAC;aACD,CAAC;YACF,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,kFAAkF,CAAC,CAAC,CAAC;iBACrJ;gBACD,OAAO,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;aAC7C;YACD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO,SAAS,CAAC;aACjB;YAED,oFAAoF;YACpF,wBAAwB;YACxB,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;aAC7C;iBAAM;gBACN,IAAI,EAAE,GAAW,IAAI,CAAC,YAAY,EAAE,CAAC;gBACrC,IAAI,IAAI,GAAiB,IAAI,oBAAY,CACxC,EAAE,EACF,EAAE,IAAI,EAAE,sBAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,EACpD,EAAE,EACF,UAAU,EACV,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAC3B;oBACC,UAAU,EAAE,EAAE;oBACd,SAAS,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE,GAAG,OAAO,EAAE,GAAG,EAAE,aAAa,CAAC,kBAAkB,EAAG,CAAC,GAAG,EAAE,IAAI,EAAE,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACvI,IAAI,EAAE,EAAE;iBACR,CACD,CAAC;gBACF,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;aAC1B;QACF,CAAC;QAEO,cAAc,CAAC,OAAiB;YAOvC,IAAI,YAAmD,CAAC;YAExD,OAAO;gBACN,OAAO,EAAE,KAAK,EAAE,GAAiB,EAAE,UAA+C,EAAE,EAAE;oBACrF,IAAI,YAAY,KAAK,SAAS,EAAE;wBAC/B,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;wBACzB,CAAC,OAAO,IAAI,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;4BACnE,IAAI,IAAI,GAAG,YAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BACrC,IAAI,CAAC,IAAI,EAAE;gCACV,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,GAAG,EAAgB,EAAE,UAAU,EAAE,IAAI,GAAG,EAAgB,EAAE,cAAc,EAAE,IAAI,GAAG,EAAgB,EAAE,CAAC;gCACxH,YAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;6BAChC;4BACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gCACvB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gCAClC,IAAI,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE;oCAC5C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;iCACnE;gCACD,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gCAC/C,IAAI,eAAe,KAAK,SAAS,EAAE;oCAClC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iCACpD;6BACD;wBACF,CAAC,CAAC,CAAC;qBACH;oBACD,IAAI,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC5E,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;wBACzB,OAAO,SAAS,CAAC;qBACjB;oBACD,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;wBAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;qBACrE;yBAAM;wBACN,IAAI,GAAG,GAAG,sBAAc,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;wBACnE,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;qBACzE;gBACF,CAAC;aACD,CAAC;QACH,CAAC;QAEO,WAAW,CAAC,IAAU,EAAE,QAAuB,EAAE,SAAwB;YAChF,IAAK,0BAIJ;YAJD,WAAK,0BAA0B;gBAC9B,+CAAiB,CAAA;gBACjB,6CAAe,CAAA;gBACf,+CAAiB,CAAA;YAClB,CAAC,EAJI,0BAA0B,KAA1B,0BAA0B,QAI9B;YAED,MAAM,uBAAuB,GAA+B,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;YAErH,MAAM,QAAQ,GAAG,KAAK,EAAE,IAAU,EAAE,QAAuB,EAAyB,EAAE;gBACrF,OAAO,uCAAsB,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBACjD,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;oBAC7D,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,yBAAyB,GAAG,KAAK,EAAE,IAAU,EAAE,QAAuB,EAAyB,EAAE;gBACtG,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,cAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxE,OAAO,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,KAAK,EAAE,IAAU,EAAE,QAAuB,EAAyB,EAAE;gBACtF,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAClD,kBAAQ,CAAC,IAAI,EACb,GAAG,CAAC,QAAQ,CAAC,uCAAuC,EAAE,mBAAmB,CAAC,EAC1E,CAAC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,aAAa,CAAC,CAAC,EACnG;oBACC,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,0DAA0D,CAAC;oBAC1F,QAAQ,EAAE,CAAC;iBACX,CACD,CAAC;gBAEF,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,OAAO,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACN,OAAO,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;iBAChC;YACF,CAAC,CAAC;YAEF,IAAI,uBAAuB,KAAK,0BAA0B,CAAC,KAAK,EAAE;gBACjE,OAAO,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAChC;iBAAM,IAAI,uBAAuB,KAAK,0BAA0B,CAAC,MAAM,EAAE;gBACzE,OAAO,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aACjC;iBAAM;gBACN,OAAO,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aACjD;QACF,CAAC;QAEO,KAAK,CAAC,mBAAmB,CAAC,aAAiC,EAAE,SAAyB;;YAC7F,IAAI,aAAa,CAAC,IAAI,CAAC,gBAAgB,IAAI,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1F,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;oBACzD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB;YAED,IAAI,SAAS,iBAAuB,EAAE;gBACrC,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,CAAC,IAAI,mBAA2B,EAAE;gBAClD,IAAI,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;gBAClC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;oBAC1B,IAAI,MAAA,IAAI,CAAC,WAAW,0CAAE,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;wBACxD,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,qCAAqC,EAAE,aAAa,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;wBAClJ,IAAI,YAAY,GAAG,MAAA,IAAI,CAAC,aAAa,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,mCAAI,aAAa,CAAC,IAAI,CAAC;wBAClG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAQ,CAAC,OAAO,EAAE,OAAO,EACxD,CAAC;gCACA,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,eAAe,EAAE,gBAAgB,CAAC;gCACtD,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;6BACvC;4BACD;gCACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC;gCAClD,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;6BACrC,CAAC,EACF,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;qBACF;yBAAM;wBACN,MAAA,IAAI,CAAC,WAAW,0CAAE,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBACjD;iBACD;qBAAM;oBACN,MAAM,IAAI,sBAAS,CAAC,kBAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,mBAAmB,EAAE,oFAAoF,CAAC,sBAAyB,CAAC;iBACvL;aACD;YACD,OAAO,aAAa,CAAC,OAAO,CAAC;QAC9B,CAAC;QAEO,OAAO,CAAC,IAAU;YACzB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO;aACP;YACD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAClD,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;wBACvC,0FAA0F;oBAC3F,CAAC,CAAC,CAAC;iBACH;qBAAM;oBACN,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,0CAA0C,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrL;gBACD,OAAO,QAAQ,CAAC;YACjB,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,KAAK,CAAC,SAAS,CAAC,IAAU;YAChC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;aAC1C;YAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;aAC1C;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QAEO,YAAY;YACnB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACtB,OAAO,OAAO,CAAC,OAAO,CAA0B,EAAE,CAAC,CAAC;aACpD;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC;QAES,wBAAwB;YACjC,OAAO,IAAI,uCAAkB,CAC5B,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAClG,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,gBAAgB,EAC3E,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,EAC5C,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,8BAA8B,EAC1F,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,oBAAoB,EACxF,CAAC,eAA6C,EAAE,EAAE;gBACjD,IAAI,eAAe,EAAE;oBACpB,OAAO,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBAC1D;qBAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,EAAE;oBAC1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;iBACnD;qBAAM;oBACN,OAAO,SAAS,CAAC;iBACjB;YACF,CAAC,CACD,CAAC;QACH,CAAC;QAIO,qBAAqB,CAAC,IAAY;YACzC,MAAM,UAAU,GAAG,+CAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpD,OAAO,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvG,CAAC;QAEO,eAAe,CAAC,IAAa;YACpC,MAAM,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnE,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,0CAA0C,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC5K,IAAI,UAAU,GAA+B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACjE,+CAAsB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC3F,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;gBAC3B,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBAC7B,OAAO,IAAI,OAAO,CAAY,OAAO,CAAC,EAAE;oBACvC,IAAI,MAAM,GAAc,EAAE,CAAC;oBAC3B,IAAI,OAAO,GAAW,CAAC,CAAC;oBACxB,IAAI,IAAI,GAAG,CAAC,KAA0B,EAAE,EAAE;wBACzC,IAAI,KAAK,EAAE;4BACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACnB;wBACD,IAAI,EAAE,OAAO,KAAK,CAAC,EAAE;4BACpB,OAAO,CAAC,MAAM,CAAC,CAAC;yBAChB;oBACF,CAAC,CAAC;oBACF,IAAI,KAAK,GAAG,CAAC,KAAU,EAAE,EAAE;wBAC1B,IAAI;4BACH,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gCAC3C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gCACtC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gCAC1C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gCACjC,IAAI,CAAC,UAAU,EAAE,CAAC;6BAClB;iCAAM;gCACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,iEAAiE,CAAC,CAAC;gCAC9F,IAAI,CAAC,UAAU,EAAE,CAAC;6BAClB;yBACD;gCAAS;4BACT,IAAI,EAAE,OAAO,KAAK,CAAC,EAAE;gCACpB,OAAO,CAAC,MAAM,CAAC,CAAC;6BAChB;yBACD;oBACF,CAAC,CAAC;oBACF,IAAI,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,mBAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE;wBACpH,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;4BACjD,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BACrD,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,EAAE;gCACpD,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,EAAE;oCAC9D,SAAS;iCACT;gCACD,OAAO,EAAE,CAAC;gCACV,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,OAAgB,EAAE,EAAE;oCAC3D,wDAAwD;oCACxD,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE;wCACjC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;4CAClD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,qFAAqF,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;4CAClM,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,EAAE;gDACzD,IAAI,CAAC,UAAU,EAAE,CAAC;6CAClB;4CACD,MAAM;yCACN;qCACD;oCACD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;gCACtB,CAAC,EAAE,KAAK,CAAC,CAAC;6BACV;yBACD;qBACD;yBAAM;wBACN,OAAO,CAAC,MAAM,CAAC,CAAC;qBAChB;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,EAAE;gBAC/B,IAAI,MAAM,GAAY,IAAI,OAAO,EAAE,CAAC;gBACpC,IAAI,gBAAgB,GAAY,IAAI,OAAO,EAAE,CAAC;gBAE9C,KAAK,IAAI,GAAG,IAAI,mBAAmB,EAAE;oBACpC,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;wBAC3B,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAChD,IAAI,eAAe,EAAE;4BACpB,gBAAgB,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;yBAC5C;qBACD;iBACD;gBAED,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,EAAE;oBAC1D,MAAM,wBAAwB,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACzD,MAAM,mBAAmB,GAAG,wBAAwB,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE,EAAE;wBACrF,IAAI,WAAW,GAAG,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAC5C,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;4BACrB,IAAI,WAAW,EAAE;gCAChB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,CAAC;6BAChC;4BACD,OAAO;yBACP;wBAED,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,kBAAyB,EAAE;4BACrE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBAC1C;6BAAM;4BACN,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;4BAChD,IAAI,wBAAwB,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;4BAC/G,IAAI,mBAAmB,GAAW,EAAE,CAAC;4BACrC,IAAI,cAAc,IAAI,wBAAwB,EAAE;gCAC/C,IAAI,oBAAoB,GAAgB,IAAI,GAAG,EAAU,CAAC;gCAC1D,IAAI,cAAc,EAAE;oCACnB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iCACvF;gCACD,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;oCAC7B,IAAI,CAAC,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;wCAC9B,SAAS;qCACT;oCACD,IAAI,cAAc,EAAE;wCACnB,IAAI,eAAe,GAAG,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wCACrE,IAAI,eAAe,EAAE;4CACpB,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;4CAC/C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;yCACpE;6CAAM;4CACN,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;yCACtB;qCACD;yCAAM,IAAI,wBAAwB,EAAE;wCACpC,IAAI,eAAe,GAAG,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wCAClE,IAAI,eAAe,EAAE;4CACpB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;4CACpE,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;yCAC1C;6CAAM;4CACN,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;yCACtB;qCACD;yCAAM;wCACN,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;qCACtB;iCACD;gCACD,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;oCACnC,IAAI,QAAQ,GAAG,mBAAmB,CAAC,MAAM,CAA6B,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;wCACnF,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;wCACrB,OAAO,GAAG,CAAC;oCACZ,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oCACxB,KAAK,IAAI,IAAI,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE;wCACvC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;4CACvB,SAAS;yCACT;wCACD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;qCACtB;iCACD;qCAAM;oCACN,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iCAC1C;gCAED,MAAM,2BAA2B,GAAG,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gCAErE,MAAM,2BAA2B,GAAG,2BAA2B,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;oCACnF,IAAI,eAAe,GAAG,cAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oCAC1D,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;wCACvD,OAAO;qCACP;oCAED,IAAI,+BAA+B,GAAY,KAAK,CAAC;oCAErD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;wCACjD,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wCACrD,IAAI,eAAe,CAAC,IAAI,KAAK,YAAY,EAAE;4CAC1C,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,EAAE;gDAC9D,+BAA+B,GAAG,IAAI,CAAC;gDACvC,SAAS;6CACT;4CAED,IAAI;gDACH,MAAM,YAAY,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;gDACjE,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC,EAAE;oDAC/D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC;oDAC5E,OAAO;iDACP;6CACD;4CAAC,OAAO,KAAK,EAAE;gDACf,yEAAyE;6CACzE;yCACD;qCACD;oCAED,IAAI,+BAA+B,EAAE;wCACpC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CACtC,iCAAiC,EACjC,kEAAkE,EAClE,eAAe,CAAC,UAAU,CAAC,IAAI,CAC/B,CAAC,CAAC;qCACH;yCAAM;wCACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CACtC,6BAA6B,EAC7B,4HAA4H,EAC5H,eAAe,CAAC,UAAU,CAAC,IAAI,EAC/B,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CACpE,CAAC,CAAC;wCACH,IAAI,CAAC,UAAU,EAAE,CAAC;qCAClB;gCACF,CAAC,CAAC,CAAC;gCAEH,MAAM,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;6BAC/C;iCAAM;gCACN,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gCAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,CAAC;6BAChC;yBACD;oBACF,CAAC,CAAC,CAAC;oBAEH,MAAM,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBACvC,IAAI,yBAAyB,EAAE;wBAC9B,+EAA+E;wBAC/E,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;qBAC5C;oBACD,OAAO,MAAM,CAAC;gBACf,CAAC,EAAE,GAAG,EAAE;oBACP,8EAA8E;oBAC9E,IAAI,MAAM,GAAY,IAAI,OAAO,EAAE,CAAC;oBACpC,KAAK,IAAI,GAAG,IAAI,mBAAmB,EAAE;wBACpC,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;4BAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BACzC,IAAI,MAAM,EAAE;gCACX,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;6BACzB;yBACD;qBACD;oBACD,OAAO,MAAM,CAAC;gBACf,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,2BAA2B,CAAC,cAAuB;YAC1D,IAAI,MAAiD,CAAC;YACtD,SAAS,SAAS;gBACjB,IAAI,MAAM,EAAE;oBACX,OAAO,MAAM,CAAC;iBACd;gBACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC7B,OAAO,MAAO,CAAC;YAChB,CAAC;YACD,KAAK,IAAI,IAAI,IAAI,cAAc,CAAC,KAAK,EAAE;gBACtC,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACpD,0EAA0E;oBAC1E,gFAAgF;oBAChF,IAAI,WAAW,KAAK,MAAM,IAAI,WAAW,KAAK,OAAO,IAAI,WAAW,KAAK,MAAM,EAAE;wBAChF,IAAI,UAAU,GAAG,2BAAoB,CAAC,MAAM,CAAC;4BAC5C,IAAI,EAAE,WAAW;4BACjB,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI;yBACvC,CAAC,CAAC;wBACH,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;qBACpC;iBACD;aACD;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,KAAK,CAAC,iBAAiB,CAAC,wBAA6C;YAC3E,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO,IAAI,GAAG,EAAE,CAAC;aACjB;YACD,MAAM,IAAI,CAAC,2BAA2B,CAAC;YACvC,IAAI,IAAI,CAAC,sBAAsB,EAAE;gBAChC,OAAO,IAAI,CAAC,sBAAsB,CAAC;aACnC;YACD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,sBAAuB,CAAC;QACrC,CAAC;QAEO,oBAAoB,CAAC,wBAA6C;YACzE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACrE,CAAC;QAEO,KAAK,CAAC,UAAU;YACvB,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACrF,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACnD,MAAM,GAAG,IAAI,2BAAe,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aAC9F;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAES,qBAAqB,CAAC,wBAA6C;YAC5E,IAAI,QAAQ,GAAqD,EAAE,CAAC;YACpE,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;aAC3G;YACD,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBAClD,IAAI,MAAM,GAAG,IAAI,GAAG,EAAqC,CAAC;gBAC1D,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;oBACzB,IAAI,KAAK,EAAE;wBACV,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;qBACxD;iBACD;gBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;gBACvC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;gBACzG,IAAI,SAAS,EAAE;oBACd,MAAM,CAAC,GAAG,CAAC,kCAAoB,EAAE,SAAS,CAAC,CAAC;iBAC5C;gBAED,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,kBAAyB,EAAE;oBACrE,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;oBAC3H,IAAI,kBAAkB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;wBAC3E,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,kBAAkB,CAAC,CAAC;qBACzE;iBACD;gBACD,OAAO,MAAM,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,IAAY,kBAAkB;YAC7B,OAAO,CAAC,CAAC,4CAA8B,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,8CAAgC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjJ,CAAC;QAEO,2BAA2B,CAAC,eAAiC,EAAE,wBAA6C;YACnH,OAAO,CAAC,IAAI,CAAC,eAAe,KAAK,uBAAe,CAAC,OAAO;gBACvD,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC;gBAClD,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;gBAC7C,IAAI,CAAC,CAAC,4BAA4B,EAAE,EAAE;gBACrC,IAAI,CAAC,4BAA4B,IAAI,CAAC,4BAA4B,CAAC,MAAM,IAAI,4BAA4B,CAAC,SAAS,EAAE;oBACpH,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,eAAe,EAAE,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,4BAA4B,CAAC,CAAC,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;iBACjL;gBACD,OAAO,uCAAsB,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,IAAwC,EAAE;oBAC3F,IAAI,cAAc,GAA+B,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpG,IAAI,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC/D,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,4BAA4B,CAAC,MAAO,EAAE,eAAe,EAAE,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACnP,IAAI,SAAS,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,iBAAyB,CAAC,EAAE;wBAC1G,SAAS,GAAG,IAAI,CAAC;wBACjB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;qBAC3B;oBACD,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;wBACrC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,uHAAuH,CAAC,CAAC,CAAC;wBAC/L,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;qBACjF;oBACD,IAAI,eAAkF,CAAC;oBACvF,IAAI,WAAW,CAAC,UAAU,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBAChE,eAAe,GAAG;4BACjB,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;yBACjC,CAAC;wBACF,KAAK,IAAI,IAAI,IAAI,WAAW,CAAC,UAAU,EAAE;4BACxC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;yBAC1D;qBACD;oBACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;wBAChE,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;qBAC1D;oBACD,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,CAAC;gBAC3I,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,uBAAuB,CAAC,MAA8D,EAAE,QAAgB;YAC/G,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;aACpD;YACD,IAAI,WAAW,GAAc,MAAc,CAAC,YAAY,CAAC;YACzD,IAAI,WAAW,EAAE;gBAChB,IAAI,UAAU,GAAG,KAAK,CAAC;gBACvB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;oBACrC,IAAI,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;wBACpC,UAAU,GAAG,IAAI,CAAC;wBAClB,MAAM;qBACN;iBACD;gBACD,IAAI,UAAU,EAAE;oBACf,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,OAAO,EAAE,CAAC,+HAA+H,CAAC,EAAE,EAAE,+GAA+G,EAAE,QAAQ,CAAC,CAAC,CAAC;oBAC5V,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;iBACxC;aACD;YACD,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;QAC1C,CAAC;QAEO,KAAK,CAAC,yBAAyB,CAAC,eAAiC,EAAE,wBAA6C;YACvH,IAAI,IAAI,CAAC,eAAe,KAAK,uBAAe,CAAC,OAAO,EAAE;gBACrD,OAAO,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,MAAM,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAA6C,OAAO,CAAC,CAAC,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,gBAAgB,CAAC,CAAC,CAAC;YACjO,IAAI,eAAe,GAA0D;gBAC5E,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACjC,CAAC;YAEF,MAAM,MAAM,GAAiB,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,2BAA2B,CAAC,eAAe,EAAE,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,YAAY,EAAE,UAAU,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAC1K,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,uBAAe,CAAC,QAAQ,CAAC;YACvH,IAAI,MAAM,KAAK,uBAAe,CAAC,OAAO,EAAE;gBACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iCAAiC,EAAE,sEAAsE,CAAC,CAAC,CAAC;gBACvJ,OAAO,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,aAAa,CAAC,cAAc,EAAE,CAAC;QAC9H,CAAC;QAEO,KAAK,CAAC,gBAAgB,CAAC,eAAiC,EAAE,wBAA6C;YAC9G,IAAI,IAAI,CAAC,eAAe,KAAK,uBAAe,CAAC,OAAO,EAAE;gBACrD,OAAO,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,MAAM,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAA6C,OAAO,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,eAAe,CAAC,CAAC,CAAC;YACtN,IAAI,eAAe,GAA0D;gBAC5E,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACjC,CAAC;YAEF,MAAM,MAAM,GAAiB,EAAE,CAAC;YAChC,MAAM,IAAI,CAAC,2BAA2B,CAAC,eAAe,EAAE,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,YAAY,EAAE,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACjK,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,uBAAe,CAAC,QAAQ,CAAC;YACvH,IAAI,MAAM,KAAK,uBAAe,CAAC,OAAO,EAAE;gBACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,sDAAsD,CAAC,CAAC,CAAC;gBAClI,OAAO,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;aACvD;YACD,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,aAAa,CAAC,cAAc,EAAE,CAAC;QAC9H,CAAC;QAEO,yBAAyB,CAAC,eAAiC;YAClE,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;QACzF,CAAC;QAEO,KAAK,CAAC,2BAA2B,CAAC,eAAiC,EAAE,MAA8D,EAAE,SAAwB,EAAE,MAAoB,EAAE,UAA8C,EAAE,MAAmC,EAAE,eAAwB,KAAK;YAC9S,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,KAAK,CAAC;aACb;YACD,IAAI,cAAc,GAA+B,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClI,IAAI,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC/D,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;YAC1M,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,iBAAyB,CAAC,EAAE;gBAC1G,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAC3B,SAAS,GAAG,IAAI,CAAC;aACjB;YACD,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;gBACrC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,uHAAuH,CAAC,CAAC,CAAC;gBAC/L,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,WAAW,CAAC,UAAU,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChE,KAAK,IAAI,IAAI,IAAI,WAAW,CAAC,UAAU,EAAE;oBACxC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;iBACxC;aACD;YACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAChE,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;aAC1D;iBAAM;gBACN,KAAK,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,EAAE;oBACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB;aACD;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,oBAAoB,CAAC,eAAiC;YAC7D,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACxE,OAAO,OAAO,CAAC,OAAO,CAAqC,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC,CAAC;QACpH,CAAC;QAIO,2BAA2B;YAClC,IAAI,gBAAgB,GAAuB,EAAE,CAAC;YAC9C,IAAI,uBAAuB,GAAuB,EAAE,CAAC;YACrD,IAAI,eAAe,GAAG,uBAAe,CAAC,QAAQ,CAAC;YAC/C,IAAI,aAAa,iBAA2B,CAAC;YAC7C,IAAI,SAAiC,CAAC;YACtC,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,mBAA0B,EAAE;gBACtE,IAAI,eAAe,GAAqB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACtF,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACvC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;gBAC/D,MAAM,aAAa,GAA4B;oBAC9C,sBAAsB,EAAE,eAAe;iBACvC,CAAC;gBACF;;;;kBAIE;gBACF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;gBAC5E,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;aAC/D;iBAAM,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,sBAA6B,EAAE;gBAChF,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBAC/C,KAAK,IAAI,eAAe,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE;oBACvE,IAAI,aAAa,KAAK,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAE;wBACrE,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;qBACvC;yBAAM;wBACN,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC9C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CACtC,6BAA6B,EAC7B,+IAA+I,EAC/I,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC9B;iBACD;aACD;YACD,OAAO,CAAC,gBAAgB,EAAE,uBAAuB,EAAE,eAAe,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;QAC/F,CAAC;QAEO,sBAAsB,CAAC,eAAiC;YAC/D,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,uBAAe,CAAC,QAAQ,CAAC;aAChC;YACD,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC;QAEO,wBAAwB,CAAC,eAAiC;YACjE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE;gBACZ,sBAAgC;aAChC;YACD,OAAO,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC;QAES,gBAAgB,CAAC,eAAiC,EAAE,MAAe;YAC5E,IAAI,MAAM,CAAC;YACX,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,kBAAyB,EAAE;gBACrE,MAAM,GAAG,SAAS,CAAC;aACnB;iBAAM;gBACN,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAA6C,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC9I,QAAQ,MAAM,EAAE;oBACf,KAAK,sBAAc,CAAC,IAAI;wBAAE,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;wBAAC,MAAM;oBACnF,KAAK,sBAAc,CAAC,SAAS;wBAAE,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;wBAAC,MAAM;oBACnG,KAAK,sBAAc,CAAC,aAAa;wBAAE,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;wBAAC,MAAM;oBACjG,OAAO,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;iBACtE;aACD;YACD,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;aACpD;YACD,IAAI,WAAW,GAAc,MAAc,CAAC,YAAY,CAAC;YACzD,IAAI,WAAW,EAAE;gBAChB,IAAI,UAAU,GAAG,KAAK,CAAC;gBACvB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;oBACrC,IAAI,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;wBACpC,UAAU,GAAG,IAAI,CAAC;wBAClB,MAAM;qBACN;iBACD;gBACD,IAAI,UAAU,EAAE;oBACf,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,6GAA6G,CAAC,CAAC,CAAC;oBACtL,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;iBACnD;aACD;YACD,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;QAClD,CAAC;QAEM,UAAU;YAChB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,OAAO,IAAI,CAAC,WAAW,YAAY,uCAAkB,CAAC;aACtD;YACD,OAAO,IAAI,CAAC,eAAe,KAAK,uBAAe,CAAC,QAAQ,CAAC;QAC1D,CAAC;QAEM,eAAe;YACrB,MAAM,WAAW,GAAwB,IAAI,CAAC;YAC9C,OAAO,IAAI,KAAM,SAAQ,gBAAM;gBAC9B;oBACC,KAAK,CAAC,mBAAmB,CAAC,EAAE,EAAE,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzJ,CAAC;aACD,CAAC;QACH,CAAC;QAEO,WAAW,CAAC,GAAQ;YAC3B,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,IAAI,GAAG,YAAY,sBAAS,EAAE;gBAC7B,IAAI,UAAU,GAAc,GAAG,CAAC;gBAChC,IAAI,WAAW,GAAG,UAAU,CAAC,IAAI,0BAA6B,IAAI,UAAU,CAAC,IAAI,wBAA2B,IAAI,UAAU,CAAC,IAAI,uBAA0B,CAAC;gBAC1J,IAAI,cAAc,GAAG,UAAU,CAAC,IAAI,wBAA2B,CAAC;gBAChE,IAAI,WAAW,IAAI,cAAc,EAAE;oBAClC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC;4BACzE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,gBAAgB,CAAC;4BACvG,GAAG,EAAE,GAAG,EAAE;gCACT,IAAI,WAAW,EAAE;oCAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;iCACzB;qCAAM;oCACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;iCAC3B;4BACF,CAAC;yBACD,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACN,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;iBAChG;aACD;iBAAM,IAAI,GAAG,YAAY,KAAK,EAAE;gBAChC,IAAI,KAAK,GAAU,GAAG,CAAC;gBACvB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC9C,UAAU,GAAG,KAAK,CAAC;aACnB;iBAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC/B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAS,GAAG,CAAC,CAAC;aAC5C;iBAAM;gBACN,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,uEAAuE,CAAC,CAAC,CAAC;aACjJ;YACD,IAAI,UAAU,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB;QACF,CAAC;QAEO,aAAa;YACpB,OAAO,IAAI,CAAC;QACb,CAAC;QAEO,UAAU;YACjB,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAU,uCAAuB,CAAC,CAAC;QAC7E,CAAC;QAEO,KAAK,CAAC,0BAA0B,CAAC,KAAa,EAAE,QAAiB,KAAK,EAAE,OAAgB,KAAK,EAAE,aAAkC,EAAE,iBAA0B,IAAI;YACxK,IAAI,KAAK,GAA+B,EAAE,CAAC;YAC3C,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChE,OAAO,EAAE,CAAC;aACV;YACD,MAAM,kBAAkB,GAAG,CAAC,IAAU,EAAsB,EAAE;gBAC7D,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC7B,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACpB,UAAU,GAAG,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;oBAClE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;iBAClB;qBAAM;oBACN,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpB;gBACD,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;YAE7J,CAAC,CAAC;YACF,SAAS,WAAW,CAAC,OAA6C,EAAE,KAAa,EAAE,UAAkB;gBACpG,IAAI,KAAK,CAAC,MAAM,EAAE;oBACjB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;iBACvD;gBACD,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;oBACvB,IAAI,KAAK,GAAuB,kBAAkB,CAAC,IAAI,CAAC,CAAC;oBACzD,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE,SAAS,EAAE,wBAAS,CAAC,WAAW,CAAC,iCAAiB,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,eAAe,EAAE,gBAAgB,CAAC,EAAE,CAAC,CAAC;oBACpI,IAAI,aAAa,IAAI,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,CAAC,EAAE;wBACnD,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;qBAC/B;yBAAM;wBACN,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACpB;iBACD;YACF,CAAC;YACD,IAAI,OAA6B,CAAC;YAClC,IAAI,KAAK,EAAE;gBACV,OAAO,GAAG,EAAE,CAAC;gBACb,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvB,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;qBAAM;oBACN,IAAI,iBAAiB,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;oBACrD,IAAI,MAAM,GAAW,EAAE,CAAC;oBACxB,IAAI,SAAS,GAAgB,IAAI,GAAG,EAAE,CAAC;oBACvC,IAAI,UAAU,GAAW,EAAE,CAAC;oBAC5B,IAAI,QAAQ,GAAW,EAAE,CAAC;oBAC1B,IAAI,OAAO,GAA4B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC3D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;wBACjC,IAAI,GAAG,EAAE;4BACR,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;yBACpB;oBACF,CAAC,CAAC,CAAC;oBACH,iBAAiB,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;wBAChD,MAAM,GAAG,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC;wBACzC,IAAI,GAAG,EAAE;4BACR,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACnB,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;4BACxB,IAAI,IAAI,EAAE;gCACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAClB;yBACD;oBACF,CAAC,CAAC,CAAC;oBACH,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;wBACjC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;4BAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,IAAI,CAAC,EAAE;gCACpG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BACtB;iCAAM;gCACN,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BACpB;yBACD;qBACD;oBACD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;oBACnC,IAAI,cAAc,EAAE;wBACnB,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC,CAAC;qBAClF;oBACD,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7D,WAAW,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;oBACjF,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACzD,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC;iBAC3E;aACD;iBAAM;gBACN,IAAI,IAAI,EAAE;oBACT,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;oBACnC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACnD;gBACD,OAAO,GAAG,KAAK,CAAC,GAAG,CAAqB,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1E;YACD,KAAK,GAAG,EAAE,CAAC;YACX,OAAO,OAAO,CAAC;QAChB,CAAC;QAEO,KAAK,CAAC,qBAAqB,CAAC,WAAmB,EAAE,YAAiC;YACzF,OAAO,6BAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;QACzI,CAAC;QAEO,KAAK,CAAC,aAAa,CAAC,KAA+B,EAAE,WAAmB,EAAE,YAAiC,EAAE,QAAiB,KAAK,EAAE,OAAgB,KAAK,EAAE,aAAkC,EAAE,iBAAwC;YAC/O,MAAM,WAAW,GAAG,IAAI,sCAAuB,EAAE,CAAC;YAClD,MAAM,iBAAiB,GAAsB,WAAW,CAAC,KAAK,CAAC;YAC/D,IAAI,cAAc,GAAG,IAAI,OAAO,CAAuC,CAAC,OAAO,EAAE,EAAE;gBAClF,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACzB,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC;iBAC5E;qBAAM;oBACN,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;iBACnG;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAY,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAU,KAAK,EAAE,OAAO,EAAE,EAAE;oBACnF,MAAM,cAAc,CAAC;oBACrB,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CAAC,EAAE,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,EAAE;oBACpC,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE;wBAC7B,YAAY,CAAC,KAAK,CAAC,CAAC;wBACpB,OAAO,CAAC,IAAI,CAAC,CAAC;oBACf,CAAC,EAAE,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAU,qCAAqB,CAAC,EAAE;gBAC5H,OAA4B,CAAC,MAAM,cAAc,CAAC,CAAC,CAAC,CAAE,CAAC;aACvD;YAED,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBACnD,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAU,qCAAqB,CAAC,EAAE;oBACjG,WAAW,CAAC,MAAM,EAAE,CAAC;iBACrB;qBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,YAAY,EAAE;oBAClD,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC3B;qBAAM,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnF,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC/C,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC;gBACD,OAAO,OAAO,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,GAAmC,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;YACxF,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAEjC,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE;gBACvC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;gBAChC,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;iBACtC;qBAAM,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBACtB;YACF,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YACnB,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC1B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;gBACpB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,EAAE,CAAC;YAEd,OAAO,IAAI,OAAO,CAAwC,OAAO,CAAC,EAAE;gBACnE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;oBAC5C,IAAI,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBAC3E,IAAI,iBAAiB,CAAC,uBAAuB,EAAE;wBAC9C,sCAAsC;wBACtC,MAAM,IAAI,GAAG,CAAC,MAAM,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpC,IAAU,IAAK,CAAC,IAAI,EAAE;4BACrB,SAAS,GAAuB,IAAI,CAAC;yBACrC;qBACD;oBACD,MAAM,CAAC,OAAO,EAAE,CAAC;oBACjB,IAAI,CAAC,SAAS,EAAE;wBACf,OAAO,CAAC,SAAS,CAAC,CAAC;qBACnB;oBACD,OAAO,CAAC,SAAS,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,yBAAyB;YAChC,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;QAC7F,CAAC;QAEO,KAAK,CAAC,kBAAkB,CAAC,KAAa;YAC7C,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE;gBACtC,OAAO;aACP;YACD,IAAI,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACtD,IAAI,OAAO,GAA4B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBACpC,IAAI,GAAG,EAAE;oBACR,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;iBACpB;YACF,CAAC,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,CAAC,GAAG,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YACzD,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;gBAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBACxB,IAAI,IAAI,EAAE;oBACT,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;iBACrC;aACD;YACD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,oBAAyB,CAAC;QAC/F,CAAC;QAEO,yBAAyB;YAChC,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBACzE,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAC9B,kBAAQ,CAAC,IAAI,EACb,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,oFAAoF,EAAE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACzL,CAAC;oBACA,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,kBAAkB,CAAC;oBAC/D,WAAW,EAAE,IAAI;oBACjB,GAAG,EAAE,GAAG,EAAE;wBACT,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,CAAC,+BAA+B,EAAE,IAAI,kCAA6C,CAAC;wBACjI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBACjC,CAAC;iBACD,CAAC,CACF,CAAC;YAEF,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC;QAEO,KAAK,CAAC,KAAK;YAClB,OAAO,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC,qBAAqB,CACpE;gBACC,KAAK,EAAE,IAAI;gBACX,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,kGAAkG,CAAC;aACrJ,CAAC,CAAC,KAAK,IAAI,CAAC;QACf,CAAC;QAEO,cAAc,CAAC,GAAS;YAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC7B,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;oBAC7C,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;oBAC5C,IAAI,UAAU,GAAqB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACxG,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,sBAA6B,EAAE;wBACzE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,aAAc,CAAC,CAAC;qBACnE;oBACD,UAAU,CAAC,IAAI,CAAC,kCAAoB,CAAC,CAAC;oBACtC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;wBAC3B,IAAI,IAAI,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;wBACnD,IAAI,IAAI,EAAE;4BACT,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;gCACvC,0FAA0F;4BAC3F,CAAC,CAAC,CAAC;4BACH,OAAO;yBACP;qBACD;oBACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;gBACtC,CAAC,EAAE,GAAG,EAAE;oBACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;aACH;iBAAM;gBACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxB;QACF,CAAC;QAEO,oBAAoB,CAAC,MAAmB;YAC/C,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,EAAE;gBAC7C,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,CAAS,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC;aACvF;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACvE,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAClC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBAC5B,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC;iBACjB;gBACD,IAAI,MAAM,GAAW,EAAE,CAAC;gBACxB,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACrB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;4BAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAClB;6BAAM,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;4BAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;gCAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAClB;iCAAM;gCACN,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;gCACnC,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;oCAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCAClB;6BACD;yBACD;qBACD;gBACF,CAAC,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YACf,CAAC,CAAC,CAAC;YACH,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;QAC3B,CAAC;QAEO,gBAAgB,CAAC,KAAc;YACtC,MAAM,QAAQ,GAAG,CAAC,IAA6B,EAAE,EAAE;gBAClD,IAAI,IAAI,KAAK,SAAS,EAAE;oBACvB,OAAO;iBACP;gBACD,IAAI,IAAI,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBACzB;qBAAM;oBACN,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;wBAC3F,0FAA0F;oBAC3F,CAAC,CAAC,CAAC;iBACH;YACF,CAAC,CAAC;YAEF,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,wBAAwB,CAAC,CAAC;YAEtF,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC1C,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;oBACxD,IAAI,UAAU,GAAsE,SAAS,CAAC;oBAC9F,IAAI,CAAC,KAAK,EAAE;wBACX,UAAU,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;qBACzC;oBACD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAW,CAAC,KAAK,EAAE,WAAW,EAChE;wBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,8BAA8B,EAAE,0BAA0B,CAAC;wBAC/E,IAAI,EAAE,IAAI;qBACV,EACD,IAAI,CAAC;wBACL,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBACd,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACN,IAAI,CAAC,qBAAqB,CAAC,WAAW,EACrC;wBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,0BAA0B,CAAC;wBAC3E,IAAI,EAAE,IAAI;qBACV,CAAC;wBACF,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAChB;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,gBAAgB;YACvB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YAED,uCAAsB,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC1C,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,cAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACxE,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,CAAC;oBACjD,IAAI,aAAa,EAAE;wBAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;qBAC/C;yBAAM;wBACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;qBAClC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,iBAAiB,CAAC,KAAa;YACtC,IAAI,IAAI,GAAW,EAAE,CAAC;YACtB,IAAI,QAAQ,GAAW,EAAE,CAAC;YAC1B,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gBACvB,IAAI,IAAI,CAAC,uBAAuB,CAAC,SAAS,4BAAsB,EAAE;oBACjE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB;qBAAM,IAAI,IAAI,CAAC,uBAAuB,CAAC,SAAS,sBAAmB,EAAE;oBACrE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;qBAAM;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAChB;aACD;YACD,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QAClC,CAAC;QAEO,eAAe;YACtB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;aACP;YACD,IAAI,OAAO,GAAqB;gBAC/B,QAAQ,iBAAyB;gBACjC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,yBAAyB,CAAC;aAChF,CAAC;YACF,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;gBACnD,MAAM,UAAU,GAAsB,EAAE,CAAC;gBACzC,KAAK,MAAM,UAAU,IAAI,KAAK,EAAE;oBAC/B,KAAK,MAAM,IAAI,IAAI,MAAA,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,0CAAE,YAAY,EAAE;wBAC9D,IAAI,CAAC,CAAA,MAAA,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,0CAAE,YAAY,CAAC,IAAI,EAAE,uBAAuB,CAAC,KAAK,MAAK,iBAAS,CAAC,KAAK,CAAC;4BACvG,CAAC,CAAA,MAAA,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,0CAAE,YAAY,CAAC,IAAI,EAAE,uBAAuB,CAAC,SAAS,6BAAsB,CAAC,EAAE;4BAC5G,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;yBACjE;qBACD;iBACD;gBACD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;wBACtD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;4BAC9E,0FAA0F;wBAC3F,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;oBACH,OAAO;iBACP;gBAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC5D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrB,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;wBACxD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;gCAC7E,0FAA0F;4BAC3F,CAAC,CAAC,CAAC;4BACH,OAAO;yBACP;6BAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC9C,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;yBAC/B;qBACD;oBACD,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EACvB,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,8BAA8B,CAAC,EACzE;4BACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,qDAAqD,CAAC;4BACrG,IAAI,EAAE,IAAI;yBACV,EACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;4BACpB,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;4BACnE,IAAI,IAAI,KAAK,SAAS,EAAE;gCACvB,OAAO;6BACP;4BACD,IAAI,IAAI,KAAK,IAAI,EAAE;gCAClB,IAAI,CAAC,4BAA4B,EAAE,CAAC;gCACpC,OAAO;6BACP;4BACD,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;gCAC3F,0FAA0F;4BAC3F,CAAC,CAAC,CAAC;wBACJ,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC;QAEO,cAAc;YACrB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,OAAO;aACP;YACD,IAAI,OAAO,GAAqB;gBAC/B,QAAQ,iBAAyB;gBACjC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,+BAA+B,EAAE,wBAAwB,CAAC;aAC9E,CAAC;YACF,IAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBAClE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACxD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;4BAC7E,0FAA0F;wBAC3F,CAAC,CAAC,CAAC;wBACH,OAAO;qBACP;yBAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9C,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC/B;iBACD;gBACD,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EACvB,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,6BAA6B,CAAC,EACvE;wBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,+CAA+C,CAAC;wBACtG,IAAI,EAAE,IAAI;qBACV,EAAE,IAAI,CACP,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBAChB,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;wBACnE,IAAI,IAAI,KAAK,SAAS,EAAE;4BACvB,OAAO;yBACP;wBACD,IAAI,IAAI,KAAK,IAAI,EAAE;4BAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BACzB,OAAO;yBACP;wBACD,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,eAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE;4BACtE,0FAA0F;wBAC3F,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC;QAEO,mBAAmB,CAAC,GAAS;YACpC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,GAAG,KAAK,cAAc,EAAE;gBAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,OAAO;aACP;YACD,IAAI,YAAY,GAAG,CAAC,OAAyB,EAAE,EAAE;gBAChD,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE,EAClD,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,4BAA4B,CAAC,EACzE;oBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,8BAA8B,CAAC;oBAChF,IAAI,EAAE,SAAS;iBACf,EACD,KAAK,EAAE,IAAI,EACX,SAAS,EACT,CAAC;wBACA,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,mBAAmB,CAAC;wBAChF,EAAE,EAAE,cAAc;wBAClB,IAAI,EAAE,SAAS;qBACf,CAAC,CACF,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,cAAc,EAAE;wBACzC,IAAI,CAAC,YAAY,EAAE,CAAC;qBACpB;oBACD,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnE,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;wBACxC,OAAO;qBACP;oBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YACF,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,OAAwB,CAAC;gBAC7B,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC7B,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAChC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBACtB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;4BACvB,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gCAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gCACrB,OAAO;6BACP;yBACD;wBACD,YAAY,CAAC,OAAO,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;iBACH;qBAAM;oBACN,YAAY,EAAE,CAAC;iBACf;aACD;iBAAM;gBACN,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC/B,IAAI,MAAM,EAAE;wBACX,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;4BACtC,sCAAsC;4BACtC,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;4BAC5B,IAAI,QAAQ,CAAC,OAAO,EAAE;gCACrB,OAAO;6BACP;4BACD,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,4BAA0C,EAAE;gCAC7E,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,uIAAuI,CAAC,CAAC,CAAC;6BACnN;iCAAM;gCACN,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,kCAAkC,CAAC,CAAC,CAAC;6BAC3G;wBACF,CAAC,CAAC,CAAC;qBACH;gBACF,CAAC,CAAC,CAAC;aACH;QACF,CAAC;QAEO,qBAAqB,CAAC,GAAS;YACtC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,YAAY,GAAG,CAAC,OAAyB,EAAE,EAAE;gBAChD,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE,EAClD,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,4BAA4B,CAAC,EACvE;oBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,oBAAoB,CAAC;oBACxE,IAAI,EAAE,IAAI;iBACV,EACD,KAAK,EAAE,IAAI,CACX,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACd,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnE,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;wBACxC,OAAO;qBACP;oBACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YACF,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,OAAwB,CAAC;gBAC7B,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC7B,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAChC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBACtB,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;4BACvB,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gCAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gCACnB,OAAO;6BACP;yBACD;wBACD,YAAY,CAAC,OAAO,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;iBACH;qBAAM;oBACN,YAAY,EAAE,CAAC;iBACf;aACD;iBAAM;gBACN,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;oBAC1C,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC7B,OAAO;qBACP;oBACD,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;aACH;QACF,CAAC;QAEO,iBAAiB,CAAC,GAAS;YAClC,IAAI,MAAM,GAA6C,SAAS,CAAC;YACjE,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACxB,MAAM,GAAG,GAAG,CAAC;aACb;iBAAM,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAE,GAAsB,CAAC,IAAI,CAAC,EAAE;gBAC/D,MAAM,GAAG,sBAAc,CAAC,oBAAoB,CAAC,GAAqB,EAAE,OAAO,CAAC,CAAC;aAC7E;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,cAAc,CAAC,UAAuD;YAC7E,OAAO,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1E,CAAC;QAEO,YAAY,CAAC,QAAa,EAAE,UAAkB;YACrD,IAAI,iBAAiB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBAC5F,MAAM,UAAU,GAAY,CAAC,CAAC,IAAI,CAAC;gBACnC,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAA6C,OAAO,CAAC,CAAC;gBAC3G,IAAI,gBAAyB,CAAC;gBAC9B,IAAI,MAA2B,CAAC;gBAChC,QAAQ,UAAU,EAAE;oBACnB,KAAK,sBAAc,CAAC,IAAI;wBAAE,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;wBAAC,MAAM,eAA2B,CAAC;wBAAC,MAAM;oBAClI,KAAK,sBAAc,CAAC,aAAa;wBAAE,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;wBAAC,MAAM,oBAAgC,CAAC;wBAAC,MAAM;oBACrJ;wBAAS,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAAC,MAAM,2BAAuC,CAAC;iBAClH;gBACD,IAAI,OAAO,CAAC;gBACZ,IAAI,CAAC,gBAAgB,EAAE;oBACtB,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA,GAAA,4BAAgB,CAAA,EAAE,EAAE,EAAE,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,wBAAwB,CAAC,EAAE,CAAC,CAAC;oBAClK,IAAI,CAAC,kBAAkB,EAAE;wBACxB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;qBAClC;oBACD,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;oBACrC,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAO,CAAC;oBAC7D,IAAI,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE;wBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;qBACjH;oBACD,iBAAiB,GAAG,IAAI,CAAC;oBASzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAsD,sBAAsB,EAAE;wBAC7G,UAAU,EAAE,kBAAkB,CAAC,EAAE;wBACjC,UAAU,EAAE,kBAAkB,CAAC,UAAU;qBACzC,CAAC,CAAC;iBACH;gBAED,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;oBAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;wBAChF,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAC3B,CAAC,CAAC,CAAC;iBACH;qBAAM,IAAI,UAAU,IAAI,CAAC,gBAAgB,IAAI,OAAO,CAAC,EAAE;oBACvD,IAAI,OAAO,EAAE;wBACZ,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;qBAC5E;oBACD,OAAO,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC;iBACtB;gBACD,OAAO,SAAS,CAAC;YAClB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpB,IAAI,CAAC,QAAQ,EAAE;oBACd,OAAO;iBACP;gBACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;oBAC7B,QAAQ;oBACR,OAAO,EAAE;wBACR,MAAM,EAAE,iBAAiB,CAAC,2CAA2C;qBACrE;iBACD,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,WAAW,CAAC,KAAqB;YACxC,IAAI,SAAS,GAAoC,KAAY,CAAC;YAC9D,OAAO,SAAS,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;QACtC,CAAC;QAEO,aAAa,CAAC,IAAU;YAC/B,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aACtC;iBAAM,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACtB;iBAAM,IAAI,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACpC,cAAc;aACd;QACF,CAAC;QAEO,eAAe,CAAC,SAA6C;YACpE,IAAI,CAAC,SAAS,EAAE;gBACf,OAAO;aACP;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;gBAChC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACnC;iBAAM,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,kBAAyB,CAAC,EAAE;gBAClG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,sBAAc,CAAC,SAAS,CAAC,CAAC;aAC/F;iBAAM;gBACN,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAc,CAAC,IAAI,CAAC,CAAC;gBAC9D,IAAI,QAAQ,EAAE;oBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,sBAAc,CAAC,IAAI,CAAC,CAAC;iBACjD;aACD;QACF,CAAC;QAEM,kBAAkB,CAAC,IAA4B;YACrD,IAAI,WAA+B,CAAC;YACpC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,IAAI,EAAE;gBAC9C,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,eAAe,CAAC,CAAC;aAC1E;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,sBAAc,CAAC,aAAa,EAAE;gBAC9D,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC1C;iBAAM,IAAI,IAAI,CAAC,wBAAwB,EAAE,EAAE;gBAC3C,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAChD,IAAI,eAAe,EAAE;oBACpB,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC;iBACnC;aACD;YACD,OAAO,WAAW,CAAC;QACpB,CAAC;QAEO,KAAK,CAAC,iBAAiB;YAC9B,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBAC1B,OAAO;aACP;YAED,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,WAA6B,CAAC;YAClC,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;aACrC;iBAAM;gBACN,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;aAC7C;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAiC,CAAC,MAAM,EAAE,EAAE;gBACrG,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;YAC9G,CAAC,CAAC,CAAC;YAEH,IAAI,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,sCAAsC,CAAC,CAAC;YACrG,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;YACjF,MAAM,WAAW,GAAG,IAAI,sCAAuB,EAAE,CAAC;YAClD,MAAM,iBAAiB,GAAsB,WAAW,CAAC,KAAK,CAAC;YAC/D,IAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC/C,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;oBACnC,IAAI,OAAO,GAA6C,EAAE,CAAC;oBAC3D,IAAI,iBAAiB,GAAY,IAAI,CAAC;oBACtC,IAAI,KAAK,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;oBAC1B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC/D,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;4BACvB,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;4BACpK,IAAI,CAAC,uBAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gCAC9B,iBAAiB,GAAG,KAAK,CAAC;6BAC1B;yBACD;qBACD;oBACD,IAAI,iBAAiB,EAAE;wBACtB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC;wBAC7D,IAAI,OAAO,CAAC,MAAM,EAAE;4BACnB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;yBACpC;wBACD,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC/E;oBACD,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE;wBACjD,WAAW,CAAC,MAAM,EAAE,CAAC;qBACrB;oBACD,OAAO,OAAO,CAAC;gBAChB,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAY,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAU,KAAK,EAAE,OAAO,EAAE,EAAE;oBACnF,MAAM,OAAO,CAAC;oBACd,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CAAC,EAAE,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,EAAE;oBACpC,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE;wBAC7B,YAAY,CAAC,KAAK,CAAC,CAAC;wBACpB,OAAO,CAAC,IAAI,CAAC,CAAC;oBACf,CAAC,EAAE,GAAG,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAU,qCAAqB,CAAC,EAAE;gBACrH,MAAM,KAAK,GAAa,CAAC,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,KAAK,CAAC,IAAI,EAAE;oBACf,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAC5B,OAAO;iBACP;aACD;YAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAClC,EAAE,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,4BAA4B,CAAC,EAAE,EAAE,iBAAiB,CAAC;gBACvG,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;gBACxB,IAAI,iBAAiB,CAAC,uBAAuB,EAAE;oBAC9C,sCAAsC;oBACtC,MAAM,IAAI,GAAG,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAU,IAAK,CAAC,IAAI,EAAE;wBACrB,SAAS,GAA2B,IAAI,CAAC;qBACzC;iBACD;gBACD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,4BAA4B;YACnC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC1B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;wBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,OAAO;qBACP;oBACD,IAAI,YAA8B,CAAC;oBACnC,IAAI,aAAiC,CAAC;oBACtC,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,iBAAS,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,SAAS,4BAAsB,EAAE;4BAC3H,YAAY,GAAG,IAAI,CAAC;4BACpB,MAAM;yBACN;qBACD;oBACD,IAAI,YAAY,EAAE;wBACjB,aAAa,GAAG;4BACf,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,iDAAiD,EAAE,YAAY,CAAC,iBAAiB,EAAE,CAAC;4BAC9I,IAAI,EAAE,YAAY;4BAClB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;yBACnF,CAAC;qBACF;oBACD,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EACvB,GAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,sDAAsD,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC;4BAChJ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;4BACd,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;4BACnE,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;gCAC5C,OAAO;6BACP;4BACD,IAAI,IAAI,KAAK,YAAY,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gCACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;6BACtB;4BACD,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oCACnF,IAAI,YAAY,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;wCAC9E,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;qCACxD;gCACF,CAAC,CAAC,CAAC;6BACH;wBACF,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;QACF,CAAC;QAEO,2BAA2B;YAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC1B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;wBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,OAAO;qBACP;oBACD,IAAI,YAA8B,CAAC;oBACnC,IAAI,aAAiC,CAAC;oBAEtC,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,iBAAS,CAAC,IAAI,IAAI,IAAI,CAAC,uBAAuB,CAAC,SAAS,4BAAsB,EAAE;4BAC1H,YAAY,GAAG,IAAI,CAAC;4BACpB,MAAM;yBACN;qBACD;oBACD,IAAI,YAAY,EAAE;wBACjB,aAAa,GAAG;4BACf,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,iDAAiD,EAAE,YAAY,CAAC,iBAAiB,EAAE,CAAC;4BAC7I,IAAI,EAAE,YAAY;4BAClB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;yBACnF,CAAC;qBACF;oBAED,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EACvB,GAAG,CAAC,QAAQ,CAAC,iCAAiC,EAAE,qDAAqD,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;4BAC7J,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;4BACnE,IAAI,CAAC,IAAI,EAAE;gCACV,OAAO;6BACP;4BACD,IAAI,IAAI,KAAK,YAAY,IAAI,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gCACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;6BACtB;4BACD,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gCAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oCAClF,IAAI,YAAY,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC,oBAAY,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;wCAC9E,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;qCACvD;gCACF,CAAC,CAAC,CAAC;6BACH;wBACF,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;QACF,CAAC;QAEM,KAAK,CAAC,YAAY;YACxB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;gBAC1B,OAAO;aACP;YACD,MAAM,WAAW,GAAW,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YACxD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,IAAI,CAAC,WAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;iBAAM;gBACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,EACvC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,oCAAoC,CAAC,EAC9E;oBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,oBAAoB,CAAC;oBACxE,IAAI,EAAE,IAAI;iBACV,EACD,KAAK,EAAE,IAAI,CACX,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;oBAChB,IAAI,IAAI,GAA4B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnE,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;wBACxC,OAAO;qBACP;oBACD,IAAI,CAAC,WAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;aACH;QACF,CAAC;QAEO,KAAK,CAAC,iBAAiB,CAAC,MAAwB;YACvD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAC1D,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC7C,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;gBAClE,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;gBACtD,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;aAC5B;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,WAAW,CAAC,IAAU,EAAE,gBAAyB,EAAE,YAAwF;;YAClJ,IAAI,CAAC,kBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBACzB,OAAO;aACP;YACD,MAAM,aAAa,GAAQ;gBAC1B,KAAK,EAAE,IAAI,CAAC,MAAM;aAClB,CAAC;YACF,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;YACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC7E,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACvC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;aAC3C;iBAAM;gBACN,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,mBAAW,CAAC,KAAK,EAAE;oBAC/C,aAAa,CAAC,IAAI,GAAG,mBAAW,CAAC,QAAQ,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC;iBAC7D;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,OAAO,0CAAE,OAAO,CAAA,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,GAAG,0CAAE,OAAO,CAAA,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,KAAK,0CAAE,OAAO,CAAA,EAAE;oBAC3I,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;iBAC1C;qBAAM,IAAI,gBAAgB,EAAE;oBAC5B,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;iBAC5D;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;oBAC/F,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,OAAO,0CAAE,IAAI,CAAA,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,GAAG,0CAAE,IAAI,CAAA,IAAI,CAAC,CAAA,MAAA,YAAY,CAAC,KAAK,0CAAE,IAAI,CAAA,EAAE;wBACxF,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;qBACvC;yBAAM;wBACN,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;qBACtD;iBACD;aACD;YAED,IAAI,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE;gBAC9C,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC;aACvE;YACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE;gBAC9C,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC;aACvE;YACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE;gBACjD,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;aAC1E;YACD,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE;gBACvC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;aACzD;YAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC;YAC5C,MAAM,QAAQ,GAAG,IAAI,kBAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACtK,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;YACzD,IAAI,UAAU,EAAE;gBACf,OAAO,UAAU,CAAC;aAClB;YACD,OAAO;QACR,CAAC;QAEO,KAAK,CAAC,OAAO;YACpB,IAAI,IAAI,CAAC,aAAa,mBAA6B,EAAE;gBACpD,OAAO;aACP;YAED,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,iBAAiB,EAAE,EAAE;gBAC9D,IAAI,CAAC,SAAS,CAAC,aAAK,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,EAAE;oBAC5F,IAAI,SAAS,EAAE;wBACd,IAAI,CAAC,OAAO,EAAE,CAAC;qBACf;gBACF,CAAC,CAAC,CAAC,CAAC;gBACJ,OAAO;aACP;YAED,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,MAAM,SAAS,GAAiB,EAAE,CAAC;YACnC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC3C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAClD,IAAI,IAAI,EAAE;oBACT,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACrB;gBACD,IAAI,CAAC,IAAI,EAAE;oBACV,SAAS;iBACT;gBAED,MAAM,WAAW,GAA2D,EAAE,CAAC;gBAC/E,MAAM,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;gBAClH,MAAM,YAAY,GAAG;oBACpB,OAAO,EAAkB,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;oBACtG,GAAG,EAAkB,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;oBAC9F,KAAK,EAAkB,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;iBAClG,CAAC;gBACF,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAChC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,gBAAgB,EAAE,YAAY,CAAC,CAAC;oBAC1E,IAAI,UAAU,EAAE;wBACf,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC7B;gBACF,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;gBAC7B,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;gBACxC,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;gBAClE,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;gBAChE,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE;oBACrF,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,kBAAkB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;iBACrG;gBACD,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,sBAAsB,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE;oBACzF,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,sBAAsB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;iBACzG;gBACD,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE;oBAC3F,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,wBAAwB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;iBAC3G;aACD;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAQ,CAAC,OAAO,EAC/C,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;gBACvB,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,2IAA2I,CAAC;gBACvL,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,4IAA4I,CAAC,EACjM,CAAC;oBACA,KAAK,EAAE,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,uBAAuB,EAAE,YAAY,CAAC;oBACvI,GAAG,EAAE,KAAK,IAAI,EAAE;wBACf,KAAK,MAAM,OAAO,IAAI,SAAS,EAAE;4BAChC,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;gCACnC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;gCACxB,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC;6BACzB,CAAC,CAAC;yBACH;oBACF,CAAC;iBACD,CAAC,CACF,CAAC;QACH,CAAC;KACD,CAAA;IAzhGA,4EAA4E;IACpD,yCAAqB,GAAG,mCAAmC,CAAC;IAC5D,2CAAuB,GAAG,oCAAoC,CAAC;IAC/D,mDAA+B,GAAG,oCAAoC,CAAC;IAEhF,mDAA+B,GAAW,uBAAuB,CAAC;IAEnE,mCAAe,GAAW,OAAO,CAAC;IAClC,sCAAkB,GAAW,GAAG,CAAC,QAAQ,CAAC,CAAO,EAAE,IAAO,CAAC,CAAC;IAE3D,8BAAU,GAAW,CAAC,CAAC;IAZjB,mBAAmB;QAuCtC,WAAA,qCAAqB,CAAA;QACrB,WAAA,wBAAc,CAAA;QACd,WAAA,uBAAc,CAAA;QACd,WAAA,4BAAa,CAAA;QACb,WAAA,qBAAa,CAAA;QACb,WAAA,0BAAe,CAAA;QACf,WAAA,8BAAc,CAAA;QACd,WAAA,oBAAY,CAAA;QACZ,WAAA,oCAAwB,CAAA;QACxB,WAAA,6BAAiB,CAAA;QACjB,YAAA,4BAAgB,CAAA;QAChB,YAAA,4BAAa,CAAA;QACb,YAAA,8BAAiB,CAAA;QACjB,YAAA,+BAAkB,CAAA;QAClB,YAAA,qDAA6B,CAAA;QAC7B,YAAA,2BAAgB,CAAA;QAChB,YAAA,yBAAe,CAAA;QACf,YAAA,2BAAgB,CAAA;QAChB,YAAA,uBAAc,CAAA;QACd,YAAA,wBAAc,CAAA;QACd,YAAA,mCAAoB,CAAA;QACpB,YAAA,+BAAkB,CAAA;QAClB,YAAA,iDAA4B,CAAA;QAC5B,YAAA,0CAA+B,CAAA;QAC/B,YAAA,0BAAY,CAAA;QACZ,YAAA,mCAAiB,CAAA;QACjB,YAAA,iCAAmB,CAAA;QACnB,YAAA,8BAAsB,CAAA;QACtB,YAAA,8CAA6B,CAAA;QAC7B,YAAA,iDAAgC,CAAA;QAChC,YAAA,iBAAW,CAAA;OArEQ,mBAAmB,CA2hGxC;IA3hGqB,kDAAmB","file":"abstractTaskService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\nimport * as Objects from 'vs/base/common/objects';\nimport * as resources from 'vs/base/common/resources';\nimport * as json from 'vs/base/common/json';\nimport { URI } from 'vs/base/common/uri';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Action } from 'vs/base/common/actions';\nimport { IDisposable, Disposable, IReference } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as Types from 'vs/base/common/types';\nimport { TerminateResponseCode } from 'vs/base/common/processes';\nimport { ValidationStatus, ValidationState } from 'vs/base/common/parsers';\nimport * as UUID from 'vs/base/common/uuid';\nimport * as Platform from 'vs/base/common/platform';\nimport { LRUCache, Touch } from 'vs/base/common/map';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IFileService, IFileStat } from 'vs/platform/files/common/files';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ProblemMatcherRegistry, NamedProblemMatcher } from 'vs/workbench/contrib/tasks/common/problemMatcher';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IProgressService, IProgressOptions, ProgressLocation } from 'vs/platform/progress/common/progress';\n\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\n\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport Constants from 'vs/workbench/contrib/markers/browser/constants';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder, IWorkspace, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IOutputService, IOutputChannel } from 'vs/workbench/contrib/output/common/output';\n\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ITerminalProfileResolverService } from 'vs/workbench/contrib/terminal/common/terminal';\n\nimport { ITaskSystem, ITaskResolver, ITaskSummary, TaskExecuteKind, TaskError, TaskErrors, TaskTerminateResponse, TaskSystemInfo, ITaskExecuteResult } from 'vs/workbench/contrib/tasks/common/taskSystem';\nimport {\n\tTask, CustomTask, ConfiguringTask, ContributedTask, InMemoryTask, TaskEvent,\n\tTaskSet, TaskGroup, GroupType, ExecutionEngine, JsonSchemaVersion, TaskSourceKind,\n\tTaskSorter, TaskIdentifier, KeyedTaskIdentifier, TASK_RUNNING_STATE, TaskRunSource,\n\tKeyedTaskIdentifier as NKeyedTaskIdentifier, TaskDefinition, RuntimeType\n} from 'vs/workbench/contrib/tasks/common/tasks';\nimport { ITaskService, ITaskProvider, ProblemMatcherRunOptions, CustomizationProperties, TaskFilter, WorkspaceFolderTaskResult, USER_TASKS_GROUP_KEY, CustomExecutionSupportedContext, ShellExecutionSupportedContext, ProcessExecutionSupportedContext } from 'vs/workbench/contrib/tasks/common/taskService';\nimport { getTemplates as getTaskTemplates } from 'vs/workbench/contrib/tasks/common/taskTemplates';\n\nimport * as TaskConfig from '../common/taskConfiguration';\nimport { TerminalTaskSystem } from './terminalTaskSystem';\n\nimport { IQuickInputService, IQuickPickItem, QuickPickInput, IQuickPick } from 'vs/platform/quickinput/common/quickInput';\n\nimport { TaskDefinitionRegistry } from 'vs/workbench/contrib/tasks/common/taskDefinitionRegistry';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { RunAutomaticTasks } from 'vs/workbench/contrib/tasks/browser/runAutomaticTasks';\n\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { format } from 'vs/base/common/jsonFormatter';\nimport { ITextModelService, IResolvedTextEditorModel } from 'vs/editor/common/services/resolverService';\nimport { applyEdits } from 'vs/base/common/jsonEdit';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { ITextEditorSelection, TextEditorSelectionRevealType } from 'vs/platform/editor/common/editor';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { isWorkspaceFolder, TaskQuickPickEntry, QUICKOPEN_DETAIL_CONFIG, TaskQuickPick, QUICKOPEN_SKIP_CONFIG, configureTaskIcon } from 'vs/workbench/contrib/tasks/browser/taskQuickPick';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { once } from 'vs/base/common/functional';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { VirtualWorkspaceContext } from 'vs/workbench/browser/contextkeys';\n\nconst QUICKOPEN_HISTORY_LIMIT_CONFIG = 'task.quickOpen.history';\nconst PROBLEM_MATCHER_NEVER_CONFIG = 'task.problemMatchers.neverPrompt';\nconst USE_SLOW_PICKER = 'task.quickOpen.showAll';\n\nexport namespace ConfigureTaskAction {\n\texport const ID = 'workbench.action.tasks.configureTaskRunner';\n\texport const TEXT = nls.localize('ConfigureTaskRunnerAction.label', \"Configure Task\");\n}\n\ntype TaskQuickPickEntryType = (IQuickPickItem & { task: Task; }) | (IQuickPickItem & { folder: IWorkspaceFolder; });\n\nclass ProblemReporter implements TaskConfig.IProblemReporter {\n\n\tprivate _validationStatus: ValidationStatus;\n\n\tconstructor(private _outputChannel: IOutputChannel) {\n\t\tthis._validationStatus = new ValidationStatus();\n\t}\n\n\tpublic info(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Info;\n\t\tthis._outputChannel.append(message + '\\n');\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Warning;\n\t\tthis._outputChannel.append(message + '\\n');\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Error;\n\t\tthis._outputChannel.append(message + '\\n');\n\t}\n\n\tpublic fatal(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Fatal;\n\t\tthis._outputChannel.append(message + '\\n');\n\t}\n\n\tpublic get status(): ValidationStatus {\n\t\treturn this._validationStatus;\n\t}\n}\n\nexport interface WorkspaceFolderConfigurationResult {\n\tworkspaceFolder: IWorkspaceFolder;\n\tconfig: TaskConfig.ExternalTaskRunnerConfiguration | undefined;\n\thasErrors: boolean;\n}\n\ninterface TaskCustomizationTelemetryEvent {\n\tproperties: string[];\n}\n\ninterface CommandUpgrade {\n\tcommand?: string;\n\targs?: string[];\n}\n\nclass TaskMap {\n\tprivate _store: Map<string, Task[]> = new Map();\n\n\tpublic forEach(callback: (value: Task[], folder: string) => void): void {\n\t\tthis._store.forEach(callback);\n\t}\n\n\tprivate getKey(workspaceFolder: IWorkspace | IWorkspaceFolder | string): string {\n\t\tlet key: string | undefined;\n\t\tif (Types.isString(workspaceFolder)) {\n\t\t\tkey = workspaceFolder;\n\t\t} else {\n\t\t\tconst uri: URI | null | undefined = isWorkspaceFolder(workspaceFolder) ? workspaceFolder.uri : workspaceFolder.configuration;\n\t\t\tkey = uri ? uri.toString() : '';\n\t\t}\n\t\treturn key;\n\t}\n\n\tpublic get(workspaceFolder: IWorkspace | IWorkspaceFolder | string): Task[] {\n\t\tconst key = this.getKey(workspaceFolder);\n\t\tlet result: Task[] | undefined = this._store.get(key);\n\t\tif (!result) {\n\t\t\tresult = [];\n\t\t\tthis._store.set(key, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic add(workspaceFolder: IWorkspace | IWorkspaceFolder | string, ...task: Task[]): void {\n\t\tconst key = this.getKey(workspaceFolder);\n\t\tlet values = this._store.get(key);\n\t\tif (!values) {\n\t\t\tvalues = [];\n\t\t\tthis._store.set(key, values);\n\t\t}\n\t\tvalues.push(...task);\n\t}\n\n\tpublic all(): Task[] {\n\t\tlet result: Task[] = [];\n\t\tthis._store.forEach((values) => result.push(...values));\n\t\treturn result;\n\t}\n}\n\ninterface ProblemMatcherDisableMetrics {\n\ttype: string;\n}\ntype ProblemMatcherDisableMetricsClassification = {\n\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\nexport abstract class AbstractTaskService extends Disposable implements ITaskService {\n\n\t// private static autoDetectTelemetryName: string = 'taskServer.autoDetect';\n\tprivate static readonly RecentlyUsedTasks_Key = 'workbench.tasks.recentlyUsedTasks';\n\tprivate static readonly RecentlyUsedTasks_KeyV2 = 'workbench.tasks.recentlyUsedTasks2';\n\tprivate static readonly IgnoreTask010DonotShowAgain_key = 'workbench.tasks.ignoreTask010Shown';\n\n\tprivate static CustomizationTelemetryEventName: string = 'taskService.customize';\n\tpublic _serviceBrand: undefined;\n\tpublic static OutputChannelId: string = 'tasks';\n\tpublic static OutputChannelLabel: string = nls.localize('tasks', \"Tasks\");\n\n\tprivate static nextHandle: number = 0;\n\n\tprivate _schemaVersion: JsonSchemaVersion | undefined;\n\tprivate _executionEngine: ExecutionEngine | undefined;\n\tprivate _workspaceFolders: IWorkspaceFolder[] | undefined;\n\tprivate _workspace: IWorkspace | undefined;\n\tprivate _ignoredWorkspaceFolders: IWorkspaceFolder[] | undefined;\n\tprivate _showIgnoreMessage?: boolean;\n\tprivate _providers: Map<number, ITaskProvider>;\n\tprivate _providerTypes: Map<number, string>;\n\tprotected _taskSystemInfos: Map<string, TaskSystemInfo>;\n\n\tprotected _workspaceTasksPromise?: Promise<Map<string, WorkspaceFolderTaskResult>>;\n\n\tprotected _taskSystem?: ITaskSystem;\n\tprotected _taskSystemListener?: IDisposable;\n\tprivate _recentlyUsedTasksV1: LRUCache<string, string> | undefined;\n\tprivate _recentlyUsedTasks: LRUCache<string, string> | undefined;\n\n\tprotected _taskRunningState: IContextKey<boolean>;\n\n\tprotected _outputChannel: IOutputChannel;\n\tprotected readonly _onDidStateChange: Emitter<TaskEvent>;\n\tprivate _waitForSupportedExecutions: Promise<void>;\n\tprivate _onDidRegisterSupportedExecutions: Emitter<void> = new Emitter();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IMarkerService protected readonly markerService: IMarkerService,\n\t\t@IOutputService protected readonly outputService: IOutputService,\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IWorkspaceContextService protected readonly contextService: IWorkspaceContextService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IModelService protected readonly modelService: IModelService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IConfigurationResolverService protected readonly configurationResolverService: IConfigurationResolverService,\n\t\t@ITerminalService private readonly terminalService: ITerminalService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IDialogService protected readonly dialogService: IDialogService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ITerminalProfileResolverService private readonly terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis._workspaceTasksPromise = undefined;\n\t\tthis._taskSystem = undefined;\n\t\tthis._taskSystemListener = undefined;\n\t\tthis._outputChannel = this.outputService.getChannel(AbstractTaskService.OutputChannelId)!;\n\t\tthis._providers = new Map<number, ITaskProvider>();\n\t\tthis._providerTypes = new Map<number, string>();\n\t\tthis._taskSystemInfos = new Map<string, TaskSystemInfo>();\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => {\n\t\t\tif (!this._taskSystem && !this._workspaceTasksPromise) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet folderSetup = this.computeWorkspaceFolderSetup();\n\t\t\tif (this.executionEngine !== folderSetup[2]) {\n\t\t\t\tthis.disposeTaskSystemListeners();\n\t\t\t\tthis._taskSystem = undefined;\n\t\t\t}\n\t\t\tthis.updateSetup(folderSetup);\n\t\t\tthis.updateWorkspaceTasks();\n\t\t}));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(() => {\n\t\t\tif (!this._taskSystem && !this._workspaceTasksPromise) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._taskSystem || this._taskSystem instanceof TerminalTaskSystem) {\n\t\t\t\tthis._outputChannel.clear();\n\t\t\t}\n\n\t\t\tthis.setTaskLRUCacheLimit();\n\t\t\tthis.updateWorkspaceTasks(TaskRunSource.ConfigurationChange);\n\t\t}));\n\t\tthis._taskRunningState = TASK_RUNNING_STATE.bindTo(contextKeyService);\n\t\tthis._onDidStateChange = this._register(new Emitter());\n\t\tthis.registerCommands();\n\t\tthis.configurationResolverService.contributeVariable('defaultBuildTask', async (): Promise<string | undefined> => {\n\t\t\tlet tasks = await this.getTasksForGroup(TaskGroup.Build);\n\t\t\tif (tasks.length > 0) {\n\t\t\t\tlet { defaults, users } = this.splitPerGroupType(tasks);\n\t\t\t\tif (defaults.length === 1) {\n\t\t\t\t\treturn defaults[0]._label;\n\t\t\t\t} else if (defaults.length + users.length > 0) {\n\t\t\t\t\ttasks = defaults.concat(users);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet entry: TaskQuickPickEntry | null | undefined;\n\t\t\tif (tasks && tasks.length > 0) {\n\t\t\t\tentry = await this.showQuickPick(tasks, nls.localize('TaskService.pickBuildTaskForLabel', 'Select the build task (there is no default build task defined)'));\n\t\t\t}\n\n\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\tif (!task) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn task._label;\n\t\t});\n\n\t\tthis._waitForSupportedExecutions = new Promise(resolve => {\n\t\t\tonce(this._onDidRegisterSupportedExecutions.event)(() => resolve());\n\t\t});\n\t\tthis.upgrade();\n\t}\n\n\tpublic registerSupportedExecutions(custom?: boolean, shell?: boolean, process?: boolean) {\n\t\tif (custom !== undefined) {\n\t\t\tconst customContext = CustomExecutionSupportedContext.bindTo(this.contextKeyService);\n\t\t\tcustomContext.set(custom);\n\t\t}\n\t\tconst isVirtual = !!VirtualWorkspaceContext.getValue(this.contextKeyService);\n\t\tif (shell !== undefined) {\n\t\t\tconst shellContext = ShellExecutionSupportedContext.bindTo(this.contextKeyService);\n\t\t\tshellContext.set(shell && !isVirtual);\n\t\t}\n\t\tif (process !== undefined) {\n\t\t\tconst processContext = ProcessExecutionSupportedContext.bindTo(this.contextKeyService);\n\t\t\tprocessContext.set(process && !isVirtual);\n\t\t}\n\t\tthis._onDidRegisterSupportedExecutions.fire();\n\t}\n\n\tpublic get onDidStateChange(): Event<TaskEvent> {\n\t\treturn this._onDidStateChange.event;\n\t}\n\n\tpublic get supportsMultipleTaskExecutions(): boolean {\n\t\treturn this.inTerminal();\n\t}\n\n\tprivate registerCommands(): void {\n\t\tCommandsRegistry.registerCommand({\n\t\t\tid: 'workbench.action.tasks.runTask',\n\t\t\thandler: async (accessor, arg) => {\n\t\t\t\tif (await this.trust()) {\n\t\t\t\t\tthis.runTaskCommand(arg);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Run Task',\n\t\t\t\targs: [{\n\t\t\t\t\tname: 'args',\n\t\t\t\t\tschema: {\n\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.reRunTask', async (accessor, arg) => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.reRunTaskCommand();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.restartTask', async (accessor, arg) => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runRestartTaskCommand(arg);\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.terminate', async (accessor, arg) => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runTerminateCommand(arg);\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.showLog', () => {\n\t\t\tif (!this.canRunCommand()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.showOutput();\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.build', async () => {\n\t\t\tif (!this.canRunCommand()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runBuildCommand();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.test', async () => {\n\t\t\tif (!this.canRunCommand()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runTestCommand();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.configureTaskRunner', async () => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runConfigureTasks();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.configureDefaultBuildTask', async () => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runConfigureDefaultBuildTask();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.configureDefaultTestTask', async () => {\n\t\t\tif (await this.trust()) {\n\t\t\t\tthis.runConfigureDefaultTestTask();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.showTasks', async () => {\n\t\t\tif (await this.trust()) {\n\t\t\t\treturn this.runShowTasks();\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.toggleProblems', () => this.commandService.executeCommand(Constants.TOGGLE_MARKERS_VIEW_ACTION_ID));\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.openUserTasks', async () => {\n\t\t\tconst resource = this.getResourceForKind(TaskSourceKind.User);\n\t\t\tif (resource) {\n\t\t\t\tthis.openTaskFile(resource, TaskSourceKind.User);\n\t\t\t}\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('workbench.action.tasks.openWorkspaceFileTasks', async () => {\n\t\t\tconst resource = this.getResourceForKind(TaskSourceKind.WorkspaceFile);\n\t\t\tif (resource) {\n\t\t\t\tthis.openTaskFile(resource, TaskSourceKind.WorkspaceFile);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate get workspaceFolders(): IWorkspaceFolder[] {\n\t\tif (!this._workspaceFolders) {\n\t\t\tthis.updateSetup();\n\t\t}\n\t\treturn this._workspaceFolders!;\n\t}\n\n\tprivate get ignoredWorkspaceFolders(): IWorkspaceFolder[] {\n\t\tif (!this._ignoredWorkspaceFolders) {\n\t\t\tthis.updateSetup();\n\t\t}\n\t\treturn this._ignoredWorkspaceFolders!;\n\t}\n\n\tprotected get executionEngine(): ExecutionEngine {\n\t\tif (this._executionEngine === undefined) {\n\t\t\tthis.updateSetup();\n\t\t}\n\t\treturn this._executionEngine!;\n\t}\n\n\tprivate get schemaVersion(): JsonSchemaVersion {\n\t\tif (this._schemaVersion === undefined) {\n\t\t\tthis.updateSetup();\n\t\t}\n\t\treturn this._schemaVersion!;\n\t}\n\n\tprivate get showIgnoreMessage(): boolean {\n\t\tif (this._showIgnoreMessage === undefined) {\n\t\t\tthis._showIgnoreMessage = !this.storageService.getBoolean(AbstractTaskService.IgnoreTask010DonotShowAgain_key, StorageScope.WORKSPACE, false);\n\t\t}\n\t\treturn this._showIgnoreMessage;\n\t}\n\n\tprivate updateSetup(setup?: [IWorkspaceFolder[], IWorkspaceFolder[], ExecutionEngine, JsonSchemaVersion, IWorkspace | undefined]): void {\n\t\tif (!setup) {\n\t\t\tsetup = this.computeWorkspaceFolderSetup();\n\t\t}\n\t\tthis._workspaceFolders = setup[0];\n\t\tif (this._ignoredWorkspaceFolders) {\n\t\t\tif (this._ignoredWorkspaceFolders.length !== setup[1].length) {\n\t\t\t\tthis._showIgnoreMessage = undefined;\n\t\t\t} else {\n\t\t\t\tlet set: Set<string> = new Set();\n\t\t\t\tthis._ignoredWorkspaceFolders.forEach(folder => set.add(folder.uri.toString()));\n\t\t\t\tfor (let folder of setup[1]) {\n\t\t\t\t\tif (!set.has(folder.uri.toString())) {\n\t\t\t\t\t\tthis._showIgnoreMessage = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._ignoredWorkspaceFolders = setup[1];\n\t\tthis._executionEngine = setup[2];\n\t\tthis._schemaVersion = setup[3];\n\t\tthis._workspace = setup[4];\n\t}\n\n\tprotected showOutput(runSource: TaskRunSource = TaskRunSource.User): void {\n\t\tif ((runSource === TaskRunSource.User) || (runSource === TaskRunSource.ConfigurationChange)) {\n\t\t\tthis.notificationService.prompt(Severity.Warning, nls.localize('taskServiceOutputPrompt', 'There are task errors. See the output for details.'),\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('showOutput', \"Show output\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis.outputService.showChannel(this._outputChannel.id, true);\n\t\t\t\t\t}\n\t\t\t\t}]);\n\t\t}\n\t}\n\n\tprotected disposeTaskSystemListeners(): void {\n\t\tif (this._taskSystemListener) {\n\t\t\tthis._taskSystemListener.dispose();\n\t\t}\n\t}\n\n\tpublic registerTaskProvider(provider: ITaskProvider, type: string): IDisposable {\n\t\tif (!provider) {\n\t\t\treturn {\n\t\t\t\tdispose: () => { }\n\t\t\t};\n\t\t}\n\t\tlet handle = AbstractTaskService.nextHandle++;\n\t\tthis._providers.set(handle, provider);\n\t\tthis._providerTypes.set(handle, type);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._providers.delete(handle);\n\t\t\t\tthis._providerTypes.delete(handle);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic registerTaskSystem(key: string, info: TaskSystemInfo): void {\n\t\tif (!this._taskSystemInfos.has(key) || info.platform !== Platform.Platform.Web) {\n\t\t\tthis._taskSystemInfos.set(key, info);\n\t\t}\n\t}\n\n\tprivate getTaskSystemInfo(key: string): TaskSystemInfo | undefined {\n\t\treturn this._taskSystemInfos.get(key);\n\t}\n\n\tpublic extensionCallbackTaskComplete(task: Task, result: number): Promise<void> {\n\t\tif (!this._taskSystem) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn this._taskSystem.customExecutionComplete(task, result);\n\t}\n\n\tpublic async getTask(folder: IWorkspace | IWorkspaceFolder | string, identifier: string | TaskIdentifier, compareId: boolean = false): Promise<Task | undefined> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn;\n\t\t}\n\t\tconst name = Types.isString(folder) ? folder : isWorkspaceFolder(folder) ? folder.name : folder.configuration ? resources.basename(folder.configuration) : undefined;\n\t\tif (this.ignoredWorkspaceFolders.some(ignored => ignored.name === name)) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskServer.folderIgnored', 'The folder {0} is ignored since it uses task version 0.1.0', name)));\n\t\t}\n\t\tconst key: string | KeyedTaskIdentifier | undefined = !Types.isString(identifier)\n\t\t\t? TaskDefinition.createTaskIdentifier(identifier, console)\n\t\t\t: identifier;\n\n\t\tif (key === undefined) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn this.getGroupedTasks().then((map) => {\n\t\t\tlet values = map.get(folder);\n\t\t\tvalues = values.concat(map.get(USER_TASKS_GROUP_KEY));\n\n\t\t\tif (!values) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tvalues = values.filter(task => task.matches(key, compareId)).sort(task => task._source.kind === TaskSourceKind.Extension ? 1 : -1);\n\t\t\treturn values.length > 0 ? values[0] : undefined;\n\t\t});\n\t}\n\n\tpublic async tryResolveTask(configuringTask: ConfiguringTask): Promise<Task | undefined> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn;\n\t\t}\n\t\tawait Promise.all([this.extensionService.activateByEvent('onCommand:workbench.action.tasks.runTask'), this.extensionService.whenInstalledExtensionsRegistered()]);\n\t\tlet matchingProvider: ITaskProvider | undefined;\n\t\tlet matchingProviderUnavailable: boolean = false;\n\t\tfor (const [handle, provider] of this._providers) {\n\t\t\tconst providerType = this._providerTypes.get(handle);\n\t\t\tif (configuringTask.type === providerType) {\n\t\t\t\tif (providerType && !this.isTaskProviderEnabled(providerType)) {\n\t\t\t\t\tmatchingProviderUnavailable = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tmatchingProvider = provider;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!matchingProvider) {\n\t\t\tif (matchingProviderUnavailable) {\n\t\t\t\tthis._outputChannel.append(nls.localize(\n\t\t\t\t\t'TaskService.providerUnavailable',\n\t\t\t\t\t'Warning: {0} tasks are unavailable in the current environment.\\n',\n\t\t\t\t\tconfiguringTask.configures.type\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Try to resolve the task first\n\t\ttry {\n\t\t\tconst resolvedTask = await matchingProvider.resolveTask(configuringTask);\n\t\t\tif (resolvedTask && (resolvedTask._id === configuringTask._id)) {\n\t\t\t\treturn TaskConfig.createCustomTask(resolvedTask, configuringTask);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Ignore errors. The task could not be provided by any of the providers.\n\t\t}\n\n\t\t// The task couldn't be resolved. Instead, use the less efficient provideTask.\n\t\tconst tasks = await this.tasks({ type: configuringTask.type });\n\t\tfor (const task of tasks) {\n\t\t\tif (task._id === configuringTask._id) {\n\t\t\t\treturn TaskConfig.createCustomTask(<ContributedTask>task, configuringTask);\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprotected abstract versionAndEngineCompatible(filter?: TaskFilter): boolean;\n\n\tpublic async tasks(filter?: TaskFilter): Promise<Task[]> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.versionAndEngineCompatible(filter)) {\n\t\t\treturn Promise.resolve<Task[]>([]);\n\t\t}\n\t\treturn this.getGroupedTasks(filter ? filter.type : undefined).then((map) => {\n\t\t\tif (!filter || !filter.type) {\n\t\t\t\treturn map.all();\n\t\t\t}\n\t\t\tlet result: Task[] = [];\n\t\t\tmap.forEach((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (ContributedTask.is(task) && ((task.defines.type === filter.type) || (task._source.label === filter.type))) {\n\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t} else if (CustomTask.is(task)) {\n\t\t\t\t\t\tif (task.type === filter.type) {\n\t\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet customizes = task.customizes();\n\t\t\t\t\t\t\tif (customizes && customizes.type === filter.type) {\n\t\t\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic taskTypes(): string[] {\n\t\tconst types: string[] = [];\n\t\tif (this.isProvideTasksEnabled()) {\n\t\t\tfor (const [handle] of this._providers) {\n\t\t\t\tconst type = this._providerTypes.get(handle);\n\t\t\t\tif (type && this.isTaskProviderEnabled(type)) {\n\t\t\t\t\ttypes.push(type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn types;\n\t}\n\n\tpublic createSorter(): TaskSorter {\n\t\treturn new TaskSorter(this.contextService.getWorkspace() ? this.contextService.getWorkspace().folders : []);\n\t}\n\n\tprivate isActive(): Promise<boolean> {\n\t\tif (!this._taskSystem) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\treturn this._taskSystem.isActive();\n\t}\n\n\tpublic async getActiveTasks(): Promise<Task[]> {\n\t\tif (!this._taskSystem) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._taskSystem.getActiveTasks();\n\t}\n\n\tpublic async getBusyTasks(): Promise<Task[]> {\n\t\tif (!this._taskSystem) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._taskSystem.getBusyTasks();\n\t}\n\n\tpublic getRecentlyUsedTasksV1(): LRUCache<string, string> {\n\t\tif (this._recentlyUsedTasksV1) {\n\t\t\treturn this._recentlyUsedTasksV1;\n\t\t}\n\t\tconst quickOpenHistoryLimit = this.configurationService.getValue<number>(QUICKOPEN_HISTORY_LIMIT_CONFIG);\n\t\tthis._recentlyUsedTasksV1 = new LRUCache<string, string>(quickOpenHistoryLimit);\n\n\t\tlet storageValue = this.storageService.get(AbstractTaskService.RecentlyUsedTasks_Key, StorageScope.WORKSPACE);\n\t\tif (storageValue) {\n\t\t\ttry {\n\t\t\t\tlet values: string[] = JSON.parse(storageValue);\n\t\t\t\tif (Array.isArray(values)) {\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tthis._recentlyUsedTasksV1.set(value, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore. We use the empty result\n\t\t\t}\n\t\t}\n\t\treturn this._recentlyUsedTasksV1;\n\t}\n\n\tprivate getRecentlyUsedTasks(): LRUCache<string, string> {\n\t\tif (this._recentlyUsedTasks) {\n\t\t\treturn this._recentlyUsedTasks;\n\t\t}\n\t\tconst quickOpenHistoryLimit = this.configurationService.getValue<number>(QUICKOPEN_HISTORY_LIMIT_CONFIG);\n\t\tthis._recentlyUsedTasks = new LRUCache<string, string>(quickOpenHistoryLimit);\n\n\t\tlet storageValue = this.storageService.get(AbstractTaskService.RecentlyUsedTasks_KeyV2, StorageScope.WORKSPACE);\n\t\tif (storageValue) {\n\t\t\ttry {\n\t\t\t\tlet values: [string, string][] = JSON.parse(storageValue);\n\t\t\t\tif (Array.isArray(values)) {\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tthis._recentlyUsedTasks.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore. We use the empty result\n\t\t\t}\n\t\t}\n\t\treturn this._recentlyUsedTasks;\n\t}\n\n\tprivate getFolderFromTaskKey(key: string): string | undefined {\n\t\tconst keyValue: { folder: string | undefined } = JSON.parse(key);\n\t\treturn keyValue.folder;\n\t}\n\n\tpublic async readRecentTasks(): Promise<(Task | ConfiguringTask)[]> {\n\t\tconst folderMap: IStringDictionary<IWorkspaceFolder> = Object.create(null);\n\t\tthis.workspaceFolders.forEach(folder => {\n\t\t\tfolderMap[folder.uri.toString()] = folder;\n\t\t});\n\t\tconst folderToTasksMap: Map<string, any> = new Map();\n\t\tconst recentlyUsedTasks = this.getRecentlyUsedTasks();\n\t\tconst tasks: (Task | ConfiguringTask)[] = [];\n\t\tfor (const entry of recentlyUsedTasks.entries()) {\n\t\t\tconst key = entry[0];\n\t\t\tconst task = JSON.parse(entry[1]);\n\t\t\tconst folder = this.getFolderFromTaskKey(key);\n\t\t\tif (folder && !folderToTasksMap.has(folder)) {\n\t\t\t\tfolderToTasksMap.set(folder, []);\n\t\t\t}\n\t\t\tif (folder && (folderMap[folder] || (folder === USER_TASKS_GROUP_KEY)) && task) {\n\t\t\t\tfolderToTasksMap.get(folder).push(task);\n\t\t\t}\n\t\t}\n\t\tconst readTasksMap: Map<string, (Task | ConfiguringTask)> = new Map();\n\t\tfor (const key of folderToTasksMap.keys()) {\n\t\t\tlet custom: CustomTask[] = [];\n\t\t\tlet customized: IStringDictionary<ConfiguringTask> = Object.create(null);\n\t\t\tawait this.computeTasksForSingleConfig(folderMap[key] ?? await this.getAFolder(), {\n\t\t\t\tversion: '2.0.0',\n\t\t\t\ttasks: folderToTasksMap.get(key)\n\t\t\t}, TaskRunSource.System, custom, customized, folderMap[key] ? TaskConfig.TaskConfigSource.TasksJson : TaskConfig.TaskConfigSource.User, true);\n\t\t\tcustom.forEach(task => {\n\t\t\t\tconst taskKey = task.getRecentlyUsedKey();\n\t\t\t\tif (taskKey) {\n\t\t\t\t\treadTasksMap.set(taskKey, task);\n\t\t\t\t}\n\t\t\t});\n\t\t\tfor (const configuration in customized) {\n\t\t\t\tconst taskKey = customized[configuration].getRecentlyUsedKey();\n\t\t\t\tif (taskKey) {\n\t\t\t\t\treadTasksMap.set(taskKey, customized[configuration]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const key of recentlyUsedTasks.keys()) {\n\t\t\tif (readTasksMap.has(key)) {\n\t\t\t\ttasks.push(readTasksMap.get(key)!);\n\t\t\t}\n\t\t}\n\t\treturn tasks;\n\t}\n\n\tpublic removeRecentlyUsedTask(taskRecentlyUsedKey: string) {\n\t\tif (this.getRecentlyUsedTasks().has(taskRecentlyUsedKey)) {\n\t\t\tthis.getRecentlyUsedTasks().delete(taskRecentlyUsedKey);\n\t\t\tthis.saveRecentlyUsedTasks();\n\t\t}\n\t}\n\n\tprivate setTaskLRUCacheLimit() {\n\t\tconst quickOpenHistoryLimit = this.configurationService.getValue<number>(QUICKOPEN_HISTORY_LIMIT_CONFIG);\n\t\tif (this._recentlyUsedTasks) {\n\t\t\tthis._recentlyUsedTasks.limit = quickOpenHistoryLimit;\n\t\t}\n\t}\n\n\tprivate async setRecentlyUsedTask(task: Task): Promise<void> {\n\t\tlet key = task.getRecentlyUsedKey();\n\t\tif (!InMemoryTask.is(task) && key) {\n\t\t\tconst customizations = this.createCustomizableTask(task);\n\t\t\tif (ContributedTask.is(task) && customizations) {\n\t\t\t\tlet custom: CustomTask[] = [];\n\t\t\t\tlet customized: IStringDictionary<ConfiguringTask> = Object.create(null);\n\t\t\t\tawait this.computeTasksForSingleConfig(task._source.workspaceFolder ?? this.workspaceFolders[0], {\n\t\t\t\t\tversion: '2.0.0',\n\t\t\t\t\ttasks: [customizations]\n\t\t\t\t}, TaskRunSource.System, custom, customized, TaskConfig.TaskConfigSource.TasksJson, true);\n\t\t\t\tfor (const configuration in customized) {\n\t\t\t\t\tkey = customized[configuration].getRecentlyUsedKey()!;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.getRecentlyUsedTasks().set(key, JSON.stringify(customizations));\n\t\t\tthis.saveRecentlyUsedTasks();\n\t\t}\n\t}\n\n\tprivate saveRecentlyUsedTasks(): void {\n\t\tif (!this._recentlyUsedTasks) {\n\t\t\treturn;\n\t\t}\n\t\tconst quickOpenHistoryLimit = this.configurationService.getValue<number>(QUICKOPEN_HISTORY_LIMIT_CONFIG);\n\t\t// setting history limit to 0 means no LRU sorting\n\t\tif (quickOpenHistoryLimit === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet keys = [...this._recentlyUsedTasks.keys()];\n\t\tif (keys.length > quickOpenHistoryLimit) {\n\t\t\tkeys = keys.slice(0, quickOpenHistoryLimit);\n\t\t}\n\t\tconst keyValues: [string, string][] = [];\n\t\tfor (const key of keys) {\n\t\t\tkeyValues.push([key, this._recentlyUsedTasks.get(key, Touch.None)!]);\n\t\t}\n\t\tthis.storageService.store(AbstractTaskService.RecentlyUsedTasks_KeyV2, JSON.stringify(keyValues), StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\n\tprivate openDocumentation(): void {\n\t\tthis.openerService.open(URI.parse('https://code.visualstudio.com/docs/editor/tasks#_defining-a-problem-matcher'));\n\t}\n\n\tprivate build(): Promise<ITaskSummary> {\n\t\treturn this.getGroupedTasks().then((tasks) => {\n\t\t\tlet runnable = this.createRunnableTask(tasks, TaskGroup.Build);\n\t\t\tif (!runnable || !runnable.task) {\n\t\t\t\tif (this.schemaVersion === JsonSchemaVersion.V0_1_0) {\n\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskService.noBuildTask1', 'No build task defined. Mark a task with \\'isBuildCommand\\' in the tasks.json file.'), TaskErrors.NoBuildTask);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskService.noBuildTask2', 'No build task defined. Mark a task with as a \\'build\\' group in the tasks.json file.'), TaskErrors.NoBuildTask);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.executeTask(runnable.task, runnable.resolver, TaskRunSource.User);\n\t\t}).then(value => value, (error) => {\n\t\t\tthis.handleError(error);\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tprivate runTest(): Promise<ITaskSummary> {\n\t\treturn this.getGroupedTasks().then((tasks) => {\n\t\t\tlet runnable = this.createRunnableTask(tasks, TaskGroup.Test);\n\t\t\tif (!runnable || !runnable.task) {\n\t\t\t\tif (this.schemaVersion === JsonSchemaVersion.V0_1_0) {\n\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskService.noTestTask1', 'No test task defined. Mark a task with \\'isTestCommand\\' in the tasks.json file.'), TaskErrors.NoTestTask);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskService.noTestTask2', 'No test task defined. Mark a task with as a \\'test\\' group in the tasks.json file.'), TaskErrors.NoTestTask);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.executeTask(runnable.task, runnable.resolver, TaskRunSource.User);\n\t\t}).then(value => value, (error) => {\n\t\t\tthis.handleError(error);\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tpublic async run(task: Task | undefined, options?: ProblemMatcherRunOptions, runSource: TaskRunSource = TaskRunSource.System): Promise<ITaskSummary | undefined> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!task) {\n\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskServer.noTask', 'Task to execute is undefined'), TaskErrors.TaskNotFound);\n\t\t}\n\n\t\treturn new Promise<ITaskSummary | undefined>(async (resolve) => {\n\t\t\tlet resolver = this.createResolver();\n\t\t\tif (options && options.attachProblemMatcher && this.shouldAttachProblemMatcher(task) && !InMemoryTask.is(task)) {\n\t\t\t\tconst toExecute = await this.attachProblemMatcher(task);\n\t\t\t\tif (toExecute) {\n\t\t\t\t\tresolve(this.executeTask(toExecute, resolver, runSource));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(this.executeTask(task, resolver, runSource));\n\t\t\t}\n\t\t}).then((value) => {\n\t\t\tif (runSource === TaskRunSource.User) {\n\t\t\t\tthis.getWorkspaceTasks().then(workspaceTasks => {\n\t\t\t\t\tRunAutomaticTasks.promptForPermission(this, this.storageService, this.notificationService, this.workspaceTrustManagementService, this.openerService, workspaceTasks);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value;\n\t\t}, (error) => {\n\t\t\tthis.handleError(error);\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tprivate isProvideTasksEnabled(): boolean {\n\t\tconst settingValue = this.configurationService.getValue('task.autoDetect');\n\t\treturn settingValue === 'on';\n\t}\n\n\tprivate isProblemMatcherPromptEnabled(type?: string): boolean {\n\t\tconst settingValue = this.configurationService.getValue(PROBLEM_MATCHER_NEVER_CONFIG);\n\t\tif (Types.isBoolean(settingValue)) {\n\t\t\treturn !settingValue;\n\t\t}\n\t\tif (type === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tconst settingValueMap: IStringDictionary<boolean> = <any>settingValue;\n\t\treturn !settingValueMap[type];\n\t}\n\n\tprivate getTypeForTask(task: Task): string {\n\t\tlet type: string;\n\t\tif (CustomTask.is(task)) {\n\t\t\tlet configProperties: TaskConfig.ConfigurationProperties = task._source.config.element;\n\t\t\ttype = (<any>configProperties).type;\n\t\t} else {\n\t\t\ttype = task.getDefinition()!.type;\n\t\t}\n\t\treturn type;\n\t}\n\n\tprivate shouldAttachProblemMatcher(task: Task): boolean {\n\t\tconst enabled = this.isProblemMatcherPromptEnabled(this.getTypeForTask(task));\n\t\tif (enabled === false) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.canCustomize(task)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (task.configurationProperties.group !== undefined && task.configurationProperties.group !== TaskGroup.Build) {\n\t\t\treturn false;\n\t\t}\n\t\tif (task.configurationProperties.problemMatchers !== undefined && task.configurationProperties.problemMatchers.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (ContributedTask.is(task)) {\n\t\t\treturn !task.hasDefinedMatchers && !!task.configurationProperties.problemMatchers && (task.configurationProperties.problemMatchers.length === 0);\n\t\t}\n\t\tif (CustomTask.is(task)) {\n\t\t\tlet configProperties: TaskConfig.ConfigurationProperties = task._source.config.element;\n\t\t\treturn configProperties.problemMatcher === undefined && !task.hasDefinedMatchers;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateNeverProblemMatcherSetting(type: string): Promise<void> {\n\t\tthis.telemetryService.publicLog2<ProblemMatcherDisableMetrics, ProblemMatcherDisableMetricsClassification>('problemMatcherDisabled', { type });\n\t\tconst current = this.configurationService.getValue(PROBLEM_MATCHER_NEVER_CONFIG);\n\t\tif (current === true) {\n\t\t\treturn;\n\t\t}\n\t\tlet newValue: IStringDictionary<boolean>;\n\t\tif (current !== false) {\n\t\t\tnewValue = <any>current;\n\t\t} else {\n\t\t\tnewValue = Object.create(null);\n\t\t}\n\t\tnewValue[type] = true;\n\t\treturn this.configurationService.updateValue(PROBLEM_MATCHER_NEVER_CONFIG, newValue);\n\t}\n\n\tprivate attachProblemMatcher(task: ContributedTask | CustomTask): Promise<Task | undefined> {\n\t\tinterface ProblemMatcherPickEntry extends IQuickPickItem {\n\t\t\tmatcher: NamedProblemMatcher | undefined;\n\t\t\tnever?: boolean;\n\t\t\tlearnMore?: boolean;\n\t\t\tsetting?: string;\n\t\t}\n\t\tlet entries: QuickPickInput<ProblemMatcherPickEntry>[] = [];\n\t\tfor (let key of ProblemMatcherRegistry.keys()) {\n\t\t\tlet matcher = ProblemMatcherRegistry.get(key);\n\t\t\tif (matcher.deprecated) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (matcher.name === matcher.label) {\n\t\t\t\tentries.push({ label: matcher.name, matcher: matcher });\n\t\t\t} else {\n\t\t\t\tentries.push({\n\t\t\t\t\tlabel: matcher.label,\n\t\t\t\t\tdescription: `$${matcher.name}`,\n\t\t\t\t\tmatcher: matcher\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (entries.length > 0) {\n\t\t\tentries = entries.sort((a, b) => {\n\t\t\t\tif (a.label && b.label) {\n\t\t\t\t\treturn a.label.localeCompare(b.label);\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t\tentries.unshift({ type: 'separator', label: nls.localize('TaskService.associate', 'associate') });\n\t\t\tlet taskType: string;\n\t\t\tif (CustomTask.is(task)) {\n\t\t\t\tlet configProperties: TaskConfig.ConfigurationProperties = task._source.config.element;\n\t\t\t\ttaskType = (<any>configProperties).type;\n\t\t\t} else {\n\t\t\t\ttaskType = task.getDefinition().type;\n\t\t\t}\n\t\t\tentries.unshift(\n\t\t\t\t{ label: nls.localize('TaskService.attachProblemMatcher.continueWithout', 'Continue without scanning the task output'), matcher: undefined },\n\t\t\t\t{ label: nls.localize('TaskService.attachProblemMatcher.never', 'Never scan the task output for this task'), matcher: undefined, never: true },\n\t\t\t\t{ label: nls.localize('TaskService.attachProblemMatcher.neverType', 'Never scan the task output for {0} tasks', taskType), matcher: undefined, setting: taskType },\n\t\t\t\t{ label: nls.localize('TaskService.attachProblemMatcher.learnMoreAbout', 'Learn more about scanning the task output'), matcher: undefined, learnMore: true }\n\t\t\t);\n\t\t\treturn this.quickInputService.pick(entries, {\n\t\t\t\tplaceHolder: nls.localize('selectProblemMatcher', 'Select for which kind of errors and warnings to scan the task output'),\n\t\t\t}).then(async (selected) => {\n\t\t\t\tif (selected) {\n\t\t\t\t\tif (selected.learnMore) {\n\t\t\t\t\t\tthis.openDocumentation();\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else if (selected.never) {\n\t\t\t\t\t\tthis.customize(task, { problemMatcher: [] }, true);\n\t\t\t\t\t\treturn task;\n\t\t\t\t\t} else if (selected.matcher) {\n\t\t\t\t\t\tlet newTask = task.clone();\n\t\t\t\t\t\tlet matcherReference = `$${selected.matcher.name}`;\n\t\t\t\t\t\tlet properties: CustomizationProperties = { problemMatcher: [matcherReference] };\n\t\t\t\t\t\tnewTask.configurationProperties.problemMatchers = [matcherReference];\n\t\t\t\t\t\tlet matcher = ProblemMatcherRegistry.get(selected.matcher.name);\n\t\t\t\t\t\tif (matcher && matcher.watching !== undefined) {\n\t\t\t\t\t\t\tproperties.isBackground = true;\n\t\t\t\t\t\t\tnewTask.configurationProperties.isBackground = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.customize(task, properties, true);\n\t\t\t\t\t\treturn newTask;\n\t\t\t\t\t} else if (selected.setting) {\n\t\t\t\t\t\tawait this.updateNeverProblemMatcherSetting(selected.setting);\n\t\t\t\t\t\treturn task;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn task;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(task);\n\t}\n\n\tprivate getTasksForGroup(group: string): Promise<Task[]> {\n\t\treturn this.getGroupedTasks().then((groups) => {\n\t\t\tlet result: Task[] = [];\n\t\t\tgroups.forEach((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (task.configurationProperties.group === group) {\n\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic needsFolderQualification(): boolean {\n\t\treturn this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE;\n\t}\n\n\tprivate canCustomize(task: Task): boolean {\n\t\tif (this.schemaVersion !== JsonSchemaVersion.V2_0_0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (CustomTask.is(task)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (ContributedTask.is(task)) {\n\t\t\treturn !!task.getWorkspaceFolder();\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async formatTaskForJson(resource: URI, task: TaskConfig.CustomTask | TaskConfig.ConfiguringTask): Promise<string> {\n\t\tlet reference: IReference<IResolvedTextEditorModel> | undefined;\n\t\tlet stringValue: string = '';\n\t\ttry {\n\t\t\treference = await this.textModelResolverService.createModelReference(resource);\n\t\t\tconst model = reference.object.textEditorModel;\n\t\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\t\tconst eol = model.getEOL();\n\t\t\tconst edits = format(JSON.stringify(task), undefined, { eol, tabSize, insertSpaces });\n\t\t\tlet stringified = applyEdits(JSON.stringify(task), edits);\n\t\t\tconst regex = new RegExp(eol + (insertSpaces ? ' '.repeat(tabSize) : '\\\\t'), 'g');\n\t\t\tstringified = stringified.replace(regex, eol + (insertSpaces ? ' '.repeat(tabSize * 3) : '\\t\\t\\t'));\n\t\t\tconst twoTabs = insertSpaces ? ' '.repeat(tabSize * 2) : '\\t\\t';\n\t\t\tstringValue = twoTabs + stringified.slice(0, stringified.length - 1) + twoTabs + stringified.slice(stringified.length - 1);\n\t\t} finally {\n\t\t\tif (reference) {\n\t\t\t\treference.dispose();\n\t\t\t}\n\t\t}\n\t\treturn stringValue;\n\t}\n\n\tprivate openEditorAtTask(resource: URI | undefined, task: TaskConfig.CustomTask | TaskConfig.ConfiguringTask | string | undefined, configIndex: number = -1): Promise<boolean> {\n\t\tif (resource === undefined) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tlet selection: ITextEditorSelection | undefined;\n\t\treturn this.fileService.readFile(resource).then(content => content.value).then(async content => {\n\t\t\tif (!content) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (task) {\n\t\t\t\tconst contentValue = content.toString();\n\t\t\t\tlet stringValue: string | undefined;\n\t\t\t\tif (configIndex !== -1) {\n\t\t\t\t\tconst json: TaskConfig.ExternalTaskRunnerConfiguration = this.configurationService.getValue<TaskConfig.ExternalTaskRunnerConfiguration>('tasks', { resource });\n\t\t\t\t\tif (json.tasks && (json.tasks.length > configIndex)) {\n\t\t\t\t\t\tstringValue = await this.formatTaskForJson(resource, json.tasks[configIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stringValue) {\n\t\t\t\t\tif (typeof task === 'string') {\n\t\t\t\t\t\tstringValue = task;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstringValue = await this.formatTaskForJson(resource, task);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst index = contentValue.indexOf(stringValue);\n\t\t\t\tlet startLineNumber = 1;\n\t\t\t\tfor (let i = 0; i < index; i++) {\n\t\t\t\t\tif (contentValue.charAt(i) === '\\n') {\n\t\t\t\t\t\tstartLineNumber++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet endLineNumber = startLineNumber;\n\t\t\t\tfor (let i = 0; i < stringValue.length; i++) {\n\t\t\t\t\tif (stringValue.charAt(i) === '\\n') {\n\t\t\t\t\t\tendLineNumber++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tselection = startLineNumber > 1 ? { startLineNumber, startColumn: startLineNumber === endLineNumber ? 4 : 3, endLineNumber, endColumn: startLineNumber === endLineNumber ? undefined : 4 } : undefined;\n\t\t\t}\n\n\t\t\treturn this.editorService.openEditor({\n\t\t\t\tresource,\n\t\t\t\toptions: {\n\t\t\t\t\tpinned: false,\n\t\t\t\t\tforceReload: true, // because content might have changed\n\t\t\t\t\tselection,\n\t\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport\n\t\t\t\t}\n\t\t\t}).then(() => !!selection);\n\t\t});\n\t}\n\n\tprivate createCustomizableTask(task: ContributedTask | CustomTask | ConfiguringTask): TaskConfig.CustomTask | TaskConfig.ConfiguringTask | undefined {\n\t\tlet toCustomize: TaskConfig.CustomTask | TaskConfig.ConfiguringTask | undefined;\n\t\tlet taskConfig = CustomTask.is(task) || ConfiguringTask.is(task) ? task._source.config : undefined;\n\t\tif (taskConfig && taskConfig.element) {\n\t\t\ttoCustomize = { ...(taskConfig.element) };\n\t\t} else if (ContributedTask.is(task)) {\n\t\t\ttoCustomize = {\n\t\t\t};\n\t\t\tlet identifier: TaskConfig.TaskIdentifier = Object.assign(Object.create(null), task.defines);\n\t\t\tdelete identifier['_key'];\n\t\t\tObject.keys(identifier).forEach(key => (<any>toCustomize)![key] = identifier[key]);\n\t\t\tif (task.configurationProperties.problemMatchers && task.configurationProperties.problemMatchers.length > 0 && Types.isStringArray(task.configurationProperties.problemMatchers)) {\n\t\t\t\ttoCustomize.problemMatcher = task.configurationProperties.problemMatchers;\n\t\t\t}\n\t\t\tif (task.configurationProperties.group) {\n\t\t\t\ttoCustomize.group = task.configurationProperties.group;\n\t\t\t}\n\t\t}\n\t\tif (!toCustomize) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (toCustomize.problemMatcher === undefined && task.configurationProperties.problemMatchers === undefined || (task.configurationProperties.problemMatchers && task.configurationProperties.problemMatchers.length === 0)) {\n\t\t\ttoCustomize.problemMatcher = [];\n\t\t}\n\t\tif (task._source.label !== 'Workspace') {\n\t\t\ttoCustomize.label = task.configurationProperties.identifier;\n\t\t} else {\n\t\t\ttoCustomize.label = task._label;\n\t\t}\n\t\ttoCustomize.detail = task.configurationProperties.detail;\n\t\treturn toCustomize;\n\t}\n\n\tpublic async customize(task: ContributedTask | CustomTask | ConfiguringTask, properties?: CustomizationProperties, openConfig?: boolean): Promise<void> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst workspaceFolder = task.getWorkspaceFolder();\n\t\tif (!workspaceFolder) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tlet configuration = this.getConfiguration(workspaceFolder, task._source.kind);\n\t\tif (configuration.hasParseErrors) {\n\t\t\tthis.notificationService.warn(nls.localize('customizeParseErrors', 'The current task configuration has errors. Please fix the errors first before customizing a task.'));\n\t\t\treturn Promise.resolve<void>(undefined);\n\t\t}\n\n\t\tlet fileConfig = configuration.config;\n\t\tconst toCustomize = this.createCustomizableTask(task);\n\t\tif (!toCustomize) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tconst index: number | undefined = CustomTask.is(task) ? task._source.config.index : undefined;\n\t\tif (properties) {\n\t\t\tfor (let property of Object.getOwnPropertyNames(properties)) {\n\t\t\t\tlet value = (<any>properties)[property];\n\t\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\t\t(<any>toCustomize)[property] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet promise: Promise<void> | undefined;\n\t\tif (!fileConfig) {\n\t\t\tlet value = {\n\t\t\t\tversion: '2.0.0',\n\t\t\t\ttasks: [toCustomize]\n\t\t\t};\n\t\t\tlet content = [\n\t\t\t\t'{',\n\t\t\t\tnls.localize('tasksJsonComment', '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558 \\n\\t// for the documentation about the tasks.json format'),\n\t\t\t].join('\\n') + JSON.stringify(value, null, '\\t').substr(1);\n\t\t\tlet editorConfig = this.configurationService.getValue<any>();\n\t\t\tif (editorConfig.editor.insertSpaces) {\n\t\t\t\tcontent = content.replace(/(\\n)(\\t+)/g, (_, s1, s2) => s1 + ' '.repeat(s2.length * editorConfig.editor.tabSize));\n\t\t\t}\n\t\t\tpromise = this.textFileService.create([{ resource: workspaceFolder.toResource('.vscode/tasks.json'), value: content }]).then(() => { });\n\t\t} else {\n\t\t\t// We have a global task configuration\n\t\t\tif ((index === -1) && properties) {\n\t\t\t\tif (properties.problemMatcher !== undefined) {\n\t\t\t\t\tfileConfig.problemMatcher = properties.problemMatcher;\n\t\t\t\t\tpromise = this.writeConfiguration(workspaceFolder, 'tasks.problemMatchers', fileConfig.problemMatcher, task._source.kind);\n\t\t\t\t} else if (properties.group !== undefined) {\n\t\t\t\t\tfileConfig.group = properties.group;\n\t\t\t\t\tpromise = this.writeConfiguration(workspaceFolder, 'tasks.group', fileConfig.group, task._source.kind);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!Array.isArray(fileConfig.tasks)) {\n\t\t\t\t\tfileConfig.tasks = [];\n\t\t\t\t}\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\tfileConfig.tasks.push(toCustomize);\n\t\t\t\t} else {\n\t\t\t\t\tfileConfig.tasks[index] = toCustomize;\n\t\t\t\t}\n\t\t\t\tpromise = this.writeConfiguration(workspaceFolder, 'tasks.tasks', fileConfig.tasks, task._source.kind);\n\t\t\t}\n\t\t}\n\t\tif (!promise) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn promise.then(() => {\n\t\t\tlet event: TaskCustomizationTelemetryEvent = {\n\t\t\t\tproperties: properties ? Object.getOwnPropertyNames(properties) : []\n\t\t\t};\n\t\t\t/* __GDPR__\n\t\t\t\t\"taskService.customize\" : {\n\t\t\t\t\t\"properties\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog(AbstractTaskService.CustomizationTelemetryEventName, event);\n\t\t\tif (openConfig) {\n\t\t\t\tthis.openEditorAtTask(this.getResourceForTask(task), toCustomize);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate writeConfiguration(workspaceFolder: IWorkspaceFolder, key: string, value: any, source?: string): Promise<void> | undefined {\n\t\tlet target: ConfigurationTarget | undefined = undefined;\n\t\tswitch (source) {\n\t\t\tcase TaskSourceKind.User: target = ConfigurationTarget.USER; break;\n\t\t\tcase TaskSourceKind.WorkspaceFile: target = ConfigurationTarget.WORKSPACE; break;\n\t\t\tdefault: if (this.contextService.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\ttarget = ConfigurationTarget.WORKSPACE;\n\t\t\t} else if (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\t\ttarget = ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t}\n\t\tif (target) {\n\t\t\treturn this.configurationService.updateValue(key, value, { resource: workspaceFolder.uri }, target);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate getResourceForKind(kind: string): URI | undefined {\n\t\tthis.updateSetup();\n\t\tswitch (kind) {\n\t\t\tcase TaskSourceKind.User: {\n\t\t\t\treturn resources.joinPath(resources.dirname(this.preferencesService.userSettingsResource), 'tasks.json');\n\t\t\t}\n\t\t\tcase TaskSourceKind.WorkspaceFile: {\n\t\t\t\tif (this._workspace && this._workspace.configuration) {\n\t\t\t\t\treturn this._workspace.configuration;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getResourceForTask(task: CustomTask | ConfiguringTask | ContributedTask): URI {\n\t\tif (CustomTask.is(task)) {\n\t\t\tlet uri = this.getResourceForKind(task._source.kind);\n\t\t\tif (!uri) {\n\t\t\t\tconst taskFolder = task.getWorkspaceFolder();\n\t\t\t\tif (taskFolder) {\n\t\t\t\t\turi = taskFolder.toResource(task._source.config.file);\n\t\t\t\t} else {\n\t\t\t\t\turi = this.workspaceFolders[0].uri;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uri;\n\t\t} else {\n\t\t\treturn task.getWorkspaceFolder()!.toResource('.vscode/tasks.json');\n\t\t}\n\t}\n\n\tpublic async openConfig(task: CustomTask | ConfiguringTask | undefined): Promise<boolean> {\n\t\tlet resource: URI | undefined;\n\t\tif (task) {\n\t\t\tresource = this.getResourceForTask(task);\n\t\t} else {\n\t\t\tresource = (this._workspaceFolders && (this._workspaceFolders.length > 0)) ? this._workspaceFolders[0].toResource('.vscode/tasks.json') : undefined;\n\t\t}\n\t\treturn this.openEditorAtTask(resource, task ? task._label : undefined, task ? task._source.config.index : -1);\n\t}\n\n\tprivate createRunnableTask(tasks: TaskMap, group: TaskGroup): { task: Task; resolver: ITaskResolver } | undefined {\n\t\tinterface ResolverData {\n\t\t\tid: Map<string, Task>;\n\t\t\tlabel: Map<string, Task>;\n\t\t\tidentifier: Map<string, Task>;\n\t\t}\n\n\t\tlet resolverData: Map<string, ResolverData> = new Map();\n\t\tlet workspaceTasks: Task[] = [];\n\t\tlet extensionTasks: Task[] = [];\n\t\ttasks.forEach((tasks, folder) => {\n\t\t\tlet data = resolverData.get(folder);\n\t\t\tif (!data) {\n\t\t\t\tdata = {\n\t\t\t\t\tid: new Map<string, Task>(),\n\t\t\t\t\tlabel: new Map<string, Task>(),\n\t\t\t\t\tidentifier: new Map<string, Task>()\n\t\t\t\t};\n\t\t\t\tresolverData.set(folder, data);\n\t\t\t}\n\t\t\tfor (let task of tasks) {\n\t\t\t\tdata.id.set(task._id, task);\n\t\t\t\tdata.label.set(task._label, task);\n\t\t\t\tif (task.configurationProperties.identifier) {\n\t\t\t\t\tdata.identifier.set(task.configurationProperties.identifier, task);\n\t\t\t\t}\n\t\t\t\tif (group && task.configurationProperties.group === group) {\n\t\t\t\t\tif (task._source.kind === TaskSourceKind.Workspace) {\n\t\t\t\t\t\tworkspaceTasks.push(task);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensionTasks.push(task);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet resolver: ITaskResolver = {\n\t\t\tresolve: async (uri: URI | string, alias: string) => {\n\t\t\t\tlet data = resolverData.get(typeof uri === 'string' ? uri : uri.toString());\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn data.id.get(alias) || data.label.get(alias) || data.identifier.get(alias);\n\t\t\t}\n\t\t};\n\t\tif (workspaceTasks.length > 0) {\n\t\t\tif (workspaceTasks.length > 1) {\n\t\t\t\tthis._outputChannel.append(nls.localize('moreThanOneBuildTask', 'There are many build tasks defined in the tasks.json. Executing the first one.\\n'));\n\t\t\t}\n\t\t\treturn { task: workspaceTasks[0], resolver };\n\t\t}\n\t\tif (extensionTasks.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// We can only have extension tasks if we are in version 2.0.0. Then we can even run\n\t\t// multiple build tasks.\n\t\tif (extensionTasks.length === 1) {\n\t\t\treturn { task: extensionTasks[0], resolver };\n\t\t} else {\n\t\t\tlet id: string = UUID.generateUuid();\n\t\t\tlet task: InMemoryTask = new InMemoryTask(\n\t\t\t\tid,\n\t\t\t\t{ kind: TaskSourceKind.InMemory, label: 'inMemory' },\n\t\t\t\tid,\n\t\t\t\t'inMemory',\n\t\t\t\t{ reevaluateOnRerun: true },\n\t\t\t\t{\n\t\t\t\t\tidentifier: id,\n\t\t\t\t\tdependsOn: extensionTasks.map((extensionTask) => { return { uri: extensionTask.getWorkspaceFolder()!.uri, task: extensionTask._id }; }),\n\t\t\t\t\tname: id,\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn { task, resolver };\n\t\t}\n\t}\n\n\tprivate createResolver(grouped?: TaskMap): ITaskResolver {\n\t\tinterface ResolverData {\n\t\t\tlabel: Map<string, Task>;\n\t\t\tidentifier: Map<string, Task>;\n\t\t\ttaskIdentifier: Map<string, Task>;\n\t\t}\n\n\t\tlet resolverData: Map<string, ResolverData> | undefined;\n\n\t\treturn {\n\t\t\tresolve: async (uri: URI | string, identifier: string | TaskIdentifier | undefined) => {\n\t\t\t\tif (resolverData === undefined) {\n\t\t\t\t\tresolverData = new Map();\n\t\t\t\t\t(grouped || await this.getGroupedTasks()).forEach((tasks, folder) => {\n\t\t\t\t\t\tlet data = resolverData!.get(folder);\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\tdata = { label: new Map<string, Task>(), identifier: new Map<string, Task>(), taskIdentifier: new Map<string, Task>() };\n\t\t\t\t\t\t\tresolverData!.set(folder, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\t\t\tdata.label.set(task._label, task);\n\t\t\t\t\t\t\tif (task.configurationProperties.identifier) {\n\t\t\t\t\t\t\t\tdata.identifier.set(task.configurationProperties.identifier, task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet keyedIdentifier = task.getDefinition(true);\n\t\t\t\t\t\t\tif (keyedIdentifier !== undefined) {\n\t\t\t\t\t\t\t\tdata.taskIdentifier.set(keyedIdentifier._key, task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlet data = resolverData.get(typeof uri === 'string' ? uri : uri.toString());\n\t\t\t\tif (!data || !identifier) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (Types.isString(identifier)) {\n\t\t\t\t\treturn data.label.get(identifier) || data.identifier.get(identifier);\n\t\t\t\t} else {\n\t\t\t\t\tlet key = TaskDefinition.createTaskIdentifier(identifier, console);\n\t\t\t\t\treturn key !== undefined ? data.taskIdentifier.get(key._key) : undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate executeTask(task: Task, resolver: ITaskResolver, runSource: TaskRunSource): Promise<ITaskSummary> {\n\t\tenum SaveBeforeRunConfigOptions {\n\t\t\tAlways = 'always',\n\t\t\tNever = 'never',\n\t\t\tPrompt = 'prompt'\n\t\t}\n\n\t\tconst saveBeforeRunTaskConfig: SaveBeforeRunConfigOptions = this.configurationService.getValue('task.saveBeforeRun');\n\n\t\tconst execTask = async (task: Task, resolver: ITaskResolver): Promise<ITaskSummary> => {\n\t\t\treturn ProblemMatcherRegistry.onReady().then(() => {\n\t\t\t\tlet executeResult = this.getTaskSystem().run(task, resolver);\n\t\t\t\treturn this.handleExecuteResult(executeResult, runSource);\n\t\t\t});\n\t\t};\n\n\t\tconst saveAllEditorsAndExecTask = async (task: Task, resolver: ITaskResolver): Promise<ITaskSummary> => {\n\t\t\treturn this.editorService.saveAll({ reason: SaveReason.AUTO }).then(() => {\n\t\t\t\treturn execTask(task, resolver);\n\t\t\t});\n\t\t};\n\n\t\tconst promptAsk = async (task: Task, resolver: ITaskResolver): Promise<ITaskSummary> => {\n\t\t\tconst dialogOptions = await this.dialogService.show(\n\t\t\t\tSeverity.Info,\n\t\t\t\tnls.localize('TaskSystem.saveBeforeRun.prompt.title', 'Save all editors?'),\n\t\t\t\t[nls.localize('saveBeforeRun.save', 'Save'), nls.localize('saveBeforeRun.dontSave', 'Don\\'t save')],\n\t\t\t\t{\n\t\t\t\t\tdetail: nls.localize('detail', \"Do you want to save all editors before running the task?\"),\n\t\t\t\t\tcancelId: 1\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (dialogOptions.choice === 0) {\n\t\t\t\treturn saveAllEditorsAndExecTask(task, resolver);\n\t\t\t} else {\n\t\t\t\treturn execTask(task, resolver);\n\t\t\t}\n\t\t};\n\n\t\tif (saveBeforeRunTaskConfig === SaveBeforeRunConfigOptions.Never) {\n\t\t\treturn execTask(task, resolver);\n\t\t} else if (saveBeforeRunTaskConfig === SaveBeforeRunConfigOptions.Prompt) {\n\t\t\treturn promptAsk(task, resolver);\n\t\t} else {\n\t\t\treturn saveAllEditorsAndExecTask(task, resolver);\n\t\t}\n\t}\n\n\tprivate async handleExecuteResult(executeResult: ITaskExecuteResult, runSource?: TaskRunSource): Promise<ITaskSummary> {\n\t\tif (executeResult.task.taskLoadMessages && executeResult.task.taskLoadMessages.length > 0) {\n\t\t\texecuteResult.task.taskLoadMessages.forEach(loadMessage => {\n\t\t\t\tthis._outputChannel.append(loadMessage + '\\n');\n\t\t\t});\n\t\t\tthis.showOutput();\n\t\t}\n\n\t\tif (runSource === TaskRunSource.User) {\n\t\t\tawait this.setRecentlyUsedTask(executeResult.task);\n\t\t}\n\t\tif (executeResult.kind === TaskExecuteKind.Active) {\n\t\t\tlet active = executeResult.active;\n\t\t\tif (active && active.same) {\n\t\t\t\tif (this._taskSystem?.isTaskVisible(executeResult.task)) {\n\t\t\t\t\tconst message = nls.localize('TaskSystem.activeSame.noBackground', 'The task \\'{0}\\' is already active.', executeResult.task.getQualifiedLabel());\n\t\t\t\t\tlet lastInstance = this.getTaskSystem().getLastInstance(executeResult.task) ?? executeResult.task;\n\t\t\t\t\tthis.notificationService.prompt(Severity.Warning, message,\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: nls.localize('terminateTask', \"Terminate Task\"),\n\t\t\t\t\t\t\trun: () => this.terminate(lastInstance)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('restartTask', \"Restart Task\"),\n\t\t\t\t\t\t\trun: () => this.restart(lastInstance)\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t{ sticky: true }\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._taskSystem?.revealTask(executeResult.task);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TaskError(Severity.Warning, nls.localize('TaskSystem.active', 'There is already a task running. Terminate it first before executing another task.'), TaskErrors.RunningTask);\n\t\t\t}\n\t\t}\n\t\treturn executeResult.promise;\n\t}\n\n\tprivate restart(task: Task): void {\n\t\tif (!this._taskSystem) {\n\t\t\treturn;\n\t\t}\n\t\tthis._taskSystem.terminate(task).then((response) => {\n\t\t\tif (response.success) {\n\t\t\t\tthis.run(task).then(undefined, reason => {\n\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.notificationService.warn(nls.localize('TaskSystem.restartFailed', 'Failed to terminate and restart task {0}', Types.isString(task) ? task : task.configurationProperties.name));\n\t\t\t}\n\t\t\treturn response;\n\t\t});\n\t}\n\n\tpublic async terminate(task: Task): Promise<TaskTerminateResponse> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn { success: true, task: undefined };\n\t\t}\n\n\t\tif (!this._taskSystem) {\n\t\t\treturn { success: true, task: undefined };\n\t\t}\n\t\treturn this._taskSystem.terminate(task);\n\t}\n\n\tprivate terminateAll(): Promise<TaskTerminateResponse[]> {\n\t\tif (!this._taskSystem) {\n\t\t\treturn Promise.resolve<TaskTerminateResponse[]>([]);\n\t\t}\n\t\treturn this._taskSystem.terminateAll();\n\t}\n\n\tprotected createTerminalTaskSystem(): ITaskSystem {\n\t\treturn new TerminalTaskSystem(\n\t\t\tthis.terminalService, this.outputService, this.panelService, this.viewsService, this.markerService,\n\t\t\tthis.modelService, this.configurationResolverService, this.telemetryService,\n\t\t\tthis.contextService, this.environmentService,\n\t\t\tAbstractTaskService.OutputChannelId, this.fileService, this.terminalProfileResolverService,\n\t\t\tthis.pathService, this.viewDescriptorService, this.logService, this.configurationService,\n\t\t\t(workspaceFolder: IWorkspaceFolder | undefined) => {\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\treturn this.getTaskSystemInfo(workspaceFolder.uri.scheme);\n\t\t\t\t} else if (this._taskSystemInfos.size > 0) {\n\t\t\t\t\treturn this._taskSystemInfos.values().next().value;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected abstract getTaskSystem(): ITaskSystem;\n\n\tprivate isTaskProviderEnabled(type: string) {\n\t\tconst definition = TaskDefinitionRegistry.get(type);\n\t\treturn !definition || !definition.when || this.contextKeyService.contextMatchesRules(definition.when);\n\t}\n\n\tprivate getGroupedTasks(type?: string): Promise<TaskMap> {\n\t\tconst needsRecentTasksMigration = this.needsRecentTasksMigration();\n\t\treturn Promise.all([this.extensionService.activateByEvent('onCommand:workbench.action.tasks.runTask'), this.extensionService.whenInstalledExtensionsRegistered()]).then(() => {\n\t\t\tlet validTypes: IStringDictionary<boolean> = Object.create(null);\n\t\t\tTaskDefinitionRegistry.all().forEach(definition => validTypes[definition.taskType] = true);\n\t\t\tvalidTypes['shell'] = true;\n\t\t\tvalidTypes['process'] = true;\n\t\t\treturn new Promise<TaskSet[]>(resolve => {\n\t\t\t\tlet result: TaskSet[] = [];\n\t\t\t\tlet counter: number = 0;\n\t\t\t\tlet done = (value: TaskSet | undefined) => {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tresult.push(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (--counter === 0) {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tlet error = (error: any) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (error && Types.isString(error.message)) {\n\t\t\t\t\t\t\tthis._outputChannel.append('Error: ');\n\t\t\t\t\t\t\tthis._outputChannel.append(error.message);\n\t\t\t\t\t\t\tthis._outputChannel.append('\\n');\n\t\t\t\t\t\t\tthis.showOutput();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._outputChannel.append('Unknown error received while collecting tasks from providers.\\n');\n\t\t\t\t\t\t\tthis.showOutput();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (--counter === 0) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (this.isProvideTasksEnabled() && (this.schemaVersion === JsonSchemaVersion.V2_0_0) && (this._providers.size > 0)) {\n\t\t\t\t\tfor (const [handle, provider] of this._providers) {\n\t\t\t\t\t\tconst providerType = this._providerTypes.get(handle);\n\t\t\t\t\t\tif ((type === undefined) || (type === providerType)) {\n\t\t\t\t\t\t\tif (providerType && !this.isTaskProviderEnabled(providerType)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\tprovider.provideTasks(validTypes).then((taskSet: TaskSet) => {\n\t\t\t\t\t\t\t\t// Check that the tasks provided are of the correct type\n\t\t\t\t\t\t\t\tfor (const task of taskSet.tasks) {\n\t\t\t\t\t\t\t\t\tif (task.type !== this._providerTypes.get(handle)) {\n\t\t\t\t\t\t\t\t\t\tthis._outputChannel.append(nls.localize('unexpectedTaskType', \"The task provider for \\\"{0}\\\" tasks unexpectedly provided a task of type \\\"{1}\\\".\\n\", this._providerTypes.get(handle), task.type));\n\t\t\t\t\t\t\t\t\t\tif ((task.type !== 'shell') && (task.type !== 'process')) {\n\t\t\t\t\t\t\t\t\t\t\tthis.showOutput();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn done(taskSet);\n\t\t\t\t\t\t\t}, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t}).then((contributedTaskSets) => {\n\t\t\tlet result: TaskMap = new TaskMap();\n\t\t\tlet contributedTasks: TaskMap = new TaskMap();\n\n\t\t\tfor (let set of contributedTaskSets) {\n\t\t\t\tfor (let task of set.tasks) {\n\t\t\t\t\tlet workspaceFolder = task.getWorkspaceFolder();\n\t\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\t\tcontributedTasks.add(workspaceFolder, task);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.getWorkspaceTasks().then(async (customTasks) => {\n\t\t\t\tconst customTasksKeyValuePairs = Array.from(customTasks);\n\t\t\t\tconst customTasksPromises = customTasksKeyValuePairs.map(async ([key, folderTasks]) => {\n\t\t\t\t\tlet contributed = contributedTasks.get(key);\n\t\t\t\t\tif (!folderTasks.set) {\n\t\t\t\t\t\tif (contributed) {\n\t\t\t\t\t\t\tresult.add(key, ...contributed);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\t\t\t\tresult.add(key, ...folderTasks.set.tasks);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet configurations = folderTasks.configurations;\n\t\t\t\t\t\tlet legacyTaskConfigurations = folderTasks.set ? this.getLegacyTaskConfigurations(folderTasks.set) : undefined;\n\t\t\t\t\t\tlet customTasksToDelete: Task[] = [];\n\t\t\t\t\t\tif (configurations || legacyTaskConfigurations) {\n\t\t\t\t\t\t\tlet unUsedConfigurations: Set<string> = new Set<string>();\n\t\t\t\t\t\t\tif (configurations) {\n\t\t\t\t\t\t\t\tObject.keys(configurations.byIdentifier).forEach(key => unUsedConfigurations.add(key));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let task of contributed) {\n\t\t\t\t\t\t\t\tif (!ContributedTask.is(task)) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (configurations) {\n\t\t\t\t\t\t\t\t\tlet configuringTask = configurations.byIdentifier[task.defines._key];\n\t\t\t\t\t\t\t\t\tif (configuringTask) {\n\t\t\t\t\t\t\t\t\t\tunUsedConfigurations.delete(task.defines._key);\n\t\t\t\t\t\t\t\t\t\tresult.add(key, TaskConfig.createCustomTask(task, configuringTask));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tresult.add(key, task);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (legacyTaskConfigurations) {\n\t\t\t\t\t\t\t\t\tlet configuringTask = legacyTaskConfigurations[task.defines._key];\n\t\t\t\t\t\t\t\t\tif (configuringTask) {\n\t\t\t\t\t\t\t\t\t\tresult.add(key, TaskConfig.createCustomTask(task, configuringTask));\n\t\t\t\t\t\t\t\t\t\tcustomTasksToDelete.push(configuringTask);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tresult.add(key, task);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresult.add(key, task);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (customTasksToDelete.length > 0) {\n\t\t\t\t\t\t\t\tlet toDelete = customTasksToDelete.reduce<IStringDictionary<boolean>>((map, task) => {\n\t\t\t\t\t\t\t\t\tmap[task._id] = true;\n\t\t\t\t\t\t\t\t\treturn map;\n\t\t\t\t\t\t\t\t}, Object.create(null));\n\t\t\t\t\t\t\t\tfor (let task of folderTasks.set.tasks) {\n\t\t\t\t\t\t\t\t\tif (toDelete[task._id]) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.add(key, task);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.add(key, ...folderTasks.set.tasks);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst unUsedConfigurationsAsArray = Array.from(unUsedConfigurations);\n\n\t\t\t\t\t\t\tconst unUsedConfigurationPromises = unUsedConfigurationsAsArray.map(async (value) => {\n\t\t\t\t\t\t\t\tlet configuringTask = configurations!.byIdentifier[value];\n\t\t\t\t\t\t\t\tif (type && (type !== configuringTask.configures.type)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlet requiredTaskProviderUnavailable: boolean = false;\n\n\t\t\t\t\t\t\t\tfor (const [handle, provider] of this._providers) {\n\t\t\t\t\t\t\t\t\tconst providerType = this._providerTypes.get(handle);\n\t\t\t\t\t\t\t\t\tif (configuringTask.type === providerType) {\n\t\t\t\t\t\t\t\t\t\tif (providerType && !this.isTaskProviderEnabled(providerType)) {\n\t\t\t\t\t\t\t\t\t\t\trequiredTaskProviderUnavailable = true;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tconst resolvedTask = await provider.resolveTask(configuringTask);\n\t\t\t\t\t\t\t\t\t\t\tif (resolvedTask && (resolvedTask._id === configuringTask._id)) {\n\t\t\t\t\t\t\t\t\t\t\t\tresult.add(key, TaskConfig.createCustomTask(resolvedTask, configuringTask));\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\t\t// Ignore errors. The task could not be provided by any of the providers.\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (requiredTaskProviderUnavailable) {\n\t\t\t\t\t\t\t\t\tthis._outputChannel.append(nls.localize(\n\t\t\t\t\t\t\t\t\t\t'TaskService.providerUnavailable',\n\t\t\t\t\t\t\t\t\t\t'Warning: {0} tasks are unavailable in the current environment.\\n',\n\t\t\t\t\t\t\t\t\t\tconfiguringTask.configures.type\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._outputChannel.append(nls.localize(\n\t\t\t\t\t\t\t\t\t\t'TaskService.noConfiguration',\n\t\t\t\t\t\t\t\t\t\t'Error: The {0} task detection didn\\'t contribute a task for the following configuration:\\n{1}\\nThe task will be ignored.\\n',\n\t\t\t\t\t\t\t\t\t\tconfiguringTask.configures.type,\n\t\t\t\t\t\t\t\t\t\tJSON.stringify(configuringTask._source.config.element, undefined, 4)\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t\tthis.showOutput();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait Promise.all(unUsedConfigurationPromises);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.add(key, ...folderTasks.set.tasks);\n\t\t\t\t\t\t\tresult.add(key, ...contributed);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tawait Promise.all(customTasksPromises);\n\t\t\t\tif (needsRecentTasksMigration) {\n\t\t\t\t\t// At this point we have all the tasks and can migrate the recently used tasks.\n\t\t\t\t\tawait this.migrateRecentTasks(result.all());\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}, () => {\n\t\t\t\t// If we can't read the tasks.json file provide at least the contributed tasks\n\t\t\t\tlet result: TaskMap = new TaskMap();\n\t\t\t\tfor (let set of contributedTaskSets) {\n\t\t\t\t\tfor (let task of set.tasks) {\n\t\t\t\t\t\tconst folder = task.getWorkspaceFolder();\n\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\tresult.add(folder, task);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLegacyTaskConfigurations(workspaceTasks: TaskSet): IStringDictionary<CustomTask> | undefined {\n\t\tlet result: IStringDictionary<CustomTask> | undefined;\n\t\tfunction getResult(): IStringDictionary<CustomTask> {\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tresult = Object.create(null);\n\t\t\treturn result!;\n\t\t}\n\t\tfor (let task of workspaceTasks.tasks) {\n\t\t\tif (CustomTask.is(task)) {\n\t\t\t\tlet commandName = task.command && task.command.name;\n\t\t\t\t// This is for backwards compatibility with the 0.1.0 task annotation code\n\t\t\t\t// if we had a gulp, jake or grunt command a task specification was a annotation\n\t\t\t\tif (commandName === 'gulp' || commandName === 'grunt' || commandName === 'jake') {\n\t\t\t\t\tlet identifier = NKeyedTaskIdentifier.create({\n\t\t\t\t\t\ttype: commandName,\n\t\t\t\t\t\ttask: task.configurationProperties.name\n\t\t\t\t\t});\n\t\t\t\t\tgetResult()[identifier._key] = task;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic async getWorkspaceTasks(runSource: TaskRunSource = TaskRunSource.User): Promise<Map<string, WorkspaceFolderTaskResult>> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn new Map();\n\t\t}\n\t\tawait this._waitForSupportedExecutions;\n\t\tif (this._workspaceTasksPromise) {\n\t\t\treturn this._workspaceTasksPromise;\n\t\t}\n\t\tthis.updateWorkspaceTasks(runSource);\n\t\treturn this._workspaceTasksPromise!;\n\t}\n\n\tprivate updateWorkspaceTasks(runSource: TaskRunSource = TaskRunSource.User): void {\n\t\tthis._workspaceTasksPromise = this.computeWorkspaceTasks(runSource);\n\t}\n\n\tprivate async getAFolder(): Promise<IWorkspaceFolder> {\n\t\tlet folder = this.workspaceFolders.length > 0 ? this.workspaceFolders[0] : undefined;\n\t\tif (!folder) {\n\t\t\tconst userhome = await this.pathService.userHome();\n\t\t\tfolder = new WorkspaceFolder({ uri: userhome, name: resources.basename(userhome), index: 0 });\n\t\t}\n\t\treturn folder;\n\t}\n\n\tprotected computeWorkspaceTasks(runSource: TaskRunSource = TaskRunSource.User): Promise<Map<string, WorkspaceFolderTaskResult>> {\n\t\tlet promises: Promise<WorkspaceFolderTaskResult | undefined>[] = [];\n\t\tfor (let folder of this.workspaceFolders) {\n\t\t\tpromises.push(this.computeWorkspaceFolderTasks(folder, runSource).then((value) => value, () => undefined));\n\t\t}\n\t\treturn Promise.all(promises).then(async (values) => {\n\t\t\tlet result = new Map<string, WorkspaceFolderTaskResult>();\n\t\t\tfor (let value of values) {\n\t\t\t\tif (value) {\n\t\t\t\t\tresult.set(value.workspaceFolder.uri.toString(), value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst folder = await this.getAFolder();\n\t\t\tconst userTasks = await this.computeUserTasks(folder, runSource).then((value) => value, () => undefined);\n\t\t\tif (userTasks) {\n\t\t\t\tresult.set(USER_TASKS_GROUP_KEY, userTasks);\n\t\t\t}\n\n\t\t\tif (this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY) {\n\t\t\t\tconst workspaceFileTasks = await this.computeWorkspaceFileTasks(folder, runSource).then((value) => value, () => undefined);\n\t\t\t\tif (workspaceFileTasks && this._workspace && this._workspace.configuration) {\n\t\t\t\t\tresult.set(this._workspace.configuration.toString(), workspaceFileTasks);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate get jsonTasksSupported(): boolean {\n\t\treturn !!ShellExecutionSupportedContext.getValue(this.contextKeyService) && !!ProcessExecutionSupportedContext.getValue(this.contextKeyService);\n\t}\n\n\tprivate computeWorkspaceFolderTasks(workspaceFolder: IWorkspaceFolder, runSource: TaskRunSource = TaskRunSource.User): Promise<WorkspaceFolderTaskResult> {\n\t\treturn (this.executionEngine === ExecutionEngine.Process\n\t\t\t? this.computeLegacyConfiguration(workspaceFolder)\n\t\t\t: this.computeConfiguration(workspaceFolder)).\n\t\t\tthen((workspaceFolderConfiguration) => {\n\t\t\t\tif (!workspaceFolderConfiguration || !workspaceFolderConfiguration.config || workspaceFolderConfiguration.hasErrors) {\n\t\t\t\t\treturn Promise.resolve({ workspaceFolder, set: undefined, configurations: undefined, hasErrors: workspaceFolderConfiguration ? workspaceFolderConfiguration.hasErrors : false });\n\t\t\t\t}\n\t\t\t\treturn ProblemMatcherRegistry.onReady().then(async (): Promise<WorkspaceFolderTaskResult> => {\n\t\t\t\t\tlet taskSystemInfo: TaskSystemInfo | undefined = this.getTaskSystemInfo(workspaceFolder.uri.scheme);\n\t\t\t\t\tlet problemReporter = new ProblemReporter(this._outputChannel);\n\t\t\t\t\tlet parseResult = TaskConfig.parse(workspaceFolder, undefined, taskSystemInfo ? taskSystemInfo.platform : Platform.platform, workspaceFolderConfiguration.config!, problemReporter, TaskConfig.TaskConfigSource.TasksJson, this.contextKeyService);\n\t\t\t\t\tlet hasErrors = false;\n\t\t\t\t\tif (!parseResult.validationStatus.isOK() && (parseResult.validationStatus.state !== ValidationState.Info)) {\n\t\t\t\t\t\thasErrors = true;\n\t\t\t\t\t\tthis.showOutput(runSource);\n\t\t\t\t\t}\n\t\t\t\t\tif (problemReporter.status.isFatal()) {\n\t\t\t\t\t\tproblemReporter.fatal(nls.localize('TaskSystem.configurationErrors', 'Error: the provided task configuration has validation errors and can\\'t not be used. Please correct the errors first.'));\n\t\t\t\t\t\treturn { workspaceFolder, set: undefined, configurations: undefined, hasErrors };\n\t\t\t\t\t}\n\t\t\t\t\tlet customizedTasks: { byIdentifier: IStringDictionary<ConfiguringTask>; } | undefined;\n\t\t\t\t\tif (parseResult.configured && parseResult.configured.length > 0) {\n\t\t\t\t\t\tcustomizedTasks = {\n\t\t\t\t\t\t\tbyIdentifier: Object.create(null)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfor (let task of parseResult.configured) {\n\t\t\t\t\t\t\tcustomizedTasks.byIdentifier[task.configures._key] = task;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.jsonTasksSupported && (parseResult.custom.length > 0)) {\n\t\t\t\t\t\tconsole.warn('Custom workspace tasks are not supported.');\n\t\t\t\t\t}\n\t\t\t\t\treturn { workspaceFolder, set: { tasks: this.jsonTasksSupported ? parseResult.custom : [] }, configurations: customizedTasks, hasErrors };\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate testParseExternalConfig(config: TaskConfig.ExternalTaskRunnerConfiguration | undefined, location: string): { config: TaskConfig.ExternalTaskRunnerConfiguration | undefined, hasParseErrors: boolean } {\n\t\tif (!config) {\n\t\t\treturn { config: undefined, hasParseErrors: false };\n\t\t}\n\t\tlet parseErrors: string[] = (config as any).$parseErrors;\n\t\tif (parseErrors) {\n\t\t\tlet isAffected = false;\n\t\t\tfor (const parseError of parseErrors) {\n\t\t\t\tif (/tasks\\.json$/.test(parseError)) {\n\t\t\t\t\tisAffected = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isAffected) {\n\t\t\t\tthis._outputChannel.append(nls.localize({ key: 'TaskSystem.invalidTaskJsonOther', comment: ['Message notifies of an error in one of several places there is tasks related json, not necessarily in a file named tasks.json'] }, 'Error: The content of the tasks json in {0} has syntax errors. Please correct them before executing a task.\\n', location));\n\t\t\t\tthis.showOutput();\n\t\t\t\treturn { config, hasParseErrors: true };\n\t\t\t}\n\t\t}\n\t\treturn { config, hasParseErrors: false };\n\t}\n\n\tprivate async computeWorkspaceFileTasks(workspaceFolder: IWorkspaceFolder, runSource: TaskRunSource = TaskRunSource.User): Promise<WorkspaceFolderTaskResult> {\n\t\tif (this.executionEngine === ExecutionEngine.Process) {\n\t\t\treturn this.emptyWorkspaceTaskResults(workspaceFolder);\n\t\t}\n\t\tconst configuration = this.testParseExternalConfig(this.configurationService.inspect<TaskConfig.ExternalTaskRunnerConfiguration>('tasks').workspaceValue, nls.localize('TasksSystem.locationWorkspaceConfig', 'workspace file'));\n\t\tlet customizedTasks: { byIdentifier: IStringDictionary<ConfiguringTask>; } = {\n\t\t\tbyIdentifier: Object.create(null)\n\t\t};\n\n\t\tconst custom: CustomTask[] = [];\n\t\tawait this.computeTasksForSingleConfig(workspaceFolder, configuration.config, runSource, custom, customizedTasks.byIdentifier, TaskConfig.TaskConfigSource.WorkspaceFile);\n\t\tconst engine = configuration.config ? TaskConfig.ExecutionEngine.from(configuration.config) : ExecutionEngine.Terminal;\n\t\tif (engine === ExecutionEngine.Process) {\n\t\t\tthis.notificationService.warn(nls.localize('TaskSystem.versionWorkspaceFile', 'Only tasks version 2.0.0 permitted in workspace configuration files.'));\n\t\t\treturn this.emptyWorkspaceTaskResults(workspaceFolder);\n\t\t}\n\t\treturn { workspaceFolder, set: { tasks: custom }, configurations: customizedTasks, hasErrors: configuration.hasParseErrors };\n\t}\n\n\tprivate async computeUserTasks(workspaceFolder: IWorkspaceFolder, runSource: TaskRunSource = TaskRunSource.User): Promise<WorkspaceFolderTaskResult> {\n\t\tif (this.executionEngine === ExecutionEngine.Process) {\n\t\t\treturn this.emptyWorkspaceTaskResults(workspaceFolder);\n\t\t}\n\t\tconst configuration = this.testParseExternalConfig(this.configurationService.inspect<TaskConfig.ExternalTaskRunnerConfiguration>('tasks').userValue, nls.localize('TasksSystem.locationUserConfig', 'user settings'));\n\t\tlet customizedTasks: { byIdentifier: IStringDictionary<ConfiguringTask>; } = {\n\t\t\tbyIdentifier: Object.create(null)\n\t\t};\n\n\t\tconst custom: CustomTask[] = [];\n\t\tawait this.computeTasksForSingleConfig(workspaceFolder, configuration.config, runSource, custom, customizedTasks.byIdentifier, TaskConfig.TaskConfigSource.User);\n\t\tconst engine = configuration.config ? TaskConfig.ExecutionEngine.from(configuration.config) : ExecutionEngine.Terminal;\n\t\tif (engine === ExecutionEngine.Process) {\n\t\t\tthis.notificationService.warn(nls.localize('TaskSystem.versionSettings', 'Only tasks version 2.0.0 permitted in user settings.'));\n\t\t\treturn this.emptyWorkspaceTaskResults(workspaceFolder);\n\t\t}\n\t\treturn { workspaceFolder, set: { tasks: custom }, configurations: customizedTasks, hasErrors: configuration.hasParseErrors };\n\t}\n\n\tprivate emptyWorkspaceTaskResults(workspaceFolder: IWorkspaceFolder): WorkspaceFolderTaskResult {\n\t\treturn { workspaceFolder, set: undefined, configurations: undefined, hasErrors: false };\n\t}\n\n\tprivate async computeTasksForSingleConfig(workspaceFolder: IWorkspaceFolder, config: TaskConfig.ExternalTaskRunnerConfiguration | undefined, runSource: TaskRunSource, custom: CustomTask[], customized: IStringDictionary<ConfiguringTask>, source: TaskConfig.TaskConfigSource, isRecentTask: boolean = false): Promise<boolean> {\n\t\tif (!config) {\n\t\t\treturn false;\n\t\t}\n\t\tlet taskSystemInfo: TaskSystemInfo | undefined = workspaceFolder ? this.getTaskSystemInfo(workspaceFolder.uri.scheme) : undefined;\n\t\tlet problemReporter = new ProblemReporter(this._outputChannel);\n\t\tlet parseResult = TaskConfig.parse(workspaceFolder, this._workspace, taskSystemInfo ? taskSystemInfo.platform : Platform.platform, config, problemReporter, source, this.contextKeyService, isRecentTask);\n\t\tlet hasErrors = false;\n\t\tif (!parseResult.validationStatus.isOK() && (parseResult.validationStatus.state !== ValidationState.Info)) {\n\t\t\tthis.showOutput(runSource);\n\t\t\thasErrors = true;\n\t\t}\n\t\tif (problemReporter.status.isFatal()) {\n\t\t\tproblemReporter.fatal(nls.localize('TaskSystem.configurationErrors', 'Error: the provided task configuration has validation errors and can\\'t not be used. Please correct the errors first.'));\n\t\t\treturn hasErrors;\n\t\t}\n\t\tif (parseResult.configured && parseResult.configured.length > 0) {\n\t\t\tfor (let task of parseResult.configured) {\n\t\t\t\tcustomized[task.configures._key] = task;\n\t\t\t}\n\t\t}\n\t\tif (!this.jsonTasksSupported && (parseResult.custom.length > 0)) {\n\t\t\tconsole.warn('Custom workspace tasks are not supported.');\n\t\t} else {\n\t\t\tfor (let task of parseResult.custom) {\n\t\t\t\tcustom.push(task);\n\t\t\t}\n\t\t}\n\t\treturn hasErrors;\n\t}\n\n\tprivate computeConfiguration(workspaceFolder: IWorkspaceFolder): Promise<WorkspaceFolderConfigurationResult> {\n\t\tlet { config, hasParseErrors } = this.getConfiguration(workspaceFolder);\n\t\treturn Promise.resolve<WorkspaceFolderConfigurationResult>({ workspaceFolder, config, hasErrors: hasParseErrors });\n\t}\n\n\tprotected abstract computeLegacyConfiguration(workspaceFolder: IWorkspaceFolder): Promise<WorkspaceFolderConfigurationResult>;\n\n\tprivate computeWorkspaceFolderSetup(): [IWorkspaceFolder[], IWorkspaceFolder[], ExecutionEngine, JsonSchemaVersion, IWorkspace | undefined] {\n\t\tlet workspaceFolders: IWorkspaceFolder[] = [];\n\t\tlet ignoredWorkspaceFolders: IWorkspaceFolder[] = [];\n\t\tlet executionEngine = ExecutionEngine.Terminal;\n\t\tlet schemaVersion = JsonSchemaVersion.V2_0_0;\n\t\tlet workspace: IWorkspace | undefined;\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\tlet workspaceFolder: IWorkspaceFolder = this.contextService.getWorkspace().folders[0];\n\t\t\tworkspaceFolders.push(workspaceFolder);\n\t\t\texecutionEngine = this.computeExecutionEngine(workspaceFolder);\n\t\t\tconst telemetryData: { [key: string]: any; } = {\n\t\t\t\texecutionEngineVersion: executionEngine\n\t\t\t};\n\t\t\t/* __GDPR__\n\t\t\t\t\"taskService.engineVersion\" : {\n\t\t\t\t\t\"executionEngineVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('taskService.engineVersion', telemetryData);\n\t\t\tschemaVersion = this.computeJsonSchemaVersion(workspaceFolder);\n\t\t} else if (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tworkspace = this.contextService.getWorkspace();\n\t\t\tfor (let workspaceFolder of this.contextService.getWorkspace().folders) {\n\t\t\t\tif (schemaVersion === this.computeJsonSchemaVersion(workspaceFolder)) {\n\t\t\t\t\tworkspaceFolders.push(workspaceFolder);\n\t\t\t\t} else {\n\t\t\t\t\tignoredWorkspaceFolders.push(workspaceFolder);\n\t\t\t\t\tthis._outputChannel.append(nls.localize(\n\t\t\t\t\t\t'taskService.ignoreingFolder',\n\t\t\t\t\t\t'Ignoring task configurations for workspace folder {0}. Multi folder workspace task support requires that all folders use task version 2.0.0\\n',\n\t\t\t\t\t\tworkspaceFolder.uri.fsPath));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [workspaceFolders, ignoredWorkspaceFolders, executionEngine, schemaVersion, workspace];\n\t}\n\n\tprivate computeExecutionEngine(workspaceFolder: IWorkspaceFolder): ExecutionEngine {\n\t\tlet { config } = this.getConfiguration(workspaceFolder);\n\t\tif (!config) {\n\t\t\treturn ExecutionEngine._default;\n\t\t}\n\t\treturn TaskConfig.ExecutionEngine.from(config);\n\t}\n\n\tprivate computeJsonSchemaVersion(workspaceFolder: IWorkspaceFolder): JsonSchemaVersion {\n\t\tlet { config } = this.getConfiguration(workspaceFolder);\n\t\tif (!config) {\n\t\t\treturn JsonSchemaVersion.V2_0_0;\n\t\t}\n\t\treturn TaskConfig.JsonSchemaVersion.from(config);\n\t}\n\n\tprotected getConfiguration(workspaceFolder: IWorkspaceFolder, source?: string): { config: TaskConfig.ExternalTaskRunnerConfiguration | undefined; hasParseErrors: boolean } {\n\t\tlet result;\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tresult = undefined;\n\t\t} else {\n\t\t\tconst wholeConfig = this.configurationService.inspect<TaskConfig.ExternalTaskRunnerConfiguration>('tasks', { resource: workspaceFolder.uri });\n\t\t\tswitch (source) {\n\t\t\t\tcase TaskSourceKind.User: result = Objects.deepClone(wholeConfig.userValue); break;\n\t\t\t\tcase TaskSourceKind.Workspace: result = Objects.deepClone(wholeConfig.workspaceFolderValue); break;\n\t\t\t\tcase TaskSourceKind.WorkspaceFile: result = Objects.deepClone(wholeConfig.workspaceValue); break;\n\t\t\t\tdefault: result = Objects.deepClone(wholeConfig.workspaceFolderValue);\n\t\t\t}\n\t\t}\n\t\tif (!result) {\n\t\t\treturn { config: undefined, hasParseErrors: false };\n\t\t}\n\t\tlet parseErrors: string[] = (result as any).$parseErrors;\n\t\tif (parseErrors) {\n\t\t\tlet isAffected = false;\n\t\t\tfor (const parseError of parseErrors) {\n\t\t\t\tif (/tasks\\.json$/.test(parseError)) {\n\t\t\t\t\tisAffected = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isAffected) {\n\t\t\t\tthis._outputChannel.append(nls.localize('TaskSystem.invalidTaskJson', 'Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\\n'));\n\t\t\t\tthis.showOutput();\n\t\t\t\treturn { config: undefined, hasParseErrors: true };\n\t\t\t}\n\t\t}\n\t\treturn { config: result, hasParseErrors: false };\n\t}\n\n\tpublic inTerminal(): boolean {\n\t\tif (this._taskSystem) {\n\t\t\treturn this._taskSystem instanceof TerminalTaskSystem;\n\t\t}\n\t\treturn this.executionEngine === ExecutionEngine.Terminal;\n\t}\n\n\tpublic configureAction(): Action {\n\t\tconst thisCapture: AbstractTaskService = this;\n\t\treturn new class extends Action {\n\t\t\tconstructor() {\n\t\t\t\tsuper(ConfigureTaskAction.ID, ConfigureTaskAction.TEXT, undefined, true, () => { thisCapture.runConfigureTasks(); return Promise.resolve(undefined); });\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate handleError(err: any): void {\n\t\tlet showOutput = true;\n\t\tif (err instanceof TaskError) {\n\t\t\tlet buildError = <TaskError>err;\n\t\t\tlet needsConfig = buildError.code === TaskErrors.NotConfigured || buildError.code === TaskErrors.NoBuildTask || buildError.code === TaskErrors.NoTestTask;\n\t\t\tlet needsTerminate = buildError.code === TaskErrors.RunningTask;\n\t\t\tif (needsConfig || needsTerminate) {\n\t\t\t\tthis.notificationService.prompt(buildError.severity, buildError.message, [{\n\t\t\t\t\tlabel: needsConfig ? ConfigureTaskAction.TEXT : nls.localize('TerminateAction.label', \"Terminate Task\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tif (needsConfig) {\n\t\t\t\t\t\t\tthis.runConfigureTasks();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.runTerminateCommand();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]);\n\t\t\t} else {\n\t\t\t\tthis.notificationService.notify({ severity: buildError.severity, message: buildError.message });\n\t\t\t}\n\t\t} else if (err instanceof Error) {\n\t\t\tlet error = <Error>err;\n\t\t\tthis.notificationService.error(error.message);\n\t\t\tshowOutput = false;\n\t\t} else if (Types.isString(err)) {\n\t\t\tthis.notificationService.error(<string>err);\n\t\t} else {\n\t\t\tthis.notificationService.error(nls.localize('TaskSystem.unknownError', 'An error has occurred while running a task. See task log for details.'));\n\t\t}\n\t\tif (showOutput) {\n\t\t\tthis.showOutput();\n\t\t}\n\t}\n\n\tprivate canRunCommand(): boolean {\n\t\treturn true;\n\t}\n\n\tprivate showDetail(): boolean {\n\t\treturn this.configurationService.getValue<boolean>(QUICKOPEN_DETAIL_CONFIG);\n\t}\n\n\tprivate async createTaskQuickPickEntries(tasks: Task[], group: boolean = false, sort: boolean = false, selectedEntry?: TaskQuickPickEntry, includeRecents: boolean = true): Promise<TaskQuickPickEntry[]> {\n\t\tlet count: { [key: string]: number; } = {};\n\t\tif (tasks === undefined || tasks === null || tasks.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tconst TaskQuickPickEntry = (task: Task): TaskQuickPickEntry => {\n\t\t\tlet entryLabel = task._label;\n\t\t\tif (count[task._id]) {\n\t\t\t\tentryLabel = entryLabel + ' (' + count[task._id].toString() + ')';\n\t\t\t\tcount[task._id]++;\n\t\t\t} else {\n\t\t\t\tcount[task._id] = 1;\n\t\t\t}\n\t\t\treturn { label: entryLabel, description: this.getTaskDescription(task), task, detail: this.showDetail() ? task.configurationProperties.detail : undefined };\n\n\t\t};\n\t\tfunction fillEntries(entries: QuickPickInput<TaskQuickPickEntry>[], tasks: Task[], groupLabel: string): void {\n\t\t\tif (tasks.length) {\n\t\t\t\tentries.push({ type: 'separator', label: groupLabel });\n\t\t\t}\n\t\t\tfor (let task of tasks) {\n\t\t\t\tlet entry: TaskQuickPickEntry = TaskQuickPickEntry(task);\n\t\t\t\tentry.buttons = [{ iconClass: ThemeIcon.asClassName(configureTaskIcon), tooltip: nls.localize('configureTask', \"Configure Task\") }];\n\t\t\t\tif (selectedEntry && (task === selectedEntry.task)) {\n\t\t\t\t\tentries.unshift(selectedEntry);\n\t\t\t\t} else {\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet entries: TaskQuickPickEntry[];\n\t\tif (group) {\n\t\t\tentries = [];\n\t\t\tif (tasks.length === 1) {\n\t\t\t\tentries.push(TaskQuickPickEntry(tasks[0]));\n\t\t\t} else {\n\t\t\t\tlet recentlyUsedTasks = await this.readRecentTasks();\n\t\t\t\tlet recent: Task[] = [];\n\t\t\t\tlet recentSet: Set<string> = new Set();\n\t\t\t\tlet configured: Task[] = [];\n\t\t\t\tlet detected: Task[] = [];\n\t\t\t\tlet taskMap: IStringDictionary<Task> = Object.create(null);\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tlet key = task.getCommonTaskId();\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\ttaskMap[key] = task;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\trecentlyUsedTasks.reverse().forEach(recentTask => {\n\t\t\t\t\tconst key = recentTask.getCommonTaskId();\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\trecentSet.add(key);\n\t\t\t\t\t\tlet task = taskMap[key];\n\t\t\t\t\t\tif (task) {\n\t\t\t\t\t\t\trecent.push(task);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tlet key = task.getCommonTaskId();\n\t\t\t\t\tif (!key || !recentSet.has(key)) {\n\t\t\t\t\t\tif ((task._source.kind === TaskSourceKind.Workspace) || (task._source.kind === TaskSourceKind.User)) {\n\t\t\t\t\t\t\tconfigured.push(task);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdetected.push(task);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst sorter = this.createSorter();\n\t\t\t\tif (includeRecents) {\n\t\t\t\t\tfillEntries(entries, recent, nls.localize('recentlyUsed', 'recently used tasks'));\n\t\t\t\t}\n\t\t\t\tconfigured = configured.sort((a, b) => sorter.compare(a, b));\n\t\t\t\tfillEntries(entries, configured, nls.localize('configured', 'configured tasks'));\n\t\t\t\tdetected = detected.sort((a, b) => sorter.compare(a, b));\n\t\t\t\tfillEntries(entries, detected, nls.localize('detected', 'detected tasks'));\n\t\t\t}\n\t\t} else {\n\t\t\tif (sort) {\n\t\t\t\tconst sorter = this.createSorter();\n\t\t\t\ttasks = tasks.sort((a, b) => sorter.compare(a, b));\n\t\t\t}\n\t\t\tentries = tasks.map<TaskQuickPickEntry>(task => TaskQuickPickEntry(task));\n\t\t}\n\t\tcount = {};\n\t\treturn entries;\n\t}\n\n\tprivate async showTwoLevelQuickPick(placeHolder: string, defaultEntry?: TaskQuickPickEntry) {\n\t\treturn TaskQuickPick.show(this, this.configurationService, this.quickInputService, this.notificationService, placeHolder, defaultEntry);\n\t}\n\n\tprivate async showQuickPick(tasks: Promise<Task[]> | Task[], placeHolder: string, defaultEntry?: TaskQuickPickEntry, group: boolean = false, sort: boolean = false, selectedEntry?: TaskQuickPickEntry, additionalEntries?: TaskQuickPickEntry[]): Promise<TaskQuickPickEntry | undefined | null> {\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tconst cancellationToken: CancellationToken = tokenSource.token;\n\t\tlet _createEntries = new Promise<QuickPickInput<TaskQuickPickEntry>[]>((resolve) => {\n\t\t\tif (Array.isArray(tasks)) {\n\t\t\t\tresolve(this.createTaskQuickPickEntries(tasks, group, sort, selectedEntry));\n\t\t\t} else {\n\t\t\t\tresolve(tasks.then((tasks) => this.createTaskQuickPickEntries(tasks, group, sort, selectedEntry)));\n\t\t\t}\n\t\t});\n\n\t\tconst timeout: boolean = await Promise.race([new Promise<boolean>(async (resolve) => {\n\t\t\tawait _createEntries;\n\t\t\tresolve(false);\n\t\t}), new Promise<boolean>((resolve) => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tresolve(true);\n\t\t\t}, 200);\n\t\t})]);\n\n\t\tif (!timeout && ((await _createEntries).length === 1) && this.configurationService.getValue<boolean>(QUICKOPEN_SKIP_CONFIG)) {\n\t\t\treturn (<TaskQuickPickEntry>(await _createEntries)[0]);\n\t\t}\n\n\t\tconst pickEntries = _createEntries.then((entries) => {\n\t\t\tif ((entries.length === 1) && this.configurationService.getValue<boolean>(QUICKOPEN_SKIP_CONFIG)) {\n\t\t\t\ttokenSource.cancel();\n\t\t\t} else if ((entries.length === 0) && defaultEntry) {\n\t\t\t\tentries.push(defaultEntry);\n\t\t\t} else if (entries.length > 1 && additionalEntries && additionalEntries.length > 0) {\n\t\t\t\tentries.push({ type: 'separator', label: '' });\n\t\t\t\tentries.push(additionalEntries[0]);\n\t\t\t}\n\t\t\treturn entries;\n\t\t});\n\n\t\tconst picker: IQuickPick<TaskQuickPickEntry> = this.quickInputService.createQuickPick();\n\t\tpicker.placeholder = placeHolder;\n\t\tpicker.matchOnDescription = true;\n\n\t\tpicker.onDidTriggerItemButton(context => {\n\t\t\tlet task = context.item.task;\n\t\t\tthis.quickInputService.cancel();\n\t\t\tif (ContributedTask.is(task)) {\n\t\t\t\tthis.customize(task, undefined, true);\n\t\t\t} else if (CustomTask.is(task)) {\n\t\t\t\tthis.openConfig(task);\n\t\t\t}\n\t\t});\n\t\tpicker.busy = true;\n\t\tpickEntries.then(entries => {\n\t\t\tpicker.busy = false;\n\t\t\tpicker.items = entries;\n\t\t});\n\t\tpicker.show();\n\n\t\treturn new Promise<TaskQuickPickEntry | undefined | null>(resolve => {\n\t\t\tthis._register(picker.onDidAccept(async () => {\n\t\t\t\tlet selection = picker.selectedItems ? picker.selectedItems[0] : undefined;\n\t\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\t\t// canceled when there's only one task\n\t\t\t\t\tconst task = (await pickEntries)[0];\n\t\t\t\t\tif ((<any>task).task) {\n\t\t\t\t\t\tselection = <TaskQuickPickEntry>task;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpicker.dispose();\n\t\t\t\tif (!selection) {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t\tresolve(selection);\n\t\t\t}));\n\t\t});\n\t}\n\n\tprivate needsRecentTasksMigration(): boolean {\n\t\treturn (this.getRecentlyUsedTasksV1().size > 0) && (this.getRecentlyUsedTasks().size === 0);\n\t}\n\n\tprivate async migrateRecentTasks(tasks: Task[]) {\n\t\tif (!this.needsRecentTasksMigration()) {\n\t\t\treturn;\n\t\t}\n\t\tlet recentlyUsedTasks = this.getRecentlyUsedTasksV1();\n\t\tlet taskMap: IStringDictionary<Task> = Object.create(null);\n\t\ttasks.forEach(task => {\n\t\t\tlet key = task.getRecentlyUsedKey();\n\t\t\tif (key) {\n\t\t\t\ttaskMap[key] = task;\n\t\t\t}\n\t\t});\n\t\tconst reversed = [...recentlyUsedTasks.keys()].reverse();\n\t\tfor (const key in reversed) {\n\t\t\tlet task = taskMap[key];\n\t\t\tif (task) {\n\t\t\t\tawait this.setRecentlyUsedTask(task);\n\t\t\t}\n\t\t}\n\t\tthis.storageService.remove(AbstractTaskService.RecentlyUsedTasks_Key, StorageScope.WORKSPACE);\n\t}\n\n\tprivate showIgnoredFoldersMessage(): Promise<void> {\n\t\tif (this.ignoredWorkspaceFolders.length === 0 || !this.showIgnoreMessage) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tnls.localize('TaskService.ignoredFolder', 'The following workspace folders are ignored since they use task version 0.1.0: {0}', this.ignoredWorkspaceFolders.map(f => f.name).join(', ')),\n\t\t\t[{\n\t\t\t\tlabel: nls.localize('TaskService.notAgain', \"Don't Show Again\"),\n\t\t\t\tisSecondary: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.storageService.store(AbstractTaskService.IgnoreTask010DonotShowAgain_key, true, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t\t\t\tthis._showIgnoreMessage = false;\n\t\t\t\t}\n\t\t\t}]\n\t\t);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate async trust(): Promise<boolean> {\n\t\treturn (await this.workspaceTrustRequestService.requestWorkspaceTrust(\n\t\t\t{\n\t\t\t\tmodal: true,\n\t\t\t\tmessage: nls.localize('TaskService.requestTrust', \"Listing and running tasks requires that some of the files in this workspace be executed as code.\")\n\t\t\t})) === true;\n\t}\n\n\tprivate runTaskCommand(arg?: any): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tlet identifier = this.getTaskIdentifier(arg);\n\t\tif (identifier !== undefined) {\n\t\t\tthis.getGroupedTasks().then(async (grouped) => {\n\t\t\t\tlet resolver = this.createResolver(grouped);\n\t\t\t\tlet folderURIs: (URI | string)[] = this.contextService.getWorkspace().folders.map(folder => folder.uri);\n\t\t\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\t\t\tfolderURIs.push(this.contextService.getWorkspace().configuration!);\n\t\t\t\t}\n\t\t\t\tfolderURIs.push(USER_TASKS_GROUP_KEY);\n\t\t\t\tfor (let uri of folderURIs) {\n\t\t\t\t\tlet task = await resolver.resolve(uri, identifier);\n\t\t\t\t\tif (task) {\n\t\t\t\t\t\tthis.run(task).then(undefined, reason => {\n\t\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.doRunTaskCommand(grouped.all());\n\t\t\t}, () => {\n\t\t\t\tthis.doRunTaskCommand();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doRunTaskCommand();\n\t\t}\n\t}\n\n\tprivate tasksAndGroupedTasks(filter?: TaskFilter): { tasks: Promise<Task[]>, grouped: Promise<TaskMap> } {\n\t\tif (!this.versionAndEngineCompatible(filter)) {\n\t\t\treturn { tasks: Promise.resolve<Task[]>([]), grouped: Promise.resolve(new TaskMap()) };\n\t\t}\n\t\tconst grouped = this.getGroupedTasks(filter ? filter.type : undefined);\n\t\tconst tasks = grouped.then((map) => {\n\t\t\tif (!filter || !filter.type) {\n\t\t\t\treturn map.all();\n\t\t\t}\n\t\t\tlet result: Task[] = [];\n\t\t\tmap.forEach((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (ContributedTask.is(task) && task.defines.type === filter.type) {\n\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t} else if (CustomTask.is(task)) {\n\t\t\t\t\t\tif (task.type === filter.type) {\n\t\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet customizes = task.customizes();\n\t\t\t\t\t\t\tif (customizes && customizes.type === filter.type) {\n\t\t\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\t\treturn { tasks, grouped };\n\t}\n\n\tprivate doRunTaskCommand(tasks?: Task[]): void {\n\t\tconst pickThen = (task: Task | undefined | null) => {\n\t\t\tif (task === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (task === null) {\n\t\t\t\tthis.runConfigureTasks();\n\t\t\t} else {\n\t\t\t\tthis.run(task, { attachProblemMatcher: true }, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst placeholder = nls.localize('TaskService.pickRunTask', 'Select the task to run');\n\n\t\tthis.showIgnoredFoldersMessage().then(() => {\n\t\t\tif (this.configurationService.getValue(USE_SLOW_PICKER)) {\n\t\t\t\tlet taskResult: { tasks: Promise<Task[]>, grouped: Promise<TaskMap> } | undefined = undefined;\n\t\t\t\tif (!tasks) {\n\t\t\t\t\ttaskResult = this.tasksAndGroupedTasks();\n\t\t\t\t}\n\t\t\t\tthis.showQuickPick(tasks ? tasks : taskResult!.tasks, placeholder,\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize('TaskService.noEntryToRunSlow', '$(plus) Configure a Task'),\n\t\t\t\t\t\ttask: null\n\t\t\t\t\t},\n\t\t\t\t\ttrue).\n\t\t\t\t\tthen((entry) => {\n\t\t\t\t\t\treturn pickThen(entry ? entry.task : undefined);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.showTwoLevelQuickPick(placeholder,\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize('TaskService.noEntryToRun', '$(plus) Configure a Task'),\n\t\t\t\t\t\ttask: null\n\t\t\t\t\t}).\n\t\t\t\t\tthen(pickThen);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate reRunTaskCommand(): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\n\t\tProblemMatcherRegistry.onReady().then(() => {\n\t\t\treturn this.editorService.saveAll({ reason: SaveReason.AUTO }).then(() => { // make sure all dirty editors are saved\n\t\t\t\tlet executeResult = this.getTaskSystem().rerun();\n\t\t\t\tif (executeResult) {\n\t\t\t\t\treturn this.handleExecuteResult(executeResult);\n\t\t\t\t} else {\n\t\t\t\t\tthis.doRunTaskCommand();\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate splitPerGroupType(tasks: Task[]): { none: Task[], defaults: Task[], users: Task[] } {\n\t\tlet none: Task[] = [];\n\t\tlet defaults: Task[] = [];\n\t\tlet users: Task[] = [];\n\t\tfor (let task of tasks) {\n\t\t\tif (task.configurationProperties.groupType === GroupType.default) {\n\t\t\t\tdefaults.push(task);\n\t\t\t} else if (task.configurationProperties.groupType === GroupType.user) {\n\t\t\t\tusers.push(task);\n\t\t\t} else {\n\t\t\t\tnone.push(task);\n\t\t\t}\n\t\t}\n\t\treturn { none, defaults, users };\n\t}\n\n\tprivate runBuildCommand(): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.schemaVersion === JsonSchemaVersion.V0_1_0) {\n\t\t\tthis.build();\n\t\t\treturn;\n\t\t}\n\t\tlet options: IProgressOptions = {\n\t\t\tlocation: ProgressLocation.Window,\n\t\t\ttitle: nls.localize('TaskService.fetchingBuildTasks', 'Fetching build tasks...')\n\t\t};\n\t\tlet promise = this.getWorkspaceTasks().then(tasks => {\n\t\t\tconst buildTasks: ConfiguringTask[] = [];\n\t\t\tfor (const taskSource of tasks) {\n\t\t\t\tfor (const task in taskSource[1].configurations?.byIdentifier) {\n\t\t\t\t\tif ((taskSource[1].configurations?.byIdentifier[task].configurationProperties.group === TaskGroup.Build) &&\n\t\t\t\t\t\t(taskSource[1].configurations?.byIdentifier[task].configurationProperties.groupType === GroupType.default)) {\n\t\t\t\t\t\tbuildTasks.push(taskSource[1].configurations.byIdentifier[task]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (buildTasks.length === 1) {\n\t\t\t\tthis.tryResolveTask(buildTasks[0]).then(resolvedTask => {\n\t\t\t\t\tthis.run(resolvedTask, undefined, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.getTasksForGroup(TaskGroup.Build).then((tasks) => {\n\t\t\t\tif (tasks.length > 0) {\n\t\t\t\t\tlet { defaults, users } = this.splitPerGroupType(tasks);\n\t\t\t\t\tif (defaults.length === 1) {\n\t\t\t\t\t\tthis.run(defaults[0], undefined, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (defaults.length + users.length > 0) {\n\t\t\t\t\t\ttasks = defaults.concat(users);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.showIgnoredFoldersMessage().then(() => {\n\t\t\t\t\tthis.showQuickPick(tasks,\n\t\t\t\t\t\tnls.localize('TaskService.pickBuildTask', 'Select the build task to run'),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('TaskService.noBuildTask', 'No build task to run found. Configure Build Task...'),\n\t\t\t\t\t\t\ttask: null\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue).then((entry) => {\n\t\t\t\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\t\t\t\tif (task === undefined) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (task === null) {\n\t\t\t\t\t\t\t\tthis.runConfigureDefaultBuildTask();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.run(task, { attachProblemMatcher: true }, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tthis.progressService.withProgress(options, () => promise);\n\t}\n\n\tprivate runTestCommand(): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.schemaVersion === JsonSchemaVersion.V0_1_0) {\n\t\t\tthis.runTest();\n\t\t\treturn;\n\t\t}\n\t\tlet options: IProgressOptions = {\n\t\t\tlocation: ProgressLocation.Window,\n\t\t\ttitle: nls.localize('TaskService.fetchingTestTasks', 'Fetching test tasks...')\n\t\t};\n\t\tlet promise = this.getTasksForGroup(TaskGroup.Test).then((tasks) => {\n\t\t\tif (tasks.length > 0) {\n\t\t\t\tlet { defaults, users } = this.splitPerGroupType(tasks);\n\t\t\t\tif (defaults.length === 1) {\n\t\t\t\t\tthis.run(defaults[0], undefined, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (defaults.length + users.length > 0) {\n\t\t\t\t\ttasks = defaults.concat(users);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.showIgnoredFoldersMessage().then(() => {\n\t\t\t\tthis.showQuickPick(tasks,\n\t\t\t\t\tnls.localize('TaskService.pickTestTask', 'Select the test task to run'),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize('TaskService.noTestTaskTerminal', 'No test task to run found. Configure Tasks...'),\n\t\t\t\t\t\ttask: null\n\t\t\t\t\t}, true\n\t\t\t\t).then((entry) => {\n\t\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\t\tif (task === undefined) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (task === null) {\n\t\t\t\t\t\tthis.runConfigureTasks();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.run(task, undefined, TaskRunSource.User).then(undefined, reason => {\n\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tthis.progressService.withProgress(options, () => promise);\n\t}\n\n\tprivate runTerminateCommand(arg?: any): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tif (arg === 'terminateAll') {\n\t\t\tthis.terminateAll();\n\t\t\treturn;\n\t\t}\n\t\tlet runQuickPick = (promise?: Promise<Task[]>) => {\n\t\t\tthis.showQuickPick(promise || this.getActiveTasks(),\n\t\t\t\tnls.localize('TaskService.taskToTerminate', 'Select a task to terminate'),\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('TaskService.noTaskRunning', 'No task is currently running'),\n\t\t\t\t\ttask: undefined\n\t\t\t\t},\n\t\t\t\tfalse, true,\n\t\t\t\tundefined,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('TaskService.terminateAllRunningTasks', 'All Running Tasks'),\n\t\t\t\t\tid: 'terminateAll',\n\t\t\t\t\ttask: undefined\n\t\t\t\t}]\n\t\t\t).then(entry => {\n\t\t\t\tif (entry && entry.id === 'terminateAll') {\n\t\t\t\t\tthis.terminateAll();\n\t\t\t\t}\n\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\tif (task === undefined || task === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.terminate(task);\n\t\t\t});\n\t\t};\n\t\tif (this.inTerminal()) {\n\t\t\tlet identifier = this.getTaskIdentifier(arg);\n\t\t\tlet promise: Promise<Task[]>;\n\t\t\tif (identifier !== undefined) {\n\t\t\t\tpromise = this.getActiveTasks();\n\t\t\t\tpromise.then((tasks) => {\n\t\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\t\tif (task.matches(identifier)) {\n\t\t\t\t\t\t\tthis.terminate(task);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trunQuickPick(promise);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trunQuickPick();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.isActive().then((active) => {\n\t\t\t\tif (active) {\n\t\t\t\t\tthis.terminateAll().then((responses) => {\n\t\t\t\t\t\t// the output runner has only one task\n\t\t\t\t\t\tlet response = responses[0];\n\t\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (response.code && response.code === TerminateResponseCode.ProcessNotFound) {\n\t\t\t\t\t\t\tthis.notificationService.error(nls.localize('TerminateAction.noProcess', 'The launched process doesn\\'t exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.notificationService.error(nls.localize('TerminateAction.failed', 'Failed to terminate running task'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate runRestartTaskCommand(arg?: any): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tlet runQuickPick = (promise?: Promise<Task[]>) => {\n\t\t\tthis.showQuickPick(promise || this.getActiveTasks(),\n\t\t\t\tnls.localize('TaskService.taskToRestart', 'Select the task to restart'),\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('TaskService.noTaskToRestart', 'No task to restart'),\n\t\t\t\t\ttask: null\n\t\t\t\t},\n\t\t\t\tfalse, true\n\t\t\t).then(entry => {\n\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\tif (task === undefined || task === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.restart(task);\n\t\t\t});\n\t\t};\n\t\tif (this.inTerminal()) {\n\t\t\tlet identifier = this.getTaskIdentifier(arg);\n\t\t\tlet promise: Promise<Task[]>;\n\t\t\tif (identifier !== undefined) {\n\t\t\t\tpromise = this.getActiveTasks();\n\t\t\t\tpromise.then((tasks) => {\n\t\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\t\tif (task.matches(identifier)) {\n\t\t\t\t\t\t\tthis.restart(task);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trunQuickPick(promise);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trunQuickPick();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.getActiveTasks().then((activeTasks) => {\n\t\t\t\tif (activeTasks.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet task = activeTasks[0];\n\t\t\t\tthis.restart(task);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getTaskIdentifier(arg?: any): string | KeyedTaskIdentifier | undefined {\n\t\tlet result: string | KeyedTaskIdentifier | undefined = undefined;\n\t\tif (Types.isString(arg)) {\n\t\t\tresult = arg;\n\t\t} else if (arg && Types.isString((arg as TaskIdentifier).type)) {\n\t\t\tresult = TaskDefinition.createTaskIdentifier(arg as TaskIdentifier, console);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate configHasTasks(taskConfig?: TaskConfig.ExternalTaskRunnerConfiguration): boolean {\n\t\treturn !!taskConfig && !!taskConfig.tasks && taskConfig.tasks.length > 0;\n\t}\n\n\tprivate openTaskFile(resource: URI, taskSource: string) {\n\t\tlet configFileCreated = false;\n\t\tthis.fileService.resolve(resource).then((stat) => stat, () => undefined).then(async (stat) => {\n\t\t\tconst fileExists: boolean = !!stat;\n\t\t\tconst configValue = this.configurationService.inspect<TaskConfig.ExternalTaskRunnerConfiguration>('tasks');\n\t\t\tlet tasksExistInFile: boolean;\n\t\t\tlet target: ConfigurationTarget;\n\t\t\tswitch (taskSource) {\n\t\t\t\tcase TaskSourceKind.User: tasksExistInFile = this.configHasTasks(configValue.userValue); target = ConfigurationTarget.USER; break;\n\t\t\t\tcase TaskSourceKind.WorkspaceFile: tasksExistInFile = this.configHasTasks(configValue.workspaceValue); target = ConfigurationTarget.WORKSPACE; break;\n\t\t\t\tdefault: tasksExistInFile = this.configHasTasks(configValue.value); target = ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t\tlet content;\n\t\t\tif (!tasksExistInFile) {\n\t\t\t\tconst pickTemplateResult = await this.quickInputService.pick(getTaskTemplates(), { placeHolder: nls.localize('TaskService.template', 'Select a Task Template') });\n\t\t\t\tif (!pickTemplateResult) {\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t\tcontent = pickTemplateResult.content;\n\t\t\t\tlet editorConfig = this.configurationService.getValue<any>();\n\t\t\t\tif (editorConfig.editor.insertSpaces) {\n\t\t\t\t\tcontent = content.replace(/(\\n)(\\t+)/g, (_, s1, s2) => s1 + ' '.repeat(s2.length * editorConfig.editor.tabSize));\n\t\t\t\t}\n\t\t\t\tconfigFileCreated = true;\n\t\t\t\ttype TaskServiceTemplateClassification = {\n\t\t\t\t\ttemplateId?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\tautoDetect: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\ttype TaskServiceEvent = {\n\t\t\t\t\ttemplateId?: string;\n\t\t\t\t\tautoDetect: boolean;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<TaskServiceEvent, TaskServiceTemplateClassification>('taskService.template', {\n\t\t\t\t\ttemplateId: pickTemplateResult.id,\n\t\t\t\t\tautoDetect: pickTemplateResult.autoDetect\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!fileExists && content) {\n\t\t\t\treturn this.textFileService.create([{ resource, value: content }]).then(result => {\n\t\t\t\t\treturn result[0].resource;\n\t\t\t\t});\n\t\t\t} else if (fileExists && (tasksExistInFile || content)) {\n\t\t\t\tif (content) {\n\t\t\t\t\tthis.configurationService.updateValue('tasks', json.parse(content), target);\n\t\t\t\t}\n\t\t\t\treturn stat?.resource;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}).then((resource) => {\n\t\t\tif (!resource) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource,\n\t\t\t\toptions: {\n\t\t\t\t\tpinned: configFileCreated // pin only if config file is created #8727\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate isTaskEntry(value: IQuickPickItem): value is IQuickPickItem & { task: Task } {\n\t\tlet candidate: IQuickPickItem & { task: Task } = value as any;\n\t\treturn candidate && !!candidate.task;\n\t}\n\n\tprivate configureTask(task: Task) {\n\t\tif (ContributedTask.is(task)) {\n\t\t\tthis.customize(task, undefined, true);\n\t\t} else if (CustomTask.is(task)) {\n\t\t\tthis.openConfig(task);\n\t\t} else if (ConfiguringTask.is(task)) {\n\t\t\t// Do nothing.\n\t\t}\n\t}\n\n\tprivate handleSelection(selection: TaskQuickPickEntryType | undefined) {\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.isTaskEntry(selection)) {\n\t\t\tthis.configureTask(selection.task);\n\t\t} else if (selection.folder && (this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY)) {\n\t\t\tthis.openTaskFile(selection.folder.toResource('.vscode/tasks.json'), TaskSourceKind.Workspace);\n\t\t} else {\n\t\t\tconst resource = this.getResourceForKind(TaskSourceKind.User);\n\t\t\tif (resource) {\n\t\t\t\tthis.openTaskFile(resource, TaskSourceKind.User);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getTaskDescription(task: Task | ConfiguringTask): string | undefined {\n\t\tlet description: string | undefined;\n\t\tif (task._source.kind === TaskSourceKind.User) {\n\t\t\tdescription = nls.localize('taskQuickPick.userSettings', 'User Settings');\n\t\t} else if (task._source.kind === TaskSourceKind.WorkspaceFile) {\n\t\t\tdescription = task.getWorkspaceFileName();\n\t\t} else if (this.needsFolderQualification()) {\n\t\t\tlet workspaceFolder = task.getWorkspaceFolder();\n\t\t\tif (workspaceFolder) {\n\t\t\t\tdescription = workspaceFolder.name;\n\t\t\t}\n\t\t}\n\t\treturn description;\n\t}\n\n\tprivate async runConfigureTasks(): Promise<void> {\n\t\tif (!(await this.trust())) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet taskPromise: Promise<TaskMap>;\n\t\tif (this.schemaVersion === JsonSchemaVersion.V2_0_0) {\n\t\t\ttaskPromise = this.getGroupedTasks();\n\t\t} else {\n\t\t\ttaskPromise = Promise.resolve(new TaskMap());\n\t\t}\n\n\t\tlet stats = this.contextService.getWorkspace().folders.map<Promise<IFileStat | undefined>>((folder) => {\n\t\t\treturn this.fileService.resolve(folder.toResource('.vscode/tasks.json')).then(stat => stat, () => undefined);\n\t\t});\n\n\t\tlet createLabel = nls.localize('TaskService.createJsonFile', 'Create tasks.json file from template');\n\t\tlet openLabel = nls.localize('TaskService.openJsonFile', 'Open tasks.json file');\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tconst cancellationToken: CancellationToken = tokenSource.token;\n\t\tlet entries = Promise.all(stats).then((stats) => {\n\t\t\treturn taskPromise.then((taskMap) => {\n\t\t\t\tlet entries: QuickPickInput<TaskQuickPickEntryType>[] = [];\n\t\t\t\tlet needsCreateOrOpen: boolean = true;\n\t\t\t\tlet tasks = taskMap.all();\n\t\t\t\tif (tasks.length > 0) {\n\t\t\t\t\ttasks = tasks.sort((a, b) => a._label.localeCompare(b._label));\n\t\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\t\tentries.push({ label: task._label, task, description: this.getTaskDescription(task), detail: this.showDetail() ? task.configurationProperties.detail : undefined });\n\t\t\t\t\t\tif (!ContributedTask.is(task)) {\n\t\t\t\t\t\t\tneedsCreateOrOpen = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (needsCreateOrOpen) {\n\t\t\t\t\tlet label = stats[0] !== undefined ? openLabel : createLabel;\n\t\t\t\t\tif (entries.length) {\n\t\t\t\t\t\tentries.push({ type: 'separator' });\n\t\t\t\t\t}\n\t\t\t\t\tentries.push({ label, folder: this.contextService.getWorkspace().folders[0] });\n\t\t\t\t}\n\t\t\t\tif ((entries.length === 1) && !needsCreateOrOpen) {\n\t\t\t\t\ttokenSource.cancel();\n\t\t\t\t}\n\t\t\t\treturn entries;\n\t\t\t});\n\t\t});\n\n\t\tconst timeout: boolean = await Promise.race([new Promise<boolean>(async (resolve) => {\n\t\t\tawait entries;\n\t\t\tresolve(false);\n\t\t}), new Promise<boolean>((resolve) => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tresolve(true);\n\t\t\t}, 200);\n\t\t})]);\n\n\t\tif (!timeout && ((await entries).length === 1) && this.configurationService.getValue<boolean>(QUICKOPEN_SKIP_CONFIG)) {\n\t\t\tconst entry: any = <any>((await entries)[0]);\n\t\t\tif (entry.task) {\n\t\t\t\tthis.handleSelection(entry);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.quickInputService.pick(entries,\n\t\t\t{ placeHolder: nls.localize('TaskService.pickTask', 'Select a task to configure') }, cancellationToken).\n\t\t\tthen(async (selection) => {\n\t\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\t\t// canceled when there's only one task\n\t\t\t\t\tconst task = (await entries)[0];\n\t\t\t\t\tif ((<any>task).task) {\n\t\t\t\t\t\tselection = <TaskQuickPickEntryType>task;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.handleSelection(selection);\n\t\t\t});\n\t}\n\n\tprivate runConfigureDefaultBuildTask(): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.schemaVersion === JsonSchemaVersion.V2_0_0) {\n\t\t\tthis.tasks().then((tasks => {\n\t\t\t\tif (tasks.length === 0) {\n\t\t\t\t\tthis.runConfigureTasks();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet selectedTask: Task | undefined;\n\t\t\t\tlet selectedEntry: TaskQuickPickEntry;\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (task.configurationProperties.group === TaskGroup.Build && task.configurationProperties.groupType === GroupType.default) {\n\t\t\t\t\t\tselectedTask = task;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedTask) {\n\t\t\t\t\tselectedEntry = {\n\t\t\t\t\t\tlabel: nls.localize('TaskService.defaultBuildTaskExists', '{0} is already marked as the default build task', selectedTask.getQualifiedLabel()),\n\t\t\t\t\t\ttask: selectedTask,\n\t\t\t\t\t\tdetail: this.showDetail() ? selectedTask.configurationProperties.detail : undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tthis.showIgnoredFoldersMessage().then(() => {\n\t\t\t\t\tthis.showQuickPick(tasks,\n\t\t\t\t\t\tnls.localize('TaskService.pickDefaultBuildTask', 'Select the task to be used as the default build task'), undefined, true, false, selectedEntry).\n\t\t\t\t\t\tthen((entry) => {\n\t\t\t\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\t\t\t\tif ((task === undefined) || (task === null)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (task === selectedTask && CustomTask.is(task)) {\n\t\t\t\t\t\t\t\tthis.openConfig(task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!InMemoryTask.is(task)) {\n\t\t\t\t\t\t\t\tthis.customize(task, { group: { kind: 'build', isDefault: true } }, true).then(() => {\n\t\t\t\t\t\t\t\t\tif (selectedTask && (task !== selectedTask) && !InMemoryTask.is(selectedTask)) {\n\t\t\t\t\t\t\t\t\t\tthis.customize(selectedTask, { group: 'build' }, false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.runConfigureTasks();\n\t\t}\n\t}\n\n\tprivate runConfigureDefaultTestTask(): void {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.schemaVersion === JsonSchemaVersion.V2_0_0) {\n\t\t\tthis.tasks().then((tasks => {\n\t\t\t\tif (tasks.length === 0) {\n\t\t\t\t\tthis.runConfigureTasks();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet selectedTask: Task | undefined;\n\t\t\t\tlet selectedEntry: TaskQuickPickEntry;\n\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (task.configurationProperties.group === TaskGroup.Test && task.configurationProperties.groupType === GroupType.default) {\n\t\t\t\t\t\tselectedTask = task;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedTask) {\n\t\t\t\t\tselectedEntry = {\n\t\t\t\t\t\tlabel: nls.localize('TaskService.defaultTestTaskExists', '{0} is already marked as the default test task.', selectedTask.getQualifiedLabel()),\n\t\t\t\t\t\ttask: selectedTask,\n\t\t\t\t\t\tdetail: this.showDetail() ? selectedTask.configurationProperties.detail : undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthis.showIgnoredFoldersMessage().then(() => {\n\t\t\t\t\tthis.showQuickPick(tasks,\n\t\t\t\t\t\tnls.localize('TaskService.pickDefaultTestTask', 'Select the task to be used as the default test task'), undefined, true, false, selectedEntry).then((entry) => {\n\t\t\t\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\t\t\t\tif (!task) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (task === selectedTask && CustomTask.is(task)) {\n\t\t\t\t\t\t\t\tthis.openConfig(task);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!InMemoryTask.is(task)) {\n\t\t\t\t\t\t\t\tthis.customize(task, { group: { kind: 'test', isDefault: true } }, true).then(() => {\n\t\t\t\t\t\t\t\t\tif (selectedTask && (task !== selectedTask) && !InMemoryTask.is(selectedTask)) {\n\t\t\t\t\t\t\t\t\t\tthis.customize(selectedTask, { group: 'test' }, false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.runConfigureTasks();\n\t\t}\n\t}\n\n\tpublic async runShowTasks(): Promise<void> {\n\t\tif (!this.canRunCommand()) {\n\t\t\treturn;\n\t\t}\n\t\tconst activeTasks: Task[] = await this.getActiveTasks();\n\t\tif (activeTasks.length === 1) {\n\t\t\tthis._taskSystem!.revealTask(activeTasks[0]);\n\t\t} else {\n\t\t\tthis.showQuickPick(this.getActiveTasks(),\n\t\t\t\tnls.localize('TaskService.pickShowTask', 'Select the task to show its output'),\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('TaskService.noTaskIsRunning', 'No task is running'),\n\t\t\t\t\ttask: null\n\t\t\t\t},\n\t\t\t\tfalse, true\n\t\t\t).then((entry) => {\n\t\t\t\tlet task: Task | undefined | null = entry ? entry.task : undefined;\n\t\t\t\tif (task === undefined || task === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._taskSystem!.revealTask(task);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async createTasksDotOld(folder: IWorkspaceFolder): Promise<[URI, URI] | undefined> {\n\t\tconst tasksFile = folder.toResource('.vscode/tasks.json');\n\t\tif (await this.fileService.exists(tasksFile)) {\n\t\t\tconst oldFile = tasksFile.with({ path: `${tasksFile.path}.old` });\n\t\t\tawait this.fileService.copy(tasksFile, oldFile, true);\n\t\t\treturn [oldFile, tasksFile];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate upgradeTask(task: Task, suppressTaskName: boolean, globalConfig: { windows?: CommandUpgrade, osx?: CommandUpgrade, linux?: CommandUpgrade }): TaskConfig.CustomTask | TaskConfig.ConfiguringTask | undefined {\n\t\tif (!CustomTask.is(task)) {\n\t\t\treturn;\n\t\t}\n\t\tconst configElement: any = {\n\t\t\tlabel: task._label\n\t\t};\n\t\tconst oldTaskTypes = new Set(['gulp', 'jake', 'grunt']);\n\t\tif (Types.isString(task.command.name) && oldTaskTypes.has(task.command.name)) {\n\t\t\tconfigElement.type = task.command.name;\n\t\t\tconfigElement.task = task.command.args![0];\n\t\t} else {\n\t\t\tif (task.command.runtime === RuntimeType.Shell) {\n\t\t\t\tconfigElement.type = RuntimeType.toString(RuntimeType.Shell);\n\t\t\t}\n\t\t\tif (task.command.name && !suppressTaskName && !globalConfig.windows?.command && !globalConfig.osx?.command && !globalConfig.linux?.command) {\n\t\t\t\tconfigElement.command = task.command.name;\n\t\t\t} else if (suppressTaskName) {\n\t\t\t\tconfigElement.command = task._source.config.element.command;\n\t\t\t}\n\t\t\tif (task.command.args && (!Types.isArray(task.command.args) || (task.command.args.length > 0))) {\n\t\t\t\tif (!globalConfig.windows?.args && !globalConfig.osx?.args && !globalConfig.linux?.args) {\n\t\t\t\t\tconfigElement.args = task.command.args;\n\t\t\t\t} else {\n\t\t\t\t\tconfigElement.args = task._source.config.element.args;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (task.configurationProperties.presentation) {\n\t\t\tconfigElement.presentation = task.configurationProperties.presentation;\n\t\t}\n\t\tif (task.configurationProperties.isBackground) {\n\t\t\tconfigElement.isBackground = task.configurationProperties.isBackground;\n\t\t}\n\t\tif (task.configurationProperties.problemMatchers) {\n\t\t\tconfigElement.problemMatcher = task._source.config.element.problemMatcher;\n\t\t}\n\t\tif (task.configurationProperties.group) {\n\t\t\tconfigElement.group = task.configurationProperties.group;\n\t\t}\n\n\t\ttask._source.config.element = configElement;\n\t\tconst tempTask = new CustomTask(task._id, task._source, task._label, task.type, task.command, task.hasDefinedMatchers, task.runOptions, task.configurationProperties);\n\t\tconst configTask = this.createCustomizableTask(tempTask);\n\t\tif (configTask) {\n\t\t\treturn configTask;\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate async upgrade(): Promise<void> {\n\t\tif (this.schemaVersion === JsonSchemaVersion.V2_0_0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.workspaceTrustManagementService.isWorkpaceTrusted()) {\n\t\t\tthis._register(Event.once(this.workspaceTrustManagementService.onDidChangeTrust)(isTrusted => {\n\t\t\t\tif (isTrusted) {\n\t\t\t\t\tthis.upgrade();\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn;\n\t\t}\n\n\t\tconst tasks = await this.getGroupedTasks();\n\t\tconst fileDiffs: [URI, URI][] = [];\n\t\tfor (const folder of this.workspaceFolders) {\n\t\t\tconst diff = await this.createTasksDotOld(folder);\n\t\t\tif (diff) {\n\t\t\t\tfileDiffs.push(diff);\n\t\t\t}\n\t\t\tif (!diff) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst configTasks: (TaskConfig.CustomTask | TaskConfig.ConfiguringTask)[] = [];\n\t\t\tconst suppressTaskName = !!this.configurationService.getValue('tasks.suppressTaskName', { resource: folder.uri });\n\t\t\tconst globalConfig = {\n\t\t\t\twindows: <CommandUpgrade>this.configurationService.getValue('tasks.windows', { resource: folder.uri }),\n\t\t\t\tosx: <CommandUpgrade>this.configurationService.getValue('tasks.osx', { resource: folder.uri }),\n\t\t\t\tlinux: <CommandUpgrade>this.configurationService.getValue('tasks.linux', { resource: folder.uri })\n\t\t\t};\n\t\t\ttasks.get(folder).forEach(task => {\n\t\t\t\tconst configTask = this.upgradeTask(task, suppressTaskName, globalConfig);\n\t\t\t\tif (configTask) {\n\t\t\t\t\tconfigTasks.push(configTask);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._taskSystem = undefined;\n\t\t\tthis._workspaceTasksPromise = undefined;\n\t\t\tawait this.writeConfiguration(folder, 'tasks.tasks', configTasks);\n\t\t\tawait this.writeConfiguration(folder, 'tasks.version', '2.0.0');\n\t\t\tif (this.configurationService.getValue('tasks.showOutput', { resource: folder.uri })) {\n\t\t\t\tawait this.configurationService.updateValue('tasks.showOutput', undefined, { resource: folder.uri });\n\t\t\t}\n\t\t\tif (this.configurationService.getValue('tasks.isShellCommand', { resource: folder.uri })) {\n\t\t\t\tawait this.configurationService.updateValue('tasks.isShellCommand', undefined, { resource: folder.uri });\n\t\t\t}\n\t\t\tif (this.configurationService.getValue('tasks.suppressTaskName', { resource: folder.uri })) {\n\t\t\t\tawait this.configurationService.updateValue('tasks.suppressTaskName', undefined, { resource: folder.uri });\n\t\t\t}\n\t\t}\n\t\tthis.updateSetup();\n\n\t\tthis.notificationService.prompt(Severity.Warning,\n\t\t\tfileDiffs.length === 1 ?\n\t\t\t\tnls.localize('taskService.upgradeVersion', \"The deprecated tasks version 0.1.0 has been removed. Your tasks have been upgraded to version 2.0.0. Open the diff to review the upgrade.\")\n\t\t\t\t: nls.localize('taskService.upgradeVersionPlural', \"The deprecated tasks version 0.1.0 has been removed. Your tasks have been upgraded to version 2.0.0. Open the diffs to review the upgrade.\"),\n\t\t\t[{\n\t\t\t\tlabel: fileDiffs.length === 1 ? nls.localize('taskService.openDiff', \"Open diff\") : nls.localize('taskService.openDiffs', \"Open diffs\"),\n\t\t\t\trun: async () => {\n\t\t\t\t\tfor (const upgrade of fileDiffs) {\n\t\t\t\t\t\tawait this.editorService.openEditor({\n\t\t\t\t\t\t\tleftResource: upgrade[0],\n\t\t\t\t\t\t\trightResource: upgrade[1],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t);\n\t}\n}\n"]}