{"version":3,"sources":["vs/workbench/contrib/tasks/common/jsonSchemaCommon.ts"],"names":[],"mappings":"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","file":"jsonSchemaCommon.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\nimport { Schemas } from 'vs/workbench/contrib/tasks/common/problemMatcher';\n\nconst schema: IJSONSchema = {\n\tdefinitions: {\n\t\tshowOutputType: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['always', 'silent', 'never']\n\t\t},\n\t\toptions: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('JsonSchema.options', 'Additional command options'),\n\t\t\tproperties: {\n\t\t\t\tcwd: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.options.cwd', 'The current working directory of the executed program or script. If omitted Code\\'s current workspace root is used.')\n\t\t\t\t},\n\t\t\t\tenv: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tadditionalProperties: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t\tdescription: nls.localize('JsonSchema.options.env', 'The environment of the executed program or shell. If omitted the parent process\\' environment is used.')\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\ttype: ['string', 'array', 'object']\n\t\t\t}\n\t\t},\n\t\tproblemMatcherType: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\terrorMessage: nls.localize('JsonSchema.tasks.matcherError', 'Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?')\n\t\t\t\t},\n\t\t\t\tSchemas.LegacyProblemMatcher,\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\terrorMessage: nls.localize('JsonSchema.tasks.matcherError', 'Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.LegacyProblemMatcher\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tshellConfiguration: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\tdescription: nls.localize('JsonSchema.shellConfiguration', 'Configures the shell to be used.'),\n\t\t\tproperties: {\n\t\t\t\texecutable: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.shell.executable', 'The shell to be used.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.shell.args', 'The shell arguments.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcommandConfiguration: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.args', 'Arguments passed to the command when this task is invoked.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttaskDescription: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['taskName'],\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\ttaskName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.taskName', \"The task's name\")\n\t\t\t\t},\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.args', 'Arguments passed to the command when this task is invoked.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t},\n\t\t\t\twindows: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.windows', 'Windows specific command configuration'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tosx: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.mac', 'Mac specific command configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tlinux: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.linux', 'Linux specific command configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.suppressTaskName', 'Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: '#/definitions/showOutputType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.showOutput', 'Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.')\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdeprecationMessage: nls.localize('JsonSchema.tasks.watching.deprecation', 'Deprecated. Use isBackground instead.'),\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.background', 'Whether the executed task is kept alive and is running in the background.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.promptOnClose', 'Whether the user is prompted when VS Code closes with a running task.'),\n\t\t\t\t\tdefault: false\n\t\t\t\t},\n\t\t\t\tisBuildCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.build', 'Maps this task to Code\\'s default build command.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisTestCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.test', 'Maps this task to Code\\'s default test command.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttaskRunnerConfiguration: {\n\t\t\ttype: 'object',\n\t\t\trequired: [],\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.args', 'Additional arguments passed to the command.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: '#/definitions/showOutputType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.showOutput', 'Controls whether the output of the running task is shown or not. If omitted \\'always\\' is used.')\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdeprecationMessage: nls.localize('JsonSchema.watching.deprecation', 'Deprecated. Use isBackground instead.'),\n\t\t\t\t\tdescription: nls.localize('JsonSchema.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.background', 'Whether the executed task is kept alive and is running in the background.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.promptOnClose', 'Whether the user is prompted when VS Code closes with a running background task.'),\n\t\t\t\t\tdefault: false\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.suppressTaskName', 'Controls whether the task name is added as an argument to the command. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\ttaskSelector: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.taskSelector', 'Prefix to indicate that an argument is task.')\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t},\n\t\t\t\ttasks: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks', 'The task configurations. Usually these are enrichments of task already defined in the external task runner.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t$ref: '#/definitions/taskDescription'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default schema;\n"]}