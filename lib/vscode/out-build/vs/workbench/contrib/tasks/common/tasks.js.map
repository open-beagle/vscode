{"version":3,"sources":["vs/workbench/contrib/tasks/common/tasks.ts"],"names":[],"mappings":"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","file":"tasks.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport * as resources from 'vs/base/common/resources';\nimport { IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport * as Objects from 'vs/base/common/objects';\nimport { UriComponents, URI } from 'vs/base/common/uri';\n\nimport { ProblemMatcher } from 'vs/workbench/contrib/tasks/common/problemMatcher';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { RawContextKey, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { TaskDefinitionRegistry } from 'vs/workbench/contrib/tasks/common/taskDefinitionRegistry';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { USER_TASKS_GROUP_KEY } from 'vs/workbench/contrib/tasks/common/taskService';\n\nexport const TASK_RUNNING_STATE = new RawContextKey<boolean>('taskRunning', false, nls.localize('tasks.taskRunningContext', \"Whether a task is currently running.\"));\nexport const TASKS_CATEGORY = { value: nls.localize('tasksCategory', \"Tasks\"), original: 'Tasks' };\n\nexport enum ShellQuoting {\n\t/**\n\t * Use character escaping.\n\t */\n\tEscape = 1,\n\n\t/**\n\t * Use strong quoting\n\t */\n\tStrong = 2,\n\n\t/**\n\t * Use weak quoting.\n\t */\n\tWeak = 3,\n}\n\nexport const CUSTOMIZED_TASK_TYPE = '$customized';\n\nexport namespace ShellQuoting {\n\texport function from(this: void, value: string): ShellQuoting {\n\t\tif (!value) {\n\t\t\treturn ShellQuoting.Strong;\n\t\t}\n\t\tswitch (value.toLowerCase()) {\n\t\t\tcase 'escape':\n\t\t\t\treturn ShellQuoting.Escape;\n\t\t\tcase 'strong':\n\t\t\t\treturn ShellQuoting.Strong;\n\t\t\tcase 'weak':\n\t\t\t\treturn ShellQuoting.Weak;\n\t\t\tdefault:\n\t\t\t\treturn ShellQuoting.Strong;\n\t\t}\n\t}\n}\n\nexport interface ShellQuotingOptions {\n\t/**\n\t * The character used to do character escaping.\n\t */\n\tescape?: string | {\n\t\tescapeChar: string;\n\t\tcharsToEscape: string;\n\t};\n\n\t/**\n\t * The character used for string quoting.\n\t */\n\tstrong?: string;\n\n\t/**\n\t * The character used for weak quoting.\n\t */\n\tweak?: string;\n}\n\nexport interface ShellConfiguration {\n\t/**\n\t * The shell executable.\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The arguments to be passed to the shell executable.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Which kind of quotes the shell supports.\n\t */\n\tquoting?: ShellQuotingOptions;\n}\n\nexport interface CommandOptions {\n\n\t/**\n\t * The shell to use if the task is a shell command.\n\t */\n\tshell?: ShellConfiguration;\n\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport namespace CommandOptions {\n\texport const defaults: CommandOptions = { cwd: '${workspaceFolder}' };\n}\n\nexport enum RevealKind {\n\t/**\n\t * Always brings the terminal to front if the task is executed.\n\t */\n\tAlways = 1,\n\n\t/**\n\t * Only brings the terminal to front if a problem is detected executing the task\n\t * e.g. the task couldn't be started,\n\t * the task ended with an exit code other than zero,\n\t * or the problem matcher found an error.\n\t */\n\tSilent = 2,\n\n\t/**\n\t * The terminal never comes to front when the task is executed.\n\t */\n\tNever = 3\n}\n\nexport namespace RevealKind {\n\texport function fromString(this: void, value: string): RevealKind {\n\t\tswitch (value.toLowerCase()) {\n\t\t\tcase 'always':\n\t\t\t\treturn RevealKind.Always;\n\t\t\tcase 'silent':\n\t\t\t\treturn RevealKind.Silent;\n\t\t\tcase 'never':\n\t\t\t\treturn RevealKind.Never;\n\t\t\tdefault:\n\t\t\t\treturn RevealKind.Always;\n\t\t}\n\t}\n}\n\nexport enum RevealProblemKind {\n\t/**\n\t * Never reveals the problems panel when this task is executed.\n\t */\n\tNever = 1,\n\n\n\t/**\n\t * Only reveals the problems panel if a problem is found.\n\t */\n\tOnProblem = 2,\n\n\t/**\n\t * Never reveals the problems panel when this task is executed.\n\t */\n\tAlways = 3\n}\n\nexport namespace RevealProblemKind {\n\texport function fromString(this: void, value: string): RevealProblemKind {\n\t\tswitch (value.toLowerCase()) {\n\t\t\tcase 'always':\n\t\t\t\treturn RevealProblemKind.Always;\n\t\t\tcase 'never':\n\t\t\t\treturn RevealProblemKind.Never;\n\t\t\tcase 'onproblem':\n\t\t\t\treturn RevealProblemKind.OnProblem;\n\t\t\tdefault:\n\t\t\t\treturn RevealProblemKind.OnProblem;\n\t\t}\n\t}\n}\n\nexport enum PanelKind {\n\n\t/**\n\t * Shares a panel with other tasks. This is the default.\n\t */\n\tShared = 1,\n\n\t/**\n\t * Uses a dedicated panel for this tasks. The panel is not\n\t * shared with other tasks.\n\t */\n\tDedicated = 2,\n\n\t/**\n\t * Creates a new panel whenever this task is executed.\n\t */\n\tNew = 3\n}\n\nexport namespace PanelKind {\n\texport function fromString(value: string): PanelKind {\n\t\tswitch (value.toLowerCase()) {\n\t\t\tcase 'shared':\n\t\t\t\treturn PanelKind.Shared;\n\t\t\tcase 'dedicated':\n\t\t\t\treturn PanelKind.Dedicated;\n\t\t\tcase 'new':\n\t\t\t\treturn PanelKind.New;\n\t\t\tdefault:\n\t\t\t\treturn PanelKind.Shared;\n\t\t}\n\t}\n}\n\nexport interface PresentationOptions {\n\t/**\n\t * Controls whether the task output is reveal in the user interface.\n\t * Defaults to `RevealKind.Always`.\n\t */\n\treveal: RevealKind;\n\n\t/**\n\t * Controls whether the problems pane is revealed when running this task or not.\n\t * Defaults to `RevealProblemKind.Never`.\n\t */\n\trevealProblems: RevealProblemKind;\n\n\t/**\n\t * Controls whether the command associated with the task is echoed\n\t * in the user interface.\n\t */\n\techo: boolean;\n\n\t/**\n\t * Controls whether the panel showing the task output is taking focus.\n\t */\n\tfocus: boolean;\n\n\t/**\n\t * Controls if the task panel is used for this task only (dedicated),\n\t * shared between tasks (shared) or if a new panel is created on\n\t * every task execution (new). Defaults to `TaskInstanceKind.Shared`\n\t */\n\tpanel: PanelKind;\n\n\t/**\n\t * Controls whether to show the \"Terminal will be reused by tasks, press any key to close it\" message.\n\t */\n\tshowReuseMessage: boolean;\n\n\t/**\n\t * Controls whether to clear the terminal before executing the task.\n\t */\n\tclear: boolean;\n\n\t/**\n\t * Controls whether the task is executed in a specific terminal group using split panes.\n\t */\n\tgroup?: string;\n}\n\nexport namespace PresentationOptions {\n\texport const defaults: PresentationOptions = {\n\t\techo: true, reveal: RevealKind.Always, revealProblems: RevealProblemKind.Never, focus: false, panel: PanelKind.Shared, showReuseMessage: true, clear: false\n\t};\n}\n\nexport enum RuntimeType {\n\tShell = 1,\n\tProcess = 2,\n\tCustomExecution = 3\n}\n\nexport namespace RuntimeType {\n\texport function fromString(value: string): RuntimeType {\n\t\tswitch (value.toLowerCase()) {\n\t\t\tcase 'shell':\n\t\t\t\treturn RuntimeType.Shell;\n\t\t\tcase 'process':\n\t\t\t\treturn RuntimeType.Process;\n\t\t\tcase 'customExecution':\n\t\t\t\treturn RuntimeType.CustomExecution;\n\t\t\tdefault:\n\t\t\t\treturn RuntimeType.Process;\n\t\t}\n\t}\n\texport function toString(value: RuntimeType): string {\n\t\tswitch (value) {\n\t\t\tcase RuntimeType.Shell: return 'shell';\n\t\t\tcase RuntimeType.Process: return 'process';\n\t\t\tcase RuntimeType.CustomExecution: return 'customExecution';\n\t\t\tdefault: return 'process';\n\t\t}\n\t}\n}\n\nexport interface QuotedString {\n\tvalue: string;\n\tquoting: ShellQuoting;\n}\n\nexport type CommandString = string | QuotedString;\n\nexport namespace CommandString {\n\texport function value(value: CommandString): string {\n\t\tif (Types.isString(value)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn value.value;\n\t\t}\n\t}\n}\n\nexport interface CommandConfiguration {\n\n\t/**\n\t * The task type\n\t */\n\truntime?: RuntimeType;\n\n\t/**\n\t * The command to execute\n\t */\n\tname?: CommandString;\n\n\t/**\n\t * Additional command options.\n\t */\n\toptions?: CommandOptions;\n\n\t/**\n\t * Command arguments.\n\t */\n\targs?: CommandString[];\n\n\t/**\n\t * The task selector if needed.\n\t */\n\ttaskSelector?: string;\n\n\t/**\n\t * Whether to suppress the task name when merging global args\n\t *\n\t */\n\tsuppressTaskName?: boolean;\n\n\t/**\n\t * Describes how the task is presented in the UI.\n\t */\n\tpresentation?: PresentationOptions;\n}\n\nexport namespace TaskGroup {\n\texport const Clean: 'clean' = 'clean';\n\n\texport const Build: 'build' = 'build';\n\n\texport const Rebuild: 'rebuild' = 'rebuild';\n\n\texport const Test: 'test' = 'test';\n\n\texport function is(value: string): value is string {\n\t\treturn value === Clean || value === Build || value === Rebuild || value === Test;\n\t}\n}\n\nexport type TaskGroup = 'clean' | 'build' | 'rebuild' | 'test';\n\n\nexport const enum TaskScope {\n\tGlobal = 1,\n\tWorkspace = 2,\n\tFolder = 3\n}\n\nexport namespace TaskSourceKind {\n\texport const Workspace: 'workspace' = 'workspace';\n\texport const Extension: 'extension' = 'extension';\n\texport const InMemory: 'inMemory' = 'inMemory';\n\texport const WorkspaceFile: 'workspaceFile' = 'workspaceFile';\n\texport const User: 'user' = 'user';\n\n\texport function toConfigurationTarget(kind: string): ConfigurationTarget {\n\t\tswitch (kind) {\n\t\t\tcase TaskSourceKind.User: return ConfigurationTarget.USER;\n\t\t\tcase TaskSourceKind.WorkspaceFile: return ConfigurationTarget.WORKSPACE;\n\t\t\tdefault: return ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t}\n\t}\n}\n\nexport interface TaskSourceConfigElement {\n\tworkspaceFolder?: IWorkspaceFolder;\n\tworkspace?: IWorkspace;\n\tfile: string;\n\tindex: number;\n\telement: any;\n}\n\ninterface BaseTaskSource {\n\treadonly kind: string;\n\treadonly label: string;\n}\n\nexport interface WorkspaceTaskSource extends BaseTaskSource {\n\treadonly kind: 'workspace';\n\treadonly config: TaskSourceConfigElement;\n\treadonly customizes?: KeyedTaskIdentifier;\n}\n\nexport interface ExtensionTaskSource extends BaseTaskSource {\n\treadonly kind: 'extension';\n\treadonly extension?: string;\n\treadonly scope: TaskScope;\n\treadonly workspaceFolder: IWorkspaceFolder | undefined;\n}\n\nexport interface ExtensionTaskSourceTransfer {\n\t__workspaceFolder: UriComponents;\n\t__definition: { type: string;[name: string]: any };\n}\n\nexport interface InMemoryTaskSource extends BaseTaskSource {\n\treadonly kind: 'inMemory';\n}\n\nexport interface UserTaskSource extends BaseTaskSource {\n\treadonly kind: 'user';\n\treadonly config: TaskSourceConfigElement;\n\treadonly customizes?: KeyedTaskIdentifier;\n}\n\nexport interface WorkspaceFileTaskSource extends BaseTaskSource {\n\treadonly kind: 'workspaceFile';\n\treadonly config: TaskSourceConfigElement;\n\treadonly customizes?: KeyedTaskIdentifier;\n}\n\nexport type TaskSource = WorkspaceTaskSource | ExtensionTaskSource | InMemoryTaskSource | UserTaskSource | WorkspaceFileTaskSource;\nexport type FileBasedTaskSource = WorkspaceTaskSource | UserTaskSource | WorkspaceFileTaskSource;\nexport interface TaskIdentifier {\n\ttype: string;\n\t[name: string]: any;\n}\n\nexport interface KeyedTaskIdentifier extends TaskIdentifier {\n\t_key: string;\n}\n\nexport interface TaskDependency {\n\turi: URI | string;\n\ttask: string | KeyedTaskIdentifier | undefined;\n}\n\nexport const enum GroupType {\n\tdefault = 'default',\n\tuser = 'user'\n}\n\nexport const enum DependsOrder {\n\tparallel = 'parallel',\n\tsequence = 'sequence'\n}\n\nexport interface ConfigurationProperties {\n\n\t/**\n\t * The task's name\n\t */\n\tname?: string;\n\n\t/**\n\t * The task's name\n\t */\n\tidentifier?: string;\n\n\t/**\n\t * the task's group;\n\t */\n\tgroup?: string;\n\n\t/**\n\t * The group type\n\t */\n\tgroupType?: GroupType;\n\n\t/**\n\t * The presentation options\n\t */\n\tpresentation?: PresentationOptions;\n\n\t/**\n\t * The command options;\n\t */\n\toptions?: CommandOptions;\n\n\t/**\n\t * Whether the task is a background task or not.\n\t */\n\tisBackground?: boolean;\n\n\t/**\n\t * Whether the task should prompt on close for confirmation if running.\n\t */\n\tpromptOnClose?: boolean;\n\n\t/**\n\t * The other tasks this task depends on.\n\t */\n\tdependsOn?: TaskDependency[];\n\n\t/**\n\t * The order the dependsOn tasks should be executed in.\n\t */\n\tdependsOrder?: DependsOrder;\n\n\t/**\n\t * A description of the task.\n\t */\n\tdetail?: string;\n\n\t/**\n\t * The problem watchers to use for this task\n\t */\n\tproblemMatchers?: Array<string | ProblemMatcher>;\n}\n\nexport enum RunOnOptions {\n\tdefault = 1,\n\tfolderOpen = 2\n}\n\nexport interface RunOptions {\n\treevaluateOnRerun?: boolean;\n\trunOn?: RunOnOptions;\n\tinstanceLimit?: number;\n}\n\nexport namespace RunOptions {\n\texport const defaults: RunOptions = { reevaluateOnRerun: true, runOn: RunOnOptions.default, instanceLimit: 1 };\n}\n\nexport abstract class CommonTask {\n\n\t/**\n\t * The task's internal id\n\t */\n\t_id: string;\n\n\t/**\n\t * The cached label.\n\t */\n\t_label: string = '';\n\n\ttype?: string;\n\n\trunOptions: RunOptions;\n\n\tconfigurationProperties: ConfigurationProperties;\n\n\t_source: BaseTaskSource;\n\n\tprivate _taskLoadMessages: string[] | undefined;\n\n\tprotected constructor(id: string, label: string | undefined, type: string | undefined, runOptions: RunOptions,\n\t\tconfigurationProperties: ConfigurationProperties, source: BaseTaskSource) {\n\t\tthis._id = id;\n\t\tif (label) {\n\t\t\tthis._label = label;\n\t\t}\n\t\tif (type) {\n\t\t\tthis.type = type;\n\t\t}\n\t\tthis.runOptions = runOptions;\n\t\tthis.configurationProperties = configurationProperties;\n\t\tthis._source = source;\n\t}\n\n\tpublic getDefinition(useSource?: boolean): KeyedTaskIdentifier | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic getMapKey(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getRecentlyUsedKey(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tprotected abstract getFolderId(): string | undefined;\n\n\tpublic getCommonTaskId(): string {\n\t\tinterface RecentTaskKey {\n\t\t\tfolder: string | undefined;\n\t\t\tid: string;\n\t\t}\n\n\t\tconst key: RecentTaskKey = { folder: this.getFolderId(), id: this._id };\n\t\treturn JSON.stringify(key);\n\t}\n\n\tpublic clone(): Task {\n\t\treturn this.fromObject(Object.assign({}, <any>this));\n\t}\n\n\tprotected abstract fromObject(object: any): Task;\n\n\tpublic getWorkspaceFolder(): IWorkspaceFolder | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic getWorkspaceFileName(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic getTelemetryKind(): string {\n\t\treturn 'unknown';\n\t}\n\n\tpublic matches(key: string | KeyedTaskIdentifier | undefined, compareId: boolean = false): boolean {\n\t\tif (key === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tif (Types.isString(key)) {\n\t\t\treturn key === this._label || key === this.configurationProperties.identifier || (compareId && key === this._id);\n\t\t}\n\t\tlet identifier = this.getDefinition(true);\n\t\treturn identifier !== undefined && identifier._key === key._key;\n\t}\n\n\tpublic getQualifiedLabel(): string {\n\t\tlet workspaceFolder = this.getWorkspaceFolder();\n\t\tif (workspaceFolder) {\n\t\t\treturn `${this._label} (${workspaceFolder.name})`;\n\t\t} else {\n\t\t\treturn this._label;\n\t\t}\n\t}\n\n\tpublic getTaskExecution(): TaskExecution {\n\t\tlet result: TaskExecution = {\n\t\t\tid: this._id,\n\t\t\ttask: <any>this\n\t\t};\n\t\treturn result;\n\t}\n\n\tpublic addTaskLoadMessages(messages: string[] | undefined) {\n\t\tif (this._taskLoadMessages === undefined) {\n\t\t\tthis._taskLoadMessages = [];\n\t\t}\n\t\tif (messages) {\n\t\t\tthis._taskLoadMessages = this._taskLoadMessages.concat(messages);\n\t\t}\n\t}\n\n\tget taskLoadMessages(): string[] | undefined {\n\t\treturn this._taskLoadMessages;\n\t}\n}\n\nexport class CustomTask extends CommonTask {\n\n\toverride type!: '$customized'; // CUSTOMIZED_TASK_TYPE\n\n\tinstance: number | undefined;\n\n\t/**\n\t * Indicated the source of the task (e.g. tasks.json or extension)\n\t */\n\toverride _source: FileBasedTaskSource;\n\n\thasDefinedMatchers: boolean;\n\n\t/**\n\t * The command configuration\n\t */\n\tcommand: CommandConfiguration = {};\n\n\tpublic constructor(id: string, source: FileBasedTaskSource, label: string, type: string, command: CommandConfiguration | undefined,\n\t\thasDefinedMatchers: boolean, runOptions: RunOptions, configurationProperties: ConfigurationProperties) {\n\t\tsuper(id, label, undefined, runOptions, configurationProperties, source);\n\t\tthis._source = source;\n\t\tthis.hasDefinedMatchers = hasDefinedMatchers;\n\t\tif (command) {\n\t\t\tthis.command = command;\n\t\t}\n\t}\n\n\tpublic override clone(): CustomTask {\n\t\treturn new CustomTask(this._id, this._source, this._label, this.type, this.command, this.hasDefinedMatchers, this.runOptions, this.configurationProperties);\n\t}\n\n\tpublic customizes(): KeyedTaskIdentifier | undefined {\n\t\tif (this._source && this._source.customizes) {\n\t\t\treturn this._source.customizes;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic override getDefinition(useSource: boolean = false): KeyedTaskIdentifier {\n\t\tif (useSource && this._source.customizes !== undefined) {\n\t\t\treturn this._source.customizes;\n\t\t} else {\n\t\t\tlet type: string;\n\t\t\tconst commandRuntime = this.command ? this.command.runtime : undefined;\n\t\t\tswitch (commandRuntime) {\n\t\t\t\tcase RuntimeType.Shell:\n\t\t\t\t\ttype = 'shell';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase RuntimeType.Process:\n\t\t\t\t\ttype = 'process';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase RuntimeType.CustomExecution:\n\t\t\t\t\ttype = 'customExecution';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase undefined:\n\t\t\t\t\ttype = '$composite';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unexpected task runtime');\n\t\t\t}\n\n\t\t\tlet result: KeyedTaskIdentifier = {\n\t\t\t\ttype,\n\t\t\t\t_key: this._id,\n\t\t\t\tid: this._id\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tpublic static is(value: any): value is CustomTask {\n\t\treturn value instanceof CustomTask;\n\t}\n\n\tpublic override getMapKey(): string {\n\t\tlet workspaceFolder = this._source.config.workspaceFolder;\n\t\treturn workspaceFolder ? `${workspaceFolder.uri.toString()}|${this._id}|${this.instance}` : `${this._id}|${this.instance}`;\n\t}\n\n\tprotected getFolderId(): string | undefined {\n\t\treturn this._source.kind === TaskSourceKind.User ? USER_TASKS_GROUP_KEY : this._source.config.workspaceFolder?.uri.toString();\n\t}\n\n\tpublic override getCommonTaskId(): string {\n\t\treturn this._source.customizes ? super.getCommonTaskId() : (this.getRecentlyUsedKey() ?? super.getCommonTaskId());\n\t}\n\n\tpublic override getRecentlyUsedKey(): string | undefined {\n\t\tinterface CustomKey {\n\t\t\ttype: string;\n\t\t\tfolder: string;\n\t\t\tid: string;\n\t\t}\n\t\tlet workspaceFolder = this.getFolderId();\n\t\tif (!workspaceFolder) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet id: string = this.configurationProperties.identifier!;\n\t\tif (this._source.kind !== TaskSourceKind.Workspace) {\n\t\t\tid += this._source.kind;\n\t\t}\n\t\tlet key: CustomKey = { type: CUSTOMIZED_TASK_TYPE, folder: workspaceFolder, id };\n\t\treturn JSON.stringify(key);\n\t}\n\n\tpublic override getWorkspaceFolder(): IWorkspaceFolder | undefined {\n\t\treturn this._source.config.workspaceFolder;\n\t}\n\n\tpublic override getWorkspaceFileName(): string | undefined {\n\t\treturn (this._source.config.workspace && this._source.config.workspace.configuration) ? resources.basename(this._source.config.workspace.configuration) : undefined;\n\t}\n\n\tpublic override getTelemetryKind(): string {\n\t\tif (this._source.customizes) {\n\t\t\treturn 'workspace>extension';\n\t\t} else {\n\t\t\treturn 'workspace';\n\t\t}\n\t}\n\n\tprotected fromObject(object: CustomTask): CustomTask {\n\t\treturn new CustomTask(object._id, object._source, object._label, object.type, object.command, object.hasDefinedMatchers, object.runOptions, object.configurationProperties);\n\t}\n}\n\nexport class ConfiguringTask extends CommonTask {\n\n\t/**\n\t * Indicated the source of the task (e.g. tasks.json or extension)\n\t */\n\toverride _source: FileBasedTaskSource;\n\n\tconfigures: KeyedTaskIdentifier;\n\n\tpublic constructor(id: string, source: FileBasedTaskSource, label: string | undefined, type: string | undefined,\n\t\tconfigures: KeyedTaskIdentifier, runOptions: RunOptions, configurationProperties: ConfigurationProperties) {\n\t\tsuper(id, label, type, runOptions, configurationProperties, source);\n\t\tthis._source = source;\n\t\tthis.configures = configures;\n\t}\n\n\tpublic static is(value: any): value is ConfiguringTask {\n\t\treturn value instanceof ConfiguringTask;\n\t}\n\n\tprotected fromObject(object: any): Task {\n\t\treturn object;\n\t}\n\n\tpublic override getDefinition(): KeyedTaskIdentifier {\n\t\treturn this.configures;\n\t}\n\n\tpublic override getWorkspaceFileName(): string | undefined {\n\t\treturn (this._source.config.workspace && this._source.config.workspace.configuration) ? resources.basename(this._source.config.workspace.configuration) : undefined;\n\t}\n\n\tpublic override getWorkspaceFolder(): IWorkspaceFolder | undefined {\n\t\treturn this._source.config.workspaceFolder;\n\t}\n\n\tprotected getFolderId(): string | undefined {\n\t\treturn this._source.kind === TaskSourceKind.User ? USER_TASKS_GROUP_KEY : this._source.config.workspaceFolder?.uri.toString();\n\t}\n\n\tpublic override getRecentlyUsedKey(): string | undefined {\n\t\tinterface CustomKey {\n\t\t\ttype: string;\n\t\t\tfolder: string;\n\t\t\tid: string;\n\t\t}\n\t\tlet workspaceFolder = this.getFolderId();\n\t\tif (!workspaceFolder) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet id: string = this.configurationProperties.identifier!;\n\t\tif (this._source.kind !== TaskSourceKind.Workspace) {\n\t\t\tid += this._source.kind;\n\t\t}\n\t\tlet key: CustomKey = { type: CUSTOMIZED_TASK_TYPE, folder: workspaceFolder, id };\n\t\treturn JSON.stringify(key);\n\t}\n}\n\nexport class ContributedTask extends CommonTask {\n\n\t/**\n\t * Indicated the source of the task (e.g. tasks.json or extension)\n\t * Set in the super constructor\n\t */\n\toverride _source!: ExtensionTaskSource;\n\n\tinstance: number | undefined;\n\n\tdefines: KeyedTaskIdentifier;\n\n\thasDefinedMatchers: boolean;\n\n\t/**\n\t * The command configuration\n\t */\n\tcommand: CommandConfiguration;\n\n\tpublic constructor(id: string, source: ExtensionTaskSource, label: string, type: string | undefined, defines: KeyedTaskIdentifier,\n\t\tcommand: CommandConfiguration, hasDefinedMatchers: boolean, runOptions: RunOptions,\n\t\tconfigurationProperties: ConfigurationProperties) {\n\t\tsuper(id, label, type, runOptions, configurationProperties, source);\n\t\tthis.defines = defines;\n\t\tthis.hasDefinedMatchers = hasDefinedMatchers;\n\t\tthis.command = command;\n\t}\n\n\tpublic override clone(): ContributedTask {\n\t\treturn new ContributedTask(this._id, this._source, this._label, this.type, this.defines, this.command, this.hasDefinedMatchers, this.runOptions, this.configurationProperties);\n\t}\n\n\tpublic override getDefinition(): KeyedTaskIdentifier {\n\t\treturn this.defines;\n\t}\n\n\tpublic static is(value: any): value is ContributedTask {\n\t\treturn value instanceof ContributedTask;\n\t}\n\n\tpublic override getMapKey(): string {\n\t\tlet workspaceFolder = this._source.workspaceFolder;\n\t\treturn workspaceFolder\n\t\t\t? `${this._source.scope.toString()}|${workspaceFolder.uri.toString()}|${this._id}|${this.instance}`\n\t\t\t: `${this._source.scope.toString()}|${this._id}|${this.instance}`;\n\t}\n\n\tprotected getFolderId(): string | undefined {\n\t\tif (this._source.scope === TaskScope.Folder && this._source.workspaceFolder) {\n\t\t\treturn this._source.workspaceFolder.uri.toString();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic override getRecentlyUsedKey(): string | undefined {\n\t\tinterface ContributedKey {\n\t\t\ttype: string;\n\t\t\tscope: number;\n\t\t\tfolder?: string;\n\t\t\tid: string;\n\t\t}\n\n\t\tlet key: ContributedKey = { type: 'contributed', scope: this._source.scope, id: this._id };\n\t\tkey.folder = this.getFolderId();\n\t\treturn JSON.stringify(key);\n\t}\n\n\tpublic override getWorkspaceFolder(): IWorkspaceFolder | undefined {\n\t\treturn this._source.workspaceFolder;\n\t}\n\n\tpublic override getTelemetryKind(): string {\n\t\treturn 'extension';\n\t}\n\n\tprotected fromObject(object: ContributedTask): ContributedTask {\n\t\treturn new ContributedTask(object._id, object._source, object._label, object.type, object.defines, object.command, object.hasDefinedMatchers, object.runOptions, object.configurationProperties);\n\t}\n}\n\nexport class InMemoryTask extends CommonTask {\n\t/**\n\t * Indicated the source of the task (e.g. tasks.json or extension)\n\t */\n\toverride _source: InMemoryTaskSource;\n\n\tinstance: number | undefined;\n\n\toverride type!: 'inMemory';\n\n\tpublic constructor(id: string, source: InMemoryTaskSource, label: string, type: string,\n\t\trunOptions: RunOptions, configurationProperties: ConfigurationProperties) {\n\t\tsuper(id, label, type, runOptions, configurationProperties, source);\n\t\tthis._source = source;\n\t}\n\n\tpublic override clone(): InMemoryTask {\n\t\treturn new InMemoryTask(this._id, this._source, this._label, this.type, this.runOptions, this.configurationProperties);\n\t}\n\n\tpublic static is(value: any): value is InMemoryTask {\n\t\treturn value instanceof InMemoryTask;\n\t}\n\n\tpublic override getTelemetryKind(): string {\n\t\treturn 'composite';\n\t}\n\n\tpublic override getMapKey(): string {\n\t\treturn `${this._id}|${this.instance}`;\n\t}\n\n\tprotected getFolderId(): undefined {\n\t\treturn undefined;\n\t}\n\n\tprotected fromObject(object: InMemoryTask): InMemoryTask {\n\t\treturn new InMemoryTask(object._id, object._source, object._label, object.type, object.runOptions, object.configurationProperties);\n\t}\n}\n\nexport type Task = CustomTask | ContributedTask | InMemoryTask;\n\nexport interface TaskExecution {\n\tid: string;\n\ttask: Task;\n}\n\nexport enum ExecutionEngine {\n\tProcess = 1,\n\tTerminal = 2\n}\n\nexport namespace ExecutionEngine {\n\texport const _default: ExecutionEngine = ExecutionEngine.Terminal;\n}\n\nexport const enum JsonSchemaVersion {\n\tV0_1_0 = 1,\n\tV2_0_0 = 2\n}\n\nexport interface TaskSet {\n\ttasks: Task[];\n\textension?: IExtensionDescription;\n}\n\nexport interface TaskDefinition {\n\textensionId: string;\n\ttaskType: string;\n\trequired: string[];\n\tproperties: IJSONSchemaMap;\n\twhen?: ContextKeyExpression;\n}\n\nexport class TaskSorter {\n\n\tprivate _order: Map<string, number> = new Map();\n\n\tconstructor(workspaceFolders: IWorkspaceFolder[]) {\n\t\tfor (let i = 0; i < workspaceFolders.length; i++) {\n\t\t\tthis._order.set(workspaceFolders[i].uri.toString(), i);\n\t\t}\n\t}\n\n\tpublic compare(a: Task | ConfiguringTask, b: Task | ConfiguringTask): number {\n\t\tlet aw = a.getWorkspaceFolder();\n\t\tlet bw = b.getWorkspaceFolder();\n\t\tif (aw && bw) {\n\t\t\tlet ai = this._order.get(aw.uri.toString());\n\t\t\tai = ai === undefined ? 0 : ai + 1;\n\t\t\tlet bi = this._order.get(bw.uri.toString());\n\t\t\tbi = bi === undefined ? 0 : bi + 1;\n\t\t\tif (ai === bi) {\n\t\t\t\treturn a._label.localeCompare(b._label);\n\t\t\t} else {\n\t\t\t\treturn ai - bi;\n\t\t\t}\n\t\t} else if (!aw && bw) {\n\t\t\treturn -1;\n\t\t} else if (aw && !bw) {\n\t\t\treturn +1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nexport const enum TaskEventKind {\n\tDependsOnStarted = 'dependsOnStarted',\n\tAcquiredInput = 'acquiredInput',\n\tStart = 'start',\n\tProcessStarted = 'processStarted',\n\tActive = 'active',\n\tInactive = 'inactive',\n\tChanged = 'changed',\n\tTerminated = 'terminated',\n\tProcessEnded = 'processEnded',\n\tEnd = 'end'\n}\n\n\nexport const enum TaskRunType {\n\tSingleRun = 'singleRun',\n\tBackground = 'background'\n}\n\nexport interface TaskEvent {\n\tkind: TaskEventKind;\n\ttaskId?: string;\n\ttaskName?: string;\n\trunType?: TaskRunType;\n\tgroup?: string;\n\tprocessId?: number;\n\texitCode?: number;\n\tterminalId?: number;\n\t__task?: Task;\n\tresolvedVariables?: Map<string, string>;\n}\n\nexport const enum TaskRunSource {\n\tSystem,\n\tUser,\n\tFolderOpen,\n\tConfigurationChange\n}\n\nexport namespace TaskEvent {\n\texport function create(kind: TaskEventKind.ProcessStarted | TaskEventKind.ProcessEnded, task: Task, processIdOrExitCode?: number): TaskEvent;\n\texport function create(kind: TaskEventKind.Start, task: Task, terminalId?: number, resolvedVariables?: Map<string, string>): TaskEvent;\n\texport function create(kind: TaskEventKind.AcquiredInput | TaskEventKind.DependsOnStarted | TaskEventKind.Start | TaskEventKind.Active | TaskEventKind.Inactive | TaskEventKind.Terminated | TaskEventKind.End, task: Task): TaskEvent;\n\texport function create(kind: TaskEventKind.Changed): TaskEvent;\n\texport function create(kind: TaskEventKind, task?: Task, processIdOrExitCodeOrTerminalId?: number, resolvedVariables?: Map<string, string>): TaskEvent {\n\t\tif (task) {\n\t\t\tlet result: TaskEvent = {\n\t\t\t\tkind: kind,\n\t\t\t\ttaskId: task._id,\n\t\t\t\ttaskName: task.configurationProperties.name,\n\t\t\t\trunType: task.configurationProperties.isBackground ? TaskRunType.Background : TaskRunType.SingleRun,\n\t\t\t\tgroup: task.configurationProperties.group,\n\t\t\t\tprocessId: undefined as number | undefined,\n\t\t\t\texitCode: undefined as number | undefined,\n\t\t\t\tterminalId: undefined as number | undefined,\n\t\t\t\t__task: task,\n\t\t\t};\n\t\t\tif (kind === TaskEventKind.Start) {\n\t\t\t\tresult.terminalId = processIdOrExitCodeOrTerminalId;\n\t\t\t\tresult.resolvedVariables = resolvedVariables;\n\t\t\t} else if (kind === TaskEventKind.ProcessStarted) {\n\t\t\t\tresult.processId = processIdOrExitCodeOrTerminalId;\n\t\t\t} else if (kind === TaskEventKind.ProcessEnded) {\n\t\t\t\tresult.exitCode = processIdOrExitCodeOrTerminalId;\n\t\t\t}\n\t\t\treturn Object.freeze(result);\n\t\t} else {\n\t\t\treturn Object.freeze({ kind: TaskEventKind.Changed });\n\t\t}\n\t}\n}\n\nexport namespace KeyedTaskIdentifier {\n\tfunction sortedStringify(literal: any): string {\n\t\tconst keys = Object.keys(literal).sort();\n\t\tlet result: string = '';\n\t\tfor (const key of keys) {\n\t\t\tlet stringified = literal[key];\n\t\t\tif (stringified instanceof Object) {\n\t\t\t\tstringified = sortedStringify(stringified);\n\t\t\t} else if (typeof stringified === 'string') {\n\t\t\t\tstringified = stringified.replace(/,/g, ',,');\n\t\t\t}\n\t\t\tresult += key + ',' + stringified + ',';\n\t\t}\n\t\treturn result;\n\t}\n\texport function create(value: TaskIdentifier): KeyedTaskIdentifier {\n\t\tconst resultKey = sortedStringify(value);\n\t\tlet result = { _key: resultKey, type: value.taskType };\n\t\tObject.assign(result, value);\n\t\treturn result;\n\t}\n}\n\nexport namespace TaskDefinition {\n\texport function createTaskIdentifier(external: TaskIdentifier, reporter: { error(message: string): void; }): KeyedTaskIdentifier | undefined {\n\t\tlet definition = TaskDefinitionRegistry.get(external.type);\n\t\tif (definition === undefined) {\n\t\t\t// We have no task definition so we can't sanitize the literal. Take it as is\n\t\t\tlet copy = Objects.deepClone(external);\n\t\t\tdelete copy._key;\n\t\t\treturn KeyedTaskIdentifier.create(copy);\n\t\t}\n\n\t\tlet literal: { type: string;[name: string]: any } = Object.create(null);\n\t\tliteral.type = definition.taskType;\n\t\tlet required: Set<string> = new Set();\n\t\tdefinition.required.forEach(element => required.add(element));\n\n\t\tlet properties = definition.properties;\n\t\tfor (let property of Object.keys(properties)) {\n\t\t\tlet value = external[property];\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tliteral[property] = value;\n\t\t\t} else if (required.has(property)) {\n\t\t\t\tlet schema = properties[property];\n\t\t\t\tif (schema.default !== undefined) {\n\t\t\t\t\tliteral[property] = Objects.deepClone(schema.default);\n\t\t\t\t} else {\n\t\t\t\t\tswitch (schema.type) {\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tliteral[property] = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\t\tliteral[property] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\tliteral[property] = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treporter.error(nls.localize(\n\t\t\t\t\t\t\t\t'TaskDefinition.missingRequiredProperty',\n\t\t\t\t\t\t\t\t'Error: the task identifier \\'{0}\\' is missing the required property \\'{1}\\'. The task identifier will be ignored.', JSON.stringify(external, undefined, 0), property\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn KeyedTaskIdentifier.create(literal);\n\t}\n}\n"]}