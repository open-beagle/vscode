{"version":3,"sources":["vs/workbench/contrib/tasks/common/taskTemplates.ts"],"names":[],"mappings":"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","file":"taskTemplates.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\n\nexport interface TaskEntry extends IQuickPickItem {\n\tsort?: string;\n\tautoDetect: boolean;\n\tcontent: string;\n}\n\nconst dotnetBuild: TaskEntry = {\n\tid: 'dotnetCore',\n\tlabel: '.NET Core',\n\tsort: 'NET Core',\n\tautoDetect: false,\n\tdescription: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"build\",',\n\t\t'\\t\\t\\t\"command\": \"dotnet\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"args\": [',\n\t\t'\\t\\t\\t\\t\"build\",',\n\t\t'\\t\\t\\t\\t// Ask dotnet build to generate full paths for file names.',\n\t\t'\\t\\t\\t\\t\"/property:GenerateFullPaths=true\",',\n\t\t'\\t\\t\\t\\t// Do not generate summary otherwise it leads to duplicate errors in Problems panel',\n\t\t'\\t\\t\\t\\t\"/consoleloggerparameters:NoSummary\"',\n\t\t'\\t\\t\\t],',\n\t\t'\\t\\t\\t\"group\": \"build\",',\n\t\t'\\t\\t\\t\"presentation\": {',\n\t\t'\\t\\t\\t\\t\"reveal\": \"silent\"',\n\t\t'\\t\\t\\t},',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n\tid: 'msbuild',\n\tlabel: 'MSBuild',\n\tautoDetect: false,\n\tdescription: nls.localize('msbuild', 'Executes the build target'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"build\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"msbuild\",',\n\t\t'\\t\\t\\t\"args\": [',\n\t\t'\\t\\t\\t\\t// Ask msbuild to generate full paths for file names.',\n\t\t'\\t\\t\\t\\t\"/property:GenerateFullPaths=true\",',\n\t\t'\\t\\t\\t\\t\"/t:build\",',\n\t\t'\\t\\t\\t\\t// Do not generate summary otherwise it leads to duplicate errors in Problems panel',\n\t\t'\\t\\t\\t\\t\"/consoleloggerparameters:NoSummary\"',\n\t\t'\\t\\t\\t],',\n\t\t'\\t\\t\\t\"group\": \"build\",',\n\t\t'\\t\\t\\t\"presentation\": {',\n\t\t'\\t\\t\\t\\t// Reveal the output only if unrecognized errors occur.',\n\t\t'\\t\\t\\t\\t\"reveal\": \"silent\"',\n\t\t'\\t\\t\\t},',\n\t\t'\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst command: TaskEntry = {\n\tid: 'externalCommand',\n\tlabel: 'Others',\n\tautoDetect: false,\n\tdescription: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"echo\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"echo Hello\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst maven: TaskEntry = {\n\tid: 'maven',\n\tlabel: 'maven',\n\tsort: 'MVN',\n\tautoDetect: false,\n\tdescription: nls.localize('Maven', 'Executes common maven commands'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"verify\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"mvn -B verify\",',\n\t\t'\\t\\t\\t\"group\": \"build\"',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"test\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"mvn -B test\",',\n\t\t'\\t\\t\\t\"group\": \"test\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nlet _templates: TaskEntry[] | null = null;\nexport function getTemplates(): TaskEntry[] {\n\tif (!_templates) {\n\t\t_templates = [dotnetBuild, msbuild, maven].sort((a, b) => {\n\t\t\treturn (a.sort || a.label).localeCompare(b.sort || b.label);\n\t\t});\n\t\t_templates.push(command);\n\t}\n\treturn _templates;\n}\n\n\n/** Version 1.0 templates\n *\nconst gulp: TaskEntry = {\n\tid: 'gulp',\n\tlabel: 'Gulp',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"gulp\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst grunt: TaskEntry = {\n\tid: 'grunt',\n\tlabel: 'Grunt',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"grunt\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst npm: TaskEntry = {\n\tid: 'npm',\n\tlabel: 'npm',\n\tsort: 'NPM',\n\tautoDetect: false,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"npm\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"showOutput\": \"always\",',\n\t\t'\\t\"suppressTaskName\": true,',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"install\",',\n\t\t'\\t\\t\\t\"args\": [\"install\"]',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"update\",',\n\t\t'\\t\\t\\t\"args\": [\"update\"]',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"test\",',\n\t\t'\\t\\t\\t\"args\": [\"run\", \"test\"]',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscConfig: TaskEntry = {\n\tid: 'tsc.config',\n\tlabel: 'TypeScript - tsconfig.json',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.config', 'Compiles a TypeScript project'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"tsc\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"-p\", \".\"],',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"problemMatcher\": \"$tsc\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscWatch: TaskEntry = {\n\tid: 'tsc.watch',\n\tlabel: 'TypeScript - Watch Mode',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.watch', 'Compiles a TypeScript project in watch mode'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"tsc\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"-w\", \"-p\", \".\"],',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"isBackground\": true,',\n\t\t'\\t\"problemMatcher\": \"$tsc-watch\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst dotnetBuild: TaskEntry = {\n\tid: 'dotnetCore',\n\tlabel: '.NET Core',\n\tsort: 'NET Core',\n\tautoDetect: false,\n\tdescription: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"dotnet\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [],',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t'\\t\\t\\t\"args\": [ ],',\n\t\t'\\t\\t\\t\"isBuildCommand\": true,',\n\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n\tid: 'msbuild',\n\tlabel: 'MSBuild',\n\tautoDetect: false,\n\tdescription: nls.localize('msbuild', 'Executes the build target'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"msbuild\",',\n\t\t'\\t\"args\": [',\n\t\t'\\t\\t// Ask msbuild to generate full paths for file names.',\n\t\t'\\t\\t\"/property:GenerateFullPaths=true\"',\n\t\t'\\t],',\n\t\t'\\t\"taskSelector\": \"/t:\",',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t'\\t\\t\\t// Show the output window only if unrecognized errors occur.',\n\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t'\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst command: TaskEntry = {\n\tid: 'externalCommand',\n\tlabel: 'Others',\n\tautoDetect: false,\n\tdescription: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"echo\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"Hello World\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst maven: TaskEntry = {\n\tid: 'maven',\n\tlabel: 'maven',\n\tsort: 'MVN',\n\tautoDetect: false,\n\tdescription: nls.localize('Maven', 'Executes common maven commands'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"mvn\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"showOutput\": \"always\",',\n\t\t'\\t\"suppressTaskName\": true,',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"verify\",',\n\t\t'\\t\\t\\t\"args\": [\"-B\", \"verify\"],',\n\t\t'\\t\\t\\t\"isBuildCommand\": true',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"test\",',\n\t\t'\\t\\t\\t\"args\": [\"-B\", \"test\"],',\n\t\t'\\t\\t\\t\"isTestCommand\": true',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nexport let templates: TaskEntry[] = [gulp, grunt, tscConfig, tscWatch, dotnetBuild, msbuild, npm, maven].sort((a, b) => {\n\treturn (a.sort || a.label).localeCompare(b.sort || b.label);\n});\ntemplates.push(command);\n*/\n"]}