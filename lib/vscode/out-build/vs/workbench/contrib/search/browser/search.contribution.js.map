{"version":3,"sources":["vs/workbench/contrib/search/browser/search.contribution.ts"],"names":[],"mappings":"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","file":"search.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as platform from 'vs/base/common/platform';\nimport { dirname } from 'vs/base/common/resources';\nimport { assertIsDefined, assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleWholeWordKeybinding } from 'vs/editor/contrib/find/findModel';\nimport { AbstractGotoLineQuickAccessProvider } from 'vs/editor/contrib/quickAccess/gotoLineQuickAccess';\nimport * as nls from 'vs/nls';\nimport { Action2, ICommandAction, MenuId, MenuRegistry, registerAction2, SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyEqualsExpr, ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchObjectTree } from 'vs/platform/list/browser/listService';\nimport { Extensions as QuickAccessExtensions, IQuickAccessRegistry } from 'vs/platform/quickinput/common/quickAccess';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { defaultQuickAccessContextKeyValue } from 'vs/workbench/browser/quickaccess';\nimport { Extensions as ActionExtensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { Extensions as ViewExtensions, IViewContainersRegistry, IViewDescriptor, IViewDescriptorService, IViewsRegistry, IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { GotoSymbolQuickAccessProvider } from 'vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess';\nimport { ExplorerViewPaneContainer } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { getMultiSelectedResources, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { ExplorerFolderContext, ExplorerRootContext, FilesExplorerFocusCondition, VIEWLET_ID as VIEWLET_ID_FILES } from 'vs/workbench/contrib/files/common/files';\nimport { AnythingQuickAccessProvider } from 'vs/workbench/contrib/search/browser/anythingQuickAccess';\nimport { registerContributions as replaceContributions } from 'vs/workbench/contrib/search/browser/replaceContributions';\nimport { cancelSearch, clearHistoryCommand, clearSearchResults, CloseReplaceAction, collapseDeepestExpandedLevel, copyAllCommand, copyMatchCommand, copyPathCommand, expandAll, FindInFilesCommand, FocusNextInputAction, FocusNextSearchResultAction, FocusPreviousInputAction, FocusPreviousSearchResultAction, focusSearchListCommand, getSearchView, openSearchView, refreshSearch, RemoveAction, ReplaceAction, ReplaceAllAction, ReplaceAllInFolderAction, ReplaceInFilesAction, toggleCaseSensitiveCommand, togglePreserveCaseCommand, toggleRegexCommand, ToggleSearchOnTypeAction, toggleWholeWordCommand } from 'vs/workbench/contrib/search/browser/searchActions';\nimport { searchClearIcon, searchCollapseAllIcon, searchExpandAllIcon, searchRefreshIcon, searchStopIcon, searchViewIcon } from 'vs/workbench/contrib/search/browser/searchIcons';\nimport { SearchView } from 'vs/workbench/contrib/search/browser/searchView';\nimport { registerContributions as searchWidgetContributions } from 'vs/workbench/contrib/search/browser/searchWidget';\nimport { SymbolsQuickAccessProvider } from 'vs/workbench/contrib/search/browser/symbolsQuickAccess';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport { resolveResourcesForSearchIncludes } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { getWorkspaceSymbols, SearchStateKey, SearchUIState } from 'vs/workbench/contrib/search/common/search';\nimport { ISearchHistoryService, SearchHistoryService } from 'vs/workbench/contrib/search/common/searchHistoryService';\nimport { FileMatch, FileMatchOrMatch, FolderMatch, ISearchWorkbenchService, Match, RenderableMatch, SearchWorkbenchService } from 'vs/workbench/contrib/search/common/searchModel';\nimport * as SearchEditorConstants from 'vs/workbench/contrib/searchEditor/browser/constants';\nimport { SearchEditor } from 'vs/workbench/contrib/searchEditor/browser/searchEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ISearchConfiguration, SearchSortOrder, SEARCH_EXCLUDE_CONFIG, VIEWLET_ID, VIEW_ID } from 'vs/workbench/services/search/common/search';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\n\nregisterSingleton(ISearchWorkbenchService, SearchWorkbenchService, true);\nregisterSingleton(ISearchHistoryService, SearchHistoryService, true);\n\nreplaceContributions();\nsearchWidgetContributions();\n\nconst category = { value: nls.localize('search', \"Search\"), original: 'Search' };\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.search.toggleQueryDetails',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.or(Constants.SearchViewFocusedKey, SearchEditorConstants.InSearchEditor),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_J,\n\thandler: accessor => {\n\t\tconst contextService = accessor.get(IContextKeyService).getContext(document.activeElement);\n\t\tif (contextService.getValue(SearchEditorConstants.InSearchEditor.serialize())) {\n\t\t\t(accessor.get(IEditorService).activeEditorPane as SearchEditor).toggleQueryDetails();\n\t\t} else if (contextService.getValue(Constants.SearchViewFocusedKey.serialize())) {\n\t\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\t\tassertIsDefined(searchView).toggleQueryDetails();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.FocusSearchFromResults,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FirstMatchFocusKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tsearchView.focusPreviousInputBox();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.OpenMatch,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t},\n\thandler: (accessor) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.open(<FileMatchOrMatch>tree.getFocus()[0], false, false, true);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.OpenMatchToSide,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.open(<FileMatchOrMatch>tree.getFocus()[0], false, true, true);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.RemoveActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyCode.Delete,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(RemoveAction, tree, tree.getFocus()[0]!).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAction, tree, tree.getFocus()[0] as Match, searchView).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceAllInFileActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FileFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAllAction, searchView, tree.getFocus()[0] as FileMatch).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceAllInFolderActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAllInFolderAction, tree, tree.getFocus()[0] as FolderMatch).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CloseReplaceWidgetActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceInputBoxFocusedKey),\n\tprimary: KeyCode.Escape,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(CloseReplaceAction, Constants.CloseReplaceWidgetActionId, '').run();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FocusNextInputAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.or(\n\t\tContextKeyExpr.and(SearchEditorConstants.InSearchEditor, Constants.InputBoxFocusedKey),\n\t\tContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey)),\n\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(FocusNextInputAction, FocusNextInputAction.ID, '').run();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FocusPreviousInputAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.or(\n\t\tContextKeyExpr.and(SearchEditorConstants.InSearchEditor, Constants.InputBoxFocusedKey),\n\t\tContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey, Constants.SearchInputBoxFocusedKey.toNegated())),\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(FocusPreviousInputAction, FocusPreviousInputAction.ID, '').run();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceActionId,\n\t\ttitle: ReplaceAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceAllInFolderActionId,\n\t\ttitle: ReplaceAllInFolderAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceAllInFileActionId,\n\t\ttitle: ReplaceAllAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FileFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.RemoveActionId,\n\t\ttitle: RemoveAction.LABEL\n\t},\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tgroup: 'search',\n\torder: 2\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CopyMatchCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_C,\n\thandler: copyMatchCommand\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyMatchCommandId,\n\t\ttitle: nls.localize('copyMatchLabel', \"Copy\")\n\t},\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tgroup: 'search_2',\n\torder: 1\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CopyPathCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.FileMatchOrFolderMatchWithResourceFocusKey,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_C,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_C\n\t},\n\thandler: copyPathCommand\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyPathCommandId,\n\t\ttitle: nls.localize('copyPathLabel', \"Copy Path\")\n\t},\n\twhen: Constants.FileMatchOrFolderMatchWithResourceFocusKey,\n\tgroup: 'search_2',\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyAllCommandId,\n\t\ttitle: nls.localize('copyAllLabel', \"Copy All\")\n\t},\n\twhen: Constants.HasSearchResults,\n\tgroup: 'search_2',\n\torder: 3\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.CopyAllCommandId,\n\thandler: copyAllCommand\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.ClearSearchHistoryCommandId,\n\thandler: clearHistoryCommand\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.RevealInSideBarForSearchResults,\n\thandler: (accessor, args: any) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileMatch: FileMatch;\n\t\tif (!(args instanceof FileMatch)) {\n\t\t\targs = searchView.getControl().getFocus()[0];\n\t\t}\n\t\tif (args instanceof FileMatch) {\n\t\t\tfileMatch = args;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tviewletService.openViewlet(VIEWLET_ID_FILES, false).then((viewlet) => {\n\t\t\tif (!viewlet) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst explorerViewContainer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\t\tconst uri = fileMatch.resource;\n\t\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\t\tconst explorerView = explorerViewContainer.getExplorerView();\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\texplorerService.select(uri, true).then(() => explorerView.focus(), onUnexpectedError);\n\t\t\t}\n\t\t});\n\t}\n});\n\nregisterAction2(class CancelSearchAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.cancel',\n\t\t\ttitle: nls.localize('CancelSearchAction.label', \"Cancel Search\"),\n\t\t\ticon: searchStopIcon,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchStateKey.isEqualTo(SearchUIState.Idle).negate(),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, WorkbenchListFocusContextKey),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', VIEW_ID), SearchStateKey.isEqualTo(SearchUIState.SlowSearch)),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn cancelSearch(accessor);\n\t}\n});\n\nregisterAction2(class RefreshAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.refreshSearchResults',\n\t\t\ttitle: nls.localize('RefreshAction.label', \"Refresh\"),\n\t\t\ticon: searchRefreshIcon,\n\t\t\tprecondition: Constants.ViewHasSearchPatternKey,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', VIEW_ID), SearchStateKey.isEqualTo(SearchUIState.SlowSearch).negate()),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn refreshSearch(accessor);\n\t}\n});\n\nregisterAction2(class CollapseDeepestExpandedLevelAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.collapseSearchResults',\n\t\t\ttitle: nls.localize('CollapseDeepestExpandedLevelAction.label', \"Collapse All\"),\n\t\t\tcategory,\n\t\t\ticon: searchCollapseAllIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.HasSearchResults, Constants.ViewHasSomeCollapsibleKey),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', VIEW_ID), ContextKeyExpr.or(Constants.HasSearchResults.negate(), Constants.ViewHasSomeCollapsibleKey)),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn collapseDeepestExpandedLevel(accessor);\n\t}\n});\n\nregisterAction2(class ExpandAllAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.expandSearchResults',\n\t\t\ttitle: nls.localize('ExpandAllAction.label', \"Expand All\"),\n\t\t\tcategory,\n\t\t\ticon: searchExpandAllIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.HasSearchResults, Constants.ViewHasSomeCollapsibleKey.toNegated()),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', VIEW_ID), Constants.HasSearchResults, Constants.ViewHasSomeCollapsibleKey.toNegated()),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn expandAll(accessor);\n\t}\n});\n\nregisterAction2(class ClearSearchResultsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.clearSearchResults',\n\t\t\ttitle: nls.localize('ClearSearchResultsAction.label', \"Clear Search Results\"),\n\t\t\tcategory,\n\t\t\ticon: searchClearIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(Constants.HasSearchResults, Constants.ViewHasSearchPatternKey, Constants.ViewHasReplacePatternKey, Constants.ViewHasFilePatternKey),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', VIEW_ID),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn clearSearchResults(accessor);\n\t}\n});\n\nconst RevealInSideBarForSearchResultsCommand: ICommandAction = {\n\tid: Constants.RevealInSideBarForSearchResults,\n\ttitle: nls.localize('revealInSideBar', \"Reveal in Side Bar\")\n};\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: RevealInSideBarForSearchResultsCommand,\n\twhen: ContextKeyExpr.and(Constants.FileFocusKey, Constants.HasSearchResults),\n\tgroup: 'search_3',\n\torder: 1\n});\n\nconst ClearSearchHistoryCommand: ICommandAction = {\n\tid: Constants.ClearSearchHistoryCommandId,\n\ttitle: { value: nls.localize('clearSearchHistoryLabel', \"Clear Search History\"), original: 'Clear Search History' },\n\tcategory\n};\nMenuRegistry.addCommand(ClearSearchHistoryCommand);\n\nCommandsRegistry.registerCommand({\n\tid: Constants.FocusSearchListCommandID,\n\thandler: focusSearchListCommand\n});\n\nconst FocusSearchListCommand: ICommandAction = {\n\tid: Constants.FocusSearchListCommandID,\n\ttitle: { value: nls.localize('focusSearchListCommandLabel', \"Focus List\"), original: 'Focus List' },\n\tcategory\n};\nMenuRegistry.addCommand(FocusSearchListCommand);\n\n\nconst searchInFolderCommand: ICommandHandler = async (accessor, resource?: URI) => {\n\tconst listService = accessor.get(IListService);\n\tconst fileService = accessor.get(IFileService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst resources = getMultiSelectedResources(resource, listService, accessor.get(IEditorService), accessor.get(IExplorerService));\n\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\tconst mode = searchConfig.mode;\n\n\tconst resolvedResources = fileService.resolveAll(resources.map(resource => ({ resource }))).then(results => {\n\t\tconst folders: URI[] = [];\n\t\tresults.forEach(result => {\n\t\t\tif (result.success && result.stat) {\n\t\t\t\tfolders.push(result.stat.isDirectory ? result.stat.resource : dirname(result.stat.resource));\n\t\t\t}\n\t\t});\n\t\treturn resolveResourcesForSearchIncludes(folders, contextService);\n\t});\n\n\tif (mode === 'view') {\n\t\tconst searchView = await openSearchView(viewsService, true);\n\t\tif (resources && resources.length && searchView) {\n\t\t\tsearchView.searchInFolders(await resolvedResources);\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\treturn commandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\tfilesToInclude: (await resolvedResources).join(', '),\n\t\t\tshowIncludesExcludes: true,\n\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t});\n\t}\n};\n\nconst FIND_IN_FOLDER_ID = 'filesExplorer.findInFolder';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FIND_IN_FOLDER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext),\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_F,\n\thandler: searchInFolderCommand\n});\n\nconst FIND_IN_WORKSPACE_ID = 'filesExplorer.findInWorkspace';\nCommandsRegistry.registerCommand({\n\tid: FIND_IN_WORKSPACE_ID,\n\thandler: async (accessor) => {\n\t\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\t\tconst mode = searchConfig.mode;\n\n\t\tif (mode === 'view') {\n\t\t\tconst searchView = await openSearchView(accessor.get(IViewsService), true);\n\t\t\tif (searchView) {\n\t\t\t\tsearchView.searchInFolders();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn accessor.get(ICommandService).executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t\tfilesToInclude: '',\n\t\t\t});\n\t\t}\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, {\n\tgroup: '4_search',\n\torder: 10,\n\tcommand: {\n\t\tid: FIND_IN_FOLDER_ID,\n\t\ttitle: nls.localize('findInFolder', \"Find in Folder...\")\n\t},\n\twhen: ContextKeyExpr.and(ExplorerFolderContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, {\n\tgroup: '4_search',\n\torder: 10,\n\tcommand: {\n\t\tid: FIND_IN_WORKSPACE_ID,\n\t\ttitle: nls.localize('findInWorkspace', \"Find in Workspace...\")\n\t},\n\twhen: ContextKeyExpr.and(ExplorerRootContext, ExplorerFolderContext.toNegated())\n});\n\n\nclass ShowAllSymbolsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.showAllSymbols';\n\tstatic readonly LABEL = nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\");\n\tstatic readonly ALL_SYMBOLS_PREFIX = '#';\n\n\tconstructor(\n\t\tactionId: string,\n\t\tactionLabel: string,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService\n\t) {\n\t\tsuper(actionId, actionLabel);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.quickInputService.quickAccess.show(ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX);\n\t}\n}\n\nconst SEARCH_MODE_CONFIG = 'search.mode';\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: nls.localize('name', \"Search\"),\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true, donotShowContainerTitleWhenMergedWithContainer: true }]),\n\thideIfEmpty: true,\n\ticon: searchViewIcon,\n\torder: 1,\n}, ViewContainerLocation.Sidebar, { donotRegisterOpenCommand: true });\n\nconst viewDescriptor: IViewDescriptor = {\n\tid: VIEW_ID,\n\tcontainerIcon: searchViewIcon,\n\tname: nls.localize('search', \"Search\"),\n\tctorDescriptor: new SyncDescriptor(SearchView),\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\topenCommandActionDescriptor: {\n\t\tid: viewContainer.id,\n\t\tmnemonicTitle: nls.localize({ key: 'miViewSearch', comment: ['&& denotes a mnemonic'] }, \"&&Search\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F,\n\t\t},\n\t\torder: 1\n\t}\n};\n\n// Register search default location to sidebar\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([viewDescriptor], viewContainer);\n\n\n// Migrate search location setting to new model\nclass RegisterSearchViewContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tconst data = configurationService.inspect('search.location');\n\n\t\tif (data.value === 'panel') {\n\t\t\tviewDescriptorService.moveViewToLocation(viewDescriptor, ViewContainerLocation.Panel);\n\t\t}\n\n\t\tif (data.userValue) {\n\t\t\tconfigurationService.updateValue('search.location', undefined, ConfigurationTarget.USER);\n\t\t}\n\n\t\tif (data.userLocalValue) {\n\t\t\tconfigurationService.updateValue('search.location', undefined, ConfigurationTarget.USER_LOCAL);\n\t\t}\n\n\t\tif (data.userRemoteValue) {\n\t\t\tconfigurationService.updateValue('search.location', undefined, ConfigurationTarget.USER_REMOTE);\n\t\t}\n\n\t\tif (data.workspaceFolderValue) {\n\t\t\tconfigurationService.updateValue('search.location', undefined, ConfigurationTarget.WORKSPACE_FOLDER);\n\t\t}\n\n\t\tif (data.workspaceValue) {\n\t\t\tconfigurationService.updateValue('search.location', undefined, ConfigurationTarget.WORKSPACE);\n\t\t}\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(RegisterSearchViewContribution, LifecyclePhase.Starting);\n\n// Actions\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\n// Find in Files by default is the same as View: Show Search, but can be configured to open a search editor instead with the `search.mode` binding\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tdescription: {\n\t\tdescription: nls.localize('findInFiles.description', \"Open the search viewlet\"),\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: nls.localize('findInFiles.args', \"A set of options for the search viewlet\"),\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tquery: { 'type': 'string' },\n\t\t\t\t\t\treplace: { 'type': 'string' },\n\t\t\t\t\t\tpreserveCase: { 'type': 'boolean' },\n\t\t\t\t\t\ttriggerSearch: { 'type': 'boolean' },\n\t\t\t\t\t\tfilesToInclude: { 'type': 'string' },\n\t\t\t\t\t\tfilesToExclude: { 'type': 'string' },\n\t\t\t\t\t\tisRegex: { 'type': 'boolean' },\n\t\t\t\t\t\tisCaseSensitive: { 'type': 'boolean' },\n\t\t\t\t\t\tmatchWholeWord: { 'type': 'boolean' },\n\t\t\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { 'type': 'boolean' },\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t]\n\t},\n\tid: Constants.FindInFilesActionId,\n\t// Give more weightage to this keybinding than of `View: Show Search` keybinding. See #116188, #115556, #115511\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: null,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F,\n\thandler: FindInFilesCommand\n});\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: Constants.FindInFilesActionId, title: { value: nls.localize('findInFiles', \"Find in Files\"), original: 'Find in Files' }, category } });\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, {\n\tgroup: '4_find_global',\n\tcommand: {\n\t\tid: Constants.FindInFilesActionId,\n\t\ttitle: nls.localize({ key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] }, \"Find &&in Files\")\n\t},\n\torder: 1\n});\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(FocusNextSearchResultAction, { primary: KeyCode.F4 }), 'Search: Focus Next Search Result', category.value, ContextKeyExpr.or(Constants.HasSearchResults, SearchEditorConstants.InSearchEditor));\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(FocusPreviousSearchResultAction, { primary: KeyMod.Shift | KeyCode.F4 }), 'Search: Focus Previous Search Result', category.value, ContextKeyExpr.or(Constants.HasSearchResults, SearchEditorConstants.InSearchEditor));\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ReplaceInFilesAction, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_H }), 'Search: Replace in Files', category.value);\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, {\n\tgroup: '4_find_global',\n\tcommand: {\n\t\tid: ReplaceInFilesAction.ID,\n\t\ttitle: nls.localize({ key: 'miReplaceInFiles', comment: ['&& denotes a mnemonic'] }, \"Replace &&in Files\")\n\t},\n\torder: 2\n});\n\nif (platform.isMacintosh) {\n\t// Register this with a more restrictive `when` on mac to avoid conflict with \"copy path\"\n\tKeybindingsRegistry.registerCommandAndKeybindingRule(Object.assign({\n\t\tid: Constants.ToggleCaseSensitiveCommandId,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(Constants.SearchViewFocusedKey, Constants.FileMatchOrFolderMatchFocusKey.toNegated()),\n\t\thandler: toggleCaseSensitiveCommand\n\t}, ToggleCaseSensitiveKeybinding));\n} else {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule(Object.assign({\n\t\tid: Constants.ToggleCaseSensitiveCommandId,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: Constants.SearchViewFocusedKey,\n\t\thandler: toggleCaseSensitiveCommand\n\t}, ToggleCaseSensitiveKeybinding));\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(Object.assign({\n\tid: Constants.ToggleWholeWordCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.SearchViewFocusedKey,\n\thandler: toggleWholeWordCommand\n}, ToggleWholeWordKeybinding));\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(Object.assign({\n\tid: Constants.ToggleRegexCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.SearchViewFocusedKey,\n\thandler: toggleRegexCommand\n}, ToggleRegexKeybinding));\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(Object.assign({\n\tid: Constants.TogglePreserveCaseId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.SearchViewFocusedKey,\n\thandler: togglePreserveCaseCommand\n}, TogglePreserveCaseKeybinding));\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.AddCursorsAtSearchResults,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_L,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.openEditorWithMultiCursor(<FileMatchOrMatch>tree.getFocus()[0]);\n\t\t}\n\t}\n});\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ShowAllSymbolsAction, { primary: KeyMod.CtrlCmd | KeyCode.KEY_T }), 'Go to Symbol in Workspace...');\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleSearchOnTypeAction), 'Search: Toggle Search on Type', category.value);\n\n// Register Quick Access Handler\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess);\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: AnythingQuickAccessProvider,\n\tprefix: AnythingQuickAccessProvider.PREFIX,\n\tplaceholder: nls.localize('anythingQuickAccessPlaceholder', \"Search files by name (append {0} to go to line or {1} to go to symbol)\", AbstractGotoLineQuickAccessProvider.PREFIX, GotoSymbolQuickAccessProvider.PREFIX),\n\tcontextKey: defaultQuickAccessContextKeyValue,\n\thelpEntries: [{ description: nls.localize('anythingQuickAccess', \"Go to File\"), needsEditor: false }]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: SymbolsQuickAccessProvider,\n\tprefix: SymbolsQuickAccessProvider.PREFIX,\n\tplaceholder: nls.localize('symbolsQuickAccessPlaceholder', \"Type the name of a symbol to open.\"),\n\tcontextKey: 'inWorkspaceSymbolsPicker',\n\thelpEntries: [{ description: nls.localize('symbolsQuickAccess', \"Go to Symbol in Workspace\"), needsEditor: false }]\n});\n\n// Configuration\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'search',\n\torder: 13,\n\ttitle: nls.localize('searchConfigurationTitle', \"Search\"),\n\ttype: 'object',\n\tproperties: {\n\t\t[SEARCH_EXCLUDE_CONFIG]: {\n\t\t\ttype: 'object',\n\t\t\tmarkdownDescription: nls.localize('exclude', \"Configure glob patterns for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).\"),\n\t\t\tdefault: { '**/node_modules': true, '**/bower_components': true, '**/*.code-search': true },\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('exclude.boolean', \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\twhen: {\n\t\t\t\t\t\t\t\ttype: 'string', // expression ({ \"**/*.js\": { \"when\": \"$(basename).js\" } })\n\t\t\t\t\t\t\t\tpattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n\t\t\t\t\t\t\t\tdefault: '$(basename).ext',\n\t\t\t\t\t\t\t\tdescription: nls.localize('exclude.when', 'Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t[SEARCH_MODE_CONFIG]: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['view', 'reuseEditor', 'newEditor'],\n\t\t\tdefault: 'view',\n\t\t\tmarkdownDescription: nls.localize('search.mode', \"Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the sidebar's search view, or in a search editor\"),\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.mode.view', \"Search in the search view, either in the panel or sidebar.\"),\n\t\t\t\tnls.localize('search.mode.reuseEditor', \"Search in an existing search editor if present, otherwise in a new search editor.\"),\n\t\t\t\tnls.localize('search.mode.newEditor', \"Search in a new search editor.\"),\n\t\t\t]\n\t\t},\n\t\t'search.useRipgrep': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('useRipgrep', \"This setting is deprecated and now falls back on \\\"search.usePCRE2\\\".\"),\n\t\t\tdeprecationMessage: nls.localize('useRipgrepDeprecated', \"Deprecated. Consider \\\"search.usePCRE2\\\" for advanced regex feature support.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.maintainFileSearchCache': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.maintainFileSearchCache', \"When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.useIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useIgnoreFiles', \"Controls whether to use `.gitignore` and `.ignore` files when searching for files.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.useGlobalIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useGlobalIgnoreFiles', \"Controls whether to use global `.gitignore` and `.ignore` files when searching for files.\"),\n\t\t\tdefault: false,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.quickOpen.includeSymbols': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeSymbols', \"Whether to include results from a global symbol search in the file results for Quick Open.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.quickOpen.includeHistory': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeHistory', \"Whether to include results from recently opened files in the file results for Quick Open.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.quickOpen.history.filterSortOrder': {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['default', 'recency'],\n\t\t\t'default': 'default',\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('filterSortOrder.default', 'History entries are sorted by relevance based on the filter value used. More relevant entries appear first.'),\n\t\t\t\tnls.localize('filterSortOrder.recency', 'History entries are sorted by recency. More recently opened entries appear first.')\n\t\t\t],\n\t\t\t'description': nls.localize('filterSortOrder', \"Controls sorting order of editor history in quick open when filtering.\")\n\t\t},\n\t\t'search.followSymlinks': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.followSymlinks', \"Controls whether to follow symlinks while searching.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.smartCase': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.smartCase', \"Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.globalFindClipboard': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.globalFindClipboard', \"Controls whether the search view should read or modify the shared find clipboard on macOS.\"),\n\t\t\tincluded: platform.isMacintosh\n\t\t},\n\t\t'search.location': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['sidebar', 'panel'],\n\t\t\tdefault: 'sidebar',\n\t\t\tdescription: nls.localize('search.location', \"Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.\"),\n\t\t\tdeprecationMessage: nls.localize('search.location.deprecationMessage', \"This setting is deprecated. You can drag the search icon to a new location instead.\")\n\t\t},\n\t\t'search.collapseResults': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.collapseResults.auto', \"Files with less than 10 results are expanded. Others are collapsed.\"),\n\t\t\t\t'',\n\t\t\t\t''\n\t\t\t],\n\t\t\tdefault: 'alwaysExpand',\n\t\t\tdescription: nls.localize('search.collapseAllResults', \"Controls whether the search results will be collapsed or expanded.\"),\n\t\t},\n\t\t'search.useReplacePreview': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('search.useReplacePreview', \"Controls whether to open Replace Preview when selecting or replacing a match.\"),\n\t\t},\n\t\t'search.showLineNumbers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.showLineNumbers', \"Controls whether to show line numbers for search results.\"),\n\t\t},\n\t\t'search.usePCRE2': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.usePCRE2', \"Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.\"),\n\t\t\tdeprecationMessage: nls.localize('usePCRE2Deprecated', \"Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.\"),\n\t\t},\n\t\t'search.actionsPosition': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'right'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.actionsPositionAuto', \"Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.\"),\n\t\t\t\tnls.localize('search.actionsPositionRight', \"Always position the actionbar to the right.\"),\n\t\t\t],\n\t\t\tdefault: 'right',\n\t\t\tdescription: nls.localize('search.actionsPosition', \"Controls the positioning of the actionbar on rows in the search view.\")\n\t\t},\n\t\t'search.searchOnType': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('search.searchOnType', \"Search all files as you type.\")\n\t\t},\n\t\t'search.seedWithNearestWord': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.seedWithNearestWord', \"Enable seeding search from the word nearest the cursor when the active editor has no selection.\")\n\t\t},\n\t\t'search.seedOnFocus': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.seedOnFocus', \"Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.\")\n\t\t},\n\t\t'search.searchOnTypeDebouncePeriod': {\n\t\t\ttype: 'number',\n\t\t\tdefault: 300,\n\t\t\tmarkdownDescription: nls.localize('search.searchOnTypeDebouncePeriod', \"When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `search.searchOnType` is disabled.\")\n\t\t},\n\t\t'search.searchEditor.doubleClickBehaviour': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['selectWord', 'goToLocation', 'openLocationToSide'],\n\t\t\tdefault: 'goToLocation',\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.selectWord', \"Double clicking selects the word under the cursor.\"),\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.goToLocation', \"Double clicking opens the result in the active editor group.\"),\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.openLocationToSide', \"Double clicking opens the result in the editor group to the side, creating one if it does not yet exist.\"),\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('search.searchEditor.doubleClickBehaviour', \"Configure effect of double clicking a result in a search editor.\")\n\t\t},\n\t\t'search.searchEditor.reusePriorSearchConfiguration': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize({ key: 'search.searchEditor.reusePriorSearchConfiguration', comment: ['\"Search Editor\" is a type of editor that can display search results. \"includes, excludes, and flags\" refers to the \"files to include\" and \"files to exclude\" input boxes, and the flags that control whether a query is case-sensitive or a regex.'] }, \"When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.\")\n\t\t},\n\t\t'search.searchEditor.defaultNumberOfContextLines': {\n\t\t\ttype: ['number', 'null'],\n\t\t\tdefault: 1,\n\t\t\tmarkdownDescription: nls.localize('search.searchEditor.defaultNumberOfContextLines', \"The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.\")\n\t\t},\n\t\t'search.sortOrder': {\n\t\t\t'type': 'string',\n\t\t\t'enum': [SearchSortOrder.Default, SearchSortOrder.FileNames, SearchSortOrder.Type, SearchSortOrder.Modified, SearchSortOrder.CountDescending, SearchSortOrder.CountAscending],\n\t\t\t'default': SearchSortOrder.Default,\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('searchSortOrder.default', \"Results are sorted by folder and file names, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.filesOnly', \"Results are sorted by file names ignoring folder order, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.type', \"Results are sorted by file extensions, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.modified', \"Results are sorted by file last modified date, in descending order.\"),\n\t\t\t\tnls.localize('searchSortOrder.countDescending', \"Results are sorted by count per file, in descending order.\"),\n\t\t\t\tnls.localize('searchSortOrder.countAscending', \"Results are sorted by count per file, in ascending order.\")\n\t\t\t],\n\t\t\t'description': nls.localize('search.sortOrder', \"Controls sorting order of search results.\")\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand('_executeWorkspaceSymbolProvider', function (accessor, ...args) {\n\tconst [query] = args;\n\tassertType(typeof query === 'string');\n\treturn getWorkspaceSymbols(query);\n});\n\n// Go to menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '3_global_nav',\n\tcommand: {\n\t\tid: 'workbench.action.showAllSymbols',\n\t\ttitle: nls.localize({ key: 'miGotoSymbolInWorkspace', comment: ['&& denotes a mnemonic'] }, \"Go to Symbol in &&Workspace...\")\n\t},\n\torder: 2\n});\n"]}