{"version":3,"sources":["vs/workbench/contrib/search/browser/anythingQuickAccess.ts"],"names":[],"mappings":"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","file":"anythingQuickAccess.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/anythingQuickAccess';\nimport { IQuickInputButton, IKeyMods, quickPickItemScorerAccessor, QuickPickItemScorerAccessor, IQuickPick, IQuickPickItemWithResource, QuickInputHideReason } from 'vs/platform/quickinput/common/quickInput';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider, TriggerAction, FastAndSlowPicks, Picks, PicksWithActive } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { prepareQuery, IPreparedQuery, compareItemsByFuzzyScore, scoreItemFuzzy, FuzzyScorerCache } from 'vs/base/common/fuzzyScorer';\nimport { IFileQueryBuilderOptions, QueryBuilder } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { getOutOfWorkspaceEditorResources, extractRangeFromFilter, IWorkbenchSearchConfiguration } from 'vs/workbench/contrib/search/common/search';\nimport { ISearchService, ISearchComplete } from 'vs/workbench/services/search/common/search';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { untildify } from 'vs/base/common/labels';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { URI } from 'vs/base/common/uri';\nimport { toLocalResource, dirname, basenameOrAuthority } from 'vs/base/common/resources';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore, IDisposable, toDisposable, MutableDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { localize } from 'vs/nls';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchEditorConfiguration, IEditorInput, EditorInput, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { top } from 'vs/base/common/arrays';\nimport { FileQueryCacheState } from 'vs/workbench/contrib/search/common/cacheState';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IResourceEditorInput, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { Schemas } from 'vs/base/common/network';\nimport { IFilesConfigurationService, AutoSaveMode } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { SymbolsQuickAccessProvider } from 'vs/workbench/contrib/search/browser/symbolsQuickAccess';\nimport { DefaultQuickAccessFilterValue } from 'vs/platform/quickinput/common/quickAccess';\nimport { IWorkbenchQuickAccessConfiguration } from 'vs/workbench/browser/quickaccess';\nimport { GotoSymbolQuickAccessProvider } from 'vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ScrollType, IEditor, ICodeEditorViewState, IDiffEditorViewState } from 'vs/editor/common/editorCommon';\nimport { once } from 'vs/base/common/functional';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { getIEditor } from 'vs/editor/browser/editorBrowser';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { stripIcons } from 'vs/base/common/iconLabels';\n\ninterface IAnythingQuickPickItem extends IPickerQuickAccessItem, IQuickPickItemWithResource { }\n\ninterface IEditorSymbolAnythingQuickPickItem extends IAnythingQuickPickItem {\n\tresource: URI;\n\trange: { decoration: IRange, selection: IRange }\n}\n\nfunction isEditorSymbolQuickPickItem(pick?: IAnythingQuickPickItem): pick is IEditorSymbolAnythingQuickPickItem {\n\tconst candidate = pick ? pick as IEditorSymbolAnythingQuickPickItem : undefined;\n\n\treturn !!candidate && !!candidate.range && !!candidate.resource;\n}\n\nexport class AnythingQuickAccessProvider extends PickerQuickAccessProvider<IAnythingQuickPickItem> {\n\n\tstatic PREFIX = '';\n\n\tprivate static readonly NO_RESULTS_PICK: IAnythingQuickPickItem = {\n\t\tlabel: localize('noAnythingResults', \"No matching results\")\n\t};\n\n\tprivate static readonly MAX_RESULTS = 512;\n\n\tprivate static readonly TYPING_SEARCH_DELAY = 200; // this delay accommodates for the user typing a word and then stops typing to start searching\n\n\tprivate readonly pickState = new class {\n\n\t\tpicker: IQuickPick<IAnythingQuickPickItem> | undefined = undefined;\n\n\t\teditorViewState: {\n\t\t\teditor: IEditorInput,\n\t\t\tgroup: IEditorGroup,\n\t\t\tstate: ICodeEditorViewState | IDiffEditorViewState | undefined\n\t\t} | undefined = undefined;\n\n\t\tscorerCache: FuzzyScorerCache = Object.create(null);\n\t\tfileQueryCache: FileQueryCacheState | undefined = undefined;\n\n\t\tlastOriginalFilter: string | undefined = undefined;\n\t\tlastFilter: string | undefined = undefined;\n\t\tlastRange: IRange | undefined = undefined;\n\n\t\tlastGlobalPicks: PicksWithActive<IAnythingQuickPickItem> | undefined = undefined;\n\n\t\tisQuickNavigating: boolean | undefined = undefined;\n\n\t\tconstructor(private readonly provider: AnythingQuickAccessProvider, private readonly editorService: IEditorService) { }\n\n\t\tset(picker: IQuickPick<IAnythingQuickPickItem>): void {\n\n\t\t\t// Picker for this run\n\t\t\tthis.picker = picker;\n\t\t\tonce(picker.onDispose)(() => {\n\t\t\t\tif (picker === this.picker) {\n\t\t\t\t\tthis.picker = undefined; // clear the picker when disposed to not keep it in memory for too long\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Caches\n\t\t\tconst isQuickNavigating = !!picker.quickNavigate;\n\t\t\tif (!isQuickNavigating) {\n\t\t\t\tthis.fileQueryCache = this.provider.createFileQueryCache();\n\t\t\t\tthis.scorerCache = Object.create(null);\n\t\t\t}\n\n\t\t\t// Other\n\t\t\tthis.isQuickNavigating = isQuickNavigating;\n\t\t\tthis.lastOriginalFilter = undefined;\n\t\t\tthis.lastFilter = undefined;\n\t\t\tthis.lastRange = undefined;\n\t\t\tthis.lastGlobalPicks = undefined;\n\t\t\tthis.editorViewState = undefined;\n\t\t}\n\n\t\trememberEditorViewState(): void {\n\t\t\tif (this.editorViewState) {\n\t\t\t\treturn; // return early if already done\n\t\t\t}\n\n\t\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\t\tif (activeEditorPane) {\n\t\t\t\tthis.editorViewState = {\n\t\t\t\t\tgroup: activeEditorPane.group,\n\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\tstate: withNullAsUndefined(getIEditor(activeEditorPane.getControl())?.saveViewState())\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tasync restoreEditorViewState(): Promise<void> {\n\t\t\tif (this.editorViewState) {\n\t\t\t\tawait this.editorService.openEditor(\n\t\t\t\t\tthis.editorViewState.editor,\n\t\t\t\t\t{ viewState: this.editorViewState.state, preserveFocus: true /* import to not close the picker as a result */ },\n\t\t\t\t\tthis.editorViewState.group\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}(this, this.editorService);\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IHistoryService private readonly historyService: IHistoryService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(AnythingQuickAccessProvider.PREFIX, {\n\t\t\tcanAcceptInBackground: true,\n\t\t\tnoResultsPick: AnythingQuickAccessProvider.NO_RESULTS_PICK\n\t\t});\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this.configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\t\tconst searchConfig = this.configurationService.getValue<IWorkbenchSearchConfiguration>().search;\n\t\tconst quickAccessConfig = this.configurationService.getValue<IWorkbenchQuickAccessConfiguration>().workbench.quickOpen;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n\t\t\topenSideBySideDirection: editorConfig?.openSideBySideDirection,\n\t\t\tincludeSymbols: searchConfig?.quickOpen.includeSymbols,\n\t\t\tincludeHistory: searchConfig?.quickOpen.includeHistory,\n\t\t\thistoryFilterSortOrder: searchConfig?.quickOpen.history.filterSortOrder,\n\t\t\tshortAutoSaveDelay: this.filesConfigurationService.getAutoSaveMode() === AutoSaveMode.AFTER_SHORT_DELAY,\n\t\t\tpreserveInput: quickAccessConfig.preserveInput\n\t\t};\n\t}\n\n\toverride provide(picker: IQuickPick<IAnythingQuickPickItem>, token: CancellationToken): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Update the pick state for this run\n\t\tthis.pickState.set(picker);\n\n\t\t// Add editor decorations for active editor symbol picks\n\t\tconst editorDecorationsDisposable = disposables.add(new MutableDisposable());\n\t\tdisposables.add(picker.onDidChangeActive(() => {\n\n\t\t\t// Clear old decorations\n\t\t\teditorDecorationsDisposable.value = undefined;\n\n\t\t\t// Add new decoration if editor symbol is active\n\t\t\tconst [item] = picker.activeItems;\n\t\t\tif (isEditorSymbolQuickPickItem(item)) {\n\t\t\t\teditorDecorationsDisposable.value = this.decorateAndRevealSymbolRange(item);\n\t\t\t}\n\t\t}));\n\n\t\t// Restore view state upon cancellation if we changed it\n\t\t// but only when the picker was closed via explicit user\n\t\t// gesture and not e.g. when focus was lost because that\n\t\t// could mean the user clicked into the editor directly.\n\t\tdisposables.add(once(picker.onDidHide)(({ reason }) => {\n\t\t\tif (reason === QuickInputHideReason.Gesture) {\n\t\t\t\tthis.pickState.restoreEditorViewState();\n\t\t\t}\n\t\t}));\n\n\t\t// Start picker\n\t\tdisposables.add(super.provide(picker, token));\n\n\t\treturn disposables;\n\t}\n\n\tprivate decorateAndRevealSymbolRange(pick: IEditorSymbolAnythingQuickPickItem): IDisposable {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (!this.uriIdentityService.extUri.isEqual(pick.resource, activeEditor?.resource)) {\n\t\t\treturn Disposable.None; // active editor needs to be for resource\n\t\t}\n\n\t\tconst activeEditorControl = this.editorService.activeTextEditorControl;\n\t\tif (!activeEditorControl) {\n\t\t\treturn Disposable.None; // we need a text editor control to decorate and reveal\n\t\t}\n\n\t\t// we must remember our curret view state to be able to restore\n\t\tthis.pickState.rememberEditorViewState();\n\n\t\t// Reveal\n\t\tactiveEditorControl.revealRangeInCenter(pick.range.selection, ScrollType.Smooth);\n\n\t\t// Decorate\n\t\tthis.addDecorations(activeEditorControl, pick.range.decoration);\n\n\t\treturn toDisposable(() => this.clearDecorations(activeEditorControl));\n\t}\n\n\tprotected getPicks(originalFilter: string, disposables: DisposableStore, token: CancellationToken): Picks<IAnythingQuickPickItem> | Promise<Picks<IAnythingQuickPickItem>> | FastAndSlowPicks<IAnythingQuickPickItem> | null {\n\n\t\t// Find a suitable range from the pattern looking for \":\", \"#\" or \",\"\n\t\t// unless we have the `@` editor symbol character inside the filter\n\t\tconst filterWithRange = extractRangeFromFilter(originalFilter, [GotoSymbolQuickAccessProvider.PREFIX]);\n\n\t\t// Update filter with normalized values\n\t\tlet filter: string;\n\t\tif (filterWithRange) {\n\t\t\tfilter = filterWithRange.filter;\n\t\t} else {\n\t\t\tfilter = originalFilter;\n\t\t}\n\n\t\t// Remember as last range\n\t\tthis.pickState.lastRange = filterWithRange?.range;\n\n\t\t// If the original filter value has changed but the normalized\n\t\t// one has not, we return early with a `null` result indicating\n\t\t// that the results should preserve because the range information\n\t\t// (:<line>:<column>) does not need to trigger any re-sorting.\n\t\tif (originalFilter !== this.pickState.lastOriginalFilter && filter === this.pickState.lastFilter) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Remember as last filter\n\t\tconst lastWasFiltering = !!this.pickState.lastOriginalFilter;\n\t\tthis.pickState.lastOriginalFilter = originalFilter;\n\t\tthis.pickState.lastFilter = filter;\n\n\t\t// Remember our pick state before returning new picks\n\t\t// unless we are inside an editor symbol filter or result.\n\t\t// We can use this state to return back to the global pick\n\t\t// when the user is narrowing back out of editor symbols.\n\t\tconst picks = this.pickState.picker?.items;\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (picks && activePick) {\n\t\t\tconst activePickIsEditorSymbol = isEditorSymbolQuickPickItem(activePick);\n\t\t\tconst activePickIsNoResultsInEditorSymbols = activePick === AnythingQuickAccessProvider.NO_RESULTS_PICK && filter.indexOf(GotoSymbolQuickAccessProvider.PREFIX) >= 0;\n\t\t\tif (!activePickIsEditorSymbol && !activePickIsNoResultsInEditorSymbols) {\n\t\t\t\tthis.pickState.lastGlobalPicks = {\n\t\t\t\t\titems: picks,\n\t\t\t\t\tactive: activePick\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `enableEditorSymbolSearch`: this will enable local editor symbol\n\t\t// search if the filter value includes `@` character. We only want\n\t\t// to enable this support though if the user was filtering in the\n\t\t// picker because this feature depends on an active item in the result\n\t\t// list to get symbols from. If we would simply trigger editor symbol\n\t\t// search without prior filtering, you could not paste a file name\n\t\t// including the `@` character to open it (e.g. /some/file@path)\n\t\t// refs: https://github.com/microsoft/vscode/issues/93845\n\t\treturn this.doGetPicks(filter, { enableEditorSymbolSearch: lastWasFiltering }, disposables, token);\n\t}\n\n\tprivate doGetPicks(filter: string, options: { enableEditorSymbolSearch: boolean }, disposables: DisposableStore, token: CancellationToken): Picks<IAnythingQuickPickItem> | Promise<Picks<IAnythingQuickPickItem>> | FastAndSlowPicks<IAnythingQuickPickItem> {\n\t\tconst query = prepareQuery(filter);\n\n\t\t// Return early if we have editor symbol picks. We support this by:\n\t\t// - having a previously active global pick (e.g. a file)\n\t\t// - the user typing `@` to start the local symbol query\n\t\tif (options.enableEditorSymbolSearch) {\n\t\t\tconst editorSymbolPicks = this.getEditorSymbolPicks(query, disposables, token);\n\t\t\tif (editorSymbolPicks) {\n\t\t\t\treturn editorSymbolPicks;\n\t\t\t}\n\t\t}\n\n\t\t// If we have a known last active editor symbol pick, we try to restore\n\t\t// the last global pick to support the case of narrowing out from a\n\t\t// editor symbol search back into the global search\n\t\tconst activePick = this.pickState.picker?.activeItems[0];\n\t\tif (isEditorSymbolQuickPickItem(activePick) && this.pickState.lastGlobalPicks) {\n\t\t\treturn this.pickState.lastGlobalPicks;\n\t\t}\n\n\t\t// Otherwise return normally with history and file/symbol results\n\t\tconst historyEditorPicks = this.getEditorHistoryPicks(query);\n\n\t\treturn {\n\n\t\t\t// Fast picks: editor history\n\t\t\tpicks:\n\t\t\t\t(this.pickState.isQuickNavigating || historyEditorPicks.length === 0) ?\n\t\t\t\t\thistoryEditorPicks :\n\t\t\t\t\t[\n\t\t\t\t\t\t{ type: 'separator', label: localize('recentlyOpenedSeparator', \"recently opened\") },\n\t\t\t\t\t\t...historyEditorPicks\n\t\t\t\t\t],\n\n\t\t\t// Slow picks: files and symbols\n\t\t\tadditionalPicks: (async (): Promise<Picks<IAnythingQuickPickItem>> => {\n\n\t\t\t\t// Exclude any result that is already present in editor history\n\t\t\t\tconst additionalPicksExcludes = new ResourceMap<boolean>();\n\t\t\t\tfor (const historyEditorPick of historyEditorPicks) {\n\t\t\t\t\tif (historyEditorPick.resource) {\n\t\t\t\t\t\tadditionalPicksExcludes.set(historyEditorPick.resource, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst additionalPicks = await this.getAdditionalPicks(query, additionalPicksExcludes, token);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn additionalPicks.length > 0 ? [\n\t\t\t\t\t{ type: 'separator', label: this.configuration.includeSymbols ? localize('fileAndSymbolResultsSeparator', \"file and symbol results\") : localize('fileResultsSeparator', \"file results\") },\n\t\t\t\t\t...additionalPicks\n\t\t\t\t] : [];\n\t\t\t})()\n\t\t};\n\t}\n\n\tprivate async getAdditionalPicks(query: IPreparedQuery, excludes: ResourceMap<boolean>, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\n\t\t// Resolve file and symbol picks (if enabled)\n\t\tconst [filePicks, symbolPicks] = await Promise.all([\n\t\t\tthis.getFilePicks(query, excludes, token),\n\t\t\tthis.getWorkspaceSymbolPicks(query, token)\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Perform sorting (top results by score)\n\t\tconst sortedAnythingPicks = top(\n\t\t\t[...filePicks, ...symbolPicks],\n\t\t\t(anyPickA, anyPickB) => compareItemsByFuzzyScore(anyPickA, anyPickB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache),\n\t\t\tAnythingQuickAccessProvider.MAX_RESULTS\n\t\t);\n\n\t\t// Perform filtering\n\t\tconst filteredAnythingPicks: IAnythingQuickPickItem[] = [];\n\t\tfor (const anythingPick of sortedAnythingPicks) {\n\n\t\t\t// Always preserve any existing highlights (e.g. from workspace symbols)\n\t\t\tif (anythingPick.highlights) {\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\n\t\t\t// Otherwise, do the scoring and matching here\n\t\t\telse {\n\t\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(anythingPick, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\t\tif (!score) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tanythingPick.highlights = {\n\t\t\t\t\tlabel: labelMatch,\n\t\t\t\t\tdescription: descriptionMatch\n\t\t\t\t};\n\n\t\t\t\tfilteredAnythingPicks.push(anythingPick);\n\t\t\t}\n\t\t}\n\n\t\treturn filteredAnythingPicks;\n\t}\n\n\n\t//#region Editor History\n\n\tprivate readonly labelOnlyEditorHistoryPickAccessor = new QuickPickItemScorerAccessor({ skipDescription: true });\n\n\tprivate getEditorHistoryPicks(query: IPreparedQuery): Array<IAnythingQuickPickItem> {\n\t\tconst configuration = this.configuration;\n\n\t\t// Just return all history entries if not searching\n\t\tif (!query.normalized) {\n\t\t\treturn this.historyService.getHistory().map(editor => this.createAnythingPick(editor, configuration));\n\t\t}\n\n\t\tif (!this.configuration.includeHistory) {\n\t\t\treturn []; // disabled when searching\n\t\t}\n\n\t\t// Perform filtering\n\t\tconst editorHistoryScorerAccessor = query.containsPathSeparator ? quickPickItemScorerAccessor : this.labelOnlyEditorHistoryPickAccessor; // Only match on label of the editor unless the search includes path separators\n\t\tconst editorHistoryPicks: Array<IAnythingQuickPickItem> = [];\n\t\tfor (const editor of this.historyService.getHistory()) {\n\t\t\tconst resource = editor.resource;\n\t\t\tif (!resource || (!this.fileService.canHandleResource(resource) && resource.scheme !== Schemas.untitled)) {\n\t\t\t\tcontinue; // exclude editors without file resource if we are searching by pattern\n\t\t\t}\n\n\t\t\tconst editorHistoryPick = this.createAnythingPick(editor, configuration);\n\n\t\t\tconst { score, labelMatch, descriptionMatch } = scoreItemFuzzy(editorHistoryPick, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache);\n\t\t\tif (!score) {\n\t\t\t\tcontinue; // exclude editors not matching query\n\t\t\t}\n\n\t\t\teditorHistoryPick.highlights = {\n\t\t\t\tlabel: labelMatch,\n\t\t\t\tdescription: descriptionMatch\n\t\t\t};\n\n\t\t\teditorHistoryPicks.push(editorHistoryPick);\n\t\t}\n\n\t\t// Return without sorting if settings tell to sort by recency\n\t\tif (this.configuration.historyFilterSortOrder === 'recency') {\n\t\t\treturn editorHistoryPicks;\n\t\t}\n\n\t\t// Perform sorting\n\t\treturn editorHistoryPicks.sort((editorA, editorB) => compareItemsByFuzzyScore(editorA, editorB, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache));\n\t}\n\n\t//#endregion\n\n\n\t//#region File Search\n\n\tprivate readonly fileQueryDelayer = this._register(new ThrottledDelayer<URI[]>(AnythingQuickAccessProvider.TYPING_SEARCH_DELAY));\n\n\tprivate readonly fileQueryBuilder = this.instantiationService.createInstance(QueryBuilder);\n\n\tprivate createFileQueryCache(): FileQueryCacheState {\n\t\treturn new FileQueryCacheState(\n\t\t\tcacheKey => this.fileQueryBuilder.file(this.contextService.getWorkspace().folders, this.getFileQueryOptions({ cacheKey })),\n\t\t\tquery => this.searchService.fileSearch(query),\n\t\t\tcacheKey => this.searchService.clearCache(cacheKey),\n\t\t\tthis.pickState.fileQueryCache\n\t\t).load();\n\t}\n\n\tprivate async getFilePicks(query: IPreparedQuery, excludes: ResourceMap<boolean>, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\t\tif (!query.normalized) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Absolute path result\n\t\tconst absolutePathResult = await this.getAbsolutePathFileResult(query, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Use absolute path result as only results if present\n\t\tlet fileMatches: Array<URI>;\n\t\tif (absolutePathResult) {\n\t\t\tif (excludes.has(absolutePathResult)) {\n\t\t\t\treturn []; // excluded\n\t\t\t}\n\n\t\t\t// Create a single result pick and make sure to apply full\n\t\t\t// highlights to ensure the pick is displayed. Since a\n\t\t\t// ~ might have been used for searching, our fuzzy scorer\n\t\t\t// may otherwise not properly respect the pick as a result\n\t\t\tconst absolutePathPick = this.createAnythingPick(absolutePathResult, this.configuration);\n\t\t\tabsolutePathPick.highlights = {\n\t\t\t\tlabel: [{ start: 0, end: absolutePathPick.label.length }],\n\t\t\t\tdescription: absolutePathPick.description ? [{ start: 0, end: absolutePathPick.description.length }] : undefined\n\t\t\t};\n\n\t\t\treturn [absolutePathPick];\n\t\t}\n\n\t\t// Otherwise run the file search (with a delayer if cache is not ready yet)\n\t\tif (this.pickState.fileQueryCache?.isLoaded) {\n\t\t\tfileMatches = await this.doFileSearch(query, token);\n\t\t} else {\n\t\t\tfileMatches = await this.fileQueryDelayer.trigger(async () => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn this.doFileSearch(query, token);\n\t\t\t});\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Filter excludes & convert to picks\n\t\tconst configuration = this.configuration;\n\t\treturn fileMatches\n\t\t\t.filter(resource => !excludes.has(resource))\n\t\t\t.map(resource => this.createAnythingPick(resource, configuration));\n\t}\n\n\tprivate async doFileSearch(query: IPreparedQuery, token: CancellationToken): Promise<URI[]> {\n\t\tconst [fileSearchResults, relativePathFileResults] = await Promise.all([\n\n\t\t\t// File search: this is a search over all files of the workspace using the provided pattern\n\t\t\tthis.getFileSearchResults(query, token),\n\n\t\t\t// Relative path search: we also want to consider results that match files inside the workspace\n\t\t\t// by looking for relative paths that the user typed as query. This allows to return even excluded\n\t\t\t// results into the picker if found (e.g. helps for opening compilation results that are otherwise\n\t\t\t// excluded)\n\t\t\tthis.getRelativePathFileResults(query, token)\n\t\t]);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Return quickly if no relative results are present\n\t\tif (!relativePathFileResults) {\n\t\t\treturn fileSearchResults;\n\t\t}\n\n\t\t// Otherwise, make sure to filter relative path results from\n\t\t// the search results to prevent duplicates\n\t\tconst relativePathFileResultsMap = new ResourceMap<boolean>();\n\t\tfor (const relativePathFileResult of relativePathFileResults) {\n\t\t\trelativePathFileResultsMap.set(relativePathFileResult, true);\n\t\t}\n\n\t\treturn [\n\t\t\t...fileSearchResults.filter(result => !relativePathFileResultsMap.has(result)),\n\t\t\t...relativePathFileResults\n\t\t];\n\t}\n\n\tprivate async getFileSearchResults(query: IPreparedQuery, token: CancellationToken): Promise<URI[]> {\n\n\t\t// filePattern for search depends on the number of queries in input:\n\t\t// - with multiple: only take the first one and let the filter later drop non-matching results\n\t\t// - with single: just take the original in full\n\t\t//\n\t\t// This enables to e.g. search for \"someFile someFolder\" by only returning\n\t\t// search results for \"someFile\" and not both that would normally not match.\n\t\t//\n\t\tlet filePattern = '';\n\t\tif (query.values && query.values.length > 1) {\n\t\t\tfilePattern = query.values[0].original;\n\t\t} else {\n\t\t\tfilePattern = query.original;\n\t\t}\n\n\t\tconst fileSearchResults = await this.doGetFileSearchResults(filePattern, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// If we detect that the search limit has been hit and we have a query\n\t\t// that was composed of multiple inputs where we only took the first part\n\t\t// we run another search with the full original query included to make\n\t\t// sure we are including all possible results that could match.\n\t\tif (fileSearchResults.limitHit && query.values && query.values.length > 1) {\n\t\t\tconst additionalFileSearchResults = await this.doGetFileSearchResults(query.original, token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// Remember which result we already covered\n\t\t\tconst existingFileSearchResultsMap = new ResourceMap<boolean>();\n\t\t\tfor (const fileSearchResult of fileSearchResults.results) {\n\t\t\t\texistingFileSearchResultsMap.set(fileSearchResult.resource, true);\n\t\t\t}\n\n\t\t\t// Add all additional results to the original set for inclusion\n\t\t\tfor (const additionalFileSearchResult of additionalFileSearchResults.results) {\n\t\t\t\tif (!existingFileSearchResultsMap.has(additionalFileSearchResult.resource)) {\n\t\t\t\t\tfileSearchResults.results.push(additionalFileSearchResult);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fileSearchResults.results.map(result => result.resource);\n\t}\n\n\tprivate doGetFileSearchResults(filePattern: string, token: CancellationToken): Promise<ISearchComplete> {\n\t\treturn this.searchService.fileSearch(\n\t\t\tthis.fileQueryBuilder.file(\n\t\t\t\tthis.contextService.getWorkspace().folders,\n\t\t\t\tthis.getFileQueryOptions({\n\t\t\t\t\tfilePattern,\n\t\t\t\t\tcacheKey: this.pickState.fileQueryCache?.cacheKey,\n\t\t\t\t\tmaxResults: AnythingQuickAccessProvider.MAX_RESULTS\n\t\t\t\t})\n\t\t\t), token);\n\t}\n\n\tprivate getFileQueryOptions(input: { filePattern?: string, cacheKey?: string, maxResults?: number }): IFileQueryBuilderOptions {\n\t\treturn {\n\t\t\t_reason: 'openFileHandler', // used for telemetry - do not change\n\t\t\textraFileResources: this.instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n\t\t\tfilePattern: input.filePattern || '',\n\t\t\tcacheKey: input.cacheKey,\n\t\t\tmaxResults: input.maxResults || 0,\n\t\t\tsortByScore: true\n\t\t};\n\t}\n\n\tprivate async getAbsolutePathFileResult(query: IPreparedQuery, token: CancellationToken): Promise<URI | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userHome = await this.pathService.userHome();\n\t\tconst detildifiedQuery = untildify(query.original, userHome.scheme === Schemas.file ? userHome.fsPath : userHome.path);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(detildifiedQuery);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isAbsolutePathQuery) {\n\t\t\tconst resource = toLocalResource(\n\t\t\t\tawait this.pathService.fileURI(detildifiedQuery),\n\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\tthis.pathService.defaultUriScheme\n\t\t\t);\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif ((await this.fileService.resolve(resource)).isFile) {\n\t\t\t\t\treturn resource;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore if file does not exist\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate async getRelativePathFileResults(query: IPreparedQuery, token: CancellationToken): Promise<URI[] | undefined> {\n\t\tif (!query.containsPathSeparator) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert relative paths to absolute paths over all folders of the workspace\n\t\t// and return them as results if the absolute paths exist\n\t\tconst isAbsolutePathQuery = (await this.pathService.path).isAbsolute(query.original);\n\t\tif (!isAbsolutePathQuery) {\n\t\t\tconst resources: URI[] = [];\n\t\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst resource = toLocalResource(\n\t\t\t\t\tfolder.toResource(query.original),\n\t\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\t\tthis.pathService.defaultUriScheme\n\t\t\t\t);\n\n\t\t\t\ttry {\n\t\t\t\t\tif ((await this.fileService.resolve(resource)).isFile) {\n\t\t\t\t\t\tresources.push(resource);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore if file does not exist\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resources;\n\t\t}\n\n\t\treturn;\n\t}\n\n\t//#endregion\n\n\n\t//#region Workspace Symbols (if enabled)\n\n\tprivate workspaceSymbolsQuickAccess = this._register(this.instantiationService.createInstance(SymbolsQuickAccessProvider));\n\n\tprivate async getWorkspaceSymbolPicks(query: IPreparedQuery, token: CancellationToken): Promise<Array<IAnythingQuickPickItem>> {\n\t\tconst configuration = this.configuration;\n\t\tif (\n\t\t\t!query.normalized ||\t// we need a value for search for\n\t\t\t!configuration.includeSymbols ||\t\t// we need to enable symbols in search\n\t\t\tthis.pickState.lastRange\t\t\t\t// a range is an indicator for just searching for files\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Delegate to the existing symbols quick access\n\t\t// but skip local results and also do not score\n\t\treturn this.workspaceSymbolsQuickAccess.getSymbolPicks(query.original, {\n\t\t\tskipLocal: true,\n\t\t\tskipSorting: true,\n\t\t\tdelay: AnythingQuickAccessProvider.TYPING_SEARCH_DELAY\n\t\t}, token);\n\t}\n\n\t//#endregion\n\n\n\t//#region Editor Symbols (if narrowing down into a global pick via `@`)\n\n\tprivate readonly editorSymbolsQuickAccess = this.instantiationService.createInstance(GotoSymbolQuickAccessProvider);\n\n\tprivate getEditorSymbolPicks(query: IPreparedQuery, disposables: DisposableStore, token: CancellationToken): Promise<Picks<IAnythingQuickPickItem>> | null {\n\t\tconst filterSegments = query.original.split(GotoSymbolQuickAccessProvider.PREFIX);\n\t\tconst filter = filterSegments.length > 1 ? filterSegments[filterSegments.length - 1].trim() : undefined;\n\t\tif (typeof filter !== 'string') {\n\t\t\treturn null; // we need to be searched for editor symbols via `@`\n\t\t}\n\n\t\tconst activeGlobalPick = this.pickState.lastGlobalPicks?.active;\n\t\tif (!activeGlobalPick) {\n\t\t\treturn null; // we need an active global pick to find symbols for\n\t\t}\n\n\t\tconst activeGlobalResource = activeGlobalPick.resource;\n\t\tif (!activeGlobalResource || (!this.fileService.canHandleResource(activeGlobalResource) && activeGlobalResource.scheme !== Schemas.untitled)) {\n\t\t\treturn null; // we need a resource that we can resolve\n\t\t}\n\n\t\tif (activeGlobalPick.label.includes(GotoSymbolQuickAccessProvider.PREFIX) || activeGlobalPick.description?.includes(GotoSymbolQuickAccessProvider.PREFIX)) {\n\t\t\tif (filterSegments.length < 3) {\n\t\t\t\treturn null; // require at least 2 `@` if our active pick contains `@` in label or description\n\t\t\t}\n\t\t}\n\n\t\treturn this.doGetEditorSymbolPicks(activeGlobalPick, activeGlobalResource, filter, disposables, token);\n\t}\n\n\tprivate async doGetEditorSymbolPicks(activeGlobalPick: IAnythingQuickPickItem, activeGlobalResource: URI, filter: string, disposables: DisposableStore, token: CancellationToken): Promise<Picks<IAnythingQuickPickItem>> {\n\n\t\t// Bring the editor to front to review symbols to go to\n\t\ttry {\n\n\t\t\t// we must remember our curret view state to be able to restore\n\t\t\tthis.pickState.rememberEditorViewState();\n\n\t\t\t// open it\n\t\t\tawait this.editorService.openEditor({\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\toptions: { preserveFocus: true, revealIfOpened: true, ignoreError: true }\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn []; // return if resource cannot be opened\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Obtain model from resource\n\t\tlet model = this.modelService.getModel(activeGlobalResource);\n\t\tif (!model) {\n\t\t\ttry {\n\t\t\t\tconst modelReference = disposables.add(await this.textModelService.createModelReference(activeGlobalResource));\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tmodel = modelReference.object.textEditorModel;\n\t\t\t} catch (error) {\n\t\t\t\treturn []; // return if model cannot be resolved\n\t\t\t}\n\t\t}\n\n\t\t// Ask provider for editor symbols\n\t\tconst editorSymbolPicks = (await this.editorSymbolsQuickAccess.getSymbolPicks(model, filter, { extraContainerLabel: stripIcons(activeGlobalPick.label) }, disposables, token));\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn editorSymbolPicks.map(editorSymbolPick => {\n\n\t\t\t// Preserve separators\n\t\t\tif (editorSymbolPick.type === 'separator') {\n\t\t\t\treturn editorSymbolPick;\n\t\t\t}\n\n\t\t\t// Convert editor symbols to anything pick\n\t\t\treturn {\n\t\t\t\t...editorSymbolPick,\n\t\t\t\tresource: activeGlobalResource,\n\t\t\t\tdescription: editorSymbolPick.description,\n\t\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\t\tthis.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, forceOpenSideBySide: true });\n\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t},\n\t\t\t\taccept: (keyMods, event) => this.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n\t\t\t};\n\t\t});\n\t}\n\n\taddDecorations(editor: IEditor, range: IRange): void {\n\t\tthis.editorSymbolsQuickAccess.addDecorations(editor, range);\n\t}\n\n\tclearDecorations(editor: IEditor): void {\n\t\tthis.editorSymbolsQuickAccess.clearDecorations(editor);\n\t}\n\n\t//#endregion\n\n\n\t//#region Helpers\n\n\tprivate createAnythingPick(resourceOrEditor: URI | IEditorInput | IResourceEditorInput, configuration: { shortAutoSaveDelay: boolean, openSideBySideDirection: 'right' | 'down' | undefined }): IAnythingQuickPickItem {\n\t\tconst isEditorHistoryEntry = !URI.isUri(resourceOrEditor);\n\n\t\tlet resource: URI | undefined;\n\t\tlet label: string;\n\t\tlet description: string | undefined = undefined;\n\t\tlet isDirty: boolean | undefined = undefined;\n\n\t\tif (resourceOrEditor instanceof EditorInput) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(resourceOrEditor);\n\t\t\tlabel = resourceOrEditor.getName();\n\t\t\tdescription = resourceOrEditor.getDescription();\n\t\t\tisDirty = resourceOrEditor.isDirty() && !resourceOrEditor.isSaving();\n\t\t} else {\n\t\t\tresource = URI.isUri(resourceOrEditor) ? resourceOrEditor : (resourceOrEditor as IResourceEditorInput).resource;\n\t\t\tlabel = basenameOrAuthority(resource);\n\t\t\tdescription = this.labelService.getUriLabel(dirname(resource), { relative: true });\n\t\t\tisDirty = this.workingCopyService.isDirty(resource) && !configuration.shortAutoSaveDelay;\n\t\t}\n\n\t\tconst labelAndDescription = description ? `${label} ${description}` : label;\n\t\treturn {\n\t\t\tresource,\n\t\t\tlabel,\n\t\t\tariaLabel: isDirty ? localize('filePickAriaLabelDirty', \"{0} dirty\", labelAndDescription) : labelAndDescription,\n\t\t\tdescription,\n\t\t\ticonClasses: getIconClasses(this.modelService, this.modeService, resource),\n\t\t\tbuttons: (() => {\n\t\t\t\tconst openSideBySideDirection = configuration.openSideBySideDirection;\n\t\t\t\tconst buttons: IQuickInputButton[] = [];\n\n\t\t\t\t// Open to side / below\n\t\t\t\tbuttons.push({\n\t\t\t\t\ticonClass: openSideBySideDirection === 'right' ? Codicon.splitHorizontal.classNames : Codicon.splitVertical.classNames,\n\t\t\t\t\ttooltip: openSideBySideDirection === 'right' ?\n\t\t\t\t\t\tlocalize({ key: 'openToSide', comment: ['Open this file in a split editor on the left/right side'] }, \"Open to the Side\") :\n\t\t\t\t\t\tlocalize({ key: 'openToBottom', comment: ['Open this file in a split editor on the bottom'] }, \"Open to the Bottom\")\n\t\t\t\t});\n\n\t\t\t\t// Remove from History\n\t\t\t\tif (isEditorHistoryEntry) {\n\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\ticonClass: isDirty ? ('dirty-anything ' + Codicon.circleFilled.classNames) : Codicon.close.classNames,\n\t\t\t\t\t\ttooltip: localize('closeEditor', \"Remove from Recently Opened\"),\n\t\t\t\t\t\talwaysVisible: isDirty\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn buttons;\n\t\t\t})(),\n\t\t\ttrigger: (buttonIndex, keyMods) => {\n\t\t\t\tswitch (buttonIndex) {\n\n\t\t\t\t\t// Open to side / below\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tthis.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, forceOpenSideBySide: true });\n\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\n\t\t\t\t\t// Remove from History\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (!URI.isUri(resourceOrEditor)) {\n\t\t\t\t\t\t\tthis.historyService.removeFromHistory(resourceOrEditor);\n\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t},\n\t\t\taccept: (keyMods, event) => this.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n\t\t};\n\t}\n\n\tprivate async openAnything(resourceOrEditor: URI | IEditorInput | IResourceEditorInput, options: { keyMods?: IKeyMods, preserveFocus?: boolean, range?: IRange, forceOpenSideBySide?: boolean, forcePinned?: boolean }): Promise<void> {\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.keyMods?.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n\t\t\tselection: options.range ? Range.collapseToStart(options.range) : undefined\n\t\t};\n\n\t\tconst targetGroup = options.keyMods?.alt || (this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) || options.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP;\n\n\t\t// Restore any view state if the target is the side group\n\t\tif (targetGroup === SIDE_GROUP) {\n\t\t\tawait this.pickState.restoreEditorViewState();\n\t\t}\n\n\t\t// Open editor\n\t\tif (resourceOrEditor instanceof EditorInput) {\n\t\t\tawait this.editorService.openEditor(resourceOrEditor, editorOptions);\n\t\t} else {\n\t\t\tawait this.editorService.openEditor({\n\t\t\t\tresource: URI.isUri(resourceOrEditor) ? resourceOrEditor : resourceOrEditor.resource,\n\t\t\t\toptions: editorOptions\n\t\t\t}, targetGroup);\n\t\t}\n\n\t}\n\n\t//#endregion\n}\n"]}