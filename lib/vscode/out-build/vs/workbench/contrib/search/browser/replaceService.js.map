{"version":3,"sources":["vs/workbench/contrib/search/browser/replaceService.ts"],"names":[],"mappings":"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","file":"replaceService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport * as network from 'vs/base/common/network';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IReplaceService } from 'vs/workbench/contrib/search/common/replace';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { Match, FileMatch, FileMatchOrMatch, ISearchWorkbenchService } from 'vs/workbench/contrib/search/common/searchModel';\nimport { IProgress, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { ITextModelService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel, IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { createTextBufferFactoryFromSnapshot } from 'vs/editor/common/model/textModel';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IBulkEditService, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { dirname } from 'vs/base/common/resources';\nimport { Promises } from 'vs/base/common/async';\n\nconst REPLACE_PREVIEW = 'replacePreview';\n\nconst toReplaceResource = (fileResource: URI): URI => {\n\treturn fileResource.with({ scheme: network.Schemas.internal, fragment: REPLACE_PREVIEW, query: JSON.stringify({ scheme: fileResource.scheme }) });\n};\n\nconst toFileResource = (replaceResource: URI): URI => {\n\treturn replaceResource.with({ scheme: JSON.parse(replaceResource.query)['scheme'], fragment: '', query: '' });\n};\n\nexport class ReplacePreviewContentProvider implements ITextModelContentProvider, IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(network.Schemas.internal, this);\n\t}\n\n\tprovideTextContent(uri: URI): Promise<ITextModel> | null {\n\t\tif (uri.fragment === REPLACE_PREVIEW) {\n\t\t\treturn this.instantiationService.createInstance(ReplacePreviewModel).resolve(uri);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ReplacePreviewModel extends Disposable {\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ISearchWorkbenchService private readonly searchWorkbenchService: ISearchWorkbenchService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync resolve(replacePreviewUri: URI): Promise<ITextModel> {\n\t\tconst fileResource = toFileResource(replacePreviewUri);\n\t\tconst fileMatch = <FileMatch>this.searchWorkbenchService.searchModel.searchResult.matches().filter(match => match.resource.toString() === fileResource.toString())[0];\n\t\tconst ref = this._register(await this.textModelResolverService.createModelReference(fileResource));\n\t\tconst sourceModel = ref.object.textEditorModel;\n\t\tconst sourceModelModeId = sourceModel.getLanguageIdentifier().language;\n\t\tconst replacePreviewModel = this.modelService.createModel(createTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()), this.modeService.create(sourceModelModeId), replacePreviewUri);\n\t\tthis._register(fileMatch.onChange(({ forceUpdateModel }) => this.update(sourceModel, replacePreviewModel, fileMatch, forceUpdateModel)));\n\t\tthis._register(this.searchWorkbenchService.searchModel.onReplaceTermChanged(() => this.update(sourceModel, replacePreviewModel, fileMatch)));\n\t\tthis._register(fileMatch.onDispose(() => replacePreviewModel.dispose())); // TODO@Sandeep we should not dispose a model directly but rather the reference (depends on https://github.com/microsoft/vscode/issues/17073)\n\t\tthis._register(replacePreviewModel.onWillDispose(() => this.dispose()));\n\t\tthis._register(sourceModel.onWillDispose(() => this.dispose()));\n\t\treturn replacePreviewModel;\n\t}\n\n\tprivate update(sourceModel: ITextModel, replacePreviewModel: ITextModel, fileMatch: FileMatch, override: boolean = false): void {\n\t\tif (!sourceModel.isDisposed() && !replacePreviewModel.isDisposed()) {\n\t\t\tthis.replaceService.updateReplacePreview(fileMatch, override);\n\t\t}\n\t}\n}\n\nexport class ReplaceService implements IReplaceService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IBulkEditService private readonly bulkEditorService: IBulkEditService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) { }\n\n\treplace(match: Match): Promise<any>;\n\treplace(files: FileMatch[], progress?: IProgress<IProgressStep>): Promise<any>;\n\treplace(match: FileMatchOrMatch, progress?: IProgress<IProgressStep>, resource?: URI): Promise<any>;\n\tasync replace(arg: any, progress: IProgress<IProgressStep> | undefined = undefined, resource: URI | null = null): Promise<any> {\n\t\tconst edits = this.createEdits(arg, resource);\n\t\tawait this.bulkEditorService.apply(edits, { progress });\n\n\t\treturn Promises.settled(edits.map(async e => this.textFileService.files.get(e.resource)?.save()));\n\t}\n\n\tasync openReplacePreview(element: FileMatchOrMatch, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<any> {\n\t\tconst fileMatch = element instanceof Match ? element.parent() : element;\n\n\t\tconst editor = await this.editorService.openEditor({\n\t\t\tleftResource: fileMatch.resource,\n\t\t\trightResource: toReplaceResource(fileMatch.resource),\n\t\t\tlabel: nls.localize('fileReplaceChanges', \"{0} ↔ {1} (Replace Preview)\", fileMatch.name(), fileMatch.name()),\n\t\t\tdescription: this.labelService.getUriLabel(dirname(fileMatch.resource), { relative: true }),\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tpinned,\n\t\t\t\trevealIfVisible: true\n\t\t\t}\n\t\t});\n\t\tconst input = editor?.input;\n\t\tconst disposable = fileMatch.onDispose(() => {\n\t\t\tif (input) {\n\t\t\t\tinput.dispose();\n\t\t\t}\n\t\t\tdisposable.dispose();\n\t\t});\n\t\tawait this.updateReplacePreview(fileMatch);\n\t\tif (editor) {\n\t\t\tconst editorControl = editor.getControl();\n\t\t\tif (element instanceof Match && editorControl) {\n\t\t\t\teditorControl.revealLineInCenter(element.range().startLineNumber, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync updateReplacePreview(fileMatch: FileMatch, override: boolean = false): Promise<void> {\n\t\tconst replacePreviewUri = toReplaceResource(fileMatch.resource);\n\t\tconst [sourceModelRef, replaceModelRef] = await Promise.all([this.textModelResolverService.createModelReference(fileMatch.resource), this.textModelResolverService.createModelReference(replacePreviewUri)]);\n\t\tconst sourceModel = sourceModelRef.object.textEditorModel;\n\t\tconst replaceModel = replaceModelRef.object.textEditorModel;\n\t\t// If model is disposed do not update\n\t\ttry {\n\t\t\tif (sourceModel && replaceModel) {\n\t\t\t\tif (override) {\n\t\t\t\t\treplaceModel.setValue(sourceModel.getValue());\n\t\t\t\t} else {\n\t\t\t\t\treplaceModel.undo();\n\t\t\t\t}\n\t\t\t\tthis.applyEditsToPreview(fileMatch, replaceModel);\n\t\t\t}\n\t\t} finally {\n\t\t\tsourceModelRef.dispose();\n\t\t\treplaceModelRef.dispose();\n\t\t}\n\t}\n\n\tprivate applyEditsToPreview(fileMatch: FileMatch, replaceModel: ITextModel): void {\n\t\tconst resourceEdits = this.createEdits(fileMatch, replaceModel.uri);\n\t\tconst modelEdits: IIdentifiedSingleEditOperation[] = [];\n\t\tfor (const resourceEdit of resourceEdits) {\n\t\t\tmodelEdits.push(EditOperation.replaceMove(\n\t\t\t\tRange.lift(resourceEdit.textEdit.range),\n\t\t\t\tresourceEdit.textEdit.text)\n\t\t\t);\n\t\t}\n\t\treplaceModel.pushEditOperations([], modelEdits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range)), () => []);\n\t}\n\n\tprivate createEdits(arg: FileMatchOrMatch | FileMatch[], resource: URI | null = null): ResourceTextEdit[] {\n\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\tif (arg instanceof Match) {\n\t\t\tconst match = <Match>arg;\n\t\t\tedits.push(this.createEdit(match, match.replaceString, resource));\n\t\t}\n\n\t\tif (arg instanceof FileMatch) {\n\t\t\targ = [arg];\n\t\t}\n\n\t\tif (arg instanceof Array) {\n\t\t\targ.forEach(element => {\n\t\t\t\tconst fileMatch = <FileMatch>element;\n\t\t\t\tif (fileMatch.count() > 0) {\n\t\t\t\t\tedits.push(...fileMatch.matches().map(match => this.createEdit(match, match.replaceString, resource)));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn edits;\n\t}\n\n\tprivate createEdit(match: Match, text: string, resource: URI | null = null): ResourceTextEdit {\n\t\tconst fileMatch: FileMatch = match.parent();\n\t\treturn new ResourceTextEdit(\n\t\t\tresource ?? fileMatch.resource,\n\t\t\t{ range: match.range(), text }, undefined, undefined\n\t\t);\n\t}\n}\n"]}