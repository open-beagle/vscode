{"version":3,"file":"searchModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/search/test/common/searchModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { DeferredPromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ModelServiceImpl } from 'vs/editor/common/services/modelServiceImpl';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IFileMatch, IFileSearchStats, IFolderQuery, ISearchComplete, ISearchProgressItem, ISearchQuery, ISearchService, ITextSearchMatch, OneLineRange, TextSearchMatch } from 'vs/workbench/services/search/common/search';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { SearchModel } from 'vs/workbench/contrib/search/common/searchModel';\nimport * as process from 'vs/base/common/process';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentityService';\n\nconst nullEvent = new class {\n\tid: number = -1;\n\ttopic!: string;\n\tname!: string;\n\tdescription!: string;\n\tdata: any;\n\n\tstartTime!: Date;\n\tstopTime!: Date;\n\n\tstop(): void {\n\t\treturn;\n\t}\n\n\ttimeTaken(): number {\n\t\treturn -1;\n\t}\n};\n\nconst lineOneRange = new OneLineRange(1, 0, 1);\n\nsuite('SearchModel', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet restoreStubs: sinon.SinonStub[];\n\n\tconst testSearchStats: IFileSearchStats = {\n\t\tfromCache: false,\n\t\tresultCount: 1,\n\t\ttype: 'searchProcess',\n\t\tdetailStats: {\n\t\t\tfileWalkTime: 0,\n\t\t\tcmdTime: 0,\n\t\t\tcmdResultCount: 0,\n\t\t\tdirectoriesWalked: 2,\n\t\t\tfilesWalked: 3\n\t\t}\n\t};\n\n\tconst folderQueries: IFolderQuery[] = [\n\t\t{ folder: URI.parse('file://c:/') }\n\t];\n\n\tsetup(() => {\n\t\trestoreStubs = [];\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\tinstantiationService.stub(ISearchService, {});\n\t\tinstantiationService.stub(ISearchService, 'textSearch', Promise.resolve({ results: [] }));\n\t\tinstantiationService.stub(IUriIdentityService, new UriIdentityService(new FileService(new NullLogService())));\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('search', { searchOnType: true });\n\t\tinstantiationService.stub(IConfigurationService, config);\n\t});\n\n\tteardown(() => {\n\t\trestoreStubs.forEach(element => {\n\t\t\telement.restore();\n\t\t});\n\t});\n\n\tfunction searchServiceWithResults(results: IFileMatch[], complete: ISearchComplete | null = null): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ISearchQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\tresults.forEach(onProgress!);\n\t\t\t\t\t\tresolve(complete!);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction searchServiceWithError(error: Error): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ISearchQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction canceleableSearchService(tokenSource: CancellationTokenSource): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ISearchQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\t\t\tif (token) {\n\t\t\t\t\ttoken.onCancellationRequested(() => tokenSource.cancel());\n\t\t\t\t}\n\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\tresolve(<any>{});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\ttest('Search Model: Search adds to results', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('file://c:/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('file://c:/2', new TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\tconst actual = testObject.searchResult.matches();\n\n\t\tassert.strictEqual(2, actual.length);\n\t\tassert.strictEqual('file://c:/1', actual[0].resource.toString());\n\n\t\tlet actuaMatches = actual[0].matches();\n\t\tassert.strictEqual(2, actuaMatches.length);\n\t\tassert.strictEqual('preview 1', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 2, 2, 5).equalsRange(actuaMatches[0].range()));\n\t\tassert.strictEqual('preview 1', actuaMatches[1].text());\n\t\tassert.ok(new Range(2, 5, 2, 12).equalsRange(actuaMatches[1].range()));\n\n\t\tactuaMatches = actual[1].matches();\n\t\tassert.strictEqual(1, actuaMatches.length);\n\t\tassert.strictEqual('preview 2', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 1, 2, 2).equalsRange(actuaMatches[0].range()));\n\t});\n\n\ttest('Search Model: Search reports telemetry on search completed', async () => {\n\t\tconst target = instantiationService.spy(ITelemetryService, 'publicLog');\n\t\tconst results = [\n\t\t\taRawMatch('file://c:/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('file://c:/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\tassert.ok(target.calledThrice);\n\t\tconst data = target.args[0];\n\t\tdata[1].duration = -1;\n\t\tassert.deepStrictEqual(['searchResultsFirstRender', { duration: -1 }], data);\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when progress is not called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tstub(nullEvent, 'stop', target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([]));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\treturn result.then(() => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when progress is called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tstub(nullEvent, 'stop', target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(\n\t\t\t[aRawMatch('file://c:/1', new TextSearchMatch('some preview', lineOneRange))],\n\t\t\t{ results: [], stats: testSearchStats, messages: [] }));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\treturn result.then(() => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\t// timeout because promise handlers may run in a different order. We only care that these\n\t\t\t\t// are fired at some point.\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t\t// assert.strictEqual(1, target2.callCount);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when error is called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tstub(nullEvent, 'stop', target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithError(new Error('error')));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\treturn result.then(() => { }, () => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t\t// assert.ok(target2.calledOnce);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when error is cancelled error', () => {\n\t\tconst target2 = sinon.spy();\n\t\tstub(nullEvent, 'stop', target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tconst deferredPromise = new DeferredPromise<ISearchComplete>();\n\t\tinstantiationService.stub(ISearchService, 'textSearch', deferredPromise.p);\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\tdeferredPromise.cancel();\n\n\t\treturn result.then(() => { }, () => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t\t// assert.ok(target2.calledOnce);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search results are cleared during search', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('file://c:/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('file://c:/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results));\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\t\tassert.ok(!testObject.searchResult.isEmpty());\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([]));\n\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\t\tassert.ok(testObject.searchResult.isEmpty());\n\t});\n\n\ttest('Search Model: Previous search is cancelled when new search is called', async () => {\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tinstantiationService.stub(ISearchService, canceleableSearchService(tokenSource));\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([]));\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: 1, folderQueries });\n\n\t\tassert.ok(tokenSource.token.isCancellationRequested);\n\t});\n\n\ttest('getReplaceString returns proper replace string for regExpressions', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('file://c:/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11)))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 're' }, type: 1, folderQueries });\n\t\ttestObject.replaceString = 'hello';\n\t\tlet match = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 're', isRegExp: true }, type: 1, folderQueries });\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 're(?:vi)', isRegExp: true }, type: 1, folderQueries });\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 'r(e)(?:vi)', isRegExp: true }, type: 1, folderQueries });\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 'r(e)(?:vi)', isRegExp: true }, type: 1, folderQueries });\n\t\ttestObject.replaceString = 'hello$1';\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('helloe', match.replaceString);\n\t});\n\n\tfunction aRawMatch(resource: string, ...results: ITextSearchMatch[]): IFileMatch {\n\t\treturn { resource: URI.parse(resource), results };\n\t}\n\n\tfunction stub(arg1: any, arg2: any, arg3: any): sinon.SinonStub {\n\t\tconst stub = sinon.stub(arg1, arg2, arg3);\n\t\trestoreStubs.push(stub);\n\t\treturn stub;\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\treturn instantiationService.createInstance(ModelServiceImpl);\n\t}\n\n});\n"]}