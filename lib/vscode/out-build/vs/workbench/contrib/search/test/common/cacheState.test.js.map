{"version":3,"file":"cacheState.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/search/test/common/cacheState.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as errors from 'vs/base/common/errors';\nimport { QueryType, IFileQuery } from 'vs/workbench/services/search/common/search';\nimport { FileQueryCacheState } from 'vs/workbench/contrib/search/common/cacheState';\nimport { DeferredPromise } from 'vs/base/common/async';\n\nsuite('FileQueryCacheState', () => {\n\n\ttest('reuse old cacheKey until new cache is loaded', async function () {\n\n\t\tconst cache = new MockCache();\n\n\t\tconst first = createCacheState(cache);\n\t\tconst firstKey = first.cacheKey;\n\t\tassert.strictEqual(first.isLoaded, false);\n\t\tassert.strictEqual(first.isUpdating, false);\n\n\t\tfirst.load();\n\t\tassert.strictEqual(first.isLoaded, false);\n\t\tassert.strictEqual(first.isUpdating, true);\n\n\t\tawait cache.loading[firstKey].complete(null);\n\t\tassert.strictEqual(first.isLoaded, true);\n\t\tassert.strictEqual(first.isUpdating, false);\n\n\t\tconst second = createCacheState(cache, first);\n\t\tsecond.load();\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, true);\n\t\tawait cache.awaitDisposal(0);\n\t\tassert.strictEqual(second.cacheKey, firstKey); // still using old cacheKey\n\n\t\tconst secondKey = cache.cacheKeys[1];\n\t\tawait cache.loading[secondKey].complete(null);\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(1);\n\t\tassert.strictEqual(second.cacheKey, secondKey);\n\t});\n\n\ttest('do not spawn additional load if previous is still loading', async function () {\n\n\t\tconst cache = new MockCache();\n\n\t\tconst first = createCacheState(cache);\n\t\tconst firstKey = first.cacheKey;\n\t\tfirst.load();\n\t\tassert.strictEqual(first.isLoaded, false);\n\t\tassert.strictEqual(first.isUpdating, true);\n\t\tassert.strictEqual(Object.keys(cache.loading).length, 1);\n\n\t\tconst second = createCacheState(cache, first);\n\t\tsecond.load();\n\t\tassert.strictEqual(second.isLoaded, false);\n\t\tassert.strictEqual(second.isUpdating, true);\n\t\tassert.strictEqual(cache.cacheKeys.length, 2);\n\t\tassert.strictEqual(Object.keys(cache.loading).length, 1); // still only one loading\n\t\tassert.strictEqual(second.cacheKey, firstKey);\n\n\t\tawait cache.loading[firstKey].complete(null);\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(0);\n\t});\n\n\ttest('do not use previous cacheKey if query changed', async function () {\n\n\t\tconst cache = new MockCache();\n\n\t\tconst first = createCacheState(cache);\n\t\tconst firstKey = first.cacheKey;\n\t\tfirst.load();\n\t\tawait cache.loading[firstKey].complete(null);\n\t\tassert.strictEqual(first.isLoaded, true);\n\t\tassert.strictEqual(first.isUpdating, false);\n\t\tawait cache.awaitDisposal(0);\n\n\t\tcache.baseQuery.excludePattern = { '**/node_modules': true };\n\t\tconst second = createCacheState(cache, first);\n\t\tassert.strictEqual(second.isLoaded, false);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(1);\n\n\t\tsecond.load();\n\t\tassert.strictEqual(second.isLoaded, false);\n\t\tassert.strictEqual(second.isUpdating, true);\n\t\tassert.notStrictEqual(second.cacheKey, firstKey); // not using old cacheKey\n\t\tconst secondKey = cache.cacheKeys[1];\n\t\tassert.strictEqual(second.cacheKey, secondKey);\n\n\t\tawait cache.loading[secondKey].complete(null);\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(1);\n\t});\n\n\ttest('dispose propagates', async function () {\n\n\t\tconst cache = new MockCache();\n\n\t\tconst first = createCacheState(cache);\n\t\tconst firstKey = first.cacheKey;\n\t\tfirst.load();\n\t\tawait cache.loading[firstKey].complete(null);\n\t\tconst second = createCacheState(cache, first);\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(0);\n\n\t\tsecond.dispose();\n\t\tassert.strictEqual(second.isLoaded, false);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tawait cache.awaitDisposal(1);\n\t\tassert.ok(cache.disposing[firstKey]);\n\t});\n\n\ttest('keep using old cacheKey when loading fails', async function () {\n\n\t\tconst cache = new MockCache();\n\n\t\tconst first = createCacheState(cache);\n\t\tconst firstKey = first.cacheKey;\n\t\tfirst.load();\n\t\tawait cache.loading[firstKey].complete(null);\n\n\t\tconst second = createCacheState(cache, first);\n\t\tsecond.load();\n\t\tconst secondKey = cache.cacheKeys[1];\n\t\tconst origErrorHandler = errors.errorHandler.getUnexpectedErrorHandler();\n\t\ttry {\n\t\t\terrors.setUnexpectedErrorHandler(() => null);\n\t\t\tawait cache.loading[secondKey].error('loading failed');\n\t\t} finally {\n\t\t\terrors.setUnexpectedErrorHandler(origErrorHandler);\n\t\t}\n\t\tassert.strictEqual(second.isLoaded, true);\n\t\tassert.strictEqual(second.isUpdating, false);\n\t\tassert.strictEqual(Object.keys(cache.loading).length, 2);\n\t\tawait cache.awaitDisposal(0);\n\t\tassert.strictEqual(second.cacheKey, firstKey); // keep using old cacheKey\n\n\t\tconst third = createCacheState(cache, second);\n\t\tthird.load();\n\t\tassert.strictEqual(third.isLoaded, true);\n\t\tassert.strictEqual(third.isUpdating, true);\n\t\tassert.strictEqual(Object.keys(cache.loading).length, 3);\n\t\tawait cache.awaitDisposal(0);\n\t\tassert.strictEqual(third.cacheKey, firstKey);\n\n\t\tconst thirdKey = cache.cacheKeys[2];\n\t\tawait cache.loading[thirdKey].complete(null);\n\t\tassert.strictEqual(third.isLoaded, true);\n\t\tassert.strictEqual(third.isUpdating, false);\n\t\tassert.strictEqual(Object.keys(cache.loading).length, 3);\n\t\tawait cache.awaitDisposal(2);\n\t\tassert.strictEqual(third.cacheKey, thirdKey); // recover with next successful load\n\t});\n\n\tfunction createCacheState(cache: MockCache, previous?: FileQueryCacheState): FileQueryCacheState {\n\t\treturn new FileQueryCacheState(\n\t\t\tcacheKey => cache.query(cacheKey),\n\t\t\tquery => cache.load(query),\n\t\t\tcacheKey => cache.dispose(cacheKey),\n\t\t\tprevious!\n\t\t);\n\t}\n\n\tclass MockCache {\n\n\t\tpublic cacheKeys: string[] = [];\n\t\tpublic loading: { [cacheKey: string]: DeferredPromise<any> } = {};\n\t\tpublic disposing: { [cacheKey: string]: DeferredPromise<void> } = {};\n\n\t\tprivate _awaitDisposal: (() => void)[][] = [];\n\n\t\tpublic baseQuery: IFileQuery = {\n\t\t\ttype: QueryType.File,\n\t\t\tfolderQueries: []\n\t\t};\n\n\t\tpublic query(cacheKey: string): IFileQuery {\n\t\t\tthis.cacheKeys.push(cacheKey);\n\t\t\treturn Object.assign({ cacheKey: cacheKey }, this.baseQuery);\n\t\t}\n\n\t\tpublic load(query: IFileQuery): Promise<any> {\n\t\t\tconst promise = new DeferredPromise<any>();\n\t\t\tthis.loading[query.cacheKey!] = promise;\n\t\t\treturn promise.p;\n\t\t}\n\n\t\tpublic dispose(cacheKey: string): Promise<void> {\n\t\t\tconst promise = new DeferredPromise<void>();\n\t\t\tthis.disposing[cacheKey] = promise;\n\t\t\tconst n = Object.keys(this.disposing).length;\n\t\t\tfor (const done of this._awaitDisposal[n] || []) {\n\t\t\t\tdone();\n\t\t\t}\n\t\t\tdelete this._awaitDisposal[n];\n\t\t\treturn promise.p;\n\t\t}\n\n\t\tpublic awaitDisposal(n: number) {\n\t\t\treturn new Promise<void>(resolve => {\n\t\t\t\tif (n === Object.keys(this.disposing).length) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\t(this._awaitDisposal[n] || (this._awaitDisposal[n] = [])).push(resolve);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n"]}