{"version":3,"sources":["vs/workbench/contrib/codeActions/common/documentationExtensionPoint.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,IAAY,iCAIX;IAJD,WAAY,iCAAiC;QAC5C,kDAAa,CAAA;QACb,oDAAe,CAAA;QACf,wDAAmB,CAAA;IACpB,CAAC,EAJW,iCAAiC,GAAjC,yCAAiC,KAAjC,yCAAiC,QAI5C;IAYD,MAAM,iCAAiC,GAAG,MAAM,CAAC,MAAM,CAA+B;QACrF,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAA4B,CAAC;QACpF,UAAU,EAAE;YACX,aAAa,EAAE;gBACd,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwC,EAAE,IAA6C,CAAC;gBAClH,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuC,EAAE,IAA4C,CAAC;oBAChH,QAAQ,EAAE;wBACT,iCAAiC,CAAC,KAAK;wBACvC,iCAAiC,CAAC,IAAI;wBACtC,iCAAiC,CAAC,OAAO;qBACzC;oBACD,UAAU,EAAE;wBACX,CAAC,iCAAiC,CAAC,KAAK,CAAC,EAAE;4BAC1C,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA6C,EAAE,IAA6C,CAAC;yBACvH;wBACD,CAAC,iCAAiC,CAAC,IAAI,CAAC,EAAE;4BACzC,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA4C,EAAE,IAAc,CAAC;yBACvF;wBACD,CAAC,iCAAiC,CAAC,OAAO,CAAC,EAAE;4BAC5C,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+C,EAAE,IAAmB,CAAC;yBAC/F;qBACD;iBACD;aACD;SACD;KACD,CAAC,CAAC;IAEU,QAAA,qCAAqC,GAAG;QACpD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE,CAAC,wCAAiB,CAAC;QACzB,UAAU,EAAE,iCAAiC;KAC7C,CAAC","file":"documentationExtensionPoint.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { languagesExtPoint } from 'vs/workbench/services/mode/common/workbenchModeService';\n\nexport enum DocumentationExtensionPointFields {\n\twhen = 'when',\n\ttitle = 'title',\n\tcommand = 'command',\n}\n\nexport interface RefactoringDocumentationExtensionPoint {\n\treadonly [DocumentationExtensionPointFields.title]: string;\n\treadonly [DocumentationExtensionPointFields.when]: string;\n\treadonly [DocumentationExtensionPointFields.command]: string;\n}\n\nexport interface DocumentationExtensionPoint {\n\treadonly refactoring?: readonly RefactoringDocumentationExtensionPoint[];\n}\n\nconst documentationExtensionPointSchema = Object.freeze<IConfigurationPropertySchema>({\n\ttype: 'object',\n\tdescription: nls.localize('contributes.documentation', \"Contributed documentation.\"),\n\tproperties: {\n\t\t'refactoring': {\n\t\t\ttype: 'array',\n\t\t\tdescription: nls.localize('contributes.documentation.refactorings', \"Contributed documentation for refactorings.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('contributes.documentation.refactoring', \"Contributed documentation for refactoring.\"),\n\t\t\t\trequired: [\n\t\t\t\t\tDocumentationExtensionPointFields.title,\n\t\t\t\t\tDocumentationExtensionPointFields.when,\n\t\t\t\t\tDocumentationExtensionPointFields.command\n\t\t\t\t],\n\t\t\t\tproperties: {\n\t\t\t\t\t[DocumentationExtensionPointFields.title]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('contributes.documentation.refactoring.title', \"Label for the documentation used in the UI.\"),\n\t\t\t\t\t},\n\t\t\t\t\t[DocumentationExtensionPointFields.when]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('contributes.documentation.refactoring.when', \"When clause.\"),\n\t\t\t\t\t},\n\t\t\t\t\t[DocumentationExtensionPointFields.command]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('contributes.documentation.refactoring.command', \"Command executed.\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport const documentationExtensionPointDescriptor = {\n\textensionPoint: 'documentation',\n\tdeps: [languagesExtPoint],\n\tjsonSchema: documentationExtensionPointSchema\n};\n"]}