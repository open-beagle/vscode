{"version":3,"sources":["vs/workbench/contrib/preferences/browser/tocTree.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAsBhG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAEhB,IAAa,YAAY,GAAzB,MAAa,YAAY;QAKxB,YACS,UAAoC,EACN,kBAAgD;YAD9E,eAAU,GAAV,UAAU,CAA0B;YACN,uBAAkB,GAAlB,kBAAkB,CAA8B;YAL/E,wBAAmB,GAA6B,IAAI,CAAC;QAO7D,CAAC;QAED,IAAI,gBAAgB;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;QAED,IAAI,gBAAgB,CAAC,KAA+B;YACnD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QAED,IAAI,kBAAkB;YACrB,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACjC,CAAC;QAED,IAAI,kBAAkB,CAAC,KAA+B;YACrD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QAED,IAAI,QAAQ;YACX,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QACxC,CAAC;QAED,MAAM;YACL,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC9C;QACF,CAAC;QAEO,gBAAgB,CAAC,KAA+B;YACvD,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC9B,IAAI,KAAK,YAAY,6CAAwB,EAAE;oBAC9C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ;iBAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6CAAwB,CAAC;iBAC1D,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAA8B,GAAI,CAAC,KAAM,EAAE,CAAC,CAAC,CAAC;YAExE,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC;QAEO,aAAa,CAAC,KAA+B;YACpD,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,CAAC,KAAK,YAAY,+CAA0B,CAAC,EAAE;oBACnD,OAAO,KAAK,CAAC;iBACb;gBAED,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAClG,OAAO,KAAK,CAAC;iBACb;gBAED,6FAA6F;gBAC7F,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;gBAC3D,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,QAAQ,CAAC;oBAClE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBAChD,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;oBACvD,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;oBAC3D,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,MAAM,CAAC;QACX,CAAC;KACD,CAAA;IAxEY,YAAY;QAOtB,WAAA,iDAA4B,CAAA;OAPlB,YAAY,CAwExB;IAxEY,oCAAY;IA0EzB,MAAM,qBAAqB,GAAG,oBAAoB,CAAC;IAOnD,MAAa,WAAW;QAAxB;YAEC,eAAU,GAAG,qBAAqB,CAAC;QA0BpC,CAAC;QAxBA,cAAc,CAAC,SAAsB;YACpC,OAAO;gBACN,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC;gBAC7D,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC;aAC7D,CAAC;QACH,CAAC;QAED,aAAa,CAAC,IAAyC,EAAE,KAAa,EAAE,QAA2B;YAClG,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC5B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAE5B,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;YAC1C,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;YAEpC,IAAI,KAAK,EAAE;gBACV,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,KAAK,GAAG,CAAC;aAClD;iBAAM;gBACN,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;aACvC;QACF,CAAC;QAED,eAAe,CAAC,YAA+B;QAC/C,CAAC;KACD;IA5BD,kCA4BC;IAED,MAAM,eAAe;QACpB,aAAa,CAAC,OAA4B;YACzC,OAAO,qBAAqB,CAAC;QAC9B,CAAC;QAED,SAAS,CAAC,OAA4B;YACrC,OAAO,EAAE,CAAC;QACX,CAAC;KACD;IAED,SAAgB,iBAAiB,CAAC,KAA8C,EAAE,IAAa;QAC9F,MAAM,aAAa,GAA+B,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,6CAAwB,CAAC,CAAC;QAEpH,OAAO,mBAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE;YACtC,MAAM,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,6CAAwB,CAAC,CAAC;YAErF,OAAO;gBACN,OAAO,EAAE,CAAC;gBACV,SAAS,EAAE,SAAS;gBACpB,WAAW,EAAE,gBAAgB;gBAC7B,QAAQ,EAAE,CAAC,YAAY,6CAAwB,CAAC,CAAC;oBAChD,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;oBAC5B,SAAS;aACV,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAfD,8CAeC;IAED,MAAM,6BAA6B;QAClC,kBAAkB;YACjB,OAAO,CAAA,GAAA,cAAQ,CAAA,CAAC;gBACf,GAAG,EAAE,aAAa;gBAClB,OAAO,EAAE,CAAC,8DAA8D,CAAC;wCACzE,EACA,IAA4B,CAAC,CAAC;QAChC,CAAC;QAED,YAAY,CAAC,OAA4B;YACxC,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,EAAE,CAAC;aACV;YAED,IAAI,OAAO,YAAY,6CAAwB,EAAE;gBAChD,OAAO,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAmB,EAAE,IAAY,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;aAClE;YAED,OAAO,EAAE,CAAC;QACX,CAAC;QAED,YAAY,CAAC,OAAiC;YAC7C,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,OAAO,YAAY,6CAAwB,IAAI,OAAO,CAAC,MAAM,EAAE;gBACrE,CAAC,EAAE,CAAC;gBACJ,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;aACzB;YAED,OAAO,CAAC,CAAC;QACV,CAAC;KACD;IAED,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,iCAA6C;QACzE,YACC,SAAsB,EACtB,SAAmC,EACf,iBAAqC,EAC3C,WAAyB,EACxB,YAA2B,EACnB,oBAA2C,EAC9C,iBAAqC,EAClC,oBAA2C,EAC3C,oBAA2C;YAElE,iBAAiB;YAEjB,MAAM,MAAM,GAAG,oBAAoB,CAAC,cAAc,CAAC,iCAAkB,EAAE,SAAS,CAAC,CAAC;YAClF,MAAM,OAAO,GAAgE;gBAC5E,MAAM;gBACN,wBAAwB,EAAE,KAAK;gBAC/B,gBAAgB,EAAE;oBACjB,KAAK,CAAC,CAAC;wBACN,OAAO,CAAC,CAAC,EAAE,CAAC;oBACb,CAAC;iBACD;gBACD,eAAe,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,mCAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;gBACtF,qBAAqB,EAAE,oBAAoB,CAAC,cAAc,CAAC,6BAA6B,CAAC;gBACzF,iBAAiB,EAAE,IAAI;gBACvB,mBAAmB,EAAE,KAAK;gBAC1B,+BAA+B,EAAE,IAAI;aACrC,CAAC;YAEF,KAAK,CACJ,aAAa,EACb,SAAS,EACT,IAAI,eAAe,EAAE,EACrB,CAAC,IAAI,WAAW,EAAE,CAAC,EACnB,OAAO,EACP,iBAAiB,EACjB,WAAW,EACX,YAAY,EACZ,oBAAoB,EACpB,iBAAiB,EACjB,oBAAoB,CACpB,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA,GAAA,qBAAY,CAAA,CAAC,YAAY,EAAE;gBAC/C,cAAc,EAAE,gCAAgB;gBAChC,gBAAgB,EAAE,2BAAW;gBAC7B,6BAA6B,EAAE,gCAAgB;gBAC/C,6BAA6B,EAAE,0CAAwB;gBACvD,+BAA+B,EAAE,gCAAgB;gBACjD,+BAA+B,EAAE,0CAAwB;gBACzD,mBAAmB,EAAE,gCAAgB;gBACrC,mBAAmB,EAAE,CAAA,GAAA,2BAAW,CAAA,CAAC,0BAAU,EAAE,GAAG,CAAC;gBACjD,mBAAmB,EAAE,CAAA,GAAA,2BAAW,CAAA,CAAC,0BAAU,EAAE,GAAG,CAAC;gBACjD,mBAAmB,EAAE,gCAAgB;gBACrC,+BAA+B,EAAE,gCAAgB;gBACjD,+BAA+B,EAAE,0CAAwB;gBACzD,2BAA2B,EAAE,gCAAgB;gBAC7C,wBAAwB,EAAE,gCAAgB;aAC1C,EAAE,MAAM,CAAC,EAAE;gBACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAA;IA/DY,OAAO;QAIjB,WAAA,+BAAkB,CAAA;QAClB,WAAA,0BAAY,CAAA;QACZ,WAAA,4BAAa,CAAA;QACb,WAAA,qCAAqB,CAAA;QACrB,WAAA,+BAAkB,CAAA;QAClB,WAAA,qCAAqB,CAAA;QACrB,WAAA,qCAAqB,CAAA;OAVX,OAAO,CA+DnB;IA/DY,0BAAO","file":"tocTree.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { DefaultStyleController, IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { ITreeElement, ITreeNode, ITreeRenderer } from 'vs/base/browser/ui/tree/tree';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { localize } from 'vs/nls';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IListService, IWorkbenchObjectTreeOptions, WorkbenchObjectTree } from 'vs/platform/list/browser/listService';\nimport { editorBackground, focusBorder, foreground, transparent } from 'vs/platform/theme/common/colorRegistry';\nimport { attachStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { SettingsTreeFilter } from 'vs/workbench/contrib/preferences/browser/settingsTree';\nimport { ISettingsEditorViewState, SearchResultModel, SettingsTreeElement, SettingsTreeGroupElement, SettingsTreeSettingElement } from 'vs/workbench/contrib/preferences/browser/settingsTreeModels';\nimport { settingsHeaderForeground } from 'vs/workbench/contrib/preferences/browser/settingsWidgets';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\nconst $ = DOM.$;\n\nexport class TOCTreeModel {\n\n\tprivate _currentSearchModel: SearchResultModel | null = null;\n\tprivate _settingsTreeRoot!: SettingsTreeGroupElement;\n\n\tconstructor(\n\t\tprivate _viewState: ISettingsEditorViewState,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService\n\t) {\n\t}\n\n\tget settingsTreeRoot(): SettingsTreeGroupElement {\n\t\treturn this._settingsTreeRoot;\n\t}\n\n\tset settingsTreeRoot(value: SettingsTreeGroupElement) {\n\t\tthis._settingsTreeRoot = value;\n\t\tthis.update();\n\t}\n\n\tget currentSearchModel(): SearchResultModel | null {\n\t\treturn this._currentSearchModel;\n\t}\n\n\tset currentSearchModel(model: SearchResultModel | null) {\n\t\tthis._currentSearchModel = model;\n\t\tthis.update();\n\t}\n\n\tget children(): SettingsTreeElement[] {\n\t\treturn this._settingsTreeRoot.children;\n\t}\n\n\tupdate(): void {\n\t\tif (this._settingsTreeRoot) {\n\t\t\tthis.updateGroupCount(this._settingsTreeRoot);\n\t\t}\n\t}\n\n\tprivate updateGroupCount(group: SettingsTreeGroupElement): void {\n\t\tgroup.children.forEach(child => {\n\t\t\tif (child instanceof SettingsTreeGroupElement) {\n\t\t\t\tthis.updateGroupCount(child);\n\t\t\t}\n\t\t});\n\n\t\tconst childCount = group.children\n\t\t\t.filter(child => child instanceof SettingsTreeGroupElement)\n\t\t\t.reduce((acc, cur) => acc + (<SettingsTreeGroupElement>cur).count!, 0);\n\n\t\tgroup.count = childCount + this.getGroupCount(group);\n\t}\n\n\tprivate getGroupCount(group: SettingsTreeGroupElement): number {\n\t\treturn group.children.filter(child => {\n\t\t\tif (!(child instanceof SettingsTreeSettingElement)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this._currentSearchModel && !this._currentSearchModel.root.containsSetting(child.setting.key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check everything that the SettingsFilter checks except whether it's filtered by a category\n\t\t\tconst isRemote = !!this.environmentService.remoteAuthority;\n\t\t\treturn child.matchesScope(this._viewState.settingsTarget, isRemote) &&\n\t\t\t\tchild.matchesAllTags(this._viewState.tagFilters) &&\n\t\t\t\tchild.matchesAnyFeature(this._viewState.featureFilters) &&\n\t\t\t\tchild.matchesAnyExtension(this._viewState.extensionFilters) &&\n\t\t\t\tchild.matchesAnyId(this._viewState.idFilters);\n\t\t}).length;\n\t}\n}\n\nconst TOC_ENTRY_TEMPLATE_ID = 'settings.toc.entry';\n\ninterface ITOCEntryTemplate {\n\tlabelElement: HTMLElement;\n\tcountElement: HTMLElement;\n}\n\nexport class TOCRenderer implements ITreeRenderer<SettingsTreeGroupElement, never, ITOCEntryTemplate> {\n\n\ttemplateId = TOC_ENTRY_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ITOCEntryTemplate {\n\t\treturn {\n\t\t\tlabelElement: DOM.append(container, $('.settings-toc-entry')),\n\t\t\tcountElement: DOM.append(container, $('.settings-toc-count'))\n\t\t};\n\t}\n\n\trenderElement(node: ITreeNode<SettingsTreeGroupElement>, index: number, template: ITOCEntryTemplate): void {\n\t\tconst element = node.element;\n\t\tconst count = element.count;\n\t\tconst label = element.label;\n\n\t\ttemplate.labelElement.textContent = label;\n\t\ttemplate.labelElement.title = label;\n\n\t\tif (count) {\n\t\t\ttemplate.countElement.textContent = ` (${count})`;\n\t\t} else {\n\t\t\ttemplate.countElement.textContent = '';\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ITOCEntryTemplate): void {\n\t}\n}\n\nclass TOCTreeDelegate implements IListVirtualDelegate<SettingsTreeElement> {\n\tgetTemplateId(element: SettingsTreeElement): string {\n\t\treturn TOC_ENTRY_TEMPLATE_ID;\n\t}\n\n\tgetHeight(element: SettingsTreeElement): number {\n\t\treturn 22;\n\t}\n}\n\nexport function createTOCIterator(model: TOCTreeModel | SettingsTreeGroupElement, tree: TOCTree): Iterable<ITreeElement<SettingsTreeGroupElement>> {\n\tconst groupChildren = <SettingsTreeGroupElement[]>model.children.filter(c => c instanceof SettingsTreeGroupElement);\n\n\treturn Iterable.map(groupChildren, g => {\n\t\tconst hasGroupChildren = g.children.some(c => c instanceof SettingsTreeGroupElement);\n\n\t\treturn {\n\t\t\telement: g,\n\t\t\tcollapsed: undefined,\n\t\t\tcollapsible: hasGroupChildren,\n\t\t\tchildren: g instanceof SettingsTreeGroupElement ?\n\t\t\t\tcreateTOCIterator(g, tree) :\n\t\t\t\tundefined\n\t\t};\n\t});\n}\n\nclass SettingsAccessibilityProvider implements IListAccessibilityProvider<SettingsTreeGroupElement> {\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize({\n\t\t\tkey: 'settingsTOC',\n\t\t\tcomment: ['A label for the table of contents for the full settings list']\n\t\t},\n\t\t\t\"Settings Table of Contents\");\n\t}\n\n\tgetAriaLabel(element: SettingsTreeElement): string {\n\t\tif (!element) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn localize('groupRowAriaLabel', \"{0}, group\", element.label);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tgetAriaLevel(element: SettingsTreeGroupElement): number {\n\t\tlet i = 1;\n\t\twhile (element instanceof SettingsTreeGroupElement && element.parent) {\n\t\t\ti++;\n\t\t\telement = element.parent;\n\t\t}\n\n\t\treturn i;\n\t}\n}\n\nexport class TOCTree extends WorkbenchObjectTree<SettingsTreeGroupElement> {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tviewState: ISettingsEditorViewState,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IListService listService: IListService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\t// test open mode\n\n\t\tconst filter = instantiationService.createInstance(SettingsTreeFilter, viewState);\n\t\tconst options: IWorkbenchObjectTreeOptions<SettingsTreeGroupElement, void> = {\n\t\t\tfilter,\n\t\t\tmultipleSelectionSupport: false,\n\t\t\tidentityProvider: {\n\t\t\t\tgetId(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t}\n\t\t\t},\n\t\t\tstyleController: id => new DefaultStyleController(DOM.createStyleSheet(container), id),\n\t\t\taccessibilityProvider: instantiationService.createInstance(SettingsAccessibilityProvider),\n\t\t\tcollapseByDefault: true,\n\t\t\thorizontalScrolling: false,\n\t\t\thideTwistiesOfChildlessElements: true\n\t\t};\n\n\t\tsuper(\n\t\t\t'SettingsTOC',\n\t\t\tcontainer,\n\t\t\tnew TOCTreeDelegate(),\n\t\t\t[new TOCRenderer()],\n\t\t\toptions,\n\t\t\tcontextKeyService,\n\t\t\tlistService,\n\t\t\tthemeService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService,\n\t\t\taccessibilityService,\n\t\t);\n\n\t\tthis.disposables.add(attachStyler(themeService, {\n\t\t\tlistBackground: editorBackground,\n\t\t\tlistFocusOutline: focusBorder,\n\t\t\tlistActiveSelectionBackground: editorBackground,\n\t\t\tlistActiveSelectionForeground: settingsHeaderForeground,\n\t\t\tlistFocusAndSelectionBackground: editorBackground,\n\t\t\tlistFocusAndSelectionForeground: settingsHeaderForeground,\n\t\t\tlistFocusBackground: editorBackground,\n\t\t\tlistFocusForeground: transparent(foreground, 0.9),\n\t\t\tlistHoverForeground: transparent(foreground, 0.9),\n\t\t\tlistHoverBackground: editorBackground,\n\t\t\tlistInactiveSelectionBackground: editorBackground,\n\t\t\tlistInactiveSelectionForeground: settingsHeaderForeground,\n\t\t\tlistInactiveFocusBackground: editorBackground,\n\t\t\tlistInactiveFocusOutline: editorBackground\n\t\t}, colors => {\n\t\t\tthis.style(colors);\n\t\t}));\n\t}\n}\n"]}