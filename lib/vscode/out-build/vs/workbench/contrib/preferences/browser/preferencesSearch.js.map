{"version":3,"file":"preferencesSearch.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/preferences/browser/preferencesSearch.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ISettingsEditorModel, ISetting, ISettingsGroup, IFilterMetadata, ISearchResult, IGroupFilter, ISettingMatcher, IScoredResults, ISettingMatch, IRemoteSetting, IExtensionSetting } from 'vs/workbench/services/preferences/common/preferences';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { distinct, top } from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IMatch, or, matchesContiguousSubString, matchesPrefix, matchesCamelCase, matchesWords } from 'vs/base/common/filters';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IPreferencesSearchService, ISearchProvider, IWorkbenchSettingsConfiguration } from 'vs/workbench/contrib/preferences/common/preferences';\nimport { IRequestService, asJson } from 'vs/platform/request/common/request';\nimport { IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { nullRange } from 'vs/workbench/services/preferences/common/preferencesModels';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport interface IEndpointDetails {\n\turlBase?: string;\n\tkey?: string;\n}\n\nexport class PreferencesSearchService extends Disposable implements IPreferencesSearchService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _installedExtensions: Promise<ILocalExtension[]>;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService\n\t) {\n\t\tsuper();\n\n\t\t// This request goes to the shared process but results won't change during a window's lifetime, so cache the results.\n\t\tthis._installedExtensions = this.extensionManagementService.getInstalled(ExtensionType.User).then(exts => {\n\t\t\t// Filter to enabled extensions that have settings\n\t\t\treturn exts\n\t\t\t\t.filter(ext => this.extensionEnablementService.isEnabled(ext))\n\t\t\t\t.filter(ext => ext.manifest && ext.manifest.contributes && ext.manifest.contributes.configuration)\n\t\t\t\t.filter(ext => !!ext.identifier.uuid);\n\t\t});\n\t}\n\n\tprivate get remoteSearchAllowed(): boolean {\n\t\tconst workbenchSettings = this.configurationService.getValue<IWorkbenchSettingsConfiguration>().workbench.settings;\n\t\tif (!workbenchSettings.enableNaturalLanguageSearch) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!this._endpoint.urlBase;\n\t}\n\n\tprivate get _endpoint(): IEndpointDetails {\n\t\tconst workbenchSettings = this.configurationService.getValue<IWorkbenchSettingsConfiguration>().workbench.settings;\n\t\tif (workbenchSettings.naturalLanguageSearchEndpoint) {\n\t\t\treturn {\n\t\t\t\turlBase: workbenchSettings.naturalLanguageSearchEndpoint,\n\t\t\t\tkey: workbenchSettings.naturalLanguageSearchKey\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\turlBase: this.productService.settingsSearchUrl\n\t\t\t};\n\t\t}\n\t}\n\n\tgetRemoteSearchProvider(filter: string, newExtensionsOnly = false): ISearchProvider | undefined {\n\t\tconst opts: IRemoteSearchProviderOptions = {\n\t\t\tfilter,\n\t\t\tnewExtensionsOnly,\n\t\t\tendpoint: this._endpoint\n\t\t};\n\n\t\treturn this.remoteSearchAllowed ? this.instantiationService.createInstance(RemoteSearchProvider, opts, this._installedExtensions) : undefined;\n\t}\n\n\tgetLocalSearchProvider(filter: string): LocalSearchProvider {\n\t\treturn this.instantiationService.createInstance(LocalSearchProvider, filter);\n\t}\n}\n\nexport class LocalSearchProvider implements ISearchProvider {\n\tstatic readonly EXACT_MATCH_SCORE = 10000;\n\tstatic readonly START_SCORE = 1000;\n\n\tconstructor(private _filter: string) {\n\t\t// Remove \" and : which are likely to be copypasted as part of a setting name.\n\t\t// Leave other special characters which the user might want to search for.\n\t\tthis._filter = this._filter\n\t\t\t.replace(/[\":]/g, ' ')\n\t\t\t.replace(/  /g, ' ')\n\t\t\t.trim();\n\t}\n\n\tsearchModel(preferencesModel: ISettingsEditorModel, token?: CancellationToken): Promise<ISearchResult | null> {\n\t\tif (!this._filter) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet orderedScore = LocalSearchProvider.START_SCORE; // Sort is not stable\n\t\tconst settingMatcher = (setting: ISetting) => {\n\t\t\tconst matches = new SettingMatches(this._filter, setting, true, true, (filter, setting) => preferencesModel.findValueMatches(filter, setting)).matches;\n\t\t\tconst score = this._filter === setting.key ?\n\t\t\t\tLocalSearchProvider.EXACT_MATCH_SCORE :\n\t\t\t\torderedScore--;\n\n\t\t\treturn matches && matches.length ?\n\t\t\t\t{\n\t\t\t\t\tmatches,\n\t\t\t\t\tscore\n\t\t\t\t} :\n\t\t\t\tnull;\n\t\t};\n\n\t\tconst filterMatches = preferencesModel.filterSettings(this._filter, this.getGroupFilter(this._filter), settingMatcher);\n\t\tif (filterMatches[0] && filterMatches[0].score === LocalSearchProvider.EXACT_MATCH_SCORE) {\n\t\t\treturn Promise.resolve({\n\t\t\t\tfilterMatches: filterMatches.slice(0, 1),\n\t\t\t\texactMatch: true\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve({\n\t\t\t\tfilterMatches\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getGroupFilter(filter: string): IGroupFilter {\n\t\tconst regex = strings.createRegExp(filter, false, { global: true });\n\t\treturn (group: ISettingsGroup) => {\n\t\t\treturn regex.test(group.title);\n\t\t};\n\t}\n}\n\ninterface IRemoteSearchProviderOptions {\n\tfilter: string;\n\tendpoint: IEndpointDetails;\n\tnewExtensionsOnly: boolean;\n}\n\ninterface IBingRequestDetails {\n\turl: string;\n\tbody?: string;\n\thasMoreFilters?: boolean;\n\textensions?: ILocalExtension[];\n}\n\nclass RemoteSearchProvider implements ISearchProvider {\n\t// Must keep extension filter size under 8kb. 42 filters puts us there.\n\tprivate static readonly MAX_REQUEST_FILTERS = 42;\n\tprivate static readonly MAX_REQUESTS = 10;\n\tprivate static readonly NEW_EXTENSIONS_MIN_SCORE = 1;\n\n\tprivate _remoteSearchP: Promise<IFilterMetadata | null>;\n\n\tconstructor(private options: IRemoteSearchProviderOptions, private installedExtensions: Promise<ILocalExtension[]>,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis._remoteSearchP = this.options.filter ?\n\t\t\tPromise.resolve(this.getSettingsForFilter(this.options.filter)) :\n\t\t\tPromise.resolve(null);\n\t}\n\n\tsearchModel(preferencesModel: ISettingsEditorModel, token?: CancellationToken): Promise<ISearchResult | null> {\n\t\treturn this._remoteSearchP.then<ISearchResult | null>((remoteResult) => {\n\t\t\tif (!remoteResult) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\n\t\t\tconst resultKeys = Object.keys(remoteResult.scoredResults);\n\t\t\tconst highScoreKey = top(resultKeys, (a, b) => remoteResult.scoredResults[b].score - remoteResult.scoredResults[a].score, 1)[0];\n\t\t\tconst highScore = highScoreKey ? remoteResult.scoredResults[highScoreKey].score : 0;\n\t\t\tconst minScore = highScore / 5;\n\t\t\tif (this.options.newExtensionsOnly) {\n\t\t\t\treturn this.installedExtensions.then(installedExtensions => {\n\t\t\t\t\tconst newExtsMinScore = Math.max(RemoteSearchProvider.NEW_EXTENSIONS_MIN_SCORE, minScore);\n\t\t\t\t\tconst passingScoreKeys = resultKeys\n\t\t\t\t\t\t.filter(k => {\n\t\t\t\t\t\t\tconst result = remoteResult.scoredResults[k];\n\t\t\t\t\t\t\tconst resultExtId = (result.extensionPublisher + '.' + result.extensionName).toLowerCase();\n\t\t\t\t\t\t\treturn !installedExtensions.some(ext => ext.identifier.id.toLowerCase() === resultExtId);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(k => remoteResult.scoredResults[k].score >= newExtsMinScore);\n\n\t\t\t\t\tconst filterMatches: ISettingMatch[] = passingScoreKeys.map(k => {\n\t\t\t\t\t\tconst remoteSetting = remoteResult.scoredResults[k];\n\t\t\t\t\t\tconst setting = remoteSettingToISetting(remoteSetting);\n\t\t\t\t\t\treturn <ISettingMatch>{\n\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\tscore: remoteSetting.score,\n\t\t\t\t\t\t\tmatches: [] // TODO\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\treturn <ISearchResult>{\n\t\t\t\t\t\tfilterMatches,\n\t\t\t\t\t\tmetadata: remoteResult\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst settingMatcher = this.getRemoteSettingMatcher(remoteResult.scoredResults, minScore, preferencesModel);\n\t\t\t\tconst filterMatches = preferencesModel.filterSettings(this.options.filter, group => null, settingMatcher);\n\t\t\t\treturn <ISearchResult>{\n\t\t\t\t\tfilterMatches,\n\t\t\t\t\tmetadata: remoteResult\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async getSettingsForFilter(filter: string): Promise<IFilterMetadata> {\n\t\tconst allRequestDetails: IBingRequestDetails[] = [];\n\n\t\t// Only send MAX_REQUESTS requests in total just to keep it sane\n\t\tfor (let i = 0; i < RemoteSearchProvider.MAX_REQUESTS; i++) {\n\t\t\tconst details = await this.prepareRequest(filter, i);\n\t\t\tallRequestDetails.push(details);\n\t\t\tif (!details.hasMoreFilters) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(allRequestDetails.map(details => this.getSettingsFromBing(details))).then(allResponses => {\n\t\t\t// Merge all IFilterMetadata\n\t\t\tconst metadata = allResponses[0];\n\t\t\tmetadata.requestCount = 1;\n\n\t\t\tfor (const response of allResponses.slice(1)) {\n\t\t\t\tmetadata.requestCount++;\n\t\t\t\tmetadata.scoredResults = { ...metadata.scoredResults, ...response.scoredResults };\n\t\t\t}\n\n\t\t\treturn metadata;\n\t\t});\n\t}\n\n\tprivate getSettingsFromBing(details: IBingRequestDetails): Promise<IFilterMetadata> {\n\t\tthis.logService.debug(`Searching settings via ${details.url}`);\n\t\tif (details.body) {\n\t\t\tthis.logService.debug(`Body: ${details.body}`);\n\t\t}\n\n\t\tconst requestType = details.body ? 'post' : 'get';\n\t\tconst headers: IStringDictionary<string> = {\n\t\t\t'User-Agent': 'request',\n\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t};\n\n\t\tif (this.options.endpoint.key) {\n\t\t\theaders['api-key'] = this.options.endpoint.key;\n\t\t}\n\n\t\tconst start = Date.now();\n\t\treturn this.requestService.request({\n\t\t\ttype: requestType,\n\t\t\turl: details.url,\n\t\t\tdata: details.body,\n\t\t\theaders,\n\t\t\ttimeout: 5000\n\t\t}, CancellationToken.None).then(context => {\n\t\t\tif (typeof context.res.statusCode === 'number' && context.res.statusCode >= 300) {\n\t\t\t\tthrow new Error(`${JSON.stringify(details)} returned status code: ${context.res.statusCode}`);\n\t\t\t}\n\n\t\t\treturn asJson(context);\n\t\t}).then((result: any) => {\n\t\t\tconst timestamp = Date.now();\n\t\t\tconst duration = timestamp - start;\n\t\t\tconst remoteSettings: IRemoteSetting[] = (result.value || [])\n\t\t\t\t.map((r: any) => {\n\t\t\t\t\tconst key = JSON.parse(r.setting || r.Setting);\n\t\t\t\t\tconst packageId = r['packageid'];\n\t\t\t\t\tconst id = getSettingKey(key, packageId);\n\n\t\t\t\t\tconst value = r['value'];\n\t\t\t\t\tconst defaultValue = value ? JSON.parse(value) : value;\n\n\t\t\t\t\tconst packageName = r['packagename'];\n\t\t\t\t\tlet extensionName: string | undefined;\n\t\t\t\t\tlet extensionPublisher: string | undefined;\n\t\t\t\t\tif (packageName && packageName.indexOf('##') >= 0) {\n\t\t\t\t\t\t[extensionPublisher, extensionName] = packageName.split('##');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <IRemoteSetting>{\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tdefaultValue,\n\t\t\t\t\t\tscore: r['@search.score'],\n\t\t\t\t\t\tdescription: JSON.parse(r['details']),\n\t\t\t\t\t\tpackageId,\n\t\t\t\t\t\textensionName,\n\t\t\t\t\t\textensionPublisher\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tconst scoredResults = Object.create(null);\n\t\t\tremoteSettings.forEach(s => {\n\t\t\t\tscoredResults[s.id] = s;\n\t\t\t});\n\n\t\t\treturn <IFilterMetadata>{\n\t\t\t\trequestUrl: details.url,\n\t\t\t\trequestBody: details.body,\n\t\t\t\tduration,\n\t\t\t\ttimestamp,\n\t\t\t\tscoredResults,\n\t\t\t\tcontext: result['@odata.context']\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate getRemoteSettingMatcher(scoredResults: IScoredResults, minScore: number, preferencesModel: ISettingsEditorModel): ISettingMatcher {\n\t\treturn (setting: ISetting, group: ISettingsGroup) => {\n\t\t\tconst remoteSetting = scoredResults[getSettingKey(setting.key, group.id)] || // extension setting\n\t\t\t\tscoredResults[getSettingKey(setting.key, 'core')] || // core setting\n\t\t\t\tscoredResults[getSettingKey(setting.key)]; // core setting from original prod endpoint\n\t\t\tif (remoteSetting && remoteSetting.score >= minScore) {\n\t\t\t\tconst settingMatches = new SettingMatches(this.options.filter, setting, false, true, (filter, setting) => preferencesModel.findValueMatches(filter, setting)).matches;\n\t\t\t\treturn { matches: settingMatches, score: remoteSetting.score };\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tprivate async prepareRequest(query: string, filterPage = 0): Promise<IBingRequestDetails> {\n\t\tconst verbatimQuery = query;\n\t\tquery = escapeSpecialChars(query);\n\t\tconst boost = 10;\n\t\tconst boostedQuery = `(${query})^${boost}`;\n\n\t\t// Appending Fuzzy after each word.\n\t\tquery = query.replace(/\\ +/g, '~ ') + '~';\n\n\t\tconst encodedQuery = encodeURIComponent(boostedQuery + ' || ' + query);\n\t\tlet url = `${this.options.endpoint.urlBase}`;\n\n\t\tif (this.options.endpoint.key) {\n\t\t\turl += `${API_VERSION}&${QUERY_TYPE}`;\n\t\t}\n\n\t\tconst extensions = await this.installedExtensions;\n\t\tconst filters = this.options.newExtensionsOnly ?\n\t\t\t[`diminish eq 'latest'`] :\n\t\t\tthis.getVersionFilters(extensions, this.productService.settingsSearchBuildId);\n\n\t\tconst filterStr = filters\n\t\t\t.slice(filterPage * RemoteSearchProvider.MAX_REQUEST_FILTERS, (filterPage + 1) * RemoteSearchProvider.MAX_REQUEST_FILTERS)\n\t\t\t.join(' or ');\n\t\tconst hasMoreFilters = filters.length > (filterPage + 1) * RemoteSearchProvider.MAX_REQUEST_FILTERS;\n\n\t\tconst body = JSON.stringify({\n\t\t\tquery: encodedQuery,\n\t\t\tfilters: encodeURIComponent(filterStr),\n\t\t\trawQuery: encodeURIComponent(verbatimQuery)\n\t\t});\n\n\t\treturn {\n\t\t\turl,\n\t\t\tbody,\n\t\t\thasMoreFilters\n\t\t};\n\t}\n\n\tprivate getVersionFilters(exts: ILocalExtension[], buildNumber?: number): string[] {\n\t\t// Only search extensions that contribute settings\n\t\tconst filters = exts\n\t\t\t.filter(ext => ext.manifest.contributes && ext.manifest.contributes.configuration)\n\t\t\t.map(ext => this.getExtensionFilter(ext));\n\n\t\tif (buildNumber) {\n\t\t\tfilters.push(`(packageid eq 'core' and startbuildno le '${buildNumber}' and endbuildno ge '${buildNumber}')`);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tprivate getExtensionFilter(ext: ILocalExtension): string {\n\t\tconst uuid = ext.identifier.uuid;\n\t\tconst versionString = ext.manifest.version\n\t\t\t.split('.')\n\t\t\t.map(versionPart => String(versionPart).padStart(10), '0')\n\t\t\t.join('');\n\n\t\treturn `(packageid eq '${uuid}' and startbuildno le '${versionString}' and endbuildno ge '${versionString}')`;\n\t}\n}\n\nfunction getSettingKey(name: string, packageId?: string): string {\n\treturn packageId ?\n\t\tpackageId + '##' + name :\n\t\tname;\n}\n\nconst API_VERSION = 'api-version=2016-09-01-Preview';\nconst QUERY_TYPE = 'querytype=full';\n\nfunction escapeSpecialChars(query: string): string {\n\treturn query.replace(/\\./g, ' ')\n\t\t.replace(/[\\\\/+\\-&|!\"~*?:(){}\\[\\]\\^]/g, '\\\\$&')\n\t\t.replace(/  /g, ' ') // collapse spaces\n\t\t.trim();\n}\n\nfunction remoteSettingToISetting(remoteSetting: IRemoteSetting): IExtensionSetting {\n\treturn {\n\t\tdescription: remoteSetting.description.split('\\n'),\n\t\tdescriptionIsMarkdown: false,\n\t\tdescriptionRanges: [],\n\t\tkey: remoteSetting.key,\n\t\tkeyRange: nullRange,\n\t\tvalue: remoteSetting.defaultValue,\n\t\trange: nullRange,\n\t\tvalueRange: nullRange,\n\t\toverrides: [],\n\t\textensionName: remoteSetting.extensionName,\n\t\textensionPublisher: remoteSetting.extensionPublisher\n\t};\n}\n\nexport class SettingMatches {\n\n\tprivate readonly descriptionMatchingWords: Map<string, IRange[]> = new Map<string, IRange[]>();\n\tprivate readonly keyMatchingWords: Map<string, IRange[]> = new Map<string, IRange[]>();\n\tprivate readonly valueMatchingWords: Map<string, IRange[]> = new Map<string, IRange[]>();\n\n\treadonly matches: IRange[];\n\n\tconstructor(searchString: string, setting: ISetting, private requireFullQueryMatch: boolean, private searchDescription: boolean, private valuesMatcher: (filter: string, setting: ISetting) => IRange[]) {\n\t\tthis.matches = distinct(this._findMatchesInSetting(searchString, setting), (match) => `${match.startLineNumber}_${match.startColumn}_${match.endLineNumber}_${match.endColumn}_`);\n\t}\n\n\tprivate _findMatchesInSetting(searchString: string, setting: ISetting): IRange[] {\n\t\tconst result = this._doFindMatchesInSetting(searchString, setting);\n\t\tif (setting.overrides && setting.overrides.length) {\n\t\t\tfor (const subSetting of setting.overrides) {\n\t\t\t\tconst subSettingMatches = new SettingMatches(searchString, subSetting, this.requireFullQueryMatch, this.searchDescription, this.valuesMatcher);\n\t\t\t\tconst words = searchString.split(' ');\n\t\t\t\tconst descriptionRanges: IRange[] = this.getRangesForWords(words, this.descriptionMatchingWords, [subSettingMatches.descriptionMatchingWords, subSettingMatches.keyMatchingWords, subSettingMatches.valueMatchingWords]);\n\t\t\t\tconst keyRanges: IRange[] = this.getRangesForWords(words, this.keyMatchingWords, [subSettingMatches.descriptionMatchingWords, subSettingMatches.keyMatchingWords, subSettingMatches.valueMatchingWords]);\n\t\t\t\tconst subSettingKeyRanges: IRange[] = this.getRangesForWords(words, subSettingMatches.keyMatchingWords, [this.descriptionMatchingWords, this.keyMatchingWords, subSettingMatches.valueMatchingWords]);\n\t\t\t\tconst subSettingValueRanges: IRange[] = this.getRangesForWords(words, subSettingMatches.valueMatchingWords, [this.descriptionMatchingWords, this.keyMatchingWords, subSettingMatches.keyMatchingWords]);\n\t\t\t\tresult.push(...descriptionRanges, ...keyRanges, ...subSettingKeyRanges, ...subSettingValueRanges);\n\t\t\t\tresult.push(...subSettingMatches.matches);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _doFindMatchesInSetting(searchString: string, setting: ISetting): IRange[] {\n\t\tconst registry: { [qualifiedKey: string]: IJSONSchema } = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst schema: IJSONSchema = registry[setting.key];\n\n\t\tconst words = searchString.split(' ');\n\t\tconst settingKeyAsWords: string = setting.key.split('.').join(' ');\n\n\t\tfor (const word of words) {\n\t\t\tif (this.searchDescription) {\n\t\t\t\tfor (let lineIndex = 0; lineIndex < setting.description.length; lineIndex++) {\n\t\t\t\t\tconst descriptionMatches = matchesWords(word, setting.description[lineIndex], true);\n\t\t\t\t\tif (descriptionMatches) {\n\t\t\t\t\t\tthis.descriptionMatchingWords.set(word, descriptionMatches.map(match => this.toDescriptionRange(setting, match, lineIndex)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst keyMatches = or(matchesWords, matchesCamelCase)(word, settingKeyAsWords);\n\t\t\tif (keyMatches) {\n\t\t\t\tthis.keyMatchingWords.set(word, keyMatches.map(match => this.toKeyRange(setting, match)));\n\t\t\t}\n\n\t\t\tconst valueMatches = typeof setting.value === 'string' ? matchesContiguousSubString(word, setting.value) : null;\n\t\t\tif (valueMatches) {\n\t\t\t\tthis.valueMatchingWords.set(word, valueMatches.map(match => this.toValueRange(setting, match)));\n\t\t\t} else if (schema && schema.enum && schema.enum.some(enumValue => typeof enumValue === 'string' && !!matchesContiguousSubString(word, enumValue))) {\n\t\t\t\tthis.valueMatchingWords.set(word, []);\n\t\t\t}\n\t\t}\n\n\t\tconst descriptionRanges: IRange[] = [];\n\t\tif (this.searchDescription) {\n\t\t\tfor (let lineIndex = 0; lineIndex < setting.description.length; lineIndex++) {\n\t\t\t\tconst matches = or(matchesContiguousSubString)(searchString, setting.description[lineIndex] || '') || [];\n\t\t\t\tdescriptionRanges.push(...matches.map(match => this.toDescriptionRange(setting, match, lineIndex)));\n\t\t\t}\n\t\t\tif (descriptionRanges.length === 0) {\n\t\t\t\tdescriptionRanges.push(...this.getRangesForWords(words, this.descriptionMatchingWords, [this.keyMatchingWords, this.valueMatchingWords]));\n\t\t\t}\n\t\t}\n\n\t\tconst keyMatches = or(matchesPrefix, matchesContiguousSubString)(searchString, setting.key);\n\t\tconst keyRanges: IRange[] = keyMatches ? keyMatches.map(match => this.toKeyRange(setting, match)) : this.getRangesForWords(words, this.keyMatchingWords, [this.descriptionMatchingWords, this.valueMatchingWords]);\n\n\t\tlet valueRanges: IRange[] = [];\n\t\tif (setting.value && typeof setting.value === 'string') {\n\t\t\tconst valueMatches = or(matchesPrefix, matchesContiguousSubString)(searchString, setting.value);\n\t\t\tvalueRanges = valueMatches ? valueMatches.map(match => this.toValueRange(setting, match)) : this.getRangesForWords(words, this.valueMatchingWords, [this.keyMatchingWords, this.descriptionMatchingWords]);\n\t\t} else {\n\t\t\tvalueRanges = this.valuesMatcher(searchString, setting);\n\t\t}\n\n\t\treturn [...descriptionRanges, ...keyRanges, ...valueRanges];\n\t}\n\n\tprivate getRangesForWords(words: string[], from: Map<string, IRange[]>, others: Map<string, IRange[]>[]): IRange[] {\n\t\tconst result: IRange[] = [];\n\t\tfor (const word of words) {\n\t\t\tconst ranges = from.get(word);\n\t\t\tif (ranges) {\n\t\t\t\tresult.push(...ranges);\n\t\t\t} else if (this.requireFullQueryMatch && others.every(o => !o.has(word))) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate toKeyRange(setting: ISetting, match: IMatch): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: setting.keyRange.startLineNumber,\n\t\t\tstartColumn: setting.keyRange.startColumn + match.start,\n\t\t\tendLineNumber: setting.keyRange.startLineNumber,\n\t\t\tendColumn: setting.keyRange.startColumn + match.end\n\t\t};\n\t}\n\n\tprivate toDescriptionRange(setting: ISetting, match: IMatch, lineIndex: number): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: setting.descriptionRanges[lineIndex].startLineNumber,\n\t\t\tstartColumn: setting.descriptionRanges[lineIndex].startColumn + match.start,\n\t\t\tendLineNumber: setting.descriptionRanges[lineIndex].endLineNumber,\n\t\t\tendColumn: setting.descriptionRanges[lineIndex].startColumn + match.end\n\t\t};\n\t}\n\n\tprivate toValueRange(setting: ISetting, match: IMatch): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: setting.valueRange.startLineNumber,\n\t\t\tstartColumn: setting.valueRange.startColumn + match.start + 1,\n\t\t\tendLineNumber: setting.valueRange.startLineNumber,\n\t\t\tendColumn: setting.valueRange.startColumn + match.end + 1\n\t\t};\n\t}\n}\n\nregisterSingleton(IPreferencesSearchService, PreferencesSearchService, true);\n"]}