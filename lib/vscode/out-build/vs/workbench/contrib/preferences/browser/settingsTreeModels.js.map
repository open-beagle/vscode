{"version":3,"sources":["vs/workbench/contrib/preferences/browser/settingsTreeModels.ts"],"names":[],"mappings":"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","file":"settingsTreeModels.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { escapeRegExpCharacters, isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { isArray, withUndefinedAsNull, isUndefinedOrNull } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationValue } from 'vs/platform/configuration/common/configuration';\nimport { SettingsTarget } from 'vs/workbench/contrib/preferences/browser/preferencesWidgets';\nimport { ITOCEntry, knownAcronyms, knownTermMappings, tocData } from 'vs/workbench/contrib/preferences/browser/settingsLayout';\nimport { MODIFIED_SETTING_TAG, REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG } from 'vs/workbench/contrib/preferences/common/preferences';\nimport { IExtensionSetting, ISearchResult, ISetting, SettingValueType } from 'vs/workbench/services/preferences/common/preferences';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { FOLDER_SCOPES, WORKSPACE_SCOPES, REMOTE_MACHINE_SCOPES, LOCAL_MACHINE_SCOPES, IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\n\nexport const ONLINE_SERVICES_SETTING_TAG = 'usesOnlineServices';\n\nexport interface ISettingsEditorViewState {\n\tsettingsTarget: SettingsTarget;\n\ttagFilters?: Set<string>;\n\textensionFilters?: Set<string>;\n\tfeatureFilters?: Set<string>;\n\tidFilters?: Set<string>;\n\tfilterToCategory?: SettingsTreeGroupElement;\n}\n\nexport abstract class SettingsTreeElement extends Disposable {\n\tid: string;\n\tparent?: SettingsTreeGroupElement;\n\n\tprivate _tabbable = false;\n\tprotected readonly _onDidChangeTabbable = new Emitter<void>();\n\treadonly onDidChangeTabbable = this._onDidChangeTabbable.event;\n\n\tconstructor(_id: string) {\n\t\tsuper();\n\t\tthis.id = _id;\n\t}\n\n\tget tabbable(): boolean {\n\t\treturn this._tabbable;\n\t}\n\n\tset tabbable(value: boolean) {\n\t\tthis._tabbable = value;\n\t\tthis._onDidChangeTabbable.fire();\n\t}\n}\n\nexport type SettingsTreeGroupChild = (SettingsTreeGroupElement | SettingsTreeSettingElement | SettingsTreeNewExtensionsElement);\n\nexport class SettingsTreeGroupElement extends SettingsTreeElement {\n\tcount?: number;\n\tlabel: string;\n\tlevel: number;\n\tisFirstGroup: boolean;\n\n\tprivate _childSettingKeys: Set<string> = new Set();\n\tprivate _children: SettingsTreeGroupChild[] = [];\n\n\tget children(): SettingsTreeGroupChild[] {\n\t\treturn this._children;\n\t}\n\n\tset children(newChildren: SettingsTreeGroupChild[]) {\n\t\tthis._children = newChildren;\n\n\t\tthis._childSettingKeys = new Set();\n\t\tthis._children.forEach(child => {\n\t\t\tif (child instanceof SettingsTreeSettingElement) {\n\t\t\t\tthis._childSettingKeys.add(child.setting.key);\n\t\t\t}\n\t\t});\n\t}\n\n\tconstructor(_id: string, count: number | undefined, label: string, level: number, isFirstGroup: boolean) {\n\t\tsuper(_id);\n\n\t\tthis.count = count;\n\t\tthis.label = label;\n\t\tthis.level = level;\n\t\tthis.isFirstGroup = isFirstGroup;\n\t}\n\n\t/**\n\t * Returns whether this group contains the given child key (to a depth of 1 only)\n\t */\n\tcontainsSetting(key: string): boolean {\n\t\treturn this._childSettingKeys.has(key);\n\t}\n}\n\nexport class SettingsTreeNewExtensionsElement extends SettingsTreeElement {\n\tconstructor(_id: string, public readonly extensionIds: string[]) {\n\t\tsuper(_id);\n\t}\n}\n\nexport class SettingsTreeSettingElement extends SettingsTreeElement {\n\tprivate static readonly MAX_DESC_LINES = 20;\n\n\tsetting: ISetting;\n\n\tprivate _displayCategory: string | null = null;\n\tprivate _displayLabel: string | null = null;\n\n\t/**\n\t * scopeValue || defaultValue, for rendering convenience.\n\t */\n\tvalue: any;\n\n\t/**\n\t * The value in the current settings scope.\n\t */\n\tscopeValue: any;\n\n\t/**\n\t * The default value\n\t */\n\tdefaultValue?: any;\n\n\t/**\n\t * Whether the setting is configured in the selected scope.\n\t */\n\tisConfigured = false;\n\n\t/**\n\t * Whether the setting requires trusted target\n\t */\n\tisUntrusted = false;\n\n\ttags?: Set<string>;\n\toverriddenScopeList: string[] = [];\n\tdescription!: string;\n\tvalueType!: SettingValueType;\n\n\tconstructor(setting: ISetting, parent: SettingsTreeGroupElement, inspectResult: IInspectResult, isWorkspaceTrusted: boolean) {\n\t\tsuper(sanitizeId(parent.id + '_' + setting.key));\n\t\tthis.setting = setting;\n\t\tthis.parent = parent;\n\n\t\tthis.update(inspectResult, isWorkspaceTrusted);\n\t}\n\n\tget displayCategory(): string {\n\t\tif (!this._displayCategory) {\n\t\t\tthis.initLabel();\n\t\t}\n\n\t\treturn this._displayCategory!;\n\t}\n\n\tget displayLabel(): string {\n\t\tif (!this._displayLabel) {\n\t\t\tthis.initLabel();\n\t\t}\n\n\t\treturn this._displayLabel!;\n\t}\n\n\tprivate initLabel(): void {\n\t\tconst displayKeyFormat = settingKeyToDisplayFormat(this.setting.key, this.parent!.id);\n\t\tthis._displayLabel = displayKeyFormat.label;\n\t\tthis._displayCategory = displayKeyFormat.category;\n\t}\n\n\tupdate(inspectResult: IInspectResult, isWorkspaceTrusted: boolean): void {\n\t\tconst { isConfigured, inspected, targetSelector } = inspectResult;\n\n\t\tswitch (targetSelector) {\n\t\t\tcase 'workspaceFolderValue':\n\t\t\tcase 'workspaceValue':\n\t\t\t\tthis.isUntrusted = !!this.setting.restricted && !isWorkspaceTrusted;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst displayValue = isConfigured ? inspected[targetSelector] : inspected.defaultValue;\n\t\tconst overriddenScopeList: string[] = [];\n\t\tif (targetSelector !== 'workspaceValue' && typeof inspected.workspaceValue !== 'undefined') {\n\t\t\toverriddenScopeList.push(localize('workspace', \"Workspace\"));\n\t\t}\n\n\t\tif (targetSelector !== 'userRemoteValue' && typeof inspected.userRemoteValue !== 'undefined') {\n\t\t\toverriddenScopeList.push(localize('remote', \"Remote\"));\n\t\t}\n\n\t\tif (targetSelector !== 'userLocalValue' && typeof inspected.userLocalValue !== 'undefined') {\n\t\t\toverriddenScopeList.push(localize('user', \"User\"));\n\t\t}\n\n\t\tthis.value = displayValue;\n\t\tthis.scopeValue = isConfigured && inspected[targetSelector];\n\t\tthis.defaultValue = inspected.defaultValue;\n\n\t\tthis.isConfigured = isConfigured;\n\t\tif (isConfigured || this.setting.tags || this.tags || this.setting.restricted) {\n\t\t\t// Don't create an empty Set for all 1000 settings, only if needed\n\t\t\tthis.tags = new Set<string>();\n\t\t\tif (isConfigured) {\n\t\t\t\tthis.tags.add(MODIFIED_SETTING_TAG);\n\t\t\t}\n\n\t\t\tif (this.setting.tags) {\n\t\t\t\tthis.setting.tags.forEach(tag => this.tags!.add(tag));\n\t\t\t}\n\n\t\t\tif (this.setting.restricted) {\n\t\t\t\tthis.tags.add(REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG);\n\t\t\t}\n\t\t}\n\n\t\tthis.overriddenScopeList = overriddenScopeList;\n\t\tif (this.setting.description.length > SettingsTreeSettingElement.MAX_DESC_LINES) {\n\t\t\tconst truncatedDescLines = this.setting.description.slice(0, SettingsTreeSettingElement.MAX_DESC_LINES);\n\t\t\ttruncatedDescLines.push('[...]');\n\t\t\tthis.description = truncatedDescLines.join('\\n');\n\t\t} else {\n\t\t\tthis.description = this.setting.description.join('\\n');\n\t\t}\n\n\t\tif (this.setting.enum && (!this.setting.type || settingTypeEnumRenderable(this.setting.type))) {\n\t\t\tthis.valueType = SettingValueType.Enum;\n\t\t} else if (this.setting.type === 'string') {\n\t\t\tthis.valueType = SettingValueType.String;\n\t\t} else if (isExcludeSetting(this.setting)) {\n\t\t\tthis.valueType = SettingValueType.Exclude;\n\t\t} else if (this.setting.type === 'integer') {\n\t\t\tthis.valueType = SettingValueType.Integer;\n\t\t} else if (this.setting.type === 'number') {\n\t\t\tthis.valueType = SettingValueType.Number;\n\t\t} else if (this.setting.type === 'boolean') {\n\t\t\tthis.valueType = SettingValueType.Boolean;\n\t\t} else if (this.setting.type === 'array' && this.setting.arrayItemType === 'string') {\n\t\t\tthis.valueType = SettingValueType.ArrayOfString;\n\t\t} else if (isArray(this.setting.type) && this.setting.type.indexOf(SettingValueType.Null) > -1 && this.setting.type.length === 2) {\n\t\t\tif (this.setting.type.indexOf(SettingValueType.Integer) > -1) {\n\t\t\t\tthis.valueType = SettingValueType.NullableInteger;\n\t\t\t} else if (this.setting.type.indexOf(SettingValueType.Number) > -1) {\n\t\t\t\tthis.valueType = SettingValueType.NullableNumber;\n\t\t\t} else {\n\t\t\t\tthis.valueType = SettingValueType.Complex;\n\t\t\t}\n\t\t} else if (isObjectSetting(this.setting)) {\n\t\t\tthis.valueType = SettingValueType.Object;\n\t\t} else {\n\t\t\tthis.valueType = SettingValueType.Complex;\n\t\t}\n\t}\n\n\tmatchesAllTags(tagFilters?: Set<string>): boolean {\n\t\tif (!tagFilters || !tagFilters.size) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.tags) {\n\t\t\tlet hasFilteredTag = true;\n\t\t\ttagFilters.forEach(tag => {\n\t\t\t\thasFilteredTag = hasFilteredTag && this.tags!.has(tag);\n\t\t\t});\n\t\t\treturn hasFilteredTag;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tmatchesScope(scope: SettingsTarget, isRemote: boolean): boolean {\n\t\tconst configTarget = URI.isUri(scope) ? ConfigurationTarget.WORKSPACE_FOLDER : scope;\n\n\t\tif (!this.setting.scope) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (configTarget === ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\treturn FOLDER_SCOPES.indexOf(this.setting.scope) !== -1;\n\t\t}\n\n\t\tif (configTarget === ConfigurationTarget.WORKSPACE) {\n\t\t\treturn WORKSPACE_SCOPES.indexOf(this.setting.scope) !== -1;\n\t\t}\n\n\t\tif (configTarget === ConfigurationTarget.USER_REMOTE) {\n\t\t\treturn REMOTE_MACHINE_SCOPES.indexOf(this.setting.scope) !== -1;\n\t\t}\n\n\t\tif (configTarget === ConfigurationTarget.USER_LOCAL && isRemote) {\n\t\t\treturn LOCAL_MACHINE_SCOPES.indexOf(this.setting.scope) !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tmatchesAnyExtension(extensionFilters?: Set<string>): boolean {\n\t\tif (!extensionFilters || !extensionFilters.size) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!this.setting.extensionInfo) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Array.from(extensionFilters).some(extensionId => extensionId.toLowerCase() === this.setting.extensionInfo!.id.toLowerCase());\n\t}\n\n\tmatchesAnyFeature(featureFilters?: Set<string>): boolean {\n\t\tif (!featureFilters || !featureFilters.size) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst features = tocData.children!.find(child => child.id === 'features');\n\n\t\treturn Array.from(featureFilters).some(filter => {\n\t\t\tif (features && features.children) {\n\t\t\t\tconst feature = features.children.find(feature => 'features/' + filter === feature.id);\n\t\t\t\tif (feature) {\n\t\t\t\t\tconst patterns = feature.settings?.map(setting => createSettingMatchRegExp(setting));\n\t\t\t\t\treturn patterns && !this.setting.extensionInfo && patterns.some(pattern => pattern.test(this.setting.key.toLowerCase()));\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tmatchesAnyId(idFilters?: Set<string>): boolean {\n\t\tif (!idFilters || !idFilters.size) {\n\t\t\treturn true;\n\t\t}\n\t\treturn idFilters.has(this.setting.key);\n\t}\n}\n\n\nfunction createSettingMatchRegExp(pattern: string): RegExp {\n\tpattern = escapeRegExpCharacters(pattern)\n\t\t.replace(/\\\\\\*/g, '.*');\n\n\treturn new RegExp(`^${pattern}$`, 'i');\n}\n\nexport class SettingsTreeModel {\n\tprotected _root!: SettingsTreeGroupElement;\n\tprivate _treeElementsBySettingName = new Map<string, SettingsTreeSettingElement[]>();\n\tprivate _tocRoot!: ITOCEntry<ISetting>;\n\n\tconstructor(\n\t\tprotected _viewState: ISettingsEditorViewState,\n\t\tprivate _isWorkspaceTrusted: boolean,\n\t\t@IWorkbenchConfigurationService private readonly _configurationService: IWorkbenchConfigurationService,\n\t) {\n\t}\n\n\tget root(): SettingsTreeGroupElement {\n\t\treturn this._root;\n\t}\n\n\tupdate(newTocRoot = this._tocRoot): void {\n\t\tthis._treeElementsBySettingName.clear();\n\n\t\tconst newRoot = this.createSettingsTreeGroupElement(newTocRoot);\n\t\tif (newRoot.children[0] instanceof SettingsTreeGroupElement) {\n\t\t\t(<SettingsTreeGroupElement>newRoot.children[0]).isFirstGroup = true;\n\t\t}\n\n\t\tif (this._root) {\n\t\t\tthis.disposeChildren(this._root.children);\n\t\t\tthis._root.children = newRoot.children;\n\t\t} else {\n\t\t\tthis._root = newRoot;\n\t\t}\n\t}\n\n\tupdateWorkspaceTrust(workspaceTrusted: boolean): void {\n\t\tthis._isWorkspaceTrusted = workspaceTrusted;\n\t\tthis.updateRequireTrustedTargetElements();\n\t}\n\n\tprivate disposeChildren(children: SettingsTreeGroupChild[]) {\n\t\tfor (let child of children) {\n\t\t\tthis.recursiveDispose(child);\n\t\t}\n\t}\n\n\tprivate recursiveDispose(element: SettingsTreeElement) {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\tthis.disposeChildren(element.children);\n\t\t}\n\n\t\telement.dispose();\n\t}\n\n\tgetElementsByName(name: string): SettingsTreeSettingElement[] | null {\n\t\treturn withUndefinedAsNull(this._treeElementsBySettingName.get(name));\n\t}\n\n\tupdateElementsByName(name: string): void {\n\t\tif (!this._treeElementsBySettingName.has(name)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateSettings(this._treeElementsBySettingName.get(name)!);\n\t}\n\n\tprivate updateRequireTrustedTargetElements(): void {\n\t\tthis.updateSettings(arrays.flatten([...this._treeElementsBySettingName.values()]).filter(s => s.isUntrusted));\n\t}\n\n\tprivate updateSettings(settings: SettingsTreeSettingElement[]): void {\n\t\tsettings.forEach(element => {\n\t\t\tconst inspectResult = inspectSetting(element.setting.key, this._viewState.settingsTarget, this._configurationService);\n\t\t\telement.update(inspectResult, this._isWorkspaceTrusted);\n\t\t});\n\t}\n\n\tprivate createSettingsTreeGroupElement(tocEntry: ITOCEntry<ISetting>, parent?: SettingsTreeGroupElement): SettingsTreeGroupElement {\n\n\t\tconst depth = parent ? this.getDepth(parent) + 1 : 0;\n\t\tconst element = new SettingsTreeGroupElement(tocEntry.id, undefined, tocEntry.label, depth, false);\n\n\t\tconst children: SettingsTreeGroupChild[] = [];\n\t\tif (tocEntry.settings) {\n\t\t\tconst settingChildren = tocEntry.settings.map(s => this.createSettingsTreeSettingElement(s, element))\n\t\t\t\t.filter(el => el.setting.deprecationMessage ? el.isConfigured : true);\n\t\t\tchildren.push(...settingChildren);\n\t\t}\n\n\t\tif (tocEntry.children) {\n\t\t\tconst groupChildren = tocEntry.children.map(child => this.createSettingsTreeGroupElement(child, element));\n\t\t\tchildren.push(...groupChildren);\n\t\t}\n\n\t\telement.children = children;\n\n\t\treturn element;\n\t}\n\n\tprivate getDepth(element: SettingsTreeElement): number {\n\t\tif (element.parent) {\n\t\t\treturn 1 + this.getDepth(element.parent);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate createSettingsTreeSettingElement(setting: ISetting, parent: SettingsTreeGroupElement): SettingsTreeSettingElement {\n\t\tconst inspectResult = inspectSetting(setting.key, this._viewState.settingsTarget, this._configurationService);\n\t\tconst element = new SettingsTreeSettingElement(setting, parent, inspectResult, this._isWorkspaceTrusted);\n\n\t\tconst nameElements = this._treeElementsBySettingName.get(setting.key) || [];\n\t\tnameElements.push(element);\n\t\tthis._treeElementsBySettingName.set(setting.key, nameElements);\n\t\treturn element;\n\t}\n}\n\ninterface IInspectResult {\n\tisConfigured: boolean;\n\tinspected: IConfigurationValue<unknown>;\n\ttargetSelector: 'userLocalValue' | 'userRemoteValue' | 'workspaceValue' | 'workspaceFolderValue';\n}\n\nexport function inspectSetting(key: string, target: SettingsTarget, configurationService: IWorkbenchConfigurationService): IInspectResult {\n\tconst inspectOverrides = URI.isUri(target) ? { resource: target } : undefined;\n\tconst inspected = configurationService.inspect(key, inspectOverrides);\n\tconst targetSelector = target === ConfigurationTarget.USER_LOCAL ? 'userLocalValue' :\n\t\ttarget === ConfigurationTarget.USER_REMOTE ? 'userRemoteValue' :\n\t\t\ttarget === ConfigurationTarget.WORKSPACE ? 'workspaceValue' :\n\t\t\t\t'workspaceFolderValue';\n\tlet isConfigured = typeof inspected[targetSelector] !== 'undefined';\n\tif (!isConfigured) {\n\t\tif (target === ConfigurationTarget.USER_LOCAL) {\n\t\t\tisConfigured = !!configurationService.restrictedSettings.userLocal?.includes(key);\n\t\t} else if (target === ConfigurationTarget.USER_REMOTE) {\n\t\t\tisConfigured = !!configurationService.restrictedSettings.userRemote?.includes(key);\n\t\t} else if (target === ConfigurationTarget.WORKSPACE) {\n\t\t\tisConfigured = !!configurationService.restrictedSettings.workspace?.includes(key);\n\t\t} else if (target instanceof URI) {\n\t\t\tisConfigured = !!configurationService.restrictedSettings.workspaceFolder?.get(target)?.includes(key);\n\t\t}\n\t}\n\n\treturn { isConfigured, inspected, targetSelector };\n}\n\nfunction sanitizeId(id: string): string {\n\treturn id.replace(/[\\.\\/]/, '_');\n}\n\nexport function settingKeyToDisplayFormat(key: string, groupId = ''): { category: string, label: string; } {\n\tconst lastDotIdx = key.lastIndexOf('.');\n\tlet category = '';\n\tif (lastDotIdx >= 0) {\n\t\tcategory = key.substr(0, lastDotIdx);\n\t\tkey = key.substr(lastDotIdx + 1);\n\t}\n\n\tgroupId = groupId.replace(/\\//g, '.');\n\tcategory = trimCategoryForGroup(category, groupId);\n\tcategory = wordifyKey(category);\n\n\tconst label = wordifyKey(key);\n\treturn { category, label };\n}\n\nfunction wordifyKey(key: string): string {\n\tkey = key\n\t\t.replace(/\\.([a-z0-9])/g, (_, p1) => ` › ${p1.toUpperCase()}`) // Replace dot with spaced '>'\n\t\t.replace(/([a-z0-9])([A-Z])/g, '$1 $2') // Camel case to spacing, fooBar => foo Bar\n\t\t.replace(/^[a-z]/g, match => match.toUpperCase()) // Upper casing all first letters, foo => Foo\n\t\t.replace(/\\b\\w+\\b/g, match => { // Upper casing known acronyms\n\t\t\treturn knownAcronyms.has(match.toLowerCase()) ?\n\t\t\t\tmatch.toUpperCase() :\n\t\t\t\tmatch;\n\t\t});\n\n\tfor (const [k, v] of knownTermMappings) {\n\t\tkey = key.replace(new RegExp(`\\\\b${k}\\\\b`, 'gi'), v);\n\t}\n\n\treturn key;\n}\n\nfunction trimCategoryForGroup(category: string, groupId: string): string {\n\tconst doTrim = (forward: boolean) => {\n\t\tconst parts = groupId.split('.');\n\t\twhile (parts.length) {\n\t\t\tconst reg = new RegExp(`^${parts.join('\\\\.')}(\\\\.|$)`, 'i');\n\t\t\tif (reg.test(category)) {\n\t\t\t\treturn category.replace(reg, '');\n\t\t\t}\n\n\t\t\tif (forward) {\n\t\t\t\tparts.pop();\n\t\t\t} else {\n\t\t\t\tparts.shift();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tlet trimmed = doTrim(true);\n\tif (trimmed === null) {\n\t\ttrimmed = doTrim(false);\n\t}\n\n\tif (trimmed === null) {\n\t\ttrimmed = category;\n\t}\n\n\treturn trimmed;\n}\n\nexport function isExcludeSetting(setting: ISetting): boolean {\n\treturn setting.key === 'files.exclude' ||\n\t\tsetting.key === 'search.exclude' ||\n\t\tsetting.key === 'files.watcherExclude';\n}\n\nfunction isObjectRenderableSchema({ type }: IJSONSchema): boolean {\n\treturn type === 'string' || type === 'boolean';\n}\n\nfunction isObjectSetting({\n\ttype,\n\tobjectProperties,\n\tobjectPatternProperties,\n\tobjectAdditionalProperties\n}: ISetting): boolean {\n\tif (type !== 'object') {\n\t\treturn false;\n\t}\n\n\t// object can have any shape\n\tif (\n\t\tisUndefinedOrNull(objectProperties) &&\n\t\tisUndefinedOrNull(objectPatternProperties) &&\n\t\tisUndefinedOrNull(objectAdditionalProperties)\n\t) {\n\t\treturn false;\n\t}\n\n\t// object additional properties allow it to have any shape\n\tif (objectAdditionalProperties === true) {\n\t\treturn false;\n\t}\n\n\tconst schemas = [...Object.values(objectProperties ?? {}), ...Object.values(objectPatternProperties ?? {})];\n\n\tif (typeof objectAdditionalProperties === 'object') {\n\t\tschemas.push(objectAdditionalProperties);\n\t}\n\n\t// Flatten anyof schemas\n\tconst flatSchemas = arrays.flatten(schemas.map((schema): IJSONSchema[] => {\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\treturn schema.anyOf;\n\t\t}\n\t\treturn [schema];\n\t}));\n\n\n\t// This should not render boolean only objects\n\treturn flatSchemas.every(isObjectRenderableSchema) && flatSchemas.some(({ type }) => type === 'string');\n}\n\nfunction settingTypeEnumRenderable(_type: string | string[]) {\n\tconst enumRenderableSettingTypes = ['string', 'boolean', 'null', 'integer', 'number'];\n\tconst type = isArray(_type) ? _type : [_type];\n\treturn type.every(type => enumRenderableSettingTypes.indexOf(type) > -1);\n}\n\nexport const enum SearchResultIdx {\n\tLocal = 0,\n\tRemote = 1,\n\tNewExtensions = 2\n}\n\nexport class SearchResultModel extends SettingsTreeModel {\n\tprivate rawSearchResults: ISearchResult[] | null = null;\n\tprivate cachedUniqueSearchResults: ISearchResult[] | null = null;\n\tprivate newExtensionSearchResults: ISearchResult | null = null;\n\n\treadonly id = 'searchResultModel';\n\n\tconstructor(\n\t\tviewState: ISettingsEditorViewState,\n\t\tisWorkspaceTrusted: boolean,\n\t\t@IWorkbenchConfigurationService configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tsuper(viewState, isWorkspaceTrusted, configurationService);\n\t\tthis.update({ id: 'searchResultModel', label: '' });\n\t}\n\n\tgetUniqueResults(): ISearchResult[] {\n\t\tif (this.cachedUniqueSearchResults) {\n\t\t\treturn this.cachedUniqueSearchResults;\n\t\t}\n\n\t\tif (!this.rawSearchResults) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst localMatchKeys = new Set();\n\t\tconst localResult = this.rawSearchResults[SearchResultIdx.Local];\n\t\tif (localResult) {\n\t\t\tlocalResult.filterMatches.forEach(m => localMatchKeys.add(m.setting.key));\n\t\t}\n\n\t\tconst remoteResult = this.rawSearchResults[SearchResultIdx.Remote];\n\t\tif (remoteResult) {\n\t\t\tremoteResult.filterMatches = remoteResult.filterMatches.filter(m => !localMatchKeys.has(m.setting.key));\n\t\t}\n\n\t\tif (remoteResult) {\n\t\t\tthis.newExtensionSearchResults = this.rawSearchResults[SearchResultIdx.NewExtensions];\n\t\t}\n\n\t\tthis.cachedUniqueSearchResults = [localResult, remoteResult];\n\t\treturn this.cachedUniqueSearchResults;\n\t}\n\n\tgetRawResults(): ISearchResult[] {\n\t\treturn this.rawSearchResults || [];\n\t}\n\n\tsetResult(order: SearchResultIdx, result: ISearchResult | null): void {\n\t\tthis.cachedUniqueSearchResults = null;\n\t\tthis.newExtensionSearchResults = null;\n\n\t\tthis.rawSearchResults = this.rawSearchResults || [];\n\t\tif (!result) {\n\t\t\tdelete this.rawSearchResults[order];\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.exactMatch) {\n\t\t\tthis.rawSearchResults = [];\n\t\t}\n\n\t\tthis.rawSearchResults[order] = result;\n\t\tthis.updateChildren();\n\t}\n\n\tupdateChildren(): void {\n\t\tthis.update({\n\t\t\tid: 'searchResultModel',\n\t\t\tlabel: 'searchResultModel',\n\t\t\tsettings: this.getFlatSettings()\n\t\t});\n\n\t\t// Save time, filter children in the search model instead of relying on the tree filter, which still requires heights to be calculated.\n\t\tconst isRemote = !!this.environmentService.remoteAuthority;\n\n\t\tthis.root.children = this.root.children\n\t\t\t.filter(child => child instanceof SettingsTreeSettingElement && child.matchesAllTags(this._viewState.tagFilters) && child.matchesScope(this._viewState.settingsTarget, isRemote) && child.matchesAnyExtension(this._viewState.extensionFilters) && child.matchesAnyId(this._viewState.idFilters) && (this.containsValidFeature() ? child.matchesAnyFeature(this._viewState.featureFilters) : true));\n\n\t\tif (this.newExtensionSearchResults && this.newExtensionSearchResults.filterMatches.length) {\n\t\t\tconst resultExtensionIds = this.newExtensionSearchResults.filterMatches\n\t\t\t\t.map(result => (<IExtensionSetting>result.setting))\n\t\t\t\t.filter(setting => setting.extensionName && setting.extensionPublisher)\n\t\t\t\t.map(setting => `${setting.extensionPublisher}.${setting.extensionName}`);\n\n\t\t\tconst newExtElement = new SettingsTreeNewExtensionsElement('newExtensions', arrays.distinct(resultExtensionIds));\n\t\t\tnewExtElement.parent = this._root;\n\t\t\tthis._root.children.push(newExtElement);\n\t\t}\n\t}\n\n\tprivate containsValidFeature(): boolean {\n\t\tif (!this._viewState.featureFilters || !this._viewState.featureFilters.size || !tocData.children) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst features = tocData.children.find(child => child.id === 'features');\n\n\t\tif (features && features.children) {\n\t\t\treturn Array.from(this._viewState.featureFilters).some(filter => {\n\t\t\t\treturn features.children?.find(feature => 'features/' + filter === feature.id);\n\t\t\t});\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate getFlatSettings(): ISetting[] {\n\t\tconst flatSettings: ISetting[] = [];\n\t\tarrays.coalesce(this.getUniqueResults())\n\t\t\t.forEach(r => {\n\t\t\t\tflatSettings.push(\n\t\t\t\t\t...r.filterMatches.map(m => m.setting));\n\t\t\t});\n\n\t\treturn flatSettings;\n\t}\n}\n\nexport interface IParsedQuery {\n\ttags: string[];\n\tquery: string;\n\textensionFilters: string[];\n\tidFilters: string[];\n\tfeatureFilters: string[];\n}\n\nconst tagRegex = /(^|\\s)@tag:(\"([^\"]*)\"|[^\"]\\S*)/g;\nconst extensionRegex = /(^|\\s)@ext:(\"([^\"]*)\"|[^\"]\\S*)?/g;\nconst featureRegex = /(^|\\s)@feature:(\"([^\"]*)\"|[^\"]\\S*)?/g;\nconst idRegex = /(^|\\s)@id:(\"([^\"]*)\"|[^\"]\\S*)?/g;\nexport function parseQuery(query: string): IParsedQuery {\n\tconst tags: string[] = [];\n\tconst extensions: string[] = [];\n\tconst features: string[] = [];\n\tconst ids: string[] = [];\n\tquery = query.replace(tagRegex, (_, __, quotedTag, tag) => {\n\t\ttags.push(tag || quotedTag);\n\t\treturn '';\n\t});\n\n\tquery = query.replace(`@${MODIFIED_SETTING_TAG}`, () => {\n\t\ttags.push(MODIFIED_SETTING_TAG);\n\t\treturn '';\n\t});\n\n\tquery = query.replace(extensionRegex, (_, __, quotedExtensionId, extensionId) => {\n\t\tconst extensionIdQuery: string = extensionId || quotedExtensionId;\n\t\tif (extensionIdQuery) {\n\t\t\textensions.push(...extensionIdQuery.split(',').map(s => s.trim()).filter(s => !isFalsyOrWhitespace(s)));\n\t\t}\n\t\treturn '';\n\t});\n\n\tquery = query.replace(featureRegex, (_, __, quotedFeature, feature) => {\n\t\tconst featureQuery: string = feature || quotedFeature;\n\t\tif (featureQuery) {\n\t\t\tfeatures.push(...featureQuery.split(',').map(s => s.trim()).filter(s => !isFalsyOrWhitespace(s)));\n\t\t}\n\t\treturn '';\n\t});\n\n\tquery = query.replace(idRegex, (_, __, quotedId, id) => {\n\t\tconst idRegex: string = id || quotedId;\n\t\tif (idRegex) {\n\t\t\tids.push(...idRegex.split(',').map(s => s.trim()).filter(s => !isFalsyOrWhitespace(s)));\n\t\t}\n\t\treturn '';\n\t});\n\n\tquery = query.trim();\n\n\treturn {\n\t\ttags,\n\t\textensionFilters: extensions,\n\t\tfeatureFilters: features,\n\t\tidFilters: ids,\n\t\tquery\n\t};\n}\n"]}