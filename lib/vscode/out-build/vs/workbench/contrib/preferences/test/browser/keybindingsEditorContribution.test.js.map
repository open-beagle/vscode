{"version":3,"file":"keybindingsEditorContribution.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/preferences/test/browser/keybindingsEditorContribution.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAE3C,SAAS,6BAA6B,CAAC,CAAS,EAAE,CAAS,EAAE,QAAiB;YAC7E,MAAM,MAAM,GAAG,mEAAmC,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClF,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,GAAG,OAAO,CAAC,CAAC;QAC3D,CAAC;QAED,SAAS,WAAW,CAAC,CAAS,EAAE,CAAS;YACxC,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;QAED,SAAS,eAAe,CAAC,CAAS,EAAE,CAAS;YAC5C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;YACrC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAChC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAElC,WAAW,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YAC5C,WAAW,CAAC,yBAAyB,EAAE,yBAAyB,CAAC,CAAC;YAElE,eAAe,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YAEzC,eAAe;YACf,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC1C,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { KeybindingEditorDecorationsRenderer } from 'vs/workbench/contrib/preferences/browser/keybindingsEditorContribution';\n\nsuite('KeybindingsEditorContribution', () => {\n\n\tfunction assertUserSettingsFuzzyEquals(a: string, b: string, expected: boolean): void {\n\t\tconst actual = KeybindingEditorDecorationsRenderer._userSettingsFuzzyEquals(a, b);\n\t\tconst message = expected ? `${a} == ${b}` : `${a} != ${b}`;\n\t\tassert.strictEqual(actual, expected, 'fuzzy: ' + message);\n\t}\n\n\tfunction assertEqual(a: string, b: string): void {\n\t\tassertUserSettingsFuzzyEquals(a, b, true);\n\t}\n\n\tfunction assertDifferent(a: string, b: string): void {\n\t\tassertUserSettingsFuzzyEquals(a, b, false);\n\t}\n\n\ttest('_userSettingsFuzzyEquals', () => {\n\t\tassertEqual('a', 'a');\n\t\tassertEqual('a', 'A');\n\t\tassertEqual('ctrl+a', 'CTRL+A');\n\t\tassertEqual('ctrl+a', ' CTRL+A ');\n\n\t\tassertEqual('ctrl+shift+a', 'shift+ctrl+a');\n\t\tassertEqual('ctrl+shift+a ctrl+alt+b', 'shift+ctrl+a alt+ctrl+b');\n\n\t\tassertDifferent('ctrl+[KeyA]', 'ctrl+a');\n\n\t\t// issue #23335\n\t\tassertEqual('cmd+shift+p', 'shift+cmd+p');\n\t\tassertEqual('cmd+shift+p', 'shift-cmd-p');\n\t});\n});\n"]}