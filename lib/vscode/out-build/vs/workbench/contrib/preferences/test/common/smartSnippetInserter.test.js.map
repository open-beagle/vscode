{"version":3,"file":"smartSnippetInserter.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/preferences/test/common/smartSnippetInserter.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { SmartSnippetInserter } from 'vs/workbench/contrib/preferences/common/smartSnippetInserter';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { Position } from 'vs/editor/common/core/position';\n\nsuite('SmartSnippetInserter', () => {\n\n\tfunction testSmartSnippetInserter(text: string[], runner: (assert: (desiredPos: Position, pos: Position, prepend: string, append: string) => void) => void): void {\n\t\tlet model = createTextModel(text.join('\\n'));\n\t\trunner((desiredPos, pos, prepend, append) => {\n\t\t\tlet actual = SmartSnippetInserter.insertSnippet(model, desiredPos);\n\t\t\tlet expected = {\n\t\t\t\tposition: pos,\n\t\t\t\tprepend,\n\t\t\t\tappend\n\t\t\t};\n\t\t\tassert.deepStrictEqual(actual, expected);\n\t\t});\n\t\tmodel.dispose();\n\t}\n\n\ttest('empty text', () => {\n\t\ttestSmartSnippetInserter([\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(1, 1), '\\n[', ']');\n\t\t});\n\n\t\ttestSmartSnippetInserter([\n\t\t\t' '\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(1, 2), '\\n[', ']');\n\t\t\tassert(new Position(1, 2), new Position(1, 2), '\\n[', ']');\n\t\t});\n\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(1, 18), '\\n[', ']');\n\t\t\tassert(new Position(1, 18), new Position(1, 18), '\\n[', ']');\n\t\t});\n\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t''\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 1), '\\n[', ']');\n\t\t\tassert(new Position(1, 18), new Position(2, 1), '\\n[', ']');\n\t\t\tassert(new Position(2, 1), new Position(2, 1), '\\n[', ']');\n\t\t});\n\t});\n\n\ttest('empty array 1', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[]'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 3), new Position(2, 2), '', '');\n\t\t});\n\t});\n\n\ttest('empty array 2', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[',\n\t\t\t']'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', '');\n\t\t\tassert(new Position(3, 1), new Position(3, 1), '', '');\n\t\t\tassert(new Position(3, 2), new Position(3, 1), '', '');\n\t\t});\n\t});\n\n\ttest('empty array 3', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[',\n\t\t\t'// just some text',\n\t\t\t']'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', '');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', '');\n\t\t\tassert(new Position(3, 1), new Position(3, 1), '', '');\n\t\t\tassert(new Position(3, 2), new Position(3, 1), '', '');\n\t\t\tassert(new Position(4, 1), new Position(4, 1), '', '');\n\t\t\tassert(new Position(4, 2), new Position(4, 1), '', '');\n\t\t});\n\t});\n\n\ttest('one element array 1', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[',\n\t\t\t'{}',\n\t\t\t']'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(3, 1), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 2), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 3), new Position(3, 3), ',', '');\n\t\t\tassert(new Position(4, 1), new Position(4, 1), ',', '');\n\t\t\tassert(new Position(4, 2), new Position(4, 1), ',', '');\n\t\t});\n\t});\n\n\ttest('two elements array 1', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[',\n\t\t\t'{},',\n\t\t\t'{}',\n\t\t\t']'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(3, 1), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 2), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 3), new Position(3, 3), ',', '');\n\t\t\tassert(new Position(3, 4), new Position(3, 4), '', ',');\n\t\t\tassert(new Position(4, 1), new Position(4, 1), '', ',');\n\t\t\tassert(new Position(4, 2), new Position(4, 1), '', ',');\n\t\t\tassert(new Position(4, 3), new Position(4, 3), ',', '');\n\t\t\tassert(new Position(5, 1), new Position(5, 1), ',', '');\n\t\t\tassert(new Position(5, 2), new Position(5, 1), ',', '');\n\t\t});\n\t});\n\n\ttest('two elements array 2', () => {\n\t\ttestSmartSnippetInserter([\n\t\t\t'// just some text',\n\t\t\t'[',\n\t\t\t'{},{}',\n\t\t\t']'\n\t\t], (assert) => {\n\t\t\tassert(new Position(1, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 1), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(2, 2), new Position(2, 2), '', ',');\n\t\t\tassert(new Position(3, 1), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 2), new Position(3, 1), '', ',');\n\t\t\tassert(new Position(3, 3), new Position(3, 3), ',', '');\n\t\t\tassert(new Position(3, 4), new Position(3, 4), '', ',');\n\t\t\tassert(new Position(3, 5), new Position(3, 4), '', ',');\n\t\t\tassert(new Position(3, 6), new Position(3, 6), ',', '');\n\t\t\tassert(new Position(4, 1), new Position(4, 1), ',', '');\n\t\t\tassert(new Position(4, 2), new Position(4, 1), ',', '');\n\t\t});\n\t});\n\n});\n"]}