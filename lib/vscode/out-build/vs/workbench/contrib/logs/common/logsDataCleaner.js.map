{"version":3,"file":"logsDataCleaner.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/logs/common/logsDataCleaner.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUhG,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,sBAAU;QAE9C,YACgD,kBAAgD,EAChE,WAAyB,EACpB,gBAAmC;YAEvE,KAAK,EAAE,CAAC;YAJuC,uBAAkB,GAAlB,kBAAkB,CAA8B;YAChE,gBAAW,GAAX,WAAW,CAAc;YACpB,qBAAgB,GAAhB,gBAAgB,CAAmB;YAGvE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC;QAEO,kBAAkB;YACzB,IAAI,MAAM,GAAQ,UAAU,CAAC,KAAK,IAAI,EAAE;gBACvC,MAAM,GAAG,SAAS,CAAC;gBACnB,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;gBACrH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA,GAAA,mBAAO,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/D,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAClB,MAAM,UAAU,GAAG,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC,CAAC;oBACtC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtG,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;oBAC/E,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;oBAC5E,gBAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBACjG;YACF,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;YACd,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,EAAE;gBACzC,IAAI,MAAM,EAAE;oBACX,YAAY,CAAC,MAAM,CAAC,CAAC;oBACrB,MAAM,GAAG,SAAS,CAAC;iBACnB;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IA/BY,eAAe;QAGzB,WAAA,iDAA4B,CAAA;QAC5B,WAAA,oBAAY,CAAA;QACZ,WAAA,6BAAiB,CAAA;OALP,eAAe,CA+B3B;IA/BY,0CAAe","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { basename, dirname } from 'vs/base/common/resources';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Promises } from 'vs/base/common/async';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: any = setTimeout(async () => {\n\t\t\thandle = undefined;\n\t\t\tconst logsPath = URI.file(this.environmentService.logsPath).with({ scheme: this.environmentService.logFile.scheme });\n\t\t\tconst stat = await this.fileService.resolve(dirname(logsPath));\n\t\t\tif (stat.children) {\n\t\t\t\tconst currentLog = basename(logsPath);\n\t\t\t\tconst allSessions = stat.children.filter(stat => stat.isDirectory && /^\\d{8}T\\d{6}$/.test(stat.name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d.name !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 49));\n\t\t\t\tPromises.settled(toDelete.map(stat => this.fileService.del(stat.resource, { recursive: true })));\n\t\t\t}\n\t\t}, 10 * 1000);\n\t\tthis.lifecycleService.onWillShutdown(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t});\n\t}\n}\n"]}