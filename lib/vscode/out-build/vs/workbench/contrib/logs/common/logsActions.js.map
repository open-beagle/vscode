{"version":3,"sources":["vs/workbench/contrib/logs/common/logsActions.ts"],"names":[],"mappings":"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","file":"logsActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { ILogService, LogLevel, DEFAULT_LOG_LEVEL } from 'vs/platform/log/common/log';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { dirname, basename, isEqual } from 'vs/base/common/resources';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nexport class SetLogLevelAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.setLogLevel';\n\tstatic readonly LABEL = nls.localize('setLogLevel', \"Set Log Level...\");\n\n\tconstructor(id: string, label: string,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\tconst current = this.logService.getLevel();\n\t\tconst entries = [\n\t\t\t{ label: nls.localize('trace', \"Trace\"), level: LogLevel.Trace, description: this.getDescription(LogLevel.Trace, current) },\n\t\t\t{ label: nls.localize('debug', \"Debug\"), level: LogLevel.Debug, description: this.getDescription(LogLevel.Debug, current) },\n\t\t\t{ label: nls.localize('info', \"Info\"), level: LogLevel.Info, description: this.getDescription(LogLevel.Info, current) },\n\t\t\t{ label: nls.localize('warn', \"Warning\"), level: LogLevel.Warning, description: this.getDescription(LogLevel.Warning, current) },\n\t\t\t{ label: nls.localize('err', \"Error\"), level: LogLevel.Error, description: this.getDescription(LogLevel.Error, current) },\n\t\t\t{ label: nls.localize('critical', \"Critical\"), level: LogLevel.Critical, description: this.getDescription(LogLevel.Critical, current) },\n\t\t\t{ label: nls.localize('off', \"Off\"), level: LogLevel.Off, description: this.getDescription(LogLevel.Off, current) },\n\t\t];\n\n\t\treturn this.quickInputService.pick(entries, { placeHolder: nls.localize('selectLogLevel', \"Select log level\"), activeItem: entries[this.logService.getLevel()] }).then(entry => {\n\t\t\tif (entry) {\n\t\t\t\tthis.logService.setLevel(entry.level);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getDescription(level: LogLevel, current: LogLevel): string | undefined {\n\t\tif (DEFAULT_LOG_LEVEL === level && current === level) {\n\t\t\treturn nls.localize('default and current', \"Default & Current\");\n\t\t}\n\t\tif (DEFAULT_LOG_LEVEL === level) {\n\t\t\treturn nls.localize('default', \"Default\");\n\t\t}\n\t\tif (current === level) {\n\t\t\treturn nls.localize('current', \"Current\");\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenWindowSessionLogFileAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openSessionLogFile';\n\tstatic readonly LABEL = nls.localize('openSessionLogFile', \"Open Window Log File (Session)...\");\n\n\tconstructor(id: string, label: string,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst sessionResult = await this.quickInputService.pick(\n\t\t\tthis.getSessions().then(sessions => sessions.map((s, index) => (<IQuickPickItem>{\n\t\t\t\tid: s.toString(),\n\t\t\t\tlabel: basename(s),\n\t\t\t\tdescription: index === 0 ? nls.localize('current', \"Current\") : undefined\n\t\t\t}))),\n\t\t\t{\n\t\t\t\tcanPickMany: false,\n\t\t\t\tplaceHolder: nls.localize('sessions placeholder', \"Select Session\")\n\t\t\t});\n\t\tif (sessionResult) {\n\t\t\tconst logFileResult = await this.quickInputService.pick(\n\t\t\t\tthis.getLogFiles(URI.parse(sessionResult.id!)).then(logFiles => logFiles.map(s => (<IQuickPickItem>{\n\t\t\t\t\tid: s.toString(),\n\t\t\t\t\tlabel: basename(s)\n\t\t\t\t}))),\n\t\t\t\t{\n\t\t\t\t\tcanPickMany: false,\n\t\t\t\t\tplaceHolder: nls.localize('log placeholder', \"Select Log file\")\n\t\t\t\t});\n\t\t\tif (logFileResult) {\n\t\t\t\treturn this.editorService.openEditor({ resource: URI.parse(logFileResult.id!), options: { pinned: true } }).then(() => undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getSessions(): Promise<URI[]> {\n\t\tconst logsPath = URI.file(this.environmentService.logsPath).with({ scheme: this.environmentService.logFile.scheme });\n\t\tconst result: URI[] = [logsPath];\n\t\tconst stat = await this.fileService.resolve(dirname(logsPath));\n\t\tif (stat.children) {\n\t\t\tresult.push(...stat.children\n\t\t\t\t.filter(stat => !isEqual(stat.resource, logsPath) && stat.isDirectory && /^\\d{8}T\\d{6}$/.test(stat.name))\n\t\t\t\t.sort()\n\t\t\t\t.reverse()\n\t\t\t\t.map(d => d.resource));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getLogFiles(session: URI): Promise<URI[]> {\n\t\tconst stat = await this.fileService.resolve(session);\n\t\tif (stat.children) {\n\t\t\treturn stat.children.filter(stat => !stat.isDirectory).map(stat => stat.resource);\n\t\t}\n\t\treturn [];\n\t}\n}\n\n"]}