{"version":3,"file":"extensionQuery.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/extensions/common/extensionQuery.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,KAAK;QAEjB,YAAmB,KAAa,EAAS,MAAc,EAAS,OAAe;YAA5D,UAAK,GAAL,KAAK,CAAQ;YAAS,WAAM,GAAN,MAAM,CAAQ;YAAS,YAAO,GAAP,OAAO,CAAQ;YAC9E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;QAED,MAAM,CAAC,WAAW,CAAC,KAAa;YAC/B,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAU,CAAC;YAC9J,MAAM,WAAW,GAAG;gBACnB,MAAM,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC;gBACtC,UAAU,EAAE,iCAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC;gBACjE,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,IAAI,EAAE,CAAC,EAAE,CAAC;aACD,CAAC;YAEX,MAAM,aAAa,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,UAAU,EAAE,CAAC,CAAC,CAAC;YAC1F,MAAM,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,UAAU,EAAE,CAAC,CAAC,CAAC;YAEtG,OAAO,CAAA,GAAA,gBAAO,CAAA,CACb,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACtB,IAAI,OAAO,IAAI,OAAO,KAAK,MAAM,IAAI,WAAW,IAAI,OAAO,KAAK,UAAU,EAAE;oBAC3E,OAAO,EAAE,CAAC;iBACV;gBACD,IAAI,OAAO,IAAI,WAAW,EAAE;oBAC3B,OAAQ,WAAiD,CAAC,OAAO,CAAC;yBAChE,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,OAAO,IAAI,UAAU,GAAG,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;iBAChF;qBACI;oBACJ,OAAO,aAAa,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;iBAC5D;YACF,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,KAAa;YACzB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,EAAE,EAAU,EAAE,KAAa,EAAE,EAAE;gBACjF,MAAM,GAAG,EAAE,CAAC;gBAEZ,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YAEH,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,KAAK,EAAE,EAAU,EAAE,KAAa,EAAE,EAAE;gBAClF,OAAO,GAAG,EAAE,CAAC;gBAEb,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YAEH,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC1C,CAAC;QAED,QAAQ;YACP,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,MAAM,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC;aAC7D;YACD,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,MAAM,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,CAAC,OAAO,EAAE,CAAC;aAC/D;YAED,OAAO,MAAM,CAAC;QACf,CAAC;QAED,OAAO;YACN,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC;QAED,MAAM,CAAC,KAAY;YAClB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;QACnE,CAAC;KACD;IAzED,sBAyEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\nimport { EXTENSION_CATEGORIES } from 'vs/platform/extensions/common/extensions';\n\nexport class Query {\n\n\tconstructor(public value: string, public sortBy: string, public groupBy: string) {\n\t\tthis.value = value.trim();\n\t}\n\n\tstatic suggestions(query: string): string[] {\n\t\tconst commands = ['installed', 'outdated', 'enabled', 'disabled', 'builtin', 'recommended', 'trustRequired', 'sort', 'category', 'tag', 'ext', 'id'] as const;\n\t\tconst subcommands = {\n\t\t\t'sort': ['installs', 'rating', 'name'],\n\t\t\t'category': EXTENSION_CATEGORIES.map(c => `\"${c.toLowerCase()}\"`),\n\t\t\t'tag': [''],\n\t\t\t'ext': [''],\n\t\t\t'id': ['']\n\t\t} as const;\n\n\t\tconst queryContains = (substr: string) => query.indexOf(substr) > -1;\n\t\tconst hasSort = subcommands.sort.some(subcommand => queryContains(`@sort:${subcommand}`));\n\t\tconst hasCategory = subcommands.category.some(subcommand => queryContains(`@category:${subcommand}`));\n\n\t\treturn flatten(\n\t\t\tcommands.map(command => {\n\t\t\t\tif (hasSort && command === 'sort' || hasCategory && command === 'category') {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tif (command in subcommands) {\n\t\t\t\t\treturn (subcommands as Record<string, readonly string[]>)[command]\n\t\t\t\t\t\t.map(subcommand => `@${command}:${subcommand}${subcommand === '' ? '' : ' '}`);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn queryContains(`@${command}`) ? [] : [`@${command} `];\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tstatic parse(value: string): Query {\n\t\tlet sortBy = '';\n\t\tvalue = value.replace(/@sort:(\\w+)(-\\w*)?/g, (match, by: string, order: string) => {\n\t\t\tsortBy = by;\n\n\t\t\treturn '';\n\t\t});\n\n\t\tlet groupBy = '';\n\t\tvalue = value.replace(/@group:(\\w+)(-\\w*)?/g, (match, by: string, order: string) => {\n\t\t\tgroupBy = by;\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn new Query(value, sortBy, groupBy);\n\t}\n\n\ttoString(): string {\n\t\tlet result = this.value;\n\n\t\tif (this.sortBy) {\n\t\t\tresult = `${result}${result ? ' ' : ''}@sort:${this.sortBy}`;\n\t\t}\n\t\tif (this.groupBy) {\n\t\t\tresult = `${result}${result ? ' ' : ''}@group:${this.groupBy}`;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tisValid(): boolean {\n\t\treturn !/@outdated/.test(this.value);\n\t}\n\n\tequals(other: Query): boolean {\n\t\treturn this.value === other.value && this.sortBy === other.sortBy;\n\t}\n}\n"]}