{"version":3,"sources":["vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,+BAA+B,GAAG,6BAA6B,CAAC;IAChE,QAAA,6BAA6B,GAAgB;QACzD,EAAE,EAAE,uCAA+B;QACnC,aAAa,EAAE,IAAI;QACnB,mBAAmB,EAAE,IAAI;QACzB,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAA2B,EAAE,IAAY,CAAC;QAC1D,oBAAoB,EAAE,KAAK;QAC3B,UAAU,EAAE;YACX,eAAe,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAqC,EAAE,IAA4K,CAAC;gBAC1O,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,kDAA4B;oBACrC,YAAY,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAuC,EAAE,IAAmE,CAAC;iBACpI;aACD;YACD,uBAAuB,EAAE;gBACxB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAA6C,EAAE,IAAsM,CAAC;gBAC5Q,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,kDAA4B;oBACrC,YAAY,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAuC,EAAE,IAAmE,CAAC;iBACpI;aACD;SACD;KACD,CAAC;IAEW,QAAA,qCAAqC,GAAW;QAC5D,GAAG;QACH,mGAAmG;QACnG,gFAAgF;QAChF,EAAE;QACF,kFAAkF;QAClF,wBAAwB;QACxB,MAAM;QACN,MAAM;QACN,4GAA4G;QAC5G,gCAAgC;QAChC,MAAM;QACN,KAAK;QACL,GAAG;KACH,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC","file":"extensionsFileTemplate.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { EXTENSION_IDENTIFIER_PATTERN } from 'vs/platform/extensionManagement/common/extensionManagement';\n\nexport const ExtensionsConfigurationSchemaId = 'vscode://schemas/extensions';\nexport const ExtensionsConfigurationSchema: IJSONSchema = {\n\tid: ExtensionsConfigurationSchemaId,\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\ttype: 'object',\n\ttitle: localize('app.extensions.json.title', \"Extensions\"),\n\tadditionalProperties: false,\n\tproperties: {\n\t\trecommendations: {\n\t\t\ttype: 'array',\n\t\t\tdescription: localize('app.extensions.json.recommendations', \"List of extensions which should be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t},\n\t\t},\n\t\tunwantedRecommendations: {\n\t\t\ttype: 'array',\n\t\t\tdescription: localize('app.extensions.json.unwantedRecommendations', \"List of extensions recommended by VS Code that should not be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t},\n\t\t},\n\t}\n};\n\nexport const ExtensionsConfigurationInitialContent: string = [\n\t'{',\n\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.',\n\t'\\t// Extension identifier format: ${publisher}.${name}. Example: vscode.csharp',\n\t'',\n\t'\\t// List of extensions which should be recommended for users of this workspace.',\n\t'\\t\"recommendations\": [',\n\t'\\t\\t',\n\t'\\t],',\n\t'\\t// List of extensions recommended by VS Code that should not be recommended for users of this workspace.',\n\t'\\t\"unwantedRecommendations\": [',\n\t'\\t\\t',\n\t'\\t]',\n\t'}'\n].join('\\n');\n"]}