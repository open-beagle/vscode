{"version":3,"sources":["vs/workbench/contrib/extensions/common/runtimeExtensionsInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,sBAAuB,SAAQ,oBAAW;QAAvD;;YAiBU,aAAQ,GAAG,SAAG,CAAC,IAAI,CAAC;gBAC5B,MAAM,EAAE,oBAAoB;gBAC5B,IAAI,EAAE,SAAS;aACf,CAAC,CAAC;QAaJ,CAAC;QA7BA,IAAa,MAAM;YAClB,OAAO,sBAAsB,CAAC,EAAE,CAAC;QAClC,CAAC;QAGD,MAAM,KAAK,QAAQ;YAClB,IAAI,CAAC,sBAAsB,CAAC,SAAS,IAAI,sBAAsB,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE;gBACvF,sBAAsB,CAAC,SAAS,GAAG,IAAI,sBAAsB,EAAE,CAAC;aAChE;YAED,OAAO,sBAAsB,CAAC,SAAS,CAAC;QACzC,CAAC;QAOQ,OAAO;YACf,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAqB,EAAE,IAAoB,CAAC,CAAC;QAClE,CAAC;QAEQ,QAAQ;YAChB,OAAO,KAAK,CAAC;QACd,CAAC;QAEQ,OAAO,CAAC,KAAc;YAC9B,OAAO,KAAK,YAAY,sBAAsB,CAAC;QAChD,CAAC;;IAhCF,wDAiCC;IA/BgB,yBAAE,GAAG,mCAAmC,CAAC","file":"runtimeExtensionsInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorInput } from 'vs/workbench/common/editor';\n\nexport class RuntimeExtensionsInput extends EditorInput {\n\n\tstatic readonly ID = 'workbench.runtimeExtensions.input';\n\n\toverride get typeId(): string {\n\t\treturn RuntimeExtensionsInput.ID;\n\t}\n\n\tstatic _instance: RuntimeExtensionsInput;\n\tstatic get instance() {\n\t\tif (!RuntimeExtensionsInput._instance || RuntimeExtensionsInput._instance.isDisposed()) {\n\t\t\tRuntimeExtensionsInput._instance = new RuntimeExtensionsInput();\n\t\t}\n\n\t\treturn RuntimeExtensionsInput._instance;\n\t}\n\n\treadonly resource = URI.from({\n\t\tscheme: 'runtime-extensions',\n\t\tpath: 'default'\n\t});\n\n\toverride getName(): string {\n\t\treturn nls.localize('extensionsInputName', \"Running Extensions\");\n\t}\n\n\toverride canSplit(): boolean {\n\t\treturn false;\n\t}\n\n\toverride matches(other: unknown): boolean {\n\t\treturn other instanceof RuntimeExtensionsInput;\n\t}\n}\n"]}