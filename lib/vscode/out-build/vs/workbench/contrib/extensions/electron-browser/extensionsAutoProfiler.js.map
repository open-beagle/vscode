{"version":3,"sources":["vs/workbench/contrib/extensions/electron-browser/extensionsAutoProfiler.ts"],"names":[],"mappings":"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","file":"extensionsAutoProfiler.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IExtensionService, IResponsiveStateChangeEvent, IExtensionHostProfile, ProfileSession } from 'vs/workbench/services/extensions/common/extensions';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { localize } from 'vs/nls';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { RuntimeExtensionsInput } from 'vs/workbench/contrib/extensions/common/runtimeExtensionsInput';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { createSlowExtensionAction } from 'vs/workbench/contrib/extensions/electron-browser/extensionsSlowActions';\nimport { ExtensionHostProfiler } from 'vs/workbench/services/extensions/electron-browser/extensionHostProfiler';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport class ExtensionsAutoProfiler extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _blame = new Set<string>();\n\tprivate _session: CancellationTokenSource | undefined;\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IExtensionHostProfileService private readonly _extensionProfileService: IExtensionHostProfileService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentServie: INativeWorkbenchEnvironmentService,\n\t\t@IFileService private readonly _fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis._register(_extensionService.onDidChangeResponsiveChange(this._onDidChangeResponsiveChange, this));\n\t}\n\n\tprivate async _onDidChangeResponsiveChange(event: IResponsiveStateChangeEvent): Promise<void> {\n\n\t\tconst port = await this._extensionService.getInspectPort(true);\n\n\t\tif (!port) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.isResponsive && this._session) {\n\t\t\t// stop profiling when responsive again\n\t\t\tthis._session.cancel();\n\n\t\t} else if (!event.isResponsive && !this._session) {\n\t\t\t// start profiling if not yet profiling\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis._session = cts;\n\n\n\t\t\tlet session: ProfileSession;\n\t\t\ttry {\n\t\t\t\tsession = await this._instantiationService.createInstance(ExtensionHostProfiler, port).start();\n\n\t\t\t} catch (err) {\n\t\t\t\tthis._session = undefined;\n\t\t\t\t// fail silent as this is often\n\t\t\t\t// caused by another party being\n\t\t\t\t// connected already\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// wait 5 seconds or until responsive again\n\t\t\tawait new Promise(resolve => {\n\t\t\t\tcts.token.onCancellationRequested(resolve);\n\t\t\t\tsetTimeout(resolve, 5e3);\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\t// stop profiling and analyse results\n\t\t\t\tthis._processCpuProfile(await session.stop());\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tthis._session = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _processCpuProfile(profile: IExtensionHostProfile) {\n\n\t\tinterface NamedSlice {\n\t\t\tid: string;\n\t\t\ttotal: number;\n\t\t\tpercentage: number;\n\t\t}\n\n\t\tlet data: NamedSlice[] = [];\n\t\tfor (let i = 0; i < profile.ids.length; i++) {\n\t\t\tlet id = profile.ids[i];\n\t\t\tlet total = profile.deltas[i];\n\t\t\tdata.push({ id, total, percentage: 0 });\n\t\t}\n\n\t\t// merge data by identifier\n\t\tlet anchor = 0;\n\t\tdata.sort((a, b) => a.id.localeCompare(b.id));\n\t\tfor (let i = 1; i < data.length; i++) {\n\t\t\tif (data[anchor].id === data[i].id) {\n\t\t\t\tdata[anchor].total += data[i].total;\n\t\t\t} else {\n\t\t\t\tanchor += 1;\n\t\t\t\tdata[anchor] = data[i];\n\t\t\t}\n\t\t}\n\t\tdata = data.slice(0, anchor + 1);\n\n\t\tconst duration = profile.endTime - profile.startTime;\n\t\tconst percentage = duration / 100;\n\t\tlet top: NamedSlice | undefined;\n\t\tfor (const slice of data) {\n\t\t\tslice.percentage = Math.round(slice.total / percentage);\n\t\t\tif (!top || top.percentage < slice.percentage) {\n\t\t\t\ttop = slice;\n\t\t\t}\n\t\t}\n\n\t\tif (!top) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst extension = await this._extensionService.getExtension(top.id);\n\t\tif (!extension) {\n\t\t\t// not an extension => idle, gc, self?\n\t\t\treturn;\n\t\t}\n\n\n\t\t// print message to log\n\t\tconst path = joinPath(this._environmentServie.tmpDir, `exthost-${Math.random().toString(16).slice(2, 8)}.cpuprofile`);\n\t\tawait this._fileService.writeFile(path, VSBuffer.fromString(JSON.stringify(profile.data)));\n\t\tthis._logService.warn(`UNRESPONSIVE extension host, '${top.id}' took ${top!.percentage}% of ${duration / 1e3}ms, saved PROFILE here: '${path}'`, data);\n\n\n\t\t/* __GDPR__\n\t\t\t\"exthostunresponsive\" : {\n\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"data\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\t\t\t}\n\t\t*/\n\t\tthis._telemetryService.publicLog('exthostunresponsive', {\n\t\t\tduration,\n\t\t\tdata,\n\t\t});\n\n\t\t// add to running extensions view\n\t\tthis._extensionProfileService.setUnresponsiveProfile(extension.identifier, profile);\n\n\t\t// prompt: when really slow/greedy\n\t\tif (!(top.percentage >= 99 && top.total >= 5e6)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = await this._instantiationService.invokeFunction(createSlowExtensionAction, extension, profile);\n\n\t\tif (!action) {\n\t\t\t// cannot report issues against this extension...\n\t\t\treturn;\n\t\t}\n\n\t\t// only blame once per extension, don't blame too often\n\t\tif (this._blame.has(ExtensionIdentifier.toKey(extension.identifier)) || this._blame.size >= 3) {\n\t\t\treturn;\n\t\t}\n\t\tthis._blame.add(ExtensionIdentifier.toKey(extension.identifier));\n\n\t\t// user-facing message when very bad...\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Warning,\n\t\t\tlocalize(\n\t\t\t\t'unresponsive-exthost',\n\t\t\t\t\"The extension '{0}' took a very long time to complete its last operation and it has prevented other extensions from running.\",\n\t\t\t\textension.displayName || extension.name\n\t\t\t),\n\t\t\t[{\n\t\t\t\tlabel: localize('show', 'Show Extensions'),\n\t\t\t\trun: () => this._editorService.openEditor(RuntimeExtensionsInput.instance, { pinned: true })\n\t\t\t},\n\t\t\t\taction\n\t\t\t],\n\t\t\t{ silent: true }\n\t\t);\n\t}\n}\n"]}