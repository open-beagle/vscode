{"version":3,"sources":["vs/workbench/contrib/extensions/electron-browser/reportExtensionIssueAction.ts"],"names":[],"mappings":"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","file":"reportExtensionIssueAction.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Action } from 'vs/base/common/actions';\nimport { IExtension } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IExtensionsStatus, IExtensionHostProfile } from 'vs/workbench/services/extensions/common/extensions';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { ExtensionType, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { URI } from 'vs/base/common/uri';\n\nconst builtinExtensionIssueUrl = 'https://github.com/microsoft/vscode';\n\nexport class ReportExtensionIssueAction extends Action {\n\n\tprivate static readonly _id = 'workbench.extensions.action.reportExtensionIssue';\n\tprivate static readonly _label = nls.localize('reportExtensionIssue', \"Report Issue\");\n\n\tprivate _url: string | undefined;\n\n\tconstructor(\n\t\tprivate extension: {\n\t\t\tdescription: IExtensionDescription;\n\t\t\tmarketplaceInfo: IExtension;\n\t\t\tstatus?: IExtensionsStatus;\n\t\t\tunresponsiveProfile?: IExtensionHostProfile\n\t\t},\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService\n\t) {\n\t\tsuper(ReportExtensionIssueAction._id, ReportExtensionIssueAction._label, 'extension-action report-issue');\n\n\t\tthis.enabled = extension.description.isBuiltin || (!!extension.description.repository && !!extension.description.repository.url);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (!this._url) {\n\t\t\tthis._url = await this._generateNewIssueUrl(this.extension);\n\t\t}\n\t\tthis.openerService.open(URI.parse(this._url));\n\t}\n\n\tprivate async _generateNewIssueUrl(extension: {\n\t\tdescription: IExtensionDescription;\n\t\tmarketplaceInfo: IExtension;\n\t\tstatus?: IExtensionsStatus;\n\t\tunresponsiveProfile?: IExtensionHostProfile\n\t}): Promise<string> {\n\t\tlet baseUrl = extension.marketplaceInfo && extension.marketplaceInfo.type === ExtensionType.User && extension.description.repository ? extension.description.repository.url : undefined;\n\t\tif (!baseUrl && extension.description.isBuiltin) {\n\t\t\tbaseUrl = builtinExtensionIssueUrl;\n\t\t}\n\t\tif (!!baseUrl) {\n\t\t\tbaseUrl = `${baseUrl.indexOf('.git') !== -1 ? baseUrl.substr(0, baseUrl.length - 4) : baseUrl}/issues/new/`;\n\t\t} else {\n\t\t\tbaseUrl = this.productService.reportIssueUrl!;\n\t\t}\n\n\t\tlet reason = 'Bug';\n\t\tlet title = 'Extension issue';\n\t\tlet message = ':warning: We have written the needed data into your clipboard. Please paste! :warning:';\n\t\tthis.clipboardService.writeText('```json \\n' + JSON.stringify(extension.status, null, '\\t') + '\\n```');\n\n\t\tconst os = await this.nativeHostService.getOSProperties();\n\t\tconst osVersion = `${os.type} ${os.arch} ${os.release}`;\n\t\tconst queryStringPrefix = baseUrl.indexOf('?') === -1 ? '?' : '&';\n\t\tconst body = encodeURIComponent(\n\t\t\t`- Issue Type: \\`${reason}\\`\n- Extension Name: \\`${extension.description.name}\\`\n- Extension Version: \\`${extension.description.version}\\`\n- OS Version: \\`${osVersion}\\`\n- VS Code version: \\`${this.productService.version}\\`\\n\\n${message}`\n\t\t);\n\n\t\treturn `${baseUrl}${queryStringPrefix}body=${body}&title=${encodeURIComponent(title)}`;\n\t}\n}\n"]}