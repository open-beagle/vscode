{"version":3,"sources":["vs/workbench/contrib/extensions/electron-browser/extensions.contribution.ts"],"names":[],"mappings":"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","file":"extensions.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { SyncActionDescriptor, MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IWorkbenchActionRegistry, Extensions as WorkbenchActionExtensions } from 'vs/workbench/common/actions';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorDescriptor, IEditorRegistry } from 'vs/workbench/browser/editor';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { RuntimeExtensionsEditor, IExtensionHostProfileService, StartExtensionHostProfileAction, StopExtensionHostProfileAction, CONTEXT_PROFILE_SESSION_STATE, CONTEXT_EXTENSION_HOST_PROFILE_RECORDED, SaveExtensionHostProfileAction } from 'vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor';\nimport { DebugExtensionHostAction } from 'vs/workbench/contrib/extensions/electron-browser/debugExtensionHostAction';\nimport { EditorInput, IEditorInputSerializer, IEditorInputFactoryRegistry, ActiveEditorContext, EditorExtensions } from 'vs/workbench/common/editor';\nimport { ExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-browser/extensionProfileService';\nimport { RuntimeExtensionsInput } from 'vs/workbench/contrib/extensions/common/runtimeExtensionsInput';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ExtensionsAutoProfiler } from 'vs/workbench/contrib/extensions/electron-browser/extensionsAutoProfiler';\nimport { OpenExtensionsFolderAction } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionsActions';\nimport { ExtensionsLabel } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IExtensionRecommendationNotificationService } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { ExtensionRecommendationNotificationServiceChannel } from 'vs/platform/extensionRecommendations/electron-sandbox/extensionRecommendationsIpc';\nimport { Codicon } from 'vs/base/common/codicons';\n\n// Singletons\nregisterSingleton(IExtensionHostProfileService, ExtensionHostProfileService, true);\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsAutoProfiler, LifecyclePhase.Eventually);\n\n// Running Extensions Editor\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(RuntimeExtensionsEditor, RuntimeExtensionsEditor.ID, localize('runtimeExtension', \"Running Extensions\")),\n\t[new SyncDescriptor(RuntimeExtensionsInput)]\n);\n\nclass RuntimeExtensionsInputSerializer implements IEditorInputSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\tserialize(editorInput: EditorInput): string {\n\t\treturn '';\n\t}\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput {\n\t\treturn RuntimeExtensionsInput.instance;\n\t}\n}\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(RuntimeExtensionsInput.ID, RuntimeExtensionsInputSerializer);\n\n\n// Global actions\nconst actionRegistry = Registry.as<IWorkbenchActionRegistry>(WorkbenchActionExtensions.WorkbenchActions);\n\nclass ExtensionsContributions implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionRecommendationNotificationService extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsharedProcessService.registerChannel('extensionRecommendationNotification', new ExtensionRecommendationNotificationServiceChannel(extensionRecommendationNotificationService));\n\t\tconst openExtensionsFolderActionDescriptor = SyncActionDescriptor.from(OpenExtensionsFolderAction);\n\t\tactionRegistry.registerWorkbenchAction(openExtensionsFolderActionDescriptor, 'Extensions: Open Extensions Folder', ExtensionsLabel);\n\t}\n}\n\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsContributions, LifecyclePhase.Starting);\n\n// Register Commands\n\nCommandsRegistry.registerCommand(DebugExtensionHostAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(DebugExtensionHostAction).run();\n});\n\nCommandsRegistry.registerCommand(StartExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(StartExtensionHostProfileAction, StartExtensionHostProfileAction.ID, StartExtensionHostProfileAction.LABEL).run();\n});\n\nCommandsRegistry.registerCommand(StopExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(StopExtensionHostProfileAction, StopExtensionHostProfileAction.ID, StopExtensionHostProfileAction.LABEL).run();\n});\n\nCommandsRegistry.registerCommand(SaveExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(SaveExtensionHostProfileAction, SaveExtensionHostProfileAction.ID, SaveExtensionHostProfileAction.LABEL).run();\n});\n\n// Running extensions\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: DebugExtensionHostAction.ID,\n\t\ttitle: DebugExtensionHostAction.LABEL,\n\t\ticon: Codicon.debugStart\n\t},\n\tgroup: 'navigation',\n\twhen: ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID)\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: StartExtensionHostProfileAction.ID,\n\t\ttitle: StartExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.circleFilled\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.notEqualsTo('running'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: StopExtensionHostProfileAction.ID,\n\t\ttitle: StopExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.debugStop\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.isEqualTo('running'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: SaveExtensionHostProfileAction.ID,\n\t\ttitle: SaveExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.saveAll,\n\t\tprecondition: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID))\n});\n"]}