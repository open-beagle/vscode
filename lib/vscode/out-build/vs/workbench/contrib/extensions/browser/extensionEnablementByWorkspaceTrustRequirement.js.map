{"version":3,"file":"extensionEnablementByWorkspaceTrustRequirement.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/extensions/browser/extensionEnablementByWorkspaceTrustRequirement.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG,IAAa,8CAA8C,GAA3D,MAAa,8CAA+C,SAAQ,sBAAU;QAE7E,YACmC,+BAAiE,EAC/D,gBAAmC,EAChB,0BAAgE;YAEvH,KAAK,EAAE,CAAC;YAH4B,qBAAgB,GAAhB,gBAAgB,CAAmB;YAChB,+BAA0B,GAA1B,0BAA0B,CAAsC;YAIvH,IAAI,CAAC,SAAS,CAAC,+BAA+B,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClH,CAAC;QAEO,KAAK,CAAC,qBAAqB,CAAC,OAAgB;YACnD,IAAI,OAAO,EAAE;gBACZ,uBAAuB;gBACvB,MAAM,IAAI,CAAC,0BAA0B,CAAC,2CAA2C,EAAE,CAAC;aACpF;iBAAM;gBACN,uBAAuB;gBACvB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;gBAC3C,MAAM,IAAI,CAAC,0BAA0B,CAAC,2CAA2C,EAAE,CAAC;gBACpF,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;aAC5C;QACF,CAAC;KACD,CAAA;IAvBY,8CAA8C;QAGxD,WAAA,iDAAgC,CAAA;QAChC,WAAA,8BAAiB,CAAA;QACjB,WAAA,0DAAoC,CAAA;OAL1B,8CAA8C,CAuB1D;IAvBY,wGAA8C","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\n\nexport class ExtensionEnablementByWorkspaceTrustRequirement extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(workspaceTrustManagementService.onDidChangeTrust(trusted => this.onDidChangeTrustState(trusted)));\n\t}\n\n\tprivate async onDidChangeTrustState(trusted: boolean): Promise<void> {\n\t\tif (trusted) {\n\t\t\t// Untrusted -> Trusted\n\t\t\tawait this.extensionEnablementService.updateEnablementByWorkspaceTrustRequirement();\n\t\t} else {\n\t\t\t// Trusted -> Untrusted\n\t\t\tthis.extensionService.stopExtensionHosts();\n\t\t\tawait this.extensionEnablementService.updateEnablementByWorkspaceTrustRequirement();\n\t\t\tthis.extensionService.startExtensionHosts();\n\t\t}\n\t}\n}\n"]}