{"version":3,"file":"extensionsWorkbenchService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/extensions/test/electron-browser/extensionsWorkbenchService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sinon from 'sinon';\nimport * as assert from 'assert';\nimport * as fs from 'fs';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IExtensionsWorkbenchService, ExtensionState, AutoCheckUpdatesConfigurationKey, AutoUpdateConfigurationKey } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { ExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/browser/extensionsWorkbenchService';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension, IGalleryExtension,\n\tDidInstallExtensionEvent, DidUninstallExtensionEvent, InstallExtensionEvent, IGalleryExtensionAssets, IExtensionIdentifier, InstallOperation, IExtensionTipsService, IGalleryMetadata\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IExtensionRecommendationsService } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { TestExtensionEnablementService } from 'vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { TestSharedProcessService } from 'vs/workbench/test/electron-browser/workbenchTestServices';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { ProgressService } from 'vs/workbench/services/progress/browser/progressService';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { NativeURLService } from 'vs/platform/url/common/urlService';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionType, IExtension, ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { RemoteAgentService } from 'vs/workbench/services/remote/electron-sandbox/remoteAgentServiceImpl';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { TestLifecycleService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IExperimentService } from 'vs/workbench/contrib/experiments/common/experimentService';\nimport { TestExperimentService } from 'vs/workbench/contrib/experiments/test/electron-browser/experimentService.test';\nimport { ExtensionTipsService } from 'vs/platform/extensionManagement/electron-sandbox/extensionTipsService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\n\nsuite('ExtensionsWorkbenchServiceTest', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet testObject: IExtensionsWorkbenchService;\n\n\tlet installEvent: Emitter<InstallExtensionEvent>,\n\t\tdidInstallEvent: Emitter<DidInstallExtensionEvent>,\n\t\tuninstallEvent: Emitter<IExtensionIdentifier>,\n\t\tdidUninstallEvent: Emitter<DidUninstallExtensionEvent>;\n\n\tsuiteSetup(() => {\n\t\tinstallEvent = new Emitter<InstallExtensionEvent>();\n\t\tdidInstallEvent = new Emitter<DidInstallExtensionEvent>();\n\t\tuninstallEvent = new Emitter<IExtensionIdentifier>();\n\t\tdidUninstallEvent = new Emitter<DidUninstallExtensionEvent>();\n\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(ILogService, NullLogService);\n\t\tinstantiationService.stub(IProgressService, ProgressService);\n\t\tinstantiationService.stub(IProductService, {});\n\n\t\tinstantiationService.stub(IExtensionGalleryService, ExtensionGalleryService);\n\t\tinstantiationService.stub(IURLService, NativeURLService);\n\t\tinstantiationService.stub(ISharedProcessService, TestSharedProcessService);\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\n\t\tinstantiationService.stub(IWorkspaceContextService, new TestContextService());\n\t\tinstantiationService.stub(IConfigurationService, <Partial<IConfigurationService>>{\n\t\t\tonDidChangeConfiguration: () => { return undefined!; },\n\t\t\tgetValue: (key?: string) => {\n\t\t\t\treturn (key === AutoCheckUpdatesConfigurationKey || key === AutoUpdateConfigurationKey) ? true : undefined;\n\t\t\t}\n\t\t});\n\n\t\tinstantiationService.stub(IRemoteAgentService, RemoteAgentService);\n\n\t\tinstantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\t\tonInstallExtension: installEvent.event,\n\t\t\tonDidInstallExtension: didInstallEvent.event,\n\t\t\tonUninstallExtension: uninstallEvent.event,\n\t\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\t\tasync getInstalled() { return []; },\n\t\t\tasync getExtensionsReport() { return []; },\n\t\t\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata) {\n\t\t\t\tlocal.identifier.uuid = metadata.id;\n\t\t\t\tlocal.publisherDisplayName = metadata.publisherDisplayName;\n\t\t\t\tlocal.publisherId = metadata.publisherId;\n\t\t\t\treturn local;\n\t\t\t}\n\t\t});\n\n\t\tinstantiationService.stub(IExtensionManagementServerService, <IExtensionManagementServerService>{\n\t\t\tlocalExtensionManagementServer: {\n\t\t\t\textensionManagementService: instantiationService.get(IExtensionManagementService)\n\t\t\t}\n\t\t});\n\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\n\t\tinstantiationService.stub(ILifecycleService, new TestLifecycleService());\n\t\tinstantiationService.stub(IExperimentService, instantiationService.createInstance(TestExperimentService));\n\t\tinstantiationService.stub(IExtensionTipsService, instantiationService.createInstance(ExtensionTipsService));\n\t\tinstantiationService.stub(IExtensionRecommendationsService, {});\n\n\t\tinstantiationService.stub(INotificationService, { prompt: () => null! });\n\t});\n\n\tsetup(async () => {\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', []);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage());\n\t\tinstantiationService.stubPromise(INotificationService, 'prompt', 0);\n\t\tawait (<TestExtensionEnablementService>instantiationService.get(IWorkbenchExtensionEnablementService)).reset();\n\t});\n\n\tteardown(() => {\n\t\t(<ExtensionsWorkbenchService>testObject).dispose();\n\t});\n\n\ttest('test gallery extension', async () => {\n\t\tconst expected = aGalleryExtension('expectedName', {\n\t\t\tdisplayName: 'expectedDisplayName',\n\t\t\tversion: '1.5.0',\n\t\t\tpublisherId: 'expectedPublisherId',\n\t\t\tpublisher: 'expectedPublisher',\n\t\t\tpublisherDisplayName: 'expectedPublisherDisplayName',\n\t\t\tdescription: 'expectedDescription',\n\t\t\tinstallCount: 1000,\n\t\t\trating: 4,\n\t\t\tratingCount: 100\n\t\t}, {\n\t\t\tdependencies: ['pub.1', 'pub.2'],\n\t\t}, {\n\t\t\tmanifest: { uri: 'uri:manifest', fallbackUri: 'fallback:manifest' },\n\t\t\treadme: { uri: 'uri:readme', fallbackUri: 'fallback:readme' },\n\t\t\tchangelog: { uri: 'uri:changelog', fallbackUri: 'fallback:changlog' },\n\t\t\tdownload: { uri: 'uri:download', fallbackUri: 'fallback:download' },\n\t\t\ticon: { uri: 'uri:icon', fallbackUri: 'fallback:icon' },\n\t\t\tlicense: { uri: 'uri:license', fallbackUri: 'fallback:license' },\n\t\t\trepository: { uri: 'uri:repository', fallbackUri: 'fallback:repository' },\n\t\t\tcoreTranslations: []\n\t\t});\n\n\t\ttestObject = await aWorkbenchService();\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(expected));\n\n\t\treturn testObject.queryGallery(CancellationToken.None).then(pagedResponse => {\n\t\t\tassert.strictEqual(1, pagedResponse.firstPage.length);\n\t\t\tconst actual = pagedResponse.firstPage[0];\n\n\t\t\tassert.strictEqual(ExtensionType.User, actual.type);\n\t\t\tassert.strictEqual('expectedName', actual.name);\n\t\t\tassert.strictEqual('expectedDisplayName', actual.displayName);\n\t\t\tassert.strictEqual('expectedpublisher.expectedname', actual.identifier.id);\n\t\t\tassert.strictEqual('expectedPublisher', actual.publisher);\n\t\t\tassert.strictEqual('expectedPublisherDisplayName', actual.publisherDisplayName);\n\t\t\tassert.strictEqual('1.5.0', actual.version);\n\t\t\tassert.strictEqual('1.5.0', actual.latestVersion);\n\t\t\tassert.strictEqual('expectedDescription', actual.description);\n\t\t\tassert.strictEqual('uri:icon', actual.iconUrl);\n\t\t\tassert.strictEqual('fallback:icon', actual.iconUrlFallback);\n\t\t\tassert.strictEqual('uri:license', actual.licenseUrl);\n\t\t\tassert.strictEqual(ExtensionState.Uninstalled, actual.state);\n\t\t\tassert.strictEqual(1000, actual.installCount);\n\t\t\tassert.strictEqual(4, actual.rating);\n\t\t\tassert.strictEqual(100, actual.ratingCount);\n\t\t\tassert.strictEqual(false, actual.outdated);\n\t\t\tassert.deepEqual(['pub.1', 'pub.2'], actual.dependencies);\n\t\t});\n\t});\n\n\ttest('test for empty installed extensions', async () => {\n\t\ttestObject = await aWorkbenchService();\n\n\t\tassert.deepEqual([], testObject.local);\n\t});\n\n\ttest('test for installed extensions', async () => {\n\t\tconst expected1 = aLocalExtension('local1', {\n\t\t\tpublisher: 'localPublisher1',\n\t\t\tversion: '1.1.0',\n\t\t\tdisplayName: 'localDisplayName1',\n\t\t\tdescription: 'localDescription1',\n\t\t\ticon: 'localIcon1',\n\t\t\textensionDependencies: ['pub.1', 'pub.2'],\n\t\t}, {\n\t\t\ttype: ExtensionType.User,\n\t\t\treadmeUrl: 'localReadmeUrl1',\n\t\t\tchangelogUrl: 'localChangelogUrl1',\n\t\t\tlocation: URI.file('localPath1')\n\t\t});\n\t\tconst expected2 = aLocalExtension('local2', {\n\t\t\tpublisher: 'localPublisher2',\n\t\t\tversion: '1.2.0',\n\t\t\tdisplayName: 'localDisplayName2',\n\t\t\tdescription: 'localDescription2',\n\t\t}, {\n\t\t\ttype: ExtensionType.System,\n\t\t\treadmeUrl: 'localReadmeUrl2',\n\t\t\tchangelogUrl: 'localChangelogUrl2',\n\t\t});\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [expected1, expected2]);\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actuals = testObject.local;\n\t\tassert.strictEqual(2, actuals.length);\n\n\t\tlet actual = actuals[0];\n\t\tassert.strictEqual(ExtensionType.User, actual.type);\n\t\tassert.strictEqual('local1', actual.name);\n\t\tassert.strictEqual('localDisplayName1', actual.displayName);\n\t\tassert.strictEqual('localpublisher1.local1', actual.identifier.id);\n\t\tassert.strictEqual('localPublisher1', actual.publisher);\n\t\tassert.strictEqual('1.1.0', actual.version);\n\t\tassert.strictEqual('1.1.0', actual.latestVersion);\n\t\tassert.strictEqual('localDescription1', actual.description);\n\t\tassert.ok(actual.iconUrl === 'file:///localPath1/localIcon1' || actual.iconUrl === 'vscode-file://vscode-app/localPath1/localIcon1');\n\t\tassert.ok(actual.iconUrlFallback === 'file:///localPath1/localIcon1' || actual.iconUrlFallback === 'vscode-file://vscode-app/localPath1/localIcon1');\n\t\tassert.strictEqual(undefined, actual.licenseUrl);\n\t\tassert.strictEqual(ExtensionState.Installed, actual.state);\n\t\tassert.strictEqual(undefined, actual.installCount);\n\t\tassert.strictEqual(undefined, actual.rating);\n\t\tassert.strictEqual(undefined, actual.ratingCount);\n\t\tassert.strictEqual(false, actual.outdated);\n\t\tassert.deepEqual(['pub.1', 'pub.2'], actual.dependencies);\n\n\t\tactual = actuals[1];\n\t\tassert.strictEqual(ExtensionType.System, actual.type);\n\t\tassert.strictEqual('local2', actual.name);\n\t\tassert.strictEqual('localDisplayName2', actual.displayName);\n\t\tassert.strictEqual('localpublisher2.local2', actual.identifier.id);\n\t\tassert.strictEqual('localPublisher2', actual.publisher);\n\t\tassert.strictEqual('1.2.0', actual.version);\n\t\tassert.strictEqual('1.2.0', actual.latestVersion);\n\t\tassert.strictEqual('localDescription2', actual.description);\n\t\tassert.ok(fs.existsSync(URI.parse(actual.iconUrl).fsPath));\n\t\tassert.strictEqual(undefined, actual.licenseUrl);\n\t\tassert.strictEqual(ExtensionState.Installed, actual.state);\n\t\tassert.strictEqual(undefined, actual.installCount);\n\t\tassert.strictEqual(undefined, actual.rating);\n\t\tassert.strictEqual(undefined, actual.ratingCount);\n\t\tassert.strictEqual(false, actual.outdated);\n\t\tassert.deepEqual([], actual.dependencies);\n\t});\n\n\ttest('test installed extensions get syncs with gallery', async () => {\n\t\tconst local1 = aLocalExtension('local1', {\n\t\t\tpublisher: 'localPublisher1',\n\t\t\tversion: '1.1.0',\n\t\t\tdisplayName: 'localDisplayName1',\n\t\t\tdescription: 'localDescription1',\n\t\t\ticon: 'localIcon1',\n\t\t\textensionDependencies: ['pub.1', 'pub.2'],\n\t\t}, {\n\t\t\ttype: ExtensionType.User,\n\t\t\treadmeUrl: 'localReadmeUrl1',\n\t\t\tchangelogUrl: 'localChangelogUrl1',\n\t\t\tlocation: URI.file('localPath1')\n\t\t});\n\t\tconst local2 = aLocalExtension('local2', {\n\t\t\tpublisher: 'localPublisher2',\n\t\t\tversion: '1.2.0',\n\t\t\tdisplayName: 'localDisplayName2',\n\t\t\tdescription: 'localDescription2',\n\t\t}, {\n\t\t\ttype: ExtensionType.System,\n\t\t\treadmeUrl: 'localReadmeUrl2',\n\t\t\tchangelogUrl: 'localChangelogUrl2',\n\t\t});\n\t\tconst gallery1 = aGalleryExtension(local1.manifest.name, {\n\t\t\tidentifier: local1.identifier,\n\t\t\tdisplayName: 'expectedDisplayName',\n\t\t\tversion: '1.5.0',\n\t\t\tpublisherId: 'expectedPublisherId',\n\t\t\tpublisher: local1.manifest.publisher,\n\t\t\tpublisherDisplayName: 'expectedPublisherDisplayName',\n\t\t\tdescription: 'expectedDescription',\n\t\t\tinstallCount: 1000,\n\t\t\trating: 4,\n\t\t\tratingCount: 100\n\t\t}, {\n\t\t\tdependencies: ['pub.1'],\n\t\t}, {\n\t\t\tmanifest: { uri: 'uri:manifest', fallbackUri: 'fallback:manifest' },\n\t\t\treadme: { uri: 'uri:readme', fallbackUri: 'fallback:readme' },\n\t\t\tchangelog: { uri: 'uri:changelog', fallbackUri: 'fallback:changlog' },\n\t\t\tdownload: { uri: 'uri:download', fallbackUri: 'fallback:download' },\n\t\t\ticon: { uri: 'uri:icon', fallbackUri: 'fallback:icon' },\n\t\t\tlicense: { uri: 'uri:license', fallbackUri: 'fallback:license' },\n\t\t\trepository: { uri: 'uri:repository', fallbackUri: 'fallback:repository' },\n\t\t\tcoreTranslations: []\n\t\t});\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local1, local2]);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery1));\n\t\ttestObject = await aWorkbenchService();\n\t\tawait testObject.queryLocal();\n\n\t\treturn eventToPromise(testObject.onChange).then(() => {\n\t\t\tconst actuals = testObject.local;\n\t\t\tassert.strictEqual(2, actuals.length);\n\n\t\t\tlet actual = actuals[0];\n\t\t\tassert.strictEqual(ExtensionType.User, actual.type);\n\t\t\tassert.strictEqual('local1', actual.name);\n\t\t\tassert.strictEqual('expectedDisplayName', actual.displayName);\n\t\t\tassert.strictEqual('localpublisher1.local1', actual.identifier.id);\n\t\t\tassert.strictEqual('localPublisher1', actual.publisher);\n\t\t\tassert.strictEqual('1.1.0', actual.version);\n\t\t\tassert.strictEqual('1.5.0', actual.latestVersion);\n\t\t\tassert.strictEqual('expectedDescription', actual.description);\n\t\t\tassert.strictEqual('uri:icon', actual.iconUrl);\n\t\t\tassert.strictEqual('fallback:icon', actual.iconUrlFallback);\n\t\t\tassert.strictEqual(ExtensionState.Installed, actual.state);\n\t\t\tassert.strictEqual('uri:license', actual.licenseUrl);\n\t\t\tassert.strictEqual(1000, actual.installCount);\n\t\t\tassert.strictEqual(4, actual.rating);\n\t\t\tassert.strictEqual(100, actual.ratingCount);\n\t\t\tassert.strictEqual(true, actual.outdated);\n\t\t\tassert.deepEqual(['pub.1'], actual.dependencies);\n\n\t\t\tactual = actuals[1];\n\t\t\tassert.strictEqual(ExtensionType.System, actual.type);\n\t\t\tassert.strictEqual('local2', actual.name);\n\t\t\tassert.strictEqual('localDisplayName2', actual.displayName);\n\t\t\tassert.strictEqual('localpublisher2.local2', actual.identifier.id);\n\t\t\tassert.strictEqual('localPublisher2', actual.publisher);\n\t\t\tassert.strictEqual('1.2.0', actual.version);\n\t\t\tassert.strictEqual('1.2.0', actual.latestVersion);\n\t\t\tassert.strictEqual('localDescription2', actual.description);\n\t\t\tassert.ok(fs.existsSync(URI.parse(actual.iconUrl).fsPath));\n\t\t\tassert.strictEqual(undefined, actual.licenseUrl);\n\t\t\tassert.strictEqual(ExtensionState.Installed, actual.state);\n\t\t\tassert.strictEqual(undefined, actual.installCount);\n\t\t\tassert.strictEqual(undefined, actual.rating);\n\t\t\tassert.strictEqual(undefined, actual.ratingCount);\n\t\t\tassert.strictEqual(false, actual.outdated);\n\t\t\tassert.deepEqual([], actual.dependencies);\n\t\t});\n\t});\n\n\ttest('test extension state computation', async () => {\n\t\tconst gallery = aGalleryExtension('gallery1');\n\t\ttestObject = await aWorkbenchService();\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\treturn testObject.queryGallery(CancellationToken.None).then(page => {\n\t\t\tconst extension = page.firstPage[0];\n\t\t\tassert.strictEqual(ExtensionState.Uninstalled, extension.state);\n\n\t\t\ttestObject.install(extension);\n\t\t\tconst identifier = gallery.identifier;\n\n\t\t\t// Installing\n\t\t\tinstallEvent.fire({ identifier, gallery });\n\t\t\tlet local = testObject.local;\n\t\t\tassert.strictEqual(1, local.length);\n\t\t\tconst actual = local[0];\n\t\t\tassert.strictEqual(`${gallery.publisher}.${gallery.name}`, actual.identifier.id);\n\t\t\tassert.strictEqual(ExtensionState.Installing, actual.state);\n\n\t\t\t// Installed\n\t\t\tdidInstallEvent.fire({ identifier, gallery, operation: InstallOperation.Install, local: aLocalExtension(gallery.name, gallery, { identifier }) });\n\t\t\tassert.strictEqual(ExtensionState.Installed, actual.state);\n\t\t\tassert.strictEqual(1, testObject.local.length);\n\n\t\t\ttestObject.uninstall(actual);\n\n\t\t\t// Uninstalling\n\t\t\tuninstallEvent.fire(identifier);\n\t\t\tassert.strictEqual(ExtensionState.Uninstalling, actual.state);\n\n\t\t\t// Uninstalled\n\t\t\tdidUninstallEvent.fire({ identifier });\n\t\t\tassert.strictEqual(ExtensionState.Uninstalled, actual.state);\n\n\t\t\tassert.strictEqual(0, testObject.local.length);\n\t\t});\n\t});\n\n\ttest('test extension doesnot show outdated for system extensions', async () => {\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' }, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension(local.manifest.name, { identifier: local.identifier, version: '1.0.2' })));\n\t\ttestObject = await aWorkbenchService();\n\t\tawait testObject.queryLocal();\n\n\t\tassert.ok(!testObject.local[0].outdated);\n\t});\n\n\ttest('test canInstall returns false for extensions with out gallery', async () => {\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' }, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\ttestObject = await aWorkbenchService();\n\t\tconst target = testObject.local[0];\n\t\ttestObject.uninstall(target);\n\t\tuninstallEvent.fire(local.identifier);\n\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\n\t\tassert.ok(!testObject.canInstall(target));\n\t});\n\n\ttest('test canInstall returns false for a system extension', async () => {\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' }, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension(local.manifest.name, { identifier: local.identifier })));\n\t\ttestObject = await aWorkbenchService();\n\t\tconst target = testObject.local[0];\n\n\t\tassert.ok(!testObject.canInstall(target));\n\t});\n\n\ttest('test canInstall returns true for extensions with gallery', async () => {\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' }, { type: ExtensionType.User });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension(local.manifest.name, { identifier: local.identifier })));\n\t\ttestObject = await aWorkbenchService();\n\t\tconst target = testObject.local[0];\n\n\t\treturn eventToPromise(testObject.onChange).then(() => {\n\t\t\tassert.ok(testObject.canInstall(target));\n\t\t});\n\t});\n\n\ttest('test onchange event is triggered while installing', async () => {\n\t\tconst gallery = aGalleryExtension('gallery1');\n\t\ttestObject = await aWorkbenchService();\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst target = sinon.spy();\n\n\t\treturn testObject.queryGallery(CancellationToken.None).then(page => {\n\t\t\tconst extension = page.firstPage[0];\n\t\t\tassert.strictEqual(ExtensionState.Uninstalled, extension.state);\n\n\t\t\ttestObject.install(extension);\n\t\t\tinstallEvent.fire({ identifier: gallery.identifier, gallery });\n\t\t\ttestObject.onChange(target);\n\n\t\t\t// Installed\n\t\t\tdidInstallEvent.fire({ identifier: gallery.identifier, gallery, operation: InstallOperation.Install, local: aLocalExtension(gallery.name, gallery, gallery) });\n\n\t\t\tassert.ok(target.calledOnce);\n\t\t});\n\t});\n\n\ttest('test onchange event is triggered when installation is finished', async () => {\n\t\tconst gallery = aGalleryExtension('gallery1');\n\t\ttestObject = await aWorkbenchService();\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst target = sinon.spy();\n\n\t\treturn testObject.queryGallery(CancellationToken.None).then(page => {\n\t\t\tconst extension = page.firstPage[0];\n\t\t\tassert.strictEqual(ExtensionState.Uninstalled, extension.state);\n\n\t\t\ttestObject.install(extension);\n\t\t\ttestObject.onChange(target);\n\n\t\t\t// Installing\n\t\t\tinstallEvent.fire({ identifier: gallery.identifier, gallery });\n\n\t\t\tassert.ok(target.calledOnce);\n\t\t});\n\t});\n\n\ttest('test onchange event is triggered while uninstalling', async () => {\n\t\tconst local = aLocalExtension('a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\ttestObject = await aWorkbenchService();\n\t\tconst target = sinon.spy();\n\n\t\ttestObject.uninstall(testObject.local[0]);\n\t\ttestObject.onChange(target);\n\t\tuninstallEvent.fire(local.identifier);\n\n\t\tassert.ok(target.calledOnce);\n\t});\n\n\ttest('test onchange event is triggered when uninstalling is finished', async () => {\n\t\tconst local = aLocalExtension('a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\ttestObject = await aWorkbenchService();\n\t\tconst target = sinon.spy();\n\n\t\ttestObject.uninstall(testObject.local[0]);\n\t\tuninstallEvent.fire(local.identifier);\n\t\ttestObject.onChange(target);\n\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\n\t\tassert.ok(target.calledOnce);\n\t});\n\n\ttest('test uninstalled extensions are always enabled', async () => {\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a')));\n\t\t\t\treturn testObject.queryGallery(CancellationToken.None).then(pagedResponse => {\n\t\t\t\t\tconst actual = pagedResponse.firstPage[0];\n\t\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enablement state installed enabled extension', async () => {\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [aLocalExtension('a')]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\tconst actual = testObject.local[0];\n\n\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.EnabledGlobally);\n\t\t\t});\n\t});\n\n\ttest('test workspace disabled extension', async () => {\n\t\tconst extensionA = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('d')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('e')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\tconst actual = testObject.local[0];\n\n\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledWorkspace);\n\t\t\t});\n\t});\n\n\ttest('test globally disabled extension', async () => {\n\t\tconst localExtension = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('d')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localExtension]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\tconst actual = testObject.local[0];\n\n\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledGlobally);\n\t\t\t});\n\t});\n\n\ttest('test enablement state is updated for user extensions', async () => {\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [aLocalExtension('a')]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledWorkspace)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst actual = testObject.local[0];\n\t\t\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledWorkspace);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enable extension globally when extension is disabled for workspace', async () => {\n\t\tconst localExtension = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledWorkspace)\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localExtension]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst actual = testObject.local[0];\n\t\t\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension globally', async () => {\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [aLocalExtension('a')]);\n\t\ttestObject = await aWorkbenchService();\n\n\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tconst actual = testObject.local[0];\n\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledGlobally);\n\t\t\t});\n\t});\n\n\ttest('test system extensions can be disabled', async () => {\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [aLocalExtension('a', {}, { type: ExtensionType.System })]);\n\t\ttestObject = await aWorkbenchService();\n\n\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tconst actual = testObject.local[0];\n\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledGlobally);\n\t\t\t});\n\t});\n\n\ttest('test enablement state is updated on change from outside', async () => {\n\t\tconst localExtension = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localExtension]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst actual = testObject.local[0];\n\t\t\t\t\t\tassert.strictEqual(actual.enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension with dependencies disable only itself', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension pack disables the pack', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionPack: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension pack disable all', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionPack: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension fails if extension is a dependent of other', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\tinstantiationService.stub(INotificationService, <Partial<INotificationService>>{\n\t\t\tprompt(severity, message, choices, options) {\n\t\t\t\toptions!.onCancel!();\n\t\t\t}\n\t\t});\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\treturn testObject.setEnablement(testObject.local[1], EnablementState.DisabledGlobally).then(() => assert.fail('Should fail'), error => assert.ok(true));\n\t\t\t});\n\t});\n\n\ttest('test disable extension disables all dependents when chosen to disable all', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\tinstantiationService.stub(INotificationService, <Partial<INotificationService>>{\n\t\t\tprompt(severity, message, choices, options) {\n\t\t\t\tchoices[0].run();\n\t\t\t}\n\t\t});\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\tawait testObject.setEnablement(testObject.local[1], EnablementState.DisabledGlobally);\n\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.DisabledGlobally);\n\t\t\t});\n\t});\n\n\ttest('test disable extension when extension is part of a pack', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionPack: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\treturn testObject.setEnablement(testObject.local[1], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable both dependency and dependent do not promot and do not fail', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement([testObject.local[1], testObject.local[0]], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.ok(!target.called);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enable both dependency and dependent do not promot and do not fail', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement([testObject.local[1], testObject.local[0]], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.ok(!target.called);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension does not fail if its dependency is a dependent of other but chosen to disable only itself', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c', { extensionDependencies: ['pub.b'] });\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension if its dependency is a dependent of other disabled extension', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c', { extensionDependencies: ['pub.b'] });\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test disable extension if its dependencys dependency is itself', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b', { extensionDependencies: ['pub.a'] });\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\tinstantiationService.stub(INotificationService, <Partial<INotificationService>>{\n\t\t\tprompt(severity, message, choices, options) {\n\t\t\t\toptions!.onCancel!();\n\t\t\t}\n\t\t});\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => assert.fail('An extension with dependent should not be disabled'), () => null);\n\t\t\t});\n\t});\n\n\ttest('test disable extension if its dependency is dependent and is disabled', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c', { extensionDependencies: ['pub.b'] });\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => assert.strictEqual(testObject.local[0].enablementState, EnablementState.DisabledGlobally));\n\t\t\t});\n\t});\n\n\ttest('test disable extension with cyclic dependencies', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b', { extensionDependencies: ['pub.c'] });\n\t\tconst extensionC = aLocalExtension('c', { extensionDependencies: ['pub.a'] });\n\n\t\tinstantiationService.stub(INotificationService, <Partial<INotificationService>>{\n\t\t\tprompt(severity, message, choices, options) {\n\t\t\t\toptions!.onCancel!();\n\t\t\t}\n\t\t});\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.EnabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.EnabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => assert.fail('An extension with dependent should not be disabled'), () => null);\n\t\t\t});\n\t});\n\n\ttest('test enable extension with dependencies enable all', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enable extension with dependencies does not prompt if dependency is enabled already', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.EnabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.ok(!target.called);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enable extension with dependency does not prompt if both are enabled', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b');\n\t\tconst extensionC = aLocalExtension('c');\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement([testObject.local[1], testObject.local[0]], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.ok(!target.called);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test enable extension with cyclic dependencies', async () => {\n\t\tconst extensionA = aLocalExtension('a', { extensionDependencies: ['pub.b'] });\n\t\tconst extensionB = aLocalExtension('b', { extensionDependencies: ['pub.c'] });\n\t\tconst extensionC = aLocalExtension('c', { extensionDependencies: ['pub.a'] });\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionA], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionB], EnablementState.DisabledGlobally))\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([extensionC], EnablementState.DisabledGlobally))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [extensionA, extensionB, extensionC]);\n\n\t\t\t\ttestObject = await aWorkbenchService();\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.EnabledGlobally)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tassert.strictEqual(testObject.local[0].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[1].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t\tassert.strictEqual(testObject.local[2].enablementState, EnablementState.EnabledGlobally);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('test change event is fired when disablement flags are changed', async () => {\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [aLocalExtension('a')]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject.onChange(target);\n\n\t\t\t\treturn testObject.setEnablement(testObject.local[0], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => assert.ok(target.calledOnce));\n\t\t\t});\n\t});\n\n\ttest('test change event is fired when disablement flags are changed from outside', async () => {\n\t\tconst localExtension = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('c')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([aLocalExtension('b')], EnablementState.DisabledWorkspace))\n\t\t\t.then(async () => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localExtension]);\n\t\t\t\ttestObject = await aWorkbenchService();\n\t\t\t\tconst target = sinon.spy();\n\t\t\t\ttestObject.onChange(target);\n\n\t\t\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledGlobally)\n\t\t\t\t\t.then(() => assert.ok(target.calledOnce));\n\t\t\t});\n\t});\n\n\ttest('test updating an extension does not re-eanbles it when disabled globally', async () => {\n\t\ttestObject = await aWorkbenchService();\n\t\tconst local = aLocalExtension('pub.a');\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally);\n\t\tdidInstallEvent.fire({ local, identifier: local.identifier, operation: InstallOperation.Update });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst actual = await testObject.queryLocal();\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledGlobally);\n\t});\n\n\ttest('test updating an extension does not re-eanbles it when workspace disabled', async () => {\n\t\ttestObject = await aWorkbenchService();\n\t\tconst local = aLocalExtension('pub.a');\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace);\n\t\tdidInstallEvent.fire({ local, identifier: local.identifier, operation: InstallOperation.Update });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst actual = await testObject.queryLocal();\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('test user extension is preferred when the same extension exists as system and user extension', async () => {\n\t\ttestObject = await aWorkbenchService();\n\t\tconst userExtension = aLocalExtension('pub.a');\n\t\tconst systemExtension = aLocalExtension('pub.a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [systemExtension, userExtension]);\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, userExtension);\n\t});\n\n\ttest('test user extension is disabled when the same extension exists as system and user extension and system extension is disabled', async () => {\n\t\ttestObject = await aWorkbenchService();\n\t\tconst systemExtension = aLocalExtension('pub.a', {}, { type: ExtensionType.System });\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([systemExtension], EnablementState.DisabledGlobally);\n\t\tconst userExtension = aLocalExtension('pub.a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [systemExtension, userExtension]);\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, userExtension);\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledGlobally);\n\t});\n\n\ttest('Test local ui extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local workspace extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local web extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['web'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local ui,workspace extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local workspace,ui extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace', 'ui'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local ui,workspace,web extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'workspace', 'web'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local ui,web,workspace extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'web', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local web,ui,workspace extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['web', 'ui', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local web,workspace,ui extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['web', 'workspace', 'ui'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local workspace,web,ui extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace', 'web', 'ui'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local workspace,ui,web extension is chosen if it exists only in local server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace', 'ui', 'web'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local UI extension is chosen if it exists in both servers', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test local ui,workspace extension is chosen if it exists in both servers', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test remote workspace extension is chosen if it exists in remote server', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace'];\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, remoteExtension);\n\t});\n\n\ttest('Test remote workspace extension is chosen if it exists in both servers', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, remoteExtension);\n\t});\n\n\ttest('Test remote workspace extension is chosen if it exists in both servers and local is disabled', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledGlobally);\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, remoteExtension);\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledGlobally);\n\t});\n\n\ttest('Test remote workspace extension is chosen if it exists in both servers and remote is disabled in workspace', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([remoteExtension], EnablementState.DisabledWorkspace);\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, remoteExtension);\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('Test local ui, workspace extension is chosen if it exists in both servers and local is disabled', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledGlobally);\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledGlobally);\n\t});\n\n\ttest('Test local ui, workspace extension is chosen if it exists in both servers and local is disabled in workspace', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['ui', 'workspace'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localExtension], EnablementState.DisabledWorkspace);\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t\tassert.strictEqual(actual[0].enablementState, EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('Test local web extension is chosen if it exists in both servers', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['web'];\n\t\tconst localExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, localExtension);\n\t});\n\n\ttest('Test remote web extension is chosen if it exists only in remote', async () => {\n\t\t// multi server setup\n\t\tconst extensionKind: ExtensionKind[] = ['web'];\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\ttestObject = await aWorkbenchService();\n\n\t\tconst actual = await testObject.queryLocal();\n\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.strictEqual(actual[0].local, remoteExtension);\n\t});\n\n\tasync function aWorkbenchService(): Promise<ExtensionsWorkbenchService> {\n\t\tconst workbenchService: ExtensionsWorkbenchService = instantiationService.createInstance(ExtensionsWorkbenchService);\n\t\tawait workbenchService.queryLocal();\n\t\treturn workbenchService;\n\t}\n\n\tfunction aLocalExtension(name: string = 'someext', manifest: any = {}, properties: any = {}): ILocalExtension {\n\t\tmanifest = { name, publisher: 'pub', version: '1.0.0', ...manifest };\n\t\tproperties = {\n\t\t\ttype: ExtensionType.User,\n\t\t\tlocation: URI.file(`pub.${name}`),\n\t\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher, manifest.name) },\n\t\t\t...properties\n\t\t};\n\t\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n\t}\n\n\tconst noAssets: IGalleryExtensionAssets = {\n\t\tchangelog: null,\n\t\tdownload: null!,\n\t\ticon: null!,\n\t\tlicense: null,\n\t\tmanifest: null,\n\t\treadme: null,\n\t\trepository: null,\n\t\tcoreTranslations: []\n\t};\n\n\tfunction aGalleryExtension(name: string, properties: any = {}, galleryExtensionProperties: any = {}, assets: IGalleryExtensionAssets = noAssets): IGalleryExtension {\n\t\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', properties: {}, assets: {}, ...properties });\n\t\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], ...galleryExtensionProperties };\n\t\tgalleryExtension.assets = { ...galleryExtension.assets, ...assets };\n\t\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: generateUuid() };\n\t\treturn <IGalleryExtension>galleryExtension;\n\t}\n\n\tfunction aPage<T>(...objects: T[]): IPager<T> {\n\t\treturn { firstPage: objects, total: objects.length, pageSize: objects.length, getPage: () => null! };\n\t}\n\n\tfunction eventToPromise(event: Event<any>, count: number = 1): Promise<void> {\n\t\treturn new Promise<void>(c => {\n\t\t\tlet counter = 0;\n\t\t\tevent(() => {\n\t\t\t\tif (++counter === count) {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction aMultiExtensionManagementServerService(instantiationService: TestInstantiationService, localExtensionManagementService?: IExtensionManagementService, remoteExtensionManagementService?: IExtensionManagementService): IExtensionManagementServerService {\n\t\tconst localExtensionManagementServer: IExtensionManagementServer = {\n\t\t\tid: 'vscode-local',\n\t\t\tlabel: 'local',\n\t\t\textensionManagementService: localExtensionManagementService || createExtensionManagementService()\n\t\t};\n\t\tconst remoteExtensionManagementServer: IExtensionManagementServer = {\n\t\t\tid: 'vscode-remote',\n\t\t\tlabel: 'remote',\n\t\t\textensionManagementService: remoteExtensionManagementService || createExtensionManagementService()\n\t\t};\n\t\treturn {\n\t\t\t_serviceBrand: undefined,\n\t\t\tlocalExtensionManagementServer,\n\t\t\tremoteExtensionManagementServer,\n\t\t\twebExtensionManagementServer: null,\n\t\t\tgetExtensionManagementServer: (extension: IExtension) => {\n\t\t\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\t\t\treturn localExtensionManagementServer;\n\t\t\t\t}\n\t\t\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\t\t\treturn remoteExtensionManagementServer;\n\t\t\t\t}\n\t\t\t\tthrow new Error('');\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction createExtensionManagementService(installed: ILocalExtension[] = []): IExtensionManagementService {\n\t\treturn <IExtensionManagementService>{\n\t\t\tonInstallExtension: Event.None,\n\t\t\tonDidInstallExtension: Event.None,\n\t\t\tonUninstallExtension: Event.None,\n\t\t\tonDidUninstallExtension: Event.None,\n\t\t\tgetInstalled: () => Promise.resolve<ILocalExtension[]>(installed),\n\t\t\tinstallFromGallery: (extension: IGalleryExtension) => Promise.reject(new Error('not supported')),\n\t\t\tupdateMetadata: async (local: ILocalExtension, metadata: IGalleryMetadata) => {\n\t\t\t\tlocal.identifier.uuid = metadata.id;\n\t\t\t\tlocal.publisherDisplayName = metadata.publisherDisplayName;\n\t\t\t\tlocal.publisherId = metadata.publisherId;\n\t\t\t\treturn local;\n\t\t\t}\n\t\t};\n\t}\n});\n"]}