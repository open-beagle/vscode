{"version":3,"file":"markdownDocumentRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/markdown/common/markdownDocumentRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as marked from 'vs/base/common/marked/marked';\nimport { tokenizeToString } from 'vs/editor/common/modes/textToHtmlTokenizer';\nimport { ITokenizationSupport, TokenizationRegistry } from 'vs/editor/common/modes';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { insane } from 'vs/base/common/insane/insane';\n\nexport const DEFAULT_MARKDOWN_STYLES = `\nbody {\n\tpadding: 10px 20px;\n\tline-height: 22px;\n\tmax-width: 882px;\n\tmargin: 0 auto;\n}\n\nimg {\n\tmax-width: 100%;\n\tmax-height: 100%;\n}\n\na {\n\ttext-decoration: none;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\na:focus,\ninput:focus,\nselect:focus,\ntextarea:focus {\n\toutline: 1px solid -webkit-focus-ring-color;\n\toutline-offset: -1px;\n}\n\nhr {\n\tborder: 0;\n\theight: 2px;\n\tborder-bottom: 2px solid;\n}\n\nh1 {\n\tpadding-bottom: 0.3em;\n\tline-height: 1.2;\n\tborder-bottom-width: 1px;\n\tborder-bottom-style: solid;\n}\n\nh1, h2, h3 {\n\tfont-weight: normal;\n}\n\ntable {\n\tborder-collapse: collapse;\n}\n\ntable > thead > tr > th {\n\ttext-align: left;\n\tborder-bottom: 1px solid;\n}\n\ntable > thead > tr > th,\ntable > thead > tr > td,\ntable > tbody > tr > th,\ntable > tbody > tr > td {\n\tpadding: 5px 10px;\n}\n\ntable > tbody > tr + tr > td {\n\tborder-top-width: 1px;\n\tborder-top-style: solid;\n}\n\nblockquote {\n\tmargin: 0 7px 0 5px;\n\tpadding: 0 16px 0 10px;\n\tborder-left-width: 5px;\n\tborder-left-style: solid;\n}\n\ncode {\n\tfont-family: \"SF Mono\", Monaco, Menlo, Consolas, \"Ubuntu Mono\", \"Liberation Mono\", \"DejaVu Sans Mono\", \"Courier New\", monospace;\n\tfont-size: 14px;\n\tline-height: 19px;\n}\n\npre code {\n\tfont-family: var(--vscode-editor-font-family);\n\tfont-weight: var(--vscode-editor-font-weight);\n\tfont-size: var(--vscode-editor-font-size);\n\tline-height: 1.5;\n}\n\ncode > div {\n\tpadding: 16px;\n\tborder-radius: 3px;\n\toverflow: auto;\n}\n\n.monaco-tokenized-source {\n\twhite-space: pre;\n}\n\n/** Theming */\n\n.vscode-light code > div {\n\tbackground-color: rgba(220, 220, 220, 0.4);\n}\n\n.vscode-dark code > div {\n\tbackground-color: rgba(10, 10, 10, 0.4);\n}\n\n.vscode-high-contrast code > div {\n\tbackground-color: rgb(0, 0, 0);\n}\n\n.vscode-high-contrast h1 {\n\tborder-color: rgb(0, 0, 0);\n}\n\n.vscode-light table > thead > tr > th {\n\tborder-color: rgba(0, 0, 0, 0.69);\n}\n\n.vscode-dark table > thead > tr > th {\n\tborder-color: rgba(255, 255, 255, 0.69);\n}\n\n.vscode-light h1,\n.vscode-light hr,\n.vscode-light table > tbody > tr + tr > td {\n\tborder-color: rgba(0, 0, 0, 0.18);\n}\n\n.vscode-dark h1,\n.vscode-dark hr,\n.vscode-dark table > tbody > tr + tr > td {\n\tborder-color: rgba(255, 255, 255, 0.18);\n}\n\n`;\n\nfunction removeEmbeddedSVGs(documentContent: string): string {\n\treturn insane(documentContent, {\n\t\tallowedTags: [\n\t\t\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'br', 'b', 'i', 'strong', 'em', 'a', 'pre', 'code', 'img', 'tt',\n\t\t\t'div', 'ins', 'del', 'sup', 'sub', 'p', 'ol', 'ul', 'table', 'thead', 'tbody', 'tfoot', 'blockquote', 'dl', 'dt',\n\t\t\t'dd', 'kbd', 'q', 'samp', 'var', 'hr', 'ruby', 'rt', 'rp', 'li', 'tr', 'td', 'th', 's', 'strike', 'summary', 'details',\n\t\t\t'caption', 'figure', 'figcaption', 'abbr', 'bdo', 'cite', 'dfn', 'mark', 'small', 'span', 'time', 'wbr'\n\t\t],\n\t\tallowedAttributes: {\n\t\t\t'*': [\n\t\t\t\t'align',\n\t\t\t],\n\t\t\timg: ['src', 'alt', 'title', 'aria-label', 'width', 'height'],\n\t\t\tspan: ['class'],\n\t\t},\n\t\tallowedSchemes: ['http', 'https', 'command',],\n\t\tfilter(token: { tag: string, attrs: { readonly [key: string]: string } }): boolean {\n\t\t\treturn token.tag !== 'svg';\n\t\t}\n\t});\n}\n\n/**\n * Renders a string of markdown as a document.\n *\n * Uses VS Code's syntax highlighting code blocks.\n */\nexport async function renderMarkdownDocument(\n\ttext: string,\n\textensionService: IExtensionService,\n\tmodeService: IModeService,\n\tshouldRemoveEmbeddedSVGs: boolean = true,\n): Promise<string> {\n\n\tconst highlight = (code: string, lang: string, callback: ((error: any, code: string) => void) | undefined): any => {\n\t\tif (!callback) {\n\t\t\treturn code;\n\t\t}\n\t\textensionService.whenInstalledExtensionsRegistered().then(async () => {\n\t\t\tlet support: ITokenizationSupport | undefined;\n\t\t\tconst modeId = modeService.getModeIdForLanguageName(lang);\n\t\t\tif (modeId) {\n\t\t\t\tmodeService.triggerMode(modeId);\n\t\t\t\tsupport = await TokenizationRegistry.getPromise(modeId) ?? undefined;\n\t\t\t}\n\t\t\tcallback(null, `<code>${tokenizeToString(code, support)}</code>`);\n\t\t});\n\t\treturn '';\n\t};\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\tmarked(text, { highlight }, (err, value) => err ? reject(err) : resolve(value));\n\t}).then(raw => {\n\t\tif (shouldRemoveEmbeddedSVGs) {\n\t\t\treturn removeEmbeddedSVGs(raw);\n\t\t}\n\t\telse {\n\t\t\treturn raw;\n\t\t}\n\t});\n}\n"]}