{"version":3,"sources":["vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit.contribution.ts"],"names":[],"mappings":"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","file":"bulkEdit.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IBulkEditService, ResourceEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { BulkEditPane } from 'vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPane';\nimport { IViewContainersRegistry, Extensions as ViewContainerExtensions, ViewContainerLocation, IViewsRegistry, FocusedViewContext, IViewsService } from 'vs/workbench/common/views';\nimport { localize } from 'vs/nls';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { RawContextKey, IContextKeyService, IContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { BulkEditPreviewProvider } from 'vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { WorkbenchListFocusContextKey } from 'vs/platform/list/browser/listService';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { EditorResourceAccessor, IEditorInput, SideBySideEditor } from 'vs/workbench/common/editor';\nimport type { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\n\nasync function getBulkEditPane(viewsService: IViewsService): Promise<BulkEditPane | undefined> {\n\tconst view = await viewsService.openView(BulkEditPane.ID, true);\n\tif (view instanceof BulkEditPane) {\n\t\treturn view;\n\t}\n\treturn undefined;\n}\n\nclass UXState {\n\n\tprivate readonly _activePanel: string | undefined;\n\n\tconstructor(\n\t\t@IPanelService private readonly _panelService: IPanelService,\n\t\t@IEditorGroupsService private readonly _editorGroupsService: IEditorGroupsService,\n\t) {\n\t\tthis._activePanel = _panelService.getActivePanel()?.getId();\n\t}\n\n\tasync restore(): Promise<void> {\n\n\t\t// (1) restore previous panel\n\t\tif (typeof this._activePanel === 'string') {\n\t\t\tawait this._panelService.openPanel(this._activePanel);\n\t\t} else {\n\t\t\tthis._panelService.hideActivePanel();\n\t\t}\n\n\t\t// (2) close preview editors\n\t\tfor (let group of this._editorGroupsService.groups) {\n\t\t\tlet previewEditors: IEditorInput[] = [];\n\t\t\tfor (let input of group.editors) {\n\n\t\t\t\tlet resource = EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\tif (resource?.scheme === BulkEditPreviewProvider.Schema) {\n\t\t\t\t\tpreviewEditors.push(input);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previewEditors.length) {\n\t\t\t\tgroup.closeEditors(previewEditors, { preserveFocus: true });\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass PreviewSession {\n\tconstructor(\n\t\treadonly uxState: UXState,\n\t\treadonly cts: CancellationTokenSource = new CancellationTokenSource(),\n\t) { }\n}\n\nclass BulkEditPreviewContribution {\n\n\tstatic readonly ctxEnabled = new RawContextKey('refactorPreview.enabled', false);\n\n\tprivate readonly _ctxEnabled: IContextKey<boolean>;\n\n\tprivate _activeSession: PreviewSession | undefined;\n\n\tconstructor(\n\t\t@IPanelService private readonly _panelService: IPanelService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IEditorGroupsService private readonly _editorGroupsService: IEditorGroupsService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IBulkEditService bulkEditService: IBulkEditService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tbulkEditService.setPreviewHandler(edits => this._previewEdit(edits));\n\t\tthis._ctxEnabled = BulkEditPreviewContribution.ctxEnabled.bindTo(contextKeyService);\n\t}\n\n\tprivate async _previewEdit(edits: ResourceEdit[]): Promise<ResourceEdit[]> {\n\t\tthis._ctxEnabled.set(true);\n\n\t\tconst uxState = this._activeSession?.uxState ?? new UXState(this._panelService, this._editorGroupsService);\n\t\tconst view = await getBulkEditPane(this._viewsService);\n\t\tif (!view) {\n\t\t\tthis._ctxEnabled.set(false);\n\t\t\treturn edits;\n\t\t}\n\n\t\t// check for active preview session and let the user decide\n\t\tif (view.hasInput()) {\n\t\t\tconst choice = await this._dialogService.show(\n\t\t\t\tSeverity.Info,\n\t\t\t\tlocalize('overlap', \"Another refactoring is being previewed.\"),\n\t\t\t\t[localize('cancel', \"Cancel\"), localize('continue', \"Continue\")],\n\t\t\t\t{ detail: localize('detail', \"Press 'Continue' to discard the previous refactoring and continue with the current refactoring.\") }\n\t\t\t);\n\n\t\t\tif (choice.choice === 0) {\n\t\t\t\t// this refactoring is being cancelled\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// session\n\t\tlet session: PreviewSession;\n\t\tif (this._activeSession) {\n\t\t\tthis._activeSession.cts.dispose(true);\n\t\t\tsession = new PreviewSession(uxState);\n\t\t} else {\n\t\t\tsession = new PreviewSession(uxState);\n\t\t}\n\t\tthis._activeSession = session;\n\n\t\t// the actual work...\n\t\ttry {\n\n\t\t\treturn await view.setInput(edits, session.cts.token) ?? [];\n\n\t\t} finally {\n\t\t\t// restore UX state\n\t\t\tif (this._activeSession === session) {\n\t\t\t\tawait this._activeSession.uxState.restore();\n\t\t\t\tthis._activeSession.cts.dispose();\n\t\t\t\tthis._ctxEnabled.set(false);\n\t\t\t\tthis._activeSession = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// CMD: accept\nregisterAction2(class ApplyAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.apply',\n\t\t\ttitle: { value: localize('apply', \"Apply Refactoring\"), original: 'Apply Refactoring' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.check,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPreviewContribution.ctxEnabled, BulkEditPane.ctxHasCheckedChanges),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\tgroup: 'navigation'\n\t\t\t}, {\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib - 10,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPreviewContribution.ctxEnabled, FocusedViewContext.isEqualTo(BulkEditPane.ID)),\n\t\t\t\tprimary: KeyMod.Shift + KeyCode.Enter,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.accept();\n\t\t}\n\t}\n});\n\n// CMD: discard\nregisterAction2(class DiscardAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.discard',\n\t\t\ttitle: { value: localize('Discard', \"Discard Refactoring\"), original: 'Discard Refactoring' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.clearAll,\n\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\tgroup: 'navigation'\n\t\t\t}, {\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 2\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.discard();\n\t\t}\n\t}\n});\n\n\n// CMD: toggle change\nregisterAction2(class ToggleAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.toggleCheckedState',\n\t\t\ttitle: { value: localize('toogleSelection', \"Toggle Change\"), original: 'Toggle Change' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: WorkbenchListFocusContextKey,\n\t\t\t\tprimary: KeyCode.Space,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\tgroup: 'navigation'\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.toggleChecked();\n\t\t}\n\t}\n});\n\n\n// CMD: toggle category\nregisterAction2(class GroupByFile extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.groupByFile',\n\t\t\ttitle: { value: localize('groupByFile', \"Group Changes By File\"), original: 'Group Changes By File' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.ungroupByRefType,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile.negate(), BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile.negate()),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.groupByFile();\n\t\t}\n\t}\n});\n\nregisterAction2(class GroupByType extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.groupByType',\n\t\t\ttitle: { value: localize('groupByType', \"Group Changes By Type\"), original: 'Group Changes By Type' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.groupByRefType,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile, BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.groupByType();\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleGrouping extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.toggleGrouping',\n\t\t\ttitle: { value: localize('groupByType', \"Group Changes By Type\"), original: 'Group Changes By Type' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.listTree,\n\t\t\ttoggled: BulkEditPane.ctxGroupByFile.negate(),\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tif (view) {\n\t\t\tview.toggleGrouping();\n\t\t}\n\t}\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tBulkEditPreviewContribution, LifecyclePhase.Ready\n);\n\nconst refactorPreviewViewIcon = registerIcon('refactor-preview-view-icon', Codicon.lightbulb, localize('refactorPreviewViewIcon', 'View icon of the refactor preview view.'));\n\nconst container = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: BulkEditPane.ID,\n\ttitle: localize('panel', \"Refactor Preview\"),\n\thideIfEmpty: true,\n\tctorDescriptor: new SyncDescriptor(\n\t\tViewPaneContainer,\n\t\t[BulkEditPane.ID, { mergeViewWithContainerWhenSingleView: true, donotShowContainerTitleWhenMergedWithContainer: true }]\n\t),\n\ticon: refactorPreviewViewIcon,\n\tstorageId: BulkEditPane.ID\n}, ViewContainerLocation.Panel);\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: BulkEditPane.ID,\n\tname: localize('panel', \"Refactor Preview\"),\n\twhen: BulkEditPreviewContribution.ctxEnabled,\n\tctorDescriptor: new SyncDescriptor(BulkEditPane),\n\tcontainerIcon: refactorPreviewViewIcon,\n}], container);\n"]}