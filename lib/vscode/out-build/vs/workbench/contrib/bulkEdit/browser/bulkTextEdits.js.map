{"version":3,"file":"bulkTextEdits.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/bulkEdit/browser/bulkTextEdits.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { dispose, IDisposable, IReference } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { EndOfLineSequence, IIdentifiedSingleEditOperation, ITextModel } from 'vs/editor/common/model';\nimport { ITextModelService, IResolvedTextEditorModel } from 'vs/editor/common/services/resolverService';\nimport { IProgress } from 'vs/platform/progress/common/progress';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IUndoRedoService, UndoRedoGroup, UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { SingleModelEditStackElement, MultiModelEditStackElement } from 'vs/editor/common/model/editStack';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\ntype ValidationResult = { canApply: true } | { canApply: false, reason: URI };\n\nclass ModelEditTask implements IDisposable {\n\n\treadonly model: ITextModel;\n\n\tprivate _expectedModelVersionId: number | undefined;\n\tprotected _edits: IIdentifiedSingleEditOperation[];\n\tprotected _newEol: EndOfLineSequence | undefined;\n\n\tconstructor(private readonly _modelReference: IReference<IResolvedTextEditorModel>) {\n\t\tthis.model = this._modelReference.object.textEditorModel;\n\t\tthis._edits = [];\n\t}\n\n\tdispose() {\n\t\tthis._modelReference.dispose();\n\t}\n\n\tisNoOp() {\n\t\tif (this._edits.length > 0) {\n\t\t\t// contains textual edits\n\t\t\treturn false;\n\t\t}\n\t\tif (this._newEol !== undefined && this._newEol !== this.model.getEndOfLineSequence()) {\n\t\t\t// contains an eol change that is a real change\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\taddEdit(resourceEdit: ResourceTextEdit): void {\n\t\tthis._expectedModelVersionId = resourceEdit.versionId;\n\t\tconst { textEdit } = resourceEdit;\n\n\t\tif (typeof textEdit.eol === 'number') {\n\t\t\t// honor eol-change\n\t\t\tthis._newEol = textEdit.eol;\n\t\t}\n\t\tif (!textEdit.range && !textEdit.text) {\n\t\t\t// lacks both a range and the text\n\t\t\treturn;\n\t\t}\n\t\tif (Range.isEmpty(textEdit.range) && !textEdit.text) {\n\t\t\t// no-op edit (replace empty range with empty text)\n\t\t\treturn;\n\t\t}\n\n\t\t// create edit operation\n\t\tlet range: Range;\n\t\tif (!textEdit.range) {\n\t\t\trange = this.model.getFullModelRange();\n\t\t} else {\n\t\t\trange = Range.lift(textEdit.range);\n\t\t}\n\t\tthis._edits.push(EditOperation.replaceMove(range, textEdit.text));\n\t}\n\n\tvalidate(): ValidationResult {\n\t\tif (typeof this._expectedModelVersionId === 'undefined' || this.model.getVersionId() === this._expectedModelVersionId) {\n\t\t\treturn { canApply: true };\n\t\t}\n\t\treturn { canApply: false, reason: this.model.uri };\n\t}\n\n\tgetBeforeCursorState(): Selection[] | null {\n\t\treturn null;\n\t}\n\n\tapply(): void {\n\t\tif (this._edits.length > 0) {\n\t\t\tthis._edits = this._edits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\t\t\tthis.model.pushEditOperations(null, this._edits, () => null);\n\t\t}\n\t\tif (this._newEol !== undefined) {\n\t\t\tthis.model.pushEOL(this._newEol);\n\t\t}\n\t}\n}\n\nclass EditorEditTask extends ModelEditTask {\n\n\tprivate _editor: ICodeEditor;\n\n\tconstructor(modelReference: IReference<IResolvedTextEditorModel>, editor: ICodeEditor) {\n\t\tsuper(modelReference);\n\t\tthis._editor = editor;\n\t}\n\n\toverride getBeforeCursorState(): Selection[] | null {\n\t\treturn this._editor.getSelections();\n\t}\n\n\toverride apply(): void {\n\t\tif (this._edits.length > 0) {\n\t\t\tthis._edits = this._edits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\t\t\tthis._editor.executeEdits('', this._edits);\n\t\t}\n\t\tif (this._newEol !== undefined) {\n\t\t\tif (this._editor.hasModel()) {\n\t\t\t\tthis._editor.getModel().pushEOL(this._newEol);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class BulkTextEdits {\n\n\tprivate readonly _edits = new ResourceMap<ResourceTextEdit[]>();\n\n\tconstructor(\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _editor: ICodeEditor | undefined,\n\t\tprivate readonly _undoRedoGroup: UndoRedoGroup,\n\t\tprivate readonly _undoRedoSource: UndoRedoSource | undefined,\n\t\tprivate readonly _progress: IProgress<void>,\n\t\tprivate readonly _token: CancellationToken,\n\t\tedits: ResourceTextEdit[],\n\t\t@IEditorWorkerService private readonly _editorWorker: IEditorWorkerService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService\n\t) {\n\n\t\tfor (const edit of edits) {\n\t\t\tlet array = this._edits.get(edit.resource);\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\tthis._edits.set(edit.resource, array);\n\t\t\t}\n\t\t\tarray.push(edit);\n\t\t}\n\t}\n\n\tprivate _validateBeforePrepare(): void {\n\t\t// First check if loaded models were not changed in the meantime\n\t\tfor (const array of this._edits.values()) {\n\t\t\tfor (let edit of array) {\n\t\t\t\tif (typeof edit.versionId === 'number') {\n\t\t\t\t\tlet model = this._modelService.getModel(edit.resource);\n\t\t\t\t\tif (model && model.getVersionId() !== edit.versionId) {\n\t\t\t\t\t\t// model changed in the meantime\n\t\t\t\t\t\tthrow new Error(`${model.uri.toString()} has changed in the meantime`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _createEditsTasks(): Promise<ModelEditTask[]> {\n\n\t\tconst tasks: ModelEditTask[] = [];\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tfor (let [key, value] of this._edits) {\n\t\t\tconst promise = this._textModelResolverService.createModelReference(key).then(async ref => {\n\t\t\t\tlet task: ModelEditTask;\n\t\t\t\tlet makeMinimal = false;\n\t\t\t\tif (this._editor?.getModel()?.uri.toString() === ref.object.textEditorModel.uri.toString()) {\n\t\t\t\t\ttask = new EditorEditTask(ref, this._editor);\n\t\t\t\t\tmakeMinimal = true;\n\t\t\t\t} else {\n\t\t\t\t\ttask = new ModelEditTask(ref);\n\t\t\t\t}\n\n\t\t\t\tfor (const edit of value) {\n\t\t\t\t\tif (makeMinimal) {\n\t\t\t\t\t\tconst newEdits = await this._editorWorker.computeMoreMinimalEdits(edit.resource, [edit.textEdit]);\n\t\t\t\t\t\tif (!newEdits) {\n\t\t\t\t\t\t\ttask.addEdit(edit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (let moreMinialEdit of newEdits) {\n\t\t\t\t\t\t\t\ttask.addEdit(new ResourceTextEdit(edit.resource, moreMinialEdit, edit.versionId, edit.metadata));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttask.addEdit(edit);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttasks.push(task);\n\t\t\t});\n\t\t\tpromises.push(promise);\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t\treturn tasks;\n\t}\n\n\tprivate _validateTasks(tasks: ModelEditTask[]): ValidationResult {\n\t\tfor (const task of tasks) {\n\t\t\tconst result = task.validate();\n\t\t\tif (!result.canApply) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn { canApply: true };\n\t}\n\n\tasync apply(): Promise<void> {\n\n\t\tthis._validateBeforePrepare();\n\t\tconst tasks = await this._createEditsTasks();\n\n\t\tif (this._token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\n\t\t\tconst validation = this._validateTasks(tasks);\n\t\t\tif (!validation.canApply) {\n\t\t\t\tthrow new Error(`${validation.reason.toString()} has changed in the meantime`);\n\t\t\t}\n\t\t\tif (tasks.length === 1) {\n\t\t\t\t// This edit touches a single model => keep things simple\n\t\t\t\tconst task = tasks[0];\n\t\t\t\tif (!task.isNoOp()) {\n\t\t\t\t\tconst singleModelEditStackElement = new SingleModelEditStackElement(task.model, task.getBeforeCursorState());\n\t\t\t\t\tthis._undoRedoService.pushElement(singleModelEditStackElement, this._undoRedoGroup, this._undoRedoSource);\n\t\t\t\t\ttask.apply();\n\t\t\t\t\tsingleModelEditStackElement.close();\n\t\t\t\t}\n\t\t\t\tthis._progress.report(undefined);\n\t\t\t} else {\n\t\t\t\t// prepare multi model undo element\n\t\t\t\tconst multiModelEditStackElement = new MultiModelEditStackElement(\n\t\t\t\t\tthis._label,\n\t\t\t\t\ttasks.map(t => new SingleModelEditStackElement(t.model, t.getBeforeCursorState()))\n\t\t\t\t);\n\t\t\t\tthis._undoRedoService.pushElement(multiModelEditStackElement, this._undoRedoGroup, this._undoRedoSource);\n\t\t\t\tfor (const task of tasks) {\n\t\t\t\t\ttask.apply();\n\t\t\t\t\tthis._progress.report(undefined);\n\t\t\t\t}\n\t\t\t\tmultiModelEditStackElement.close();\n\t\t\t}\n\n\t\t} finally {\n\t\t\tdispose(tasks);\n\t\t}\n\t}\n}\n"]}