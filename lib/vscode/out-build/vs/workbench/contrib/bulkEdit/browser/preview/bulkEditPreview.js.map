{"version":3,"sources":["vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview.ts"],"names":[],"mappings":"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","file":"bulkEditPreview.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModelContentProvider, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { URI } from 'vs/base/common/uri';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { createTextBufferFactoryFromSnapshot } from 'vs/editor/common/model/textModel';\nimport { WorkspaceEditMetadata } from 'vs/editor/common/modes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { coalesceInPlace } from 'vs/base/common/arrays';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { ConflictDetector } from 'vs/workbench/contrib/bulkEdit/browser/conflicts';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { localize } from 'vs/nls';\nimport { extUri } from 'vs/base/common/resources';\nimport { ResourceEdit, ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { Codicon } from 'vs/base/common/codicons';\n\nexport class CheckedStates<T extends object> {\n\n\tprivate readonly _states = new WeakMap<T, boolean>();\n\tprivate _checkedCount: number = 0;\n\n\tprivate readonly _onDidChange = new Emitter<T>();\n\treadonly onDidChange: Event<T> = this._onDidChange.event;\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tget checkedCount() {\n\t\treturn this._checkedCount;\n\t}\n\n\tisChecked(obj: T): boolean {\n\t\treturn this._states.get(obj) ?? false;\n\t}\n\n\tupdateChecked(obj: T, value: boolean): void {\n\t\tconst valueNow = this._states.get(obj);\n\t\tif (valueNow === value) {\n\t\t\treturn;\n\t\t}\n\t\tif (valueNow === undefined) {\n\t\t\tif (value) {\n\t\t\t\tthis._checkedCount += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tif (value) {\n\t\t\t\tthis._checkedCount += 1;\n\t\t\t} else {\n\t\t\t\tthis._checkedCount -= 1;\n\t\t\t}\n\t\t}\n\t\tthis._states.set(obj, value);\n\t\tthis._onDidChange.fire(obj);\n\t}\n}\n\nexport class BulkTextEdit {\n\n\tconstructor(\n\t\treadonly parent: BulkFileOperation,\n\t\treadonly textEdit: ResourceTextEdit\n\t) { }\n}\n\nexport const enum BulkFileOperationType {\n\tTextEdit = 1,\n\tCreate = 2,\n\tDelete = 4,\n\tRename = 8,\n}\n\nexport class BulkFileOperation {\n\n\ttype: BulkFileOperationType = 0;\n\ttextEdits: BulkTextEdit[] = [];\n\toriginalEdits = new Map<number, ResourceTextEdit | ResourceFileEdit>();\n\tnewUri?: URI;\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly parent: BulkFileOperations\n\t) { }\n\n\taddEdit(index: number, type: BulkFileOperationType, edit: ResourceTextEdit | ResourceFileEdit) {\n\t\tthis.type |= type;\n\t\tthis.originalEdits.set(index, edit);\n\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\tthis.textEdits.push(new BulkTextEdit(this, edit));\n\n\t\t} else if (type === BulkFileOperationType.Rename) {\n\t\t\tthis.newUri = edit.newResource;\n\t\t}\n\t}\n\n\tneedsConfirmation(): boolean {\n\t\tfor (let [, edit] of this.originalEdits) {\n\t\t\tif (!this.parent.checked.isChecked(edit)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class BulkCategory {\n\n\tprivate static readonly _defaultMetadata = Object.freeze({\n\t\tlabel: localize('default', \"Other\"),\n\t\ticon: Codicon.symbolFile,\n\t\tneedsConfirmation: false\n\t});\n\n\tstatic keyOf(metadata?: WorkspaceEditMetadata) {\n\t\treturn metadata?.label || '<default>';\n\t}\n\n\treadonly operationByResource = new Map<string, BulkFileOperation>();\n\n\tconstructor(readonly metadata: WorkspaceEditMetadata = BulkCategory._defaultMetadata) { }\n\n\tget fileOperations(): IterableIterator<BulkFileOperation> {\n\t\treturn this.operationByResource.values();\n\t}\n}\n\nexport class BulkFileOperations {\n\n\tstatic async create(accessor: ServicesAccessor, bulkEdit: ResourceEdit[]): Promise<BulkFileOperations> {\n\t\tconst result = accessor.get(IInstantiationService).createInstance(BulkFileOperations, bulkEdit);\n\t\treturn await result._init();\n\t}\n\n\treadonly checked = new CheckedStates<ResourceEdit>();\n\n\treadonly fileOperations: BulkFileOperation[] = [];\n\treadonly categories: BulkCategory[] = [];\n\treadonly conflicts: ConflictDetector;\n\n\tconstructor(\n\t\tprivate readonly _bulkEdit: ResourceEdit[],\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t) {\n\t\tthis.conflicts = instaService.createInstance(ConflictDetector, _bulkEdit);\n\t}\n\n\tdispose(): void {\n\t\tthis.checked.dispose();\n\t\tthis.conflicts.dispose();\n\t}\n\n\tasync _init() {\n\t\tconst operationByResource = new Map<string, BulkFileOperation>();\n\t\tconst operationByCategory = new Map<string, BulkCategory>();\n\n\t\tconst newToOldUri = new ResourceMap<URI>();\n\n\t\tfor (let idx = 0; idx < this._bulkEdit.length; idx++) {\n\t\t\tconst edit = this._bulkEdit[idx];\n\n\t\t\tlet uri: URI;\n\t\t\tlet type: BulkFileOperationType;\n\n\t\t\t// store inital checked state\n\t\t\tthis.checked.updateChecked(edit, !edit.metadata?.needsConfirmation);\n\n\t\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\t\ttype = BulkFileOperationType.TextEdit;\n\t\t\t\turi = edit.resource;\n\n\t\t\t} else if (edit instanceof ResourceFileEdit) {\n\t\t\t\tif (edit.newResource && edit.oldResource) {\n\t\t\t\t\ttype = BulkFileOperationType.Rename;\n\t\t\t\t\turi = edit.oldResource;\n\t\t\t\t\tif (edit.options?.overwrite === undefined && edit.options?.ignoreIfExists && await this._fileService.exists(uri)) {\n\t\t\t\t\t\t// noop -> \"soft\" rename to something that already exists\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// map newResource onto oldResource so that text-edit appear for\n\t\t\t\t\t// the same file element\n\t\t\t\t\tnewToOldUri.set(edit.newResource, uri);\n\n\t\t\t\t} else if (edit.oldResource) {\n\t\t\t\t\ttype = BulkFileOperationType.Delete;\n\t\t\t\t\turi = edit.oldResource;\n\t\t\t\t\tif (edit.options?.ignoreIfNotExists && !await this._fileService.exists(uri)) {\n\t\t\t\t\t\t// noop -> \"soft\" delete something that doesn't exist\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (edit.newResource) {\n\t\t\t\t\ttype = BulkFileOperationType.Create;\n\t\t\t\t\turi = edit.newResource;\n\t\t\t\t\tif (edit.options?.overwrite === undefined && edit.options?.ignoreIfExists && await this._fileService.exists(uri)) {\n\t\t\t\t\t\t// noop -> \"soft\" create something that already exists\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// invalid edit -> skip\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// unsupported edit\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst insert = (uri: URI, map: Map<string, BulkFileOperation>) => {\n\t\t\t\tlet key = extUri.getComparisonKey(uri, true);\n\t\t\t\tlet operation = map.get(key);\n\n\t\t\t\t// rename\n\t\t\t\tif (!operation && newToOldUri.has(uri)) {\n\t\t\t\t\turi = newToOldUri.get(uri)!;\n\t\t\t\t\tkey = extUri.getComparisonKey(uri, true);\n\t\t\t\t\toperation = map.get(key);\n\t\t\t\t}\n\n\t\t\t\tif (!operation) {\n\t\t\t\t\toperation = new BulkFileOperation(uri, this);\n\t\t\t\t\tmap.set(key, operation);\n\t\t\t\t}\n\t\t\t\toperation.addEdit(idx, type, edit);\n\t\t\t};\n\n\t\t\tinsert(uri, operationByResource);\n\n\t\t\t// insert into \"this\" category\n\t\t\tlet key = BulkCategory.keyOf(edit.metadata);\n\t\t\tlet category = operationByCategory.get(key);\n\t\t\tif (!category) {\n\t\t\t\tcategory = new BulkCategory(edit.metadata);\n\t\t\t\toperationByCategory.set(key, category);\n\t\t\t}\n\t\t\tinsert(uri, category.operationByResource);\n\t\t}\n\n\t\toperationByResource.forEach(value => this.fileOperations.push(value));\n\t\toperationByCategory.forEach(value => this.categories.push(value));\n\n\t\t// \"correct\" invalid parent-check child states that is\n\t\t// unchecked file edits (rename, create, delete) uncheck\n\t\t// all edits for a file, e.g no text change without rename\n\t\tfor (let file of this.fileOperations) {\n\t\t\tif (file.type !== BulkFileOperationType.TextEdit) {\n\t\t\t\tlet checked = true;\n\t\t\t\tfor (const edit of file.originalEdits.values()) {\n\t\t\t\t\tif (edit instanceof ResourceFileEdit) {\n\t\t\t\t\t\tchecked = checked && this.checked.isChecked(edit);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!checked) {\n\t\t\t\t\tfor (const edit of file.originalEdits.values()) {\n\t\t\t\t\t\tthis.checked.updateChecked(edit, checked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort (once) categories atop which have unconfirmed edits\n\t\tthis.categories.sort((a, b) => {\n\t\t\tif (a.metadata.needsConfirmation === b.metadata.needsConfirmation) {\n\t\t\t\treturn a.metadata.label.localeCompare(b.metadata.label);\n\t\t\t} else if (a.metadata.needsConfirmation) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tgetWorkspaceEdit(): ResourceEdit[] {\n\t\tconst result: ResourceEdit[] = [];\n\t\tlet allAccepted = true;\n\n\t\tfor (let i = 0; i < this._bulkEdit.length; i++) {\n\t\t\tconst edit = this._bulkEdit[i];\n\t\t\tif (this.checked.isChecked(edit)) {\n\t\t\t\tresult[i] = edit;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tallAccepted = false;\n\t\t}\n\n\t\tif (allAccepted) {\n\t\t\treturn this._bulkEdit;\n\t\t}\n\n\t\t// not all edits have been accepted\n\t\tcoalesceInPlace(result);\n\t\treturn result;\n\t}\n\n\tgetFileEdits(uri: URI): IIdentifiedSingleEditOperation[] {\n\n\t\tfor (let file of this.fileOperations) {\n\t\t\tif (file.uri.toString() === uri.toString()) {\n\n\t\t\t\tconst result: IIdentifiedSingleEditOperation[] = [];\n\t\t\t\tlet ignoreAll = false;\n\n\t\t\t\tfor (const edit of file.originalEdits.values()) {\n\t\t\t\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\t\t\t\tif (this.checked.isChecked(edit)) {\n\t\t\t\t\t\t\tresult.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (!this.checked.isChecked(edit)) {\n\t\t\t\t\t\t// UNCHECKED WorkspaceFileEdit disables all text edits\n\t\t\t\t\t\tignoreAll = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ignoreAll) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn result.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tgetUriOfEdit(edit: ResourceEdit): URI {\n\t\tfor (let file of this.fileOperations) {\n\t\t\tfor (const value of file.originalEdits.values()) {\n\t\t\t\tif (value === edit) {\n\t\t\t\t\treturn file.uri;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new Error('invalid edit');\n\t}\n}\n\nexport class BulkEditPreviewProvider implements ITextModelContentProvider {\n\n\tstatic readonly Schema = 'vscode-bulkeditpreview';\n\n\tstatic emptyPreview = URI.from({ scheme: BulkEditPreviewProvider.Schema, fragment: 'empty' });\n\n\tstatic asPreviewUri(uri: URI): URI {\n\t\treturn URI.from({ scheme: BulkEditPreviewProvider.Schema, path: uri.path, query: uri.toString() });\n\t}\n\n\tstatic fromPreviewUri(uri: URI): URI {\n\t\treturn URI.parse(uri.query);\n\t}\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _ready: Promise<any>;\n\tprivate readonly _modelPreviewEdits = new Map<string, IIdentifiedSingleEditOperation[]>();\n\n\tconstructor(\n\t\tprivate readonly _operations: BulkFileOperations,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService\n\t) {\n\t\tthis._disposables.add(this._textModelResolverService.registerTextModelContentProvider(BulkEditPreviewProvider.Schema, this));\n\t\tthis._ready = this._init();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate async _init() {\n\t\tfor (let operation of this._operations.fileOperations) {\n\t\t\tawait this._applyTextEditsToPreviewModel(operation.uri);\n\t\t}\n\t\tthis._disposables.add(this._operations.checked.onDidChange(e => {\n\t\t\tconst uri = this._operations.getUriOfEdit(e);\n\t\t\tthis._applyTextEditsToPreviewModel(uri);\n\t\t}));\n\t}\n\n\tprivate async _applyTextEditsToPreviewModel(uri: URI) {\n\t\tconst model = await this._getOrCreatePreviewModel(uri);\n\n\t\t// undo edits that have been done before\n\t\tlet undoEdits = this._modelPreviewEdits.get(model.id);\n\t\tif (undoEdits) {\n\t\t\tmodel.applyEdits(undoEdits);\n\t\t}\n\t\t// apply new edits and keep (future) undo edits\n\t\tconst newEdits = this._operations.getFileEdits(uri);\n\t\tconst newUndoEdits = model.applyEdits(newEdits, true);\n\t\tthis._modelPreviewEdits.set(model.id, newUndoEdits);\n\t}\n\n\tprivate async _getOrCreatePreviewModel(uri: URI) {\n\t\tconst previewUri = BulkEditPreviewProvider.asPreviewUri(uri);\n\t\tlet model = this._modelService.getModel(previewUri);\n\t\tif (!model) {\n\t\t\ttry {\n\t\t\t\t// try: copy existing\n\t\t\t\tconst ref = await this._textModelResolverService.createModelReference(uri);\n\t\t\t\tconst sourceModel = ref.object.textEditorModel;\n\t\t\t\tmodel = this._modelService.createModel(\n\t\t\t\t\tcreateTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()),\n\t\t\t\t\tthis._modeService.create(sourceModel.getLanguageIdentifier().language),\n\t\t\t\t\tpreviewUri\n\t\t\t\t);\n\t\t\t\tref.dispose();\n\n\t\t\t} catch {\n\t\t\t\t// create NEW model\n\t\t\t\tmodel = this._modelService.createModel(\n\t\t\t\t\t'',\n\t\t\t\t\tthis._modeService.createByFilepathOrFirstLine(previewUri),\n\t\t\t\t\tpreviewUri\n\t\t\t\t);\n\t\t\t}\n\t\t\t// this is a little weird but otherwise editors and other cusomers\n\t\t\t// will dispose my models before they should be disposed...\n\t\t\t// And all of this is off the eventloop to prevent endless recursion\n\t\t\tnew Promise(async () => this._disposables.add(await this._textModelResolverService.createModelReference(model!.uri)));\n\t\t}\n\t\treturn model;\n\t}\n\n\tasync provideTextContent(previewUri: URI) {\n\t\tif (previewUri.toString() === BulkEditPreviewProvider.emptyPreview.toString()) {\n\t\t\treturn this._modelService.createModel('', null, previewUri);\n\t\t}\n\t\tawait this._ready;\n\t\treturn this._modelService.getModel(previewUri);\n\t}\n}\n"]}