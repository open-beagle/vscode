{"version":3,"file":"bulkEditPreview.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/bulkEdit/test/browser/bulkEditPreview.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { mock } from 'vs/workbench/test/common/workbenchTestServices';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { URI } from 'vs/base/common/uri';\nimport { BulkFileOperations } from 'vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\n\nsuite('BulkEditPreview', function () {\n\n\n\tlet instaService: IInstantiationService;\n\n\tsetup(function () {\n\n\t\tconst fileService: IFileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidFilesChange = Event.None;\n\t\t\toverride async exists() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst modelService: IModelService = new class extends mock<IModelService>() {\n\t\t\toverride getModel() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toverride getModels() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\n\t\tinstaService = new InstantiationService(new ServiceCollection(\n\t\t\t[IFileService, fileService],\n\t\t\t[IModelService, modelService],\n\t\t));\n\t});\n\n\ttest('one needsConfirmation unchecks all of file', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'cat1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(URI.parse('some:///uri1'), URI.parse('some:///uri2'), undefined, { label: 'cat2', needsConfirmation: false }),\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tassert.strictEqual(ops.fileOperations.length, 1);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), false);\n\t});\n\n\ttest('has categories', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'uri1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri2'), undefined, { label: 'uri2', needsConfirmation: false }),\n\t\t];\n\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tassert.strictEqual(ops.categories.length, 2);\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1'); // unconfirmed!\n\t\tassert.strictEqual(ops.categories[1].metadata.label, 'uri2');\n\t});\n\n\ttest('has not categories', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'uri1', needsConfirmation: true }),\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri2'), undefined, { label: 'uri1', needsConfirmation: false }),\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\t\tassert.strictEqual(ops.categories.length, 1);\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1'); // unconfirmed!\n\t\tassert.strictEqual(ops.categories[0].metadata.label, 'uri1');\n\t});\n\n\ttest('category selection', async function () {\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'C1', needsConfirmation: false }),\n\t\t\tnew ResourceTextEdit(URI.parse('some:///uri2'), { text: 'foo', range: new Range(1, 1, 1, 1) }, undefined, { label: 'C2', needsConfirmation: false }),\n\t\t];\n\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), true);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[1]), true);\n\n\t\tassert.ok(edits === ops.getWorkspaceEdit());\n\n\t\t// NOT taking to create, but the invalid text edit will\n\t\t// go through\n\t\tops.checked.updateChecked(edits[0], false);\n\t\tconst newEdits = ops.getWorkspaceEdit();\n\t\tassert.ok(edits !== newEdits);\n\n\t\tassert.strictEqual(edits.length, 2);\n\t\tassert.strictEqual(newEdits.length, 1);\n\t});\n\n\ttest('fix bad metadata', async function () {\n\n\t\t// bogous edit that wants creation to be confirmed, but not it's textedit-child...\n\n\t\tconst edits = [\n\t\t\tnew ResourceFileEdit(undefined, URI.parse('some:///uri1'), undefined, { label: 'C1', needsConfirmation: true }),\n\t\t\tnew ResourceTextEdit(URI.parse('some:///uri1'), { text: 'foo', range: new Range(1, 1, 1, 1) }, undefined, { label: 'C2', needsConfirmation: false })\n\t\t];\n\n\t\tconst ops = await instaService.invokeFunction(BulkFileOperations.create, edits);\n\n\t\tassert.strictEqual(ops.checked.isChecked(edits[0]), false);\n\t\tassert.strictEqual(ops.checked.isChecked(edits[1]), false);\n\t});\n});\n"]}