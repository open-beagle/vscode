{"version":3,"file":"experimentService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/experiments/test/electron-browser/experimentService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { ExperimentActionType, ExperimentState, IExperiment, ExperimentService, getCurrentActivationRecord, currentSchemaVersion } from 'vs/workbench/contrib/experiments/common/experimentService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { TestLifecycleService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport {\n\tIExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent, InstallExtensionEvent, IExtensionIdentifier, ILocalExtension\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { Emitter } from 'vs/base/common/event';\nimport { TestExtensionEnablementService } from 'vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test';\nimport { NativeURLService } from 'vs/platform/url/common/urlService';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { ITelemetryService, lastSessionDateStorageKey } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWillActivateEvent, IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { timeout } from 'vs/base/common/async';\nimport { TestExtensionService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { OS } from 'vs/base/common/platform';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { TestWorkspaceTrustManagementService } from 'vs/workbench/services/workspaces/test/common/testWorkspaceTrustService';\n\ninterface ExperimentSettings {\n\tenabled?: boolean;\n\tid?: string;\n\tstate?: ExperimentState;\n}\n\nlet experimentData: { [i: string]: any; } = {\n\texperiments: []\n};\n\nconst local = aLocalExtension('installedExtension1', { version: '1.0.0' });\n\nfunction aLocalExtension(name: string = 'someext', manifest: any = {}, properties: any = {}): ILocalExtension {\n\tmanifest = Object.assign({ name, publisher: 'pub', version: '1.0.0' }, manifest);\n\tproperties = Object.assign({\n\t\ttype: ExtensionType.User,\n\t\tlocation: URI.file(`pub.${name}`),\n\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher, manifest.name), uuid: undefined },\n\t\tmetadata: { id: getGalleryExtensionId(manifest.publisher, manifest.name), publisherId: manifest.publisher, publisherDisplayName: 'somename' }\n\t}, properties);\n\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n}\n\nexport class TestExperimentService extends ExperimentService {\n\tpublic override getExperiments(): Promise<any[]> {\n\t\treturn Promise.resolve(experimentData.experiments);\n\t}\n}\n\nsuite('Experiment Service', () => {\n\tlet instantiationService: TestInstantiationService;\n\tlet testConfigurationService: TestConfigurationService;\n\tlet testObject: ExperimentService;\n\tlet activationEvent: Emitter<IWillActivateEvent>;\n\tlet installEvent: Emitter<InstallExtensionEvent>,\n\t\tdidInstallEvent: Emitter<DidInstallExtensionEvent>,\n\t\tuninstallEvent: Emitter<IExtensionIdentifier>,\n\t\tdidUninstallEvent: Emitter<DidUninstallExtensionEvent>;\n\n\tsuiteSetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstallEvent = new Emitter<InstallExtensionEvent>();\n\t\tdidInstallEvent = new Emitter<DidInstallExtensionEvent>();\n\t\tuninstallEvent = new Emitter<IExtensionIdentifier>();\n\t\tdidUninstallEvent = new Emitter<DidUninstallExtensionEvent>();\n\t\tactivationEvent = new Emitter<IWillActivateEvent>();\n\n\t\tinstantiationService.stub(IExtensionService, TestExtensionService);\n\t\tinstantiationService.stub(IExtensionService, 'onWillActivateByEvent', activationEvent.event);\n\t\tinstantiationService.stub(IExtensionManagementService, ExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementService, 'onInstallExtension', installEvent.event);\n\t\tinstantiationService.stub(IExtensionManagementService, 'onDidInstallExtension', didInstallEvent.event);\n\t\tinstantiationService.stub(IExtensionManagementService, 'onUninstallExtension', uninstallEvent.event);\n\t\tinstantiationService.stub(IExtensionManagementService, 'onDidUninstallExtension', didUninstallEvent.event);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, new TestExtensionEnablementService(instantiationService));\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IURLService, NativeURLService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\ttestConfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, testConfigurationService);\n\t\tinstantiationService.stub(ILifecycleService, new TestLifecycleService());\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{ get: (a: string, b: StorageScope, c?: string) => c, getBoolean: (a: string, b: StorageScope, c?: boolean) => c, store: () => { }, remove: () => { } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, new TestWorkspaceTrustManagementService());\n\n\t\tsetup(() => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{ get: (a: string, b: StorageScope, c?: string) => c, getBoolean: (a: string, b: StorageScope, c?: boolean) => c, store: () => { }, remove: () => { } });\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tif (testObject) {\n\t\t\t\ttestObject.dispose();\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('Simple Experiment Test', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment2',\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment3',\n\t\t\t\t\tenabled: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment4',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment5',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinsidersOnly: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\tconst tests: Promise<IExperiment>[] = [];\n\t\ttests.push(testObject.getExperimentById('experiment1'));\n\t\ttests.push(testObject.getExperimentById('experiment2'));\n\t\ttests.push(testObject.getExperimentById('experiment3'));\n\t\ttests.push(testObject.getExperimentById('experiment4'));\n\t\ttests.push(testObject.getExperimentById('experiment5'));\n\n\t\treturn Promise.all(tests).then(results => {\n\t\t\tassert.strictEqual(results[0].id, 'experiment1');\n\t\t\tassert.strictEqual(results[0].enabled, false);\n\t\t\tassert.strictEqual(results[0].state, ExperimentState.NoRun);\n\n\t\t\tassert.strictEqual(results[1].id, 'experiment2');\n\t\t\tassert.strictEqual(results[1].enabled, false);\n\t\t\tassert.strictEqual(results[1].state, ExperimentState.NoRun);\n\n\t\t\tassert.strictEqual(results[2].id, 'experiment3');\n\t\t\tassert.strictEqual(results[2].enabled, true);\n\t\t\tassert.strictEqual(results[2].state, ExperimentState.Run);\n\n\t\t\tassert.strictEqual(results[3].id, 'experiment4');\n\t\t\tassert.strictEqual(results[3].enabled, true);\n\t\t\tassert.strictEqual(results[3].state, ExperimentState.Run);\n\n\t\t\tassert.strictEqual(results[4].id, 'experiment5');\n\t\t\tassert.strictEqual(results[4].enabled, true);\n\t\t\tassert.strictEqual(results[4].state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('filters out experiments with newer schema versions', async () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\t// no version == 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment2',\n\t\t\t\t\tschemaVersion: currentSchemaVersion,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment3',\n\t\t\t\t\tschemaVersion: currentSchemaVersion + 1,\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\tconst actual = await Promise.all([\n\t\t\ttestObject.getExperimentById('experiment1'),\n\t\t\ttestObject.getExperimentById('experiment2'),\n\t\t\ttestObject.getExperimentById('experiment3'),\n\t\t]);\n\n\t\tassert.strictEqual(actual[0]?.id, 'experiment1');\n\t\tassert.strictEqual(actual[1]?.id, 'experiment2');\n\t\tassert.strictEqual(actual[2], undefined);\n\t});\n\n\ttest('Insiders only experiment shouldnt be enabled in stable', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinsidersOnly: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IProductService, { quality: 'stable' });\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('NewUsers experiment shouldnt be enabled for old users', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tnewUser: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => {\n\t\t\t\treturn a === lastSessionDateStorageKey ? 'some-date' : undefined;\n\t\t\t},\n\t\t\tgetBoolean: (a: string, b: StorageScope, c?: boolean) => c, store: () => { }, remove: () => { }\n\t\t});\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('OldUsers experiment shouldnt be enabled for new users', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tnewUser: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Experiment without NewUser condition should be enabled for old users', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c: string | undefined) => {\n\t\t\t\treturn a === lastSessionDateStorageKey ? 'some-date' : undefined;\n\t\t\t},\n\t\t\tgetBoolean: (a: string, b: StorageScope, c?: boolean) => c, store: () => { }, remove: () => { }\n\t\t});\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Experiment without NewUser condition should be enabled for new users', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Experiment with OS should be enabled on current OS', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tos: [OS],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Experiment with OS should be disabled on other OS', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tos: [OS - 1],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Activation event experiment with not enough events should be evaluating', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tactivationEvent: {\n\t\t\t\t\t\t\tevent: 'my:event',\n\t\t\t\t\t\t\tminEvents: 5,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, 'get', (a: string, b: StorageScope, c?: string) => {\n\t\t\treturn a === 'experimentEventRecord-my-event'\n\t\t\t\t? JSON.stringify({ count: [2], mostRecentBucket: Date.now() })\n\t\t\t\t: undefined;\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Evaluating);\n\t\t});\n\t});\n\n\ttest('Activation event works with enough events', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tactivationEvent: {\n\t\t\t\t\t\t\tevent: 'my:event',\n\t\t\t\t\t\t\tminEvents: 5,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, 'get', (a: string, b: StorageScope, c?: string) => {\n\t\t\treturn a === 'experimentEventRecord-my-event'\n\t\t\t\t? JSON.stringify({ count: [10], mostRecentBucket: Date.now() })\n\t\t\t\t: undefined;\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Activation event does not work with old data', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tactivationEvent: {\n\t\t\t\t\t\t\tevent: 'my:event',\n\t\t\t\t\t\t\tminEvents: 5,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, 'get', (a: string, b: StorageScope, c?: string) => {\n\t\t\treturn a === 'experimentEventRecord-my-event'\n\t\t\t\t? JSON.stringify({ count: [10], mostRecentBucket: Date.now() - (1000 * 60 * 60 * 24 * 10) })\n\t\t\t\t: undefined;\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Evaluating);\n\t\t});\n\t});\n\n\ttest('Parses activation records correctly', () => {\n\t\tconst timers = sinon.useFakeTimers(); // so Date.now() is stable\n\t\tconst oneDay = 1000 * 60 * 60 * 24;\n\t\tteardown(() => timers.restore());\n\n\t\tlet rec = getCurrentActivationRecord();\n\n\t\t// good default:\n\t\tassert.deepStrictEqual(rec, {\n\t\t\tcount: [0, 0, 0, 0, 0, 0, 0],\n\t\t\tmostRecentBucket: Date.now(),\n\t\t});\n\n\t\trec.count[0] = 1;\n\t\ttimers.tick(1);\n\t\trec = getCurrentActivationRecord(rec);\n\n\t\t// does not advance unnecessarily\n\t\tassert.deepStrictEqual(getCurrentActivationRecord(rec), {\n\t\t\tcount: [1, 0, 0, 0, 0, 0, 0],\n\t\t\tmostRecentBucket: Date.now() - 1,\n\t\t});\n\n\t\t// advances time\n\t\ttimers.tick(oneDay * 3);\n\t\trec = getCurrentActivationRecord(rec);\n\t\tassert.deepStrictEqual(getCurrentActivationRecord(rec), {\n\t\t\tcount: [0, 0, 0, 1, 0, 0, 0],\n\t\t\tmostRecentBucket: Date.now() - 1,\n\t\t});\n\n\t\t// rotates off time\n\t\ttimers.tick(oneDay * 4);\n\t\trec.count[0] = 2;\n\t\trec = getCurrentActivationRecord(rec);\n\t\tassert.deepStrictEqual(getCurrentActivationRecord(rec), {\n\t\t\tcount: [0, 0, 0, 0, 2, 0, 0],\n\t\t\tmostRecentBucket: Date.now() - 1,\n\t\t});\n\t});\n\n\ttest('Activation event updates', async () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tactivationEvent: {\n\t\t\t\t\t\t\tevent: 'my:event',\n\t\t\t\t\t\t\tminEvents: 2,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, 'get', (a: string, b: StorageScope, c?: string) => {\n\t\t\treturn a === 'experimentEventRecord-my-event'\n\t\t\t\t? JSON.stringify({ count: [10, 0, 0, 0, 0, 0, 0], mostRecentBucket: Date.now() - (1000 * 60 * 60 * 24 * 2) })\n\t\t\t\t: undefined;\n\t\t});\n\n\t\tlet didGetCall = false;\n\t\tinstantiationService.stub(IStorageService, 'store', (key: string, value: string, scope: StorageScope) => {\n\t\t\tif (key.includes('experimentEventRecord')) {\n\t\t\t\tdidGetCall = true;\n\t\t\t\tassert.strictEqual(key, 'experimentEventRecord-my-event');\n\t\t\t\tassert.deepStrictEqual(JSON.parse(value).count, [1, 0, 10, 0, 0, 0, 0]);\n\t\t\t\tassert.strictEqual(scope, StorageScope.GLOBAL);\n\t\t\t}\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\tawait testObject.getExperimentById('experiment1');\n\t\tactivationEvent.fire({ event: 'not our event', activation: Promise.resolve() });\n\t\tactivationEvent.fire({ event: 'my:event', activation: Promise.resolve() });\n\t\tassert(didGetCall);\n\t});\n\n\ttest('Activation events run experiments in realtime', async () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tactivationEvent: {\n\t\t\t\t\t\t\tevent: 'my:event',\n\t\t\t\t\t\t\tminEvents: 2,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tlet calls = 0;\n\t\tinstantiationService.stub(IStorageService, 'get', (a: string, b: StorageScope, c?: string) => {\n\t\t\treturn a === 'experimentEventRecord-my-event'\n\t\t\t\t? JSON.stringify({ count: [++calls, 0, 0, 0, 0, 0, 0], mostRecentBucket: Date.now() })\n\t\t\t\t: undefined;\n\t\t});\n\n\t\tconst enabledListener = sinon.stub();\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\ttestObject.onExperimentEnabled(enabledListener);\n\n\t\tassert.strictEqual((await testObject.getExperimentById('experiment1')).state, ExperimentState.Evaluating);\n\t\tassert.strictEqual((await testObject.getExperimentById('experiment1')).state, ExperimentState.Evaluating);\n\t\tassert.strictEqual(enabledListener.callCount, 0);\n\n\t\tactivationEvent.fire({ event: 'my:event', activation: Promise.resolve() });\n\t\tawait timeout(1);\n\t\tassert.strictEqual(enabledListener.callCount, 1);\n\t\tassert.strictEqual((await testObject.getExperimentById('experiment1')).state, ExperimentState.Run);\n\t});\n\n\ttest('Experiment not matching user setting should be disabled', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tuserSetting: { neat: true }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IConfigurationService, 'getValue',\n\t\t\t(key: string) => key === 'neat' ? false : undefined);\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Experiment matching user setting should be enabled', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tuserSetting: { neat: true }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IConfigurationService, 'getValue',\n\t\t\t(key: string) => key === 'neat' ? true : undefined);\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Experiment with no matching display language should be disabled', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tdisplayLanguage: 'somethingthat-nooneknows'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Experiment with condition type InstalledExtensions is enabled when one of the expected extensions is installed', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinstalledExtensions: {\n\t\t\t\t\t\t\tinlcudes: ['pub.installedExtension1', 'uninstalled-extention-id']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Experiment with condition type InstalledExtensions is disabled when none of the expected extensions is installed', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinstalledExtensions: {\n\t\t\t\t\t\t\tincludes: ['uninstalled-extention-id1', 'uninstalled-extention-id2']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Experiment with condition type InstalledExtensions is disabled when one of the exlcuded extensions is installed', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinstalledExtensions: {\n\t\t\t\t\t\t\texcludes: ['pub.installedExtension1', 'uninstalled-extention-id2']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t});\n\t});\n\n\ttest('Experiment that is marked as complete should be disabled regardless of the conditions', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinstalledExtensions: {\n\t\t\t\t\t\t\tincludes: ['pub.installedExtension1', 'uninstalled-extention-id2']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => a === 'experiments.experiment1' ? JSON.stringify({ state: ExperimentState.Complete }) : c,\n\t\t\tstore: () => { }\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Complete);\n\t\t});\n\t});\n\n\ttest('Experiment with evaluate only once should read enablement from storage service', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tinstalledExtensions: {\n\t\t\t\t\t\t\texcludes: ['pub.installedExtension1', 'uninstalled-extention-id2']\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevaluateOnlyOnce: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => a === 'experiments.experiment1' ? JSON.stringify({ enabled: true, state: ExperimentState.Run }) : c,\n\t\t\tstore: () => { }\n\t\t});\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t});\n\t});\n\n\ttest('Curated list should be available if experiment is enabled.', () => {\n\t\tconst promptText = 'Hello there! Can you see this?';\n\t\tconst curatedExtensionsKey = 'AzureDeploy';\n\t\tconst curatedExtensionsList = ['uninstalled-extention-id1', 'uninstalled-extention-id2'];\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Prompt',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpromptText,\n\t\t\t\t\t\t\tcommands: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'Search Marketplace',\n\t\t\t\t\t\t\t\t\tdontShowAgain: true,\n\t\t\t\t\t\t\t\t\tcuratedExtensionsKey,\n\t\t\t\t\t\t\t\t\tcuratedExtensionsList\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'No'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, true);\n\t\t\tassert.strictEqual(result.state, ExperimentState.Run);\n\t\t\treturn testObject.getCuratedExtensionsList(curatedExtensionsKey).then(curatedList => {\n\t\t\t\tassert.strictEqual(curatedList, curatedExtensionsList);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Curated list shouldnt be available if experiment is disabled.', () => {\n\t\tconst promptText = 'Hello there! Can you see this?';\n\t\tconst curatedExtensionsKey = 'AzureDeploy';\n\t\tconst curatedExtensionsList = ['uninstalled-extention-id1', 'uninstalled-extention-id2'];\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: false,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Prompt',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpromptText,\n\t\t\t\t\t\t\tcommands: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'Search Marketplace',\n\t\t\t\t\t\t\t\t\tdontShowAgain: true,\n\t\t\t\t\t\t\t\t\tcuratedExtensionsKey,\n\t\t\t\t\t\t\t\t\tcuratedExtensionsList\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'No'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, false);\n\t\t\tassert.strictEqual(result.action?.type, 'Prompt');\n\t\t\tassert.strictEqual(result.state, ExperimentState.NoRun);\n\t\t\treturn testObject.getCuratedExtensionsList(curatedExtensionsKey).then(curatedList => {\n\t\t\t\tassert.strictEqual(curatedList.length, 0);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Maps action2 to action.', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: false,\n\t\t\t\t\taction2: {\n\t\t\t\t\t\ttype: 'Prompt',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpromptText: 'Hello world',\n\t\t\t\t\t\t\tcommands: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.action?.type, 'Prompt');\n\t\t});\n\t});\n\n\ttest('Experiment that is disabled or deleted should be removed from storage', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment1',\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment3',\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tlet storageDataExperiment1: ExperimentSettings | null = { enabled: false };\n\t\tlet storageDataExperiment2: ExperimentSettings | null = { enabled: false };\n\t\tlet storageDataAllExperiments: string[] | null = ['experiment1', 'experiment2', 'experiment3'];\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment1);\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment2);\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\treturn JSON.stringify(storageDataAllExperiments);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t},\n\t\t\tstore: (a: string, b: any, c: StorageScope) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\tstorageDataExperiment1 = JSON.parse(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\tstorageDataExperiment2 = JSON.parse(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\tstorageDataAllExperiments = JSON.parse(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tremove: (a: string) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\tstorageDataExperiment1 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\tstorageDataExperiment2 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\tstorageDataAllExperiments = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\tconst disabledExperiment = testObject.getExperimentById('experiment1').then(result => {\n\t\t\tassert.strictEqual(result.enabled, false);\n\t\t\tassert.strictEqual(!!storageDataExperiment1, false);\n\t\t});\n\t\tconst deletedExperiment = testObject.getExperimentById('experiment2').then(result => {\n\t\t\tassert.strictEqual(!!result, false);\n\t\t\tassert.strictEqual(!!storageDataExperiment2, false);\n\t\t});\n\t\treturn Promise.all([disabledExperiment, deletedExperiment]).then(() => {\n\t\t\tassert.strictEqual(storageDataAllExperiments!.length, 1);\n\t\t\tassert.strictEqual(storageDataAllExperiments![0], 'experiment3');\n\t\t});\n\n\t});\n\n\ttest('Offline mode', () => {\n\t\texperimentData = {\n\t\t\texperiments: null\n\t\t};\n\n\t\tlet storageDataExperiment1: ExperimentSettings | null = { enabled: true, state: ExperimentState.Run };\n\t\tlet storageDataExperiment2: ExperimentSettings | null = { enabled: true, state: ExperimentState.NoRun };\n\t\tlet storageDataExperiment3: ExperimentSettings | null = { enabled: true, state: ExperimentState.Evaluating };\n\t\tlet storageDataExperiment4: ExperimentSettings | null = { enabled: true, state: ExperimentState.Complete };\n\t\tlet storageDataAllExperiments: string[] | null = ['experiment1', 'experiment2', 'experiment3', 'experiment4'];\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment1);\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment2);\n\t\t\t\t\tcase 'experiments.experiment3':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment3);\n\t\t\t\t\tcase 'experiments.experiment4':\n\t\t\t\t\t\treturn JSON.stringify(storageDataExperiment4);\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\treturn JSON.stringify(storageDataAllExperiments);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t},\n\t\t\tstore: (a, b, c) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\tstorageDataExperiment1 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\tstorageDataExperiment2 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment3':\n\t\t\t\t\t\tstorageDataExperiment3 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment4':\n\t\t\t\t\t\tstorageDataExperiment4 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\tstorageDataAllExperiments = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tremove: a => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment1':\n\t\t\t\t\t\tstorageDataExperiment1 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment2':\n\t\t\t\t\t\tstorageDataExperiment2 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment3':\n\t\t\t\t\t\tstorageDataExperiment3 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment4':\n\t\t\t\t\t\tstorageDataExperiment4 = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'allExperiments':\n\t\t\t\t\t\tstorageDataAllExperiments = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\n\t\tconst tests: Promise<IExperiment>[] = [];\n\t\ttests.push(testObject.getExperimentById('experiment1'));\n\t\ttests.push(testObject.getExperimentById('experiment2'));\n\t\ttests.push(testObject.getExperimentById('experiment3'));\n\t\ttests.push(testObject.getExperimentById('experiment4'));\n\n\t\treturn Promise.all(tests).then(results => {\n\t\t\tassert.strictEqual(results[0].id, 'experiment1');\n\t\t\tassert.strictEqual(results[0].enabled, true);\n\t\t\tassert.strictEqual(results[0].state, ExperimentState.Run);\n\n\t\t\tassert.strictEqual(results[1].id, 'experiment2');\n\t\t\tassert.strictEqual(results[1].enabled, true);\n\t\t\tassert.strictEqual(results[1].state, ExperimentState.NoRun);\n\n\t\t\tassert.strictEqual(results[2].id, 'experiment3');\n\t\t\tassert.strictEqual(results[2].enabled, true);\n\t\t\tassert.strictEqual(results[2].state, ExperimentState.Evaluating);\n\n\t\t\tassert.strictEqual(results[3].id, 'experiment4');\n\t\t\tassert.strictEqual(results[3].enabled, true);\n\t\t\tassert.strictEqual(results[3].state, ExperimentState.Complete);\n\t\t});\n\n\t});\n\n\ttest('getExperimentByType', () => {\n\t\tconst customProperties = {\n\t\t\tsome: 'random-value'\n\t\t};\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'simple-experiment',\n\t\t\t\t\tenabled: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'custom-experiment',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Custom',\n\t\t\t\t\t\tproperties: customProperties\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'custom-experiment-no-properties',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Custom'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'prompt-with-no-commands',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Prompt',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpromptText: 'someText'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'prompt-with-commands',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttype: 'Prompt',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpromptText: 'someText',\n\t\t\t\t\t\t\tcommands: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'Hello'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\tconst custom = testObject.getExperimentsByType(ExperimentActionType.Custom).then(result => {\n\t\t\tassert.strictEqual(result.length, 3);\n\t\t\tassert.strictEqual(result[0].id, 'simple-experiment');\n\t\t\tassert.strictEqual(result[1].id, 'custom-experiment');\n\t\t\tassert.strictEqual(result[1].action!.properties, customProperties);\n\t\t\tassert.strictEqual(result[2].id, 'custom-experiment-no-properties');\n\t\t\tassert.strictEqual(!!result[2].action!.properties, true);\n\t\t});\n\t\tconst prompt = testObject.getExperimentsByType(ExperimentActionType.Prompt).then(result => {\n\t\t\tassert.strictEqual(result.length, 2);\n\t\t\tassert.strictEqual(result[0].id, 'prompt-with-no-commands');\n\t\t\tassert.strictEqual(result[1].id, 'prompt-with-commands');\n\t\t});\n\t\treturn Promise.all([custom, prompt]);\n\t});\n\n\ttest('experimentsPreviouslyRun includes, excludes check', () => {\n\t\texperimentData = {\n\t\t\texperiments: [\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment3',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\texperimentsPreviouslyRun: {\n\t\t\t\t\t\t\tincludes: ['experiment1'],\n\t\t\t\t\t\t\texcludes: ['experiment2']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'experiment4',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\texperimentsPreviouslyRun: {\n\t\t\t\t\t\t\tincludes: ['experiment1'],\n\t\t\t\t\t\t\texcludes: ['experiment200']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tlet storageDataExperiment3 = { enabled: true, state: ExperimentState.Evaluating };\n\t\tlet storageDataExperiment4 = { enabled: true, state: ExperimentState.Evaluating };\n\t\tinstantiationService.stub(IStorageService, <Partial<IStorageService>>{\n\t\t\tget: (a: string, b: StorageScope, c?: string) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'currentOrPreviouslyRunExperiments':\n\t\t\t\t\t\treturn JSON.stringify(['experiment1', 'experiment2']);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t},\n\t\t\tstore: (a, b, c) => {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase 'experiments.experiment3':\n\t\t\t\t\t\tstorageDataExperiment3 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'experiments.experiment4':\n\t\t\t\t\t\tstorageDataExperiment4 = JSON.parse(b + '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttestObject = instantiationService.createInstance(TestExperimentService);\n\t\treturn testObject.getExperimentsByType(ExperimentActionType.Custom).then(result => {\n\t\t\tassert.strictEqual(result.length, 2);\n\t\t\tassert.strictEqual(result[0].id, 'experiment3');\n\t\t\tassert.strictEqual(result[0].state, ExperimentState.NoRun);\n\t\t\tassert.strictEqual(result[1].id, 'experiment4');\n\t\t\tassert.strictEqual(result[1].state, ExperimentState.Run);\n\t\t\tassert.strictEqual(storageDataExperiment3.state, ExperimentState.NoRun);\n\t\t\tassert.strictEqual(storageDataExperiment4.state, ExperimentState.Run);\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t});\n\t// test('Experiment with condition type FileEdit should increment editcount as appropriate', () => {\n\n\t// });\n\n\t// test('Experiment with condition type WorkspaceEdit should increment editcount as appropriate', () => {\n\n\t// });\n\n\n\n});\n\n\n"]}