{"version":3,"file":"experimentService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/experiments/common/experimentService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService, lastSessionDateStorageKey } from 'vs/platform/telemetry/common/telemetry';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { language, OperatingSystem, OS } from 'vs/base/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { match } from 'vs/base/common/glob';\nimport { IRequestService, asJson } from 'vs/platform/request/common/request';\nimport { ITextFileService, ITextFileEditorModel } from 'vs/workbench/services/textfile/common/textfiles';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { distinct } from 'vs/base/common/arrays';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkspaceTagsService } from 'vs/workbench/contrib/tags/common/workspaceTags';\nimport { RunOnceWorker } from 'vs/base/common/async';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { equals } from 'vs/base/common/objects';\n\nexport const enum ExperimentState {\n\tEvaluating,\n\tNoRun,\n\tRun,\n\tComplete\n}\n\nexport interface IExperimentAction {\n\ttype: ExperimentActionType;\n\tproperties: any;\n}\n\nexport enum ExperimentActionType {\n\tCustom = 'Custom',\n\tPrompt = 'Prompt',\n\tAddToRecommendations = 'AddToRecommendations',\n\tExtensionSearchResults = 'ExtensionSearchResults'\n}\n\nexport type LocalizedPromptText = { [locale: string]: string; };\n\nexport interface IExperimentActionPromptProperties {\n\tpromptText: string | LocalizedPromptText;\n\tcommands: IExperimentActionPromptCommand[];\n}\n\nexport interface IExperimentActionPromptCommand {\n\ttext: string | { [key: string]: string; };\n\texternalLink?: string;\n\tcuratedExtensionsKey?: string;\n\tcuratedExtensionsList?: string[];\n\tcodeCommand?: {\n\t\tid: string;\n\t\targuments: unknown[];\n\t};\n}\n\nexport interface IExperiment {\n\tid: string;\n\tenabled: boolean;\n\traw: IRawExperiment | undefined;\n\tstate: ExperimentState;\n\taction?: IExperimentAction;\n}\n\nexport interface IExperimentService {\n\treadonly _serviceBrand: undefined;\n\tgetExperimentById(id: string): Promise<IExperiment>;\n\tgetExperimentsByType(type: ExperimentActionType): Promise<IExperiment[]>;\n\tgetCuratedExtensionsList(curatedExtensionsKey: string): Promise<string[]>;\n\tmarkAsCompleted(experimentId: string): void;\n\n\tonExperimentEnabled: Event<IExperiment>;\n}\n\nexport const IExperimentService = createDecorator<IExperimentService>('experimentService');\n\ninterface IExperimentStorageState {\n\tenabled: boolean;\n\tstate: ExperimentState;\n\teditCount?: number;\n\tlastEditedDate?: string;\n}\n\n/**\n * Current version of the experiment schema in this VS Code build. This *must*\n * be incremented when adding a condition, otherwise experiments might activate\n * on older versions of VS Code where not intended.\n */\nexport const currentSchemaVersion = 4;\n\ninterface IRawExperiment {\n\tid: string;\n\tschemaVersion: number;\n\tenabled?: boolean;\n\tcondition?: {\n\t\tinsidersOnly?: boolean;\n\t\tnewUser?: boolean;\n\t\tdisplayLanguage?: string;\n\t\t// Evaluates to true iff all the given user settings are deeply equal\n\t\tuserSetting?: { [key: string]: unknown; };\n\t\t// Start the experiment if the number of activation events have happened over the last week:\n\t\tactivationEvent?: {\n\t\t\tevent: string;\n\t\t\tuniqueDays?: number;\n\t\t\tminEvents: number;\n\t\t};\n\t\tos: OperatingSystem[];\n\t\tinstalledExtensions?: {\n\t\t\texcludes?: string[];\n\t\t\tincludes?: string[];\n\t\t};\n\t\tfileEdits?: {\n\t\t\tfilePathPattern?: string;\n\t\t\tworkspaceIncludes?: string[];\n\t\t\tworkspaceExcludes?: string[];\n\t\t\tminEditCount: number;\n\t\t};\n\t\texperimentsPreviouslyRun?: {\n\t\t\texcludes?: string[];\n\t\t\tincludes?: string[];\n\t\t};\n\t\tuserProbability?: number;\n\t};\n\taction?: IExperimentAction;\n\taction2?: IExperimentAction;\n}\n\ninterface IActivationEventRecord {\n\tcount: number[];\n\tmostRecentBucket: number;\n}\n\nconst experimentEventStorageKey = (event: string) => 'experimentEventRecord-' + event.replace(/[^0-9a-z]/ig, '-');\n\n/**\n * Updates the activation record to shift off days outside the window\n * we're interested in.\n */\nexport const getCurrentActivationRecord = (previous?: IActivationEventRecord, dayWindow = 7): IActivationEventRecord => {\n\tconst oneDay = 1000 * 60 * 60 * 24;\n\tconst now = Date.now();\n\tif (!previous) {\n\t\treturn { count: new Array(dayWindow).fill(0), mostRecentBucket: now };\n\t}\n\n\t// get the number of days, up to dayWindow, that passed since the last bucket update\n\tconst shift = Math.min(dayWindow, Math.floor((now - previous.mostRecentBucket) / oneDay));\n\tif (!shift) {\n\t\treturn previous;\n\t}\n\n\treturn {\n\t\tcount: new Array(shift).fill(0).concat(previous.count.slice(0, -shift)),\n\t\tmostRecentBucket: previous.mostRecentBucket + shift * oneDay,\n\t};\n};\n\nexport class ExperimentService extends Disposable implements IExperimentService {\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate _experiments: IExperiment[] = [];\n\tprivate _loadExperimentsPromise: Promise<void>;\n\tprivate _curatedMapping = Object.create(null);\n\n\tprivate readonly _onExperimentEnabled = this._register(new Emitter<IExperiment>());\n\tonExperimentEnabled: Event<IExperiment> = this._onExperimentEnabled.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IWorkspaceTagsService private readonly workspaceTagsService: IWorkspaceTagsService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper();\n\n\t\tthis._loadExperimentsPromise = Promise.resolve(this.lifecycleService.when(LifecyclePhase.Eventually)).then(() =>\n\t\t\tthis.loadExperiments());\n\t}\n\n\tpublic getExperimentById(id: string): Promise<IExperiment> {\n\t\treturn this._loadExperimentsPromise.then(() => {\n\t\t\treturn this._experiments.filter(x => x.id === id)[0];\n\t\t});\n\t}\n\n\tpublic getExperimentsByType(type: ExperimentActionType): Promise<IExperiment[]> {\n\t\treturn this._loadExperimentsPromise.then(() => {\n\t\t\tif (type === ExperimentActionType.Custom) {\n\t\t\t\treturn this._experiments.filter(x => x.enabled && (!x.action || x.action.type === type));\n\t\t\t}\n\t\t\treturn this._experiments.filter(x => x.enabled && x.action && x.action.type === type);\n\t\t});\n\t}\n\n\tpublic getCuratedExtensionsList(curatedExtensionsKey: string): Promise<string[]> {\n\t\treturn this._loadExperimentsPromise.then(() => {\n\t\t\tfor (const experiment of this._experiments) {\n\t\t\t\tif (experiment.enabled\n\t\t\t\t\t&& experiment.state === ExperimentState.Run\n\t\t\t\t\t&& this._curatedMapping[experiment.id]\n\t\t\t\t\t&& this._curatedMapping[experiment.id].curatedExtensionsKey === curatedExtensionsKey) {\n\t\t\t\t\treturn this._curatedMapping[experiment.id].curatedExtensionsList;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic markAsCompleted(experimentId: string): void {\n\t\tconst storageKey = 'experiments.' + experimentId;\n\t\tconst experimentState: IExperimentStorageState = safeParse(this.storageService.get(storageKey, StorageScope.GLOBAL), {});\n\t\texperimentState.state = ExperimentState.Complete;\n\t\tthis.storageService.store(storageKey, JSON.stringify(experimentState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tprotected async getExperiments(): Promise<IRawExperiment[] | null> {\n\t\tif (!this.productService.experimentsUrl || this.configurationService.getValue('workbench.enableExperiments') === false) {\n\t\t\treturn [];\n\t\t}\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request({ type: 'GET', url: this.productService.experimentsUrl }, CancellationToken.None);\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst result = await asJson<{ experiments?: IRawExperiment; }>(context);\n\t\t\treturn result && Array.isArray(result.experiments) ? result.experiments : [];\n\t\t} catch (_e) {\n\t\t\t// Bad request or invalid JSON\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate loadExperiments(): Promise<any> {\n\t\treturn this.getExperiments().then(rawExperiments => {\n\t\t\t// Offline mode\n\t\t\tif (!rawExperiments) {\n\t\t\t\tconst allExperimentIdsFromStorage = safeParse(this.storageService.get('allExperiments', StorageScope.GLOBAL), []);\n\t\t\t\tif (Array.isArray(allExperimentIdsFromStorage)) {\n\t\t\t\t\tallExperimentIdsFromStorage.forEach(experimentId => {\n\t\t\t\t\t\tconst storageKey = 'experiments.' + experimentId;\n\t\t\t\t\t\tconst experimentState: IExperimentStorageState = safeParse(this.storageService.get(storageKey, StorageScope.GLOBAL), null);\n\t\t\t\t\t\tif (experimentState) {\n\t\t\t\t\t\t\tthis._experiments.push({\n\t\t\t\t\t\t\t\tid: experimentId,\n\t\t\t\t\t\t\t\traw: undefined,\n\t\t\t\t\t\t\t\tenabled: experimentState.enabled,\n\t\t\t\t\t\t\t\tstate: experimentState.state\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\n\t\t\t// Don't look at experiments with newer schema versions. We can't\n\t\t\t// understand them, trying to process them might even cause errors.\n\t\t\trawExperiments = rawExperiments.filter(e => (e.schemaVersion || 0) <= currentSchemaVersion);\n\n\t\t\t// Clear disbaled/deleted experiments from storage\n\t\t\tconst allExperimentIdsFromStorage = safeParse(this.storageService.get('allExperiments', StorageScope.GLOBAL), []);\n\t\t\tconst enabledExperiments = rawExperiments.filter(experiment => !!experiment.enabled).map(experiment => experiment.id.toLowerCase());\n\t\t\tif (Array.isArray(allExperimentIdsFromStorage)) {\n\t\t\t\tallExperimentIdsFromStorage.forEach(experiment => {\n\t\t\t\t\tif (enabledExperiments.indexOf(experiment) === -1) {\n\t\t\t\t\t\tthis.storageService.remove(`experiments.${experiment}`, StorageScope.GLOBAL);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (enabledExperiments.length) {\n\t\t\t\tthis.storageService.store('allExperiments', JSON.stringify(enabledExperiments), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove('allExperiments', StorageScope.GLOBAL);\n\t\t\t}\n\n\t\t\tconst activationEvents = new Set(rawExperiments.map(exp => exp.condition?.activationEvent?.event).filter(evt => !!evt));\n\t\t\tif (activationEvents.size) {\n\t\t\t\tthis._register(this.extensionService.onWillActivateByEvent(evt => {\n\t\t\t\t\tif (activationEvents.has(evt.event)) {\n\t\t\t\t\t\tthis.recordActivatedEvent(evt.event);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tconst promises = rawExperiments.map(experiment => this.evaluateExperiment(experiment));\n\t\t\treturn Promise.all(promises).then(() => {\n\t\t\t\ttype ExperimentsClassification = {\n\t\t\t\t\texperiments: { classification: 'SystemMetaData', purpose: 'FeatureInsight'; };\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<{ experiments: IExperiment[]; }, ExperimentsClassification>('experiments', { experiments: this._experiments });\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate evaluateExperiment(experiment: IRawExperiment) {\n\t\tconst processedExperiment: IExperiment = {\n\t\t\tid: experiment.id,\n\t\t\traw: experiment,\n\t\t\tenabled: !!experiment.enabled,\n\t\t\tstate: !!experiment.enabled ? ExperimentState.Evaluating : ExperimentState.NoRun\n\t\t};\n\n\t\tconst action = experiment.action2 || experiment.action;\n\t\tif (action) {\n\t\t\tprocessedExperiment.action = {\n\t\t\t\ttype: ExperimentActionType[action.type] || ExperimentActionType.Custom,\n\t\t\t\tproperties: action.properties\n\t\t\t};\n\t\t\tif (processedExperiment.action.type === ExperimentActionType.Prompt) {\n\t\t\t\t((<IExperimentActionPromptProperties>processedExperiment.action.properties).commands || []).forEach(x => {\n\t\t\t\t\tif (x.curatedExtensionsKey && Array.isArray(x.curatedExtensionsList)) {\n\t\t\t\t\t\tthis._curatedMapping[experiment.id] = x;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!processedExperiment.action.properties) {\n\t\t\t\tprocessedExperiment.action.properties = {};\n\t\t\t}\n\t\t}\n\n\t\tthis._experiments = this._experiments.filter(e => e.id !== processedExperiment.id);\n\t\tthis._experiments.push(processedExperiment);\n\n\t\tif (!processedExperiment.enabled) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst storageKey = 'experiments.' + experiment.id;\n\t\tconst experimentState: IExperimentStorageState = safeParse(this.storageService.get(storageKey, StorageScope.GLOBAL), {});\n\t\tif (!experimentState.hasOwnProperty('enabled')) {\n\t\t\texperimentState.enabled = processedExperiment.enabled;\n\t\t}\n\t\tif (!experimentState.hasOwnProperty('state')) {\n\t\t\texperimentState.state = processedExperiment.enabled ? ExperimentState.Evaluating : ExperimentState.NoRun;\n\t\t} else {\n\t\t\tprocessedExperiment.state = experimentState.state;\n\t\t}\n\n\t\treturn this.shouldRunExperiment(experiment, processedExperiment).then((state: ExperimentState) => {\n\t\t\texperimentState.state = processedExperiment.state = state;\n\t\t\tthis.storageService.store(storageKey, JSON.stringify(experimentState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\n\t\t\tif (state === ExperimentState.Run) {\n\t\t\t\tthis.fireRunExperiment(processedExperiment);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t}\n\n\tprivate fireRunExperiment(experiment: IExperiment) {\n\t\tthis._onExperimentEnabled.fire(experiment);\n\t\tconst runExperimentIdsFromStorage: string[] = safeParse(this.storageService.get('currentOrPreviouslyRunExperiments', StorageScope.GLOBAL), []);\n\t\tif (runExperimentIdsFromStorage.indexOf(experiment.id) === -1) {\n\t\t\trunExperimentIdsFromStorage.push(experiment.id);\n\t\t}\n\n\t\t// Ensure we dont store duplicates\n\t\tconst distinctExperiments = distinct(runExperimentIdsFromStorage);\n\t\tif (runExperimentIdsFromStorage.length !== distinctExperiments.length) {\n\t\t\tthis.storageService.store('currentOrPreviouslyRunExperiments', JSON.stringify(distinctExperiments), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}\n\t}\n\n\tprivate checkExperimentDependencies(experiment: IRawExperiment): boolean {\n\t\tconst experimentsPreviouslyRun = experiment.condition?.experimentsPreviouslyRun;\n\t\tif (experimentsPreviouslyRun) {\n\t\t\tconst runExperimentIdsFromStorage: string[] = safeParse(this.storageService.get('currentOrPreviouslyRunExperiments', StorageScope.GLOBAL), []);\n\t\t\tlet includeCheck = true;\n\t\t\tlet excludeCheck = true;\n\t\t\tconst includes = experimentsPreviouslyRun.includes;\n\t\t\tif (Array.isArray(includes)) {\n\t\t\t\tincludeCheck = runExperimentIdsFromStorage.some(x => includes.indexOf(x) > -1);\n\t\t\t}\n\t\t\tconst excludes = experimentsPreviouslyRun.excludes;\n\t\t\tif (includeCheck && Array.isArray(excludes)) {\n\t\t\t\texcludeCheck = !runExperimentIdsFromStorage.some(x => excludes.indexOf(x) > -1);\n\t\t\t}\n\t\t\tif (!includeCheck || !excludeCheck) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate recordActivatedEvent(event: string) {\n\t\tconst key = experimentEventStorageKey(event);\n\t\tconst record = getCurrentActivationRecord(safeParse(this.storageService.get(key, StorageScope.GLOBAL), undefined));\n\t\trecord.count[0]++;\n\t\tthis.storageService.store(key, JSON.stringify(record), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\n\t\tthis._experiments\n\t\t\t.filter(e => e.state === ExperimentState.Evaluating && e.raw?.condition?.activationEvent?.event === event)\n\t\t\t.forEach(e => this.evaluateExperiment(e.raw!));\n\t}\n\n\tprivate checkActivationEventFrequency(experiment: IRawExperiment) {\n\t\tconst setting = experiment.condition?.activationEvent;\n\t\tif (!setting) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { count } = getCurrentActivationRecord(safeParse(this.storageService.get(experimentEventStorageKey(setting.event), StorageScope.GLOBAL), undefined));\n\n\t\tlet total = 0;\n\t\tlet uniqueDays = 0;\n\t\tfor (const entry of count) {\n\t\t\tif (entry > 0) {\n\t\t\t\tuniqueDays++;\n\t\t\t\ttotal += entry;\n\t\t\t}\n\t\t}\n\n\t\treturn total >= setting.minEvents && (!setting.uniqueDays || uniqueDays >= setting.uniqueDays);\n\t}\n\n\tprivate shouldRunExperiment(experiment: IRawExperiment, processedExperiment: IExperiment): Promise<ExperimentState> {\n\t\tif (processedExperiment.state !== ExperimentState.Evaluating) {\n\t\t\treturn Promise.resolve(processedExperiment.state);\n\t\t}\n\n\t\tif (!experiment.enabled) {\n\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t}\n\n\t\tconst condition = experiment.condition;\n\t\tif (!condition) {\n\t\t\treturn Promise.resolve(ExperimentState.Run);\n\t\t}\n\n\t\tif (experiment.condition?.os && !experiment.condition.os.includes(OS)) {\n\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t}\n\n\t\tif (!this.checkExperimentDependencies(experiment)) {\n\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(experiment.condition?.userSetting || {})) {\n\t\t\tif (!equals(this.configurationService.getValue(key), value)) {\n\t\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.checkActivationEventFrequency(experiment)) {\n\t\t\treturn Promise.resolve(ExperimentState.Evaluating);\n\t\t}\n\n\t\tif (this.productService.quality === 'stable' && condition.insidersOnly === true) {\n\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t}\n\n\t\tconst isNewUser = !this.storageService.get(lastSessionDateStorageKey, StorageScope.GLOBAL);\n\t\tif ((condition.newUser === true && !isNewUser)\n\t\t\t|| (condition.newUser === false && isNewUser)) {\n\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t}\n\n\t\tif (typeof condition.displayLanguage === 'string') {\n\t\t\tlet localeToCheck = condition.displayLanguage.toLowerCase();\n\t\t\tlet displayLanguage = language!.toLowerCase();\n\n\t\t\tif (localeToCheck !== displayLanguage) {\n\t\t\t\tconst a = displayLanguage.indexOf('-');\n\t\t\t\tconst b = localeToCheck.indexOf('-');\n\t\t\t\tif (a > -1) {\n\t\t\t\t\tdisplayLanguage = displayLanguage.substr(0, a);\n\t\t\t\t}\n\t\t\t\tif (b > -1) {\n\t\t\t\t\tlocaleToCheck = localeToCheck.substr(0, b);\n\t\t\t\t}\n\t\t\t\tif (displayLanguage !== localeToCheck) {\n\t\t\t\t\treturn Promise.resolve(ExperimentState.NoRun);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!condition.userProbability) {\n\t\t\tcondition.userProbability = 1;\n\t\t}\n\n\t\tlet extensionsCheckPromise = Promise.resolve(true);\n\t\tconst installedExtensions = condition.installedExtensions;\n\t\tif (installedExtensions) {\n\t\t\textensionsCheckPromise = this.extensionManagementService.getInstalled(ExtensionType.User).then(locals => {\n\t\t\t\tlet includesCheck = true;\n\t\t\t\tlet excludesCheck = true;\n\t\t\t\tconst localExtensions = locals.map(local => `${local.manifest.publisher.toLowerCase()}.${local.manifest.name.toLowerCase()}`);\n\t\t\t\tif (Array.isArray(installedExtensions.includes) && installedExtensions.includes.length) {\n\t\t\t\t\tconst extensionIncludes = installedExtensions.includes.map(e => e.toLowerCase());\n\t\t\t\t\tincludesCheck = localExtensions.some(e => extensionIncludes.indexOf(e) > -1);\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(installedExtensions.excludes) && installedExtensions.excludes.length) {\n\t\t\t\t\tconst extensionExcludes = installedExtensions.excludes.map(e => e.toLowerCase());\n\t\t\t\t\texcludesCheck = !localExtensions.some(e => extensionExcludes.indexOf(e) > -1);\n\t\t\t\t}\n\t\t\t\treturn includesCheck && excludesCheck;\n\t\t\t});\n\t\t}\n\n\t\tconst storageKey = 'experiments.' + experiment.id;\n\t\tconst experimentState: IExperimentStorageState = safeParse(this.storageService.get(storageKey, StorageScope.GLOBAL), {});\n\n\t\treturn extensionsCheckPromise.then(success => {\n\t\t\tconst fileEdits = condition.fileEdits;\n\t\t\tif (!success || !fileEdits || typeof fileEdits.minEditCount !== 'number') {\n\t\t\t\tconst runExperiment = success && typeof condition.userProbability === 'number' && Math.random() < condition.userProbability;\n\t\t\t\treturn runExperiment ? ExperimentState.Run : ExperimentState.NoRun;\n\t\t\t}\n\n\t\t\texperimentState.editCount = experimentState.editCount || 0;\n\t\t\tif (experimentState.editCount >= fileEdits.minEditCount) {\n\t\t\t\treturn ExperimentState.Run;\n\t\t\t}\n\n\t\t\t// Process model-save event every 250ms to reduce load\n\t\t\tconst onModelsSavedWorker = this._register(new RunOnceWorker<ITextFileEditorModel>(models => {\n\t\t\t\tconst date = new Date().toDateString();\n\t\t\t\tconst latestExperimentState: IExperimentStorageState = safeParse(this.storageService.get(storageKey, StorageScope.GLOBAL), {});\n\t\t\t\tif (latestExperimentState.state !== ExperimentState.Evaluating) {\n\t\t\t\t\tonSaveHandler.dispose();\n\t\t\t\t\tonModelsSavedWorker.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmodels.forEach(async model => {\n\t\t\t\t\tif (latestExperimentState.state !== ExperimentState.Evaluating\n\t\t\t\t\t\t|| date === latestExperimentState.lastEditedDate\n\t\t\t\t\t\t|| (typeof latestExperimentState.editCount === 'number' && latestExperimentState.editCount >= fileEdits.minEditCount)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet filePathCheck = true;\n\t\t\t\t\tlet workspaceCheck = true;\n\n\t\t\t\t\tif (typeof fileEdits.filePathPattern === 'string') {\n\t\t\t\t\t\tfilePathCheck = match(fileEdits.filePathPattern, model.resource.fsPath);\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(fileEdits.workspaceIncludes) && fileEdits.workspaceIncludes.length) {\n\t\t\t\t\t\tconst tags = await this.workspaceTagsService.getTags();\n\t\t\t\t\t\tworkspaceCheck = !!tags && fileEdits.workspaceIncludes.some(x => !!tags[x]);\n\t\t\t\t\t}\n\t\t\t\t\tif (workspaceCheck && Array.isArray(fileEdits.workspaceExcludes) && fileEdits.workspaceExcludes.length) {\n\t\t\t\t\t\tconst tags = await this.workspaceTagsService.getTags();\n\t\t\t\t\t\tworkspaceCheck = !!tags && !fileEdits.workspaceExcludes.some(x => !!tags[x]);\n\t\t\t\t\t}\n\t\t\t\t\tif (filePathCheck && workspaceCheck) {\n\t\t\t\t\t\tlatestExperimentState.editCount = (latestExperimentState.editCount || 0) + 1;\n\t\t\t\t\t\tlatestExperimentState.lastEditedDate = date;\n\t\t\t\t\t\tthis.storageService.store(storageKey, JSON.stringify(latestExperimentState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (typeof latestExperimentState.editCount === 'number' && latestExperimentState.editCount >= fileEdits.minEditCount) {\n\t\t\t\t\tprocessedExperiment.state = latestExperimentState.state = (typeof condition.userProbability === 'number' && Math.random() < condition.userProbability && this.checkExperimentDependencies(experiment)) ? ExperimentState.Run : ExperimentState.NoRun;\n\t\t\t\t\tthis.storageService.store(storageKey, JSON.stringify(latestExperimentState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t\tif (latestExperimentState.state === ExperimentState.Run && processedExperiment.action && ExperimentActionType[processedExperiment.action.type] === ExperimentActionType.Prompt) {\n\t\t\t\t\t\tthis.fireRunExperiment(processedExperiment);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 250));\n\n\t\t\tconst onSaveHandler = this._register(this.textFileService.files.onDidSave(e => onModelsSavedWorker.work(e.model)));\n\t\t\treturn ExperimentState.Evaluating;\n\t\t});\n\t}\n}\n\n\nfunction safeParse(text: string | undefined, defaultObject: any) {\n\ttry {\n\t\treturn text ? JSON.parse(text) || defaultObject : defaultObject;\n\t} catch (e) {\n\t\treturn defaultObject;\n\t}\n}\n"]}