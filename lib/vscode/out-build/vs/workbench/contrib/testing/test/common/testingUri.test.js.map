{"version":3,"file":"testingUri.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/testing/test/common/testingUri.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;YACvB,MAAM,IAAI,GAAoB;gBAC7B,EAAE,IAAI,4BAAgC,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;gBACvG,EAAE,IAAI,8BAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;gBACzG,EAAE,IAAI,uBAA2B,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;aAClG,CAAC;YAEF,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACvB,MAAM,UAAU,GAAG,CAAA,GAAA,yBAAY,CAAA,CAAC,GAAG,CAAC,CAAC;gBACrC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,CAAA,GAAA,yBAAY,CAAA,CAAC,UAAU,CAAC,CAAC,CAAC;aACtD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { buildTestUri, ParsedTestUri, parseTestUri, TestUriType } from 'vs/workbench/contrib/testing/common/testingUri';\n\nsuite('Workbench - Testing URIs', () => {\n\ttest('round trip', () => {\n\t\tconst uris: ParsedTestUri[] = [\n\t\t\t{ type: TestUriType.ResultActualOutput, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t\t{ type: TestUriType.ResultExpectedOutput, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t\t{ type: TestUriType.ResultMessage, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t];\n\n\t\tfor (const uri of uris) {\n\t\t\tconst serialized = buildTestUri(uri);\n\t\t\tassert.deepStrictEqual(uri, parseTestUri(serialized));\n\t\t}\n\t});\n});\n"]}