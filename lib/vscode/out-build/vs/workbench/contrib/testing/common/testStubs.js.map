{"version":3,"file":"testStubs.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/testing/common/testStubs.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMvF,4GAAA,YAAY,OAAA;IAAE,+GAAA,eAAe,OAAA;IACtC,0BAAyE;IAElE,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAE,QAAQ,GAAG,KAAK,EAAE,WAA2B,EAAE,EAAE,GAAG,GAAG,SAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAgB,EAAE;QAC7H,MAAM,IAAI,GAAG,IAAI,2BAAY,CAAC,QAAQ,GAAG,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QACvE,IAAI,QAAQ,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,6BAAc,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,GAAG,EAAE;gBAC1B,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;oBAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACrB;gBAED,IAAI,CAAC,MAAM,GAAG,6BAAc,CAAC,QAAQ,CAAC;YACvC,CAAC,CAAC;SACF;QAED,OAAO,IAAI,CAAC;IACb,CAAC,CAAC;IAdW,QAAA,QAAQ,YAcnB;IAEK,MAAM,cAAc,GAAG,CAAC,IAAkB,EAAE,IAAc,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE;QAC/E,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,KAAK,MAAM,OAAO,IAAI,IAAI,EAAE;YAC3B,IAAI,IAAI,CAAC,MAAM,KAAK,6BAAc,CAAC,QAAQ,EAAE;gBAC5C,IAAI,CAAC,cAAe,CAAC,gCAAiB,CAAC,IAAI,CAAC,CAAC;aAC7C;YAED,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC;YACnC,IAAI,CAAC,IAAI,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,iBAAiB,OAAO,EAAE,CAAC,CAAC;aAC5C;YAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjB;QAED,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;IAhBW,QAAA,cAAc,kBAgBzB;IAEW,QAAA,SAAS,GAAG;QACxB,IAAI,EAAE,gBAAQ;QACd,MAAM,EAAE,CAAC,QAAQ,GAAG,KAAK,EAAE,EAAE,CAAC,CAAA,GAAA,gBAAQ,CAAA,CAAC,MAAM,EAAE,QAAQ,EAAE;YACxD,CAAA,GAAA,gBAAQ,CAAA,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAA,GAAA,gBAAQ,CAAA,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAA,GAAA,gBAAQ,CAAA,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;YAC7E,CAAA,GAAA,gBAAQ,CAAA,CAAC,GAAG,EAAE,QAAQ,CAAC;SACvB,CAAC;KACF,CAAC;IAEW,QAAA,sBAAsB,GAAG,8BAAe,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { TestItemImpl, TestItemStatus, TestResultState } from 'vs/workbench/api/common/extHostTypes';\n\nexport { TestItemImpl, TestResultState } from 'vs/workbench/api/common/extHostTypes';\nexport * as Convert from 'vs/workbench/api/common/extHostTypeConverters';\n\nexport const stubTest = (label: string, idPrefix = 'id-', children: TestItemImpl[] = [], uri = URI.file('/')): TestItemImpl => {\n\tconst item = new TestItemImpl(idPrefix + label, label, uri, undefined);\n\tif (children.length) {\n\t\titem.status = TestItemStatus.Pending;\n\t\titem.resolveHandler = () => {\n\t\t\tfor (const child of children) {\n\t\t\t\titem.addChild(child);\n\t\t\t}\n\n\t\t\titem.status = TestItemStatus.Resolved;\n\t\t};\n\t}\n\n\treturn item;\n};\n\nexport const testStubsChain = (stub: TestItemImpl, path: string[], slice = 0) => {\n\tconst tests = [stub];\n\tfor (const segment of path) {\n\t\tif (stub.status !== TestItemStatus.Resolved) {\n\t\t\tstub.resolveHandler!(CancellationToken.None);\n\t\t}\n\n\t\tstub = stub.children.get(segment)!;\n\t\tif (!stub) {\n\t\t\tthrow new Error(`missing child ${segment}`);\n\t\t}\n\n\t\ttests.push(stub);\n\t}\n\n\treturn tests.slice(slice);\n};\n\nexport const testStubs = {\n\ttest: stubTest,\n\tnested: (idPrefix = 'id-') => stubTest('root', idPrefix, [\n\t\tstubTest('a', idPrefix, [stubTest('aa', idPrefix), stubTest('ab', idPrefix)]),\n\t\tstubTest('b', idPrefix),\n\t]),\n};\n\nexport const ReExportedTestRunState = TestResultState;\n"]}