{"version":3,"sources":["vs/workbench/contrib/testing/browser/testingDecorations.ts"],"names":[],"mappings":"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","file":"testingDecorations.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action, IAction, Separator } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, dispose, IDisposable, IReference, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { IModelDeltaDecoration, OverviewRulerLane, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { overviewRulerError, overviewRulerInfo, overviewRulerWarning } from 'vs/editor/common/view/editorColorRegistry';\nimport { localize } from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService, themeColorFromId, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ExtHostTestingResource } from 'vs/workbench/api/common/extHost.protocol';\nimport { TestMessageSeverity, TestResultState } from 'vs/workbench/api/common/extHostTypes';\nimport { BREAKPOINT_EDITOR_CONTRIBUTION_ID, IBreakpointEditorContribution } from 'vs/workbench/contrib/debug/common/debug';\nimport { testingRunAllIcon, testingRunIcon, testingStatesToIcons } from 'vs/workbench/contrib/testing/browser/icons';\nimport { TestingOutputPeekController } from 'vs/workbench/contrib/testing/browser/testingOutputPeek';\nimport { testMessageSeverityColors } from 'vs/workbench/contrib/testing/browser/theme';\nimport { IncrementalTestCollectionItem, IRichLocation, ITestMessage, TestDiffOpType, TestResultItem } from 'vs/workbench/contrib/testing/common/testCollection';\nimport { buildTestUri, TestUriType } from 'vs/workbench/contrib/testing/common/testingUri';\nimport { ITestResultService } from 'vs/workbench/contrib/testing/common/testResultService';\nimport { IMainThreadTestCollection, ITestService } from 'vs/workbench/contrib/testing/common/testService';\n\nfunction isInDiffEditor(codeEditorService: ICodeEditorService, codeEditor: ICodeEditor): boolean {\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tfor (const diffEditor of diffEditors) {\n\t\tif (diffEditor.getModifiedEditor() === codeEditor || diffEditor.getOriginalEditor() === codeEditor) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nconst FONT_FAMILY_VAR = `--testMessageDecorationFontFamily`;\n\nexport class TestingDecorations extends Disposable implements IEditorContribution {\n\tprivate collection = this._register(new MutableDisposable<IReference<IMainThreadTestCollection>>());\n\tprivate currentUri?: URI;\n\tprivate lastDecorations: ITestDecoration[] = [];\n\n\t/**\n\t * List of messages that should be hidden because an editor changed their\n\t * underlying ranges. I think this is good enough, because:\n\t *  - Message decorations are never shown across reloads; this does not\n\t *    need to persist\n\t *  - Message instances are stable for any completed test results for\n\t *    the duration of the session.\n\t */\n\tprivate invalidatedMessages = new WeakSet<ITestMessage>();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@ITestResultService private readonly results: ITestResultService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.attachModel(editor.getModel()?.uri);\n\t\tthis._register(this.editor.onDidChangeModel(e => this.attachModel(e.newModelUrl || undefined)));\n\t\tthis._register(this.editor.onMouseDown(e => {\n\t\t\tfor (const decoration of this.lastDecorations) {\n\t\t\t\tif (decoration.click(e)) {\n\t\t\t\t\te.event.stopPropagation();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.editor.onDidChangeModelContent(e => {\n\t\t\tif (!this.currentUri) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet update = false;\n\t\t\tfor (const change of e.changes) {\n\t\t\t\tfor (const deco of this.lastDecorations) {\n\t\t\t\t\tif (deco instanceof TestMessageDecoration\n\t\t\t\t\t\t&& deco.location.range.startLineNumber >= change.range.startLineNumber\n\t\t\t\t\t\t&& deco.location.range.endLineNumber <= change.range.endLineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.invalidatedMessages.add(deco.testMessage);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (update) {\n\t\t\t\tthis.setDecorations(this.currentUri);\n\t\t\t}\n\t\t}));\n\n\t\tconst updateFontFamilyVar = () => {\n\t\t\tthis.editor.getContainerDomNode().style.setProperty(FONT_FAMILY_VAR, editor.getOption(EditorOption.fontFamily));\n\t\t};\n\t\tthis._register(this.editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.hasChanged(EditorOption.fontFamily)) {\n\t\t\t\tupdateFontFamilyVar();\n\t\t\t}\n\t\t}));\n\t\tupdateFontFamilyVar();\n\n\t\tthis._register(this.results.onTestChanged(({ item: result }) => {\n\t\t\tif (this.currentUri && result.item.uri.toString() === this.currentUri.toString()) {\n\t\t\t\tthis.setDecorations(this.currentUri);\n\t\t\t}\n\t\t}));\n\t\tthis._register(Event.any(this.results.onResultsChanged, this.testService.excludeTests.onDidChange)(() => {\n\t\t\tif (this.currentUri) {\n\t\t\t\tthis.setDecorations(this.currentUri);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate attachModel(uri?: URI) {\n\t\tif (isInDiffEditor(this.codeEditorService, this.editor)) {\n\t\t\turi = undefined;\n\t\t}\n\n\t\tthis.currentUri = uri;\n\n\t\tif (!uri) {\n\t\t\tthis.collection.value = undefined;\n\t\t\tthis.clearDecorations();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.collection.value = this.testService.subscribeToDiffs(ExtHostTestingResource.TextDocument, uri, diff => {\n\t\t\tthis.setDecorations(uri!);\n\n\t\t\tfor (const op of diff) {\n\t\t\t\tswitch (op[0]) {\n\t\t\t\t\tcase TestDiffOpType.Add:\n\t\t\t\t\t\tif (!op[1].parent) {\n\t\t\t\t\t\t\tthis.collection.value?.object.expand(op[1].item.extId, Infinity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TestDiffOpType.Remove:\n\t\t\t\t\t\tTestingOutputPeekController.get(this.editor).removeIfPeekingForTest(op[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (const root of this.collection.value.object.rootIds) {\n\t\t\tthis.collection.value.object.expand(root, Infinity);\n\t\t}\n\n\t\tthis.setDecorations(uri);\n\t}\n\n\tprivate setDecorations(uri: URI): void {\n\t\tconst ref = this.collection.value;\n\t\tif (!ref) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.changeDecorations(accessor => {\n\t\t\tconst newDecorations: ITestDecoration[] = [];\n\t\t\tfor (const test of ref.object.all) {\n\t\t\t\tconst stateLookup = this.results.getStateById(test.item.extId);\n\t\t\t\tif (test.item.range) {\n\t\t\t\t\tnewDecorations.push(this.instantiationService.createInstance(\n\t\t\t\t\t\tRunTestDecoration, test, ref.object, test.item.range, this.editor, stateLookup?.[1]));\n\t\t\t\t}\n\n\t\t\t\tif (!stateLookup) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst [result, stateItem] = stateLookup;\n\t\t\t\tif (stateItem.retired) {\n\t\t\t\t\tcontinue; // do not show decorations for outdated tests\n\t\t\t\t}\n\n\t\t\t\tfor (let taskId = 0; taskId < stateItem.tasks.length; taskId++) {\n\t\t\t\t\tconst state = stateItem.tasks[taskId];\n\t\t\t\t\tfor (let i = 0; i < state.messages.length; i++) {\n\t\t\t\t\t\tconst m = state.messages[i];\n\t\t\t\t\t\tif (!this.invalidatedMessages.has(m) && hasValidLocation(uri, m)) {\n\t\t\t\t\t\t\tconst uri = buildTestUri({\n\t\t\t\t\t\t\t\ttype: TestUriType.ResultActualOutput,\n\t\t\t\t\t\t\t\tmessageIndex: i,\n\t\t\t\t\t\t\t\ttaskIndex: taskId,\n\t\t\t\t\t\t\t\tresultId: result.id,\n\t\t\t\t\t\t\t\ttestExtId: stateItem.item.extId,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tnewDecorations.push(this.instantiationService.createInstance(TestMessageDecoration, m, uri, m.location, this.editor));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taccessor\n\t\t\t\t.deltaDecorations(this.lastDecorations.map(d => d.id), newDecorations.map(d => d.editorDecoration))\n\t\t\t\t.forEach((id, i) => newDecorations[i].id = id);\n\n\t\t\tthis.lastDecorations = newDecorations;\n\t\t});\n\t}\n\n\tprivate clearDecorations(): void {\n\t\tthis.editor.changeDecorations(accessor => {\n\t\t\tfor (const decoration of this.lastDecorations) {\n\t\t\t\taccessor.removeDecoration(decoration.id);\n\t\t\t}\n\n\t\t\tthis.lastDecorations = [];\n\t\t});\n\t}\n}\n\ninterface ITestDecoration extends IDisposable {\n\t/**\n\t * ID of the decoration after being added to the editor, set after the\n\t * decoration is applied.\n\t */\n\tid: string;\n\n\treadonly editorDecoration: IModelDeltaDecoration;\n\n\t/**\n\t * Handles a click event, returns true if it was handled.\n\t */\n\tclick(e: IEditorMouseEvent): boolean;\n}\n\nconst hasValidLocation = <T extends { location?: IRichLocation }>(editorUri: URI, t: T): t is T & { location: IRichLocation } =>\n\tt.location?.uri.toString() === editorUri.toString();\n\nconst firstLineRange = (originalRange: IRange) => ({\n\tstartLineNumber: originalRange.startLineNumber,\n\tendLineNumber: originalRange.startLineNumber,\n\tstartColumn: 0,\n\tendColumn: 1,\n});\n\nclass RunTestDecoration extends Disposable implements ITestDecoration {\n\t/**\n\t * @inheritdoc\n\t */\n\tid = '';\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic readonly editorDecoration: IModelDeltaDecoration;\n\n\tprivate line: number;\n\n\tconstructor(\n\t\tprivate readonly test: IncrementalTestCollectionItem,\n\t\tprivate readonly collection: IMainThreadTestCollection,\n\t\trange: IRange,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tstateItem: TestResultItem | undefined,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t) {\n\t\tsuper();\n\t\tthis.line = range.startLineNumber;\n\n\t\tconst icon = stateItem?.computedState !== undefined && stateItem.computedState !== TestResultState.Unset\n\t\t\t? testingStatesToIcons.get(stateItem.computedState)!\n\t\t\t: test.children.size > 0 ? testingRunAllIcon : testingRunIcon;\n\n\t\tconst hoverMessage = new MarkdownString('', true).appendText(localize('failedHoverMessage', '{0} has failed. ', test.item.label));\n\t\tif (stateItem?.tasks.some(s => s.messages.length > 0)) {\n\t\t\tconst args = encodeURIComponent(JSON.stringify([test.item.extId]));\n\t\t\thoverMessage.appendMarkdown(`[${localize('failedPeekAction', 'Peek Error')}](command:vscode.peekTestError?${args})`);\n\t\t}\n\n\t\tlet glyphMarginClassName = ThemeIcon.asClassName(icon) + ' testing-run-glyph';\n\t\tif (stateItem?.retired) {\n\t\t\tglyphMarginClassName += ' retired';\n\t\t}\n\n\t\tthis.editorDecoration = {\n\t\t\trange: firstLineRange(range),\n\t\t\toptions: {\n\t\t\t\tisWholeLine: true,\n\t\t\t\thoverMessage,\n\t\t\t\tglyphMarginClassName,\n\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\tglyphMarginHoverMessage: new MarkdownString().appendText(localize('testing.clickToRun', 'Click to run tests, right click for more options')),\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic click(e: IEditorMouseEvent): boolean {\n\t\tif (e.target.position?.lineNumber !== this.line || e.target.type !== MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (e.event.rightButton) {\n\t\t\tconst actions = this.getContextMenu();\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => ({ x: e.event.posx, y: e.event.posy }),\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => dispose(actions),\n\t\t\t});\n\t\t} else {\n\t\t\t// todo: customize click behavior\n\t\t\tthis.testService.runTests({\n\t\t\t\ttests: [{ testId: this.test.item.extId, src: this.test.src }],\n\t\t\t\tdebug: false,\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic override dispose() {\n\t\t// no-op\n\t}\n\n\tprivate getContextMenu() {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst testActions: IAction[] = [];\n\t\tif (this.test.item.runnable) {\n\t\t\ttestActions.push(new Action('testing.run', localize('run test', 'Run Test'), undefined, undefined, () => this.testService.runTests({\n\t\t\t\tdebug: false,\n\t\t\t\ttests: [{ src: this.test.src, testId: this.test.item.extId }],\n\t\t\t})));\n\t\t}\n\n\t\tif (this.test.item.debuggable) {\n\t\t\ttestActions.push(new Action('testing.debug', localize('debug test', 'Debug Test'), undefined, undefined, () => this.testService.runTests({\n\t\t\t\tdebug: true,\n\t\t\t\ttests: [{ src: this.test.src, testId: this.test.item.extId }],\n\t\t\t})));\n\t\t}\n\n\t\ttestActions.push(new Action('testing.reveal', localize('reveal test', 'Reveal in Test Explorer'), undefined, undefined, async () => {\n\t\t\tconst path = [this.test];\n\t\t\twhile (true) {\n\t\t\t\tconst parentId = path[0].parent;\n\t\t\t\tconst parent = parentId && this.collection.getNodeById(parentId);\n\t\t\t\tif (!parent) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tpath.unshift(parent);\n\t\t\t}\n\n\t\t\tawait this.commandService.executeCommand('vscode.revealTestInExplorer', path.map(t => t.item.extId));\n\t\t}));\n\n\t\tconst breakpointActions = this.editor\n\t\t\t.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID)\n\t\t\t.getContextMenuActionsAtPosition(this.line, model);\n\n\t\treturn breakpointActions.length ? [...testActions, new Separator(), ...breakpointActions] : testActions;\n\t}\n}\n\nclass TestMessageDecoration implements ITestDecoration {\n\tpublic id = '';\n\n\tpublic readonly editorDecoration: IModelDeltaDecoration;\n\tprivate readonly decorationId = `testmessage-${generateUuid()}`;\n\n\tconstructor(\n\t\tpublic readonly testMessage: ITestMessage,\n\t\tprivate readonly messageUri: URI,\n\t\tpublic readonly location: IRichLocation,\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ICodeEditorService private readonly editorService: ICodeEditorService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tconst { severity = TestMessageSeverity.Error, message } = testMessage;\n\t\tconst colorTheme = themeService.getColorTheme();\n\t\teditorService.registerDecorationType(this.decorationId, {\n\t\t\tafter: {\n\t\t\t\tcontentText: message.toString(),\n\t\t\t\tcolor: `${colorTheme.getColor(testMessageSeverityColors[severity].decorationForeground)}`,\n\t\t\t\tfontSize: `${editor.getOption(EditorOption.fontSize)}px`,\n\t\t\t\tfontFamily: `var(${FONT_FAMILY_VAR})`,\n\t\t\t\tpadding: `0px 12px 0px 24px`,\n\t\t\t},\n\t\t}, undefined, editor);\n\n\t\tconst options = editorService.resolveDecorationOptions(this.decorationId, true);\n\t\toptions.hoverMessage = typeof message === 'string' ? new MarkdownString().appendText(message) : message;\n\t\toptions.afterContentClassName = `${options.afterContentClassName} testing-inline-message-content`;\n\t\toptions.zIndex = 10; // todo: in spite of the z-index, this appears behind gitlens\n\t\toptions.className = `testing-inline-message-margin testing-inline-message-severity-${severity}`;\n\t\toptions.isWholeLine = true;\n\t\toptions.stickiness = TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\t\toptions.collapseOnReplaceEdit = true;\n\n\t\tconst rulerColor = severity === TestMessageSeverity.Error\n\t\t\t? overviewRulerError\n\t\t\t: severity === TestMessageSeverity.Warning\n\t\t\t\t? overviewRulerWarning\n\t\t\t\t: severity === TestMessageSeverity.Information\n\t\t\t\t\t? overviewRulerInfo\n\t\t\t\t\t: undefined;\n\n\t\tif (rulerColor) {\n\t\t\toptions.overviewRuler = { color: themeColorFromId(rulerColor), position: OverviewRulerLane.Right };\n\t\t}\n\n\t\tthis.editorDecoration = { range: firstLineRange(location.range), options };\n\t}\n\n\tclick(e: IEditorMouseEvent): boolean {\n\t\tif (e.event.rightButton) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (e.target.element?.className.includes(this.decorationId)) {\n\t\t\tTestingOutputPeekController.get(this.editor).toggle(this.messageUri);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdispose(): void {\n\t\tthis.editorService.removeDecorationType(this.decorationId);\n\t}\n}\n"]}