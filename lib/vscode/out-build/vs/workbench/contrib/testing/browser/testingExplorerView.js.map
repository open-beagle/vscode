{"version":3,"sources":["vs/workbench/contrib/testing/browser/testingExplorerView.ts"],"names":[],"mappings":"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","file":"testingExplorerView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ActionBar, IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IIdentityProvider, IKeyboardNavigationLabelProvider, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { DefaultKeyboardNavigationDelegate, IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { ObjectTree } from 'vs/base/browser/ui/tree/objectTree';\nimport { ITreeContextMenuEvent, ITreeEvent, ITreeFilter, ITreeNode, ITreeRenderer, ITreeSorter, TreeFilterResult, TreeVisibility } from 'vs/base/browser/ui/tree/tree';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { disposableTimeout, RunOnceScheduler } from 'vs/base/common/async';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { splitGlobAware } from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Disposable, dispose, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./media/testing';\nimport { MarkdownRenderer } from 'vs/editor/browser/core/markdownRenderer';\nimport { localize } from 'vs/nls';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuService, MenuId, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { WorkbenchObjectTree } from 'vs/platform/list/browser/listService';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { UnmanagedProgress } from 'vs/platform/progress/common/progress';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { foreground } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService, registerThemingParticipant, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { TestResultState } from 'vs/workbench/api/common/extHostTypes';\nimport { IResourceLabel, IResourceLabelOptions, IResourceLabelProps, ResourceLabels } from 'vs/workbench/browser/labels';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { HierarchicalByLocationProjection } from 'vs/workbench/contrib/testing/browser/explorerProjections/hierarchalByLocation';\nimport { HierarchicalByNameProjection } from 'vs/workbench/contrib/testing/browser/explorerProjections/hierarchalByName';\nimport { IActionableTestTreeElement, ITestTreeProjection, TestExplorerTreeElement, TestItemTreeElement, TestTreeErrorMessage, TestTreeWorkspaceFolder } from 'vs/workbench/contrib/testing/browser/explorerProjections/index';\nimport { testingHiddenIcon, testingStatesToIcons } from 'vs/workbench/contrib/testing/browser/icons';\nimport { ITestExplorerFilterState, TestExplorerFilterState, TestingExplorerFilter } from 'vs/workbench/contrib/testing/browser/testingExplorerFilter';\nimport { ITestingPeekOpener } from 'vs/workbench/contrib/testing/browser/testingOutputPeek';\nimport { ITestingProgressUiService } from 'vs/workbench/contrib/testing/browser/testingProgressUiService';\nimport { getTestingConfiguration, TestingConfigKeys } from 'vs/workbench/contrib/testing/common/configuration';\nimport { TestExplorerStateFilter, TestExplorerViewMode, TestExplorerViewSorting, Testing, testStateNames } from 'vs/workbench/contrib/testing/common/constants';\nimport { TestIdPath, TestItemExpandState } from 'vs/workbench/contrib/testing/common/testCollection';\nimport { TestingContextKeys } from 'vs/workbench/contrib/testing/common/testingContextKeys';\nimport { cmpPriority, isFailedState, isStateWithResult } from 'vs/workbench/contrib/testing/common/testingStates';\nimport { getPathForTestInResult, TestResultItemChangeReason } from 'vs/workbench/contrib/testing/common/testResult';\nimport { ITestResultService } from 'vs/workbench/contrib/testing/common/testResultService';\nimport { ITestService } from 'vs/workbench/contrib/testing/common/testService';\nimport { IWorkspaceTestCollectionService, TestSubscriptionListener } from 'vs/workbench/contrib/testing/common/workspaceTestCollectionService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { DebugAction, EditFocusedTest, HideOrShowTestAction, RunAction } from './testExplorerActions';\n\nexport class TestingExplorerView extends ViewPane {\n\tpublic viewModel!: TestingExplorerViewModel;\n\tprivate filterActionBar = this._register(new MutableDisposable());\n\tprivate readonly currentSubscription = new MutableDisposable<TestSubscriptionListener>();\n\tprivate container!: HTMLElement;\n\tprivate discoveryProgress = this._register(new MutableDisposable<UnmanagedProgress>());\n\tprivate readonly location = TestingContextKeys.explorerLocation.bindTo(this.contextKeyService);;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IWorkspaceTestCollectionService private readonly testCollection: IWorkspaceTestCollectionService,\n\t\t@ITestService testService: ITestService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ITestingProgressUiService private readonly testProgressService: ITestingProgressUiService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t\tthis.location.set(viewDescriptorService.getViewLocationById(Testing.ExplorerViewId) ?? ViewContainerLocation.Sidebar);\n\n\t\tconst relayout = this._register(new RunOnceScheduler(() => this.viewModel?.layout(), 1));\n\t\tthis._register(this.onDidChangeViewWelcomeState(() => {\n\t\t\tif (!this.shouldShowWelcome()) {\n\t\t\t\trelayout.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override shouldShowWelcome() {\n\t\treturn this.viewModel?.shouldShowWelcome ?? true;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.container = dom.append(container, dom.$('.test-explorer'));\n\n\t\tif (this.location.get() === ViewContainerLocation.Sidebar) {\n\t\t\tthis.filterActionBar.value = this.createFilterActionBar();\n\t\t}\n\n\t\tconst messagesContainer = dom.append(this.container, dom.$('.test-explorer-messages'));\n\t\tthis._register(this.testProgressService.onTextChange(text => {\n\t\t\tmessagesContainer.innerText = text;\n\t\t}));\n\n\t\tconst progress = new MutableDisposable<UnmanagedProgress>();\n\t\tthis._register(this.testProgressService.onCountChange(evt => {\n\t\t\tif (!evt.isRunning && progress.value) {\n\t\t\t\tprogress.clear();\n\t\t\t} else if (evt.isRunning) {\n\t\t\t\tif (!progress.value) {\n\t\t\t\t\tprogress.value = this.instantiationService.createInstance(UnmanagedProgress, { location: this.getProgressLocation(), total: 100 });\n\t\t\t\t}\n\t\t\t\tprogress.value.report({ increment: evt.runSoFar, total: evt.totalWillBeRun });\n\t\t\t}\n\t\t}));\n\n\t\tconst listContainer = dom.append(this.container, dom.$('.test-explorer-tree'));\n\t\tthis.viewModel = this.instantiationService.createInstance(TestingExplorerViewModel, listContainer, this.onDidChangeBodyVisibility, this.currentSubscription.value);\n\t\tthis._register(this.viewModel.onChangeWelcomeVisibility(() => this._onDidChangeViewWelcomeState.fire()));\n\t\tthis._register(this.viewModel);\n\n\t\tif (!this.viewModel.shouldShowWelcome) {\n\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t}\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (!visible && this.currentSubscription) {\n\t\t\t\tthis.currentSubscription.value = undefined;\n\t\t\t\tthis.viewModel.replaceSubscription(undefined);\n\t\t\t} else if (visible && !this.currentSubscription.value) {\n\t\t\t\tthis.currentSubscription.value = this.createSubscription();\n\t\t\t\tthis.viewModel.replaceSubscription(this.currentSubscription.value);\n\t\t\t}\n\t\t}));\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override getActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\tif (action.id === Testing.FilterActionId) {\n\t\t\treturn this.instantiationService.createInstance(TestingExplorerFilter, action);\n\t\t}\n\n\t\treturn super.getActionViewItem(action);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override saveState() {\n\t\tsuper.saveState();\n\t}\n\n\tprivate createFilterActionBar() {\n\t\tconst bar = new ActionBar(this.container, {\n\t\t\tactionViewItemProvider: action => this.getActionViewItem(action),\n\t\t\ttriggerKeys: { keyDown: false, keys: [] },\n\t\t});\n\t\tbar.push(new Action(Testing.FilterActionId));\n\t\tbar.getContainer().classList.add('testing-filter-action-bar');\n\t\treturn bar;\n\t}\n\n\tprivate updateDiscoveryProgress(busy: number) {\n\t\tif (!busy && this.discoveryProgress) {\n\t\t\tthis.discoveryProgress.clear();\n\t\t} else if (busy && !this.discoveryProgress.value) {\n\t\t\tthis.discoveryProgress.value = this.instantiationService.createInstance(UnmanagedProgress, { location: this.getProgressLocation() });\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.container.style.height = `${height}px`;\n\t\tthis.viewModel.layout();\n\t}\n\n\tprivate createSubscription() {\n\t\tconst handle = this.testCollection.subscribeToWorkspaceTests();\n\t\thandle.subscription.onBusyProvidersChange(() => this.updateDiscoveryProgress(handle.subscription.busyProviders));\n\t\treturn handle;\n\t}\n}\n\nexport class TestingExplorerViewModel extends Disposable {\n\tpublic tree: ObjectTree<TestExplorerTreeElement, FuzzyScore>;\n\tprivate filter: TestsFilter;\n\tpublic projection = this._register(new MutableDisposable<ITestTreeProjection>());\n\n\tprivate readonly revealTimeout = new MutableDisposable();\n\tprivate readonly _viewMode = TestingContextKeys.viewMode.bindTo(this.contextKeyService);\n\tprivate readonly _viewSorting = TestingContextKeys.viewSorting.bindTo(this.contextKeyService);\n\tprivate readonly welcomeVisibilityEmitter = new Emitter<boolean>();\n\n\t/**\n\t * Whether there's a reveal request which has not yet been delivered. This\n\t * can happen if the user asks to reveal before the test tree is loaded.\n\t * We check to see if the reveal request is present on each tree update,\n\t * and do it then if so.\n\t */\n\tprivate hasPendingReveal = false;\n\n\t/**\n\t * Fires when the selected tests change.\n\t */\n\tpublic readonly onDidChangeSelection: Event<ITreeEvent<TestExplorerTreeElement | null>>;\n\t/**\n\t * Fires when the visibility of the placeholder state changes.\n\t */\n\tpublic readonly onChangeWelcomeVisibility = this.welcomeVisibilityEmitter.event;\n\n\t/**\n\t * Gets whether the welcome should be visible.\n\t */\n\tpublic shouldShowWelcome = false;\n\n\tpublic get viewMode() {\n\t\treturn this._viewMode.get() ?? TestExplorerViewMode.Tree;\n\t}\n\n\tpublic set viewMode(newMode: TestExplorerViewMode) {\n\t\tif (newMode === this._viewMode.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewMode.set(newMode);\n\t\tthis.updatePreferredProjection();\n\t\tthis.storageService.store('testing.viewMode', newMode, StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\n\n\tpublic get viewSorting() {\n\t\treturn this._viewSorting.get() ?? TestExplorerViewSorting.ByLocation;\n\t}\n\n\tpublic set viewSorting(newSorting: TestExplorerViewSorting) {\n\t\tif (newSorting === this._viewSorting.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewSorting.set(newSorting);\n\t\tthis.tree.resort(null);\n\t\tthis.storageService.store('testing.viewSorting', newSorting, StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\tconstructor(\n\t\tlistContainer: HTMLElement,\n\t\tonDidChangeVisibility: Event<boolean>,\n\t\tprivate listener: TestSubscriptionListener | undefined,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@ITestExplorerFilterState private readonly filterState: TestExplorerFilterState,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ITestResultService private readonly testResults: ITestResultService,\n\t\t@ITestingPeekOpener private readonly peekOpener: ITestingPeekOpener,\n\t) {\n\t\tsuper();\n\n\t\tthis.hasPendingReveal = !!filterState.reveal.value;\n\t\tthis._viewMode.set(this.storageService.get('testing.viewMode', StorageScope.WORKSPACE, TestExplorerViewMode.Tree) as TestExplorerViewMode);\n\t\tthis._viewSorting.set(this.storageService.get('testing.viewSorting', StorageScope.WORKSPACE, TestExplorerViewSorting.ByLocation) as TestExplorerViewSorting);\n\n\t\tconst labels = this._register(instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: onDidChangeVisibility }));\n\n\t\tthis.reevaluateWelcomeState();\n\t\tthis.filter = this.instantiationService.createInstance(TestsFilter);\n\t\tthis.tree = instantiationService.createInstance(\n\t\t\tWorkbenchObjectTree,\n\t\t\t'Test Explorer List',\n\t\t\tlistContainer,\n\t\t\tnew ListDelegate(),\n\t\t\t[\n\t\t\t\tinstantiationService.createInstance(TestItemRenderer, labels),\n\t\t\t\tinstantiationService.createInstance(WorkspaceFolderRenderer, labels),\n\t\t\t\tinstantiationService.createInstance(ErrorRenderer),\n\t\t\t],\n\t\t\t{\n\t\t\t\tsimpleKeyboardNavigation: true,\n\t\t\t\tidentityProvider: instantiationService.createInstance(IdentityProvider),\n\t\t\t\thideTwistiesOfChildlessElements: false,\n\t\t\t\tsorter: instantiationService.createInstance(TreeSorter, this),\n\t\t\t\tkeyboardNavigationLabelProvider: instantiationService.createInstance(TreeKeyboardNavigationLabelProvider),\n\t\t\t\taccessibilityProvider: instantiationService.createInstance(ListAccessibilityProvider),\n\t\t\t\tfilter: this.filter,\n\t\t\t}) as WorkbenchObjectTree<TestExplorerTreeElement, FuzzyScore>;\n\n\t\tthis._register(this.tree.onDidChangeCollapseState(evt => {\n\t\t\tif (evt.node.element instanceof TestItemTreeElement) {\n\t\t\t\tthis.projection.value?.expandElement(evt.node.element, evt.deep ? Infinity : 0);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(filterState.currentDocumentOnly.onDidChange(() => {\n\t\t\tif (!filterState.currentDocumentOnly.value) {\n\t\t\t\tthis.filter.filterToUri(undefined);\n\t\t\t} else if (editorService.activeEditor?.resource && this.projection.value?.hasTestInDocument(editorService.activeEditor.resource)) {\n\t\t\t\tthis.filter.filterToUri(editorService.activeEditor.resource);\n\t\t\t}\n\n\t\t\tthis.tree.refilter();\n\t\t}));\n\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\tthis._register(editorService.onDidActiveEditorChange(() => {\n\t\t\tif (filterState.currentDocumentOnly.value && editorService.activeEditor?.resource) {\n\t\t\t\tif (this.projection.value?.hasTestInDocument(editorService.activeEditor.resource)) {\n\t\t\t\t\tthis.filter.filterToUri(editorService.activeEditor.resource);\n\t\t\t\t\tthis.tree.refilter();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(Event.any(\n\t\t\tfilterState.text.onDidChange,\n\t\t\tfilterState.stateFilter.onDidChange,\n\t\t\tfilterState.showExcludedTests.onDidChange,\n\t\t\ttestService.excludeTests.onDidChange,\n\t\t)(this.tree.refilter, this.tree));\n\n\t\tthis._register(this.tree);\n\n\t\tthis._register(dom.addStandardDisposableListener(this.tree.getHTMLElement(), 'keydown', evt => {\n\t\t\tif (evt.equals(KeyCode.Enter)) {\n\t\t\t\tthis.handleExecuteKeypress(evt);\n\t\t\t} else if (DefaultKeyboardNavigationDelegate.mightProducePrintableCharacter(evt)) {\n\t\t\t\tfilterState.text.value = evt.browserEvent.key;\n\t\t\t\tfilterState.focusInput();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(filterState.reveal.onDidChange(this.revealByIdPath, this));\n\n\t\tthis._register(onDidChangeVisibility(visible => {\n\t\t\tif (visible) {\n\t\t\t\tfilterState.focusInput();\n\t\t\t}\n\t\t}));\n\n\t\tthis.updatePreferredProjection();\n\n\t\tthis.onDidChangeSelection = this.tree.onDidChangeSelection;\n\t\tthis._register(this.tree.onDidChangeSelection(async evt => {\n\t\t\tconst selected = evt.elements[0];\n\t\t\tif (selected && evt.browserEvent && selected instanceof TestItemTreeElement\n\t\t\t\t&& selected.children.size === 0 && selected.test.expand === TestItemExpandState.NotExpandable) {\n\t\t\t\tif (!(await this.tryPeekError(selected)) && selected?.test) {\n\t\t\t\t\tthis.instantiationService.invokeFunction(accessor => new EditFocusedTest().run(accessor, selected.test!.item, true));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tlet followRunningTests = getTestingConfiguration(configurationService, TestingConfigKeys.FollowRunningTest);\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => {\n\t\t\tfollowRunningTests = getTestingConfiguration(configurationService, TestingConfigKeys.FollowRunningTest);\n\t\t}));\n\n\t\tthis._register(testResults.onTestChanged(evt => {\n\t\t\tif (!followRunningTests) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (evt.reason !== TestResultItemChangeReason.OwnStateChange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// follow running tests, or tests whose state changed. Tests that\n\t\t\t// complete very fast may not enter the running state at all.\n\t\t\tif (evt.item.ownComputedState !== TestResultState.Running && !(evt.previous === TestResultState.Queued && isStateWithResult(evt.item.ownComputedState))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.revealByIdPath(getPathForTestInResult(evt.item, evt.result), false, false);\n\t\t}));\n\n\t\tthis._register(testResults.onResultsChanged(() => {\n\t\t\tthis.tree.resort(null);\n\t\t}));\n\t}\n\n\t/**\n\t * Re-layout the tree.\n\t */\n\tpublic layout(): void {\n\t\tthis.tree.layout(); // The tree will measure its container\n\t}\n\n\t/**\n\t * Replaces the test listener and recalculates the tree.\n\t */\n\tpublic replaceSubscription(listener: TestSubscriptionListener | undefined) {\n\t\tthis.listener = listener;\n\t\tthis.updatePreferredProjection();\n\t\tthis.reevaluateWelcomeState();\n\t}\n\n\t/**\n\t * Tries to reveal by extension ID. Queues the request if the extension\n\t * ID is not currently available.\n\t */\n\tprivate revealByIdPath(idPath: TestIdPath | undefined, expand = true, focus = true) {\n\t\tif (!idPath) {\n\t\t\tthis.hasPendingReveal = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.projection.value) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the item itself is visible in the tree, show it. Otherwise, expand\n\t\t// its closest parent.\n\t\tlet expandToLevel = 0;\n\t\tfor (let i = idPath.length - 1; i >= expandToLevel; i--) {\n\t\t\tconst element = this.projection.value.getElementByTestId(idPath[i]);\n\t\t\t// Skip all elements that aren't in the tree.\n\t\t\tif (!element || !this.tree.hasElement(element)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If this 'if' is true, we're at the closest-visible parent to the node\n\t\t\t// we want to expand. Expand that, and then start the loop again because\n\t\t\t// we might already have children for it.\n\t\t\tif (i < idPath.length - 1) {\n\t\t\t\tif (expand) {\n\t\t\t\t\tthis.tree.expand(element);\n\t\t\t\t\texpandToLevel = i + 1; // avoid an infinite loop if the test does not exist\n\t\t\t\t\ti = idPath.length - 1; // restart the loop since new children may now be visible\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, we've arrived!\n\n\t\t\t// If the node or any of its children are excluded, flip on the 'show\n\t\t\t// excluded tests' checkbox automatically.\n\t\t\tfor (let n: TestItemTreeElement | TestTreeWorkspaceFolder = element; n instanceof TestItemTreeElement; n = n.parent) {\n\t\t\t\tif (n.test && this.testService.excludeTests.value.has(n.test.item.extId)) {\n\t\t\t\t\tthis.filterState.showExcludedTests.value = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.filterState.reveal.value = undefined;\n\t\t\tthis.hasPendingReveal = false;\n\t\t\tif (focus) {\n\t\t\t\tthis.tree.domFocus();\n\t\t\t}\n\n\t\t\tthis.revealTimeout.value = disposableTimeout(() => {\n\t\t\t\t// Don't scroll to the item if it's already visible\n\t\t\t\tif (this.tree.getRelativeTop(element) === null) {\n\t\t\t\t\tthis.tree.reveal(element, 0.5);\n\t\t\t\t}\n\n\t\t\t\tthis.tree.setFocus([element]);\n\t\t\t\tthis.tree.setSelection([element]);\n\t\t\t}, 1);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If here, we've expanded all parents we can. Waiting on data to come\n\t\t// in to possibly show the revealed test.\n\t\tthis.hasPendingReveal = true;\n\t}\n\n\t/**\n\t * Collapse all items in the tree.\n\t */\n\tpublic async collapseAll() {\n\t\tthis.tree.collapseAll();\n\t}\n\n\t/**\n\t * Tries to peek the first test error, if the item is in a failed state.\n\t */\n\tprivate async tryPeekError(item: TestItemTreeElement) {\n\t\tconst lookup = item.test && this.testResults.getStateById(item.test.item.extId);\n\t\treturn lookup && lookup[1].tasks.some(s => isFailedState(s.state))\n\t\t\t? this.peekOpener.tryPeekFirstError(lookup[0], lookup[1], { preserveFocus: true })\n\t\t\t: false;\n\t}\n\n\tprivate onContextMenu(evt: ITreeContextMenuEvent<TestExplorerTreeElement | null>) {\n\t\tconst element = evt.element;\n\t\tif (!(element instanceof TestItemTreeElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actions = getActionableElementActions(this.instantiationService, this.contextKeyService, this.menuService, element);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => evt.anchor,\n\t\t\tgetActions: () => actions.value.secondary,\n\t\t\tgetActionsContext: () => element.test.item.extId,\n\t\t\tonHide: () => actions.dispose(),\n\t\t});\n\t}\n\n\tprivate handleExecuteKeypress(evt: IKeyboardEvent) {\n\t\tconst focused = this.tree.getFocus();\n\t\tconst selected = this.tree.getSelection();\n\t\tlet targeted: (TestExplorerTreeElement | null)[];\n\t\tif (focused.length === 1 && selected.includes(focused[0])) {\n\t\t\tevt.browserEvent?.preventDefault();\n\t\t\ttargeted = selected;\n\t\t} else {\n\t\t\ttargeted = focused;\n\t\t}\n\n\t\tconst toRun = targeted\n\t\t\t.filter((e): e is TestItemTreeElement => e instanceof TestItemTreeElement)\n\t\t\t.filter(e => e.test.item.runnable);\n\n\t\tif (toRun.length) {\n\t\t\tthis.testService.runTests({\n\t\t\t\tdebug: false,\n\t\t\t\ttests: toRun.map(t => ({ src: t.test.src, testId: t.test.item.extId })),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate reevaluateWelcomeState() {\n\t\tconst shouldShowWelcome = !!this.listener\n\t\t\t&& this.listener.subscription.busyProviders === 0\n\t\t\t&& this.listener.subscription.pendingRootProviders === 0\n\t\t\t&& this.listener.subscription.isEmpty;\n\n\t\tif (shouldShowWelcome !== this.shouldShowWelcome) {\n\t\t\tthis.shouldShowWelcome = shouldShowWelcome;\n\t\t\tthis.welcomeVisibilityEmitter.fire(shouldShowWelcome);\n\t\t}\n\t}\n\n\tprivate updatePreferredProjection() {\n\t\tthis.projection.clear();\n\t\tif (!this.listener) {\n\t\t\tthis.tree.setChildren(null, []);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._viewMode.get() === TestExplorerViewMode.List) {\n\t\t\tthis.projection.value = this.instantiationService.createInstance(HierarchicalByNameProjection, this.listener);\n\t\t} else {\n\t\t\tthis.projection.value = this.instantiationService.createInstance(HierarchicalByLocationProjection, this.listener);\n\t\t}\n\n\t\tconst scheduler = new RunOnceScheduler(() => this.applyProjectionChanges(), 200);\n\t\tthis.projection.value.onUpdate(() => {\n\t\t\tif (!scheduler.isScheduled()) {\n\t\t\t\tscheduler.schedule();\n\t\t\t}\n\t\t});\n\n\t\tthis.applyProjectionChanges();\n\t}\n\n\tprivate applyProjectionChanges() {\n\t\tthis.reevaluateWelcomeState();\n\t\tthis.projection.value?.applyTo(this.tree);\n\n\t\tif (this.hasPendingReveal) {\n\t\t\tthis.revealByIdPath(this.filterState.reveal.value);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the selected tests from the tree.\n\t */\n\tpublic getSelectedTests() {\n\t\treturn this.tree.getSelection();\n\t}\n}\n\nconst enum FilterResult {\n\tExclude,\n\tInherit,\n\tInclude,\n}\n\nclass TestsFilter implements ITreeFilter<TestExplorerTreeElement> {\n\tprivate lastText?: string;\n\tprivate filters: [include: boolean, value: string][] | undefined;\n\tprivate _filterToUri: string | undefined;\n\n\tconstructor(\n\t\t@ITestExplorerFilterState private readonly state: ITestExplorerFilterState,\n\t\t@ITestService private readonly testService: ITestService,\n\t) { }\n\n\t/**\n\t * Parses and updates the tree filter. Supports lists of patterns that can be !negated.\n\t */\n\tprivate setFilter(text: string) {\n\t\tthis.lastText = text;\n\t\ttext = text.trim();\n\n\t\tif (!text) {\n\t\t\tthis.filters = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.filters = [];\n\t\tfor (const filter of splitGlobAware(text, ',').map(s => s.trim()).filter(s => !!s.length)) {\n\t\t\tif (filter.startsWith('!')) {\n\t\t\t\tthis.filters.push([false, filter.slice(1).toLowerCase()]);\n\t\t\t} else {\n\t\t\t\tthis.filters.push([true, filter.toLowerCase()]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic filterToUri(uri: URI | undefined) {\n\t\tthis._filterToUri = uri?.toString();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic filter(element: TestItemTreeElement): TreeFilterResult<void> {\n\t\tif (element instanceof TestTreeErrorMessage) {\n\t\t\treturn TreeVisibility.Visible;\n\t\t}\n\n\t\tif (this.state.text.value !== this.lastText) {\n\t\t\tthis.setFilter(this.state.text.value);\n\t\t}\n\n\t\tif (\n\t\t\telement.test\n\t\t\t&& !this.state.showExcludedTests.value\n\t\t\t&& this.testService.excludeTests.value.has(element.test.item.extId)\n\t\t) {\n\t\t\treturn TreeVisibility.Hidden;\n\t\t}\n\n\t\tswitch (Math.min(this.testFilterText(element), this.testLocation(element), this.testState(element))) {\n\t\t\tcase FilterResult.Exclude:\n\t\t\t\treturn TreeVisibility.Hidden;\n\t\t\tcase FilterResult.Include:\n\t\t\t\treturn TreeVisibility.Visible;\n\t\t\tdefault:\n\t\t\t\treturn TreeVisibility.Recurse;\n\t\t}\n\t}\n\n\tprivate testState(element: TestItemTreeElement): FilterResult {\n\t\tswitch (this.state.stateFilter.value) {\n\t\t\tcase TestExplorerStateFilter.All:\n\t\t\t\treturn FilterResult.Include;\n\t\t\tcase TestExplorerStateFilter.OnlyExecuted:\n\t\t\t\treturn element.state !== TestResultState.Unset ? FilterResult.Include : FilterResult.Inherit;\n\t\t\tcase TestExplorerStateFilter.OnlyFailed:\n\t\t\t\treturn isFailedState(element.state) ? FilterResult.Include : FilterResult.Inherit;\n\t\t}\n\t}\n\n\tprivate testLocation(element: TestItemTreeElement): FilterResult {\n\t\tif (!this._filterToUri || !this.state.currentDocumentOnly.value) {\n\t\t\treturn FilterResult.Include;\n\t\t}\n\n\t\tfor (let e: IActionableTestTreeElement | null = element; e instanceof TestItemTreeElement; e = e!.parent) {\n\t\t\treturn e.test.item.uri.toString() === this._filterToUri\n\t\t\t\t? FilterResult.Include\n\t\t\t\t: FilterResult.Exclude;\n\t\t}\n\n\t\treturn FilterResult.Inherit;\n\t}\n\n\tprivate testFilterText(element: IActionableTestTreeElement) {\n\t\tif (!this.filters) {\n\t\t\treturn FilterResult.Include;\n\t\t}\n\n\t\tfor (let e: IActionableTestTreeElement | null = element; e; e = e.parent) {\n\t\t\t// start as included if the first glob is a negation\n\t\t\tlet included = this.filters[0][0] === false ? FilterResult.Include : FilterResult.Inherit;\n\t\t\tconst data = e.label.toLowerCase();\n\n\t\t\tfor (const [include, filter] of this.filters) {\n\t\t\t\tif (data.includes(filter)) {\n\t\t\t\t\tincluded = include ? FilterResult.Include : FilterResult.Exclude;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (included !== FilterResult.Inherit) {\n\t\t\t\treturn included;\n\t\t\t}\n\t\t}\n\n\t\treturn FilterResult.Inherit;\n\t}\n}\n\nclass TreeSorter implements ITreeSorter<TestExplorerTreeElement> {\n\tconstructor(private readonly viewModel: TestingExplorerViewModel) { }\n\n\tpublic compare(a: TestExplorerTreeElement, b: TestExplorerTreeElement): number {\n\t\tif (a instanceof TestTreeErrorMessage || b instanceof TestTreeErrorMessage) {\n\t\t\treturn (a instanceof TestTreeErrorMessage ? -1 : 0) + (b instanceof TestTreeErrorMessage ? 1 : 0);\n\t\t}\n\n\t\tlet delta = cmpPriority(a.state, b.state);\n\t\tif (delta !== 0) {\n\t\t\treturn delta;\n\t\t}\n\n\t\tif (this.viewModel.viewSorting === TestExplorerViewSorting.ByLocation) {\n\t\t\tif (a instanceof TestItemTreeElement && b instanceof TestItemTreeElement\n\t\t\t\t&& a.test.item.uri.toString() === b.test.item.uri.toString() && a.test.item.range && b.test.item.range) {\n\t\t\t\tconst delta = a.test.item.range.startLineNumber - b.test.item.range.startLineNumber;\n\t\t\t\tif (delta !== 0) {\n\t\t\t\t\treturn delta;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn a.label.localeCompare(b.label);\n\t}\n}\n\nconst getLabelForTestTreeElement = (element: IActionableTestTreeElement) => {\n\tlet label = localize({\n\t\tkey: 'testing.treeElementLabel',\n\t\tcomment: ['label then the unit tests state, for example \"Addition Tests (Running)\"'],\n\t}, '{0} ({1})', element.label, testStateNames[element.state]);\n\n\tif (element instanceof TestItemTreeElement && element.retired) {\n\t\tlabel = localize({\n\t\t\tkey: 'testing.treeElementLabelOutdated',\n\t\t\tcomment: ['{0} is the original label in testing.treeElementLabel'],\n\t\t}, '{0}, outdated result', label, testStateNames[element.state]);\n\t}\n\n\treturn label;\n};\n\nclass ListAccessibilityProvider implements IListAccessibilityProvider<TestExplorerTreeElement> {\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('testExplorer', \"Test Explorer\");\n\t}\n\n\tgetAriaLabel(element: TestExplorerTreeElement): string {\n\t\treturn element instanceof TestTreeErrorMessage\n\t\t\t? element.description\n\t\t\t: getLabelForTestTreeElement(element);\n\t}\n}\n\nclass TreeKeyboardNavigationLabelProvider implements IKeyboardNavigationLabelProvider<TestExplorerTreeElement> {\n\tgetKeyboardNavigationLabel(element: TestExplorerTreeElement) {\n\t\treturn element instanceof TestTreeErrorMessage ? element.message : element.label;\n\t}\n}\n\nclass ListDelegate implements IListVirtualDelegate<TestExplorerTreeElement> {\n\tgetHeight(_element: TestExplorerTreeElement) {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: TestExplorerTreeElement) {\n\t\tif (element instanceof TestTreeWorkspaceFolder) {\n\t\t\treturn WorkspaceFolderRenderer.ID;\n\t\t}\n\n\t\tif (element instanceof TestTreeErrorMessage) {\n\t\t\treturn ErrorRenderer.ID;\n\t\t}\n\n\t\treturn TestItemRenderer.ID;\n\t}\n}\n\nclass IdentityProvider implements IIdentityProvider<TestExplorerTreeElement> {\n\tpublic getId(element: TestExplorerTreeElement) {\n\t\treturn element.treeId;\n\t}\n}\n\ninterface IErrorTemplateData {\n\tlabel: HTMLElement;\n}\n\nclass ErrorRenderer implements ITreeRenderer<TestTreeErrorMessage, FuzzyScore, IErrorTemplateData> {\n\tstatic readonly ID = 'error';\n\n\tprivate readonly renderer: MarkdownRenderer;\n\n\tconstructor(@IInstantiationService instantionService: IInstantiationService) {\n\t\tthis.renderer = instantionService.createInstance(MarkdownRenderer, {});\n\t}\n\n\tget templateId(): string {\n\t\treturn ErrorRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, dom.$('.error'));\n\t\treturn { label };\n\t}\n\n\trenderElement({ element }: ITreeNode<TestTreeErrorMessage, FuzzyScore>, _: number, data: IErrorTemplateData): void {\n\t\tif (typeof element.message === 'string') {\n\t\t\tdata.label.innerText = element.message;\n\t\t} else {\n\t\t\tconst result = this.renderer.render(element.message, { inline: true });\n\t\t\tdata.label.appendChild(result.element);\n\t\t}\n\n\t\tdata.label.title = element.description;\n\t}\n\n\tdisposeTemplate(): void {\n\t\t// noop\n\t}\n}\n\ninterface IActionableElementTemplateData {\n\tlabel: IResourceLabel;\n\ticon: HTMLElement;\n\twrapper: HTMLElement;\n\tactionBar: ActionBar;\n\telementDisposable: IDisposable[];\n\ttemplateDisposable: IDisposable[];\n}\n\nabstract class ActionableItemTemplateData<T extends IActionableTestTreeElement> extends Disposable\n\timplements ITreeRenderer<T, FuzzyScore, IActionableElementTemplateData> {\n\tconstructor(\n\t\tprotected readonly labels: ResourceLabels,\n\t\tprivate readonly menuService: IMenuService,\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tabstract get templateId(): string;\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic renderTemplate(container: HTMLElement): IActionableElementTemplateData {\n\t\tconst wrapper = dom.append(container, dom.$('.test-item'));\n\n\t\tconst icon = dom.append(wrapper, dom.$('.computed-state'));\n\t\tconst name = dom.append(wrapper, dom.$('.name'));\n\t\tconst label = this.labels.create(name, { supportHighlights: true });\n\n\t\tdom.append(wrapper, dom.$(ThemeIcon.asCSSSelector(testingHiddenIcon)));\n\t\tconst actionBar = new ActionBar(wrapper, {\n\t\t\tactionViewItemProvider: action =>\n\t\t\t\taction instanceof MenuItemAction\n\t\t\t\t\t? this.instantiationService.createInstance(MenuEntryActionViewItem, action)\n\t\t\t\t\t: undefined\n\t\t});\n\n\t\treturn { wrapper, label, actionBar, icon, elementDisposable: [], templateDisposable: [label, actionBar] };\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic renderElement({ element }: ITreeNode<T, FuzzyScore>, _: number, data: IActionableElementTemplateData): void {\n\t\tthis.fillActionBar(element, data);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tdisposeTemplate(templateData: IActionableElementTemplateData): void {\n\t\tdispose(templateData.templateDisposable);\n\t\ttemplateData.templateDisposable = [];\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tdisposeElement(_element: ITreeNode<T, FuzzyScore>, _: number, templateData: IActionableElementTemplateData): void {\n\t\tdispose(templateData.elementDisposable);\n\t\ttemplateData.elementDisposable = [];\n\t}\n\n\tprivate fillActionBar(element: T, data: IActionableElementTemplateData) {\n\t\tconst actions = getActionableElementActions(this.instantiationService, this.contextKeyService, this.menuService, element);\n\t\tdata.elementDisposable.push(actions);\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(actions.value.primary, { icon: true, label: false });\n\t}\n}\n\nclass TestItemRenderer extends ActionableItemTemplateData<TestItemTreeElement> {\n\tpublic static readonly ID = 'testItem';\n\n\tconstructor(\n\t\tlabels: ResourceLabels,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITestService private readonly testService: ITestService\n\t) {\n\t\tsuper(labels, menuService, contextKeyService, instantiationService);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget templateId(): string {\n\t\treturn TestItemRenderer.ID;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic override renderElement(node: ITreeNode<TestItemTreeElement, FuzzyScore>, depth: number, data: IActionableElementTemplateData): void {\n\t\tsuper.renderElement(node, depth, data);\n\n\t\tconst label: IResourceLabelProps = { name: node.element.label };\n\t\tconst options: IResourceLabelOptions = {};\n\t\tdata.label.setResource(label, options);\n\n\t\tconst testHidden = this.testService.excludeTests.value.has(node.element.test.item.extId);\n\t\tdata.wrapper.classList.toggle('test-is-hidden', testHidden);\n\n\t\tconst icon = testingStatesToIcons.get(node.element.test.expand === TestItemExpandState.BusyExpanding ? TestResultState.Running : node.element.state);\n\n\t\tdata.icon.className = 'computed-state ' + (icon ? ThemeIcon.asClassName(icon) : '');\n\t\tif (node.element.retired) {\n\t\t\tdata.icon.className += ' retired';\n\t\t}\n\n\t\tlabel.resource = node.element.test.item.uri;\n\t\toptions.title = getLabelForTestTreeElement(node.element);\n\t\toptions.fileKind = FileKind.FILE;\n\t\tlabel.description = node.element.description || undefined;\n\t\tdata.label.setResource(label, options);\n\t}\n}\n\nclass WorkspaceFolderRenderer extends ActionableItemTemplateData<TestTreeWorkspaceFolder> {\n\tpublic static readonly ID = 'workspaceFolder';\n\n\tconstructor(\n\t\tlabels: ResourceLabels,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(labels, menuService, contextKeyService, instantiationService);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget templateId(): string {\n\t\treturn WorkspaceFolderRenderer.ID;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic override renderElement(node: ITreeNode<TestTreeWorkspaceFolder, FuzzyScore>, depth: number, data: IActionableElementTemplateData): void {\n\t\tsuper.renderElement(node, depth, data);\n\n\t\tconst label: IResourceLabelProps = { name: node.element.label };\n\t\tconst options: IResourceLabelOptions = {};\n\t\tdata.label.setResource(label, options);\n\n\t\tconst icon = testingStatesToIcons.get(node.element.state);\n\t\tdata.icon.className = 'computed-state ' + (icon ? ThemeIcon.asClassName(icon) : '');\n\t\toptions.fileKind = FileKind.ROOT_FOLDER;\n\t\tdata.label.setResource(label, options);\n\t}\n}\n\nconst getActionableElementActions = (\n\tinstantionService: IInstantiationService,\n\tcontextKeyService: IContextKeyService,\n\tmenuService: IMenuService,\n\telement: IActionableTestTreeElement,\n) => {\n\tconst test = element instanceof TestItemTreeElement ? element.test : undefined;\n\tconst contextOverlay = contextKeyService.createOverlay([\n\t\t['view', Testing.ExplorerViewId],\n\t\t[TestingContextKeys.testItemExtId.key, test?.item.extId]\n\t]);\n\tconst menu = menuService.createMenu(MenuId.TestItem, contextOverlay);\n\n\ttry {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst running = element.state === TestResultState.Running;\n\t\tif (!Iterable.isEmpty(element.runnable)) {\n\t\t\tconst run = instantionService.createInstance(RunAction, element.runnable, running);\n\t\t\tprimary.push(run);\n\t\t\tsecondary.push(run);\n\t\t}\n\n\t\tif (!Iterable.isEmpty(element.debuggable)) {\n\t\t\tconst debug = instantionService.createInstance(DebugAction, element.debuggable, running);\n\t\t\tprimary.push(debug);\n\t\t\tsecondary.push(debug);\n\t\t}\n\n\t\tif (test) {\n\t\t\tsecondary.push(instantionService.createInstance(HideOrShowTestAction, test.item.extId));\n\t\t}\n\n\t\tconst result = { primary, secondary };\n\t\tconst actionsDisposable = createAndFillInActionBarActions(menu, {\n\t\t\targ: test?.item,\n\t\t\tshouldForwardArgs: true,\n\t\t}, result, 'inline');\n\n\t\treturn { value: result, dispose: () => actionsDisposable.dispose };\n\t} finally {\n\t\tmenu.dispose();\n\t}\n};\n\n\nregisterThemingParticipant((theme, collector) => {\n\tif (theme.type === 'dark') {\n\t\tconst foregroundColor = theme.getColor(foreground);\n\t\tif (foregroundColor) {\n\t\t\tconst fgWithOpacity = new Color(new RGBA(foregroundColor.rgba.r, foregroundColor.rgba.g, foregroundColor.rgba.b, 0.65));\n\t\t\tcollector.addRule(`.test-explorer .test-explorer-messages { color: ${fgWithOpacity}; }`);\n\t\t}\n\t}\n});\n"]}