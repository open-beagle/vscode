{"version":3,"sources":["vs/workbench/contrib/testing/browser/testingExplorerFilter.ts"],"names":[],"mappings":"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","file":"testingExplorerFilter.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { BaseActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { DropdownMenuActionViewItem } from 'vs/base/browser/ui/dropdown/dropdownActionViewItem';\nimport { HistoryInputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { Action, IAction, IActionRunner, Separator } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextScopedHistoryInputBox } from 'vs/platform/browser/contextScopedHistoryWidget';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\nimport { testingFilterIcon } from 'vs/workbench/contrib/testing/browser/icons';\nimport { TestExplorerStateFilter, Testing } from 'vs/workbench/contrib/testing/common/constants';\nimport { MutableObservableValue } from 'vs/workbench/contrib/testing/common/observableValue';\nimport { StoredValue } from 'vs/workbench/contrib/testing/common/storedValue';\nimport { TestIdPath } from 'vs/workbench/contrib/testing/common/testCollection';\nimport { TestingContextKeys } from 'vs/workbench/contrib/testing/common/testingContextKeys';\nimport { ITestService } from 'vs/workbench/contrib/testing/common/testService';\n\nexport interface ITestExplorerFilterState {\n\t_serviceBrand: undefined;\n\treadonly text: MutableObservableValue<string>;\n\t/**\n\t * Reveal request: the path to the test to reveal. The last element of the\n\t * array is the test the user wanted to reveal, and the previous\n\t * items are its parents.\n\t*/\n\treadonly reveal: MutableObservableValue<TestIdPath | undefined>;\n\treadonly stateFilter: MutableObservableValue<TestExplorerStateFilter>;\n\treadonly currentDocumentOnly: MutableObservableValue<boolean>;\n\t/** Whether excluded test should be shown in the view */\n\treadonly showExcludedTests: MutableObservableValue<boolean>;\n\n\treadonly onDidRequestInputFocus: Event<void>;\n\tfocusInput(): void;\n}\n\nexport const ITestExplorerFilterState = createDecorator<ITestExplorerFilterState>('testingFilterState');\n\nexport class TestExplorerFilterState implements ITestExplorerFilterState {\n\tdeclare _serviceBrand: undefined;\n\tprivate readonly focusEmitter = new Emitter<void>();\n\tpublic readonly text = new MutableObservableValue('');\n\tpublic readonly stateFilter = MutableObservableValue.stored(new StoredValue<TestExplorerStateFilter>({\n\t\tkey: 'testStateFilter',\n\t\tscope: StorageScope.WORKSPACE,\n\t\ttarget: StorageTarget.USER\n\t}, this.storage), TestExplorerStateFilter.All);\n\tpublic readonly currentDocumentOnly = MutableObservableValue.stored(new StoredValue<boolean>({\n\t\tkey: 'testsByCurrentDocumentOnly',\n\t\tscope: StorageScope.WORKSPACE,\n\t\ttarget: StorageTarget.USER\n\t}, this.storage), false);\n\n\tpublic readonly showExcludedTests = new MutableObservableValue(false);\n\tpublic readonly reveal = new MutableObservableValue<TestIdPath | undefined>(undefined);\n\n\tpublic readonly onDidRequestInputFocus = this.focusEmitter.event;\n\n\tconstructor(@IStorageService private readonly storage: IStorageService) { }\n\n\tpublic focusInput() {\n\t\tthis.focusEmitter.fire();\n\t}\n}\n\nexport class TestingExplorerFilter extends BaseActionViewItem {\n\tprivate input!: HistoryInputBox;\n\tprivate readonly history: StoredValue<string[]> = this.instantiationService.createInstance(StoredValue, {\n\t\tkey: 'testing.filterHistory',\n\t\tscope: StorageScope.WORKSPACE,\n\t\ttarget: StorageTarget.USER\n\t});\n\n\tprivate readonly filtersAction = new Action('markersFiltersAction', localize('testing.filters.menu', \"More Filters...\"), 'testing-filter-button ' + ThemeIcon.asClassName(testingFilterIcon));\n\n\tconstructor(\n\t\taction: IAction,\n\t\t@ITestExplorerFilterState private readonly state: ITestExplorerFilterState,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(null, action);\n\t\tthis.updateFilterActiveState();\n\t\tthis._register(state.currentDocumentOnly.onDidChange(this.updateFilterActiveState, this));\n\t\tthis._register(state.stateFilter.onDidChange(this.updateFilterActiveState, this));\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override render(container: HTMLElement) {\n\t\tcontainer.classList.add('testing-filter-action-item');\n\n\t\tconst updateDelayer = this._register(new Delayer<void>(400));\n\t\tconst wrapper = dom.$('.testing-filter-wrapper');\n\t\tcontainer.appendChild(wrapper);\n\n\t\tconst input = this.input = this._register(this.instantiationService.createInstance(ContextScopedHistoryInputBox, wrapper, this.contextViewService, {\n\t\t\tplaceholder: localize('testExplorerFilter', \"Filter (e.g. text, !exclude)\"),\n\t\t\thistory: this.history.get([]),\n\t\t}));\n\t\tinput.value = this.state.text.value;\n\t\tthis._register(attachInputBoxStyler(input, this.themeService));\n\n\t\tthis._register(this.state.text.onDidChange(newValue => {\n\t\t\tinput.value = newValue;\n\t\t}));\n\n\t\tthis._register(this.state.onDidRequestInputFocus(() => {\n\t\t\tinput.focus();\n\t\t}));\n\n\t\tthis._register(input.onDidChange(() => updateDelayer.trigger(() => {\n\t\t\tinput.addToHistory();\n\t\t\tthis.state.text.value = input.value;\n\t\t})));\n\n\t\tthis._register(dom.addStandardDisposableListener(input.inputElement, dom.EventType.KEY_DOWN, e => {\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\tinput.value = '';\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}));\n\n\t\tconst actionbar = this._register(new ActionBar(container, {\n\t\t\tactionViewItemProvider: action => {\n\t\t\t\tif (action.id === this.filtersAction.id) {\n\t\t\t\t\treturn this.instantiationService.createInstance(FiltersDropdownMenuActionViewItem, action, this.state, this.actionRunner);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\t\tactionbar.push(this.filtersAction, { icon: true, label: false });\n\t}\n\n\n\t/**\n\t * Focuses the filter input.\n\t */\n\tpublic override focus(): void {\n\t\tthis.input.focus();\n\t}\n\n\t/**\n\t * Persists changes to the input history.\n\t */\n\tpublic saveState() {\n\t\tconst history = this.input.getHistory();\n\t\tif (history.length) {\n\t\t\tthis.history.store(history);\n\t\t} else {\n\t\t\tthis.history.delete();\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override dispose() {\n\t\tthis.saveState();\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Updates the 'checked' state of the filter submenu.\n\t */\n\tprivate updateFilterActiveState() {\n\t\tthis.filtersAction.checked = this.state.currentDocumentOnly.value\n\t\t\t|| this.state.stateFilter.value !== TestExplorerStateFilter.All;\n\t}\n}\n\n\nclass FiltersDropdownMenuActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: IAction,\n\t\tprivate readonly filters: ITestExplorerFilterState,\n\t\tactionRunner: IActionRunner,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ITestService private readonly testService: ITestService,\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions() },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\tactionRunner,\n\t\t\t\tclassNames: action.class,\n\t\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT,\n\t\t\t\tmenuAsChild: true\n\t\t\t}\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tthis.updateChecked();\n\t}\n\n\tprivate getActions(): IAction[] {\n\t\treturn [\n\t\t\t...[\n\t\t\t\t{ v: TestExplorerStateFilter.OnlyFailed, label: localize('testing.filters.showOnlyFailed', \"Show Only Failed Tests\") },\n\t\t\t\t{ v: TestExplorerStateFilter.OnlyExecuted, label: localize('testing.filters.showOnlyExecuted', \"Show Only Executed Tests\") },\n\t\t\t\t{ v: TestExplorerStateFilter.All, label: localize('testing.filters.showAll', \"Show All Tests\") },\n\t\t\t].map(({ v, label }) => ({\n\t\t\t\tchecked: this.filters.stateFilter.value === v,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: v,\n\t\t\t\tlabel,\n\t\t\t\trun: async () => {\n\t\t\t\t\tthis.filters.stateFilter.value = this.filters.stateFilter.value === v ? TestExplorerStateFilter.All : v;\n\t\t\t\t},\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t})),\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.showExcludedTests.value,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'showExcluded',\n\t\t\t\tlabel: localize('testing.filters.showExcludedTests', \"Show Hidden Tests\"),\n\t\t\t\trun: async () => this.filters.showExcludedTests.value = !this.filters.showExcludedTests.value,\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t},\n\t\t\t{\n\t\t\t\tchecked: false,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: this.testService.excludeTests.value.size > 0,\n\t\t\t\tid: 'removeExcluded',\n\t\t\t\tlabel: localize('testing.filters.removeTestExclusions', \"Unhide All Tests\"),\n\t\t\t\trun: async () => this.testService.clearExcludedTests(),\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t},\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.currentDocumentOnly.value,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'currentDocument',\n\t\t\t\tlabel: localize('testing.filters.currentFile', \"Show in Active File Only\"),\n\t\t\t\trun: async () => this.filters.currentDocumentOnly.value = !this.filters.currentDocumentOnly.value,\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t},\n\t\t];\n\t}\n\n\toverride updateChecked(): void {\n\t\tthis.element!.classList.toggle('checked', this._action.checked);\n\t}\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Testing.FilterActionId,\n\t\t\ttitle: localize('filter', \"Filter\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', Testing.ExplorerViewId), TestingContextKeys.explorerLocation.isEqualTo(ViewContainerLocation.Panel)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t});\n\t}\n\tasync run(): Promise<void> { }\n});\n"]}