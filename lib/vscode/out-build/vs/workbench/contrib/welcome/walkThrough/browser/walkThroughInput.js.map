{"version":3,"file":"walkThroughInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/welcome/walkThrough/browser/walkThroughInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAYhG,MAAa,gBAAiB,SAAQ,oBAAW;QAEhD,YACS,OAAe,EACf,WAA2C;YAEnD,KAAK,EAAE,CAAC;YAHA,YAAO,GAAP,OAAO,CAAQ;YACf,gBAAW,GAAX,WAAW,CAAgC;QAGpD,CAAC;QAED,IAAI,IAAI;YACP,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,IAAI,QAAQ;YACX,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxD,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC/C,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IArBD,4CAqBC;IAYD,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,oBAAW;QAShD,YACkB,OAAgC,EACb,wBAA2C;YAE/E,KAAK,EAAE,CAAC;YAHS,YAAO,GAAP,OAAO,CAAyB;YACb,6BAAwB,GAAxB,wBAAwB,CAAmB;YATxE,YAAO,GAAqC,IAAI,CAAC;YAEjD,iBAAY,GAAG,CAAC,CAAC;YACjB,oBAAe,GAAG,CAAC,CAAC;QAS5B,CAAC;QAPD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAShD,IAAa,MAAM;YAClB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5B,CAAC;QAEQ,OAAO;YACf,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC1B,CAAC;QAEQ,cAAc;YACtB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC;QACvC,CAAC;QAED,gBAAgB;YACf,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACnC,CAAC;QAEQ,sBAAsB;YAC9B,MAAM,UAAU,GAAG,KAAK,CAAC,sBAAsB,EAAE,CAAC;YAClD,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC/C;;;;cAIE;YACF,OAAO,UAAU,CAAC;QACnB,CAAC;QAED,IAAI,OAAO;YACV,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC7B,CAAC;QAED,IAAI,MAAM;YACT,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5B,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,6CAAgB,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;qBACpD,IAAI,CAAC,OAAO,CAAC,EAAE;oBACf,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;wBACzC,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;qBACzC;oBAED,MAAM,QAAQ,GAA4C,EAAE,CAAC;oBAC7D,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACvC,QAAQ,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;wBAC9B,CAAC,EAAE,CAAC;wBACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,kBAAkB,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;wBAC9G,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5E,OAAO,oBAAoB,QAAQ,CAAC,QAAQ,8CAA8C,CAAC;oBAC5F,CAAC,CAAC;oBACF,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAExC,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;yBAC1B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;aACJ;YAED,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEQ,OAAO,CAAC,UAAmB;YACnC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACvC,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,UAAU,YAAY,gBAAgB,EAAE;gBAC3C,IAAI,wBAAwB,GAAqB,UAAU,CAAC;gBAE5D,wBAAwB;gBACxB,OAAO,CAAA,GAAA,mBAAO,CAAA,CAAC,wBAAwB,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aACjF;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAEQ,OAAO;YACf,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACpB;YAED,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEM,sBAAsB,CAAC,SAAiB,EAAE,YAAoB;YACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QACrE,CAAC;KACD,CAAA;IA1GY,gBAAgB;QAW1B,WAAA,mCAAiB,CAAA;OAXP,gBAAgB,CA0G5B;IA1GY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorInput, EditorModel } from 'vs/workbench/common/editor';\nimport { URI } from 'vs/base/common/uri';\nimport { DisposableStore, IReference } from 'vs/base/common/lifecycle';\nimport { ITextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { Schemas } from 'vs/base/common/network';\nimport { isEqual } from 'vs/base/common/resources';\nimport { requireToContent } from 'vs/workbench/contrib/welcome/walkThrough/common/walkThroughContentProvider';\nimport { Dimension } from 'vs/base/browser/dom';\n\nexport class WalkThroughModel extends EditorModel {\n\n\tconstructor(\n\t\tprivate mainRef: string,\n\t\tprivate snippetRefs: IReference<ITextEditorModel>[]\n\t) {\n\t\tsuper();\n\t}\n\n\tget main() {\n\t\treturn this.mainRef;\n\t}\n\n\tget snippets() {\n\t\treturn this.snippetRefs.map(snippet => snippet.object);\n\t}\n\n\toverride dispose() {\n\t\tthis.snippetRefs.forEach(ref => ref.dispose());\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface WalkThroughInputOptions {\n\treadonly typeId: string;\n\treadonly name: string;\n\treadonly description?: string;\n\treadonly resource: URI;\n\treadonly telemetryFrom: string;\n\treadonly onReady?: (container: HTMLElement, contentDisposables: DisposableStore) => void;\n\treadonly layout?: (dimension: Dimension) => void;\n}\n\nexport class WalkThroughInput extends EditorInput {\n\n\tprivate promise: Promise<WalkThroughModel> | null = null;\n\n\tprivate maxTopScroll = 0;\n\tprivate maxBottomScroll = 0;\n\n\tget resource() { return this.options.resource; }\n\n\tconstructor(\n\t\tprivate readonly options: WalkThroughInputOptions,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn this.options.typeId;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.options.name;\n\t}\n\n\toverride getDescription(): string {\n\t\treturn this.options.description || '';\n\t}\n\n\tgetTelemetryFrom(): string {\n\t\treturn this.options.telemetryFrom;\n\t}\n\n\toverride getTelemetryDescriptor(): { [key: string]: unknown; } {\n\t\tconst descriptor = super.getTelemetryDescriptor();\n\t\tdescriptor['target'] = this.getTelemetryFrom();\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn descriptor;\n\t}\n\n\tget onReady() {\n\t\treturn this.options.onReady;\n\t}\n\n\tget layout() {\n\t\treturn this.options.layout;\n\t}\n\n\toverride resolve(): Promise<WalkThroughModel> {\n\t\tif (!this.promise) {\n\t\t\tthis.promise = requireToContent(this.options.resource)\n\t\t\t\t.then(content => {\n\t\t\t\t\tif (this.resource.path.endsWith('.html')) {\n\t\t\t\t\t\treturn new WalkThroughModel(content, []);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst snippets: Promise<IReference<ITextEditorModel>>[] = [];\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tconst renderer = new marked.Renderer();\n\t\t\t\t\trenderer.code = (code, lang) => {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tconst resource = this.options.resource.with({ scheme: Schemas.walkThroughSnippet, fragment: `${i}.${lang}` });\n\t\t\t\t\t\tsnippets.push(this.textModelResolverService.createModelReference(resource));\n\t\t\t\t\t\treturn `<div id=\"snippet-${resource.fragment}\" class=\"walkThroughEditorContainer\" ></div>`;\n\t\t\t\t\t};\n\t\t\t\t\tcontent = marked(content, { renderer });\n\n\t\t\t\t\treturn Promise.all(snippets)\n\t\t\t\t\t\t.then(refs => new WalkThroughModel(content, refs));\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.promise;\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\tif (super.matches(otherInput) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof WalkThroughInput) {\n\t\t\tlet otherResourceEditorInput = <WalkThroughInput>otherInput;\n\n\t\t\t// Compare by properties\n\t\t\treturn isEqual(otherResourceEditorInput.options.resource, this.options.resource);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\tif (this.promise) {\n\t\t\tthis.promise.then(model => model.dispose());\n\t\t\tthis.promise = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic relativeScrollPosition(topScroll: number, bottomScroll: number) {\n\t\tthis.maxTopScroll = Math.max(this.maxTopScroll, topScroll);\n\t\tthis.maxBottomScroll = Math.max(this.maxBottomScroll, bottomScroll);\n\t}\n}\n"]}