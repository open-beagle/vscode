{"version":3,"file":"telemetryOptOut.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/welcome/telemetryOptOut/electron-sandbox/telemetryOptOut.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAgBhG,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,yCAAuB;QAEjE,YACkB,cAA+B,EAChC,aAA6B,EACvB,mBAAyC,EACjD,WAAyB,EACpB,gBAAmC,EAClC,iBAAqC,EAClC,oBAA2C,EACxC,cAAwC,EACjD,cAA+B,EAC3B,kBAAuC,EACvC,kBAAuC,EACvB,iBAAqC;YAE1E,KAAK,CAAC,cAAc,EAAE,aAAa,EAAE,mBAAmB,EAAE,WAAW,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,cAAc,EAAE,cAAc,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;YAFrK,sBAAiB,GAAjB,iBAAiB,CAAoB;YAI1E,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC9B,CAAC;QAES,cAAc;YACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAChD,CAAC;KACD,CAAA;IAxBY,qBAAqB;QAG/B,WAAA,yBAAe,CAAA;QACf,WAAA,uBAAc,CAAA;QACd,WAAA,mCAAoB,CAAA;QACpB,WAAA,mBAAY,CAAA;QACZ,WAAA,6BAAiB,CAAA;QACjB,WAAA,sCAAkB,CAAA;QAClB,WAAA,qCAAqB,CAAA;QACrB,WAAA,8CAAwB,CAAA;QACxB,WAAA,gCAAe,CAAA;QACf,WAAA,iCAAmB,CAAA;QACnB,YAAA,iCAAmB,CAAA;QACnB,YAAA,2BAAkB,CAAA;OAdR,qBAAqB,CAwBjC;IAxBY,sDAAqB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IExperimentService } from 'vs/workbench/contrib/experiments/common/experimentService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { AbstractTelemetryOptOut } from 'vs/workbench/contrib/welcome/telemetryOptOut/browser/telemetryOptOut';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\n\nexport class NativeTelemetryOptOut extends AbstractTelemetryOptOut {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IHostService hostService: IHostService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExperimentService experimentService: IExperimentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService,\n\t\t@IProductService productService: IProductService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService\n\t) {\n\t\tsuper(storageService, openerService, notificationService, hostService, telemetryService, experimentService, configurationService, galleryService, productService, environmentService, jsonEditingService);\n\n\t\tthis.handleTelemetryOptOut();\n\t}\n\n\tprotected getWindowCount(): Promise<number> {\n\t\treturn this.nativeHostService.getWindowCount();\n\t}\n}\n"]}