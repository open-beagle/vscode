{"version":3,"sources":["vs/workbench/contrib/welcome/gettingStarted/browser/gettingStarted.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBhG,sBAAiG;IAEjG,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,qCAAqC;gBACzC,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAiB,EAAE,IAAiB,CAAC;gBACrD,QAAQ,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAM,CAAC;gBAClC,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE;oBACL,EAAE,EAAE,gBAAM,CAAC,eAAe;oBAC1B,KAAK,EAAE,WAAW;oBAClB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAEM,GAAG,CAAC,QAA0B;YACpC,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC,UAAU,CAAC,IAAI,yCAAmB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,CAAC;KACD,CAAC,CAAC;IAEH,mBAAQ,CAAC,EAAE,CAA8B,yBAAgB,CAAC,oBAAoB,CAAC,CAAC,6BAA6B,CAAC,yCAAmB,CAAC,EAAE,EAAE,8CAA6B,CAAC,CAAC;IACrK,mBAAQ,CAAC,EAAE,CAAkB,yBAAgB,CAAC,OAAO,CAAC,CAAC,cAAc,CACpE,yBAAgB,CAAC,MAAM,CACtB,mCAAkB,EAClB,mCAAkB,CAAC,EAAE,EACrB,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAgB,EAAE,IAAiB,CAAC,CAC7C,EACD;QACC,IAAI,4BAAc,CAAC,yCAAmB,CAAC;KACvC,CACD,CAAC;IAEF,MAAM,QAAQ,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAgB,EAAE,IAAiB,CAAC,CAAC;IAE/D,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,uBAAuB;gBAC3B,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAuB,EAAE,IAAS,CAAC;gBACnD,QAAQ;gBACR,UAAU,EAAE;oBACX,MAAM,yBAAgC;oBACtC,OAAO,gBAAgB;oBACvB,IAAI,EAAE,wCAAuB;iBAC7B;gBACD,YAAY,EAAE,iCAAoB,CAAC,MAAM,CAAC,cAAc,EAAE,oBAAoB,CAAC;gBAC/E,EAAE,EAAE,IAAI;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC;YACnD,MAAM,UAAU,GAAG,aAAa,CAAC,gBAAgB,CAAC;YAClD,IAAI,UAAU,YAAY,mCAAkB,EAAE;gBAC7C,UAAU,CAAC,MAAM,EAAE,CAAC;aACpB;QACF,CAAC;KACD,CAAC,CAAC;IAEH,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,qBAAqB;gBACzB,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAuB,EAAE,IAAM,CAAC;gBAChD,QAAQ;gBACR,UAAU,EAAE;oBACX,MAAM,yBAAgC;oBACtC,OAAO,oBAAmB;oBAC1B,SAAS,EAAE,qBAAoB;oBAC/B,IAAI,EAAE,wCAAuB;iBAC7B;gBACD,YAAY,EAAE,iCAAoB,CAAC,MAAM,CAAC,cAAc,EAAE,oBAAoB,CAAC;gBAC/E,EAAE,EAAE,IAAI;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC;YACnD,MAAM,UAAU,GAAG,aAAa,CAAC,gBAAgB,CAAC;YAClD,IAAI,UAAU,YAAY,mCAAkB,EAAE;gBAC7C,UAAU,CAAC,SAAS,EAAE,CAAC;aACvB;QACF,CAAC;KACD,CAAC,CAAC;IAEH,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,qBAAqB;gBACzB,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAuB,EAAE,IAAU,CAAC;gBACpD,QAAQ;gBACR,UAAU,EAAE;oBACX,MAAM,yBAAgC;oBACtC,OAAO,kBAAiB;oBACxB,SAAS,EAAE,oBAAmB;oBAC9B,IAAI,EAAE,wCAAuB;iBAC7B;gBACD,YAAY,EAAE,iCAAoB,CAAC,MAAM,CAAC,cAAc,EAAE,oBAAoB,CAAC;gBAC/E,EAAE,EAAE,IAAI;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC;YACnD,MAAM,UAAU,GAAG,aAAa,CAAC,gBAAgB,CAAC;YAClD,IAAI,UAAU,YAAY,mCAAkB,EAAE;gBAC7C,UAAU,CAAC,aAAa,EAAE,CAAC;aAC3B;QACF,CAAC;KACD,CAAC,CAAC;IAEH,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,iCAAiC;gBACrC,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAiC,EAAE,IAAoB,CAAC;gBACxE,QAAQ;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B,EAAE,GAAW;YAC1C,IAAI,CAAC,GAAG,EAAE;gBAAE,OAAO;aAAE;YACrB,MAAM,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CAAC,8CAAsB,CAAC,CAAC;YACnE,qBAAqB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC;KACD,CAAC,CAAC;IAEH,CAAA,GAAA,yBAAe,CAAA,CAAC,KAAM,SAAQ,iBAAO;QACpC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,mCAAmC;gBACvC,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAkC,EAAE,IAAsB,CAAC;gBAC3E,QAAQ;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B,EAAE,GAAW;YAC1C,IAAI,CAAC,GAAG,EAAE;gBAAE,OAAO;aAAE;YACrB,MAAM,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CAAC,8CAAsB,CAAC,CAAC;YACnE,qBAAqB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC;KACD,CAAC,CAAC;IAEH,IAAM,kCAAkC,GAAxC,MAAM,kCAAkC;QACvC,YACwB,qBAA4C,EAC3C,sBAA8C;YAEtE,2CAA2C;QAC5C,CAAC;KACD,CAAA;IAPK,kCAAkC;QAErC,WAAA,qCAAqB,CAAA;QACrB,WAAA,8CAAsB,CAAA;OAHnB,kCAAkC,CAOvC;IAED,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC;SACzE,6BAA6B,CAAC,kCAAkC,mBAA0B,CAAC;IAG7F,MAAM,qBAAqB,GAAG,mBAAQ,CAAC,EAAE,CAAyB,kCAAuB,CAAC,aAAa,CAAC,CAAC;IACzG,IAAI,iBAAO,CAAC,OAAO,KAAK,QAAQ,EAAE;QACjC,qBAAqB,CAAC,qBAAqB,iCACvC,8CAA8B,KACjC,UAAU,EAAE;gBACX,2DAA2D,EAAE;oBAC5D,KAAK,qBAAgC;oBACrC,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,KAAK;oBACd,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAA2D,EAAE,IAA6K,CAAC;iBACjQ;aACD,IACA,CAAC;KACH","file":"gettingStarted.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { GettingStartedInputSerializer, GettingStartedPage, inGettingStartedContext } from 'vs/workbench/contrib/welcome/gettingStarted/browser/gettingStarted';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorExtensions, IEditorInputFactoryRegistry } from 'vs/workbench/common/editor';\nimport { MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ContextKeyEqualsExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { EditorDescriptor, IEditorRegistry } from 'vs/workbench/browser/editor';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IGettingStartedService } from 'vs/workbench/contrib/welcome/gettingStarted/browser/gettingStartedService';\nimport { GettingStartedInput } from 'vs/workbench/contrib/welcome/gettingStarted/browser/gettingStartedInput';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { workbenchConfigurationNodeBase } from 'vs/workbench/common/configuration';\nimport product from 'vs/platform/product/common/product';\n\n\nexport * as icons from 'vs/workbench/contrib/welcome/gettingStarted/browser/gettingStartedIcons';\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.showGettingStarted',\n\t\t\ttitle: localize('Getting Started', \"Getting Started\"),\n\t\t\tcategory: localize('help', \"Help\"),\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\tgroup: '1_welcome',\n\t\t\t\torder: 2,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor) {\n\t\taccessor.get(IEditorService).openEditor(new GettingStartedInput({}), {});\n\t}\n});\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(GettingStartedInput.ID, GettingStartedInputSerializer);\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(\n\t\tGettingStartedPage,\n\t\tGettingStartedPage.ID,\n\t\tlocalize('gettingStarted', \"Getting Started\")\n\t),\n\t[\n\t\tnew SyncDescriptor(GettingStartedInput)\n\t]\n);\n\nconst category = localize('gettingStarted', \"Getting Started\");\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'gettingStarted.goBack',\n\t\t\ttitle: localize('gettingStarted.goBack', \"Go Back\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: inGettingStartedContext\n\t\t\t},\n\t\t\tprecondition: ContextKeyEqualsExpr.create('activeEditor', 'gettingStartedPage'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.escape();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'gettingStarted.next',\n\t\t\ttitle: localize('gettingStarted.goNext', \"Next\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tsecondary: [KeyCode.RightArrow],\n\t\t\t\twhen: inGettingStartedContext\n\t\t\t},\n\t\t\tprecondition: ContextKeyEqualsExpr.create('activeEditor', 'gettingStartedPage'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.focusNext();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'gettingStarted.prev',\n\t\t\ttitle: localize('gettingStarted.goPrev', \"Previous\"),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tsecondary: [KeyCode.LeftArrow],\n\t\t\t\twhen: inGettingStartedContext\n\t\t\t},\n\t\t\tprecondition: ContextKeyEqualsExpr.create('activeEditor', 'gettingStartedPage'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.focusPrevious();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'gettingStarted.markStepComplete',\n\t\t\ttitle: localize('gettingStarted.markStepComplete', \"Mark Step Complete\"),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, arg: string) {\n\t\tif (!arg) { return; }\n\t\tconst gettingStartedService = accessor.get(IGettingStartedService);\n\t\tgettingStartedService.progressStep(arg);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'gettingStarted.markStepIncomplete',\n\t\t\ttitle: localize('gettingStarted.markStepInomplete', \"Mark Step Incomplete\"),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, arg: string) {\n\t\tif (!arg) { return; }\n\t\tconst gettingStartedService = accessor.get(IGettingStartedService);\n\t\tgettingStartedService.deprogressStep(arg);\n\t}\n});\n\nclass WorkbenchConfigurationContribution {\n\tconstructor(\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IGettingStartedService _gettingStartedService: IGettingStartedService,\n\t) {\n\t\t// Init the getting started service via DI.\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WorkbenchConfigurationContribution, LifecyclePhase.Restored);\n\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nif (product.quality !== 'stable') {\n\tconfigurationRegistry.registerConfiguration({\n\t\t...workbenchConfigurationNodeBase,\n\t\tproperties: {\n\t\t\t'workbench.welcomePage.experimental.extensionContributions': {\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: localize('workbench.welcomePage.experimental.extensionContributions', \"When enabled, allow extensions to contribute items to the \\\"Getting Started\\\" and \\\"Start\\\" sections of the welcome page. Experimental, subject to breakage as api changes.\")\n\t\t\t}\n\t\t}\n\t});\n}\n"]}