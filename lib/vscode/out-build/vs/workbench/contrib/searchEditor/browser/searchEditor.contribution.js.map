{"version":3,"sources":["vs/workbench/contrib/searchEditor/browser/searchEditor.contribution.ts"],"names":[],"mappings":"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","file":"searchEditor.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { extname, isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ToggleCaseSensitiveKeybinding, ToggleRegexKeybinding, ToggleWholeWordKeybinding } from 'vs/editor/contrib/find/findModel';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ContextKeyEqualsExpr, ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { EditorDescriptor, IEditorRegistry } from 'vs/workbench/browser/editor';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ActiveEditorContext, IEditorInputSerializer, IEditorInputFactoryRegistry, EditorExtensions } from 'vs/workbench/common/editor';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { getSearchView } from 'vs/workbench/contrib/search/browser/searchActions';\nimport { searchNewEditorIcon, searchRefreshIcon } from 'vs/workbench/contrib/search/browser/searchIcons';\nimport * as SearchConstants from 'vs/workbench/contrib/search/common/constants';\nimport * as SearchEditorConstants from 'vs/workbench/contrib/searchEditor/browser/constants';\nimport { SearchEditor } from 'vs/workbench/contrib/searchEditor/browser/searchEditor';\nimport { createEditorFromSearchResult, modifySearchEditorContextLinesCommand, openNewSearchEditor, openSearchEditor, selectAllSearchEditorMatchesCommand, toggleSearchEditorCaseSensitiveCommand, toggleSearchEditorContextLinesCommand, toggleSearchEditorRegexCommand, toggleSearchEditorWholeWordCommand } from 'vs/workbench/contrib/searchEditor/browser/searchEditorActions';\nimport { getOrMakeSearchEditorInput, SearchConfiguration, SearchEditorInput, SEARCH_EDITOR_EXT } from 'vs/workbench/contrib/searchEditor/browser/searchEditorInput';\nimport { parseSavedSearchEditor } from 'vs/workbench/contrib/searchEditor/browser/searchEditorSerialization';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { VIEW_ID } from 'vs/workbench/services/search/common/search';\nimport { EditorOverride } from 'vs/platform/editor/common/editor';\nimport { DEFAULT_EDITOR_ASSOCIATION } from 'vs/workbench/services/editor/common/editorOverrideService';\nimport { IWorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\n\nconst OpenInEditorCommandId = 'search.action.openInEditor';\nconst OpenNewEditorToSideCommandId = 'search.action.openNewEditorToSide';\nconst FocusQueryEditorWidgetCommandId = 'search.action.focusQueryEditorWidget';\n\nconst ToggleSearchEditorCaseSensitiveCommandId = 'toggleSearchEditorCaseSensitive';\nconst ToggleSearchEditorWholeWordCommandId = 'toggleSearchEditorWholeWord';\nconst ToggleSearchEditorRegexCommandId = 'toggleSearchEditorRegex';\nconst IncreaseSearchEditorContextLinesCommandId = 'increaseSearchEditorContextLines';\nconst DecreaseSearchEditorContextLinesCommandId = 'decreaseSearchEditorContextLines';\n\nconst RerunSearchEditorSearchCommandId = 'rerunSearchEditorSearch';\nconst CleanSearchEditorStateCommandId = 'cleanSearchEditorState';\nconst SelectAllSearchEditorMatchesCommandId = 'selectAllSearchEditorMatches';\n\n\n\n//#region Editor Descriptior\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(\n\t\tSearchEditor,\n\t\tSearchEditor.ID,\n\t\tlocalize('searchEditor', \"Search Editor\")\n\t),\n\t[\n\t\tnew SyncDescriptor(SearchEditorInput)\n\t]\n);\n//#endregion\n\n//#region Startup Contribution\nclass SearchEditorContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t) {\n\n\t\tthis.editorService.overrideOpenEditor({\n\t\t\tgetEditorOverrides: (resource: URI) => {\n\t\t\t\treturn extname(resource) === SEARCH_EDITOR_EXT ? [{\n\t\t\t\t\tid: SearchEditorInput.ID,\n\t\t\t\t\tlabel: localize('promptOpenWith.searchEditor.displayName', \"Search Editor\"),\n\t\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\t\tactive: isEqual(this.editorService.activeEditor?.resource, resource) && this.editorService.activeEditor instanceof SearchEditorInput\n\t\t\t\t}] : [];\n\t\t\t},\n\t\t\topen: (editor, options, group) => {\n\t\t\t\tconst resource = editor.resource;\n\t\t\t\tif (!resource) { return undefined; }\n\n\t\t\t\tif (extname(resource) !== SEARCH_EDITOR_EXT) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tif (editor instanceof SearchEditorInput && group.contains(editor)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tthis.telemetryService.publicLog2('searchEditor/openSavedSearchEditor');\n\n\t\t\t\treturn {\n\t\t\t\t\toverride: (async () => {\n\t\t\t\t\t\tconst { config } = await instantiationService.invokeFunction(parseSavedSearchEditor, resource);\n\t\t\t\t\t\tconst input = instantiationService.invokeFunction(getOrMakeSearchEditorInput, { backingUri: resource, config });\n\t\t\t\t\t\treturn editorService.openEditor(input, { ...options, override: EditorOverride.DISABLED }, group);\n\t\t\t\t\t})()\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(SearchEditorContribution, LifecyclePhase.Starting);\n//#endregion\n\n//#region Input Serializer\ntype SerializedSearchEditor = { modelUri: string | undefined, dirty: boolean, config: SearchConfiguration, name: string, matchRanges: Range[], backingUri: string };\n\nclass SearchEditorInputSerializer implements IEditorInputSerializer {\n\n\tcanSerialize(input: SearchEditorInput) {\n\t\treturn !!input.config;\n\t}\n\n\tserialize(input: SearchEditorInput) {\n\t\tif (input.isDisposed()) {\n\t\t\treturn JSON.stringify({ modelUri: undefined, dirty: false, config: input.config, name: input.getName(), matchRanges: [], backingUri: input.backingUri?.toString() } as SerializedSearchEditor);\n\t\t}\n\n\t\tlet modelUri = undefined;\n\t\tif (input.modelUri.path || input.modelUri.fragment) {\n\t\t\tmodelUri = input.modelUri.toString();\n\t\t}\n\t\tif (!modelUri) { return undefined; }\n\n\t\tconst config = input.config;\n\t\tconst dirty = input.isDirty();\n\t\tconst matchRanges = input.getMatchRanges();\n\t\tconst backingUri = input.backingUri;\n\n\t\treturn JSON.stringify({ modelUri, dirty, config, name: input.getName(), matchRanges, backingUri: backingUri?.toString() } as SerializedSearchEditor);\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): SearchEditorInput | undefined {\n\t\tconst { modelUri, dirty, config, matchRanges, backingUri } = JSON.parse(serializedEditorInput) as SerializedSearchEditor;\n\t\tif (config && (config.query !== undefined)) {\n\t\t\tif (modelUri) {\n\t\t\t\tconst input = instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t{ config, modelUri: URI.parse(modelUri), backingUri: backingUri ? URI.parse(backingUri) : undefined });\n\t\t\t\tinput.setDirty(dirty);\n\t\t\t\tinput.setMatchRanges(matchRanges);\n\t\t\t\treturn input;\n\t\t\t} else {\n\t\t\t\tif (backingUri) {\n\t\t\t\t\treturn instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t\t{ config, backingUri: URI.parse(backingUri) });\n\t\t\t\t} else {\n\t\t\t\t\treturn instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t\t{ config, text: '' });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(\n\tSearchEditorInput.ID,\n\tSearchEditorInputSerializer);\n//#endregion\n\n//#region Commands\nCommandsRegistry.registerCommand(\n\tCleanSearchEditorStateCommandId,\n\t(accessor: ServicesAccessor) => {\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane instanceof SearchEditor) {\n\t\t\tactiveEditorPane.cleanState();\n\t\t}\n\t});\n//#endregion\n\n//#region Actions\nconst category = { value: localize('search', \"Search Editor\"), original: 'Search Editor' };\n\nexport type LegacySearchEditorArgs = Partial<{\n\tquery: string,\n\tincludes: string,\n\texcludes: string,\n\tcontextLines: number,\n\twholeWord: boolean,\n\tcaseSensitive: boolean,\n\tregexp: boolean,\n\tuseIgnores: boolean,\n\tshowIncludesExcludes: boolean,\n\ttriggerSearch: boolean,\n\tfocusResults: boolean,\n\tlocation: 'reuse' | 'new'\n}>;\n\nconst translateLegacyConfig = (legacyConfig: LegacySearchEditorArgs & OpenSearchEditorArgs = {}): OpenSearchEditorArgs => {\n\tconst config: OpenSearchEditorArgs = {};\n\tconst overrides: { [K in keyof LegacySearchEditorArgs]: keyof OpenSearchEditorArgs } = {\n\t\tincludes: 'filesToInclude',\n\t\texcludes: 'filesToExclude',\n\t\twholeWord: 'matchWholeWord',\n\t\tcaseSensitive: 'isCaseSensitive',\n\t\tregexp: 'isRegexp',\n\t\tuseIgnores: 'useExcludeSettingsAndIgnoreFiles',\n\t};\n\tObject.entries(legacyConfig).forEach(([key, value]) => {\n\t\t(config as any)[(overrides as any)[key] ?? key] = value;\n\t});\n\treturn config;\n};\n\nexport type OpenSearchEditorArgs = Partial<SearchConfiguration & { triggerSearch: boolean, focusResults: boolean, location: 'reuse' | 'new' }>;\nconst openArgDescription = {\n\tdescription: 'Open a new search editor. Arguments passed can include variables like ${relativeFileDirname}.',\n\targs: [{\n\t\tname: 'Open new Search Editor args',\n\t\tschema: {\n\t\t\tproperties: {\n\t\t\t\tquery: { type: 'string' },\n\t\t\t\tfilesToInclude: { type: 'string' },\n\t\t\t\tfilesToExclude: { type: 'string' },\n\t\t\t\tcontextLines: { type: 'number' },\n\t\t\t\tmatchWholeWord: { type: 'boolean' },\n\t\t\t\tisCaseSensitive: { type: 'boolean' },\n\t\t\t\tisRegexp: { type: 'boolean' },\n\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { type: 'boolean' },\n\t\t\t\tshowIncludesExcludes: { type: 'boolean' },\n\t\t\t\ttriggerSearch: { type: 'boolean' },\n\t\t\t\tfocusResults: { type: 'boolean' },\n\t\t\t}\n\t\t}\n\t}]\n} as const;\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.searchEditor.action.deleteFileResults',\n\t\t\ttitle: { value: localize('searchEditor.deleteResultBlock', \"Delete File Results\"), original: 'Delete File Results' },\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backspace,\n\t\t\t},\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst contextService = accessor.get(IContextKeyService).getContext(document.activeElement);\n\t\tif (contextService.getValue(SearchEditorConstants.InSearchEditor.serialize())) {\n\t\t\t(accessor.get(IEditorService).activeEditorPane as SearchEditor).deleteResultBlock();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.OpenNewEditorCommandId,\n\t\t\ttitle: { value: localize('search.openNewSearchEditor', \"New Search Editor\"), original: 'New Search Editor' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tdescription: openArgDescription\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'new', ...args }));\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.OpenEditorCommandId,\n\t\t\ttitle: { value: localize('search.openSearchEditor', \"Open Search Editor\"), original: 'Open Search Editor' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tdescription: openArgDescription\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'reuse', ...args }));\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenNewEditorToSideCommandId,\n\t\t\ttitle: { value: localize('search.openNewEditorToSide', \"Open new Search Editor to the Side\"), original: 'Open new Search Editor to the Side' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tdescription: openArgDescription\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig(args), true);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenInEditorCommandId,\n\t\t\ttitle: { value: localize('search.openResultsInEditor', \"Open Results in Editor\"), original: 'Open Results in Editor' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Enter,\n\t\t\t\twhen: ContextKeyExpr.and(SearchConstants.HasSearchResults, SearchConstants.SearchViewFocusedKey),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst searchView = getSearchView(viewsService);\n\t\tif (searchView) {\n\t\t\tawait instantiationService.invokeFunction(createEditorFromSearchResult, searchView.searchResult, searchView.searchIncludePattern.getValue(), searchView.searchExcludePattern.getValue(), searchView.searchIncludePattern.onlySearchInOpenEditors());\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RerunSearchEditorSearchCommandId,\n\t\t\ttitle: { value: localize('search.rerunSearchInEditor', \"Search Again\"), original: 'Search Again' },\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_R,\n\t\t\t\twhen: SearchEditorConstants.InSearchEditor,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\ticon: searchRefreshIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(SearchEditorConstants.SearchEditorID)\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(SearchEditorConstants.SearchEditorID)\n\t\t\t}]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).triggerSearch({ resetCursor: false });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusQueryEditorWidgetCommandId,\n\t\t\ttitle: { value: localize('search.action.focusQueryEditorWidget', \"Focus Search Editor Input\"), original: 'Focus Search Editor Input' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusSearchInput();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorCaseSensitiveCommandId,\n\t\t\ttitle: { value: localize('searchEditor.action.toggleSearchEditorCaseSensitive', \"Toggle Match Case\"), original: 'Toggle Match Case' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleCaseSensitiveKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorCaseSensitiveCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorWholeWordCommandId,\n\t\t\ttitle: { value: localize('searchEditor.action.toggleSearchEditorWholeWord', \"Toggle Match Whole Word\"), original: 'Toggle Match Whole Word' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleWholeWordKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorWholeWordCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorRegexCommandId,\n\t\t\ttitle: { value: localize('searchEditor.action.toggleSearchEditorRegex', \"Toggle Use Regular Expression\"), original: 'Toggle Use Regular Expression\"' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleRegexKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorRegexCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.ToggleSearchEditorContextLinesCommandId,\n\t\t\ttitle: { value: localize('searchEditor.action.toggleSearchEditorContextLines', \"Toggle Context Lines\"), original: 'Toggle Context Lines\"' },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KEY_L,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_L }\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorContextLinesCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: IncreaseSearchEditorContextLinesCommandId,\n\t\t\ttitle: { original: 'Increase Context Lines', value: localize('searchEditor.action.increaseSearchEditorContextLines', \"Increase Context Lines\") },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.US_EQUAL\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) { modifySearchEditorContextLinesCommand(accessor, true); }\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DecreaseSearchEditorContextLinesCommandId,\n\t\t\ttitle: { original: 'Decrease Context Lines', value: localize('searchEditor.action.decreaseSearchEditorContextLines', \"Decrease Context Lines\") },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.US_MINUS\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) { modifySearchEditorContextLinesCommand(accessor, false); }\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SelectAllSearchEditorMatchesCommandId,\n\t\t\ttitle: { original: 'Select All Matches', value: localize('searchEditor.action.selectAllSearchEditorMatches', \"Select All Matches\") },\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_L,\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tselectAllSearchEditorMatchesCommand(accessor);\n\t}\n});\n\nregisterAction2(class OpenSearchEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.openNewEditorFromView',\n\t\t\ttitle: localize('search.openNewEditor', \"Open New Search Editor from View\"),\n\t\t\tcategory,\n\t\t\ticon: searchNewEditorIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', VIEW_ID),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn openSearchEditor(accessor);\n\t}\n});\n//#endregion\n\n//#region Search Editor Working Copy Editor Handler\nclass SearchEditorWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService private readonly workingCopyEditorService: IWorkingCopyEditorService,\n\t) {\n\t\tsuper();\n\n\t\tthis.installHandler();\n\t}\n\n\tprivate installHandler(): void {\n\t\tthis._register(this.workingCopyEditorService.registerHandler({\n\t\t\thandles: workingCopy => {\n\t\t\t\treturn workingCopy.resource.scheme === SearchEditorConstants.SearchEditorScheme;\n\t\t\t},\n\t\t\tisOpen: (workingCopy, editor) => {\n\t\t\t\treturn editor instanceof SearchEditorInput && isEqual(workingCopy.resource, editor.modelUri);\n\t\t\t},\n\t\t\tcreateEditor: workingCopy => {\n\t\t\t\tconst input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { modelUri: workingCopy.resource, config: {} });\n\t\t\t\tinput.setDirty(true);\n\n\t\t\t\treturn input;\n\t\t\t}\n\t\t}));\n\t}\n}\n\nworkbenchContributionsRegistry.registerWorkbenchContribution(SearchEditorWorkingCopyEditorHandler, LifecyclePhase.Ready);\n//#endregion\n"]}