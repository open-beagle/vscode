{"version":3,"file":"terminal.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/electron-browser/terminal.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAiBhG,uFAAuF;IAEvF,oBAAoB;IACpB,CAAA,GAAA,8BAAiB,CAAA,CAAC,mCAAwB,EAAE,iDAAuB,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAA,GAAA,8BAAiB,CAAA,CAAC,0CAA+B,EAAE,uEAAsC,EAAE,IAAI,CAAC,CAAC;IAEjG,MAAM,iBAAiB,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IACtG,iBAAiB,CAAC,6BAA6B,CAAC,uDAA0B,gBAAuB,CAAC;IAElG,0BAA0B;IAC1B,MAAM,qBAAqB,GAAG,mBAAQ,CAAC,EAAE,CAAyB,kCAAU,CAAC,aAAa,CAAC,CAAC;IAE5F,MAAM,WAAW,GAAG,KAAK,EAAE,EAAmB,EAAE,EAAE,CAAC,CAAA,GAAA,sBAAc,CAAA,CAAC,EAAE,EAAE,MAAM,iBAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChG,CAAA,GAAA,qDAA6B,CAAA,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalInstanceService } from 'vs/workbench/contrib/terminal/electron-browser/terminalInstanceService';\nimport { TerminalNativeContribution } from 'vs/workbench/contrib/terminal/electron-browser/terminalNativeContribution';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { getTerminalShellConfiguration } from 'vs/workbench/contrib/terminal/common/terminalConfiguration';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { process } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { ElectronTerminalProfileResolverService } from 'vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService';\nimport { ITerminalProfileResolverService } from 'vs/workbench/contrib/terminal/common/terminal';\n\n// This file contains additional desktop-only contributions on top of those in browser/\n\n// Register services\nregisterSingleton(ITerminalInstanceService, TerminalInstanceService, true);\nregisterSingleton(ITerminalProfileResolverService, ElectronTerminalProfileResolverService, true);\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(TerminalNativeContribution, LifecyclePhase.Ready);\n\n// Register configurations\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\nconst systemShell = async (os: OperatingSystem) => getSystemShell(os, await process.shellEnv());\ngetTerminalShellConfiguration(systemShell).then(config => configurationRegistry.registerConfiguration(config));\n"]}