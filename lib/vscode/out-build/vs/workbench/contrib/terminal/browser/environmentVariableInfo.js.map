{"version":3,"sources":["vs/workbench/contrib/terminal/browser/environmentVariableInfo.ts"],"names":[],"mappings":"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","file":"environmentVariableInfo.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EnvironmentVariableMutatorType, IEnvironmentVariableInfo, IMergedEnvironmentVariableCollection, IMergedEnvironmentVariableCollectionDiff } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { TERMINAL_COMMAND_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { localize } from 'vs/nls';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IHoverAction } from 'vs/workbench/services/hover/browser/hover';\n\nexport class EnvironmentVariableInfoStale implements IEnvironmentVariableInfo {\n\treadonly requiresAction = true;\n\n\tconstructor(\n\t\tprivate readonly _diff: IMergedEnvironmentVariableCollectionDiff,\n\t\tprivate readonly _terminalId: number,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService\n\t) {\n\t}\n\n\tgetInfo(): string {\n\t\tconst addsAndChanges: string[] = [];\n\t\tconst removals: string[] = [];\n\t\tthis._diff.added.forEach((mutators, variable) => {\n\t\t\tmutators.forEach(mutator => addsAndChanges.push(mutatorTypeLabel(mutator.type, mutator.value, variable)));\n\t\t});\n\t\tthis._diff.changed.forEach((mutators, variable) => {\n\t\t\tmutators.forEach(mutator => addsAndChanges.push(mutatorTypeLabel(mutator.type, mutator.value, variable)));\n\t\t});\n\t\tthis._diff.removed.forEach((mutators, variable) => {\n\t\t\tmutators.forEach(mutator => removals.push(mutatorTypeLabel(mutator.type, mutator.value, variable)));\n\t\t});\n\n\t\tlet info: string = '';\n\n\t\tif (addsAndChanges.length > 0) {\n\t\t\tinfo = localize('extensionEnvironmentContributionChanges', \"Extensions want to make the following changes to the terminal's environment:\");\n\t\t\tinfo += '\\n\\n';\n\t\t\tinfo += '```\\n';\n\t\t\tinfo += addsAndChanges.join('\\n');\n\t\t\tinfo += '\\n```';\n\t\t}\n\n\t\tif (removals.length > 0) {\n\t\t\tinfo += info.length > 0 ? '\\n\\n' : '';\n\t\t\tinfo += localize('extensionEnvironmentContributionRemoval', \"Extensions want to remove these existing changes from the terminal's environment:\");\n\t\t\tinfo += '\\n\\n';\n\t\t\tinfo += '```\\n';\n\t\t\tinfo += removals.join('\\n');\n\t\t\tinfo += '\\n```';\n\t\t}\n\n\t\treturn info;\n\t}\n\n\tgetIcon(): ThemeIcon {\n\t\treturn Codicon.warning;\n\t}\n\n\tgetActions(): IHoverAction[] {\n\t\treturn [{\n\t\t\tlabel: localize('relaunchTerminalLabel', \"Relaunch terminal\"),\n\t\t\trun: () => this._terminalService.getInstanceFromId(this._terminalId)?.relaunch(),\n\t\t\tcommandId: TERMINAL_COMMAND_ID.RELAUNCH\n\t\t}];\n\t}\n}\n\nexport class EnvironmentVariableInfoChangesActive implements IEnvironmentVariableInfo {\n\treadonly requiresAction = false;\n\n\tconstructor(\n\t\tprivate _collection: IMergedEnvironmentVariableCollection\n\t) {\n\t}\n\n\tgetInfo(): string {\n\t\tconst changes: string[] = [];\n\t\tthis._collection.map.forEach((mutators, variable) => {\n\t\t\tmutators.forEach(mutator => changes.push(mutatorTypeLabel(mutator.type, mutator.value, variable)));\n\t\t});\n\t\tconst message = localize('extensionEnvironmentContributionInfo', \"Extensions have made changes to this terminal's environment\");\n\t\treturn message + '\\n\\n```\\n' + changes.join('\\n') + '\\n```';\n\t}\n\n\tgetIcon(): ThemeIcon {\n\t\treturn Codicon.info;\n\t}\n}\n\nfunction mutatorTypeLabel(type: EnvironmentVariableMutatorType, value: string, variable: string): string {\n\tswitch (type) {\n\t\tcase EnvironmentVariableMutatorType.Prepend: return `${variable}=${value}\\${env:${variable}}`;\n\t\tcase EnvironmentVariableMutatorType.Append: return `${variable}=\\${env:${variable}}${value}`;\n\t\tdefault: return `${variable}=${value}`;\n\t}\n}\n"]}