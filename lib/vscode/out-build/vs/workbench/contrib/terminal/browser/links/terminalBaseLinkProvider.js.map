{"version":3,"file":"terminalBaseLinkProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/links/terminalBaseLinkProvider.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAsB,wBAAwB;QAG7C,KAAK,CAAC,YAAY,CAAC,gBAAwB,EAAE,QAA8C;;YAC1F,MAAA,IAAI,CAAC,YAAY,0CAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC/D,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7B,CAAC;KAGD;IAVD,4DAUC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ILinkProvider, ILink } from 'xterm';\nimport { TerminalLink } from 'vs/workbench/contrib/terminal/browser/links/terminalLink';\n\nexport abstract class TerminalBaseLinkProvider implements ILinkProvider {\n\tprivate _activeLinks: TerminalLink[] | undefined;\n\n\tasync provideLinks(bufferLineNumber: number, callback: (links: ILink[] | undefined) => void): Promise<void> {\n\t\tthis._activeLinks?.forEach(l => l.dispose);\n\t\tthis._activeLinks = await this._provideLinks(bufferLineNumber);\n\t\tcallback(this._activeLinks);\n\t}\n\n\tprotected abstract _provideLinks(bufferLineNumber: number): Promise<TerminalLink[]> | TerminalLink[];\n}\n"]}