{"version":3,"sources":["vs/workbench/contrib/terminal/browser/links/terminalWordLinkProvider.ts"],"names":[],"mappings":"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","file":"terminalWordLinkProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal, IViewportRange } from 'xterm';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITerminalConfiguration, TERMINAL_CONFIG_SECTION } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalLink } from 'vs/workbench/contrib/terminal/browser/links/terminalLink';\nimport { localize } from 'vs/nls';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ISearchService } from 'vs/workbench/services/search/common/search';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { QueryBuilder } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { XtermLinkMatcherHandler } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkManager';\nimport { TerminalBaseLinkProvider } from 'vs/workbench/contrib/terminal/browser/links/terminalBaseLinkProvider';\n\nexport class TerminalWordLinkProvider extends TerminalBaseLinkProvider {\n\tprivate readonly _fileQueryBuilder = this._instantiationService.createInstance(QueryBuilder);\n\n\tconstructor(\n\t\tprivate readonly _xterm: Terminal,\n\t\tprivate readonly _wrapLinkHandler: (handler: (event: MouseEvent | undefined, link: string) => void) => XtermLinkMatcherHandler,\n\t\tprivate readonly _tooltipCallback: (link: TerminalLink, viewportRange: IViewportRange, modifierDownCallback?: () => void, modifierUpCallback?: () => void) => void,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@ISearchService private readonly _searchService: ISearchService,\n\t\t@IEditorService private readonly _editorService: IEditorService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected _provideLinks(y: number): TerminalLink[] {\n\t\t// TODO: Support wrapping\n\t\t// Dispose of all old links if new links are provides, links are only cached for the current line\n\t\tconst result: TerminalLink[] = [];\n\t\tconst wordSeparators = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).wordSeparators;\n\t\tconst activateCallback = this._wrapLinkHandler((_, link) => this._activate(link));\n\n\t\tconst line = this._xterm.buffer.active.getLine(y - 1)!;\n\t\tlet text = '';\n\t\tlet startX = -1;\n\t\tconst cellData = line.getCell(0)!;\n\t\tfor (let x = 0; x < line.length; x++) {\n\t\t\tline.getCell(x, cellData);\n\t\t\tconst chars = cellData.getChars();\n\t\t\tconst width = cellData.getWidth();\n\n\t\t\t// Add a link if this is a separator\n\t\t\tif (width !== 0 && wordSeparators.indexOf(chars) >= 0) {\n\t\t\t\tif (startX !== -1) {\n\t\t\t\t\tresult.push(this._createTerminalLink(startX, x, y, text, activateCallback));\n\t\t\t\t\ttext = '';\n\t\t\t\t\tstartX = -1;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Mark the start of a link if it hasn't started yet\n\t\t\tif (startX === -1) {\n\t\t\t\tstartX = x;\n\t\t\t}\n\n\t\t\ttext += chars;\n\t\t}\n\n\t\t// Add the final link if there is one\n\t\tif (startX !== -1) {\n\t\t\tresult.push(this._createTerminalLink(startX, line.length, y, text, activateCallback));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _createTerminalLink(startX: number, endX: number, y: number, text: string, activateCallback: XtermLinkMatcherHandler): TerminalLink {\n\t\t// Remove trailing colon if there is one so the link is more useful\n\t\tif (text.length > 0 && text.charAt(text.length - 1) === ':') {\n\t\t\ttext = text.slice(0, -1);\n\t\t\tendX--;\n\t\t}\n\t\treturn this._instantiationService.createInstance(TerminalLink,\n\t\t\tthis._xterm,\n\t\t\t{ start: { x: startX + 1, y }, end: { x: endX, y } },\n\t\t\ttext,\n\t\t\tthis._xterm.buffer.active.viewportY,\n\t\t\tactivateCallback,\n\t\t\tthis._tooltipCallback,\n\t\t\tfalse,\n\t\t\tlocalize('searchWorkspace', 'Search workspace')\n\t\t);\n\t}\n\n\tprivate async _activate(link: string) {\n\t\tconst results = await this._searchService.fileSearch(\n\t\t\tthis._fileQueryBuilder.file(this._workspaceContextService.getWorkspace().folders, {\n\t\t\t\tfilePattern: link,\n\t\t\t\tmaxResults: 2\n\t\t\t})\n\t\t);\n\n\t\t// If there was exactly one match, open it\n\t\tif (results.results.length === 1) {\n\t\t\tconst match = results.results[0];\n\t\t\tawait this._editorService.openEditor({ resource: match.resource, options: { pinned: true } });\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to searching quick access\n\t\tthis._quickInputService.quickAccess.show(link);\n\t}\n}\n"]}