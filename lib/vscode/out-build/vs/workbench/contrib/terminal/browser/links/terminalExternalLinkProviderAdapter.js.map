{"version":3,"file":"terminalExternalLinkProviderAdapter.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/links/terminalExternalLinkProviderAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal, IViewportRange, IBufferLine } from 'xterm';\nimport { getXtermLineContent, convertLinkRangeToBuffer } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkHelpers';\nimport { TerminalLink } from 'vs/workbench/contrib/terminal/browser/links/terminalLink';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TerminalBaseLinkProvider } from 'vs/workbench/contrib/terminal/browser/links/terminalBaseLinkProvider';\nimport { ITerminalExternalLinkProvider, ITerminalInstance } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { XtermLinkMatcherHandler } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkManager';\n\n/**\n * An adapter to convert a simple external link provider into an internal link provider that\n * manages link lifecycle, hovers, etc. and gets registered in xterm.js.\n */\nexport class TerminalExternalLinkProviderAdapter extends TerminalBaseLinkProvider {\n\n\tconstructor(\n\t\tprivate readonly _xterm: Terminal,\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprivate readonly _externalLinkProvider: ITerminalExternalLinkProvider,\n\t\tprivate readonly _wrapLinkHandler: (handler: (event: MouseEvent | undefined, link: string) => void) => XtermLinkMatcherHandler,\n\t\tprivate readonly _tooltipCallback: (link: TerminalLink, viewportRange: IViewportRange, modifierDownCallback?: () => void, modifierUpCallback?: () => void) => void,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async _provideLinks(y: number): Promise<TerminalLink[]> {\n\t\tlet startLine = y - 1;\n\t\tlet endLine = startLine;\n\n\t\tconst lines: IBufferLine[] = [\n\t\t\tthis._xterm.buffer.active.getLine(startLine)!\n\t\t];\n\n\t\twhile (startLine >= 0 && this._xterm.buffer.active.getLine(startLine)?.isWrapped) {\n\t\t\tlines.unshift(this._xterm.buffer.active.getLine(startLine - 1)!);\n\t\t\tstartLine--;\n\t\t}\n\n\t\twhile (endLine < this._xterm.buffer.active.length && this._xterm.buffer.active.getLine(endLine + 1)?.isWrapped) {\n\t\t\tlines.push(this._xterm.buffer.active.getLine(endLine + 1)!);\n\t\t\tendLine++;\n\t\t}\n\n\t\tconst lineContent = getXtermLineContent(this._xterm.buffer.active, startLine, endLine, this._xterm.cols);\n\t\tif (lineContent.trim().length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst externalLinks = await this._externalLinkProvider.provideLinks(this._instance, lineContent);\n\t\tif (!externalLinks) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn externalLinks.map(link => {\n\t\t\tconst bufferRange = convertLinkRangeToBuffer(lines, this._xterm.cols, {\n\t\t\t\tstartColumn: link.startIndex + 1,\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tendColumn: link.startIndex + link.length + 1,\n\t\t\t\tendLineNumber: 1\n\t\t\t}, startLine);\n\t\t\tconst matchingText = lineContent.substr(link.startIndex, link.length) || '';\n\t\t\tconst activateLink = this._wrapLinkHandler((_, text) => link.activate(text));\n\t\t\treturn this._instantiationService.createInstance(TerminalLink, this._xterm, bufferRange, matchingText, this._xterm.buffer.active.viewportY, activateLink, this._tooltipCallback, true, link.label);\n\t\t});\n\t}\n}\n"]}