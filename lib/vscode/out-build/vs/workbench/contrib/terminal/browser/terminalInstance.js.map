{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalInstance.ts"],"names":[],"mappings":"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","file":"terminalInstance.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IDisposable, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { TabFocus } from 'vs/editor/common/config/commonEditorConfig';\nimport * as nls from 'vs/nls';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService, IPromptChoice, Severity } from 'vs/platform/notification/common/notification';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { activeContrastBorder, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { ICssStyleCollector, IColorTheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { PANEL_BACKGROUND, SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/widgets/widgetManager';\nimport { ITerminalProcessManager, KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED, NEVER_MEASURE_RENDER_TIME_STORAGE_KEY, ProcessState, TERMINAL_VIEW_ID, KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS, INavigationMode, TitleEventSource, DEFAULT_COMMANDS_TO_SKIP_SHELL, TERMINAL_CREATION_COMMANDS, KEYBINDING_CONTEXT_TERMINAL_ALT_BUFFER_ACTIVE, SUGGESTED_RENDERER_TYPE, ITerminalProfileResolverService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ansiColorIdentifiers, TERMINAL_BACKGROUND_COLOR, TERMINAL_CURSOR_BACKGROUND_COLOR, TERMINAL_CURSOR_FOREGROUND_COLOR, TERMINAL_FOREGROUND_COLOR, TERMINAL_SELECTION_BACKGROUND_COLOR } from 'vs/workbench/contrib/terminal/common/terminalColorRegistry';\nimport { TerminalConfigHelper } from 'vs/workbench/contrib/terminal/browser/terminalConfigHelper';\nimport { TerminalLinkManager } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkManager';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { ITerminalInstanceService, ITerminalInstance, ITerminalExternalLinkProvider } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalProcessManager } from 'vs/workbench/contrib/terminal/browser/terminalProcessManager';\nimport type { Terminal as XTermTerminal, IBuffer, ITerminalAddon, RendererType } from 'xterm';\nimport type { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport type { Unicode11Addon } from 'xterm-addon-unicode11';\nimport type { WebglAddon } from 'xterm-addon-webgl';\nimport { CommandTrackerAddon } from 'vs/workbench/contrib/terminal/browser/addons/commandTrackerAddon';\nimport { NavigationModeAddon } from 'vs/workbench/contrib/terminal/browser/addons/navigationModeAddon';\nimport { XTermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IViewsService, IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { EnvironmentVariableInfoWidget } from 'vs/workbench/contrib/terminal/browser/widgets/environmentVariableInfoWidget';\nimport { TerminalLaunchHelpAction } from 'vs/workbench/contrib/terminal/browser/terminalActions';\nimport { TypeAheadAddon } from 'vs/workbench/contrib/terminal/browser/terminalTypeAheadAddon';\nimport { BrowserFeatures } from 'vs/base/browser/canIUse';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessDataEvent, IShellLaunchConfig, ITerminalDimensionsOverride, ITerminalLaunchError, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { formatMessageForTerminal } from 'vs/workbench/contrib/terminal/common/terminalStrings';\nimport { AutoOpenBarrier } from 'vs/base/common/async';\nimport { Codicon, iconRegistry } from 'vs/base/common/codicons';\nimport { ITerminalStatusList, TerminalStatus, TerminalStatusList } from 'vs/workbench/contrib/terminal/browser/terminalStatusList';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { isMacintosh, isWindows, OperatingSystem, OS } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\n\n// How long in milliseconds should an average frame take to render for a notification to appear\n// which suggests the fallback DOM-based renderer\nconst SLOW_CANVAS_RENDER_THRESHOLD = 50;\nconst NUMBER_OF_FRAMES_TO_MEASURE = 20;\n\nconst enum Constants {\n\t/**\n\t * The maximum amount of milliseconds to wait for a container before starting to create the\n\t * terminal process. This period helps ensure the terminal has good initial dimensions to work\n\t * with if it's going to be a foreground terminal.\n\t */\n\tWaitForContainerThreshold = 100\n}\n\nlet xtermConstructor: Promise<typeof XTermTerminal> | undefined;\n\ninterface ICanvasDimensions {\n\twidth: number;\n\theight: number;\n}\n\ninterface IGridDimensions {\n\tcols: number;\n\trows: number;\n}\n\nexport class TerminalInstance extends Disposable implements ITerminalInstance {\n\tprivate static readonly EOL_REGEX = /\\r?\\n/g;\n\n\tprivate static _lastKnownCanvasDimensions: ICanvasDimensions | undefined;\n\tprivate static _lastKnownGridDimensions: IGridDimensions | undefined;\n\tprivate static _instanceIdCounter = 1;\n\n\tprivate _processManager!: ITerminalProcessManager;\n\tprivate _pressAnyKeyToCloseListener: IDisposable | undefined;\n\n\tprivate _instanceId: number;\n\tprivate _latestXtermWriteData: number = 0;\n\tprivate _latestXtermParseData: number = 0;\n\tprivate _isExiting: boolean;\n\tprivate _hadFocusOnExit: boolean;\n\tprivate _isVisible: boolean;\n\tprivate _isDisposed: boolean;\n\tprivate _exitCode: number | undefined;\n\tprivate _skipTerminalCommands: string[];\n\tprivate _shellType: TerminalShellType;\n\tprivate _title: string = '';\n\tprivate _wrapperElement: (HTMLElement & { xterm?: XTermTerminal }) | undefined;\n\tprivate _xterm: XTermTerminal | undefined;\n\tprivate _xtermCore: XTermCore | undefined;\n\tprivate _xtermTypeAhead: TypeAheadAddon | undefined;\n\tprivate _xtermSearch: SearchAddon | undefined;\n\tprivate _xtermUnicode11: Unicode11Addon | undefined;\n\tprivate _xtermElement: HTMLDivElement | undefined;\n\tprivate _terminalHasTextContextKey: IContextKey<boolean>;\n\tprivate _terminalA11yTreeFocusContextKey: IContextKey<boolean>;\n\tprivate _cols: number = 0;\n\tprivate _rows: number = 0;\n\tprivate _dimensionsOverride: ITerminalDimensionsOverride | undefined;\n\tprivate _xtermReadyPromise: Promise<XTermTerminal>;\n\tprivate _titleReadyPromise: Promise<string>;\n\tprivate _titleReadyComplete: ((title: string) => any) | undefined;\n\tprivate _areLinksReady: boolean = false;\n\tprivate _initialDataEvents: string[] | undefined = [];\n\tprivate _containerReadyBarrier: AutoOpenBarrier;\n\n\tprivate _messageTitleDisposable: IDisposable | undefined;\n\n\tprivate _widgetManager: TerminalWidgetManager = this._instantiationService.createInstance(TerminalWidgetManager);\n\tprivate _linkManager: TerminalLinkManager | undefined;\n\tprivate _environmentInfo: { widget: EnvironmentVariableInfoWidget, disposable: IDisposable } | undefined;\n\tprivate _webglAddon: WebglAddon | undefined;\n\tprivate _commandTrackerAddon: CommandTrackerAddon | undefined;\n\tprivate _navigationModeAddon: INavigationMode & ITerminalAddon | undefined;\n\n\tprivate _timeoutDimension: dom.Dimension | undefined;\n\n\tprivate hasHadInput: boolean;\n\n\tpublic readonly statusList: ITerminalStatusList = new TerminalStatusList();\n\tpublic disableLayout: boolean;\n\tpublic get instanceId(): number { return this._instanceId; }\n\tpublic get resource(): URI {\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.vscodeTerminal,\n\t\t\tpath: this.title,\n\t\t\tfragment: this.instanceId.toString(),\n\t\t});\n\t}\n\tpublic get cols(): number {\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.cols) {\n\t\t\tif (this._dimensionsOverride.forceExactSize) {\n\t\t\t\treturn this._dimensionsOverride.cols;\n\t\t\t}\n\t\t\treturn Math.min(Math.max(this._dimensionsOverride.cols, 2), this._cols);\n\t\t}\n\t\treturn this._cols;\n\t}\n\tpublic get rows(): number {\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.rows) {\n\t\t\tif (this._dimensionsOverride.forceExactSize) {\n\t\t\t\treturn this._dimensionsOverride.rows;\n\t\t\t}\n\t\t\treturn Math.min(Math.max(this._dimensionsOverride.rows, 2), this._rows);\n\t\t}\n\t\treturn this._rows;\n\t}\n\tpublic get maxCols(): number { return this._cols; }\n\tpublic get maxRows(): number { return this._rows; }\n\t// TODO: Ideally processId would be merged into processReady\n\tpublic get processId(): number | undefined { return this._processManager.shellProcessId; }\n\t// TODO: How does this work with detached processes?\n\t// TODO: Should this be an event as it can fire twice?\n\tpublic get processReady(): Promise<void> { return this._processManager.ptyProcessReady; }\n\tpublic get areLinksReady(): boolean { return this._areLinksReady; }\n\tpublic get initialDataEvents(): string[] | undefined { return this._initialDataEvents; }\n\tpublic get exitCode(): number | undefined { return this._exitCode; }\n\tpublic get title(): string { return this._title; }\n\tpublic get hadFocusOnExit(): boolean { return this._hadFocusOnExit; }\n\tpublic get isTitleSetByProcess(): boolean { return !!this._messageTitleDisposable; }\n\tpublic get shellLaunchConfig(): IShellLaunchConfig { return this._shellLaunchConfig; }\n\tpublic get shellType(): TerminalShellType { return this._shellType; }\n\tpublic get commandTracker(): CommandTrackerAddon | undefined { return this._commandTrackerAddon; }\n\tpublic get navigationMode(): INavigationMode | undefined { return this._navigationModeAddon; }\n\tpublic get isDisconnected(): boolean { return this._processManager.isDisconnected; }\n\tpublic get icon(): Codicon | undefined { return this._getIcon(); }\n\n\tprivate readonly _onExit = new Emitter<number | undefined>();\n\tpublic get onExit(): Event<number | undefined> { return this._onExit.event; }\n\tprivate readonly _onDisposed = new Emitter<ITerminalInstance>();\n\tpublic get onDisposed(): Event<ITerminalInstance> { return this._onDisposed.event; }\n\tprivate readonly _onFocused = new Emitter<ITerminalInstance>();\n\tpublic get onFocused(): Event<ITerminalInstance> { return this._onFocused.event; }\n\tprivate readonly _onProcessIdReady = new Emitter<ITerminalInstance>();\n\tpublic get onProcessIdReady(): Event<ITerminalInstance> { return this._onProcessIdReady.event; }\n\tprivate readonly _onLinksReady = new Emitter<ITerminalInstance>();\n\tpublic get onLinksReady(): Event<ITerminalInstance> { return this._onLinksReady.event; }\n\tprivate readonly _onTitleChanged = new Emitter<ITerminalInstance>();\n\tpublic get onTitleChanged(): Event<ITerminalInstance> { return this._onTitleChanged.event; }\n\tprivate readonly _onData = new Emitter<string>();\n\tpublic get onData(): Event<string> { return this._onData.event; }\n\tprivate readonly _onBinary = new Emitter<string>();\n\tpublic get onBinary(): Event<string> { return this._onBinary.event; }\n\tprivate readonly _onLineData = new Emitter<string>();\n\tpublic get onLineData(): Event<string> { return this._onLineData.event; }\n\tprivate readonly _onRequestExtHostProcess = new Emitter<ITerminalInstance>();\n\tpublic get onRequestExtHostProcess(): Event<ITerminalInstance> { return this._onRequestExtHostProcess.event; }\n\tprivate readonly _onDimensionsChanged = new Emitter<void>();\n\tpublic get onDimensionsChanged(): Event<void> { return this._onDimensionsChanged.event; }\n\tprivate readonly _onMaximumDimensionsChanged = new Emitter<void>();\n\tpublic get onMaximumDimensionsChanged(): Event<void> { return this._onMaximumDimensionsChanged.event; }\n\tprivate readonly _onFocus = new Emitter<ITerminalInstance>();\n\tpublic get onFocus(): Event<ITerminalInstance> { return this._onFocus.event; }\n\n\tpublic constructor(\n\t\tprivate readonly _terminalFocusContextKey: IContextKey<boolean>,\n\t\tprivate readonly _terminalShellTypeContextKey: IContextKey<string>,\n\t\tprivate readonly _terminalAltBufferActiveContextKey: IContextKey<boolean>,\n\t\tprivate readonly _configHelper: TerminalConfigHelper,\n\t\tprivate _container: HTMLElement | undefined,\n\t\tprivate _shellLaunchConfig: IShellLaunchConfig,\n\t\t@ITerminalInstanceService private readonly _terminalInstanceService: ITerminalInstanceService,\n\t\t@ITerminalProfileResolverService private readonly _terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IPreferencesService private readonly _preferencesService: IPreferencesService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IWorkbenchEnvironmentService workbenchEnvironmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis._skipTerminalCommands = [];\n\t\tthis._isExiting = false;\n\t\tthis._hadFocusOnExit = false;\n\t\tthis._isVisible = false;\n\t\tthis._isDisposed = false;\n\t\tthis._instanceId = TerminalInstance._instanceIdCounter++;\n\n\t\tthis.hasHadInput = false;\n\t\tthis._titleReadyPromise = new Promise<string>(c => {\n\t\t\tthis._titleReadyComplete = c;\n\t\t});\n\n\t\tthis._terminalHasTextContextKey = KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.bindTo(this._contextKeyService);\n\t\tthis._terminalA11yTreeFocusContextKey = KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS.bindTo(this._contextKeyService);\n\t\tthis._terminalAltBufferActiveContextKey = KEYBINDING_CONTEXT_TERMINAL_ALT_BUFFER_ACTIVE.bindTo(this._contextKeyService);\n\t\tthis.disableLayout = false;\n\n\t\tthis._logService.trace(`terminalInstance#ctor (instanceId: ${this.instanceId})`, this._shellLaunchConfig);\n\n\t\t// Resolve just the icon ahead of time so that it shows up immediately in the tabs. This is\n\t\t// disabled in remote because this needs to be sync and the OS may differ on the remote\n\t\t// which would result in the wrong profile being selected and the wrong icon being\n\t\t// permanently attached to the terminal.\n\t\tif (!this.shellLaunchConfig.executable && !workbenchEnvironmentService.remoteAuthority) {\n\t\t\tthis._terminalProfileResolverService.resolveIcon(this._shellLaunchConfig, OS);\n\t\t}\n\n\t\tthis._initDimensions();\n\t\tthis._createProcessManager();\n\n\t\tthis._containerReadyBarrier = new AutoOpenBarrier(Constants.WaitForContainerThreshold);\n\t\tthis._xtermReadyPromise = this._createXterm();\n\t\tthis._xtermReadyPromise.then(async () => {\n\t\t\t// Wait for a period to allow a container to be ready\n\t\t\tawait this._containerReadyBarrier.wait();\n\n\t\t\t// Only attach xterm.js to the DOM if the terminal panel has been opened before.\n\t\t\tif (_container) {\n\t\t\t\tthis._attachToElement(_container);\n\t\t\t}\n\t\t\tthis._createProcess();\n\t\t});\n\n\t\tthis.addDisposable(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('terminal.integrated') || e.affectsConfiguration('editor.fastScrollSensitivity') || e.affectsConfiguration('editor.mouseWheelScrollSensitivity') || e.affectsConfiguration('editor.multiCursorModifier')) {\n\t\t\t\tthis.updateConfig();\n\t\t\t\t// HACK: Trigger another async layout to ensure xterm's CharMeasure is ready to use,\n\t\t\t\t// this hack can be removed when https://github.com/xtermjs/xterm.js/issues/702 is\n\t\t\t\t// supported.\n\t\t\t\tthis.setVisible(this._isVisible);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('terminal.integrated.unicodeVersion')) {\n\t\t\t\tthis._updateUnicodeVersion();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\t\tthis.updateAccessibilitySupport();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('terminal.integrated.gpuAcceleration')) {\n\t\t\t\tthis._storageService.remove(SUGGESTED_RENDERER_TYPE, StorageScope.GLOBAL);\n\t\t\t}\n\t\t}));\n\n\t\t// Clear out initial data events after 10 seconds, hopefully extension hosts are up and\n\t\t// running at that point.\n\t\tlet initialDataEventsTimeout: number | undefined = window.setTimeout(() => {\n\t\t\tinitialDataEventsTimeout = undefined;\n\t\t\tthis._initialDataEvents = undefined;\n\t\t}, 10000);\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tif (initialDataEventsTimeout) {\n\t\t\t\t\twindow.clearTimeout(initialDataEventsTimeout);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getIcon(): Codicon | undefined {\n\t\tif (this.shellLaunchConfig.icon) {\n\t\t\treturn iconRegistry.get(this.shellLaunchConfig.icon);\n\t\t} else if (this.shellLaunchConfig?.attachPersistentProcess?.icon) {\n\t\t\treturn iconRegistry.get(this.shellLaunchConfig.attachPersistentProcess.icon);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic addDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n\n\tprivate _initDimensions(): void {\n\t\t// The terminal panel needs to have been created\n\t\tif (!this._container) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyle = window.getComputedStyle(this._container.parentElement!);\n\t\tconst width = parseInt(computedStyle.getPropertyValue('width').replace('px', ''), 10);\n\t\tconst height = parseInt(computedStyle.getPropertyValue('height').replace('px', ''), 10);\n\t\tthis._evaluateColsAndRows(width, height);\n\t}\n\n\t/**\n\t * Evaluates and sets the cols and rows of the terminal if possible.\n\t * @param width The width of the container.\n\t * @param height The height of the container.\n\t * @return The terminal's width if it requires a layout.\n\t */\n\tprivate _evaluateColsAndRows(width: number, height: number): number | null {\n\t\t// Ignore if dimensions are undefined or 0\n\t\tif (!width || !height) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst dimension = this._getDimension(width, height);\n\t\tif (!dimension) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst font = this._configHelper.getFont(this._xtermCore);\n\t\tif (!font.charWidth || !font.charHeight) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\t// Because xterm.js converts from CSS pixels to actual pixels through\n\t\t// the use of canvas, window.devicePixelRatio needs to be used here in\n\t\t// order to be precise. font.charWidth/charHeight alone as insufficient\n\t\t// when window.devicePixelRatio changes.\n\t\tconst scaledWidthAvailable = dimension.width * window.devicePixelRatio;\n\n\t\tconst scaledCharWidth = font.charWidth * window.devicePixelRatio + font.letterSpacing;\n\t\tconst newCols = Math.max(Math.floor(scaledWidthAvailable / scaledCharWidth), 1);\n\n\t\tconst scaledHeightAvailable = dimension.height * window.devicePixelRatio;\n\t\tconst scaledCharHeight = Math.ceil(font.charHeight * window.devicePixelRatio);\n\t\tconst scaledLineHeight = Math.floor(scaledCharHeight * font.lineHeight);\n\t\tconst newRows = Math.max(Math.floor(scaledHeightAvailable / scaledLineHeight), 1);\n\n\t\tif (this._cols !== newCols || this._rows !== newRows) {\n\t\t\tthis._cols = newCols;\n\t\t\tthis._rows = newRows;\n\t\t\tthis._fireMaximumDimensionsChanged();\n\t\t}\n\n\t\treturn dimension.width;\n\t}\n\n\tprivate _setLastKnownColsAndRows(): void {\n\t\tif (TerminalInstance._lastKnownGridDimensions) {\n\t\t\tthis._cols = TerminalInstance._lastKnownGridDimensions.cols;\n\t\t\tthis._rows = TerminalInstance._lastKnownGridDimensions.rows;\n\t\t}\n\t}\n\n\t@debounce(50)\n\tprivate _fireMaximumDimensionsChanged(): void {\n\t\tthis._onMaximumDimensionsChanged.fire();\n\t}\n\n\tprivate _getDimension(width: number, height: number): ICanvasDimensions | undefined {\n\t\t// The font needs to have been initialized\n\t\tconst font = this._configHelper.getFont(this._xtermCore);\n\t\tif (!font || !font.charWidth || !font.charHeight) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// The panel is minimized\n\t\tif (!this._isVisible) {\n\t\t\treturn TerminalInstance._lastKnownCanvasDimensions;\n\t\t}\n\n\t\tif (!this._wrapperElement) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst wrapperElementStyle = getComputedStyle(this._wrapperElement);\n\t\tconst marginLeft = parseInt(wrapperElementStyle.marginLeft!.split('px')[0], 10);\n\t\tconst marginRight = parseInt(wrapperElementStyle.marginRight!.split('px')[0], 10);\n\t\tconst bottom = parseInt(wrapperElementStyle.bottom!.split('px')[0], 10);\n\n\t\tconst innerWidth = width - marginLeft - marginRight;\n\t\tconst innerHeight = height - bottom - 1;\n\n\t\tTerminalInstance._lastKnownCanvasDimensions = new dom.Dimension(innerWidth, innerHeight);\n\t\treturn TerminalInstance._lastKnownCanvasDimensions;\n\t}\n\n\tpublic get persistentProcessId(): number | undefined { return this._processManager.persistentProcessId; }\n\tpublic get shouldPersist(): boolean { return this._processManager.shouldPersist; }\n\n\tprivate async _getXtermConstructor(): Promise<typeof XTermTerminal> {\n\t\tif (xtermConstructor) {\n\t\t\treturn xtermConstructor;\n\t\t}\n\t\txtermConstructor = new Promise<typeof XTermTerminal>(async (resolve) => {\n\t\t\tconst Terminal = await this._terminalInstanceService.getXtermConstructor();\n\t\t\t// Localize strings\n\t\t\tTerminal.strings.promptLabel = nls.localize('terminal.integrated.a11yPromptLabel', 'Terminal input');\n\t\t\tTerminal.strings.tooMuchOutput = nls.localize('terminal.integrated.a11yTooMuchOutput', 'Too much output to announce, navigate to rows manually to read');\n\t\t\tresolve(Terminal);\n\t\t});\n\t\treturn xtermConstructor;\n\t}\n\n\t/**\n\t * Create xterm.js instance and attach data listeners.\n\t */\n\tprotected async _createXterm(): Promise<XTermTerminal> {\n\t\tconst Terminal = await this._getXtermConstructor();\n\t\tconst font = this._configHelper.getFont(undefined, true);\n\t\tconst config = this._configHelper.config;\n\t\tconst editorOptions = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tlet xtermRendererType: RendererType;\n\t\tif (config.gpuAcceleration === 'auto') {\n\t\t\t// Set the builtin renderer to canvas, even when webgl is being used since it's an addon\n\t\t\tconst suggestedRendererType = this._storageService.get(SUGGESTED_RENDERER_TYPE, StorageScope.GLOBAL);\n\t\t\txtermRendererType = suggestedRendererType === 'dom' ? 'dom' : 'canvas';\n\t\t} else {\n\t\t\txtermRendererType = config.gpuAcceleration === 'on' ? 'canvas' : 'dom';\n\t\t}\n\n\t\tconst xterm = new Terminal({\n\t\t\taltClickMovesCursor: config.altClickMovesCursor && editorOptions.multiCursorModifier === 'alt',\n\t\t\tscrollback: config.scrollback,\n\t\t\ttheme: this._getXtermTheme(),\n\t\t\tdrawBoldTextInBrightColors: config.drawBoldTextInBrightColors,\n\t\t\tfontFamily: font.fontFamily,\n\t\t\tfontWeight: config.fontWeight,\n\t\t\tfontWeightBold: config.fontWeightBold,\n\t\t\tfontSize: font.fontSize,\n\t\t\tletterSpacing: font.letterSpacing,\n\t\t\tlineHeight: font.lineHeight,\n\t\t\tminimumContrastRatio: config.minimumContrastRatio,\n\t\t\tbellStyle: config.enableBell ? 'sound' : 'none',\n\t\t\tmacOptionIsMeta: config.macOptionIsMeta,\n\t\t\tmacOptionClickForcesSelection: config.macOptionClickForcesSelection,\n\t\t\trightClickSelectsWord: config.rightClickBehavior === 'selectWord',\n\t\t\tfastScrollModifier: 'alt',\n\t\t\tfastScrollSensitivity: editorOptions.fastScrollSensitivity,\n\t\t\tscrollSensitivity: editorOptions.mouseWheelScrollSensitivity,\n\t\t\trendererType: xtermRendererType,\n\t\t\twordSeparator: config.wordSeparators\n\t\t});\n\t\tthis._xterm = xterm;\n\t\tthis._xtermCore = (xterm as any)._core as XTermCore;\n\t\tthis._updateUnicodeVersion();\n\t\tthis.updateAccessibilitySupport();\n\t\tthis._terminalInstanceService.getXtermSearchConstructor().then(Addon => {\n\t\t\tthis._xtermSearch = new Addon();\n\t\t\txterm.loadAddon(this._xtermSearch);\n\t\t});\n\t\tif (this._shellLaunchConfig.initialText) {\n\t\t\tthis._xterm.writeln(this._shellLaunchConfig.initialText);\n\t\t}\n\t\t// Delay the creation of the bell listener to avoid showing the bell when the terminal\n\t\t// starts up or reconnects\n\t\tsetTimeout(() => {\n\t\t\tthis._xterm?.onBell(() => {\n\t\t\t\tif (this._configHelper.config.enableBell) {\n\t\t\t\t\tthis.statusList.add({\n\t\t\t\t\t\tid: TerminalStatus.Bell,\n\t\t\t\t\t\tseverity: Severity.Warning,\n\t\t\t\t\t\ticon: Codicon.bell,\n\t\t\t\t\t\ttooltip: nls.localize('bellStatus', \"Bell\")\n\t\t\t\t\t}, this._configHelper.config.bellDuration);\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1000);\n\t\tthis._xterm.onLineFeed(() => this._onLineFeed());\n\t\tthis._xterm.onKey(e => this._onKey(e.key, e.domEvent));\n\t\tthis._xterm.onSelectionChange(async () => this._onSelectionChange());\n\t\tthis._xterm.buffer.onBufferChange(() => this._refreshAltBufferContextKey());\n\n\t\tthis._processManager.onProcessData(e => this._onProcessData(e));\n\t\tthis._xterm.onData(data => this._processManager.write(data));\n\t\tthis._xterm.onBinary(data => this._processManager.processBinary(data));\n\t\tthis.processReady.then(async () => {\n\t\t\tif (this._linkManager) {\n\t\t\t\tthis._linkManager.processCwd = await this._processManager.getInitialCwd();\n\t\t\t}\n\t\t});\n\t\t// Init winpty compat and link handler after process creation as they rely on the\n\t\t// underlying process OS\n\t\tthis._processManager.onProcessReady(() => {\n\t\t\tif (this._processManager.os === OperatingSystem.Windows) {\n\t\t\t\txterm.setOption('windowsMode', true);\n\t\t\t\t// Force line data to be sent when the cursor is moved, the main purpose for\n\t\t\t\t// this is because ConPTY will often not do a line feed but instead move the\n\t\t\t\t// cursor, in which case we still want to send the current line's data to tasks.\n\t\t\t\txterm.parser.registerCsiHandler({ final: 'H' }, () => {\n\t\t\t\t\tthis._onCursorMove();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._linkManager = this._instantiationService.createInstance(TerminalLinkManager, xterm, this._processManager!);\n\t\t\tthis._areLinksReady = true;\n\t\t\tthis._onLinksReady.fire(this);\n\t\t});\n\n\t\tthis._commandTrackerAddon = new CommandTrackerAddon();\n\t\tthis._xterm.loadAddon(this._commandTrackerAddon);\n\t\tthis._register(this._themeService.onDidColorThemeChange(theme => this._updateTheme(xterm, theme)));\n\t\tthis._register(this._viewDescriptorService.onDidChangeLocation(({ views }) => {\n\t\t\tif (views.some(v => v.id === TERMINAL_VIEW_ID)) {\n\t\t\t\tthis._updateTheme(xterm);\n\t\t\t}\n\t\t}));\n\n\t\tthis._xtermTypeAhead = this._register(this._instantiationService.createInstance(TypeAheadAddon, this._processManager, this._configHelper));\n\t\tthis._xterm.loadAddon(this._xtermTypeAhead);\n\n\t\treturn xterm;\n\t}\n\n\tpublic reattachToElement(container: HTMLElement): void {\n\t\tif (!this._wrapperElement) {\n\t\t\tthrow new Error('The terminal instance has not been attached to a container yet');\n\t\t}\n\n\t\tthis._wrapperElement.parentNode?.removeChild(this._wrapperElement);\n\t\tthis._container = container;\n\t\tthis._container.appendChild(this._wrapperElement);\n\t}\n\n\tpublic attachToElement(container: HTMLElement): void {\n\t\t// The container did not change, do nothing\n\t\tif (this._container === container) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Attach has not occured yet\n\t\tif (!this._wrapperElement) {\n\t\t\tthis._attachToElement(container);\n\t\t\treturn;\n\t\t}\n\n\t\t// The container changed, reattach\n\t\tthis._container?.removeChild(this._wrapperElement);\n\t\tthis._container = container;\n\t\tthis._container.appendChild(this._wrapperElement);\n\t}\n\n\tpublic async _attachToElement(container: HTMLElement): Promise<void> {\n\t\tconst xterm = await this._xtermReadyPromise;\n\n\t\tif (this._wrapperElement) {\n\t\t\tthrow new Error('The terminal instance has already been attached to a container');\n\t\t}\n\n\t\tthis._container = container;\n\t\tthis._wrapperElement = document.createElement('div');\n\t\tthis._wrapperElement.classList.add('terminal-wrapper');\n\t\tthis._xtermElement = document.createElement('div');\n\n\t\t// Attach the xterm object to the DOM, exposing it to the smoke tests\n\t\tthis._wrapperElement.xterm = this._xterm;\n\n\t\tthis._wrapperElement.appendChild(this._xtermElement);\n\t\tthis._container.appendChild(this._wrapperElement);\n\t\txterm.open(this._xtermElement);\n\n\t\tconst suggestedRendererType = this._storageService.get(SUGGESTED_RENDERER_TYPE, StorageScope.GLOBAL);\n\t\tif (this._configHelper.config.gpuAcceleration === 'auto' && (suggestedRendererType === 'auto' || suggestedRendererType === undefined)\n\t\t\t|| this._configHelper.config.gpuAcceleration === 'on') {\n\t\t\tthis._enableWebglRenderer();\n\t\t}\n\n\t\tif (!xterm.element || !xterm.textarea) {\n\t\t\tthrow new Error('xterm elements not set after open');\n\t\t}\n\n\t\tthis._setAriaLabel(xterm, this._instanceId, this._title);\n\n\t\txterm.textarea.addEventListener('focus', () => this._onFocus.fire(this));\n\t\txterm.attachCustomKeyEventHandler((event: KeyboardEvent): boolean => {\n\t\t\t// Disable all input if the terminal is exiting\n\t\t\tif (this._isExiting) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst standardKeyboardEvent = new StandardKeyboardEvent(event);\n\t\t\tconst resolveResult = this._keybindingService.softDispatch(standardKeyboardEvent, standardKeyboardEvent.target);\n\n\t\t\t// Respect chords if the allowChords setting is set and it's not Escape. Escape is\n\t\t\t// handled specially for Zen Mode's Escape, Escape chord, plus it's important in\n\t\t\t// terminals generally\n\t\t\tconst isValidChord = resolveResult?.enterChord && this._configHelper.config.allowChords && event.key !== 'Escape';\n\t\t\tif (this._keybindingService.inChordMode || isValidChord) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst SHOW_TERMINAL_CONFIG_PROMPT = 'terminal.integrated.showTerminalConfigPrompt';\n\t\t\tconst EXCLUDED_KEYS = ['RightArrow', 'LeftArrow', 'UpArrow', 'DownArrow', 'Space', 'Meta', 'Control', 'Shift', 'Alt', '', 'Delete', 'Backspace', 'Tab'];\n\n\t\t\t// only keep track of input if prompt hasn't already been shown\n\t\t\tif (this._storageService.getBoolean(SHOW_TERMINAL_CONFIG_PROMPT, StorageScope.GLOBAL, true) &&\n\t\t\t\t!EXCLUDED_KEYS.includes(event.key) &&\n\t\t\t\t!event.ctrlKey &&\n\t\t\t\t!event.shiftKey &&\n\t\t\t\t!event.altKey) {\n\t\t\t\tthis.hasHadInput = true;\n\t\t\t}\n\n\t\t\t// for keyboard events that resolve to commands described\n\t\t\t// within commandsToSkipShell, either alert or skip processing by xterm.js\n\t\t\tif (resolveResult && resolveResult.commandId && this._skipTerminalCommands.some(k => k === resolveResult.commandId) && !this._configHelper.config.sendKeybindingsToShell) {\n\t\t\t\t// don't alert when terminal is opened or closed\n\t\t\t\tif (this._storageService.getBoolean(SHOW_TERMINAL_CONFIG_PROMPT, StorageScope.GLOBAL, true) &&\n\t\t\t\t\tthis.hasHadInput &&\n\t\t\t\t\t!TERMINAL_CREATION_COMMANDS.includes(resolveResult.commandId)) {\n\t\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tnls.localize('keybindingHandling', \"Some keybindings don't go to the terminal by default and are handled by {0} instead.\", this._productService.nameLong),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize('configureTerminalSettings', \"Configure Terminal Settings\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tthis._preferencesService.openSettings(false, '@id:terminal.integrated.commandsToSkipShell,terminal.integrated.sendKeybindingsToShell,terminal.integrated.allowChords');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} as IPromptChoice\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t\tthis._storageService.store(SHOW_TERMINAL_CONFIG_PROMPT, false, StorageScope.GLOBAL, StorageTarget.USER);\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Skip processing by xterm.js of keyboard events that match menu bar mnemonics\n\t\t\tif (this._configHelper.config.allowMnemonics && !isMacintosh && event.altKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If tab focus mode is on, tab is not passed to the terminal\n\t\t\tif (TabFocus.getTabFocusMode() && event.keyCode === 9) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Always have alt+F4 skip the terminal on Windows and allow it to be handled by the\n\t\t\t// system\n\t\t\tif (isWindows && event.altKey && event.key === 'F4' && !event.ctrlKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Fallback to force ctrl+v to paste on browsers that do not support\n\t\t\t// navigator.clipboard.readText\n\t\t\tif (!BrowserFeatures.clipboard.readText && event.key === 'v' && event.ctrlKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t\tthis._register(dom.addDisposableListener(xterm.element, 'mousedown', () => {\n\t\t\t// We need to listen to the mouseup event on the document since the user may release\n\t\t\t// the mouse button anywhere outside of _xterm.element.\n\t\t\tconst listener = dom.addDisposableListener(document, 'mouseup', () => {\n\t\t\t\t// Delay with a setTimeout to allow the mouseup to propagate through the DOM\n\t\t\t\t// before evaluating the new selection state.\n\t\t\t\tsetTimeout(() => this._refreshSelectionContextKey(), 0);\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}));\n\n\t\t// xterm.js currently drops selection on keyup as we need to handle this case.\n\t\tthis._register(dom.addDisposableListener(xterm.element, 'keyup', () => {\n\t\t\t// Wait until keyup has propagated through the DOM before evaluating\n\t\t\t// the new selection state.\n\t\t\tsetTimeout(() => this._refreshSelectionContextKey(), 0);\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(xterm.textarea, 'focus', () => {\n\t\t\tthis._terminalFocusContextKey.set(true);\n\t\t\tif (this.shellType) {\n\t\t\t\tthis._terminalShellTypeContextKey.set(this.shellType.toString());\n\t\t\t} else {\n\t\t\t\tthis._terminalShellTypeContextKey.reset();\n\t\t\t}\n\t\t\tthis._onFocused.fire(this);\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(xterm.textarea, 'blur', () => {\n\t\t\tthis._terminalFocusContextKey.reset();\n\t\t\tthis._refreshSelectionContextKey();\n\t\t}));\n\t\tthis._widgetManager.attachToElement(xterm.element);\n\t\tthis._processManager.onProcessReady(() => this._linkManager?.setWidgetManager(this._widgetManager));\n\n\t\tconst computedStyle = window.getComputedStyle(this._container);\n\t\tconst width = parseInt(computedStyle.getPropertyValue('width').replace('px', ''), 10);\n\t\tconst height = parseInt(computedStyle.getPropertyValue('height').replace('px', ''), 10);\n\t\tthis.layout(new dom.Dimension(width, height));\n\t\tthis.setVisible(this._isVisible);\n\t\tthis.updateConfig();\n\n\t\t// If IShellLaunchConfig.waitOnExit was true and the process finished before the terminal\n\t\t// panel was initialized.\n\t\tif (xterm.getOption('disableStdin')) {\n\t\t\tthis._attachPressAnyKeyToCloseListener(xterm);\n\t\t}\n\t}\n\n\tprivate async _measureRenderTime(): Promise<void> {\n\t\tawait this._xtermReadyPromise;\n\t\tconst frameTimes: number[] = [];\n\t\tconst textRenderLayer = this._xtermCore!._renderService._renderer._renderLayers[0];\n\t\tconst originalOnGridChanged = textRenderLayer.onGridChanged;\n\t\tconst evaluateCanvasRenderer = () => {\n\t\t\t// Discard first frame time as it's normal to take longer\n\t\t\tframeTimes.shift();\n\n\t\t\tconst medianTime = frameTimes.sort((a, b) => a - b)[Math.floor(frameTimes.length / 2)];\n\t\t\tif (medianTime > SLOW_CANVAS_RENDER_THRESHOLD) {\n\t\t\t\tif (this._configHelper.config.gpuAcceleration === 'auto') {\n\t\t\t\t\tthis._storageService.store(SUGGESTED_RENDERER_TYPE, 'dom', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t\tthis.updateConfig();\n\t\t\t\t} else {\n\t\t\t\t\tconst promptChoices: IPromptChoice[] = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('yes', \"Yes\"),\n\t\t\t\t\t\t\trun: () => this._configurationService.updateValue('terminal.integrated.gpuAcceleration', 'off', ConfigurationTarget.USER)\n\t\t\t\t\t\t} as IPromptChoice,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('no', \"No\"),\n\t\t\t\t\t\t\trun: () => { }\n\t\t\t\t\t\t} as IPromptChoice,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('dontShowAgain', \"Don't Show Again\"),\n\t\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t\t\trun: () => this._storageService.store(NEVER_MEASURE_RENDER_TIME_STORAGE_KEY, true, StorageScope.GLOBAL, StorageTarget.MACHINE)\n\t\t\t\t\t\t} as IPromptChoice\n\t\t\t\t\t];\n\t\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\t\tSeverity.Warning,\n\t\t\t\t\t\tnls.localize('terminal.slowRendering', 'Terminal GPU acceleration appears to be slow on your computer. Would you like to switch to disable it which may improve performance? [Read more about terminal settings](https://code.visualstudio.com/docs/editor/integrated-terminal#_changing-how-the-terminal-is-rendered).'),\n\t\t\t\t\t\tpromptChoices\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttextRenderLayer.onGridChanged = (terminal: XTermTerminal, firstRow: number, lastRow: number) => {\n\t\t\tconst startTime = performance.now();\n\t\t\toriginalOnGridChanged.call(textRenderLayer, terminal, firstRow, lastRow);\n\t\t\tframeTimes.push(performance.now() - startTime);\n\t\t\tif (frameTimes.length === NUMBER_OF_FRAMES_TO_MEASURE) {\n\t\t\t\tevaluateCanvasRenderer();\n\t\t\t\t// Restore original function\n\t\t\t\ttextRenderLayer.onGridChanged = originalOnGridChanged;\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic hasSelection(): boolean {\n\t\treturn this._xterm ? this._xterm.hasSelection() : false;\n\t}\n\n\tpublic async copySelection(): Promise<void> {\n\t\tconst xterm = await this._xtermReadyPromise;\n\t\tif (this.hasSelection()) {\n\t\t\tawait this._clipboardService.writeText(xterm.getSelection());\n\t\t} else {\n\t\t\tthis._notificationService.warn(nls.localize('terminal.integrated.copySelection.noSelection', 'The terminal has no selection to copy'));\n\t\t}\n\t}\n\n\tpublic get selection(): string | undefined {\n\t\treturn this._xterm && this.hasSelection() ? this._xterm.getSelection() : undefined;\n\t}\n\n\tpublic clearSelection(): void {\n\t\tthis._xterm?.clearSelection();\n\t}\n\n\tpublic selectAll(): void {\n\t\t// Focus here to ensure the terminal context key is set\n\t\tthis._xterm?.focus();\n\t\tthis._xterm?.selectAll();\n\t}\n\n\tpublic findNext(term: string, searchOptions: ISearchOptions): boolean {\n\t\tif (!this._xtermSearch) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._xtermSearch.findNext(term, searchOptions);\n\t}\n\n\tpublic findPrevious(term: string, searchOptions: ISearchOptions): boolean {\n\t\tif (!this._xtermSearch) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._xtermSearch.findPrevious(term, searchOptions);\n\t}\n\n\tpublic notifyFindWidgetFocusChanged(isFocused: boolean): void {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tconst terminalFocused = !isFocused && (document.activeElement === this._xterm.textarea || document.activeElement === this._xterm.element);\n\t\tthis._terminalFocusContextKey.set(terminalFocused);\n\t}\n\n\tprivate _refreshAltBufferContextKey() {\n\t\tthis._terminalAltBufferActiveContextKey.set(!!(this._xterm && this._xterm.buffer.active === this._xterm.buffer.alternate));\n\t}\n\n\tpublic override dispose(immediate?: boolean): void {\n\t\tthis._logService.trace(`terminalInstance#dispose (instanceId: ${this.instanceId})`);\n\n\t\tdispose(this._linkManager);\n\t\tthis._linkManager = undefined;\n\t\tdispose(this._commandTrackerAddon);\n\t\tthis._commandTrackerAddon = undefined;\n\t\tdispose(this._widgetManager);\n\n\t\tif (this._xterm && this._xterm.element) {\n\t\t\tthis._hadFocusOnExit = this._xterm.element.classList.contains('focus');\n\t\t}\n\t\tif (this._wrapperElement) {\n\t\t\tif (this._wrapperElement.xterm) {\n\t\t\t\tthis._wrapperElement.xterm = undefined;\n\t\t\t}\n\t\t\tif (this._wrapperElement.parentElement && this._container) {\n\t\t\t\tthis._container.removeChild(this._wrapperElement);\n\t\t\t}\n\t\t}\n\t\tif (this._xterm) {\n\t\t\tconst buffer = this._xterm.buffer;\n\t\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY);\n\t\t\tthis._xterm.dispose();\n\t\t}\n\n\t\tif (this._pressAnyKeyToCloseListener) {\n\t\t\tthis._pressAnyKeyToCloseListener.dispose();\n\t\t\tthis._pressAnyKeyToCloseListener = undefined;\n\t\t}\n\n\t\tthis._processManager.dispose(immediate);\n\t\t// Process manager dispose/shutdown doesn't fire process exit, trigger with undefined if it\n\t\t// hasn't happened yet\n\t\tthis._onProcessExit(undefined);\n\n\t\tif (!this._isDisposed) {\n\t\t\tthis._isDisposed = true;\n\t\t\tthis._onDisposed.fire(this);\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tpublic detachFromProcess(): void {\n\t\tthis._processManager.detachFromProcess();\n\t}\n\n\tpublic forceRedraw(): void {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tthis._webglAddon?.clearTextureAtlas();\n\t\t// TODO: Do canvas renderer too?\n\t}\n\n\tpublic focus(force?: boolean): void {\n\t\tthis._refreshAltBufferContextKey();\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tconst selection = window.getSelection();\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = selection.toString();\n\t\tif (!text || force) {\n\t\t\tthis._xterm.focus();\n\t\t}\n\t}\n\n\tpublic async focusWhenReady(force?: boolean): Promise<void> {\n\t\tawait this._xtermReadyPromise;\n\t\tthis.focus(force);\n\t}\n\n\tpublic async paste(): Promise<void> {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.focus();\n\t\tthis._xterm.paste(await this._clipboardService.readText());\n\t}\n\n\tpublic async pasteSelection(): Promise<void> {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.focus();\n\t\tthis._xterm.paste(await this._clipboardService.readText('selection'));\n\t}\n\n\tpublic async sendText(text: string, addNewLine: boolean): Promise<void> {\n\t\t// Normalize line endings to 'enter' press.\n\t\ttext = text.replace(TerminalInstance.EOL_REGEX, '\\r');\n\t\tif (addNewLine && text.substr(text.length - 1) !== '\\r') {\n\t\t\ttext += '\\r';\n\t\t}\n\n\t\t// Send it to the process\n\t\treturn this._processManager.write(text);\n\t}\n\n\tpublic setVisible(visible: boolean): void {\n\t\tthis._isVisible = visible;\n\t\tif (this._wrapperElement) {\n\t\t\tthis._wrapperElement.classList.toggle('active', visible);\n\t\t}\n\t\tif (visible && this._xterm && this._xtermCore) {\n\t\t\t// Trigger a manual scroll event which will sync the viewport and scroll bar. This is\n\t\t\t// necessary if the number of rows in the terminal has decreased while it was in the\n\t\t\t// background since scrollTop changes take no effect but the terminal's position does\n\t\t\t// change since the number of visible rows decreases.\n\t\t\t// This can likely be removed after https://github.com/xtermjs/xterm.js/issues/291 is\n\t\t\t// fixed upstream.\n\t\t\tthis._xtermCore._onScroll.fire(this._xterm.buffer.active.viewportY);\n\t\t\tif (this._container && this._container.parentElement) {\n\t\t\t\t// Force a layout when the instance becomes invisible. This is particularly important\n\t\t\t\t// for ensuring that terminals that are created in the background by an extension will\n\t\t\t\t// correctly get correct character measurements in order to render to the screen (see\n\t\t\t\t// #34554).\n\t\t\t\tconst computedStyle = window.getComputedStyle(this._container.parentElement);\n\t\t\t\tconst width = parseInt(computedStyle.getPropertyValue('width').replace('px', ''), 10);\n\t\t\t\tconst height = parseInt(computedStyle.getPropertyValue('height').replace('px', ''), 10);\n\t\t\t\tthis.layout(new dom.Dimension(width, height));\n\t\t\t\t// HACK: Trigger another async layout to ensure xterm's CharMeasure is ready to use,\n\t\t\t\t// this hack can be removed when https://github.com/xtermjs/xterm.js/issues/702 is\n\t\t\t\t// supported.\n\t\t\t\tthis._timeoutDimension = new dom.Dimension(width, height);\n\t\t\t\tsetTimeout(() => this.layout(this._timeoutDimension!), 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic scrollDownLine(): void {\n\t\tthis._xterm?.scrollLines(1);\n\t}\n\n\tpublic scrollDownPage(): void {\n\t\tthis._xterm?.scrollPages(1);\n\t}\n\n\tpublic scrollToBottom(): void {\n\t\tthis._xterm?.scrollToBottom();\n\t}\n\n\tpublic scrollUpLine(): void {\n\t\tthis._xterm?.scrollLines(-1);\n\t}\n\n\tpublic scrollUpPage(): void {\n\t\tthis._xterm?.scrollPages(-1);\n\t}\n\n\tpublic scrollToTop(): void {\n\t\tthis._xterm?.scrollToTop();\n\t}\n\n\tpublic clear(): void {\n\t\tthis._xterm?.clear();\n\t}\n\n\tprivate _refreshSelectionContextKey() {\n\t\tconst isActive = !!this._viewsService.getActiveViewWithId(TERMINAL_VIEW_ID);\n\t\tthis._terminalHasTextContextKey.set(isActive && this.hasSelection());\n\t}\n\n\tprotected _createProcessManager(): void {\n\t\tthis._processManager = this._instantiationService.createInstance(TerminalProcessManager, this._instanceId, this._configHelper);\n\t\tthis._processManager.onProcessReady(() => {\n\t\t\tthis._onProcessIdReady.fire(this);\n\t\t\t// Re-fire the title change event to ensure a slow resolved icon gets applied\n\t\t\tthis._onTitleChanged.fire(this);\n\t\t});\n\t\tthis._processManager.onProcessExit(exitCode => this._onProcessExit(exitCode));\n\t\tthis._processManager.onProcessData(ev => {\n\t\t\tthis._initialDataEvents?.push(ev.data);\n\t\t\tthis._onData.fire(ev.data);\n\t\t});\n\t\tthis._processManager.onProcessOverrideDimensions(e => this.setDimensions(e, true));\n\t\tthis._processManager.onProcessResolvedShellLaunchConfig(e => this._setResolvedShellLaunchConfig(e));\n\t\tthis._processManager.onEnvironmentVariableInfoChanged(e => this._onEnvironmentVariableInfoChanged(e));\n\t\tthis._processManager.onProcessShellTypeChanged(type => this.setShellType(type));\n\t\tif (this._shellLaunchConfig.name) {\n\t\t\tthis.setTitle(this._shellLaunchConfig.name, TitleEventSource.Api);\n\t\t} else {\n\t\t\t// Only listen for process title changes when a name is not provided\n\t\t\tif (this._configHelper.config.experimentalUseTitleEvent) {\n\t\t\t\t// Set the title to the first event if the sequence hasn't set it yet\n\t\t\t\tEvent.once(this._processManager.onProcessTitle)(e => {\n\t\t\t\t\tif (!this._title) {\n\t\t\t\t\t\tthis.setTitle(this._title, TitleEventSource.Sequence);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// Listen to xterm.js' sequence title change event, trigger this async to ensure\n\t\t\t\t// xterm is constructed since this is called from TerminalInstance's ctor\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._xtermReadyPromise.then(xterm => {\n\t\t\t\t\t\tthis._messageTitleDisposable = xterm.onTitleChange(e => this._onTitleChange(e));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setTitle(this._shellLaunchConfig.executable, TitleEventSource.Process);\n\t\t\t\tthis._messageTitleDisposable = this._processManager.onProcessTitle(title => this.setTitle(title ? title : '', TitleEventSource.Process));\n\t\t\t}\n\t\t}\n\n\t\tthis._processManager.onPtyDisconnect(() => {\n\t\t\tthis._safeSetOption('disableStdin', true);\n\t\t\tthis.statusList.add({\n\t\t\t\tid: TerminalStatus.Disconnected,\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\ticon: Codicon.debugDisconnect,\n\t\t\t\ttooltip: nls.localize('disconnectStatus', \"Lost connection to process\")\n\t\t\t});\n\t\t});\n\t\tthis._processManager.onPtyReconnect(() => {\n\t\t\tthis._safeSetOption('disableStdin', false);\n\t\t\tthis.statusList.remove(TerminalStatus.Disconnected);\n\t\t});\n\t}\n\n\tprivate _createProcess(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._processManager.createProcess(this._shellLaunchConfig, this._cols, this._rows, this._accessibilityService.isScreenReaderOptimized()).then(error => {\n\t\t\tif (error) {\n\t\t\t\tthis._onProcessExit(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onProcessData(ev: IProcessDataEvent): void {\n\t\tconst messageId = ++this._latestXtermWriteData;\n\t\tif (ev.trackCommit) {\n\t\t\tev.writePromise = new Promise<void>(r => {\n\t\t\t\tthis._xterm?.write(ev.data, () => {\n\t\t\t\t\tthis._latestXtermParseData = messageId;\n\t\t\t\t\tthis._processManager.acknowledgeDataEvent(ev.data.length);\n\t\t\t\t\tr();\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis._xterm?.write(ev.data, () => {\n\t\t\t\tthis._latestXtermParseData = messageId;\n\t\t\t\tthis._processManager.acknowledgeDataEvent(ev.data.length);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Called when either a process tied to a terminal has exited or when a terminal renderer\n\t * simulates a process exiting (e.g. custom execution task).\n\t * @param exitCode The exit code of the process, this is undefined when the terminal was exited\n\t * through user action.\n\t */\n\tprivate async _onProcessExit(exitCodeOrError?: number | ITerminalLaunchError): Promise<void> {\n\t\t// Prevent dispose functions being triggered multiple times\n\t\tif (this._isExiting) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isExiting = true;\n\n\t\tawait this._flushXtermData();\n\t\tthis._logService.debug(`Terminal process exit (instanceId: ${this.instanceId}) with code ${this._exitCode}`);\n\n\t\tlet exitCodeMessage: string | undefined;\n\n\t\t// Create exit code message\n\t\tswitch (typeof exitCodeOrError) {\n\t\t\tcase 'number':\n\t\t\t\t// Only show the error if the exit code is non-zero\n\t\t\t\tthis._exitCode = exitCodeOrError;\n\t\t\t\tif (this._exitCode === 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet commandLine: string | undefined = undefined;\n\t\t\t\tif (this._shellLaunchConfig.executable) {\n\t\t\t\t\tcommandLine = this._shellLaunchConfig.executable;\n\t\t\t\t\tif (typeof this._shellLaunchConfig.args === 'string') {\n\t\t\t\t\t\tcommandLine += ` ${this._shellLaunchConfig.args}`;\n\t\t\t\t\t} else if (this._shellLaunchConfig.args && this._shellLaunchConfig.args.length) {\n\t\t\t\t\t\tcommandLine += this._shellLaunchConfig.args.map(a => ` '${a}'`).join();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._processManager.processState === ProcessState.KILLED_DURING_LAUNCH) {\n\t\t\t\t\tif (commandLine) {\n\t\t\t\t\t\texitCodeMessage = nls.localize('launchFailed.exitCodeAndCommandLine', \"The terminal process \\\"{0}\\\" failed to launch (exit code: {1}).\", commandLine, this._exitCode);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\texitCodeMessage = nls.localize('launchFailed.exitCodeOnly', \"The terminal process failed to launch (exit code: {0}).\", this._exitCode);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (commandLine) {\n\t\t\t\t\texitCodeMessage = nls.localize('terminated.exitCodeAndCommandLine', \"The terminal process \\\"{0}\\\" terminated with exit code: {1}.\", commandLine, this._exitCode);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\texitCodeMessage = nls.localize('terminated.exitCodeOnly', \"The terminal process terminated with exit code: {0}.\", this._exitCode);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tthis._exitCode = exitCodeOrError.code;\n\t\t\t\texitCodeMessage = nls.localize('launchFailed.errorMessage', \"The terminal process failed to launch: {0}.\", exitCodeOrError.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._logService.debug(`Terminal process exit (instanceId: ${this.instanceId}) state ${this._processManager.processState}`);\n\n\t\t// Only trigger wait on exit when the exit was *not* triggered by the\n\t\t// user (via the `workbench.action.terminal.kill` command).\n\t\tif (this._shellLaunchConfig.waitOnExit && this._processManager.processState !== ProcessState.KILLED_BY_USER) {\n\t\t\tthis._xtermReadyPromise.then(xterm => {\n\t\t\t\tif (exitCodeMessage) {\n\t\t\t\t\txterm.writeln(exitCodeMessage);\n\t\t\t\t}\n\t\t\t\tif (typeof this._shellLaunchConfig.waitOnExit === 'string') {\n\t\t\t\t\txterm.write(formatMessageForTerminal(this._shellLaunchConfig.waitOnExit));\n\t\t\t\t}\n\t\t\t\t// Disable all input if the terminal is exiting and listen for next keypress\n\t\t\t\txterm.setOption('disableStdin', true);\n\t\t\t\tif (xterm.textarea) {\n\t\t\t\t\tthis._attachPressAnyKeyToCloseListener(xterm);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.dispose();\n\t\t\tif (exitCodeMessage) {\n\t\t\t\tconst failedDuringLaunch = this._processManager.processState === ProcessState.KILLED_DURING_LAUNCH;\n\t\t\t\tif (failedDuringLaunch || this._configHelper.config.showExitAlert) {\n\t\t\t\t\t// Always show launch failures\n\t\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\t\tmessage: exitCodeMessage,\n\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\tactions: { primary: [this._instantiationService.createInstance(TerminalLaunchHelpAction)] }\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Log to help surface the error in case users report issues with showExitAlert\n\t\t\t\t\t// disabled\n\t\t\t\t\tthis._logService.warn(exitCodeMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onExit.fire(this._exitCode);\n\t}\n\n\t/**\n\t * Ensure write calls to xterm.js have finished before resolving.\n\t */\n\tprivate _flushXtermData(): Promise<void> {\n\t\tif (this._latestXtermWriteData === this._latestXtermParseData) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tlet retries = 0;\n\t\treturn new Promise<void>(r => {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (this._latestXtermWriteData === this._latestXtermParseData || ++retries === 5) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tr();\n\t\t\t\t}\n\t\t\t}, 20);\n\t\t});\n\t}\n\n\tprivate _attachPressAnyKeyToCloseListener(xterm: XTermTerminal) {\n\t\tif (xterm.textarea && !this._pressAnyKeyToCloseListener) {\n\t\t\tthis._pressAnyKeyToCloseListener = dom.addDisposableListener(xterm.textarea, 'keypress', (event: KeyboardEvent) => {\n\t\t\t\tif (this._pressAnyKeyToCloseListener) {\n\t\t\t\t\tthis._pressAnyKeyToCloseListener.dispose();\n\t\t\t\t\tthis._pressAnyKeyToCloseListener = undefined;\n\t\t\t\t\tthis.dispose();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic reuseTerminal(shell: IShellLaunchConfig, reset: boolean = false): void {\n\t\t// Unsubscribe any key listener we may have.\n\t\tthis._pressAnyKeyToCloseListener?.dispose();\n\t\tthis._pressAnyKeyToCloseListener = undefined;\n\n\t\tif (this._xterm) {\n\t\t\tif (!reset) {\n\t\t\t\t// Ensure new processes' output starts at start of new line\n\t\t\t\tthis._xterm.write('\\n\\x1b[G');\n\t\t\t}\n\n\t\t\t// Print initialText if specified\n\t\t\tif (shell.initialText) {\n\t\t\t\tthis._xterm.writeln(shell.initialText);\n\t\t\t}\n\n\t\t\t// Clean up waitOnExit state\n\t\t\tif (this._isExiting && this._shellLaunchConfig.waitOnExit) {\n\t\t\t\tthis._xterm.setOption('disableStdin', false);\n\t\t\t\tthis._isExiting = false;\n\t\t\t}\n\t\t}\n\n\t\t// Dispose the environment info widget if it exists\n\t\tthis.statusList.remove(TerminalStatus.RelaunchNeeded);\n\t\tthis._environmentInfo?.disposable.dispose();\n\t\tthis._environmentInfo = undefined;\n\n\t\tif (!reset) {\n\t\t\t// HACK: Force initialText to be non-falsy for reused terminals such that the\n\t\t\t// conptyInheritCursor flag is passed to the node-pty, this flag can cause a Window to stop\n\t\t\t// responding in Windows 10 1903 so we only want to use it when something is definitely written\n\t\t\t// to the terminal.\n\t\t\tshell.initialText = ' ';\n\t\t}\n\n\t\t// Set the new shell launch config\n\t\tthis._shellLaunchConfig = shell; // Must be done before calling _createProcess()\n\n\t\tthis._processManager.relaunch(this._shellLaunchConfig, this._cols, this._rows, this._accessibilityService.isScreenReaderOptimized(), reset);\n\n\t\t// Set title again as when creating the first process\n\t\tif (this._shellLaunchConfig.name) {\n\t\t\tthis.setTitle(this._shellLaunchConfig.name, TitleEventSource.Api);\n\t\t}\n\n\t\tthis._xtermTypeAhead?.reset();\n\t}\n\n\t@debounce(1000)\n\tpublic relaunch(): void {\n\t\tthis.reuseTerminal(this._shellLaunchConfig, true);\n\t}\n\n\tprivate _onLineFeed(): void {\n\t\tconst buffer = this._xterm!.buffer;\n\t\tconst newLine = buffer.active.getLine(buffer.active.baseY + buffer.active.cursorY);\n\t\tif (newLine && !newLine.isWrapped) {\n\t\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY - 1);\n\t\t}\n\t}\n\n\tprivate _onCursorMove(): void {\n\t\tconst buffer = this._xterm!.buffer;\n\t\tthis._sendLineData(buffer.active, buffer.active.baseY + buffer.active.cursorY);\n\t}\n\n\tprivate _onTitleChange(title: string): void {\n\t\tif (this.isTitleSetByProcess) {\n\t\t\tthis.setTitle(title, TitleEventSource.Sequence);\n\t\t}\n\t}\n\n\tprivate _sendLineData(buffer: IBuffer, lineIndex: number): void {\n\t\tlet line = buffer.getLine(lineIndex);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tlet lineData = line.translateToString(true);\n\t\twhile (lineIndex > 0 && line.isWrapped) {\n\t\t\tline = buffer.getLine(--lineIndex);\n\t\t\tif (!line) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlineData = line.translateToString(false) + lineData;\n\t\t}\n\t\tthis._onLineData.fire(lineData);\n\t}\n\n\tprivate _onKey(key: string, ev: KeyboardEvent): void {\n\t\tconst event = new StandardKeyboardEvent(ev);\n\n\t\tif (event.equals(KeyCode.Enter)) {\n\t\t\tthis._updateProcessCwd();\n\t\t}\n\t}\n\n\tprivate async _onSelectionChange(): Promise<void> {\n\t\tif (this._configurationService.getValue('terminal.integrated.copyOnSelection')) {\n\t\t\tif (this.hasSelection()) {\n\t\t\t\tawait this.copySelection();\n\t\t\t}\n\t\t}\n\t}\n\n\t@debounce(2000)\n\tprivate async _updateProcessCwd(): Promise<string> {\n\t\t// reset cwd if it has changed, so file based url paths can be resolved\n\t\tconst cwd = await this.getCwd();\n\t\tif (cwd && this._linkManager) {\n\t\t\tthis._linkManager.processCwd = cwd;\n\t\t}\n\t\treturn cwd;\n\t}\n\n\tpublic updateConfig(): void {\n\t\tconst config = this._configHelper.config;\n\t\tthis._safeSetOption('altClickMovesCursor', config.altClickMovesCursor);\n\t\tthis._setCursorBlink(config.cursorBlinking);\n\t\tthis._setCursorStyle(config.cursorStyle);\n\t\tthis._setCursorWidth(config.cursorWidth);\n\t\tthis._setCommandsToSkipShell(config.commandsToSkipShell);\n\t\tthis._safeSetOption('scrollback', config.scrollback);\n\t\tthis._safeSetOption('minimumContrastRatio', config.minimumContrastRatio);\n\t\tthis._safeSetOption('fastScrollSensitivity', config.fastScrollSensitivity);\n\t\tthis._safeSetOption('scrollSensitivity', config.mouseWheelScrollSensitivity);\n\t\tthis._safeSetOption('macOptionIsMeta', config.macOptionIsMeta);\n\t\tconst editorOptions = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tthis._safeSetOption('altClickMovesCursor', config.altClickMovesCursor && editorOptions.multiCursorModifier === 'alt');\n\t\tthis._safeSetOption('macOptionClickForcesSelection', config.macOptionClickForcesSelection);\n\t\tthis._safeSetOption('rightClickSelectsWord', config.rightClickBehavior === 'selectWord');\n\t\tthis._safeSetOption('wordSeparator', config.wordSeparators);\n\t\tconst suggestedRendererType = this._storageService.get(SUGGESTED_RENDERER_TYPE, StorageScope.GLOBAL);\n\t\tif ((config.gpuAcceleration === 'auto' && suggestedRendererType === undefined) || config.gpuAcceleration === 'on') {\n\t\t\tthis._enableWebglRenderer();\n\t\t} else {\n\t\t\tthis._disposeOfWebglRenderer();\n\t\t\tthis._safeSetOption('rendererType', (config.gpuAcceleration === 'auto' && suggestedRendererType === 'dom') ? 'dom' : (config.gpuAcceleration === 'off' ? 'dom' : 'canvas'));\n\t\t}\n\t\tthis._refreshEnvironmentVariableInfoWidgetState(this._processManager.environmentVariableInfo);\n\t}\n\n\tprivate async _enableWebglRenderer(): Promise<void> {\n\t\tif (!this._xterm || this._webglAddon) {\n\t\t\treturn;\n\t\t}\n\t\tconst Addon = await this._terminalInstanceService.getXtermWebglConstructor();\n\t\tthis._webglAddon = new Addon();\n\t\ttry {\n\t\t\tthis._xterm.loadAddon(this._webglAddon);\n\t\t\tthis._webglAddon.onContextLoss(() => {\n\t\t\t\tthis._logService.info(`Webgl lost context, disposing of webgl renderer`);\n\t\t\t\tthis._disposeOfWebglRenderer();\n\t\t\t\tthis._safeSetOption('rendererType', 'dom');\n\t\t\t});\n\t\t\tthis._storageService.store(SUGGESTED_RENDERER_TYPE, 'auto', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} catch (e) {\n\t\t\tthis._logService.warn(`Webgl could not be loaded. Falling back to the canvas renderer type.`, e);\n\t\t\tconst neverMeasureRenderTime = this._storageService.getBoolean(NEVER_MEASURE_RENDER_TIME_STORAGE_KEY, StorageScope.GLOBAL, false);\n\t\t\t// if it's already set to dom, no need to measure render time\n\t\t\tif (!neverMeasureRenderTime && this._configHelper.config.gpuAcceleration !== 'off') {\n\t\t\t\tthis._measureRenderTime();\n\t\t\t}\n\t\t\tthis._safeSetOption('rendererType', 'canvas');\n\t\t\tthis._storageService.store(SUGGESTED_RENDERER_TYPE, 'canvas', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tthis._disposeOfWebglRenderer();\n\t\t}\n\t}\n\n\tprivate _disposeOfWebglRenderer(): void {\n\t\ttry {\n\t\t\tthis._webglAddon?.dispose();\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tthis._webglAddon = undefined;\n\t}\n\n\tprivate async _updateUnicodeVersion(): Promise<void> {\n\t\tif (!this._xterm) {\n\t\t\tthrow new Error('Cannot update unicode version before xterm has been initialized');\n\t\t}\n\t\tif (!this._xtermUnicode11 && this._configHelper.config.unicodeVersion === '11') {\n\t\t\tconst Addon = await this._terminalInstanceService.getXtermUnicode11Constructor();\n\t\t\tthis._xtermUnicode11 = new Addon();\n\t\t\tthis._xterm.loadAddon(this._xtermUnicode11);\n\t\t}\n\t\tthis._xterm.unicode.activeVersion = this._configHelper.config.unicodeVersion;\n\t}\n\n\tpublic updateAccessibilitySupport(): void {\n\t\tconst isEnabled = this._accessibilityService.isScreenReaderOptimized();\n\t\tif (isEnabled) {\n\t\t\tthis._navigationModeAddon = new NavigationModeAddon(this._terminalA11yTreeFocusContextKey);\n\t\t\tthis._xterm!.loadAddon(this._navigationModeAddon);\n\t\t} else {\n\t\t\tthis._navigationModeAddon?.dispose();\n\t\t\tthis._navigationModeAddon = undefined;\n\t\t}\n\t\tthis._xterm!.setOption('screenReaderMode', isEnabled);\n\t}\n\n\tprivate _setCursorBlink(blink: boolean): void {\n\t\tif (this._xterm && this._xterm.getOption('cursorBlink') !== blink) {\n\t\t\tthis._xterm.setOption('cursorBlink', blink);\n\t\t\tthis._xterm.refresh(0, this._xterm.rows - 1);\n\t\t}\n\t}\n\n\tprivate _setCursorStyle(style: string): void {\n\t\tif (this._xterm && this._xterm.getOption('cursorStyle') !== style) {\n\t\t\t// 'line' is used instead of bar in VS Code to be consistent with editor.cursorStyle\n\t\t\tconst xtermOption = style === 'line' ? 'bar' : style;\n\t\t\tthis._xterm.setOption('cursorStyle', xtermOption);\n\t\t}\n\t}\n\n\tprivate _setCursorWidth(width: number): void {\n\t\tif (this._xterm && this._xterm.getOption('cursorWidth') !== width) {\n\t\t\tthis._xterm.setOption('cursorWidth', width);\n\t\t}\n\t}\n\n\tprivate _setCommandsToSkipShell(commands: string[]): void {\n\t\tconst excludeCommands = commands.filter(command => command[0] === '-').map(command => command.slice(1));\n\t\tthis._skipTerminalCommands = DEFAULT_COMMANDS_TO_SKIP_SHELL.filter(defaultCommand => {\n\t\t\treturn excludeCommands.indexOf(defaultCommand) === -1;\n\t\t}).concat(commands);\n\t}\n\n\tprivate _safeSetOption(key: string, value: any): void {\n\t\tif (!this._xterm) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._xterm.getOption(key) !== value) {\n\t\t\tthis._xterm.setOption(key, value);\n\t\t}\n\t}\n\n\tpublic layout(dimension: dom.Dimension): void {\n\t\tif (this.disableLayout) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst terminalWidth = this._evaluateColsAndRows(dimension.width, dimension.height);\n\t\tif (!terminalWidth) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._timeoutDimension = new dom.Dimension(dimension.width, dimension.height);\n\n\t\tif (this._xterm && this._xterm.element) {\n\t\t\tthis._xterm.element.style.width = terminalWidth + 'px';\n\t\t}\n\n\t\tthis._resize();\n\n\t\t// Signal the container is ready\n\t\tthis._containerReadyBarrier.open();\n\t}\n\n\t@debounce(50)\n\tprivate async _resize(): Promise<void> {\n\t\tthis._resizeNow(false);\n\t}\n\n\tprivate async _resizeNow(immediate: boolean): Promise<void> {\n\t\tlet cols = this.cols;\n\t\tlet rows = this.rows;\n\n\t\tif (this._xterm && this._xtermCore) {\n\t\t\t// Only apply these settings when the terminal is visible so that\n\t\t\t// the characters are measured correctly.\n\t\t\tif (this._isVisible) {\n\t\t\t\tconst font = this._configHelper.getFont(this._xtermCore);\n\t\t\t\tconst config = this._configHelper.config;\n\t\t\t\tthis._safeSetOption('letterSpacing', font.letterSpacing);\n\t\t\t\tthis._safeSetOption('lineHeight', font.lineHeight);\n\t\t\t\tthis._safeSetOption('fontSize', font.fontSize);\n\t\t\t\tthis._safeSetOption('fontFamily', font.fontFamily);\n\t\t\t\tthis._safeSetOption('fontWeight', config.fontWeight);\n\t\t\t\tthis._safeSetOption('fontWeightBold', config.fontWeightBold);\n\t\t\t\tthis._safeSetOption('drawBoldTextInBrightColors', config.drawBoldTextInBrightColors);\n\n\t\t\t\t// Any of the above setting changes could have changed the dimensions of the\n\t\t\t\t// terminal, re-evaluate now.\n\t\t\t\tthis._initDimensions();\n\t\t\t\tcols = this.cols;\n\t\t\t\trows = this.rows;\n\t\t\t}\n\n\t\t\tif (isNaN(cols) || isNaN(rows)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cols !== this._xterm.cols || rows !== this._xterm.rows) {\n\t\t\t\tthis._onDimensionsChanged.fire();\n\t\t\t}\n\n\t\t\tthis._xterm.resize(cols, rows);\n\t\t\tTerminalInstance._lastKnownGridDimensions = { cols, rows };\n\n\t\t\tif (this._isVisible) {\n\t\t\t\t// HACK: Force the renderer to unpause by simulating an IntersectionObserver event.\n\t\t\t\t// This is to fix an issue where dragging the window to the top of the screen to\n\t\t\t\t// maximize on Windows/Linux would fire an event saying that the terminal was not\n\t\t\t\t// visible.\n\t\t\t\tif (this._xterm.getOption('rendererType') === 'canvas') {\n\t\t\t\t\tthis._xtermCore._renderService?._onIntersectionChange({ intersectionRatio: 1 });\n\t\t\t\t\t// HACK: Force a refresh of the screen to ensure links are refresh corrected.\n\t\t\t\t\t// This can probably be removed when the above hack is fixed in Chromium.\n\t\t\t\t\tthis._xterm.refresh(0, this._xterm.rows - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (immediate) {\n\t\t\t// do not await, call setDimensions synchronously\n\t\t\tthis._processManager.setDimensions(cols, rows, true);\n\t\t} else {\n\t\t\tawait this._processManager.setDimensions(cols, rows);\n\t\t}\n\t}\n\n\tpublic setShellType(shellType: TerminalShellType) {\n\t\tthis._shellType = shellType;\n\t}\n\n\tprivate _setAriaLabel(xterm: XTermTerminal | undefined, terminalId: number, title: string | undefined): void {\n\t\tif (xterm) {\n\t\t\tif (title && title.length > 0) {\n\t\t\t\txterm.textarea?.setAttribute('aria-label', nls.localize('terminalTextBoxAriaLabelNumberAndTitle', \"Terminal {0}, {1}\", terminalId, title));\n\t\t\t} else {\n\t\t\t\txterm.textarea?.setAttribute('aria-label', nls.localize('terminalTextBoxAriaLabel', \"Terminal {0}\", terminalId));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setTitle(title: string | undefined, eventSource: TitleEventSource): void {\n\t\tif (!title) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (eventSource) {\n\t\t\tcase TitleEventSource.Process:\n\t\t\t\tif (isWindows) {\n\t\t\t\t\t// Remove the .exe extension\n\t\t\t\t\ttitle = path.basename(title);\n\t\t\t\t\ttitle = title.split('.exe')[0];\n\t\t\t\t} else {\n\t\t\t\t\tconst firstSpaceIndex = title.indexOf(' ');\n\t\t\t\t\tif (title.startsWith('/')) {\n\t\t\t\t\t\ttitle = path.basename(title);\n\t\t\t\t\t} else if (firstSpaceIndex > -1) {\n\t\t\t\t\t\ttitle = title.substring(0, firstSpaceIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TitleEventSource.Api:\n\t\t\t\t// If the title has not been set by the API or the rename command, unregister the handler that\n\t\t\t\t// automatically updates the terminal name\n\t\t\t\tdispose(this._messageTitleDisposable);\n\t\t\t\tthis._messageTitleDisposable = undefined;\n\t\t\t\tbreak;\n\t\t}\n\t\tconst didTitleChange = title !== this._title;\n\t\tthis._title = title;\n\t\tif (didTitleChange) {\n\t\t\tthis._setAriaLabel(this._xterm, this._instanceId, this._title);\n\n\t\t\tif (this._titleReadyComplete) {\n\t\t\t\tthis._titleReadyComplete(title);\n\t\t\t\tthis._titleReadyComplete = undefined;\n\t\t\t}\n\t\t\tthis._onTitleChanged.fire(this);\n\t\t}\n\t}\n\n\tpublic waitForTitle(): Promise<string> {\n\t\treturn this._titleReadyPromise;\n\t}\n\n\tpublic setDimensions(dimensions: ITerminalDimensionsOverride | undefined, immediate: boolean = false): void {\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.forceExactSize && !dimensions && this._rows === 0 && this._cols === 0) {\n\t\t\t// this terminal never had a real size => keep the last dimensions override exact size\n\t\t\tthis._cols = this._dimensionsOverride.cols;\n\t\t\tthis._rows = this._dimensionsOverride.rows;\n\t\t}\n\t\tthis._dimensionsOverride = dimensions;\n\t\tif (immediate) {\n\t\t\tthis._resizeNow(true);\n\t\t} else {\n\t\t\tthis._resize();\n\t\t}\n\t}\n\n\tprivate _setResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._shellLaunchConfig.args = shellLaunchConfig.args;\n\t\tthis._shellLaunchConfig.cwd = shellLaunchConfig.cwd;\n\t\tthis._shellLaunchConfig.executable = shellLaunchConfig.executable;\n\t\tthis._shellLaunchConfig.env = shellLaunchConfig.env;\n\t}\n\n\tpublic showEnvironmentInfoHover(): void {\n\t\tif (this._environmentInfo) {\n\t\t\tthis._environmentInfo.widget.focus();\n\t\t}\n\t}\n\n\tprivate _onEnvironmentVariableInfoChanged(info: IEnvironmentVariableInfo): void {\n\t\tif (info.requiresAction) {\n\t\t\tthis._xterm?.textarea?.setAttribute('aria-label', nls.localize('terminalStaleTextBoxAriaLabel', \"Terminal {0} environment is stale, run the 'Show Environment Information' command for more information\", this._instanceId));\n\t\t}\n\t\tthis._refreshEnvironmentVariableInfoWidgetState(info);\n\t}\n\n\tprivate _refreshEnvironmentVariableInfoWidgetState(info?: IEnvironmentVariableInfo): void {\n\t\t// Check if the widget should not exist\n\t\tif (\n\t\t\t!info ||\n\t\t\tthis._configHelper.config.environmentChangesIndicator === 'off' ||\n\t\t\tthis._configHelper.config.environmentChangesIndicator === 'warnonly' && !info.requiresAction\n\t\t) {\n\t\t\tthis.statusList.remove(TerminalStatus.RelaunchNeeded);\n\t\t\tthis._environmentInfo?.disposable.dispose();\n\t\t\tthis._environmentInfo = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\t// Recreate the process if the terminal has not yet been interacted with and it's not a\n\t\t// special terminal (eg. task, extension terminal)\n\t\tif (\n\t\t\tinfo.requiresAction &&\n\t\t\tthis._configHelper.config.environmentChangesRelaunch &&\n\t\t\t!this._processManager.hasWrittenData &&\n\t\t\t!this._shellLaunchConfig.isFeatureTerminal &&\n\t\t\t!this._shellLaunchConfig.customPtyImplementation\n\t\t\t&& !this._shellLaunchConfig.isExtensionOwnedTerminal &&\n\t\t\t!this._shellLaunchConfig.attachPersistentProcess\n\t\t) {\n\t\t\tthis.relaunch();\n\t\t\treturn;\n\t\t}\n\n\t\t// (Re-)create the widget\n\t\tthis._environmentInfo?.disposable.dispose();\n\t\tconst widget = this._instantiationService.createInstance(EnvironmentVariableInfoWidget, info);\n\t\tconst disposable = this._widgetManager.attachWidget(widget);\n\t\tif (info.requiresAction) {\n\t\t\tthis.statusList.add({\n\t\t\t\tid: TerminalStatus.RelaunchNeeded,\n\t\t\t\tseverity: Severity.Warning,\n\t\t\t\ticon: Codicon.warning,\n\t\t\t\ttooltip: info.getInfo(),\n\t\t\t\thoverActions: info.getActions ? info.getActions() : undefined\n\t\t\t});\n\t\t}\n\t\tif (disposable) {\n\t\t\tthis._environmentInfo = { widget, disposable };\n\t\t}\n\t}\n\n\tprivate _getXtermTheme(theme?: IColorTheme): any {\n\t\tif (!theme) {\n\t\t\ttheme = this._themeService.getColorTheme();\n\t\t}\n\n\t\tconst location = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\tconst foregroundColor = theme.getColor(TERMINAL_FOREGROUND_COLOR);\n\t\tconst backgroundColor = theme.getColor(TERMINAL_BACKGROUND_COLOR) || (location === ViewContainerLocation.Sidebar ? theme.getColor(SIDE_BAR_BACKGROUND) : theme.getColor(PANEL_BACKGROUND));\n\t\tconst cursorColor = theme.getColor(TERMINAL_CURSOR_FOREGROUND_COLOR) || foregroundColor;\n\t\tconst cursorAccentColor = theme.getColor(TERMINAL_CURSOR_BACKGROUND_COLOR) || backgroundColor;\n\t\tconst selectionColor = theme.getColor(TERMINAL_SELECTION_BACKGROUND_COLOR);\n\n\t\treturn {\n\t\t\tbackground: backgroundColor ? backgroundColor.toString() : null,\n\t\t\tforeground: foregroundColor ? foregroundColor.toString() : null,\n\t\t\tcursor: cursorColor ? cursorColor.toString() : null,\n\t\t\tcursorAccent: cursorAccentColor ? cursorAccentColor.toString() : null,\n\t\t\tselection: selectionColor ? selectionColor.toString() : null,\n\t\t\tblack: theme.getColor(ansiColorIdentifiers[0])!.toString(),\n\t\t\tred: theme.getColor(ansiColorIdentifiers[1])!.toString(),\n\t\t\tgreen: theme.getColor(ansiColorIdentifiers[2])!.toString(),\n\t\t\tyellow: theme.getColor(ansiColorIdentifiers[3])!.toString(),\n\t\t\tblue: theme.getColor(ansiColorIdentifiers[4])!.toString(),\n\t\t\tmagenta: theme.getColor(ansiColorIdentifiers[5])!.toString(),\n\t\t\tcyan: theme.getColor(ansiColorIdentifiers[6])!.toString(),\n\t\t\twhite: theme.getColor(ansiColorIdentifiers[7])!.toString(),\n\t\t\tbrightBlack: theme.getColor(ansiColorIdentifiers[8])!.toString(),\n\t\t\tbrightRed: theme.getColor(ansiColorIdentifiers[9])!.toString(),\n\t\t\tbrightGreen: theme.getColor(ansiColorIdentifiers[10])!.toString(),\n\t\t\tbrightYellow: theme.getColor(ansiColorIdentifiers[11])!.toString(),\n\t\t\tbrightBlue: theme.getColor(ansiColorIdentifiers[12])!.toString(),\n\t\t\tbrightMagenta: theme.getColor(ansiColorIdentifiers[13])!.toString(),\n\t\t\tbrightCyan: theme.getColor(ansiColorIdentifiers[14])!.toString(),\n\t\t\tbrightWhite: theme.getColor(ansiColorIdentifiers[15])!.toString()\n\t\t};\n\t}\n\n\tprivate _updateTheme(xterm: XTermTerminal, theme?: IColorTheme): void {\n\t\txterm.setOption('theme', this._getXtermTheme(theme));\n\t}\n\n\tpublic async toggleEscapeSequenceLogging(): Promise<void> {\n\t\tconst xterm = await this._xtermReadyPromise;\n\t\tconst isDebug = xterm.getOption('logLevel') === 'debug';\n\t\txterm.setOption('logLevel', isDebug ? 'info' : 'debug');\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn this._processManager.getInitialCwd();\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\treturn this._processManager.getCwd();\n\t}\n\n\tpublic registerLinkProvider(provider: ITerminalExternalLinkProvider): IDisposable {\n\t\tif (!this._linkManager) {\n\t\t\tthrow new Error('TerminalInstance.registerLinkProvider before link manager was ready');\n\t\t}\n\t\treturn this._linkManager.registerExternalLinkProvider(this, provider);\n\t}\n\n\tpublic async rename() {\n\t\tconst name = await this._quickInputService.input({\n\t\t\tvalue: this.title,\n\t\t\tprompt: nls.localize('workbench.action.terminal.rename.prompt', \"Enter terminal name\"),\n\t\t});\n\t\tif (name) {\n\t\t\tthis.setTitle(name, TitleEventSource.Api);\n\t\t}\n\t}\n\n\tpublic async changeIcon() {\n\t\tconst items: IQuickPickItem[] = [];\n\t\tfor (const icon of iconRegistry.all) {\n\t\t\titems.push({ label: `$(${icon.id})`, description: `${icon.id}` });\n\t\t}\n\t\tconst result = await this._quickInputService.pick(items, {\n\t\t\ttitle: nls.localize('changeTerminalIcon', \"Change Icon\"),\n\t\t\tmatchOnDescription: true\n\t\t});\n\t\tif (result) {\n\t\t\tthis.shellLaunchConfig.icon = result.description;\n\t\t\tthis._onTitleChanged.fire(this);\n\t\t}\n\t}\n\n\tpublic async configure(): Promise<void> {\n\t\tconst changeIcon: IQuickPickItem = { label: nls.localize('changeIconTerminal', 'Change Icon') };\n\t\tconst rename: IQuickPickItem = { label: nls.localize('renameTerminal', 'Rename') };\n\t\tconst result = await this._quickInputService.pick([changeIcon, rename], {\n\t\t\ttitle: nls.localize('configureTerminalTitle', \"Configure Terminal\")\n\t\t});\n\t\tswitch (result) {\n\t\t\tcase changeIcon: return this.changeIcon();\n\t\t\tcase rename: return this.rename();\n\t\t}\n\t}\n}\n\nregisterThemingParticipant((theme: IColorTheme, collector: ICssStyleCollector) => {\n\t// Border\n\tconst border = theme.getColor(activeContrastBorder);\n\tif (border) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench.hc-black .pane-body.integrated-terminal .xterm.focus::before,\n\t\t\t.monaco-workbench.hc-black .pane-body.integrated-terminal .xterm:focus::before { border-color: ${border}; }`\n\t\t);\n\t}\n\n\t// Scrollbar\n\tconst scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n\tif (scrollbarSliderBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .find-focused .xterm .xterm-viewport,\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm.focus .xterm-viewport,\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm:focus .xterm-viewport,\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm:hover .xterm-viewport { background-color: ${scrollbarSliderBackgroundColor} !important; }\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm-viewport { scrollbar-color: ${scrollbarSliderBackgroundColor} transparent; }\n\t\t`);\n\t}\n\n\tconst scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n\tif (scrollbarSliderHoverBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm .xterm-viewport::-webkit-scrollbar-thumb:hover { background-color: ${scrollbarSliderHoverBackgroundColor}; }\n\t\t\t.monaco-workbench .pane-body.integrated-terminal .xterm-viewport:hover { scrollbar-color: ${scrollbarSliderHoverBackgroundColor} transparent; }\n\t\t`);\n\t}\n\n\tconst scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n\tif (scrollbarSliderActiveBackgroundColor) {\n\t\tcollector.addRule(`.monaco-workbench .pane-body.integrated-terminal .xterm .xterm-viewport::-webkit-scrollbar-thumb:active { background-color: ${scrollbarSliderActiveBackgroundColor}; }`);\n\t}\n});\n"]}