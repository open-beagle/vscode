{"version":3,"file":"terminalInstanceService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/terminalInstanceService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAahG,IAAI,QAA8B,CAAC;IACnC,IAAI,WAAoC,CAAC;IACzC,IAAI,cAA0C,CAAC;IAC/C,IAAI,UAAkC,CAAC;IAEvC,MAAa,uBAAwB,SAAQ,sBAAU;QAAvD;;YAGoB,kCAA6B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAA+B,CAAC,CAAC;YACrG,iCAA4B,GAAG,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;QAiClF,CAAC;QA/BO,KAAK,CAAC,mBAAmB;YAC/B,IAAI,CAAC,QAAQ,EAAE;gBACd,QAAQ,GAAG,CAAC,sDAAa,OAAO,2BAAC,CAAC,CAAC,QAAQ,CAAC;aAC5C;YACD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAEM,KAAK,CAAC,yBAAyB;YACrC,IAAI,CAAC,WAAW,EAAE;gBACjB,WAAW,GAAG,CAAC,sDAAa,oBAAoB,2BAAC,CAAC,CAAC,WAAW,CAAC;aAC/D;YACD,OAAO,WAAW,CAAC;QACpB,CAAC;QAEM,KAAK,CAAC,4BAA4B;YACxC,IAAI,CAAC,cAAc,EAAE;gBACpB,cAAc,GAAG,CAAC,sDAAa,uBAAuB,2BAAC,CAAC,CAAC,cAAc,CAAC;aACxE;YACD,OAAO,cAAc,CAAC;QACvB,CAAC;QAEM,KAAK,CAAC,wBAAwB;YACpC,IAAI,CAAC,UAAU,EAAE;gBAChB,UAAU,GAAG,CAAC,sDAAa,mBAAmB,2BAAC,CAAC,CAAC,UAAU,CAAC;aAC5D;YACD,OAAO,UAAU,CAAC;QACnB,CAAC;QAEM,KAAK,CAAC,uBAAuB;YACnC,OAAO,EAAE,CAAC;QACX,CAAC;KACD;IArCD,0DAqCC;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,mCAAwB,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { IDefaultShellAndArgsRequest } from 'vs/workbench/contrib/terminal/common/terminal';\nimport type { Terminal as XTermTerminal } from 'xterm';\nimport type { SearchAddon as XTermSearchAddon } from 'xterm-addon-search';\nimport type { Unicode11Addon as XTermUnicode11Addon } from 'xterm-addon-unicode11';\nimport type { WebglAddon as XTermWebglAddon } from 'xterm-addon-webgl';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { Emitter } from 'vs/base/common/event';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nlet Terminal: typeof XTermTerminal;\nlet SearchAddon: typeof XTermSearchAddon;\nlet Unicode11Addon: typeof XTermUnicode11Addon;\nlet WebglAddon: typeof XTermWebglAddon;\n\nexport class TerminalInstanceService extends Disposable implements ITerminalInstanceService {\n\tpublic _serviceBrand: undefined;\n\n\tprotected readonly _onRequestDefaultShellAndArgs = this._register(new Emitter<IDefaultShellAndArgsRequest>());\n\treadonly onRequestDefaultShellAndArgs = this._onRequestDefaultShellAndArgs.event;\n\n\tpublic async getXtermConstructor(): Promise<typeof XTermTerminal> {\n\t\tif (!Terminal) {\n\t\t\tTerminal = (await import('xterm')).Terminal;\n\t\t}\n\t\treturn Terminal;\n\t}\n\n\tpublic async getXtermSearchConstructor(): Promise<typeof XTermSearchAddon> {\n\t\tif (!SearchAddon) {\n\t\t\tSearchAddon = (await import('xterm-addon-search')).SearchAddon;\n\t\t}\n\t\treturn SearchAddon;\n\t}\n\n\tpublic async getXtermUnicode11Constructor(): Promise<typeof XTermUnicode11Addon> {\n\t\tif (!Unicode11Addon) {\n\t\t\tUnicode11Addon = (await import('xterm-addon-unicode11')).Unicode11Addon;\n\t\t}\n\t\treturn Unicode11Addon;\n\t}\n\n\tpublic async getXtermWebglConstructor(): Promise<typeof XTermWebglAddon> {\n\t\tif (!WebglAddon) {\n\t\t\tWebglAddon = (await import('xterm-addon-webgl')).WebglAddon;\n\t\t}\n\t\treturn WebglAddon;\n\t}\n\n\tpublic async getMainProcessParentEnv(): Promise<IProcessEnvironment> {\n\t\treturn {};\n\t}\n}\n\nregisterSingleton(ITerminalInstanceService, TerminalInstanceService, true);\n"]}