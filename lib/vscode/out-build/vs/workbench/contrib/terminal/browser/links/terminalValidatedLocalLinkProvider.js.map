{"version":3,"file":"terminalValidatedLocalLinkProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/links/terminalValidatedLocalLinkProvider.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAehG,MAAM,UAAU,GAAG,eAAe,CAAC;IACnC,MAAM,mBAAmB,GAAG,KAAK,CAAC;IAClC,yEAAyE;IACzE,qEAAqE;IACrE,MAAM,4BAA4B,GAAG,iCAAiC,CAAC;IACvE,iFAAiF;IACpE,QAAA,mBAAmB,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,GAAG,4BAA4B,GAAG,OAAO,GAAG,mBAAmB,GAAG,GAAG,GAAG,4BAA4B,GAAG,OAAO,CAAC;IAE7J,QAAA,cAAc,GAAG,+BAA+B,CAAC;IAC9D,MAAM,aAAa,GAAG,GAAG,GAAG,sBAAc,GAAG,eAAe,CAAC;IAC7D,MAAM,sBAAsB,GAAG,YAAY,CAAC;IAC5C,MAAM,+BAA+B,GAAG,wCAAwC,CAAC;IACjF,8FAA8F;IACjF,QAAA,kBAAkB,GAAG,IAAI,GAAG,aAAa,GAAG,IAAI,GAAG,+BAA+B,GAAG,OAAO,GAAG,sBAAsB,GAAG,GAAG,GAAG,+BAA+B,GAAG,OAAO,CAAC;IAErL;uEACmE;IACtD,QAAA,mBAAmB,GAAG;QAClC,2CAA2C;QAC3C,8BAA8B;QAC9B,6CAA6C;QAC7C,0CAA0C;QAC1C,6DAA6D;QAC7D,oDAAoD,CAAC,qCAAqC;KAC1F,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,QAAQ,IAAI,CAAC,CAAC;IAE5C,oFAAoF;IACvE,QAAA,0BAA0B,GAAG,EAAE,CAAC;IAChC,QAAA,2BAA2B,GAAG,EAAE,CAAC;IAE9C,sFAAsF;IACzE,QAAA,6BAA6B,GAAG,CAAC,CAAC;IAE/C,MAAM,UAAU,GAAG,IAAI,CAAC;IAExB,IAAa,kCAAkC,GAA/C,MAAa,kCAAmC,SAAQ,mDAAwB;QAC/E,YACkB,MAAgB,EAChB,uBAAwC,EACxC,qBAA4E,EAC5E,gBAA6G,EAC7G,gBAAiJ,EACjJ,mBAAuH,EAChG,qBAA4C,EAClD,eAAgC,EACvB,wBAAkD,EAC9D,YAA0B,EACnB,mBAAwC;YAE9E,KAAK,EAAE,CAAC;YAZS,WAAM,GAAN,MAAM,CAAU;YAChB,4BAAuB,GAAvB,uBAAuB,CAAiB;YACxC,0BAAqB,GAArB,qBAAqB,CAAuD;YAC5E,qBAAgB,GAAhB,gBAAgB,CAA6F;YAC7G,qBAAgB,GAAhB,gBAAgB,CAAiI;YACjJ,wBAAmB,GAAnB,mBAAmB,CAAoG;YAChG,0BAAqB,GAArB,qBAAqB,CAAuB;YAClD,oBAAe,GAAf,eAAe,CAAiB;YACvB,6BAAwB,GAAxB,wBAAwB,CAA0B;YAC9D,iBAAY,GAAZ,YAAY,CAAc;YACnB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAG/E,CAAC;QAES,KAAK,CAAC,aAAa,CAAC,CAAS;;YACtC,MAAM,MAAM,GAAmB,EAAE,CAAC;YAClC,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,OAAO,GAAG,SAAS,CAAC;YAExB,MAAM,KAAK,GAAkB;gBAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAE;aAC7C,CAAC;YAEF,OAAO,SAAS,IAAI,CAAC,KAAI,MAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,0CAAE,SAAS,CAAA,EAAE;gBACjF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAE,CAAC,CAAC;gBACjE,SAAS,EAAE,CAAC;aACZ;YAED,OAAO,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,KAAI,MAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,0CAAE,SAAS,CAAA,EAAE;gBAC/G,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAE,CAAC,CAAC;gBAC5D,OAAO,EAAE,CAAC;aACV;YAED,MAAM,IAAI,GAAG,CAAA,GAAA,yCAAmB,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAClG,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE;gBAC7B,OAAO,EAAE,CAAC;aACV;YAED,4CAA4C;YAC5C,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAClD,IAAI,KAAK,CAAC;YACV,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC;YACrB,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;gBACzC,uFAAuF;gBACvF,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,IAAI,EAAE;oBACV,kEAAkE;oBAClE,6EAA6E;oBAC7E,0FAA0F;oBAC1F,MAAM;iBACN;gBAED,6EAA6E;gBAC7E,+EAA+E;gBAC/E,mCAAmC;gBACnC,qEAAqE;gBACrE,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;gBAClD,GAAG,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1C,IAAI,WAAW,GAAG,CAAC,EAAE;oBACpB,iDAAiD;oBACjD,MAAM;iBACN;gBAED,yEAAyE;gBACzE;gBACC,gBAAgB;gBAChB,gBAAgB;gBAChB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,WAAW,KAAK,CAAC,CAAC;oBAC/E,iCAAiC;oBACjC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAClF;oBACD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACzB,WAAW,IAAI,CAAC,CAAC;iBACjB;gBAED,mEAAmE;gBACnE,MAAM,WAAW,GAAG,CAAA,GAAA,8CAAwB,CAAA,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACrE,WAAW,EAAE,WAAW,GAAG,CAAC;oBAC5B,eAAe,EAAE,CAAC;oBAClB,SAAS,EAAE,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;oBACxC,aAAa,EAAE,CAAC;iBAChB,EAAE,SAAS,CAAC,CAAC;gBAEd,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,CAA2B,CAAC,CAAC,EAAE;oBACrE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;wBACzC,IAAI,MAAM,EAAE;4BACX,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW;gCAC/B,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,wCAAyB,CAAC,CAAC,CAAC,4CAA6B,CAAC;gCAC5G,CAAC,CAAC,8BAAe,CAAC;4BACnB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAA6B,EAAE,IAAY,EAAE,EAAE;gCAC9F,IAAI,MAAM,CAAC,WAAW,EAAE;oCACvB,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iCACxC;qCAAM;oCACN,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;iCACxC;4BACF,CAAC,CAAC,CAAC;4BACH,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,2BAAY,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;yBACtL;6BAAM;4BACN,CAAC,CAAC,SAAS,CAAC,CAAC;yBACb;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,IAAI,aAAa,EAAE;oBAClB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC3B;aACD;YAED,OAAO,MAAM,CAAC;QACf,CAAC;QAED,IAAc,eAAe;YAC5B,MAAM,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,oBAA4B,CAAC,CAAC,CAAC,0BAAkB,CAAC,CAAC,CAAC,2BAAmB,CAAC;YAChI,sCAAsC;YACtC,OAAO,IAAI,MAAM,CAAC,GAAG,mBAAmB,IAAI,2BAAmB,GAAG,CAAC,CAAC;QACrE,CAAC;QAEO,KAAK,CAAC,sBAAsB,CAAC,GAAQ;YAC5C,mFAAmF;YACnF,IAAI,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,EAAE;gBAC1C,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;gBACnE,OAAO;aACP;YAED,mCAAmC;YACnC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9E,CAAC;QAEO,2BAA2B,CAAC,GAAQ;YAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC;YACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBACzE,OAAO,IAAI,CAAC;iBACZ;aACD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAA;IA3IY,kCAAkC;QAQ5C,WAAA,qCAAqB,CAAA;QACrB,WAAA,0BAAe,CAAA;QACf,WAAA,oCAAwB,CAAA;QACxB,WAAA,mBAAY,CAAA;QACZ,YAAA,iCAAmB,CAAA;OAZT,kCAAkC,CA2I9C;IA3IY,gFAAkC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal, IViewportRange, IBufferLine } from 'xterm';\nimport { getXtermLineContent, convertLinkRangeToBuffer } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkHelpers';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { TerminalLink, OPEN_FILE_LABEL, FOLDER_IN_WORKSPACE_LABEL, FOLDER_NOT_IN_WORKSPACE_LABEL } from 'vs/workbench/contrib/terminal/browser/links/terminalLink';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { XtermLinkMatcherHandler } from 'vs/workbench/contrib/terminal/browser/links/terminalLinkManager';\nimport { TerminalBaseLinkProvider } from 'vs/workbench/contrib/terminal/browser/links/terminalBaseLinkProvider';\n\nconst pathPrefix = '(\\\\.\\\\.?|\\\\~)';\nconst pathSeparatorClause = '\\\\/';\n// '\":; are allowed in paths but they are often separators so ignore them\n// Also disallow \\\\ to prevent a catastropic backtracking case #24795\nconst excludedPathCharactersClause = '[^\\\\0\\\\s!$`&*()\\\\[\\\\]\\'\":;\\\\\\\\]';\n/** A regex that matches paths in the form /foo, ~/foo, ./foo, ../foo, foo/bar */\nexport const unixLocalLinkClause = '((' + pathPrefix + '|(' + excludedPathCharactersClause + ')+)?(' + pathSeparatorClause + '(' + excludedPathCharactersClause + ')+)+)';\n\nexport const winDrivePrefix = '(?:\\\\\\\\\\\\\\\\\\\\?\\\\\\\\)?[a-zA-Z]:';\nconst winPathPrefix = '(' + winDrivePrefix + '|\\\\.\\\\.?|\\\\~)';\nconst winPathSeparatorClause = '(\\\\\\\\|\\\\/)';\nconst winExcludedPathCharactersClause = '[^\\\\0<>\\\\?\\\\|\\\\/\\\\s!$`&*()\\\\[\\\\]\\'\":;]';\n/** A regex that matches paths in the form \\\\?\\c:\\foo c:\\foo, ~\\foo, .\\foo, ..\\foo, foo\\bar */\nexport const winLocalLinkClause = '((' + winPathPrefix + '|(' + winExcludedPathCharactersClause + ')+)?(' + winPathSeparatorClause + '(' + winExcludedPathCharactersClause + ')+)+)';\n\n/** As xterm reads from DOM, space in that case is nonbreaking char ASCII code - 160,\nreplacing space with nonBreakningSpace or space ASCII code - 32. */\nexport const lineAndColumnClause = [\n\t'((\\\\S*)\", line ((\\\\d+)( column (\\\\d+))?))', // \"(file path)\", line 45 [see #40468]\n\t'((\\\\S*)\",((\\\\d+)(:(\\\\d+))?))', // \"(file path)\",45 [see #78205]\n\t'((\\\\S*) on line ((\\\\d+)(, column (\\\\d+))?))', // (file path) on line 8, column 13\n\t'((\\\\S*):line ((\\\\d+)(, column (\\\\d+))?))', // (file path):line 8, column 13\n\t'(([^\\\\s\\\\(\\\\)]*)(\\\\s?[\\\\(\\\\[](\\\\d+)(,\\\\s?(\\\\d+))?)[\\\\)\\\\]])', // (file path)(45), (file path) (45), (file path)(45,18), (file path) (45,18), (file path)(45, 18), (file path) (45, 18), also with []\n\t'(([^:\\\\s\\\\(\\\\)<>\\'\\\"\\\\[\\\\]]*)(:(\\\\d+))?(:(\\\\d+))?)' // (file path):336, (file path):336:9\n].join('|').replace(/ /g, `[${'\\u00A0'} ]`);\n\n// Changing any regex may effect this value, hence changes this as well if required.\nexport const winLineAndColumnMatchIndex = 12;\nexport const unixLineAndColumnMatchIndex = 11;\n\n// Each line and column clause have 6 groups (ie no. of expressions in round brackets)\nexport const lineAndColumnClauseGroupCount = 6;\n\nconst MAX_LENGTH = 2000;\n\nexport class TerminalValidatedLocalLinkProvider extends TerminalBaseLinkProvider {\n\tconstructor(\n\t\tprivate readonly _xterm: Terminal,\n\t\tprivate readonly _processOperatingSystem: OperatingSystem,\n\t\tprivate readonly _activateFileCallback: (event: MouseEvent | undefined, link: string) => void,\n\t\tprivate readonly _wrapLinkHandler: (handler: (event: MouseEvent | undefined, link: string) => void) => XtermLinkMatcherHandler,\n\t\tprivate readonly _tooltipCallback: (link: TerminalLink, viewportRange: IViewportRange, modifierDownCallback?: () => void, modifierUpCallback?: () => void) => void,\n\t\tprivate readonly _validationCallback: (link: string, callback: (result: { uri: URI, isDirectory: boolean } | undefined) => void) => void,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IUriIdentityService private readonly _uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async _provideLinks(y: number): Promise<TerminalLink[]> {\n\t\tconst result: TerminalLink[] = [];\n\t\tlet startLine = y - 1;\n\t\tlet endLine = startLine;\n\n\t\tconst lines: IBufferLine[] = [\n\t\t\tthis._xterm.buffer.active.getLine(startLine)!\n\t\t];\n\n\t\twhile (startLine >= 0 && this._xterm.buffer.active.getLine(startLine)?.isWrapped) {\n\t\t\tlines.unshift(this._xterm.buffer.active.getLine(startLine - 1)!);\n\t\t\tstartLine--;\n\t\t}\n\n\t\twhile (endLine < this._xterm.buffer.active.length && this._xterm.buffer.active.getLine(endLine + 1)?.isWrapped) {\n\t\t\tlines.push(this._xterm.buffer.active.getLine(endLine + 1)!);\n\t\t\tendLine++;\n\t\t}\n\n\t\tconst text = getXtermLineContent(this._xterm.buffer.active, startLine, endLine, this._xterm.cols);\n\t\tif (text.length > MAX_LENGTH) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// clone regex to do a global search on text\n\t\tconst rex = new RegExp(this._localLinkRegex, 'g');\n\t\tlet match;\n\t\tlet stringIndex = -1;\n\t\twhile ((match = rex.exec(text)) !== null) {\n\t\t\t// const link = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n\t\t\tlet link = match[0];\n\t\t\tif (!link) {\n\t\t\t\t// something matched but does not comply with the given matchIndex\n\t\t\t\t// since this is most likely a bug the regex itself we simply do nothing here\n\t\t\t\t// this._logService.debug('match found without corresponding matchIndex', match, matcher);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Get index, match.index is for the outer match which includes negated chars\n\t\t\t// therefore we cannot use match.index directly, instead we search the position\n\t\t\t// of the match group in text again\n\t\t\t// also correct regex and string search offsets for the next loop run\n\t\t\tstringIndex = text.indexOf(link, stringIndex + 1);\n\t\t\trex.lastIndex = stringIndex + link.length;\n\t\t\tif (stringIndex < 0) {\n\t\t\t\t// invalid stringIndex (should not have happened)\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Adjust the link range to exclude a/ and b/ if it looks like a git diff\n\t\t\tif (\n\t\t\t\t// --- a/foo/bar\n\t\t\t\t// +++ b/foo/bar\n\t\t\t\t((text.startsWith('--- a/') || text.startsWith('+++ b/')) && stringIndex === 4) ||\n\t\t\t\t// diff --git a/foo/bar b/foo/bar\n\t\t\t\t(text.startsWith('diff --git') && (link.startsWith('a/') || link.startsWith('b/')))\n\t\t\t) {\n\t\t\t\tlink = link.substring(2);\n\t\t\t\tstringIndex += 2;\n\t\t\t}\n\n\t\t\t// Convert the link text's string index into a wrapped buffer range\n\t\t\tconst bufferRange = convertLinkRangeToBuffer(lines, this._xterm.cols, {\n\t\t\t\tstartColumn: stringIndex + 1,\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tendColumn: stringIndex + link.length + 1,\n\t\t\t\tendLineNumber: 1\n\t\t\t}, startLine);\n\n\t\t\tconst validatedLink = await new Promise<TerminalLink | undefined>(r => {\n\t\t\t\tthis._validationCallback(link, (result) => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst label = result.isDirectory\n\t\t\t\t\t\t\t? (this._isDirectoryInsideWorkspace(result.uri) ? FOLDER_IN_WORKSPACE_LABEL : FOLDER_NOT_IN_WORKSPACE_LABEL)\n\t\t\t\t\t\t\t: OPEN_FILE_LABEL;\n\t\t\t\t\t\tconst activateCallback = this._wrapLinkHandler((event: MouseEvent | undefined, text: string) => {\n\t\t\t\t\t\t\tif (result.isDirectory) {\n\t\t\t\t\t\t\t\tthis._handleLocalFolderLink(result.uri);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._activateFileCallback(event, text);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tr(this._instantiationService.createInstance(TerminalLink, this._xterm, bufferRange, link, this._xterm.buffer.active.viewportY, activateCallback, this._tooltipCallback, true, label));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tr(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tif (validatedLink) {\n\t\t\t\tresult.push(validatedLink);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected get _localLinkRegex(): RegExp {\n\t\tconst baseLocalLinkClause = this._processOperatingSystem === OperatingSystem.Windows ? winLocalLinkClause : unixLocalLinkClause;\n\t\t// Append line and column number regex\n\t\treturn new RegExp(`${baseLocalLinkClause}(${lineAndColumnClause})`);\n\t}\n\n\tprivate async _handleLocalFolderLink(uri: URI): Promise<void> {\n\t\t// If the folder is within one of the window's workspaces, focus it in the explorer\n\t\tif (this._isDirectoryInsideWorkspace(uri)) {\n\t\t\tawait this._commandService.executeCommand('revealInExplorer', uri);\n\t\t\treturn;\n\t\t}\n\n\t\t// Open a new window for the folder\n\t\tthis._hostService.openWindow([{ folderUri: uri }], { forceNewWindow: true });\n\t}\n\n\tprivate _isDirectoryInsideWorkspace(uri: URI) {\n\t\tconst folders = this._workspaceContextService.getWorkspace().folders;\n\t\tfor (let i = 0; i < folders.length; i++) {\n\t\t\tif (this._uriIdentityService.extUri.isEqualOrParent(uri, folders[i].uri)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"]}