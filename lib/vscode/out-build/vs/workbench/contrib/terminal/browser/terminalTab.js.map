{"version":3,"file":"terminalTab.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/terminalTab.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TERMINAL_VIEW_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable, Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { SplitView, Orientation, IView, Sizing } from 'vs/base/browser/ui/splitview/splitview';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITerminalInstance, Direction, ITerminalTab, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ViewContainerLocation, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IShellLaunchConfig, ITerminalTabLayoutInfoById } from 'vs/platform/terminal/common/terminal';\n\nconst SPLIT_PANE_MIN_SIZE = 120;\n\nclass SplitPaneContainer extends Disposable {\n\tprivate _height: number;\n\tprivate _width: number;\n\tprivate _splitView!: SplitView;\n\tprivate readonly _splitViewDisposables = this._register(new DisposableStore());\n\tprivate _children: SplitPane[] = [];\n\n\tprivate _onDidChange: Event<number | undefined> = Event.None;\n\tpublic get onDidChange(): Event<number | undefined> { return this._onDidChange; }\n\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\tpublic orientation: Orientation,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper();\n\t\tthis._width = this._container.offsetWidth;\n\t\tthis._height = this._container.offsetHeight;\n\t\tthis._createSplitView();\n\t\tthis._splitView.layout(this.orientation === Orientation.HORIZONTAL ? this._width : this._height);\n\t}\n\n\tprivate _createSplitView(): void {\n\t\tthis._splitView = new SplitView(this._container, { orientation: this.orientation });\n\t\tthis._splitViewDisposables.clear();\n\t\tthis._splitViewDisposables.add(this._splitView.onDidSashReset(() => this._splitView.distributeViewSizes()));\n\t}\n\n\tpublic split(instance: ITerminalInstance, index: number = this._children.length): void {\n\t\tthis._addChild(instance, index);\n\t}\n\n\tpublic resizePane(index: number, direction: Direction, amount: number): void {\n\t\tconst isHorizontal = (direction === Direction.Left) || (direction === Direction.Right);\n\n\t\tif ((isHorizontal && this.orientation !== Orientation.HORIZONTAL) ||\n\t\t\t(!isHorizontal && this.orientation !== Orientation.VERTICAL)) {\n\t\t\t// Resize the entire pane as a whole\n\t\t\tif ((this.orientation === Orientation.HORIZONTAL && direction === Direction.Down) ||\n\t\t\t\t(this.orientation === Orientation.VERTICAL && direction === Direction.Right)) {\n\t\t\t\tamount *= -1;\n\t\t\t}\n\t\t\tthis._layoutService.resizePart(Parts.PANEL_PART, amount, amount);\n\t\t\treturn;\n\t\t}\n\n\t\t// Resize left/right in horizontal or up/down in vertical\n\t\t// Only resize when there is more than one pane\n\t\tif (this._children.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get sizes\n\t\tconst sizes: number[] = [];\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\tsizes.push(this._splitView.getViewSize(i));\n\t\t}\n\n\t\t// Remove size from right pane, unless index is the last pane in which case use left pane\n\t\tconst isSizingEndPane = index !== this._children.length - 1;\n\t\tconst indexToChange = isSizingEndPane ? index + 1 : index - 1;\n\t\tif (isSizingEndPane && direction === Direction.Left) {\n\t\t\tamount *= -1;\n\t\t} else if (!isSizingEndPane && direction === Direction.Right) {\n\t\t\tamount *= -1;\n\t\t} else if (isSizingEndPane && direction === Direction.Up) {\n\t\t\tamount *= -1;\n\t\t} else if (!isSizingEndPane && direction === Direction.Down) {\n\t\t\tamount *= -1;\n\t\t}\n\n\t\t// Ensure the size is not reduced beyond the minimum, otherwise weird things can happen\n\t\tif (sizes[index] + amount < SPLIT_PANE_MIN_SIZE) {\n\t\t\tamount = SPLIT_PANE_MIN_SIZE - sizes[index];\n\t\t} else if (sizes[indexToChange] - amount < SPLIT_PANE_MIN_SIZE) {\n\t\t\tamount = sizes[indexToChange] - SPLIT_PANE_MIN_SIZE;\n\t\t}\n\n\t\t// Apply the size change\n\t\tsizes[index] += amount;\n\t\tsizes[indexToChange] -= amount;\n\t\tfor (let i = 0; i < this._splitView.length - 1; i++) {\n\t\t\tthis._splitView.resizeView(i, sizes[i]);\n\t\t}\n\t}\n\n\tpublic resizePanes(relativeSizes: number[]): void {\n\t\tif (this._children.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// assign any extra size to last terminal\n\t\trelativeSizes[relativeSizes.length - 1] += 1 - relativeSizes.reduce((totalValue, currentValue) => totalValue + currentValue, 0);\n\t\tlet totalSize = 0;\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\ttotalSize += this._splitView.getViewSize(i);\n\t\t}\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\tthis._splitView.resizeView(i, totalSize * relativeSizes[i]);\n\t\t}\n\t}\n\n\tprivate _addChild(instance: ITerminalInstance, index: number): void {\n\t\tconst child = new SplitPane(instance, this.orientation === Orientation.HORIZONTAL ? this._height : this._width);\n\t\tchild.orientation = this.orientation;\n\t\tif (typeof index === 'number') {\n\t\t\tthis._children.splice(index, 0, child);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t}\n\n\t\tthis._withDisabledLayout(() => this._splitView.addView(child, Sizing.Distribute, index));\n\n\t\tthis._onDidChange = Event.any(...this._children.map(c => c.onDidChange));\n\t}\n\n\tpublic remove(instance: ITerminalInstance): void {\n\t\tlet index: number | null = null;\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tif (this._children[i].instance === instance) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tthis._children.splice(index, 1);\n\t\t\tthis._splitView.removeView(index, Sizing.Distribute);\n\t\t}\n\t}\n\n\tpublic layout(width: number, height: number): void {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis._children.forEach(c => c.orthogonalLayout(height));\n\t\t\tthis._splitView.layout(width);\n\t\t} else {\n\t\t\tthis._children.forEach(c => c.orthogonalLayout(width));\n\t\t\tthis._splitView.layout(height);\n\t\t}\n\t}\n\n\tpublic setOrientation(orientation: Orientation): void {\n\t\tif (this.orientation === orientation) {\n\t\t\treturn;\n\t\t}\n\t\tthis.orientation = orientation;\n\n\t\t// Remove old split view\n\t\twhile (this._container.children.length > 0) {\n\t\t\tthis._container.removeChild(this._container.children[0]);\n\t\t}\n\t\tthis._splitViewDisposables.clear();\n\t\tthis._splitView.dispose();\n\n\t\t// Create new split view with updated orientation\n\t\tthis._createSplitView();\n\t\tthis._withDisabledLayout(() => {\n\t\t\tthis._children.forEach(child => {\n\t\t\t\tchild.orientation = orientation;\n\t\t\t\tthis._splitView.addView(child, 1);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _withDisabledLayout(innerFunction: () => void): void {\n\t\t// Whenever manipulating views that are going to be changed immediately, disabling\n\t\t// layout/resize events in the terminal prevent bad dimensions going to the pty.\n\t\tthis._children.forEach(c => c.instance.disableLayout = true);\n\t\tinnerFunction();\n\t\tthis._children.forEach(c => c.instance.disableLayout = false);\n\t}\n}\n\nclass SplitPane implements IView {\n\tpublic minimumSize: number = SPLIT_PANE_MIN_SIZE;\n\tpublic maximumSize: number = Number.MAX_VALUE;\n\n\tpublic orientation: Orientation | undefined;\n\n\tprivate _onDidChange: Event<number | undefined> = Event.None;\n\tpublic get onDidChange(): Event<number | undefined> { return this._onDidChange; }\n\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\treadonly instance: ITerminalInstance,\n\t\tpublic orthogonalSize: number\n\t) {\n\t\tthis.element = document.createElement('div');\n\t\tthis.element.className = 'terminal-split-pane';\n\t\tthis.instance.attachToElement(this.element);\n\t}\n\n\tpublic layout(size: number): void {\n\t\t// Only layout when both sizes are known\n\t\tif (!size || !this.orthogonalSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis.instance.layout({ width: this.orthogonalSize, height: size });\n\t\t} else {\n\t\t\tthis.instance.layout({ width: size, height: this.orthogonalSize });\n\t\t}\n\t}\n\n\tpublic orthogonalLayout(size: number): void {\n\t\tthis.orthogonalSize = size;\n\t}\n}\n\nexport class TerminalTab extends Disposable implements ITerminalTab {\n\tprivate _terminalInstances: ITerminalInstance[] = [];\n\tprivate _splitPaneContainer: SplitPaneContainer | undefined;\n\tprivate get splitPaneContainer(): SplitPaneContainer | undefined { return this._splitPaneContainer; }\n\tprivate _tabElement: HTMLElement | undefined;\n\tprivate _panelPosition: Position = Position.BOTTOM;\n\tprivate _terminalLocation: ViewContainerLocation = ViewContainerLocation.Panel;\n\n\tprivate _activeInstanceIndex: number;\n\tprivate _isVisible: boolean = false;\n\n\tpublic get terminalInstances(): ITerminalInstance[] { return this._terminalInstances; }\n\n\tprivate _initialRelativeSizes: number[] | undefined;\n\n\tprivate readonly _onDisposed: Emitter<ITerminalTab> = this._register(new Emitter<ITerminalTab>());\n\tpublic readonly onDisposed: Event<ITerminalTab> = this._onDisposed.event;\n\tprivate readonly _onInstancesChanged: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onInstancesChanged: Event<void> = this._onInstancesChanged.event;\n\tprivate readonly _onPanelMovedToSide = new Emitter<void>();\n\tpublic get onPanelMovedToSide(): Event<void> { return this._onPanelMovedToSide.event; }\n\tconstructor(\n\t\tprivate _container: HTMLElement | undefined,\n\t\tshellLaunchConfigOrInstance: IShellLaunchConfig | ITerminalInstance | undefined,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tif (shellLaunchConfigOrInstance) {\n\t\t\tthis.addInstance(shellLaunchConfigOrInstance);\n\t\t}\n\t\tthis._activeInstanceIndex = 0;\n\t\tif (this._container) {\n\t\t\tthis.attachToElement(this._container);\n\t\t}\n\t}\n\n\tpublic addInstance(shellLaunchConfigOrInstance: IShellLaunchConfig | ITerminalInstance): void {\n\t\tlet instance: ITerminalInstance;\n\t\tif ('instanceId' in shellLaunchConfigOrInstance) {\n\t\t\tinstance = shellLaunchConfigOrInstance;\n\t\t} else {\n\t\t\tinstance = this._terminalService.createInstance(undefined, shellLaunchConfigOrInstance);\n\t\t}\n\t\tthis._terminalInstances.push(instance);\n\t\tthis._initInstanceListeners(instance);\n\n\t\tif (this._splitPaneContainer) {\n\t\t\tthis._splitPaneContainer!.split(instance);\n\t\t}\n\n\t\tthis._onInstancesChanged.fire();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._container && this._tabElement) {\n\t\t\tthis._container.removeChild(this._tabElement);\n\t\t\tthis._tabElement = undefined;\n\t\t}\n\t\tthis._terminalInstances = [];\n\t\tthis._onInstancesChanged.fire();\n\t}\n\n\tpublic get activeInstance(): ITerminalInstance | null {\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._terminalInstances[this._activeInstanceIndex];\n\t}\n\n\tpublic getLayoutInfo(isActive: boolean): ITerminalTabLayoutInfoById {\n\t\tconst isHorizontal = this.splitPaneContainer?.orientation === Orientation.HORIZONTAL;\n\t\tconst instances = this.terminalInstances.filter(instance => typeof instance.persistentProcessId === 'number' && instance.shouldPersist);\n\t\tconst totalSize = instances.map(instance => isHorizontal ? instance.cols : instance.rows).reduce((totalValue, currentValue) => totalValue + currentValue, 0);\n\t\treturn {\n\t\t\tisActive: isActive,\n\t\t\tactivePersistentProcessId: this.activeInstance ? this.activeInstance.persistentProcessId : undefined,\n\t\t\tterminals: instances.map(t => {\n\t\t\t\treturn {\n\t\t\t\t\trelativeSize: isHorizontal ? t.cols / totalSize : t.rows / totalSize,\n\t\t\t\t\tterminal: t.persistentProcessId || 0\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t}\n\n\tprivate _initInstanceListeners(instance: ITerminalInstance): void {\n\t\tinstance.addDisposable(instance.onDisposed(instance => this._onInstanceDisposed(instance)));\n\t\tinstance.addDisposable(instance.onFocused(instance => this._setActiveInstance(instance)));\n\t}\n\n\tprivate _onInstanceDisposed(instance: ITerminalInstance): void {\n\t\t// Get the index of the instance and remove it from the list\n\t\tconst index = this._terminalInstances.indexOf(instance);\n\t\tconst wasActiveInstance = instance === this.activeInstance;\n\t\tif (index !== -1) {\n\t\t\tthis._terminalInstances.splice(index, 1);\n\t\t}\n\n\t\t// Adjust focus if the instance was active\n\t\tif (wasActiveInstance && this._terminalInstances.length > 0) {\n\t\t\tconst newIndex = index < this._terminalInstances.length ? index : this._terminalInstances.length - 1;\n\t\t\tthis.setActiveInstanceByIndex(newIndex);\n\t\t\t// TODO: Only focus the new instance if the tab had focus?\n\t\t\tif (this.activeInstance) {\n\t\t\t\tthis.activeInstance.focus(true);\n\t\t\t}\n\t\t} else if (index < this._activeInstanceIndex) {\n\t\t\t// Adjust active instance index if needed\n\t\t\tthis._activeInstanceIndex--;\n\t\t}\n\n\t\t// Remove the instance from the split pane if it has been created\n\t\tif (this._splitPaneContainer) {\n\t\t\tthis._splitPaneContainer.remove(instance);\n\t\t}\n\n\t\t// Fire events and dispose tab if it was the last instance\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\tthis._onDisposed.fire(this);\n\t\t\tthis.dispose();\n\t\t} else {\n\t\t\tthis._onInstancesChanged.fire();\n\t\t}\n\t}\n\n\tprivate _setActiveInstance(instance: ITerminalInstance): void {\n\t\tthis.setActiveInstanceByIndex(this._getIndexFromId(instance.instanceId));\n\t}\n\n\tprivate _getIndexFromId(terminalId: number): number {\n\t\tlet terminalIndex = -1;\n\t\tthis.terminalInstances.forEach((terminalInstance, i) => {\n\t\t\tif (terminalInstance.instanceId === terminalId) {\n\t\t\t\tterminalIndex = i;\n\t\t\t}\n\t\t});\n\t\tif (terminalIndex === -1) {\n\t\t\tthrow new Error(`Terminal with ID ${terminalId} does not exist (has it already been disposed?)`);\n\t\t}\n\t\treturn terminalIndex;\n\t}\n\n\tpublic setActiveInstanceByIndex(index: number): void {\n\t\t// Check for invalid value\n\t\tif (index < 0 || index >= this._terminalInstances.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst didInstanceChange = this._activeInstanceIndex !== index;\n\t\tthis._activeInstanceIndex = index;\n\n\t\tif (didInstanceChange) {\n\t\t\tthis._onInstancesChanged.fire();\n\t\t}\n\t}\n\n\tpublic attachToElement(element: HTMLElement): void {\n\t\tthis._container = element;\n\n\t\t// If we already have a tab element, we can reparent it\n\t\tif (!this._tabElement) {\n\t\t\tthis._tabElement = document.createElement('div');\n\t\t\tthis._tabElement.classList.add('terminal-tab');\n\t\t}\n\n\t\tthis._container.appendChild(this._tabElement);\n\t\tif (!this._splitPaneContainer) {\n\t\t\tthis._panelPosition = this._layoutService.getPanelPosition();\n\t\t\tthis._terminalLocation = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\t\tconst orientation = this._terminalLocation === ViewContainerLocation.Panel && this._panelPosition === Position.BOTTOM ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\tconst newLocal = this._instantiationService.createInstance(SplitPaneContainer, this._tabElement, orientation);\n\t\t\tthis._splitPaneContainer = newLocal;\n\t\t\tthis.terminalInstances.forEach(instance => this._splitPaneContainer!.split(instance));\n\t\t}\n\t\tthis.setVisible(this._isVisible);\n\t}\n\n\tpublic get title(): string {\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\t// Normally consumers should not call into title at all after the tab is disposed but\n\t\t\t// this is required when the tab is used as part of a tree.\n\t\t\treturn '';\n\t\t}\n\t\tlet title = this.terminalInstances[0].title;\n\t\tif (this.terminalInstances[0].shellLaunchConfig.description) {\n\t\t\ttitle += ` (${this.terminalInstances[0].shellLaunchConfig.description})`;\n\t\t}\n\t\tfor (let i = 1; i < this.terminalInstances.length; i++) {\n\t\t\tconst instance = this.terminalInstances[i];\n\t\t\tif (instance.title) {\n\t\t\t\ttitle += `, ${instance.title}`;\n\t\t\t\tif (instance.shellLaunchConfig.description) {\n\t\t\t\t\ttitle += ` (${instance.shellLaunchConfig.description})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn title;\n\t}\n\n\tpublic setVisible(visible: boolean): void {\n\t\tthis._isVisible = visible;\n\t\tif (this._tabElement) {\n\t\t\tthis._tabElement.style.display = visible ? '' : 'none';\n\t\t}\n\t\tthis.terminalInstances.forEach(i => i.setVisible(visible));\n\t}\n\n\tpublic split(shellLaunchConfig: IShellLaunchConfig): ITerminalInstance {\n\t\tconst instance = this._terminalService.createInstance(undefined, shellLaunchConfig);\n\t\tthis._terminalInstances.splice(this._activeInstanceIndex + 1, 0, instance);\n\t\tthis._initInstanceListeners(instance);\n\t\tthis._setActiveInstance(instance);\n\n\t\tif (this._splitPaneContainer) {\n\t\t\tthis._splitPaneContainer.split(instance, this._activeInstanceIndex);\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tpublic addDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n\n\tpublic layout(width: number, height: number): void {\n\t\tif (this._splitPaneContainer) {\n\t\t\t// Check if the panel position changed and rotate panes if so\n\t\t\tconst newPanelPosition = this._layoutService.getPanelPosition();\n\t\t\tconst newTerminalLocation = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\t\tconst terminalPositionChanged = newPanelPosition !== this._panelPosition || newTerminalLocation !== this._terminalLocation;\n\t\t\tif (terminalPositionChanged) {\n\t\t\t\tconst newOrientation = newTerminalLocation === ViewContainerLocation.Panel && newPanelPosition === Position.BOTTOM ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\t\tthis._splitPaneContainer.setOrientation(newOrientation);\n\t\t\t\tthis._panelPosition = newPanelPosition;\n\t\t\t\tthis._terminalLocation = newTerminalLocation;\n\t\t\t}\n\t\t\tthis._splitPaneContainer.layout(width, height);\n\t\t\tif (this._initialRelativeSizes && height > 0 && width > 0) {\n\t\t\t\tthis.resizePanes(this._initialRelativeSizes);\n\t\t\t\tthis._initialRelativeSizes = undefined;\n\t\t\t}\n\t\t\tif (terminalPositionChanged && this._splitPaneContainer.orientation === Orientation.VERTICAL) {\n\t\t\t\tthis._onPanelMovedToSide.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic focusPreviousPane(): void {\n\t\tconst newIndex = this._activeInstanceIndex === 0 ? this._terminalInstances.length - 1 : this._activeInstanceIndex - 1;\n\t\tthis.setActiveInstanceByIndex(newIndex);\n\t}\n\n\tpublic focusNextPane(): void {\n\t\tconst newIndex = this._activeInstanceIndex === this._terminalInstances.length - 1 ? 0 : this._activeInstanceIndex + 1;\n\t\tthis.setActiveInstanceByIndex(newIndex);\n\t}\n\n\tpublic resizePane(direction: Direction): void {\n\t\tif (!this._splitPaneContainer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isHorizontal = (direction === Direction.Left || direction === Direction.Right);\n\t\tconst font = this._terminalService.configHelper.getFont();\n\t\t// TODO: Support letter spacing and line height\n\t\tconst amount = isHorizontal ? font.charWidth : font.charHeight;\n\t\tif (amount) {\n\t\t\tthis._splitPaneContainer.resizePane(this._activeInstanceIndex, direction, amount);\n\t\t}\n\t}\n\n\tpublic resizePanes(relativeSizes: number[]): void {\n\t\tif (!this._splitPaneContainer) {\n\t\t\tthis._initialRelativeSizes = relativeSizes;\n\t\t\treturn;\n\t\t}\n\t\t// for the local case\n\t\tthis._initialRelativeSizes = relativeSizes;\n\n\t\tthis._splitPaneContainer.resizePanes(relativeSizes);\n\t}\n}\n"]}