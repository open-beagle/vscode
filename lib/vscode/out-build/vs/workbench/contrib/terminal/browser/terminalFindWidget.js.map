{"version":3,"file":"terminalFindWidget.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/terminalFindWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SimpleFindWidget } from 'vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED, KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { FindReplaceState } from 'vs/editor/contrib/find/findState';\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\n\nexport class TerminalFindWidget extends SimpleFindWidget {\n\tprotected _findInputFocused: IContextKey<boolean>;\n\tprotected _findWidgetFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tfindState: FindReplaceState,\n\t\t@IContextViewService _contextViewService: IContextViewService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService\n\t) {\n\t\tsuper(_contextViewService, _contextKeyService, findState, true);\n\t\tthis._register(findState.onFindReplaceStateChange(() => {\n\t\t\tthis.show();\n\t\t}));\n\t\tthis._findInputFocused = KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED.bindTo(this._contextKeyService);\n\t\tthis._findWidgetFocused = KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED.bindTo(this._contextKeyService);\n\t}\n\n\tpublic find(previous: boolean) {\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance !== null) {\n\t\t\tif (previous) {\n\t\t\t\tinstance.findPrevious(this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() });\n\t\t\t} else {\n\t\t\t\tinstance.findNext(this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic override hide() {\n\t\tsuper.hide();\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance) {\n\t\t\tinstance.focus();\n\t\t}\n\t}\n\n\tprotected onInputChanged() {\n\t\t// Ignore input changes for now\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance !== null) {\n\t\t\treturn instance.findPrevious(this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue(), incremental: true });\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected onFocusTrackerFocus() {\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance) {\n\t\t\tinstance.notifyFindWidgetFocusChanged(true);\n\t\t}\n\t\tthis._findWidgetFocused.set(true);\n\t}\n\n\tprotected onFocusTrackerBlur() {\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance) {\n\t\t\tinstance.notifyFindWidgetFocusChanged(false);\n\t\t}\n\t\tthis._findWidgetFocused.reset();\n\t}\n\n\tprotected onFindInputFocusTrackerFocus() {\n\t\tthis._findInputFocused.set(true);\n\t}\n\n\tprotected onFindInputFocusTrackerBlur() {\n\t\tthis._findInputFocused.reset();\n\t}\n\n\tpublic findFirst() {\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance) {\n\t\t\tif (instance.hasSelection()) {\n\t\t\t\tinstance.clearSelection();\n\t\t\t}\n\t\t\tinstance.findPrevious(this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() });\n\t\t}\n\t}\n}\n"]}