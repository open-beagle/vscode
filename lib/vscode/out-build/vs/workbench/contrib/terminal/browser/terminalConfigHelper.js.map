{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalConfigHelper.ts"],"names":[],"mappings":"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","file":"terminalConfigHelper.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { EDITOR_FONT_DEFAULTS, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITerminalConfiguration, TERMINAL_CONFIG_SECTION, DEFAULT_LETTER_SPACING, DEFAULT_LINE_HEIGHT, MINIMUM_LETTER_SPACING, LinuxDistro, MINIMUM_FONT_WEIGHT, MAXIMUM_FONT_WEIGHT, DEFAULT_FONT_WEIGHT, DEFAULT_BOLD_FONT_WEIGHT, FontWeight, ITerminalFont } from 'vs/workbench/contrib/terminal/common/terminal';\nimport Severity from 'vs/base/common/severity';\nimport { INotificationService, NeverShowAgainScope } from 'vs/platform/notification/common/notification';\nimport { IBrowserTerminalConfigHelper } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { basename } from 'vs/base/common/path';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstallRecommendedExtensionAction } from 'vs/workbench/contrib/extensions/browser/extensionsActions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { XTermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\nimport { IShellLaunchConfig } from 'vs/platform/terminal/common/terminal';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst MINIMUM_FONT_SIZE = 6;\nconst MAXIMUM_FONT_SIZE = 25;\n\n/**\n * Encapsulates terminal configuration logic, the primary purpose of this file is so that platform\n * specific test cases can be written.\n */\nexport class TerminalConfigHelper implements IBrowserTerminalConfigHelper {\n\tpublic panelContainer: HTMLElement | undefined;\n\n\tprivate _charMeasureElement: HTMLElement | undefined;\n\tprivate _lastFontMeasurement: ITerminalFont | undefined;\n\tprivate _linuxDistro: LinuxDistro = LinuxDistro.Unknown;\n\tpublic config!: ITerminalConfiguration;\n\n\tprivate readonly _onConfigChanged = new Emitter<void>();\n\tpublic get onConfigChanged(): Event<void> { return this._onConfigChanged.event; }\n\n\tpublic constructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IExtensionManagementService private readonly _extensionManagementService: IExtensionManagementService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tthis._updateConfig();\n\t\tthis._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TERMINAL_CONFIG_SECTION)) {\n\t\t\t\tthis._updateConfig();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic setLinuxDistro(linuxDistro: LinuxDistro) {\n\t\tthis._linuxDistro = linuxDistro;\n\t}\n\n\tprivate _updateConfig(): void {\n\t\tconst configValues = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION);\n\t\tconfigValues.fontWeight = this._normalizeFontWeight(configValues.fontWeight, DEFAULT_FONT_WEIGHT);\n\t\tconfigValues.fontWeightBold = this._normalizeFontWeight(configValues.fontWeightBold, DEFAULT_BOLD_FONT_WEIGHT);\n\n\t\tthis.config = configValues;\n\t\tthis._onConfigChanged.fire();\n\t}\n\n\tpublic configFontIsMonospace(): boolean {\n\t\tconst fontSize = 15;\n\t\tconst fontFamily = this.config.fontFamily || this._configurationService.getValue<IEditorOptions>('editor').fontFamily || EDITOR_FONT_DEFAULTS.fontFamily;\n\t\tconst i_rect = this._getBoundingRectFor('i', fontFamily, fontSize);\n\t\tconst w_rect = this._getBoundingRectFor('w', fontFamily, fontSize);\n\n\t\t// Check for invalid bounds, there is no reason to believe the font is not monospace\n\t\tif (!i_rect || !w_rect || !i_rect.width || !w_rect.width) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn i_rect.width === w_rect.width;\n\t}\n\n\tprivate _createCharMeasureElementIfNecessary(): HTMLElement {\n\t\tif (!this.panelContainer) {\n\t\t\tthrow new Error('Cannot measure element when terminal is not attached');\n\t\t}\n\t\t// Create charMeasureElement if it hasn't been created or if it was orphaned by its parent\n\t\tif (!this._charMeasureElement || !this._charMeasureElement.parentElement) {\n\t\t\tthis._charMeasureElement = document.createElement('div');\n\t\t\tthis.panelContainer.appendChild(this._charMeasureElement);\n\t\t}\n\t\treturn this._charMeasureElement;\n\t}\n\n\tprivate _getBoundingRectFor(char: string, fontFamily: string, fontSize: number): ClientRect | DOMRect | undefined {\n\t\tlet charMeasureElement: HTMLElement;\n\t\ttry {\n\t\t\tcharMeasureElement = this._createCharMeasureElementIfNecessary();\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst style = charMeasureElement.style;\n\t\tstyle.display = 'inline-block';\n\t\tstyle.fontFamily = fontFamily;\n\t\tstyle.fontSize = fontSize + 'px';\n\t\tstyle.lineHeight = 'normal';\n\t\tcharMeasureElement.innerText = char;\n\t\tconst rect = charMeasureElement.getBoundingClientRect();\n\t\tstyle.display = 'none';\n\n\t\treturn rect;\n\t}\n\n\tprivate _measureFont(fontFamily: string, fontSize: number, letterSpacing: number, lineHeight: number): ITerminalFont {\n\t\tconst rect = this._getBoundingRectFor('X', fontFamily, fontSize);\n\n\t\t// Bounding client rect was invalid, use last font measurement if available.\n\t\tif (this._lastFontMeasurement && (!rect || !rect.width || !rect.height)) {\n\t\t\treturn this._lastFontMeasurement;\n\t\t}\n\n\t\tthis._lastFontMeasurement = {\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tletterSpacing,\n\t\t\tlineHeight,\n\t\t\tcharWidth: 0,\n\t\t\tcharHeight: 0\n\t\t};\n\n\t\tif (rect && rect.width && rect.height) {\n\t\t\tthis._lastFontMeasurement.charHeight = Math.ceil(rect.height);\n\t\t\t// Char width is calculated differently for DOM and the other renderer types. Refer to\n\t\t\t// how each renderer updates their dimensions in xterm.js\n\t\t\tif (this.config.gpuAcceleration === 'off') {\n\t\t\t\tthis._lastFontMeasurement.charWidth = rect.width;\n\t\t\t} else {\n\t\t\t\tconst scaledCharWidth = Math.floor(rect.width * window.devicePixelRatio);\n\t\t\t\tconst scaledCellWidth = scaledCharWidth + Math.round(letterSpacing);\n\t\t\t\tconst actualCellWidth = scaledCellWidth / window.devicePixelRatio;\n\t\t\t\tthis._lastFontMeasurement.charWidth = actualCellWidth - Math.round(letterSpacing) / window.devicePixelRatio;\n\t\t\t}\n\t\t}\n\n\t\treturn this._lastFontMeasurement;\n\t}\n\n\t/**\n\t * Gets the font information based on the terminal.integrated.fontFamily\n\t * terminal.integrated.fontSize, terminal.integrated.lineHeight configuration properties\n\t */\n\tpublic getFont(xtermCore?: XTermCore, excludeDimensions?: boolean): ITerminalFont {\n\t\tconst editorConfig = this._configurationService.getValue<IEditorOptions>('editor');\n\n\t\tlet fontFamily = this.config.fontFamily || editorConfig.fontFamily || EDITOR_FONT_DEFAULTS.fontFamily;\n\t\tlet fontSize = this._clampInt(this.config.fontSize, MINIMUM_FONT_SIZE, MAXIMUM_FONT_SIZE, EDITOR_FONT_DEFAULTS.fontSize);\n\n\t\t// Work around bad font on Fedora/Ubuntu\n\t\tif (!this.config.fontFamily) {\n\t\t\tif (this._linuxDistro === LinuxDistro.Fedora) {\n\t\t\t\tfontFamily = '\\'DejaVu Sans Mono\\', monospace';\n\t\t\t}\n\t\t\tif (this._linuxDistro === LinuxDistro.Ubuntu) {\n\t\t\t\tfontFamily = '\\'Ubuntu Mono\\', monospace';\n\n\t\t\t\t// Ubuntu mono is somehow smaller, so set fontSize a bit larger to get the same perceived size.\n\t\t\t\tfontSize = this._clampInt(fontSize + 2, MINIMUM_FONT_SIZE, MAXIMUM_FONT_SIZE, EDITOR_FONT_DEFAULTS.fontSize);\n\t\t\t}\n\t\t}\n\n\t\tconst letterSpacing = this.config.letterSpacing ? Math.max(Math.floor(this.config.letterSpacing), MINIMUM_LETTER_SPACING) : DEFAULT_LETTER_SPACING;\n\t\tconst lineHeight = this.config.lineHeight ? Math.max(this.config.lineHeight, 1) : DEFAULT_LINE_HEIGHT;\n\n\t\tif (excludeDimensions) {\n\t\t\treturn {\n\t\t\t\tfontFamily,\n\t\t\t\tfontSize,\n\t\t\t\tletterSpacing,\n\t\t\t\tlineHeight\n\t\t\t};\n\t\t}\n\n\t\t// Get the character dimensions from xterm if it's available\n\t\tif (xtermCore) {\n\t\t\tif (xtermCore._renderService && xtermCore._renderService.dimensions?.actualCellWidth && xtermCore._renderService.dimensions?.actualCellHeight) {\n\t\t\t\treturn {\n\t\t\t\t\tfontFamily,\n\t\t\t\t\tfontSize,\n\t\t\t\t\tletterSpacing,\n\t\t\t\t\tlineHeight,\n\t\t\t\t\tcharHeight: xtermCore._renderService.dimensions.actualCellHeight / lineHeight,\n\t\t\t\t\tcharWidth: xtermCore._renderService.dimensions.actualCellWidth - Math.round(letterSpacing) / window.devicePixelRatio\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Fall back to measuring the font ourselves\n\t\treturn this._measureFont(fontFamily, fontSize, letterSpacing, lineHeight);\n\t}\n\n\tprivate _clampInt<T>(source: any, minimum: number, maximum: number, fallback: T): number | T {\n\t\tlet r = parseInt(source, 10);\n\t\tif (isNaN(r)) {\n\t\t\treturn fallback;\n\t\t}\n\t\tif (typeof minimum === 'number') {\n\t\t\tr = Math.max(minimum, r);\n\t\t}\n\t\tif (typeof maximum === 'number') {\n\t\t\tr = Math.min(maximum, r);\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate recommendationsShown = false;\n\n\tpublic async showRecommendations(shellLaunchConfig: IShellLaunchConfig): Promise<void> {\n\t\tif (this.recommendationsShown) {\n\t\t\treturn;\n\t\t}\n\t\tthis.recommendationsShown = true;\n\n\t\tif (isWindows && shellLaunchConfig.executable && basename(shellLaunchConfig.executable).toLowerCase() === 'wsl.exe') {\n\t\t\tconst exeBasedExtensionTips = this.productService.exeBasedExtensionTips;\n\t\t\tif (!exeBasedExtensionTips || !exeBasedExtensionTips.wsl) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst extId = Object.keys(exeBasedExtensionTips.wsl.recommendations).find(extId => exeBasedExtensionTips.wsl.recommendations[extId].important);\n\t\t\tif (extId && ! await this.isExtensionInstalled(extId)) {\n\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t'useWslExtension.title', \"The '{0}' extension is recommended for opening a terminal in WSL.\", exeBasedExtensionTips.wsl.friendlyName),\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('install', 'Install'),\n\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\t\"terminalLaunchRecommendation:popup\" : {\n\t\t\t\t\t\t\t\t\t\"userReaction\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\t\"extensionId\": { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tthis.telemetryService.publicLog('terminalLaunchRecommendation:popup', { userReaction: 'install', extId });\n\t\t\t\t\t\t\t\tthis.instantiationService.createInstance(InstallRecommendedExtensionAction, extId).run();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t{\n\t\t\t\t\t\tsticky: true,\n\t\t\t\t\t\tneverShowAgain: { id: 'terminalConfigHelper/launchRecommendationsIgnore', scope: NeverShowAgainScope.GLOBAL },\n\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\t\"terminalLaunchRecommendation:popup\" : {\n\t\t\t\t\t\t\t\t\t\"userReaction\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tthis.telemetryService.publicLog('terminalLaunchRecommendation:popup', { userReaction: 'cancelled' });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async isExtensionInstalled(id: string): Promise<boolean> {\n\t\tconst extensions = await this._extensionManagementService.getInstalled();\n\t\treturn extensions.some(e => e.identifier.id === id);\n\t}\n\n\tprivate _normalizeFontWeight(input: any, defaultWeight: FontWeight): FontWeight {\n\t\tif (input === 'normal' || input === 'bold') {\n\t\t\treturn input;\n\t\t}\n\t\treturn this._clampInt(input, MINIMUM_FONT_WEIGHT, MAXIMUM_FONT_WEIGHT, defaultWeight);\n\t}\n}\n"]}