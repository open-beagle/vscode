{"version":3,"file":"terminalTypeAheadAddon.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/terminalTypeAheadAddon.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAchG,MAAM,GAAG,GAAG,MAAM,CAAC;IACnB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACtB,MAAM,WAAW,GAAG,GAAG,GAAG,MAAM,CAAC;IACjC,MAAM,WAAW,GAAG,GAAG,GAAG,MAAM,CAAC;IACjC,MAAM,WAAW,GAAG,GAAG,GAAG,GAAG,CAAC;IAC9B,MAAM,mBAAmB,GAAG,GAAG,GAAG,GAAG,CAAC;IACtC,MAAM,YAAY,GAAG,iBAAiB,CAAC;IACvC,MAAM,WAAW,GAAG,kCAAkC,CAAC;IACvD,MAAM,WAAW,GAAG,YAAY,CAAC;IAEjC,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,uBAAuB,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,6BAA6B;IAC5E,MAAM,uBAAuB,GAAG,CAAC,CAAC;IAClC,MAAM,wBAAwB,GAAG,GAAG,CAAC;IACrC,MAAM,uBAAuB,GAAG,GAAG,CAAC,CAAC,uDAAuD;IAE5F;;;;;;;;;;OAUG;IACH,MAAM,kBAAkB,GAAG,mCAAmC,CAAC;IAE/D,MAAM,IAAI,GAAG,CAAC,QAAkB,EAAa,EAAE,CAAE,QAAgB,CAAC,KAAK,CAAC;IACxE,MAAM,WAAW,GAAG,CAAC,QAAkB,EAAE,EAAE;QAC1C,8DAA8D;IAC/D,CAAC,CAAC;IAEF,IAAW,mBAGV;IAHD,WAAW,mBAAmB;QAC7B,iCAAU,CAAA;QACV,qCAAc,CAAA;IACf,CAAC,EAHU,mBAAmB,KAAnB,mBAAmB,QAG7B;IAQD,MAAM,MAAM;QAqBX,YAA4B,IAAY,EAAkB,IAAY,EAAmB,MAAe;YAA5E,SAAI,GAAJ,IAAI,CAAQ;YAAkB,SAAI,GAAJ,IAAI,CAAQ;YAAmB,WAAM,GAAN,MAAM,CAAS;YApBhG,OAAE,GAAG,CAAC,CAAC;YACP,OAAE,GAAG,CAAC,CAAC;YACP,WAAM,GAAG,CAAC,CAAC;YAmBlB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;YACzB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5B,CAAC;QApBD,IAAW,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC;QAChB,CAAC;QAED,IAAW,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC;QAChB,CAAC;QAED,IAAW,KAAK;YACf,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAED,IAAW,UAAU;YACpB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;QACvD,CAAC;QAQM,OAAO;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QAEM,OAAO,CAAC,QAAsB;;YACpC,OAAO,MAAA,IAAI,CAAC,OAAO,EAAE,0CAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC;QAEM,MAAM,CAAC,UAAuB;YACpC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1D,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;QAC/B,CAAC;QAEM,KAAK;YACX,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACxD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACf,OAAO,CAAC,CAAC;QACV,CAAC;QAEM,IAAI,CAAC,CAAS,EAAE,CAAS;YAC/B,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;QAC/B,CAAC;QAEM,KAAK,CAAC,IAAY,CAAC,EAAE,IAAY,CAAC;YACxC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;QAC/B,CAAC;QAEM,eAAe;YACrB,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACzB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC;gBACvB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;aACZ;YAED,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC;QAC/C,CAAC;KACD;IAED,MAAM,kBAAkB,GAAG,CAAC,CAAU,EAAE,MAAc,EAAE,SAAiB,EAAE,EAAE;QAC5E,IAAI,oBAAoB,GAAG,KAAK,CAAC;QACjC,IAAI,SAAS,GAAG,CAAC,EAAE;YAClB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,IAAI,IAA6B,CAAC;QAClC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAE,CAAA,EAAE;gBACrB,OAAO;aACP;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC5B,IAAI,oBAAoB,EAAE;oBACzB,MAAM;iBACN;aACD;iBAAM;gBACN,oBAAoB,GAAG,IAAI,CAAC;aAC5B;YAED,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACxB;QAED,IAAI,SAAS,GAAG,CAAC,EAAE;YAClB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,qEAAqE;SACtF;IACF,CAAC,CAAC;IAEF,IAAW,WAOV;IAPD,WAAW,WAAW;QACrB,2BAA2B;QAC3B,mDAAO,CAAA;QACP,sBAAsB;QACtB,mDAAO,CAAA;QACP,uEAAuE;QACvE,iDAAM,CAAA;IACP,CAAC,EAPU,WAAW,KAAX,WAAW,QAOrB;IA6CD,MAAM,YAAY;QAejB,YAA6B,KAAa;YAAb,UAAK,GAAL,KAAK,CAAQ;YAdnC,UAAK,GAAG,CAAC,CAAC;QAc6B,CAAC;QAZ/C,IAAW,SAAS;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,CAAC;QAED,IAAW,GAAG;YACb,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACzC,CAAC;QAED,IAAW,IAAI;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;QAID;;WAEG;QACI,OAAO,CAAC,IAAY;YAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;gBACpC,OAAO;aACP;YAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACb,CAAC;QAED;;WAEG;QACI,MAAM,CAAC,MAAc;YAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;gBAC3D,OAAO;aACP;YAED,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;YAC5B,OAAO,MAAM,CAAC;QACf,CAAC;QAED;;;;WAIG;QACI,YAAY,CAAC,MAAc;YACjC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;oBACtB,sBAA0B;iBAC1B;gBAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC7B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;oBACvB,uBAA2B;iBAC3B;aACD;YAED,uBAA2B;QAC5B,CAAC;QAED;;WAEG;QACI,KAAK,CAAC,EAAU;YACtB,MAAM,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE;gBACX,OAAO;aACP;YAED,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC9B,OAAO,KAAK,CAAC;QACd,CAAC;QAED;;WAEG;QACI,WAAW,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;YACxC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/C,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE;gBAC9B,OAAO,SAAS,CAAC;aACjB;YAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACb,CAAC;KACD;IAED;;;OAGG;IACH,MAAM,YAAY;QAAlB;YACiB,sBAAiB,GAAG,KAAK,CAAC;QAiB3C,CAAC;QAfO,KAAK;YACX,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,QAAQ;YACd,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,YAAY;YAClB,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,OAAO;YACb,uBAA2B;QAC5B,CAAC;KACD;IAED;;;OAGG;IACH,MAAM,iBAAiB;QAGtB,YAA4B,KAAkB;YAAlB,UAAK,GAAL,KAAK,CAAa;QAAI,CAAC;QAE5C,KAAK,CAAC,MAAe,EAAE,MAAc;YAC3C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,QAAQ,CAAC,MAAc;YAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,YAAY,CAAC,MAAc,EAAE,SAAiB;YACpD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAClC;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEM,OAAO,CAAC,KAAmB;YACjC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;KACD;IAEM,MAAM,6BAA6B,GAAG,CAAC,CAAU,EAA6D,EAAE,CACtH,CAAC,YAAY,iBAAiB,IAAI,CAAC,CAAC,KAAK,YAAY,mBAAmB,CAAC;IAD7D,QAAA,6BAA6B,iCACgC;IAE1E;;OAEG;IACH,MAAM,mBAAmB;QASxB,YAA6B,KAAqB,EAAmB,IAAY;YAApD,UAAK,GAAL,KAAK,CAAgB;YAAmB,SAAI,GAAJ,IAAI,CAAQ;YARjE,iBAAY,GAAG,IAAI,CAAC;QAQiD,CAAC;QAE/E,KAAK,CAAC,CAAU,EAAE,MAAc;YACtC,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI;gBACpB,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,UAAU,EAAE,aAAa,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;gBAC5F,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,UAAU,EAAE,aAAa,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;YAE9D,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEhB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACvD,CAAC;QAEM,QAAQ,CAAC,MAAc;YAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,EAAE,CAAC,CAAC,cAAc;aACzB;YAED,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YACvD,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3G,OAAO,CAAC,CAAC;QACV,CAAC;QAEM,YAAY,CAAC,MAAc,EAAE,KAAa;YAChD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,EAAE,CAAC,CAAC,cAAc;aACzB;YAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC1D,CAAC;QAEM,OAAO,CAAC,KAAmB,EAAE,UAAwB;YAC3D,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;YAE7B,kDAAkD;YAClD,OAAO,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,GAAG;YAErC,IAAI,KAAK,CAAC,GAAG,EAAE;gBACd,sBAA0B;aAC1B;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC7B,uBAA2B;aAC3B;YAED,IAAI,UAAU,YAAY,mBAAmB,EAAE;gBAC9C,cAAc;gBACd,MAAM,eAAe,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/E,IAAI,eAAe,oBAAwB,EAAE;oBAC5C,OAAO,eAAe,CAAC;iBACvB;aACD;YAED,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YACzB,uBAA2B;QAC5B,CAAC;KACD;IAED,MAAM,mBAAmB;QAQxB,YAA6B,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;QAAI,CAAC;QAE7C,KAAK,CAAC,CAAU,EAAE,MAAc;;YACtC,mGAAmG;YACnG,qEAAqE;YACrE,MAAM,UAAU,GAAG,CAAC,CAAA,MAAA,MAAM,CAAC,OAAO,EAAE,0CAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,CAAA,CAAC;YACpF,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI;gBACpB,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,aAAa,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACrF,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;YAEvD,OAAO,IAAI,GAAG,WAAW,CAAC;QAC3B,CAAC;QAEM,QAAQ,CAAC,MAAc;YAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,EAAE,CAAC,CAAC,cAAc;aACzB;YAED,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YACvD,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;aACxC;YAED,OAAO,aAAa,GAAG,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACvH,CAAC;QAEM,YAAY;YAClB,OAAO,EAAE,CAAC;QACX,CAAC;QAEM,OAAO,CAAC,KAAmB;;YACjC,IAAI,MAAA,IAAI,CAAC,SAAS,0CAAE,UAAU,EAAE;gBAC/B,MAAM,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;gBAC3C,IAAI,EAAE,oBAAwB,EAAE;oBAC/B,OAAO,EAAE,CAAC;iBACV;gBAED,MAAM,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAI,EAAE,oBAAwB,EAAE;oBAC/B,OAAO,EAAE,CAAC;iBACV;aACD;YAED,uBAA2B;QAC5B,CAAC;KACD;IAED,MAAM,iBAAiB;QAGf,KAAK,CAAC,CAAU,EAAE,MAAc;YACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,QAAQ,CAAC,MAAc;YAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClE,CAAC;QAEM,YAAY;YAClB,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACvC,CAAC;QAEM,OAAO,CAAC,KAAmB;YACjC,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;KACD;IAED;;;OAGG;IACH,MAAM,kBAAmB,SAAQ,iBAAiB;QACjC,KAAK,CAAC,CAAU,EAAE,MAAc;YAC/C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,OAAO,KAAK,CAAC;QACd,CAAC;QAEe,OAAO,CAAC,KAAmB;YAC1C,qEAAqE;YACrE,MAAM,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,oBAAwB,EAAE;gBAC9B,4EAA4E;gBAC5E,MAAM,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBACnD,OAAO,EAAE,mBAAuB,CAAC,CAAC,gBAAoB,CAAC,CAAC,CAAC,CAAC;aAC1D;YAED,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;KACD;IAED,MAAM,oBAAoB;QAQzB,YACkB,SAA8B,EAC9B,WAAoB,EACpB,MAAc;YAFd,cAAS,GAAT,SAAS,CAAqB;YAC9B,gBAAW,GAAX,WAAW,CAAS;YACpB,WAAM,GAAN,MAAM,CAAQ;QAC5B,CAAC;QAEE,KAAK,CAAC,MAAe,EAAE,MAAc;YAC3C,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YACrC,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAElE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;YAChD,MAAM,KAAK,GAAG,SAAS,mBAA6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9D,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,WAAW,EAAE;gBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChC,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;iBAC1C;aACD;iBAAM;gBACN,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,OAAO,GAAG;gBACd,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBACrC,YAAY;gBACZ,SAAS;gBACT,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;aAClC,CAAC;YAEF,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACjC,CAAC;QAEM,QAAQ,CAAC,MAAc;YAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,OAAO,EAAE,CAAC;aACV;YAED,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAClF,CAAC;QAEM,YAAY;YAClB,OAAO,EAAE,CAAC,CAAC,2BAA2B;QACvC,CAAC;QAEM,OAAO,CAAC,KAAmB;YACjC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,uBAA2B;aAC3B;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;YAG7C,yEAAyE;YACzE,sEAAsE;YACtE,eAAe;YACf,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,SAAS,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;gBACtD,uBAA2B;aAC3B;YAED,oDAAoD;YACpD,IAAI,SAAS,mBAA6B,EAAE;gBAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;oBACtC,uBAA2B;iBAC3B;aACD;YAED,iDAAiD;YACjD,IAAI,WAAW,EAAE;gBAChB,MAAM,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC1C,IAAI,CAAC,oBAAwB,EAAE;oBAC9B,OAAO,CAAC,CAAC;iBACT;aACD;YAED,6CAA6C;YAC7C,OAAO,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,SAAS,EAAE,CAAC,CAAC;QAC1D,CAAC;KACD;IAED,MAAa,eAAgB,SAAQ,sBAAU;QAwD9C,YAAY,QAA4B;YACvC,KAAK,EAAE,CAAC;YAxDQ,UAAK,GAA0C,EAAE,CAAC;YAC3D,UAAK,GAAG,CAAC,CAAC;YACD,gBAAW,GAAG,IAAI,OAAO,EAAuB,CAAC;YACjD,kBAAa,GAAG,IAAI,eAAO,EAAQ,CAAC;YACrC,aAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YAqDnD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9E,CAAC;QAtDD;;WAEG;QACH,IAAW,QAAQ;YAClB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,KAAK,MAAM,CAAC,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACrC,IAAI,OAAO,EAAE;oBACZ,YAAY,EAAE,CAAC;iBACf;aACD;YAED,OAAO,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;QAChD,CAAC;QAED;;WAEG;QACH,IAAW,UAAU;YACpB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC1B,CAAC;QAED;;WAEG;QACH,IAAW,OAAO;YACjB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAErF,OAAO;gBACN,KAAK,EAAE,SAAS,CAAC,MAAM;gBACvB,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;gBACjB,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACnD,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;aACpC,CAAC;QACH,CAAC;QAED;;WAEG;QACH,IAAW,UAAU;YACpB,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;YACpB,KAAK,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC5C,IAAI,OAAO,EAAE;oBACZ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;iBAC7B;aACD;YAED,OAAO,GAAG,CAAC;QACZ,CAAC;QASO,QAAQ,CAAC,OAAgB,EAAE,UAAuB;YACzD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAE,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;KACD;IArED,0CAqEC;IAED,MAAa,kBAAkB;QAgE9B,YAA4B,QAAkB,EAAmB,KAAqB;YAA1D,aAAQ,GAAR,QAAQ,CAAU;YAAmB,UAAK,GAAL,KAAK,CAAgB;YA/DtF;;;eAGG;YACK,aAAQ,GAAwC,EAAE,CAAC;YAE3D;;eAEG;YACK,eAAU,GAAG,CAAC,CAAC;YAuBvB;;;;eAIG;YACK,oBAAe,GAAG,KAAK,CAAC;YAOf,iBAAY,GAAG,IAAI,eAAO,EAAe,CAAC;YAC3C,sBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC3C,kBAAa,GAAG,IAAI,eAAO,EAAe,CAAC;YAC5C,uBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YAC7C,qBAAgB,GAAG,IAAI,eAAO,EAAe,CAAC;YAC/C,0BAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAcsB,CAAC;QAZ3F,IAAY,4BAA4B;YACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;QAED,IAAW,oBAAoB;YAC9B,OAAO,IAAI,CAAC,eAAe,CAAC;QAC7B,CAAC;QAED,IAAW,MAAM;YAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC;QAIM,kBAAkB,CAAC,IAAa;YACtC,IAAI,IAAI,KAAK,IAAI,CAAC,eAAe,EAAE;gBAClC,OAAO;aACP;YAED,yCAAyC;YACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,MAAM,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC;YAClD,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7F;iBAAM;gBACN,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aAClG;QACF,CAAC;QAED;;WAEG;QACI,kBAAkB;YACxB,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtC,IAAI,IAAI,CAAC,eAAe,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE;qBAC7D,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9D;YAED,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,CAAC;QAED;;WAEG;QACI,iBAAiB,CAAC,KAAa;;YACrC,MAAM,aAAa,GAAG,KAAK,CAAC;YAC5B,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;aAC7B;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,OAAO,KAAK,CAAC;aACb;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,EAAE;gBACZ,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,OAAO,KAAK,CAAC;aACb;YAED,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACzC,MAAM,qBAAqB,GAAG,GAAG,EAAE;gBAClC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC9C,IAAI,IAAI,EAAE;oBACT,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClB;YACF,CAAC,CAAC;YAEF,QAAQ,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;gBAC9D,qBAAqB,EAAE,CAAC;gBAExB,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAChD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,qBAAqB,GAAG,MAAM,CAAC,KAAK,CAAC;gBACzC,QAAQ,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;oBACpD;wBACC,yEAAyE;wBACzE,mDAAmD;wBACnD,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,qBAAqB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC/D,IAAI,GAAG,KAAK,WAAW,EAAE;4BACxB,MAAM,IAAI,MAAA,UAAU,CAAC,YAAY,+CAAvB,UAAU,EAAgB,MAAM,EAAE,KAAK,CAAC,CAAC;yBACnD;6BAAM;4BACN,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,mCAAmC;4BAC1F,MAAM,IAAI,KAAK,CAAC;yBAChB;wBAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;wBAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;wBACtB,MAAM;oBACP;wBACC,iEAAiE;wBACjE,0BAA0B;wBAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;wBACtD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;wBAC5B,MAAM,QAAQ,CAAC;oBAChB;wBACC,iEAAiE;wBACjE,wDAAwD;wBACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;wBAC5E,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACpF,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;4BACzC,wEAAwE;4BACxE,8CAA8C;4BAC9C,MAAM,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;yBAC1E;wBACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACpC,MAAM,QAAQ,CAAC;iBAChB;aACD;YAED,qBAAqB,EAAE,CAAC;YAExB,uEAAuE;YACvE,mBAAmB;YACnB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC;gBACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC5B;YAED,iFAAiF;YACjF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;gBACjE,KAAK,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACvC,IAAI,GAAG,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;wBACjC,MAAM;qBACN;oBACD,IAAI,CAAC,CAAC,YAAY,EAAE;wBACnB,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC;qBACjC;oBAED,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;iBACvD;aACD;YAED,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC1B,OAAO,aAAa,CAAC;aACrB;YAED,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,KAAK,EAAE;gBAC5C,OAAO,MAAM,CAAC;aACd;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;aACjD;YAED,yCAAyC;YACzC,MAAM,GAAG,WAAW,GAAG,MAAM,GAAG,WAAW,CAAC;YAE5C,OAAO,MAAM,CAAC;QACf,CAAC;QAED;;;WAGG;QACK,oBAAoB;YAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC7B,CAAC;QAED;;WAEG;QACI,aAAa,CAAC,MAAe,EAAE,UAAuB;YAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEnC,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;gBAC7C,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvD,OAAO,KAAK,CAAC;aACb;YAED,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,CAAC,kDAAkD;YAEpF,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;gBACjC,IAAI,UAAU,CAAC,YAAY,EAAE;oBAC5B,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC;iBACjC;gBACD,iDAAiD;gBACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC1B;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QASM,WAAW,CAAC,MAAgB,EAAE,UAAwB;YAC5D,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,MAAM,IAAI,UAAU,EAAE;gBACzB,oEAAoE;gBACpE,wEAAwE;gBACxE,yDAAyD;gBACzD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxE,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;aACvD;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,OAAO,CAAC;QAChB,CAAC;QAED;;WAEG;QACI,OAAO;;YACb,OAAO,MAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,0CAAE,CAAC,CAAC;QACnD,CAAC;QAED;;WAEG;QACI,SAAS;;YACf,OAAO,MAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,0CAAE,CAAC,CAAC;QAC5B,CAAC;QAED;;WAEG;QACI,cAAc,CAAC,MAAe;YACpC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC1B,IAAI,IAAI,CAAC,eAAe,EAAE;oBACzB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC3B;gBACD,IAAI,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAClF;YAED,OAAO,IAAI,CAAC,eAAe,CAAC;QAC7B,CAAC;QAED;;;WAGG;QACI,eAAe,CAAC,MAAe;YACrC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;aAC3D;YAED,OAAO,IAAI,CAAC,eAAe,CAAC;QAC7B,CAAC;QAEM,WAAW;YACjB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QAClC,CAAC;QAEO,eAAe;YACtB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3C,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QACtD,CAAC;KACD;IApUD,gDAoUC;IAED;;OAEG;IACH,MAAM,gBAAgB,GAAG,CAAC,IAAqB,EAAE,EAAE;QAClD,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAAE,OAAO,CAAC,CAAC,CAAC,CAAC;SAAE;QAE9C,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACpC,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACnC,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACtC,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACzC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACrC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QACvC,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;QAEzC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC;SAAE;QAChI,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAAE;QAChE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAAE;QAE1C,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC;SAAE;QAChI,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAAE;QAChE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAAE;QAE1C,OAAO,IAAI,CAAC;IACb,CAAC,CAAC;IAEF;;OAEG;IACH,MAAM,eAAe,GAAG,CAAC,IAAqB,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAEhG,MAAM,gBAAgB,GAAG,CAAI,CAAmB,EAAE,EAAU,EAAE,CAAmB,EAAE,EAAE;QACpF,IAAI,CAAC,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE;YAC7B,OAAO,KAAK,CAAC;SACb;QAED,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC3C,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;gBACpB,OAAO,KAAK,CAAC;aACb;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC,CAAC;IAEF;;OAEG;IACH,MAAM,aAAa,GAAG,CAAC,MAA6B,EAAE,GAAW,EAAE,EAAE;QACpE,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,GAAG;YACF,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,GAAG;oBACF,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;wBAClB,MAAM,GAAG,CAAC,CAAC;qBACX;oBACD,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;gBACnE,MAAM;aACN;YACD,sDAAsD;YACtD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC;mBACxC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,EAAE;gBAC7C,MAAM;aACN;YACD,4CAA4C;YAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;gBACZ,MAAM,GAAG,CAAC,CAAC;aACX;SACD,QAAQ,EAAE,OAAO,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;QAE5E,OAAO,OAAO,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,cAAc;QAkBnB,YAAY,KAA+C,EAAmB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;YAbhG;;;eAGG;YACK,2BAAsB,GAAG,CAAC,CAAC;YAUlC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QAnBO,MAAM,CAAC,WAAW,CAAC,IAA2B;YACrD,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;QACnC,CAAC;QAmBD;;;WAGG;QACI,mBAAmB,CAAC,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,sBAAsB,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC;QAED;;WAEG;QACI,aAAa;YACnB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE;gBAChF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzB,OAAO,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;QAED;;WAEG;QAEI,oBAAoB;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC;QAED;;WAEG;QACI,OAAO;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC;QAEO,YAAY;;YACnB,MAAA,IAAI,CAAC,UAAU,0CAAE,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC7B,CAAC;QAEO,aAAa,CAAC,IAA2B;YAChD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG;gBACjC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAE9C,IAAI,IAAI,CAAC,sBAAsB,EAAE;oBAChC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;wBAC7C,IAAI,CAAC,sBAAsB,EAAE,CAAC;wBAC9B,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAC1B,SAAS;qBACT;oBACD,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;wBAC9C,IAAI,CAAC,sBAAsB,EAAE,CAAC;wBAC9B,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAC3B,SAAS;qBACT;iBACD;gBAED,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5E,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBAC1B,KAAK,CAAC;wBACL,IAAI,CAAC,KAAK,CAAC,EAAE;4BACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;yBACxB;6BAAM,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;4BAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;yBACrB;wBACD,MAAM;oBACP,KAAK,CAAC;wBACL,IAAI,CAAC,KAAK,CAAC,EAAE;4BACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;yBACxB;6BAAM,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;4BAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;yBACrB;wBACD,MAAM;oBACP,KAAK,EAAE;wBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE;4BACrC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;yBACrB;6BAAM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;4BACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAa,CAAC;yBACrD;wBACD,MAAM;oBACP;wBACC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;4BAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;yBAC/B;6BAAM,IAAI,CAAC,KAAK,CAAC,EAAE;4BACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;yBACtC;oBACF,QAAQ;iBACR;gBAED,CAAC,IAAI,KAAK,CAAC;aACX;YAED,IAAI,YAAY,KAAK,IAAI,CAAC,QAAQ,EAAE;gBACnC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtD;QACF,CAAC;QAED;;WAEG;QACI,QAAQ,CAAC,KAA+C;YAC9D,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjD,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,CAAC;QAEO,OAAO,CAAC,KAA+C;YAC9D,QAAQ,KAAK,EAAE;gBACd,KAAK,MAAM;oBACV,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC3C,KAAK,KAAK;oBACT,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC3C,KAAK,QAAQ;oBACZ,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC3C,KAAK,YAAY;oBAChB,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC3C,KAAK,UAAU;oBACd,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC3C;oBACC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,aAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;oBAC9C,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;aACxD;QACF,CAAC;KACD;IAvGA;QADC,CAAA,GAAA,qBAAQ,CAAA,CAAC,IAAI,CAAC;8DAGd;IAuGF,MAAM,oBAAoB,GAAG,CAAC,QAAQ,GAAG,qCAA0B,EAAE,EAAE,CACtE,IAAI,MAAM,CAAC,OAAO,QAAQ,CAAC,GAAG,CAAC,gCAAsB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAE9E,IAAkB,gBAOjB;IAPD,WAAkB,gBAAgB;QACjC,2CAA2C;QAC3C,6DAAO,CAAA;QACP,yCAAyC;QACzC,2EAAc,CAAA;QACd,uCAAuC;QACvC,iEAAS,CAAA;IACV,CAAC,EAPiB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAOjC;IAED,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,sBAAU;QAc7C,YACS,cAAuC,EAC9B,MAA4B,EACT,gBAAmC;YAEvE,KAAK,EAAE,CAAC;YAJA,mBAAc,GAAd,cAAc,CAAyB;YAC9B,WAAM,GAAN,MAAM,CAAsB;YACT,qBAAgB,GAAhB,gBAAgB,CAAmB;YAfhE,uBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC;YAClE,qBAAgB,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;YAGrF,kBAAa,GAAG,EAAE,CAAC;YAc1B,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,WAAC,OAAA,MAAA,IAAI,CAAC,uBAAuB,0CAAE,OAAO,EAAE,CAAA,EAAA,CAAC,CAAC,CAAC;QAC7E,CAAC;QAEM,QAAQ,CAAC,QAAkB;YACjC,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC;YACpH,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACvF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE9E,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,KAAK,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBACrC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBACnC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvB,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE;gBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAClD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC;gBACvE,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;gBAC1F,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE;;gBACtD,IAAI,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,SAAS,4BAAoC,IAAI,CAAA,GAAA,qCAA6B,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE;oBACzH,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;wBAC7E,IAAI,CAAC,OAAO,CAAC,SAAS,oBAA6B,CAAC;qBACpD;iBACD;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1F,IAAI,aAAkB,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClC,IAAI,CAAC,aAAa,EAAE;oBACnB,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;wBAC/B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;wBAC7B,aAAa,GAAG,SAAS,CAAC;oBAC3B,CAAC,EAAE,uBAAuB,CAAC,CAAC;iBAC5B;gBAED,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1B,KAAK,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;gBAED,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,KAAK;YACX,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC1B,CAAC;QAEO,wBAAwB;;YAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClC,OAAO;aACP;YAED,MAAA,IAAI,CAAC,uBAAuB,0CAAE,OAAO,EAAE,CAAC;YACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,0CAAE,iBAAiB,MAAK,KAAK,EAAE;gBACzF,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;gBACzC,OAAO;aACP;YAED,IAAI,CAAC,uBAAuB,GAAG,CAAA,GAAA,yBAAiB,CAAA,CAC/C,GAAG,EAAE;;gBACJ,MAAA,IAAI,CAAC,QAAQ,0CAAE,kBAAkB,EAAE,CAAC;gBACpC,IAAI,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,SAAS,4BAAoC,EAAE;oBAChE,IAAI,CAAC,OAAO,CAAC,SAAS,kBAA2B,CAAC;iBAClD;YACF,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAC5C,CAAC;QACH,CAAC;QAED;;;;;;WAMG;QAEO,wBAAwB,CAAC,KAAsB,EAAE,QAA4B;YACtF,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC;QAES,2BAA2B,CAAC,KAAsB,EAAE,QAA4B;YACzF,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBACnD,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;aACnC;iBAAM,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE;gBACvC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;aACnC;iBAAM,IAAI,IAAI,CAAC,kBAAkB,KAAK,CAAC,EAAE;gBACzC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM,IAAI,KAAK,CAAC,UAAU,GAAG,uBAAuB,IAAI,KAAK,CAAC,QAAQ,GAAG,wBAAwB,EAAE;gBACnG,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;gBACrC,IAAI,OAAO,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBACvC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;iBAClC;qBAAM,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,GAAG,uBAAuB,EAAE;oBACvE,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;iBACnC;aACD;QACF,CAAC;QAEO,gBAAgB,CAAC,KAAsB;YAC9C;;;;;;;;eAQG;YACH,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,sBAAsB,kCAClD,KAAK,CAAC,OAAO,KAChB,kBAAkB,EAAE,KAAK,CAAC,QAAQ,IACjC,CAAC;QACJ,CAAC;QAEO,UAAU,CAAC,IAAY;;YAC9B,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,MAAK,QAAQ,EAAE;gBAC5D,OAAO;aACP;YAED,mDAAmD;YAEnD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACxC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;YAEtC,yEAAyE;YACzE,wCAAwC;YACxC,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE;gBACjE,IAAI,CAAA,MAAA,MAAA,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAC,CAAC,CAAC,0CAAE,QAAQ,EAAE,MAAK,GAAG,EAAE;oBAClF,OAAO;iBACP;aACD;YAED,uEAAuE;YACvE,yEAAyE;YACzE,wEAAwE;YACxE,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9C,IAAI,OAAO,MAAK,MAAA,IAAI,CAAC,OAAO,0CAAE,CAAC,CAAA,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,SAAS,iBAA0B,EAAE,CAAC;aACvH;iBAAM;gBACN,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC1E,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9F;YAED,MAAM,iBAAiB,GAAG,CAAC,CAAc,EAAE,EAAE,CAC5C,IAAI,CAAC,QAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAQ,CAAC,SAAS;gBAClE,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE5C,MAAM,kBAAkB,GAAG,CAAC,CAAc,EAAE,EAAE,CAC7C,IAAI,CAAC,QAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAQ,CAAC,OAAO,GAAG,CAAC;gBACpE,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE5C,0HAA0H;YAC1H,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;gBAC5B,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY;oBAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;oBACzC,IAAI,QAAQ,IAAI,QAAQ,YAAY,mBAAmB,EAAE;wBACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;qBAC5B;oBAED,qEAAqE;oBACrE,qCAAqC;oBACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE;wBACvC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;qBACpC;oBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAQ,CAAC,SAAS,EAAE;wBACvE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACnF;yBAAM;wBACN,gDAAgD;wBAChD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;wBACvB,IAAI,CAAC,QAAS,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACtF;oBAED,SAAS;iBACT;gBAED,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,WAAW;oBAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBACpC,MAAM,UAAU,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,cAAe,EAAE,IAAI,CAAC,CAAC;oBACvE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,oBAA6B,EAAE;wBACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;wBAC9C,IAAI,CAAC,OAAO,CAAC,SAAS,yBAAkC,CAAC;qBACzD;yBAAM;wBACN,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;qBAChD;oBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE;wBAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,kBAAkB,EAAE,CAAC,CAAC;qBAC5D;oBACD,SAAS;iBACT;gBAED,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC3C,IAAI,QAAQ,EAAE;oBACb,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAwB,CAAC;oBACrD,MAAM,CAAC,GAAG,IAAI,oBAAoB,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvF,IAAI,SAAS,mBAA6B,EAAE;wBAC3C,iBAAiB,CAAC,CAAC,CAAC,CAAC;qBACrB;yBAAM;wBACN,kBAAkB,CAAC,CAAC,CAAC,CAAC;qBACtB;oBACD,SAAS;iBACT;gBAED,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;oBAC7B,kBAAkB,CAAC,IAAI,oBAAoB,qBAA+B,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBACpF,SAAS;iBACT;gBAED,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;oBAC7B,iBAAiB,CAAC,IAAI,oBAAoB,iBAA2B,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC/E,SAAS;iBACT;gBAED,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE;oBAC/D,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,iBAAiB,EAAE,CAAC,CAAC;oBAC7D,SAAS;iBACT;gBAED,iBAAiB;gBACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC;gBACtD,MAAM;aACN;YAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,cAAe,CAAC,aAAa,EAAE,CAAC;aACrC;QACF,CAAC;QAEO,mBAAmB,CAAC,KAA8B;YACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACnB,OAAO;aACP;YAED,6DAA6D;YAC7D,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzD,4DAA4D;YAE5D,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACjC,CAAC;KACD,CAAA;IAvKA;QADC,CAAA,GAAA,qBAAQ,CAAA,CAAC,GAAG,CAAC;kEAGb;IA3GW,cAAc;QAiBxB,WAAA,6BAAiB,CAAA;OAjBP,cAAc,CAgR1B;IAhRY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout } from 'vs/base/common/async';\nimport { Color } from 'vs/base/common/color';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TerminalConfigHelper } from 'vs/workbench/contrib/terminal/browser/terminalConfigHelper';\nimport { XTermAttributes, XTermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\nimport { DEFAULT_LOCAL_ECHO_EXCLUDE, IBeforeProcessDataEvent, ITerminalConfiguration, ITerminalProcessManager } from 'vs/workbench/contrib/terminal/common/terminal';\nimport type { IBuffer, IBufferCell, IDisposable, ITerminalAddon, Terminal } from 'xterm';\n\nconst ESC = '\\x1b';\nconst CSI = `${ESC}[`;\nconst SHOW_CURSOR = `${CSI}?25h`;\nconst HIDE_CURSOR = `${CSI}?25l`;\nconst DELETE_CHAR = `${CSI}X`;\nconst DELETE_REST_OF_LINE = `${CSI}K`;\nconst CSI_STYLE_RE = /^\\x1b\\[[0-9;]*m/;\nconst CSI_MOVE_RE = /^\\x1b\\[?([0-9]*)(;[35])?O?([DC])/;\nconst NOT_WORD_RE = /[^a-z0-9]/i;\n\nconst statsBufferSize = 24;\nconst statsSendTelemetryEvery = 1000 * 60 * 5; // how often to collect stats\nconst statsMinSamplesToTurnOn = 5;\nconst statsMinAccuracyToTurnOn = 0.3;\nconst statsToggleOffThreshold = 0.5; // if latency is less than `threshold * this`, turn off\n\n/**\n * Codes that should be omitted from sending to the prediction engine and instead omitted directly:\n * - Hide cursor (DECTCEM): We wrap the local echo sequence in hide and show\n *   CSI ? 2 5 l\n * - Show cursor (DECTCEM): We wrap the local echo sequence in hide and show\n *   CSI ? 2 5 h\n * - Device Status Report (DSR): These sequence fire report events from xterm which could cause\n *   double reporting and potentially a stack overflow (#119472)\n *   CSI Ps n\n *   CSI ? Ps n\n */\nconst PREDICTION_OMIT_RE = /^(\\x1b\\[(\\??25[hl]|\\??[0-9;]+n))+/;\n\nconst core = (terminal: Terminal): XTermCore => (terminal as any)._core;\nconst flushOutput = (terminal: Terminal) => {\n\t// TODO: Flushing output is not possible anymore without async\n};\n\nconst enum CursorMoveDirection {\n\tBack = 'D',\n\tForwards = 'C',\n}\n\ninterface ICoordinate {\n\tx: number;\n\ty: number;\n\tbaseY: number;\n}\n\nclass Cursor implements ICoordinate {\n\tprivate _x = 0;\n\tprivate _y = 1;\n\tprivate _baseY = 1;\n\n\tpublic get x() {\n\t\treturn this._x;\n\t}\n\n\tpublic get y() {\n\t\treturn this._y;\n\t}\n\n\tpublic get baseY() {\n\t\treturn this._baseY;\n\t}\n\n\tpublic get coordinate(): ICoordinate {\n\t\treturn { x: this._x, y: this._y, baseY: this._baseY };\n\t}\n\n\tconstructor(public readonly rows: number, public readonly cols: number, private readonly buffer: IBuffer) {\n\t\tthis._x = buffer.cursorX;\n\t\tthis._y = buffer.cursorY;\n\t\tthis._baseY = buffer.baseY;\n\t}\n\n\tpublic getLine() {\n\t\treturn this.buffer.getLine(this._y + this._baseY);\n\t}\n\n\tpublic getCell(loadInto?: IBufferCell) {\n\t\treturn this.getLine()?.getCell(this._x, loadInto);\n\t}\n\n\tpublic moveTo(coordinate: ICoordinate) {\n\t\tthis._x = coordinate.x;\n\t\tthis._y = (coordinate.y + coordinate.baseY) - this._baseY;\n\t\treturn this.moveInstruction();\n\t}\n\n\tpublic clone() {\n\t\tconst c = new Cursor(this.rows, this.cols, this.buffer);\n\t\tc.moveTo(this);\n\t\treturn c;\n\t}\n\n\tpublic move(x: number, y: number) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this.moveInstruction();\n\t}\n\n\tpublic shift(x: number = 0, y: number = 0) {\n\t\tthis._x += x;\n\t\tthis._y += y;\n\t\treturn this.moveInstruction();\n\t}\n\n\tpublic moveInstruction() {\n\t\tif (this._y >= this.rows) {\n\t\t\tthis._baseY += this._y - (this.rows - 1);\n\t\t\tthis._y = this.rows - 1;\n\t\t} else if (this._y < 0) {\n\t\t\tthis._baseY -= this._y;\n\t\t\tthis._y = 0;\n\t\t}\n\n\t\treturn `${CSI}${this._y + 1};${this._x + 1}H`;\n\t}\n}\n\nconst moveToWordBoundary = (b: IBuffer, cursor: Cursor, direction: -1 | 1) => {\n\tlet ateLeadingWhitespace = false;\n\tif (direction < 0) {\n\t\tcursor.shift(-1);\n\t}\n\n\tlet cell: IBufferCell | undefined;\n\twhile (cursor.x >= 0) {\n\t\tcell = cursor.getCell(cell);\n\t\tif (!cell?.getCode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst chars = cell.getChars();\n\t\tif (NOT_WORD_RE.test(chars)) {\n\t\t\tif (ateLeadingWhitespace) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tateLeadingWhitespace = true;\n\t\t}\n\n\t\tcursor.shift(direction);\n\t}\n\n\tif (direction < 0) {\n\t\tcursor.shift(1); // we want to place the cursor after the whitespace starting the word\n\t}\n};\n\nconst enum MatchResult {\n\t/** matched successfully */\n\tSuccess,\n\t/** failed to match */\n\tFailure,\n\t/** buffer data, it might match in the future one more data comes in */\n\tBuffer,\n}\n\nexport interface IPrediction {\n\t/**\n\t * Whether applying this prediction can modify the style attributes of the\n\t * terminal. If so it means we need to reset the cursor style if it's\n\t * rolled back.\n\t */\n\treadonly affectsStyle?: boolean;\n\n\t/**\n\t * If set to false, the prediction will not be cleared if no input is\n\t * received from the server.\n\t */\n\treadonly clearAfterTimeout?: boolean;\n\n\t/**\n\t * Returns a sequence to apply the prediction.\n\t * @param buffer to write to\n\t * @param cursor position to write the data. Should advance the cursor.\n\t * @returns a string to be written to the user terminal, or optionally a\n\t * string for the user terminal and real pty.\n\t */\n\tapply(buffer: IBuffer, cursor: Cursor): string;\n\n\t/**\n\t * Returns a sequence to roll back a previous `apply()` call. If\n\t * `rollForwards` is not given, then this is also called if a prediction\n\t * is correct before show the user's data.\n\t */\n\trollback(cursor: Cursor): string;\n\n\t/**\n\t * If available, this will be called when the prediction is correct.\n\t */\n\trollForwards(cursor: Cursor, withInput: string): string;\n\n\t/**\n\t * Returns whether the given input is one expected by this prediction.\n\t * @param input reader for the input the PTY is giving\n\t * @param lookBehind the last successfully-made prediction, if any\n\t */\n\tmatches(input: StringReader, lookBehind?: IPrediction): MatchResult;\n}\n\nclass StringReader {\n\tpublic index = 0;\n\n\tpublic get remaining() {\n\t\treturn this.input.length - this.index;\n\t}\n\n\tpublic get eof() {\n\t\treturn this.index === this.input.length;\n\t}\n\n\tpublic get rest() {\n\t\treturn this.input.slice(this.index);\n\t}\n\n\tconstructor(private readonly input: string) { }\n\n\t/**\n\t * Advances the reader and returns the character if it matches.\n\t */\n\tpublic eatChar(char: string) {\n\t\tif (this.input[this.index] !== char) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index++;\n\t\treturn char;\n\t}\n\n\t/**\n\t * Advances the reader and returns the string if it matches.\n\t */\n\tpublic eatStr(substr: string) {\n\t\tif (this.input.slice(this.index, substr.length) !== substr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index += substr.length;\n\t\treturn substr;\n\t}\n\n\t/**\n\t * Matches and eats the substring character-by-character. If EOF is reached\n\t * before the substring is consumed, it will buffer. Index is not moved\n\t * if it's not a match.\n\t */\n\tpublic eatGradually(substr: string): MatchResult {\n\t\tlet prevIndex = this.index;\n\t\tfor (let i = 0; i < substr.length; i++) {\n\t\t\tif (i > 0 && this.eof) {\n\t\t\t\treturn MatchResult.Buffer;\n\t\t\t}\n\n\t\t\tif (!this.eatChar(substr[i])) {\n\t\t\t\tthis.index = prevIndex;\n\t\t\t\treturn MatchResult.Failure;\n\t\t\t}\n\t\t}\n\n\t\treturn MatchResult.Success;\n\t}\n\n\t/**\n\t * Advances the reader and returns the regex if it matches.\n\t */\n\tpublic eatRe(re: RegExp) {\n\t\tconst match = re.exec(this.input.slice(this.index));\n\t\tif (!match) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index += match[0].length;\n\t\treturn match;\n\t}\n\n\t/**\n\t * Advances the reader and returns the character if the code matches.\n\t */\n\tpublic eatCharCode(min = 0, max = min + 1) {\n\t\tconst code = this.input.charCodeAt(this.index);\n\t\tif (code < min || code >= max) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.index++;\n\t\treturn code;\n\t}\n}\n\n/**\n * Preidction which never tests true. Will always discard predictions made\n * after it.\n */\nclass HardBoundary implements IPrediction {\n\tpublic readonly clearAfterTimeout = false;\n\n\tpublic apply() {\n\t\treturn '';\n\t}\n\n\tpublic rollback() {\n\t\treturn '';\n\t}\n\n\tpublic rollForwards() {\n\t\treturn '';\n\t}\n\n\tpublic matches() {\n\t\treturn MatchResult.Failure;\n\t}\n}\n\n/**\n * Wraps another prediction. Does not apply the prediction, but will pass\n * through its `matches` request.\n */\nclass TentativeBoundary implements IPrediction {\n\tprivate appliedCursor?: Cursor;\n\n\tconstructor(public readonly inner: IPrediction) { }\n\n\tpublic apply(buffer: IBuffer, cursor: Cursor) {\n\t\tthis.appliedCursor = cursor.clone();\n\t\tthis.inner.apply(buffer, this.appliedCursor);\n\t\treturn '';\n\t}\n\n\tpublic rollback(cursor: Cursor) {\n\t\tthis.inner.rollback(cursor.clone());\n\t\treturn '';\n\t}\n\n\tpublic rollForwards(cursor: Cursor, withInput: string) {\n\t\tif (this.appliedCursor) {\n\t\t\tcursor.moveTo(this.appliedCursor);\n\t\t}\n\n\t\treturn withInput;\n\t}\n\n\tpublic matches(input: StringReader) {\n\t\treturn this.inner.matches(input);\n\t}\n}\n\nexport const isTenativeCharacterPrediction = (p: unknown): p is (TentativeBoundary & { inner: CharacterPrediction }) =>\n\tp instanceof TentativeBoundary && p.inner instanceof CharacterPrediction;\n\n/**\n * Prediction for a single alphanumeric character.\n */\nclass CharacterPrediction implements IPrediction {\n\tpublic readonly affectsStyle = true;\n\n\tpublic appliedAt?: {\n\t\tpos: ICoordinate;\n\t\toldAttributes: string;\n\t\toldChar: string;\n\t};\n\n\tconstructor(private readonly style: TypeAheadStyle, private readonly char: string) { }\n\n\tpublic apply(_: IBuffer, cursor: Cursor) {\n\t\tconst cell = cursor.getCell();\n\t\tthis.appliedAt = cell\n\t\t\t? { pos: cursor.coordinate, oldAttributes: attributesToSeq(cell), oldChar: cell.getChars() }\n\t\t\t: { pos: cursor.coordinate, oldAttributes: '', oldChar: '' };\n\n\t\tcursor.shift(1);\n\n\t\treturn this.style.apply + this.char + this.style.undo;\n\t}\n\n\tpublic rollback(cursor: Cursor) {\n\t\tif (!this.appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\tconst { oldAttributes, oldChar, pos } = this.appliedAt;\n\t\tconst r = cursor.moveTo(pos) + (oldChar ? `${oldAttributes}${oldChar}${cursor.moveTo(pos)}` : DELETE_CHAR);\n\t\treturn r;\n\t}\n\n\tpublic rollForwards(cursor: Cursor, input: string) {\n\t\tif (!this.appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\treturn cursor.clone().moveTo(this.appliedAt.pos) + input;\n\t}\n\n\tpublic matches(input: StringReader, lookBehind?: IPrediction) {\n\t\tlet startIndex = input.index;\n\n\t\t// remove any styling CSI before checking the char\n\t\twhile (input.eatRe(CSI_STYLE_RE)) { }\n\n\t\tif (input.eof) {\n\t\t\treturn MatchResult.Buffer;\n\t\t}\n\n\t\tif (input.eatChar(this.char)) {\n\t\t\treturn MatchResult.Success;\n\t\t}\n\n\t\tif (lookBehind instanceof CharacterPrediction) {\n\t\t\t// see #112842\n\t\t\tconst sillyZshOutcome = input.eatGradually(`\\b${lookBehind.char}${this.char}`);\n\t\t\tif (sillyZshOutcome !== MatchResult.Failure) {\n\t\t\t\treturn sillyZshOutcome;\n\t\t\t}\n\t\t}\n\n\t\tinput.index = startIndex;\n\t\treturn MatchResult.Failure;\n\t}\n}\n\nclass BackspacePrediction implements IPrediction {\n\tprotected appliedAt?: {\n\t\tpos: ICoordinate;\n\t\toldAttributes: string;\n\t\toldChar: string;\n\t\tisLastChar: boolean;\n\t};\n\n\tconstructor(private readonly terminal: Terminal) { }\n\n\tpublic apply(_: IBuffer, cursor: Cursor) {\n\t\t// at eol if everything to the right is whitespace (zsh will emit a \"clear line\" code in this case)\n\t\t// todo: can be optimized if `getTrimmedLength` is exposed from xterm\n\t\tconst isLastChar = !cursor.getLine()?.translateToString(undefined, cursor.x).trim();\n\t\tconst pos = cursor.coordinate;\n\t\tconst move = cursor.shift(-1);\n\t\tconst cell = cursor.getCell();\n\t\tthis.appliedAt = cell\n\t\t\t? { isLastChar, pos, oldAttributes: attributesToSeq(cell), oldChar: cell.getChars() }\n\t\t\t: { isLastChar, pos, oldAttributes: '', oldChar: '' };\n\n\t\treturn move + DELETE_CHAR;\n\t}\n\n\tpublic rollback(cursor: Cursor) {\n\t\tif (!this.appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\tconst { oldAttributes, oldChar, pos } = this.appliedAt;\n\t\tif (!oldChar) {\n\t\t\treturn cursor.moveTo(pos) + DELETE_CHAR;\n\t\t}\n\n\t\treturn oldAttributes + oldChar + cursor.moveTo(pos) + attributesToSeq(core(this.terminal)._inputHandler._curAttrData);\n\t}\n\n\tpublic rollForwards() {\n\t\treturn '';\n\t}\n\n\tpublic matches(input: StringReader) {\n\t\tif (this.appliedAt?.isLastChar) {\n\t\t\tconst r1 = input.eatGradually(`\\b${CSI}K`);\n\t\t\tif (r1 !== MatchResult.Failure) {\n\t\t\t\treturn r1;\n\t\t\t}\n\n\t\t\tconst r2 = input.eatGradually(`\\b \\b`);\n\t\t\tif (r2 !== MatchResult.Failure) {\n\t\t\t\treturn r2;\n\t\t\t}\n\t\t}\n\n\t\treturn MatchResult.Failure;\n\t}\n}\n\nclass NewlinePrediction implements IPrediction {\n\tprotected prevPosition?: ICoordinate;\n\n\tpublic apply(_: IBuffer, cursor: Cursor) {\n\t\tthis.prevPosition = cursor.coordinate;\n\t\tcursor.move(0, cursor.y + 1);\n\t\treturn '\\r\\n';\n\t}\n\n\tpublic rollback(cursor: Cursor) {\n\t\treturn this.prevPosition ? cursor.moveTo(this.prevPosition) : '';\n\t}\n\n\tpublic rollForwards() {\n\t\treturn ''; // does not need to rewrite\n\t}\n\n\tpublic matches(input: StringReader) {\n\t\treturn input.eatGradually('\\r\\n');\n\t}\n}\n\n/**\n * Prediction when the cursor reaches the end of the line. Similar to newline\n * prediction, but shells handle it slightly differently.\n */\nclass LinewrapPrediction extends NewlinePrediction implements IPrediction {\n\tpublic override apply(_: IBuffer, cursor: Cursor) {\n\t\tthis.prevPosition = cursor.coordinate;\n\t\tcursor.move(0, cursor.y + 1);\n\t\treturn ' \\r';\n\t}\n\n\tpublic override matches(input: StringReader) {\n\t\t// bash and zshell add a space which wraps in the terminal, then a CR\n\t\tconst r = input.eatGradually(' \\r');\n\t\tif (r !== MatchResult.Failure) {\n\t\t\t// zshell additionally adds a clear line after wrapping to be safe -- eat it\n\t\t\tconst r2 = input.eatGradually(DELETE_REST_OF_LINE);\n\t\t\treturn r2 === MatchResult.Buffer ? MatchResult.Buffer : r;\n\t\t}\n\n\t\treturn input.eatGradually('\\r\\n');\n\t}\n}\n\nclass CursorMovePrediction implements IPrediction {\n\tprivate applied?: {\n\t\trollForward: string;\n\t\tprevPosition: number;\n\t\tprevAttrs: string;\n\t\tamount: number;\n\t};\n\n\tconstructor(\n\t\tprivate readonly direction: CursorMoveDirection,\n\t\tprivate readonly moveByWords: boolean,\n\t\tprivate readonly amount: number,\n\t) { }\n\n\tpublic apply(buffer: IBuffer, cursor: Cursor) {\n\t\tconst prevPosition = cursor.x;\n\t\tconst currentCell = cursor.getCell();\n\t\tconst prevAttrs = currentCell ? attributesToSeq(currentCell) : '';\n\n\t\tconst { amount, direction, moveByWords } = this;\n\t\tconst delta = direction === CursorMoveDirection.Back ? -1 : 1;\n\n\t\tconst target = cursor.clone();\n\t\tif (moveByWords) {\n\t\t\tfor (let i = 0; i < amount; i++) {\n\t\t\t\tmoveToWordBoundary(buffer, target, delta);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.shift(delta * amount);\n\t\t}\n\n\t\tthis.applied = {\n\t\t\tamount: Math.abs(cursor.x - target.x),\n\t\t\tprevPosition,\n\t\t\tprevAttrs,\n\t\t\trollForward: cursor.moveTo(target),\n\t\t};\n\n\t\treturn this.applied.rollForward;\n\t}\n\n\tpublic rollback(cursor: Cursor) {\n\t\tif (!this.applied) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn cursor.move(this.applied.prevPosition, cursor.y) + this.applied.prevAttrs;\n\t}\n\n\tpublic rollForwards() {\n\t\treturn ''; // does not need to rewrite\n\t}\n\n\tpublic matches(input: StringReader) {\n\t\tif (!this.applied) {\n\t\t\treturn MatchResult.Failure;\n\t\t}\n\n\t\tconst direction = this.direction;\n\t\tconst { amount, rollForward } = this.applied;\n\n\n\t\t// arg can be omitted to move one character. We don't eatGradually() here\n\t\t// or below moves that don't go as far as the cursor would be buffered\n\t\t// indefinitely\n\t\tif (input.eatStr(`${CSI}${direction}`.repeat(amount))) {\n\t\t\treturn MatchResult.Success;\n\t\t}\n\n\t\t// \\b is the equivalent to moving one character back\n\t\tif (direction === CursorMoveDirection.Back) {\n\t\t\tif (input.eatStr(`\\b`.repeat(amount))) {\n\t\t\t\treturn MatchResult.Success;\n\t\t\t}\n\t\t}\n\n\t\t// check if the cursor position is set absolutely\n\t\tif (rollForward) {\n\t\t\tconst r = input.eatGradually(rollForward);\n\t\t\tif (r !== MatchResult.Failure) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// check for a relative move in the direction\n\t\treturn input.eatGradually(`${CSI}${amount}${direction}`);\n\t}\n}\n\nexport class PredictionStats extends Disposable {\n\tprivate readonly stats: [latency: number, correct: boolean][] = [];\n\tprivate index = 0;\n\tprivate readonly addedAtTime = new WeakMap<IPrediction, number>();\n\tprivate readonly changeEmitter = new Emitter<void>();\n\tpublic readonly onChange = this.changeEmitter.event;\n\n\t/**\n\t * Gets the percent (0-1) of predictions that were accurate.\n\t */\n\tpublic get accuracy() {\n\t\tlet correctCount = 0;\n\t\tfor (const [, correct] of this.stats) {\n\t\t\tif (correct) {\n\t\t\t\tcorrectCount++;\n\t\t\t}\n\t\t}\n\n\t\treturn correctCount / (this.stats.length || 1);\n\t}\n\n\t/**\n\t * Gets the number of recorded stats.\n\t */\n\tpublic get sampleSize() {\n\t\treturn this.stats.length;\n\t}\n\n\t/**\n\t * Gets latency stats of successful predictions.\n\t */\n\tpublic get latency() {\n\t\tconst latencies = this.stats.filter(([, correct]) => correct).map(([s]) => s).sort();\n\n\t\treturn {\n\t\t\tcount: latencies.length,\n\t\t\tmin: latencies[0],\n\t\t\tmedian: latencies[Math.floor(latencies.length / 2)],\n\t\t\tmax: latencies[latencies.length - 1],\n\t\t};\n\t}\n\n\t/**\n\t * Gets the maximum observed latency.\n\t */\n\tpublic get maxLatency() {\n\t\tlet max = -Infinity;\n\t\tfor (const [latency, correct] of this.stats) {\n\t\t\tif (correct) {\n\t\t\t\tmax = Math.max(latency, max);\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconstructor(timeline: PredictionTimeline) {\n\t\tsuper();\n\t\tthis._register(timeline.onPredictionAdded(p => this.addedAtTime.set(p, Date.now())));\n\t\tthis._register(timeline.onPredictionSucceeded(this.pushStat.bind(this, true)));\n\t\tthis._register(timeline.onPredictionFailed(this.pushStat.bind(this, false)));\n\t}\n\n\tprivate pushStat(correct: boolean, prediction: IPrediction) {\n\t\tconst started = this.addedAtTime.get(prediction)!;\n\t\tthis.stats[this.index] = [Date.now() - started, correct];\n\t\tthis.index = (this.index + 1) % statsBufferSize;\n\t\tthis.changeEmitter.fire();\n\t}\n}\n\nexport class PredictionTimeline {\n\t/**\n\t * Expected queue of events. Only predictions for the lowest are\n\t * written into the terminal.\n\t */\n\tprivate expected: ({ gen: number; p: IPrediction })[] = [];\n\n\t/**\n\t * Current prediction generation.\n\t */\n\tprivate currentGen = 0;\n\n\t/**\n\t * Current cursor position -- kept outside the buffer since it can be ahead\n\t * if typing swiftly. The position of the cursor that the user is currently\n\t * looking at on their screen (or will be looking at after all pending writes\n\t * are flushed.)\n\t */\n\tprivate _physicalCursor: Cursor | undefined;\n\n\t/**\n\t * Cursor position taking into account all (possibly not-yet-applied)\n\t * predictions. A new prediction inserted, if applied, will be applied at\n\t * the position of the tentative cursor.\n\t */\n\tprivate _tenativeCursor: Cursor | undefined;\n\n\t/**\n\t * Previously sent data that was buffered and should be prepended to the\n\t * next input.\n\t */\n\tprivate inputBuffer?: string;\n\n\t/**\n\t * Whether predictions are echoed to the terminal. If false, predictions\n\t * will still be computed internally for latency metrics, but input will\n\t * never be adjusted.\n\t */\n\tprivate showPredictions = false;\n\n\t/**\n\t * The last successfully-made prediction.\n\t */\n\tprivate lookBehind?: IPrediction;\n\n\tprivate readonly addedEmitter = new Emitter<IPrediction>();\n\tpublic readonly onPredictionAdded = this.addedEmitter.event;\n\tprivate readonly failedEmitter = new Emitter<IPrediction>();\n\tpublic readonly onPredictionFailed = this.failedEmitter.event;\n\tprivate readonly succeededEmitter = new Emitter<IPrediction>();\n\tpublic readonly onPredictionSucceeded = this.succeededEmitter.event;\n\n\tprivate get currentGenerationPredictions() {\n\t\treturn this.expected.filter(({ gen }) => gen === this.expected[0].gen).map(({ p }) => p);\n\t}\n\n\tpublic get isShowingPredictions() {\n\t\treturn this.showPredictions;\n\t}\n\n\tpublic get length() {\n\t\treturn this.expected.length;\n\t}\n\n\tconstructor(public readonly terminal: Terminal, private readonly style: TypeAheadStyle) { }\n\n\tpublic setShowPredictions(show: boolean) {\n\t\tif (show === this.showPredictions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('set predictions:', show);\n\t\tthis.showPredictions = show;\n\n\t\tconst buffer = this.getActiveBuffer();\n\t\tif (!buffer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toApply = this.currentGenerationPredictions;\n\t\tif (show) {\n\t\t\tthis.clearCursor();\n\t\t\tthis.style.expectIncomingStyle(toApply.reduce((count, p) => p.affectsStyle ? count + 1 : count, 0));\n\t\t\tthis.terminal.write(toApply.map(p => p.apply(buffer, this.physicalCursor(buffer))).join(''));\n\t\t} else {\n\t\t\tthis.terminal.write(toApply.reverse().map(p => p.rollback(this.physicalCursor(buffer))).join(''));\n\t\t}\n\t}\n\n\t/**\n\t * Undoes any predictions written and resets expectations.\n\t */\n\tpublic undoAllPredictions() {\n\t\tconst buffer = this.getActiveBuffer();\n\t\tif (this.showPredictions && buffer) {\n\t\t\tthis.terminal.write(this.currentGenerationPredictions.reverse()\n\t\t\t\t.map(p => p.rollback(this.physicalCursor(buffer))).join(''));\n\t\t}\n\n\t\tthis.expected = [];\n\t}\n\n\t/**\n\t * Should be called when input is incoming to the temrinal.\n\t */\n\tpublic beforeServerInput(input: string): string {\n\t\tconst originalInput = input;\n\t\tif (this.inputBuffer) {\n\t\t\tinput = this.inputBuffer + input;\n\t\t\tthis.inputBuffer = undefined;\n\t\t}\n\n\t\tif (!this.expected.length) {\n\t\t\tthis.clearPredictionState();\n\t\t\treturn input;\n\t\t}\n\n\t\tconst buffer = this.getActiveBuffer();\n\t\tif (!buffer) {\n\t\t\tthis.clearPredictionState();\n\t\t\treturn input;\n\t\t}\n\n\t\tlet output = '';\n\n\t\tconst reader = new StringReader(input);\n\t\tconst startingGen = this.expected[0].gen;\n\t\tconst emitPredictionOmitted = () => {\n\t\t\tconst omit = reader.eatRe(PREDICTION_OMIT_RE);\n\t\t\tif (omit) {\n\t\t\t\toutput += omit[0];\n\t\t\t}\n\t\t};\n\n\t\tReadLoop: while (this.expected.length && reader.remaining > 0) {\n\t\t\temitPredictionOmitted();\n\n\t\t\tconst { p: prediction, gen } = this.expected[0];\n\t\t\tconst cursor = this.physicalCursor(buffer);\n\t\t\tlet beforeTestReaderIndex = reader.index;\n\t\t\tswitch (prediction.matches(reader, this.lookBehind)) {\n\t\t\t\tcase MatchResult.Success:\n\t\t\t\t\t// if the input character matches what the next prediction expected, undo\n\t\t\t\t\t// the prediction and write the real character out.\n\t\t\t\t\tconst eaten = input.slice(beforeTestReaderIndex, reader.index);\n\t\t\t\t\tif (gen === startingGen) {\n\t\t\t\t\t\toutput += prediction.rollForwards?.(cursor, eaten);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprediction.apply(buffer, this.physicalCursor(buffer)); // move cursor for additional apply\n\t\t\t\t\t\toutput += eaten;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.succeededEmitter.fire(prediction);\n\t\t\t\t\tthis.lookBehind = prediction;\n\t\t\t\t\tthis.expected.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MatchResult.Buffer:\n\t\t\t\t\t// on a buffer, store the remaining data and completely read data\n\t\t\t\t\t// to be output as normal.\n\t\t\t\t\tthis.inputBuffer = input.slice(beforeTestReaderIndex);\n\t\t\t\t\treader.index = input.length;\n\t\t\t\t\tbreak ReadLoop;\n\t\t\t\tcase MatchResult.Failure:\n\t\t\t\t\t// on a failure, roll back all remaining items in this generation\n\t\t\t\t\t// and clear predictions, since they are no longer valid\n\t\t\t\t\tconst rollback = this.expected.filter(p => p.gen === startingGen).reverse();\n\t\t\t\t\toutput += rollback.map(({ p }) => p.rollback(this.physicalCursor(buffer))).join('');\n\t\t\t\t\tif (rollback.some(r => r.p.affectsStyle)) {\n\t\t\t\t\t\t// reading the current style should generally be safe, since predictions\n\t\t\t\t\t\t// always restore the style if they modify it.\n\t\t\t\t\t\toutput += attributesToSeq(core(this.terminal)._inputHandler._curAttrData);\n\t\t\t\t\t}\n\t\t\t\t\tthis.clearPredictionState();\n\t\t\t\t\tthis.failedEmitter.fire(prediction);\n\t\t\t\t\tbreak ReadLoop;\n\t\t\t}\n\t\t}\n\n\t\temitPredictionOmitted();\n\n\t\t// Extra data (like the result of running a command) should cause us to\n\t\t// reset the cursor\n\t\tif (!reader.eof) {\n\t\t\toutput += reader.rest;\n\t\t\tthis.clearPredictionState();\n\t\t}\n\n\t\t// If we passed a generation boundary, apply the current generation's predictions\n\t\tif (this.expected.length && startingGen !== this.expected[0].gen) {\n\t\t\tfor (const { p, gen } of this.expected) {\n\t\t\t\tif (gen !== this.expected[0].gen) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (p.affectsStyle) {\n\t\t\t\t\tthis.style.expectIncomingStyle();\n\t\t\t\t}\n\n\t\t\t\toutput += p.apply(buffer, this.physicalCursor(buffer));\n\t\t\t}\n\t\t}\n\n\t\tif (!this.showPredictions) {\n\t\t\treturn originalInput;\n\t\t}\n\n\t\tif (output.length === 0 || output === input) {\n\t\t\treturn output;\n\t\t}\n\n\t\tif (this._physicalCursor) {\n\t\t\toutput += this._physicalCursor.moveInstruction();\n\t\t}\n\n\t\t// prevent cursor flickering while typing\n\t\toutput = HIDE_CURSOR + output + SHOW_CURSOR;\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Clears any expected predictions and stored state. Should be called when\n\t * the pty gives us something we don't recognize.\n\t */\n\tprivate clearPredictionState() {\n\t\tthis.expected = [];\n\t\tthis.clearCursor();\n\t\tthis.lookBehind = undefined;\n\t}\n\n\t/**\n\t * Appends a typeahead prediction.\n\t */\n\tpublic addPrediction(buffer: IBuffer, prediction: IPrediction) {\n\t\tthis.expected.push({ gen: this.currentGen, p: prediction });\n\t\tthis.addedEmitter.fire(prediction);\n\n\t\tif (this.currentGen !== this.expected[0].gen) {\n\t\t\tprediction.apply(buffer, this.tentativeCursor(buffer));\n\t\t\treturn false;\n\t\t}\n\n\t\tconst text = prediction.apply(buffer, this.physicalCursor(buffer));\n\t\tthis._tenativeCursor = undefined; // next read will get or clone the physical cursor\n\n\t\tif (this.showPredictions && text) {\n\t\t\tif (prediction.affectsStyle) {\n\t\t\t\tthis.style.expectIncomingStyle();\n\t\t\t}\n\t\t\t// console.log('predict:', JSON.stringify(text));\n\t\t\tthis.terminal.write(text);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Appends a prediction followed by a boundary. The predictions applied\n\t * after this one will only be displayed after the give prediction matches\n\t * pty output/\n\t */\n\tpublic addBoundary(): void;\n\tpublic addBoundary(buffer: IBuffer, prediction: IPrediction): boolean;\n\tpublic addBoundary(buffer?: IBuffer, prediction?: IPrediction) {\n\t\tlet applied = false;\n\t\tif (buffer && prediction) {\n\t\t\t// We apply the prediction so that it's matched against, but wrapped\n\t\t\t// in a tentativeboundary so that it doesn't affect the physical cursor.\n\t\t\t// Then we apply it specifically to the tentative cursor.\n\t\t\tapplied = this.addPrediction(buffer, new TentativeBoundary(prediction));\n\t\t\tprediction.apply(buffer, this.tentativeCursor(buffer));\n\t\t}\n\t\tthis.currentGen++;\n\t\treturn applied;\n\t}\n\n\t/**\n\t * Peeks the last prediction written.\n\t */\n\tpublic peekEnd(): IPrediction | undefined {\n\t\treturn this.expected[this.expected.length - 1]?.p;\n\t}\n\n\t/**\n\t * Peeks the first pending prediction.\n\t */\n\tpublic peekStart(): IPrediction | undefined {\n\t\treturn this.expected[0]?.p;\n\t}\n\n\t/**\n\t * Current position of the cursor in the terminal.\n\t */\n\tpublic physicalCursor(buffer: IBuffer) {\n\t\tif (!this._physicalCursor) {\n\t\t\tif (this.showPredictions) {\n\t\t\t\tflushOutput(this.terminal);\n\t\t\t}\n\t\t\tthis._physicalCursor = new Cursor(this.terminal.rows, this.terminal.cols, buffer);\n\t\t}\n\n\t\treturn this._physicalCursor;\n\t}\n\n\t/**\n\t * Cursor position if all predictions and boundaries that have been inserted\n\t * so far turn out to be successfully predicted.\n\t */\n\tpublic tentativeCursor(buffer: IBuffer) {\n\t\tif (!this._tenativeCursor) {\n\t\t\tthis._tenativeCursor = this.physicalCursor(buffer).clone();\n\t\t}\n\n\t\treturn this._tenativeCursor;\n\t}\n\n\tpublic clearCursor() {\n\t\tthis._physicalCursor = undefined;\n\t\tthis._tenativeCursor = undefined;\n\t}\n\n\tprivate getActiveBuffer() {\n\t\tconst buffer = this.terminal.buffer.active;\n\t\treturn buffer.type === 'normal' ? buffer : undefined;\n\t}\n}\n\n/**\n * Gets the escape sequence args to restore state/appearence in the cell.\n */\nconst attributesToArgs = (cell: XTermAttributes) => {\n\tif (cell.isAttributeDefault()) { return [0]; }\n\n\tconst args = [];\n\tif (cell.isBold()) { args.push(1); }\n\tif (cell.isDim()) { args.push(2); }\n\tif (cell.isItalic()) { args.push(3); }\n\tif (cell.isUnderline()) { args.push(4); }\n\tif (cell.isBlink()) { args.push(5); }\n\tif (cell.isInverse()) { args.push(7); }\n\tif (cell.isInvisible()) { args.push(8); }\n\n\tif (cell.isFgRGB()) { args.push(38, 2, cell.getFgColor() >>> 24, (cell.getFgColor() >>> 16) & 0xFF, cell.getFgColor() & 0xFF); }\n\tif (cell.isFgPalette()) { args.push(38, 5, cell.getFgColor()); }\n\tif (cell.isFgDefault()) { args.push(39); }\n\n\tif (cell.isBgRGB()) { args.push(48, 2, cell.getBgColor() >>> 24, (cell.getBgColor() >>> 16) & 0xFF, cell.getBgColor() & 0xFF); }\n\tif (cell.isBgPalette()) { args.push(48, 5, cell.getBgColor()); }\n\tif (cell.isBgDefault()) { args.push(49); }\n\n\treturn args;\n};\n\n/**\n * Gets the escape sequence to restore state/appearence in the cell.\n */\nconst attributesToSeq = (cell: XTermAttributes) => `${CSI}${attributesToArgs(cell).join(';')}m`;\n\nconst arrayHasPrefixAt = <T>(a: ReadonlyArray<T>, ai: number, b: ReadonlyArray<T>) => {\n\tif (a.length - ai > b.length) {\n\t\treturn false;\n\t}\n\n\tfor (let bi = 0; bi < b.length; bi++, ai++) {\n\t\tif (b[ai] !== a[ai]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * @see https://github.com/xtermjs/xterm.js/blob/065eb13a9d3145bea687239680ec9696d9112b8e/src/common/InputHandler.ts#L2127\n */\nconst getColorWidth = (params: (number | number[])[], pos: number) => {\n\tconst accu = [0, 0, -1, 0, 0, 0];\n\tlet cSpace = 0;\n\tlet advance = 0;\n\n\tdo {\n\t\tconst v = params[pos + advance];\n\t\taccu[advance + cSpace] = typeof v === 'number' ? v : v[0];\n\t\tif (typeof v !== 'number') {\n\t\t\tlet i = 0;\n\t\t\tdo {\n\t\t\t\tif (accu[1] === 5) {\n\t\t\t\t\tcSpace = 1;\n\t\t\t\t}\n\t\t\t\taccu[advance + i + 1 + cSpace] = v[i];\n\t\t\t} while (++i < v.length && i + advance + 1 + cSpace < accu.length);\n\t\t\tbreak;\n\t\t}\n\t\t// exit early if can decide color mode with semicolons\n\t\tif ((accu[1] === 5 && advance + cSpace >= 2)\n\t\t\t|| (accu[1] === 2 && advance + cSpace >= 5)) {\n\t\t\tbreak;\n\t\t}\n\t\t// offset colorSpace slot for semicolon mode\n\t\tif (accu[1]) {\n\t\t\tcSpace = 1;\n\t\t}\n\t} while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n\treturn advance;\n};\n\nclass TypeAheadStyle implements IDisposable {\n\tprivate static compileArgs(args: ReadonlyArray<number>) {\n\t\treturn `${CSI}${args.join(';')}m`;\n\t}\n\n\t/**\n\t * Number of typeahead style arguments we expect to read. If this is 0 and\n\t * we see a style coming in, we know that the PTY actually wanted to update.\n\t */\n\tprivate expectedIncomingStyles = 0;\n\tprivate applyArgs!: ReadonlyArray<number>;\n\tprivate originalUndoArgs!: ReadonlyArray<number>;\n\tprivate undoArgs!: ReadonlyArray<number>;\n\n\tpublic apply!: string;\n\tpublic undo!: string;\n\tprivate csiHandler?: IDisposable;\n\n\tconstructor(value: ITerminalConfiguration['localEchoStyle'], private readonly terminal: Terminal) {\n\t\tthis.onUpdate(value);\n\t}\n\n\t/**\n\t * Signals that a style was written to the terminal and we should watch\n\t * for it coming in.\n\t */\n\tpublic expectIncomingStyle(n = 1) {\n\t\tthis.expectedIncomingStyles += n * 2;\n\t}\n\n\t/**\n\t * Starts tracking for CSI changes in the terminal.\n\t */\n\tpublic startTracking() {\n\t\tthis.expectedIncomingStyles = 0;\n\t\tthis.onDidWriteSGR(attributesToArgs(core(this.terminal)._inputHandler._curAttrData));\n\t\tthis.csiHandler = this.terminal.parser.registerCsiHandler({ final: 'm' }, args => {\n\t\t\tthis.onDidWriteSGR(args);\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Stops tracking terminal CSI changes.\n\t */\n\t@debounce(2000)\n\tpublic debounceStopTracking() {\n\t\tthis.stopTracking();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic dispose() {\n\t\tthis.stopTracking();\n\t}\n\n\tprivate stopTracking() {\n\t\tthis.csiHandler?.dispose();\n\t\tthis.csiHandler = undefined;\n\t}\n\n\tprivate onDidWriteSGR(args: (number | number[])[]) {\n\t\tconst originalUndo = this.undoArgs;\n\t\tfor (let i = 0; i < args.length;) {\n\t\t\tconst px = args[i];\n\t\t\tconst p = typeof px === 'number' ? px : px[0];\n\n\t\t\tif (this.expectedIncomingStyles) {\n\t\t\t\tif (arrayHasPrefixAt(args, i, this.undoArgs)) {\n\t\t\t\t\tthis.expectedIncomingStyles--;\n\t\t\t\t\ti += this.undoArgs.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (arrayHasPrefixAt(args, i, this.applyArgs)) {\n\t\t\t\t\tthis.expectedIncomingStyles--;\n\t\t\t\t\ti += this.applyArgs.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst width = p === 38 || p === 48 || p === 58 ? getColorWidth(args, i) : 1;\n\t\t\tswitch (this.applyArgs[0]) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (p === 2) {\n\t\t\t\t\t\tthis.undoArgs = [22, 2];\n\t\t\t\t\t} else if (p === 22 || p === 0) {\n\t\t\t\t\t\tthis.undoArgs = [22];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (p === 1) {\n\t\t\t\t\t\tthis.undoArgs = [22, 1];\n\t\t\t\t\t} else if (p === 22 || p === 0) {\n\t\t\t\t\t\tthis.undoArgs = [22];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38:\n\t\t\t\t\tif (p === 0 || p === 39 || p === 100) {\n\t\t\t\t\t\tthis.undoArgs = [39];\n\t\t\t\t\t} else if ((p >= 30 && p <= 38) || (p >= 90 && p <= 97)) {\n\t\t\t\t\t\tthis.undoArgs = args.slice(i, i + width) as number[];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (p === this.applyArgs[0]) {\n\t\t\t\t\t\tthis.undoArgs = this.applyArgs;\n\t\t\t\t\t} else if (p === 0) {\n\t\t\t\t\t\tthis.undoArgs = this.originalUndoArgs;\n\t\t\t\t\t}\n\t\t\t\t// no-op\n\t\t\t}\n\n\t\t\ti += width;\n\t\t}\n\n\t\tif (originalUndo !== this.undoArgs) {\n\t\t\tthis.undo = TypeAheadStyle.compileArgs(this.undoArgs);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the current typeahead style.\n\t */\n\tpublic onUpdate(style: ITerminalConfiguration['localEchoStyle']) {\n\t\tconst { applyArgs, undoArgs } = this.getArgs(style);\n\t\tthis.applyArgs = applyArgs;\n\t\tthis.undoArgs = this.originalUndoArgs = undoArgs;\n\t\tthis.apply = TypeAheadStyle.compileArgs(this.applyArgs);\n\t\tthis.undo = TypeAheadStyle.compileArgs(this.undoArgs);\n\t}\n\n\tprivate getArgs(style: ITerminalConfiguration['localEchoStyle']) {\n\t\tswitch (style) {\n\t\t\tcase 'bold':\n\t\t\t\treturn { applyArgs: [1], undoArgs: [22] };\n\t\t\tcase 'dim':\n\t\t\t\treturn { applyArgs: [2], undoArgs: [22] };\n\t\t\tcase 'italic':\n\t\t\t\treturn { applyArgs: [3], undoArgs: [23] };\n\t\t\tcase 'underlined':\n\t\t\t\treturn { applyArgs: [4], undoArgs: [24] };\n\t\t\tcase 'inverted':\n\t\t\t\treturn { applyArgs: [7], undoArgs: [27] };\n\t\t\tdefault:\n\t\t\t\tconst { r, g, b } = Color.fromHex(style).rgba;\n\t\t\t\treturn { applyArgs: [38, 2, r, g, b], undoArgs: [39] };\n\t\t}\n\t}\n}\n\nconst compileExcludeRegexp = (programs = DEFAULT_LOCAL_ECHO_EXCLUDE) =>\n\tnew RegExp(`\\\\b(${programs.map(escapeRegExpCharacters).join('|')})\\\\b`, 'i');\n\nexport const enum CharPredictState {\n\t/** No characters typed on this line yet */\n\tUnknown,\n\t/** Has a pending character prediction */\n\tHasPendingChar,\n\t/** Character validated on this line */\n\tValidated,\n}\n\nexport class TypeAheadAddon extends Disposable implements ITerminalAddon {\n\tprivate typeaheadStyle?: TypeAheadStyle;\n\tprivate typeaheadThreshold = this.config.config.localEchoLatencyThreshold;\n\tprivate excludeProgramRe = compileExcludeRegexp(this.config.config.localEchoExcludePrograms);\n\tprotected lastRow?: { y: number; startingX: number; endingX: number; charState: CharPredictState };\n\tprotected timeline?: PredictionTimeline;\n\tprivate terminalTitle = '';\n\tpublic stats?: PredictionStats;\n\n\t/**\n\t * Debounce that clears predictions after a timeout if the PTY doesn't apply them.\n\t */\n\tprivate clearPredictionDebounce?: IDisposable;\n\n\tconstructor(\n\t\tprivate processManager: ITerminalProcessManager,\n\t\tprivate readonly config: TerminalConfigHelper,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this.clearPredictionDebounce?.dispose()));\n\t}\n\n\tpublic activate(terminal: Terminal): void {\n\t\tconst style = this.typeaheadStyle = this._register(new TypeAheadStyle(this.config.config.localEchoStyle, terminal));\n\t\tconst timeline = this.timeline = new PredictionTimeline(terminal, this.typeaheadStyle);\n\t\tconst stats = this.stats = this._register(new PredictionStats(this.timeline));\n\n\t\ttimeline.setShowPredictions(this.typeaheadThreshold === 0);\n\t\tthis._register(terminal.onData(e => this.onUserData(e)));\n\t\tthis._register(terminal.onTitleChange(title => {\n\t\t\tthis.terminalTitle = title;\n\t\t\tthis.reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t\tthis._register(terminal.onResize(() => {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t\ttimeline.clearCursor();\n\t\t\tthis.reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t\tthis._register(this.config.onConfigChanged(() => {\n\t\t\tstyle.onUpdate(this.config.config.localEchoStyle);\n\t\t\tthis.typeaheadThreshold = this.config.config.localEchoLatencyThreshold;\n\t\t\tthis.excludeProgramRe = compileExcludeRegexp(this.config.config.localEchoExcludePrograms);\n\t\t\tthis.reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t\tthis._register(this.timeline.onPredictionSucceeded(p => {\n\t\t\tif (this.lastRow?.charState === CharPredictState.HasPendingChar && isTenativeCharacterPrediction(p) && p.inner.appliedAt) {\n\t\t\t\tif (p.inner.appliedAt.pos.y + p.inner.appliedAt.pos.baseY === this.lastRow.y) {\n\t\t\t\t\tthis.lastRow.charState = CharPredictState.Validated;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.processManager.onBeforeProcessData(e => this.onBeforeProcessData(e)));\n\n\t\tlet nextStatsSend: any;\n\t\tthis._register(stats.onChange(() => {\n\t\t\tif (!nextStatsSend) {\n\t\t\t\tnextStatsSend = setTimeout(() => {\n\t\t\t\t\tthis.sendLatencyStats(stats);\n\t\t\t\t\tnextStatsSend = undefined;\n\t\t\t\t}, statsSendTelemetryEvery);\n\t\t\t}\n\n\t\t\tif (timeline.length === 0) {\n\t\t\t\tstyle.debounceStopTracking();\n\t\t\t}\n\n\t\t\tthis.reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t}\n\n\tpublic reset() {\n\t\tthis.lastRow = undefined;\n\t}\n\n\tprivate deferClearingPredictions() {\n\t\tif (!this.stats || !this.timeline) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearPredictionDebounce?.dispose();\n\t\tif (this.timeline.length === 0 || this.timeline.peekStart()?.clearAfterTimeout === false) {\n\t\t\tthis.clearPredictionDebounce = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearPredictionDebounce = disposableTimeout(\n\t\t\t() => {\n\t\t\t\tthis.timeline?.undoAllPredictions();\n\t\t\t\tif (this.lastRow?.charState === CharPredictState.HasPendingChar) {\n\t\t\t\t\tthis.lastRow.charState = CharPredictState.Unknown;\n\t\t\t\t}\n\t\t\t},\n\t\t\tMath.max(500, this.stats.maxLatency * 3 / 2),\n\t\t);\n\t}\n\n\t/**\n\t * Note on debounce:\n\t *\n\t * We want to toggle the state only when the user has a pause in their\n\t * typing. Otherwise, we could turn this on when the PTY sent data but the\n\t * terminal cursor is not updated, causes issues.\n\t */\n\t@debounce(100)\n\tprotected reevaluatePredictorState(stats: PredictionStats, timeline: PredictionTimeline) {\n\t\tthis.reevaluatePredictorStateNow(stats, timeline);\n\t}\n\n\tprotected reevaluatePredictorStateNow(stats: PredictionStats, timeline: PredictionTimeline) {\n\t\tif (this.excludeProgramRe.test(this.terminalTitle)) {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t} else if (this.typeaheadThreshold < 0) {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t} else if (this.typeaheadThreshold === 0) {\n\t\t\ttimeline.setShowPredictions(true);\n\t\t} else if (stats.sampleSize > statsMinSamplesToTurnOn && stats.accuracy > statsMinAccuracyToTurnOn) {\n\t\t\tconst latency = stats.latency.median;\n\t\t\tif (latency >= this.typeaheadThreshold) {\n\t\t\t\ttimeline.setShowPredictions(true);\n\t\t\t} else if (latency < this.typeaheadThreshold / statsToggleOffThreshold) {\n\t\t\t\ttimeline.setShowPredictions(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate sendLatencyStats(stats: PredictionStats) {\n\t\t/* __GDPR__\n\t\t\t\"terminalLatencyStats\" : {\n\t\t\t\t\"min\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"max\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"median\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"predictionAccuracy\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t}\n\t\t */\n\t\tthis.telemetryService.publicLog('terminalLatencyStats', {\n\t\t\t...stats.latency,\n\t\t\tpredictionAccuracy: stats.accuracy,\n\t\t});\n\t}\n\n\tprivate onUserData(data: string): void {\n\t\tif (this.timeline?.terminal.buffer.active.type !== 'normal') {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('user data:', JSON.stringify(data));\n\n\t\tconst terminal = this.timeline.terminal;\n\t\tconst buffer = terminal.buffer.active;\n\n\t\t// Detect programs like git log/less that use the normal buffer but don't\n\t\t// take input by deafult (fixes #109541)\n\t\tif (buffer.cursorX === 1 && buffer.cursorY === terminal.rows - 1) {\n\t\t\tif (buffer.getLine(buffer.cursorY + buffer.baseY)?.getCell(0)?.getChars() === ':') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// the following code guards the terminal prompt to avoid being able to\n\t\t// arrow or backspace-into the prompt. Record the lowest X value at which\n\t\t// the user gave input, and mark all additions before that as tentative.\n\t\tconst actualY = buffer.baseY + buffer.cursorY;\n\t\tif (actualY !== this.lastRow?.y) {\n\t\t\tthis.lastRow = { y: actualY, startingX: buffer.cursorX, endingX: buffer.cursorX, charState: CharPredictState.Unknown };\n\t\t} else {\n\t\t\tthis.lastRow.startingX = Math.min(this.lastRow.startingX, buffer.cursorX);\n\t\t\tthis.lastRow.endingX = Math.max(this.lastRow.endingX, this.timeline.physicalCursor(buffer).x);\n\t\t}\n\n\t\tconst addLeftNavigating = (p: IPrediction) =>\n\t\t\tthis.timeline!.tentativeCursor(buffer).x <= this.lastRow!.startingX\n\t\t\t\t? this.timeline!.addBoundary(buffer, p)\n\t\t\t\t: this.timeline!.addPrediction(buffer, p);\n\n\t\tconst addRightNavigating = (p: IPrediction) =>\n\t\t\tthis.timeline!.tentativeCursor(buffer).x >= this.lastRow!.endingX - 1\n\t\t\t\t? this.timeline!.addBoundary(buffer, p)\n\t\t\t\t: this.timeline!.addPrediction(buffer, p);\n\n\t\t/** @see https://github.com/xtermjs/xterm.js/blob/1913e9512c048e3cf56bb5f5df51bfff6899c184/src/common/input/Keyboard.ts */\n\t\tconst reader = new StringReader(data);\n\t\twhile (reader.remaining > 0) {\n\t\t\tif (reader.eatCharCode(127)) { // backspace\n\t\t\t\tconst previous = this.timeline.peekEnd();\n\t\t\t\tif (previous && previous instanceof CharacterPrediction) {\n\t\t\t\t\tthis.timeline.addBoundary();\n\t\t\t\t}\n\n\t\t\t\t// backspace must be able to read the previously-written character in\n\t\t\t\t// the event that it needs to undo it\n\t\t\t\tif (this.timeline.isShowingPredictions) {\n\t\t\t\t\tflushOutput(this.timeline.terminal);\n\t\t\t\t}\n\n\t\t\t\tif (this.timeline.tentativeCursor(buffer).x <= this.lastRow!.startingX) {\n\t\t\t\t\tthis.timeline.addBoundary(buffer, new BackspacePrediction(this.timeline.terminal));\n\t\t\t\t} else {\n\t\t\t\t\t// Backspace decrements our ability to go right.\n\t\t\t\t\tthis.lastRow.endingX--;\n\t\t\t\t\tthis.timeline!.addPrediction(buffer, new BackspacePrediction(this.timeline.terminal));\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatCharCode(32, 126)) { // alphanum\n\t\t\t\tconst char = data[reader.index - 1];\n\t\t\t\tconst prediction = new CharacterPrediction(this.typeaheadStyle!, char);\n\t\t\t\tif (this.lastRow.charState === CharPredictState.Unknown) {\n\t\t\t\t\tthis.timeline.addBoundary(buffer, prediction);\n\t\t\t\t\tthis.lastRow.charState = CharPredictState.HasPendingChar;\n\t\t\t\t} else {\n\t\t\t\t\tthis.timeline.addPrediction(buffer, prediction);\n\t\t\t\t}\n\n\t\t\t\tif (this.timeline.tentativeCursor(buffer).x >= terminal.cols) {\n\t\t\t\t\tthis.timeline.addBoundary(buffer, new LinewrapPrediction());\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cursorMv = reader.eatRe(CSI_MOVE_RE);\n\t\t\tif (cursorMv) {\n\t\t\t\tconst direction = cursorMv[3] as CursorMoveDirection;\n\t\t\t\tconst p = new CursorMovePrediction(direction, !!cursorMv[2], Number(cursorMv[1]) || 1);\n\t\t\t\tif (direction === CursorMoveDirection.Back) {\n\t\t\t\t\taddLeftNavigating(p);\n\t\t\t\t} else {\n\t\t\t\t\taddRightNavigating(p);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatStr(`${ESC}f`)) {\n\t\t\t\taddRightNavigating(new CursorMovePrediction(CursorMoveDirection.Forwards, true, 1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatStr(`${ESC}b`)) {\n\t\t\t\taddLeftNavigating(new CursorMovePrediction(CursorMoveDirection.Back, true, 1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatChar('\\r') && buffer.cursorY < terminal.rows - 1) {\n\t\t\t\tthis.timeline.addPrediction(buffer, new NewlinePrediction());\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// something else\n\t\t\tthis.timeline.addBoundary(buffer, new HardBoundary());\n\t\t\tbreak;\n\t\t}\n\n\t\tif (this.timeline.length === 1) {\n\t\t\tthis.deferClearingPredictions();\n\t\t\tthis.typeaheadStyle!.startTracking();\n\t\t}\n\t}\n\n\tprivate onBeforeProcessData(event: IBeforeProcessDataEvent): void {\n\t\tif (!this.timeline) {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('incoming data:', JSON.stringify(event.data));\n\t\tevent.data = this.timeline.beforeServerInput(event.data);\n\t\t// console.log('emitted data:', JSON.stringify(event.data));\n\n\t\tthis.deferClearingPredictions();\n\t}\n}\n"]}