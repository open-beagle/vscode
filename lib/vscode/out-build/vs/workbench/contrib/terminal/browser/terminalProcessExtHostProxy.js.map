{"version":3,"file":"terminalProcessExtHostProxy.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IShellLaunchConfig, ITerminalChildProcess, ITerminalDimensions, ITerminalDimensionsOverride, ITerminalLaunchError, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ITerminalProcessExtHostProxy } from 'vs/workbench/contrib/terminal/common/terminal';\n\nexport class TerminalProcessExtHostProxy extends Disposable implements ITerminalChildProcess, ITerminalProcessExtHostProxy {\n\treadonly id = 0;\n\treadonly shouldPersist = false;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\tpublic readonly onProcessData: Event<string> = this._onProcessData.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<number | undefined>());\n\tpublic readonly onProcessExit: Event<number | undefined> = this._onProcessExit.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ pid: number, cwd: string }>());\n\tpublic get onProcessReady(): Event<{ pid: number, cwd: string }> { return this._onProcessReady.event; }\n\tprivate readonly _onProcessTitleChanged = this._register(new Emitter<string>());\n\tpublic readonly onProcessTitleChanged: Event<string> = this._onProcessTitleChanged.event;\n\tprivate readonly _onProcessOverrideDimensions = this._register(new Emitter<ITerminalDimensionsOverride | undefined>());\n\tpublic get onProcessOverrideDimensions(): Event<ITerminalDimensionsOverride | undefined> { return this._onProcessOverrideDimensions.event; }\n\tprivate readonly _onProcessResolvedShellLaunchConfig = this._register(new Emitter<IShellLaunchConfig>());\n\tpublic get onProcessResolvedShellLaunchConfig(): Event<IShellLaunchConfig> { return this._onProcessResolvedShellLaunchConfig.event; }\n\n\tprivate readonly _onStart = this._register(new Emitter<void>());\n\tpublic readonly onStart: Event<void> = this._onStart.event;\n\tprivate readonly _onInput = this._register(new Emitter<string>());\n\tpublic readonly onInput: Event<string> = this._onInput.event;\n\tprivate readonly _onBinary = this._register(new Emitter<string>());\n\tpublic readonly onBinary: Event<string> = this._onBinary.event;\n\tprivate readonly _onResize: Emitter<{ cols: number, rows: number }> = this._register(new Emitter<{ cols: number, rows: number }>());\n\tpublic readonly onResize: Event<{ cols: number, rows: number }> = this._onResize.event;\n\tprivate readonly _onAcknowledgeDataEvent = this._register(new Emitter<number>());\n\tpublic readonly onAcknowledgeDataEvent: Event<number> = this._onAcknowledgeDataEvent.event;\n\tprivate readonly _onShutdown = this._register(new Emitter<boolean>());\n\tpublic readonly onShutdown: Event<boolean> = this._onShutdown.event;\n\tprivate readonly _onRequestInitialCwd = this._register(new Emitter<void>());\n\tpublic readonly onRequestInitialCwd: Event<void> = this._onRequestInitialCwd.event;\n\tprivate readonly _onRequestCwd = this._register(new Emitter<void>());\n\tpublic readonly onRequestCwd: Event<void> = this._onRequestCwd.event;\n\tprivate readonly _onRequestLatency = this._register(new Emitter<void>());\n\tpublic readonly onRequestLatency: Event<void> = this._onRequestLatency.event;\n\tprivate readonly _onProcessShellTypeChanged = this._register(new Emitter<TerminalShellType>());\n\tpublic readonly onProcessShellTypeChanged = this._onProcessShellTypeChanged.event;\n\n\n\tprivate _pendingInitialCwdRequests: ((value: string | PromiseLike<string>) => void)[] = [];\n\tprivate _pendingCwdRequests: ((value: string | PromiseLike<string>) => void)[] = [];\n\tprivate _pendingLatencyRequests: ((value: number | PromiseLike<number>) => void)[] = [];\n\n\tconstructor(\n\t\tpublic instanceId: number,\n\t\tprivate _cols: number,\n\t\tprivate _rows: number,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic emitData(data: string): void {\n\t\tthis._onProcessData.fire(data);\n\t}\n\n\tpublic emitTitle(title: string): void {\n\t\tthis._onProcessTitleChanged.fire(title);\n\t}\n\n\tpublic emitReady(pid: number, cwd: string): void {\n\t\tthis._onProcessReady.fire({ pid, cwd });\n\t}\n\n\tpublic emitExit(exitCode: number | undefined): void {\n\t\tthis._onProcessExit.fire(exitCode);\n\t\tthis.dispose();\n\t}\n\n\tpublic emitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void {\n\t\tthis._onProcessOverrideDimensions.fire(dimensions);\n\t}\n\n\tpublic emitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._onProcessResolvedShellLaunchConfig.fire(shellLaunchConfig);\n\t}\n\n\tpublic emitInitialCwd(initialCwd: string): void {\n\t\twhile (this._pendingInitialCwdRequests.length > 0) {\n\t\t\tthis._pendingInitialCwdRequests.pop()!(initialCwd);\n\t\t}\n\t}\n\n\tpublic emitCwd(cwd: string): void {\n\t\twhile (this._pendingCwdRequests.length > 0) {\n\t\t\tthis._pendingCwdRequests.pop()!(cwd);\n\t\t}\n\t}\n\n\tpublic emitLatency(latency: number): void {\n\t\twhile (this._pendingLatencyRequests.length > 0) {\n\t\t\tthis._pendingLatencyRequests.pop()!(latency);\n\t\t}\n\t}\n\n\tpublic async start(): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._terminalService.requestStartExtensionTerminal(this, this._cols, this._rows);\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\tthis._onShutdown.fire(immediate);\n\t}\n\n\tpublic input(data: string): void {\n\t\tthis._onInput.fire(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tthis._onResize.fire({ cols, rows });\n\t}\n\n\tpublic acknowledgeDataEvent(): void {\n\t\t// Flow control is disabled for extension terminals\n\t}\n\n\tpublic async processBinary(data: string): Promise<void> {\n\t\t// Disabled for extension terminals\n\t\tthis._onBinary.fire(data);\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestInitialCwd.fire();\n\t\t\tthis._pendingInitialCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestCwd.fire();\n\t\t\tthis._pendingCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tpublic getLatency(): Promise<number> {\n\t\treturn new Promise<number>(resolve => {\n\t\t\tthis._onRequestLatency.fire();\n\t\t\tthis._pendingLatencyRequests.push(resolve);\n\t\t});\n\t}\n}\n"]}