{"version":3,"sources":["vs/workbench/contrib/terminal/electron-sandbox/terminalRemote.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWhG,SAAgB,2BAA2B;QAC1C,MAAM,cAAc,GAAG,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC,CAAC;QAChG,cAAc,CAAC,uBAAuB,CAAC,8BAAoB,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,kDAAkD,EAAE,mCAAwB,CAAC,CAAC;IAC/K,CAAC;IAHD,kEAGC;IAED,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,gBAAM;QAIvD,YACC,EAAU,EAAE,KAAa,EACU,gBAAkC,EACzB,yBAAoD;YAEhG,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAHkB,qBAAgB,GAAhB,gBAAgB,CAAkB;YACzB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAGjG,CAAC;QAEe,GAAG;YAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxG,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC;KACD,CAAA;IApBuB,+BAAE,wDAAiC;IACnC,kCAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAoC,EAAE,IAAwC,CAAC,CAAC;IAFhH,4BAA4B;QAMtC,WAAA,2BAAgB,CAAA;QAChB,WAAA,uCAAyB,CAAA;OAPf,4BAA4B,CAqBxC;IArBY,oEAA4B","file":"terminalRemote.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as ActionExtensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { TERMINAL_ACTION_CATEGORY, TERMINAL_COMMAND_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { Action } from 'vs/base/common/actions';\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport function registerRemoteContributions() {\n\tconst actionRegistry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\tactionRegistry.registerWorkbenchAction(SyncActionDescriptor.from(CreateNewLocalTerminalAction), 'Terminal: Create New Integrated Terminal (Local)', TERMINAL_ACTION_CATEGORY);\n}\n\nexport class CreateNewLocalTerminalAction extends Action {\n\tpublic static readonly ID = TERMINAL_COMMAND_ID.NEW_LOCAL;\n\tpublic static readonly LABEL = nls.localize('workbench.action.terminal.newLocal', \"Create New Integrated Terminal (Local)\");\n\n\tconstructor(\n\t\tid: string, label: string,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@INativeEnvironmentService private readonly _nativeEnvironmentService: INativeEnvironmentService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic override run(): Promise<any> {\n\t\tconst instance = this._terminalService.createTerminal({ cwd: this._nativeEnvironmentService.userHome });\n\t\tif (!instance) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis._terminalService.setActiveInstance(instance);\n\t\treturn this._terminalService.showPanel(true);\n\t}\n}\n"]}