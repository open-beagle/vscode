{"version":3,"file":"terminal.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/electron-sandbox/terminal.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,CAAA,GAAA,6CAAkC,CAAA,CAAC,2BAAgB,EAAE,8BAAmB,CAAC,QAAQ,EAAE,EAAE,4BAA4B,EAAE,IAAI,EAAE,CAAC,CAAC;IAE3H,CAAA,GAAA,8BAAiB,CAAA,CAAC,gCAAqB,EAAE,2CAAoB,EAAE,IAAI,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IACtG,iBAAiB,CAAC,6BAA6B,CAAC,uDAA0B,gBAAuB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { registerSharedProcessRemoteService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ILocalTerminalService, TerminalIpcChannels } from 'vs/platform/terminal/common/terminal';\nimport { ILocalPtyService } from 'vs/platform/terminal/electron-sandbox/terminal';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { LocalTerminalService } from 'vs/workbench/contrib/terminal/electron-sandbox/localTerminalService';\nimport { TerminalNativeContribution } from 'vs/workbench/contrib/terminal/electron-sandbox/terminalNativeContribution';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nregisterSharedProcessRemoteService(ILocalPtyService, TerminalIpcChannels.LocalPty, { supportsDelayedInstantiation: true });\n\nregisterSingleton(ILocalTerminalService, LocalTerminalService, true);\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(TerminalNativeContribution, LifecyclePhase.Ready);\n"]}