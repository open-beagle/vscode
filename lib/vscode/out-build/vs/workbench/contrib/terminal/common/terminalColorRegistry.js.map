{"version":3,"sources":["vs/workbench/contrib/terminal/common/terminalColorRegistry.ts"],"names":[],"mappings":"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","file":"terminalColorRegistry.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { registerColor, ColorIdentifier, ColorDefaults } from 'vs/platform/theme/common/colorRegistry';\nimport { PANEL_BORDER } from 'vs/workbench/common/theme';\n\n/**\n * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n * of the color in the terminal color table.\n */\nexport const ansiColorIdentifiers: ColorIdentifier[] = [];\n\nexport const TERMINAL_BACKGROUND_COLOR = registerColor('terminal.background', null, nls.localize('terminal.background', 'The background color of the terminal, this allows coloring the terminal differently to the panel.'));\nexport const TERMINAL_FOREGROUND_COLOR = registerColor('terminal.foreground', {\n\tlight: '#333333',\n\tdark: '#CCCCCC',\n\thc: '#FFFFFF'\n}, nls.localize('terminal.foreground', 'The foreground color of the terminal.'));\nexport const TERMINAL_CURSOR_FOREGROUND_COLOR = registerColor('terminalCursor.foreground', null, nls.localize('terminalCursor.foreground', 'The foreground color of the terminal cursor.'));\nexport const TERMINAL_CURSOR_BACKGROUND_COLOR = registerColor('terminalCursor.background', null, nls.localize('terminalCursor.background', 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const TERMINAL_SELECTION_BACKGROUND_COLOR = registerColor('terminal.selectionBackground', {\n\tlight: '#00000040',\n\tdark: '#FFFFFF40',\n\thc: '#FFFFFF80'\n}, nls.localize('terminal.selectionBackground', 'The selection background color of the terminal.'));\nexport const TERMINAL_BORDER_COLOR = registerColor('terminal.border', {\n\tdark: PANEL_BORDER,\n\tlight: PANEL_BORDER,\n\thc: PANEL_BORDER\n}, nls.localize('terminal.border', 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'));\n\nexport const ansiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n\t'terminal.ansiBlack': {\n\t\tindex: 0,\n\t\tdefaults: {\n\t\t\tlight: '#000000',\n\t\t\tdark: '#000000',\n\t\t\thc: '#000000'\n\t\t}\n\t},\n\t'terminal.ansiRed': {\n\t\tindex: 1,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#cd3131',\n\t\t\thc: '#cd0000'\n\t\t}\n\t},\n\t'terminal.ansiGreen': {\n\t\tindex: 2,\n\t\tdefaults: {\n\t\t\tlight: '#00BC00',\n\t\t\tdark: '#0DBC79',\n\t\t\thc: '#00cd00'\n\t\t}\n\t},\n\t'terminal.ansiYellow': {\n\t\tindex: 3,\n\t\tdefaults: {\n\t\t\tlight: '#949800',\n\t\t\tdark: '#e5e510',\n\t\t\thc: '#cdcd00'\n\t\t}\n\t},\n\t'terminal.ansiBlue': {\n\t\tindex: 4,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#2472c8',\n\t\t\thc: '#0000ee'\n\t\t}\n\t},\n\t'terminal.ansiMagenta': {\n\t\tindex: 5,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#bc3fbc',\n\t\t\thc: '#cd00cd'\n\t\t}\n\t},\n\t'terminal.ansiCyan': {\n\t\tindex: 6,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#11a8cd',\n\t\t\thc: '#00cdcd'\n\t\t}\n\t},\n\t'terminal.ansiWhite': {\n\t\tindex: 7,\n\t\tdefaults: {\n\t\t\tlight: '#555555',\n\t\t\tdark: '#e5e5e5',\n\t\t\thc: '#e5e5e5'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlack': {\n\t\tindex: 8,\n\t\tdefaults: {\n\t\t\tlight: '#666666',\n\t\t\tdark: '#666666',\n\t\t\thc: '#7f7f7f'\n\t\t}\n\t},\n\t'terminal.ansiBrightRed': {\n\t\tindex: 9,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#f14c4c',\n\t\t\thc: '#ff0000'\n\t\t}\n\t},\n\t'terminal.ansiBrightGreen': {\n\t\tindex: 10,\n\t\tdefaults: {\n\t\t\tlight: '#14CE14',\n\t\t\tdark: '#23d18b',\n\t\t\thc: '#00ff00'\n\t\t}\n\t},\n\t'terminal.ansiBrightYellow': {\n\t\tindex: 11,\n\t\tdefaults: {\n\t\t\tlight: '#b5ba00',\n\t\t\tdark: '#f5f543',\n\t\t\thc: '#ffff00'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlue': {\n\t\tindex: 12,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#3b8eea',\n\t\t\thc: '#5c5cff'\n\t\t}\n\t},\n\t'terminal.ansiBrightMagenta': {\n\t\tindex: 13,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#d670d6',\n\t\t\thc: '#ff00ff'\n\t\t}\n\t},\n\t'terminal.ansiBrightCyan': {\n\t\tindex: 14,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#29b8db',\n\t\t\thc: '#00ffff'\n\t\t}\n\t},\n\t'terminal.ansiBrightWhite': {\n\t\tindex: 15,\n\t\tdefaults: {\n\t\t\tlight: '#a5a5a5',\n\t\t\tdark: '#e5e5e5',\n\t\t\thc: '#ffffff'\n\t\t}\n\t}\n};\n\nexport function registerColors(): void {\n\tfor (const id in ansiColorMap) {\n\t\tconst entry = ansiColorMap[id];\n\t\tconst colorName = id.substring(13);\n\t\tansiColorIdentifiers[entry.index] = registerColor(id, entry.defaults, nls.localize('terminal.ansiColor', '\\'{0}\\' ANSI color in the terminal.', colorName));\n\t}\n}\n"]}