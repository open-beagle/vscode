{"version":3,"file":"remoteTerminalChannel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/common/remoteTerminalChannel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessDataEvent, IShellLaunchConfig, IShellLaunchConfigDto, ITerminalDimensionsOverride, ITerminalEnvironment, ITerminalLaunchError, ITerminalsLayoutInfo, ITerminalsLayoutInfoById, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport interface ICompleteTerminalConfiguration {\n\t'terminal.integrated.automationShell.windows': string;\n\t'terminal.integrated.automationShell.osx': string;\n\t'terminal.integrated.automationShell.linux': string;\n\t'terminal.integrated.shell.windows': string;\n\t'terminal.integrated.shell.osx': string;\n\t'terminal.integrated.shell.linux': string;\n\t'terminal.integrated.shellArgs.windows': string | string[];\n\t'terminal.integrated.shellArgs.osx': string | string[];\n\t'terminal.integrated.shellArgs.linux': string | string[];\n\t'terminal.integrated.env.windows': ITerminalEnvironment;\n\t'terminal.integrated.env.osx': ITerminalEnvironment;\n\t'terminal.integrated.env.linux': ITerminalEnvironment;\n\t'terminal.integrated.inheritEnv': boolean;\n\t'terminal.integrated.cwd': string;\n\t'terminal.integrated.detectLocale': 'auto' | 'off' | 'on';\n}\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string; };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\tcols: number;\n\trows: number;\n\tresolverEnv: { [key: string]: string | null; } | undefined\n}\n\nexport interface ICreateTerminalProcessResult {\n\tpersistentTerminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport class RemoteTerminalChannelClient {\n\n\tpublic get onPtyHostExit(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostExitEvent');\n\t}\n\tpublic get onPtyHostStart(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostStartEvent');\n\t}\n\tpublic get onPtyHostUnresponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostUnresponsiveEvent');\n\t}\n\tpublic get onPtyHostResponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostResponsiveEvent');\n\t}\n\tpublic get onProcessData(): Event<{ id: number, event: IProcessDataEvent | string }> {\n\t\treturn this._channel.listen<{ id: number, event: IProcessDataEvent | string }>('$onProcessDataEvent');\n\t}\n\tpublic get onProcessExit(): Event<{ id: number, event: number | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: number | undefined }>('$onProcessExitEvent');\n\t}\n\tpublic get onProcessReady(): Event<{ id: number, event: { pid: number, cwd: string } }> {\n\t\treturn this._channel.listen<{ id: number, event: { pid: number, cwd: string } }>('$onProcessReadyEvent');\n\t}\n\tpublic get onProcessReplay(): Event<{ id: number, event: IPtyHostProcessReplayEvent }> {\n\t\treturn this._channel.listen<{ id: number, event: IPtyHostProcessReplayEvent }>('$onProcessReplayEvent');\n\t}\n\tpublic get onProcessTitleChanged(): Event<{ id: number, event: string }> {\n\t\treturn this._channel.listen<{ id: number, event: string }>('$onProcessTitleChangedEvent');\n\t}\n\tpublic get onProcessShellTypeChanged(): Event<{ id: number, event: TerminalShellType | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: TerminalShellType | undefined }>('$onProcessShellTypeChangedEvent');\n\t}\n\tpublic get onProcessOverrideDimensions(): Event<{ id: number, event: ITerminalDimensionsOverride | undefined }> {\n\t\treturn this._channel.listen<{ id: number, event: ITerminalDimensionsOverride | undefined }>('$onProcessOverrideDimensionsEvent');\n\t}\n\tpublic get onProcessResolvedShellLaunchConfig(): Event<{ id: number, event: IShellLaunchConfig }> {\n\t\treturn this._channel.listen<{ id: number, event: IShellLaunchConfig }>('$onProcessResolvedShellLaunchConfigEvent');\n\t}\n\tpublic get onProcessOrphanQuestion(): Event<{ id: number }> {\n\t\treturn this._channel.listen<{ id: number }>('$onProcessOrphanQuestion');\n\t}\n\tpublic get onExecuteCommand(): Event<{ reqId: number, commandId: string, commandArgs: any[] }> {\n\t\treturn this._channel.listen<{ reqId: number, commandId: string, commandArgs: any[] }>('$onExecuteCommand');\n\t}\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IWorkbenchConfigurationService private readonly _configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\trestartPtyHost(): Promise<void> {\n\t\treturn this._channel.call('$restartPtyHost', []);\n\t}\n\n\tpublic async createProcess(shellLaunchConfig: IShellLaunchConfigDto, configuration: ICompleteTerminalConfiguration, activeWorkspaceRootUri: URI | undefined, shouldPersistTerminal: boolean, cols: number, rows: number): Promise<ICreateTerminalProcessResult> {\n\t\t// Be sure to first wait for the remote configuration\n\t\tawait this._configurationService.whenRemoteConfigurationLoaded();\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = await this._resolverService.resolveWithInteraction(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.userData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>('$createProcess', args);\n\t}\n\n\tpublic attachToProcess(id: number): Promise<void> {\n\t\treturn this._channel.call('$attachToProcess', [id]);\n\t}\n\tpublic listProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._channel.call('$listProcesses');\n\t}\n\tpublic reduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._channel.call('$reduceConnectionGraceTime');\n\t}\n\tpublic processBinary(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$processBinary', [id, data]);\n\t}\n\tpublic start(id: number): Promise<ITerminalLaunchError | void> {\n\t\treturn this._channel.call('$start', [id]);\n\t}\n\tpublic input(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$input', [id, data]);\n\t}\n\tpublic acknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._channel.call('$acknowledgeDataEvent', [id, charCount]);\n\t}\n\tpublic shutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._channel.call('$shutdown', [id, immediate]);\n\t}\n\tpublic resize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._channel.call('$resize', [id, cols, rows]);\n\t}\n\tpublic getInitialCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getInitialCwd', [id]);\n\t}\n\tpublic getCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getCwd', [id]);\n\t}\n\tpublic orphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._channel.call('$orphanQuestionReply', [id]);\n\t}\n\tpublic sendCommandResult(reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\treturn this._channel.call('$sendCommandResult', [reqId, isError, payload]);\n\t}\n\n\tpublic getDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._channel.call('$getDefaultSystemShell', [osOverride]);\n\t}\n\n\tpublic getShellEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._channel.call('$getShellEnvironment');\n\t}\n\n\tpublic setTerminalLayoutInfo(layout: ITerminalsLayoutInfoById): Promise<void> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: ISetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t\ttabs: layout.tabs\n\t\t};\n\t\treturn this._channel.call<void>('$setTerminalLayoutInfo', args);\n\t}\n\n\tpublic getTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: IGetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t};\n\t\treturn this._channel.call<ITerminalsLayoutInfo>('$getTerminalLayoutInfo', args);\n\t}\n}\n"]}