{"version":3,"file":"terminalEnvironment.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/test/common/terminalEnvironment.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { addTerminalEnvironmentKeys, mergeEnvironments, getCwd, getDefaultShell, getLangEnvVariable, shouldSetLangEnvVariable } from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { isWindows, Platform } from 'vs/base/common/platform';\n\nsuite('Workbench - TerminalEnvironment', () => {\n\tsuite('addTerminalEnvironmentKeys', () => {\n\t\ttest('should set expected variables', () => {\n\t\t\tconst env: { [key: string]: any } = {};\n\t\t\taddTerminalEnvironmentKeys(env, '1.2.3', 'en', 'on');\n\t\t\tassert.strictEqual(env['TERM_PROGRAM'], 'vscode');\n\t\t\tassert.strictEqual(env['TERM_PROGRAM_VERSION'], '1.2.3');\n\t\t\tassert.strictEqual(env['COLORTERM'], 'truecolor');\n\t\t\tassert.strictEqual(env['LANG'], 'en_US.UTF-8');\n\t\t});\n\t\ttest('should use language variant for LANG that is provided in locale', () => {\n\t\t\tconst env: { [key: string]: any } = {};\n\t\t\taddTerminalEnvironmentKeys(env, '1.2.3', 'en-au', 'on');\n\t\t\tassert.strictEqual(env['LANG'], 'en_AU.UTF-8', 'LANG is equal to the requested locale with UTF-8');\n\t\t});\n\t\ttest('should fallback to en_US when no locale is provided', () => {\n\t\t\tconst env2: { [key: string]: any } = { FOO: 'bar' };\n\t\t\taddTerminalEnvironmentKeys(env2, '1.2.3', undefined, 'on');\n\t\t\tassert.strictEqual(env2['LANG'], 'en_US.UTF-8', 'LANG is equal to en_US.UTF-8 as fallback.'); // More info on issue #14586\n\t\t});\n\t\ttest('should fallback to en_US when an invalid locale is provided', () => {\n\t\t\tconst env3 = { LANG: 'replace' };\n\t\t\taddTerminalEnvironmentKeys(env3, '1.2.3', undefined, 'on');\n\t\t\tassert.strictEqual(env3['LANG'], 'en_US.UTF-8', 'LANG is set to the fallback LANG');\n\t\t});\n\t\ttest('should override existing LANG', () => {\n\t\t\tconst env4 = { LANG: 'en_AU.UTF-8' };\n\t\t\taddTerminalEnvironmentKeys(env4, '1.2.3', undefined, 'on');\n\t\t\tassert.strictEqual(env4['LANG'], 'en_US.UTF-8', 'LANG is equal to the parent environment\\'s LANG');\n\t\t});\n\t});\n\n\tsuite('shouldSetLangEnvVariable', () => {\n\t\ttest('auto', () => {\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({}, 'auto'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'auto'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'auto'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'auto'), false);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'auto'), false);\n\t\t});\n\t\ttest('off', () => {\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({}, 'off'), false);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'off'), false);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'off'), false);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'off'), false);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'off'), false);\n\t\t});\n\t\ttest('on', () => {\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({}, 'on'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'on'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'on'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'on'), true);\n\t\t\tassert.strictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'on'), true);\n\t\t});\n\t});\n\n\tsuite('getLangEnvVariable', () => {\n\t\ttest('should fallback to en_US when no locale is provided', () => {\n\t\t\tassert.strictEqual(getLangEnvVariable(undefined), 'en_US.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable(''), 'en_US.UTF-8');\n\t\t});\n\t\ttest('should fallback to default language variants when variant isn\\'t provided', () => {\n\t\t\tassert.strictEqual(getLangEnvVariable('af'), 'af_ZA.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('am'), 'am_ET.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('be'), 'be_BY.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('bg'), 'bg_BG.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('ca'), 'ca_ES.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('cs'), 'cs_CZ.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('da'), 'da_DK.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('de'), 'de_DE.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('el'), 'el_GR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('en'), 'en_US.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('es'), 'es_ES.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('et'), 'et_EE.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('eu'), 'eu_ES.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('fi'), 'fi_FI.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('fr'), 'fr_FR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('he'), 'he_IL.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('hr'), 'hr_HR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('hu'), 'hu_HU.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('hy'), 'hy_AM.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('is'), 'is_IS.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('it'), 'it_IT.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('ja'), 'ja_JP.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('kk'), 'kk_KZ.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('ko'), 'ko_KR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('lt'), 'lt_LT.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('nl'), 'nl_NL.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('no'), 'no_NO.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('pl'), 'pl_PL.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('pt'), 'pt_BR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('ro'), 'ro_RO.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('ru'), 'ru_RU.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('sk'), 'sk_SK.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('sl'), 'sl_SI.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('sr'), 'sr_YU.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('sv'), 'sv_SE.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('tr'), 'tr_TR.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('uk'), 'uk_UA.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('zh'), 'zh_CN.UTF-8');\n\t\t});\n\t\ttest('should set language variant based on full locale', () => {\n\t\t\tassert.strictEqual(getLangEnvVariable('en-AU'), 'en_AU.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('en-au'), 'en_AU.UTF-8');\n\t\t\tassert.strictEqual(getLangEnvVariable('fa-ke'), 'fa_KE.UTF-8');\n\t\t});\n\t});\n\n\tsuite('mergeEnvironments', () => {\n\t\ttest('should add keys', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b'\n\t\t\t};\n\t\t\tconst other = {\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tassert.deepStrictEqual(parent, {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\n\t\t(!isWindows ? test.skip : test)('should add keys ignoring case on Windows', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b'\n\t\t\t};\n\t\t\tconst other = {\n\t\t\t\tA: 'c'\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tassert.deepStrictEqual(parent, {\n\t\t\t\ta: 'c'\n\t\t\t});\n\t\t});\n\n\t\ttest('null values should delete keys from the parent env', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tconst other: IStringDictionary<string | null> = {\n\t\t\t\ta: null\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tassert.deepStrictEqual(parent, {\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\n\t\t(!isWindows ? test.skip : test)('null values should delete keys from the parent env ignoring case on Windows', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tconst other: IStringDictionary<string | null> = {\n\t\t\t\tA: null\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tassert.deepStrictEqual(parent, {\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('getCwd', () => {\n\t\t// This helper checks the paths in a cross-platform friendly manner\n\t\tfunction assertPathsMatch(a: string, b: string): void {\n\t\t\tassert.strictEqual(Uri.file(a).fsPath, Uri.file(b).fsPath);\n\t\t}\n\n\t\ttest('should default to userHome for an empty workspace', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, undefined), '/userHome/');\n\t\t});\n\n\t\ttest('should use to the workspace if it exists', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/foo'), undefined), '/foo');\n\t\t});\n\n\t\ttest('should use an absolute custom cwd as is', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, '/foo'), '/foo');\n\t\t});\n\n\t\ttest('should normalize a relative custom cwd against the workspace path', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), 'foo'), '/bar/foo');\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), './foo'), '/bar/foo');\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), '../foo'), '/foo');\n\t\t});\n\n\t\ttest('should fall back for relative a custom cwd that doesn\\'t have a workspace', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, 'foo'), '/userHome/');\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, './foo'), '/userHome/');\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, '../foo'), '/userHome/');\n\t\t});\n\n\t\ttest('should ignore custom cwd when told to ignore', () => {\n\t\t\tassertPathsMatch(getCwd({ executable: undefined, args: [], ignoreConfigurationCwd: true }, '/userHome/', undefined, Uri.file('/bar'), '/foo'), '/bar');\n\t\t});\n\t});\n\n\tsuite('getDefaultShell', () => {\n\t\ttest('should change Sysnative to System32 in non-WoW64 systems', () => {\n\t\t\tconst shell = getDefaultShell(key => {\n\t\t\t\treturn ({ 'terminal.integrated.shell.windows': 'C:\\\\Windows\\\\Sysnative\\\\cmd.exe' } as any)[key];\n\t\t\t}, 'DEFAULT', false, 'C:\\\\Windows', undefined, {} as any, false, Platform.Windows);\n\t\t\tassert.strictEqual(shell, 'C:\\\\Windows\\\\System32\\\\cmd.exe');\n\t\t});\n\n\t\ttest('should not change Sysnative to System32 in WoW64 systems', () => {\n\t\t\tconst shell = getDefaultShell(key => {\n\t\t\t\treturn ({ 'terminal.integrated.shell.windows': 'C:\\\\Windows\\\\Sysnative\\\\cmd.exe' } as any)[key];\n\t\t\t}, 'DEFAULT', true, 'C:\\\\Windows', undefined, {} as any, false, Platform.Windows);\n\t\t\tassert.strictEqual(shell, 'C:\\\\Windows\\\\Sysnative\\\\cmd.exe');\n\t\t});\n\n\t\ttest('should use automationShell when specified', () => {\n\t\t\tconst shell1 = getDefaultShell(key => {\n\t\t\t\treturn ({\n\t\t\t\t\t'terminal.integrated.shell.windows': 'shell',\n\t\t\t\t\t'terminal.integrated.automationShell.windows': undefined\n\t\t\t\t} as any)[key];\n\t\t\t}, 'DEFAULT', false, 'C:\\\\Windows', undefined, {} as any, false, Platform.Windows);\n\t\t\tassert.strictEqual(shell1, 'shell', 'automationShell was false');\n\t\t\tconst shell2 = getDefaultShell(key => {\n\t\t\t\treturn ({\n\t\t\t\t\t'terminal.integrated.shell.windows': 'shell',\n\t\t\t\t\t'terminal.integrated.automationShell.windows': undefined\n\t\t\t\t} as any)[key];\n\t\t\t}, 'DEFAULT', false, 'C:\\\\Windows', undefined, {} as any, true, Platform.Windows);\n\t\t\tassert.strictEqual(shell2, 'shell', 'automationShell was true');\n\t\t\tconst shell3 = getDefaultShell(key => {\n\t\t\t\treturn ({\n\t\t\t\t\t'terminal.integrated.shell.windows': 'shell',\n\t\t\t\t\t'terminal.integrated.automationShell.windows': 'automationShell'\n\t\t\t\t} as any)[key];\n\t\t\t}, 'DEFAULT', false, 'C:\\\\Windows', undefined, {} as any, true, Platform.Windows);\n\t\t\tassert.strictEqual(shell3, 'automationShell', 'automationShell was true and specified in settings');\n\t\t});\n\t});\n});\n"]}