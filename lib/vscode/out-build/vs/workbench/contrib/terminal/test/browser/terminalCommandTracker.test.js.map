{"version":3,"file":"terminalCommandTracker.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/terminal/test/browser/terminalCommandTracker.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Terminal } from 'xterm';\nimport { CommandTrackerAddon } from 'vs/workbench/contrib/terminal/browser/addons/commandTrackerAddon';\nimport { isWindows } from 'vs/base/common/platform';\nimport { XTermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\n\ninterface TestTerminal extends Terminal {\n\t_core: XTermCore;\n}\n\nconst ROWS = 10;\nconst COLS = 10;\n\nasync function writeP(terminal: TestTerminal, data: string): Promise<void> {\n\treturn new Promise<void>(r => terminal.write(data, r));\n}\n\nsuite('Workbench - TerminalCommandTracker', () => {\n\tlet xterm: TestTerminal;\n\tlet commandTracker: CommandTrackerAddon;\n\n\tsetup(async () => {\n\t\txterm = (<TestTerminal>new Terminal({\n\t\t\tcols: COLS,\n\t\t\trows: ROWS\n\t\t}));\n\t\t// Fill initial viewport\n\t\tfor (let i = 0; i < ROWS - 1; i++) {\n\t\t\tawait writeP(xterm, `${i}\\n`);\n\t\t}\n\t\tcommandTracker = new CommandTrackerAddon();\n\t\txterm.loadAddon(commandTracker);\n\t});\n\n\tsuite('Command tracking', () => {\n\t\ttest('should track commands when the prompt is of sufficient size', async () => {\n\t\t\tassert.strictEqual(xterm.markers.length, 0);\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' });\n\t\t\tassert.strictEqual(xterm.markers.length, 1);\n\t\t});\n\t\ttest('should not track commands when the prompt is too small', async () => {\n\t\t\tassert.strictEqual(xterm.markers.length, 0);\n\t\t\tawait writeP(xterm, '\\x1b[2G'); // Move cursor to column 2\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' });\n\t\t\tassert.strictEqual(xterm.markers.length, 0);\n\t\t});\n\t});\n\n\tsuite('Commands', () => {\n\t\tlet container: HTMLElement;\n\t\tsetup(() => {\n\t\t\t(<any>window).matchMedia = () => {\n\t\t\t\treturn { addListener: () => { } };\n\t\t\t};\n\t\t\tcontainer = document.createElement('div');\n\t\t\tdocument.body.appendChild(container);\n\t\t\txterm.open(container);\n\t\t});\n\t\tteardown(() => {\n\t\t\tdocument.body.removeChild(container);\n\t\t});\n\t\ttest('should scroll to the next and previous commands', async () => {\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' }); // Mark line #10\n\t\t\tassert.strictEqual(xterm.markers[0].line, 9);\n\n\t\t\tfor (let i = 0; i < 20; i++) {\n\t\t\t\tawait writeP(xterm, `\\r\\n`);\n\t\t\t}\n\t\t\tassert.strictEqual(xterm.buffer.active.baseY, 20);\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 20);\n\n\t\t\t// Scroll to marker\n\t\t\tcommandTracker.scrollToPreviousCommand();\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 9);\n\n\t\t\t// Scroll to top boundary\n\t\t\tcommandTracker.scrollToPreviousCommand();\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 0);\n\n\t\t\t// Scroll to marker\n\t\t\tcommandTracker.scrollToNextCommand();\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 9);\n\n\t\t\t// Scroll to bottom boundary\n\t\t\tcommandTracker.scrollToNextCommand();\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 20);\n\t\t});\n\t\ttest('should select to the next and previous commands', async () => {\n\t\t\tawait writeP(xterm, '\\r0');\n\t\t\tawait writeP(xterm, '\\n\\r1');\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' }); // Mark line\n\t\t\tassert.strictEqual(xterm.markers[0].line, 10);\n\t\t\tawait writeP(xterm, '\\n\\r2');\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' }); // Mark line\n\t\t\tassert.strictEqual(xterm.markers[1].line, 11);\n\t\t\tawait writeP(xterm, '\\n\\r3');\n\n\t\t\tassert.strictEqual(xterm.buffer.active.baseY, 3);\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 3);\n\n\t\t\tassert.strictEqual(xterm.getSelection(), '');\n\t\t\tcommandTracker.selectToPreviousCommand();\n\t\t\tassert.strictEqual(xterm.getSelection(), '2');\n\t\t\tcommandTracker.selectToPreviousCommand();\n\t\t\tassert.strictEqual(xterm.getSelection(), isWindows ? '1\\r\\n2' : '1\\n2');\n\t\t\tcommandTracker.selectToNextCommand();\n\t\t\tassert.strictEqual(xterm.getSelection(), '2');\n\t\t\tcommandTracker.selectToNextCommand();\n\t\t\tassert.strictEqual(xterm.getSelection(), isWindows ? '\\r\\n' : '\\n');\n\t\t});\n\t\ttest('should select to the next and previous lines & commands', async () => {\n\t\t\tawait writeP(xterm, '\\r0');\n\t\t\tawait writeP(xterm, '\\n\\r1');\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' }); // Mark line\n\t\t\tassert.strictEqual(xterm.markers[0].line, 10);\n\t\t\tawait writeP(xterm, '\\n\\r2');\n\t\t\tawait writeP(xterm, '\\x1b[3G'); // Move cursor to column 3\n\t\t\txterm._core._onKey.fire({ key: '\\x0d' }); // Mark line\n\t\t\tassert.strictEqual(xterm.markers[1].line, 11);\n\t\t\tawait writeP(xterm, '\\n\\r3');\n\n\t\t\tassert.strictEqual(xterm.buffer.active.baseY, 3);\n\t\t\tassert.strictEqual(xterm.buffer.active.viewportY, 3);\n\n\t\t\tassert.strictEqual(xterm.getSelection(), '');\n\t\t\tcommandTracker.selectToPreviousLine();\n\t\t\tassert.strictEqual(xterm.getSelection(), '2');\n\t\t\tcommandTracker.selectToNextLine();\n\t\t\tcommandTracker.selectToNextLine();\n\t\t\tassert.strictEqual(xterm.getSelection(), '3');\n\t\t\tcommandTracker.selectToPreviousCommand();\n\t\t\tcommandTracker.selectToPreviousCommand();\n\t\t\tcommandTracker.selectToNextLine();\n\t\t\tassert.strictEqual(xterm.getSelection(), '2');\n\t\t\tcommandTracker.selectToPreviousCommand();\n\t\t\tassert.strictEqual(xterm.getSelection(), isWindows ? '1\\r\\n2' : '1\\n2');\n\t\t\tcommandTracker.selectToPreviousLine();\n\t\t\tassert.strictEqual(xterm.getSelection(), isWindows ? '0\\r\\n1\\r\\n2' : '0\\n1\\n2');\n\t\t});\n\t});\n});\n"]}