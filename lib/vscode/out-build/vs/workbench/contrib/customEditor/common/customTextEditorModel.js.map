{"version":3,"file":"customTextEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/customEditor/common/customTextEditorModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IReference } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IResolvedTextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { FileSystemProviderCapabilities, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IRevertOptions, ISaveOptions } from 'vs/workbench/common/editor';\nimport { ICustomEditorModel } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { ITextFileEditorModel, ITextFileService, TextFileEditorModelState } from 'vs/workbench/services/textfile/common/textfiles';\n\nexport class CustomTextEditorModel extends Disposable implements ICustomEditorModel {\n\n\tpublic static async create(\n\t\tinstantiationService: IInstantiationService,\n\t\tviewType: string,\n\t\tresource: URI\n\t): Promise<CustomTextEditorModel> {\n\t\treturn instantiationService.invokeFunction(async accessor => {\n\t\t\tconst textModelResolverService = accessor.get(ITextModelService);\n\t\t\tconst model = await textModelResolverService.createModelReference(resource);\n\t\t\treturn instantiationService.createInstance(CustomTextEditorModel, viewType, resource, model);\n\t\t});\n\t}\n\n\tprivate readonly _textFileModel: ITextFileEditorModel | undefined;\n\n\tprivate readonly _onDidChangeOrphaned = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeOrphaned = this._onDidChangeOrphaned.event;\n\n\tconstructor(\n\t\tpublic readonly viewType: string,\n\t\tprivate readonly _resource: URI,\n\t\tprivate readonly _model: IReference<IResolvedTextEditorModel>,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_model);\n\n\t\tthis._textFileModel = this.textFileService.files.get(_resource);\n\t\tif (this._textFileModel) {\n\t\t\tthis._register(this._textFileModel.onDidChangeOrphaned(() => this._onDidChangeOrphaned.fire()));\n\t\t}\n\n\t\tthis._register(this.textFileService.files.onDidChangeDirty(e => {\n\t\t\tif (isEqual(this.resource, e.resource)) {\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic get resource() {\n\t\treturn this._resource;\n\t}\n\n\tpublic isEditable(): boolean {\n\t\treturn !this._model.object.isReadonly();\n\t}\n\n\tpublic isOnReadonlyFileSystem(): boolean {\n\t\treturn this._fileService.hasCapability(this._resource, FileSystemProviderCapabilities.Readonly);\n\t}\n\n\tpublic get backupId() {\n\t\treturn undefined;\n\t}\n\n\tpublic isDirty(): boolean {\n\t\treturn this.textFileService.isDirty(this.resource);\n\t}\n\n\tpublic isOrphaned(): boolean {\n\t\treturn !!this._textFileModel?.hasState(TextFileEditorModelState.ORPHAN);\n\t}\n\n\tprivate readonly _onDidChangeDirty: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tpublic async revert(options?: IRevertOptions) {\n\t\treturn this.textFileService.revert(this.resource, options);\n\t}\n\n\tpublic saveCustomEditor(options?: ISaveOptions): Promise<URI | undefined> {\n\t\treturn this.textFileService.save(this.resource, options);\n\t}\n\n\tpublic async saveCustomEditorAs(resource: URI, targetResource: URI, options?: ISaveOptions): Promise<boolean> {\n\t\treturn !!await this.textFileService.saveAs(resource, targetResource, options);\n\t}\n}\n"]}