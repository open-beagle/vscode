{"version":3,"file":"customEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/customEditor/browser/customEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAwBhG,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,0DAAgC;QA2CtE,YACC,QAAa,EACb,QAAgB,EAChB,EAAU,EACV,OAAuB,EACvB,OAAsF,EAC5D,uBAAiD,EACnC,oBAA2C,EACnD,YAA2B,EACpB,mBAAyC,EAC3C,iBAAqC,EACzC,aAA6B,EAC3B,eAAiC;YAEpE,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,uBAAuB,CAAC,CAAC;YAPlB,yBAAoB,GAApB,oBAAoB,CAAuB;YACnD,iBAAY,GAAZ,YAAY,CAAe;YACpB,wBAAmB,GAAnB,mBAAmB,CAAsB;YAC3C,sBAAiB,GAAjB,iBAAiB,CAAoB;YACzC,kBAAa,GAAb,aAAa,CAAgB;YAC3B,oBAAe,GAAf,eAAe,CAAkB;YAGpE,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,WAAW,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,oBAAoB,CAAC;QAC3D,CAAC;QA5DD,MAAM,CAAC,MAAM,CACZ,oBAA2C,EAC3C,QAAa,EACb,QAAgB,EAChB,KAAkC,EAClC,OAA6C;YAE7C,OAAO,oBAAoB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBACrD,IAAI,QAAQ,KAAK,8CAAmB,CAAC,EAAE,EAAE;oBACxC,OAAO,QAAQ,CAAC,GAAG,CAAC,8BAAc,CAAC,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;iBACrF;gBACD,qEAAqE;gBACrE,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,sDAA0B,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACnF,IAAI,oBAAoB,GAAG,cAAc,CAAC,CAAC,CAAC,iBAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC5F,MAAM,EAAE,GAAG,CAAA,GAAA,mBAAY,CAAA,EAAE,CAAC;gBAC1B,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAe,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,aAAa,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBACjI,MAAM,KAAK,GAAG,oBAAoB,CAAC,cAAc,CAAC,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,CAAC,CAAC;gBACtJ,kEAAkE;gBAClE,IAAI,oBAAoB,EAAE;oBACzB,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAChC;gBACD,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;oBACjC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACzB;gBACD,OAAO,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;QAWD,IAAa,QAAQ,KAAK,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAyBxD,IAAoB,MAAM;YACzB,OAAO,iBAAiB,CAAC,MAAM,CAAC;QACjC,CAAC;QAEe,QAAQ;;YACvB,OAAO,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,mBAAmB,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,0CAAE,kCAAkC,CAAA,CAAC;QAClH,CAAC;QAEQ,OAAO;YACf,MAAM,IAAI,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QAEQ,OAAO,CAAC,KAAmB;YACnC,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,YAAY,iBAAiB;mBACxD,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ;mBAChC,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7C,CAAC;QAEQ,IAAI;YACZ,OAAO,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5H,CAAC;QAGD,IAAY,UAAU;YACrB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC;QAGD,IAAY,WAAW;YACtB,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACzE,CAAC;QAGD,IAAY,SAAS;YACpB,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;QAEe,QAAQ,CAAC,SAAqB;YAC7C,QAAQ,SAAS,EAAE;gBAClB;oBACC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5C,QAAQ;gBACR;oBACC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C;oBACC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC3C;QACF,CAAC;QAEO,aAAa,CAAC,KAAa;;YAClC,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,SAAS,0CAAE,MAAM,CAAC,UAAU,EAAE,CAAA,CAAC;YAEvD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS;gBAC9B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE;gBACtF,CAAC,CAAC,KAAK,CAAC;YAET,OAAO,CAAA,GAAA,yCAAuB,CAAA,CAAC,KAAK,EAAE;gBACrC,QAAQ;gBACR,QAAQ;aACR,CAAC,CAAC;QACJ,CAAC;QAEe,UAAU;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QACrE,CAAC;QAEe,UAAU;YACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,CAAC;QAClD,CAAC;QAEe,OAAO;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;aACjC;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC;QAEe,KAAK,CAAC,IAAI,CAAC,OAAwB,EAAE,OAAsB;YAC1E,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACrE,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,SAAS,CAAC,CAAC,iBAAiB;aACnC;YAED,IAAI,CAAC,CAAA,GAAA,mBAAO,CAAA,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACpC,OAAO,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC3F;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QAEe,KAAK,CAAC,MAAM,CAAC,OAAwB,EAAE,OAAsB;;YAC5E,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;YACxC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,oBAAoB,CAAC,CAAC;YACtG,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,SAAS,CAAC,CAAC,iBAAiB;aACnC;YAED,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;gBAC3F,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,MAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,0CAAE,MAAM,CAAC;QAC7C,CAAC;QAEe,KAAK,CAAC,MAAM,CAAC,KAAsB,EAAE,OAAwB;YAC5E,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAEe,KAAK,CAAC,OAAO;YAC5B,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;gBACtB,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,uBAAe,CAAA,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAChI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAE/F,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;oBACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;iBAC9B;aACD;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QAEQ,MAAM,CAAC,KAAsB,EAAE,WAAgB;YACvD,2DAA2D;YAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,CAAC,WAAW,CAAC,EAAE;gBACrC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC;aACnD;YAED,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QACrG,CAAC;QAEO,MAAM,CAAC,KAAsB,EAAE,WAAgB;YACtD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACvB,OAAO,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aAC9F;YAED,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,iBAAiB,EAC3E,WAAW,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,EAAE,EACP,SAAU,EAAG,gDAAgD;YAC7D,EAAE,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACzB,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7B,OAAO,SAAS,CAAC;QAClB,CAAC;QAEM,IAAI;YACV,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;QAEM,IAAI;YACV,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;QAIM,MAAM,CAAC,OAAmC;YAChD,iCAAiC;YACjC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC7B,CAAC;QAEkB,QAAQ,CAAC,KAAwB;YACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC3B,OAAO;aACP;YAED,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,QAAQ;YACX,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;aACtC;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QAED,IAAI,oBAAoB;YACvB,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACnC,CAAC;KACD,CAAA;IA/OgC,wBAAM,GAAG,iCAAiC,CAAC;IA0D3E;QADC,oBAAO;uDAGP;IAGD;QADC,oBAAO;wDAGP;IAGD;QADC,oBAAO;sDAGP;IApGW,iBAAiB;QAiD3B,WAAA,kDAAwB,CAAA;QACxB,WAAA,qCAAqB,CAAA;QACrB,WAAA,qBAAa,CAAA;QACb,WAAA,mCAAoB,CAAA;QACpB,WAAA,4BAAkB,CAAA;QAClB,YAAA,8BAAc,CAAA;QACd,YAAA,2BAAgB,CAAA;OAvDN,iBAAiB,CA6Q7B;IA7QY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { memoize } from 'vs/base/common/decorators';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isEqual } from 'vs/base/common/resources';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { GroupIdentifier, IEditorInput, IRevertOptions, ISaveOptions, Verbosity } from 'vs/workbench/common/editor';\nimport { defaultCustomEditor } from 'vs/workbench/contrib/customEditor/common/contributedCustomEditors';\nimport { ICustomEditorModel, ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { decorateFileEditorLabel } from 'vs/workbench/contrib/files/common/editors/fileEditorInput';\nimport { IWebviewService, WebviewOverlay } from 'vs/workbench/contrib/webview/browser/webview';\nimport { IWebviewWorkbenchService, LazilyResolvedWebviewEditorInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IUntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\n\nexport class CustomEditorInput extends LazilyResolvedWebviewEditorInput {\n\n\tstatic create(\n\t\tinstantiationService: IInstantiationService,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\tgroup: GroupIdentifier | undefined,\n\t\toptions?: { readonly customClasses?: string },\n\t): IEditorInput {\n\t\treturn instantiationService.invokeFunction(accessor => {\n\t\t\tif (viewType === defaultCustomEditor.id) {\n\t\t\t\treturn accessor.get(IEditorService).createEditorInput({ resource, forceFile: true });\n\t\t\t}\n\t\t\t// If it's an untitled file we must populate the untitledDocumentData\n\t\t\tconst untitledString = accessor.get(IUntitledTextEditorService).getValue(resource);\n\t\t\tlet untitledDocumentData = untitledString ? VSBuffer.fromString(untitledString) : undefined;\n\t\t\tconst id = generateUuid();\n\t\t\tconst webview = accessor.get(IWebviewService).createWebviewOverlay(id, { customClasses: options?.customClasses }, {}, undefined);\n\t\t\tconst input = instantiationService.createInstance(CustomEditorInput, resource, viewType, id, webview, { untitledDocumentData: untitledDocumentData });\n\t\t\t// If we're loading untitled file data we should ensure it's dirty\n\t\t\tif (untitledDocumentData) {\n\t\t\t\tinput._defaultDirtyState = true;\n\t\t\t}\n\t\t\tif (typeof group !== 'undefined') {\n\t\t\t\tinput.updateGroup(group);\n\t\t\t}\n\t\t\treturn input;\n\t\t});\n\t}\n\n\tpublic static override readonly typeId = 'workbench.editors.webviewEditor';\n\n\tprivate readonly _editorResource: URI;\n\tprivate _defaultDirtyState: boolean | undefined;\n\n\tprivate readonly _backupId: string | undefined;\n\n\tprivate readonly _untitledDocumentData: VSBuffer | undefined;\n\n\toverride get resource() { return this._editorResource; }\n\n\tprivate _modelRef?: IReference<ICustomEditorModel>;\n\n\tconstructor(\n\t\tresource: URI,\n\t\tviewType: string,\n\t\tid: string,\n\t\twebview: WebviewOverlay,\n\t\toptions: { startsDirty?: boolean, backupId?: string, untitledDocumentData?: VSBuffer },\n\t\t@IWebviewWorkbenchService webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ICustomEditorService private readonly customEditorService: ICustomEditorService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUndoRedoService private readonly undoRedoService: IUndoRedoService,\n\t) {\n\t\tsuper(id, viewType, '', webview, webviewWorkbenchService);\n\t\tthis._editorResource = resource;\n\t\tthis._defaultDirtyState = options.startsDirty;\n\t\tthis._backupId = options.backupId;\n\t\tthis._untitledDocumentData = options.untitledDocumentData;\n\t}\n\n\tpublic override get typeId(): string {\n\t\treturn CustomEditorInput.typeId;\n\t}\n\n\tpublic override canSplit() {\n\t\treturn !!this.customEditorService.getCustomEditorCapabilities(this.viewType)?.supportsMultipleEditorsPerDocument;\n\t}\n\n\toverride getName(): string {\n\t\tconst name = basename(this.labelService.getUriLabel(this.resource));\n\t\treturn this.decorateLabel(name);\n\t}\n\n\toverride matches(other: IEditorInput): boolean {\n\t\treturn this === other || (other instanceof CustomEditorInput\n\t\t\t&& this.viewType === other.viewType\n\t\t\t&& isEqual(this.resource, other.resource));\n\t}\n\n\toverride copy(): IEditorInput {\n\t\treturn CustomEditorInput.create(this.instantiationService, this.resource, this.viewType, this.group, this.webview.options);\n\t}\n\n\t@memoize\n\tprivate get shortTitle(): string {\n\t\treturn this.getName();\n\t}\n\n\t@memoize\n\tprivate get mediumTitle(): string {\n\t\treturn this.labelService.getUriLabel(this.resource, { relative: true });\n\t}\n\n\t@memoize\n\tprivate get longTitle(): string {\n\t\treturn this.labelService.getUriLabel(this.resource);\n\t}\n\n\tpublic override getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.decorateLabel(this.shortTitle);\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.decorateLabel(this.mediumTitle);\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.decorateLabel(this.longTitle);\n\t\t}\n\t}\n\n\tprivate decorateLabel(label: string): string {\n\t\tconst orphaned = !!this._modelRef?.object.isOrphaned();\n\n\t\tconst readonly = this._modelRef\n\t\t\t? this._modelRef.object.isEditable() && this._modelRef.object.isOnReadonlyFileSystem()\n\t\t\t: false;\n\n\t\treturn decorateFileEditorLabel(label, {\n\t\t\torphaned,\n\t\t\treadonly\n\t\t});\n\t}\n\n\tpublic override isReadonly(): boolean {\n\t\treturn this._modelRef ? !this._modelRef.object.isEditable() : false;\n\t}\n\n\tpublic override isUntitled(): boolean {\n\t\treturn this.resource.scheme === Schemas.untitled;\n\t}\n\n\tpublic override isDirty(): boolean {\n\t\tif (!this._modelRef) {\n\t\t\treturn !!this._defaultDirtyState;\n\t\t}\n\t\treturn this._modelRef.object.isDirty();\n\t}\n\n\tpublic override async save(groupId: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst target = await this._modelRef.object.saveCustomEditor(options);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tif (!isEqual(target, this.resource)) {\n\t\t\treturn CustomEditorInput.create(this.instantiationService, target, this.viewType, groupId);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic override async saveAs(groupId: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst dialogPath = this._editorResource;\n\t\tconst target = await this.fileDialogService.pickFileToSave(dialogPath, options?.availableFileSystems);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tif (!await this._modelRef.object.saveCustomEditorAs(this._editorResource, target, options)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.rename(groupId, target)?.editor;\n\t}\n\n\tpublic override async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.revert(options);\n\t\t}\n\t\tthis._defaultDirtyState = false;\n\t\tthis._onDidChangeDirty.fire();\n\t}\n\n\tpublic override async resolve(): Promise<null> {\n\t\tawait super.resolve();\n\n\t\tif (this.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this._modelRef) {\n\t\t\tthis._modelRef = this._register(assertIsDefined(await this.customEditorService.models.tryRetain(this.resource, this.viewType)));\n\t\t\tthis._register(this._modelRef.object.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\t\tthis._register(this._modelRef.object.onDidChangeOrphaned(() => this._onDidChangeLabel.fire()));\n\n\t\t\tif (this.isDirty()) {\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverride rename(group: GroupIdentifier, newResource: URI): { editor: IEditorInput } | undefined {\n\t\t// See if we can keep using the same custom editor provider\n\t\tconst editorInfo = this.customEditorService.getCustomEditor(this.viewType);\n\t\tif (editorInfo?.matches(newResource)) {\n\t\t\treturn { editor: this.doMove(group, newResource) };\n\t\t}\n\n\t\treturn { editor: this.editorService.createEditorInput({ resource: newResource, forceFile: true }) };\n\t}\n\n\tprivate doMove(group: GroupIdentifier, newResource: URI): IEditorInput {\n\t\tif (!this._moveHandler) {\n\t\t\treturn CustomEditorInput.create(this.instantiationService, newResource, this.viewType, group);\n\t\t}\n\n\t\tthis._moveHandler(newResource);\n\t\tconst newEditor = this.instantiationService.createInstance(CustomEditorInput,\n\t\t\tnewResource,\n\t\t\tthis.viewType,\n\t\t\tthis.id,\n\t\t\tundefined!,  // this webview is replaced in the transfer call\n\t\t\t{ startsDirty: this._defaultDirtyState, backupId: this._backupId });\n\t\tthis.transfer(newEditor);\n\t\tnewEditor.updateGroup(group);\n\t\treturn newEditor;\n\t}\n\n\tpublic undo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.undo(this.resource);\n\t}\n\n\tpublic redo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.redo(this.resource);\n\t}\n\n\tprivate _moveHandler?: (newResource: URI) => void;\n\n\tpublic onMove(handler: (newResource: URI) => void): void {\n\t\t// TODO: Move this to the service\n\t\tthis._moveHandler = handler;\n\t}\n\n\tprotected override transfer(other: CustomEditorInput): CustomEditorInput | undefined {\n\t\tif (!super.transfer(other)) {\n\t\t\treturn;\n\t\t}\n\n\t\tother._moveHandler = this._moveHandler;\n\t\tthis._moveHandler = undefined;\n\t\treturn other;\n\t}\n\n\tget backupId(): string | undefined {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.backupId;\n\t\t}\n\t\treturn this._backupId;\n\t}\n\n\tget untitledDocumentData(): VSBuffer | undefined {\n\t\treturn this._untitledDocumentData;\n\t}\n}\n"]}