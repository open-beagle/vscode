{"version":3,"file":"callHierarchy.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/callHierarchy/common/callHierarchy.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { SymbolKind, ProviderResult, SymbolTag } from 'vs/editor/common/modes';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/modes/languageFeatureRegistry';\nimport { URI } from 'vs/base/common/uri';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\n\nexport const enum CallHierarchyDirection {\n\tCallsTo = 'incomingCalls',\n\tCallsFrom = 'outgoingCalls'\n}\n\nexport interface CallHierarchyItem {\n\t_sessionId: string;\n\t_itemId: string;\n\tkind: SymbolKind;\n\tname: string;\n\tdetail?: string;\n\turi: URI;\n\trange: IRange;\n\tselectionRange: IRange;\n\ttags?: SymbolTag[]\n}\n\nexport interface IncomingCall {\n\tfrom: CallHierarchyItem;\n\tfromRanges: IRange[];\n}\n\nexport interface OutgoingCall {\n\tfromRanges: IRange[];\n\tto: CallHierarchyItem;\n}\n\nexport interface CallHierarchySession {\n\troots: CallHierarchyItem[];\n\tdispose(): void;\n}\n\nexport interface CallHierarchyProvider {\n\n\tprepareCallHierarchy(document: ITextModel, position: IPosition, token: CancellationToken): ProviderResult<CallHierarchySession>;\n\n\tprovideIncomingCalls(item: CallHierarchyItem, token: CancellationToken): ProviderResult<IncomingCall[]>;\n\n\tprovideOutgoingCalls(item: CallHierarchyItem, token: CancellationToken): ProviderResult<OutgoingCall[]>;\n}\n\nexport const CallHierarchyProviderRegistry = new LanguageFeatureRegistry<CallHierarchyProvider>();\n\n\nclass RefCountedDisposabled {\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t\tprivate _counter = 1\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport class CallHierarchyModel {\n\n\tstatic async create(model: ITextModel, position: IPosition, token: CancellationToken): Promise<CallHierarchyModel | undefined> {\n\t\tconst [provider] = CallHierarchyProviderRegistry.ordered(model);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst session = await provider.prepareCallHierarchy(model, position, token);\n\t\tif (!session) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new CallHierarchyModel(session.roots.reduce((p, c) => p + c._sessionId, ''), provider, session.roots, new RefCountedDisposabled(session));\n\t}\n\n\treadonly root: CallHierarchyItem;\n\n\tprivate constructor(\n\t\treadonly id: string,\n\t\treadonly provider: CallHierarchyProvider,\n\t\treadonly roots: CallHierarchyItem[],\n\t\treadonly ref: RefCountedDisposabled,\n\t) {\n\t\tthis.root = roots[0];\n\t}\n\n\tdispose(): void {\n\t\tthis.ref.release();\n\t}\n\n\tfork(item: CallHierarchyItem): CallHierarchyModel {\n\t\tconst that = this;\n\t\treturn new class extends CallHierarchyModel {\n\t\t\tconstructor() {\n\t\t\t\tsuper(that.id, that.provider, [item], that.ref.acquire());\n\t\t\t}\n\t\t};\n\t}\n\n\tasync resolveIncomingCalls(item: CallHierarchyItem, token: CancellationToken): Promise<IncomingCall[]> {\n\t\ttry {\n\t\t\tconst result = await this.provider.provideIncomingCalls(item, token);\n\t\t\tif (isNonEmptyArray(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonUnexpectedExternalError(e);\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveOutgoingCalls(item: CallHierarchyItem, token: CancellationToken): Promise<OutgoingCall[]> {\n\t\ttry {\n\t\t\tconst result = await this.provider.provideOutgoingCalls(item, token);\n\t\t\tif (isNonEmptyArray(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonUnexpectedExternalError(e);\n\t\t}\n\t\treturn [];\n\t}\n}\n\n// --- API command support\n\nconst _models = new Map<string, CallHierarchyModel>();\n\nCommandsRegistry.registerCommand('_executePrepareCallHierarchy', async (accessor, ...args) => {\n\tconst [resource, position] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Position.isIPosition(position));\n\n\tconst modelService = accessor.get(IModelService);\n\tlet textModel = modelService.getModel(resource);\n\tlet textModelReference: IDisposable | undefined;\n\tif (!textModel) {\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst result = await textModelService.createModelReference(resource);\n\t\ttextModel = result.object.textEditorModel;\n\t\ttextModelReference = result;\n\t}\n\n\ttry {\n\t\tconst model = await CallHierarchyModel.create(textModel, position, CancellationToken.None);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\t\t//\n\t\t_models.set(model.id, model);\n\t\t_models.forEach((value, key, map) => {\n\t\t\tif (map.size > 10) {\n\t\t\t\tvalue.dispose();\n\t\t\t\t_models.delete(key);\n\t\t\t}\n\t\t});\n\t\treturn [model.root];\n\n\t} finally {\n\t\ttextModelReference?.dispose();\n\t}\n});\n\nfunction isCallHierarchyItemDto(obj: any): obj is CallHierarchyItem {\n\treturn true;\n}\n\nCommandsRegistry.registerCommand('_executeProvideIncomingCalls', async (_accessor, ...args) => {\n\tconst [item] = args;\n\tassertType(isCallHierarchyItemDto(item));\n\n\t// find model\n\tconst model = _models.get(item._sessionId);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\treturn model.resolveIncomingCalls(item, CancellationToken.None);\n});\n\nCommandsRegistry.registerCommand('_executeProvideOutgoingCalls', async (_accessor, ...args) => {\n\tconst [item] = args;\n\tassertType(isCallHierarchyItemDto(item));\n\n\t// find model\n\tconst model = _models.get(item._sessionId);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\treturn model.resolveOutgoingCalls(item, CancellationToken.None);\n});\n"]}