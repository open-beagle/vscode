{"version":3,"file":"notebookEditor.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/test/notebookEditor.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { mock } from 'vs/base/test/common/mock';\nimport { FoldingModel, updateFoldingStateAtIndex } from 'vs/workbench/contrib/notebook/browser/contrib/fold/foldingModel';\nimport { expandCellRangesWithHiddenCells, ICellViewModel, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { ListViewInfoAccessor } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { createNotebookCellList, setupInstantiationService, withTestNotebook } from 'vs/workbench/contrib/notebook/test/testNotebookEditor';\n\nsuite('ListViewInfoAccessor', () => {\n\tconst instantiationService = setupInstantiationService();\n\n\ttest('basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header b', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 2;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['var c = 3;', 'javascript', CellKind.Code, [], {}]\n\t\t\t],\n\t\t\t(editor) => {\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tconst foldingModel = new FoldingModel();\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\n\t\t\t\tconst cellList = createNotebookCellList(instantiationService);\n\t\t\t\tcellList.attachViewModel(viewModel);\n\t\t\t\tconst listViewInfoAccessor = new ListViewInfoAccessor(cellList);\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 2);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), 3);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), 4);\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 1 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 1, end: 2 });\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\tcellList.setHiddenAreas(viewModel.getHiddenRanges(), true);\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), -1);\n\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 2 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 2, end: 5 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(0, 1), viewModel.getCells({ start: 0, end: 2 }));\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(1, 2), viewModel.getCells({ start: 2, end: 5 }));\n\n\t\t\t\tconst notebookEditor = new class extends mock<INotebookEditor>() {\n\t\t\t\t\toverride getViewIndex(cell: ICellViewModel) { return listViewInfoAccessor.getViewIndex(cell); }\n\t\t\t\t\toverride getCellRangeFromViewRange(startIndex: number, endIndex: number) { return listViewInfoAccessor.getCellRangeFromViewRange(startIndex, endIndex); }\n\t\t\t\t};\n\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, viewModel, [{ start: 0, end: 1 }]), [{ start: 0, end: 2 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, viewModel, [{ start: 2, end: 3 }]), [{ start: 2, end: 5 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, viewModel, [{ start: 0, end: 1 }, { start: 2, end: 3 }]), [{ start: 0, end: 5 }]);\n\t\t\t});\n\t});\n});\n"]}