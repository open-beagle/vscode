{"version":3,"file":"notebookBrowser.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/test/notebookBrowser.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { getRanges, ICellViewModel, reduceCellRanges } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nsuite('notebookBrowser', () => {\n\ttest('Reduce ranges', function () {\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 1 }, { start: 1, end: 2 }]), [{ start: 0, end: 2 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 2 }, { start: 1, end: 3 }]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 1, end: 3 }, { start: 0, end: 2 }]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 2 }, { start: 4, end: 5 }]), [{ start: 0, end: 2 }, { start: 4, end: 5 }]);\n\t});\n\n\tsuite('getRanges', function () {\n\t\tconst predicate = (cell: ICellViewModel) => cell.cellKind === CellKind.Code;\n\n\t\ttest('all code', function () {\n\t\t\tconst cells = [\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t];\n\t\t\tassert.deepStrictEqual(getRanges(cells as ICellViewModel[], predicate), [{ start: 0, end: 2 }]);\n\t\t});\n\n\t\ttest('none code', function () {\n\t\t\tconst cells = [\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t];\n\t\t\tassert.deepStrictEqual(getRanges(cells as ICellViewModel[], predicate), []);\n\t\t});\n\n\t\ttest('start code', function () {\n\t\t\tconst cells = [\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t];\n\t\t\tassert.deepStrictEqual(getRanges(cells as ICellViewModel[], predicate), [{ start: 0, end: 1 }]);\n\t\t});\n\n\t\ttest('random', function () {\n\t\t\tconst cells = [\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t\t{ cellKind: CellKind.Markdown },\n\t\t\t\t{ cellKind: CellKind.Code },\n\t\t\t];\n\t\t\tassert.deepStrictEqual(getRanges(cells as ICellViewModel[], predicate), [{ start: 0, end: 2 }, { start: 3, end: 4 }, { start: 6, end: 7 }]);\n\t\t});\n\t});\n});\n"]}