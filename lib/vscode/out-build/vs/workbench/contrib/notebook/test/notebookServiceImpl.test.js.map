{"version":3,"file":"notebookServiceImpl.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/test/notebookServiceImpl.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { NotebookProviderInfoStore } from 'vs/workbench/contrib/notebook/browser/notebookServiceImpl';\nimport { NotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookProvider';\nimport { EditorOverrideService } from 'vs/workbench/services/editor/browser/editorOverrideService';\nimport { ContributedEditorPriority } from 'vs/workbench/services/editor/common/editorOverrideService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nsuite('NotebookProviderInfoStore', function () {\n\n\ttest('Can\\'t open untitled notebooks in test #119363', function () {\n\n\t\tconst instantiationService = workbenchInstantiationService();\n\t\tconst store = new NotebookProviderInfoStore(\n\t\t\tnew class extends mock<IStorageService>() {\n\t\t\t\toverride get() { return ''; }\n\t\t\t\toverride store() { }\n\t\t\t},\n\t\t\tnew class extends mock<IExtensionService>() {\n\t\t\t\toverride onDidRegisterExtensions = Event.None;\n\t\t\t},\n\t\t\tinstantiationService.createInstance(EditorOverrideService),\n\t\t\tnew TestConfigurationService(),\n\t\t\tnew class extends mock<IAccessibilityService>() { },\n\t\t\tinstantiationService,\n\t\t\tnew class extends mock<IFileService>() {\n\t\t\t\toverride canHandleResource() { return true; }\n\t\t\t}\n\t\t);\n\n\t\tconst fooInfo = new NotebookProviderInfo({\n\t\t\tid: 'foo',\n\t\t\tdisplayName: 'foo',\n\t\t\tselectors: [{ filenamePattern: '*.foo' }],\n\t\t\tpriority: ContributedEditorPriority.default,\n\t\t\tdynamicContribution: false,\n\t\t\texclusive: false,\n\t\t\tproviderDisplayName: 'foo',\n\t\t\tproviderExtensionLocation: null!\n\t\t});\n\t\tconst barInfo = new NotebookProviderInfo({\n\t\t\tid: 'bar',\n\t\t\tdisplayName: 'bar',\n\t\t\tselectors: [{ filenamePattern: '*.bar' }],\n\t\t\tpriority: ContributedEditorPriority.default,\n\t\t\tdynamicContribution: false,\n\t\t\texclusive: false,\n\t\t\tproviderDisplayName: 'bar',\n\t\t\tproviderExtensionLocation: null!\n\t\t});\n\n\t\tstore.add(fooInfo);\n\t\tstore.add(barInfo);\n\n\t\tassert.ok(store.get('foo'));\n\t\tassert.ok(store.get('bar'));\n\t\tassert.ok(!store.get('barfoo'));\n\n\t\tlet providers = store.getContributedNotebook(URI.parse('file:///test/nb.foo'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === fooInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('file:///test/nb.bar'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === barInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('untitled:///Untitled-1'));\n\t\tassert.strictEqual(providers.length, 2);\n\t\tassert.strictEqual(providers[0] === fooInfo, true);\n\t\tassert.strictEqual(providers[1] === barInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('untitled:///test/nb.bar'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === barInfo, true);\n\t});\n\n});\n"]}