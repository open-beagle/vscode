{"version":3,"file":"cellEdit.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/model/cellEdit.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IResourceUndoRedoElement, UndoRedoElementType } from 'vs/platform/undoRedo/common/undoRedo';\nimport { URI } from 'vs/base/common/uri';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { ISelectionState, NotebookCellMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\n/**\n * It should not modify Undo/Redo stack\n */\nexport interface ITextCellEditingDelegate {\n\tinsertCell?(index: number, cell: NotebookCellTextModel, endSelections?: ISelectionState): void;\n\tdeleteCell?(index: number, endSelections?: ISelectionState): void;\n\treplaceCell?(index: number, count: number, cells: NotebookCellTextModel[], endSelections?: ISelectionState): void;\n\tmoveCell?(fromIndex: number, length: number, toIndex: number, beforeSelections: ISelectionState | undefined, endSelections?: ISelectionState): void;\n\tupdateCellMetadata?(index: number, newMetadata: NotebookCellMetadata): void;\n}\n\nexport class MoveCellEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tlabel: string = 'Move Cell';\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate fromIndex: number,\n\t\tprivate length: number,\n\t\tprivate toIndex: number,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforedSelections: ISelectionState | undefined,\n\t\tprivate endSelections: ISelectionState | undefined\n\t) {\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error('Notebook Move Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(this.toIndex, this.length, this.fromIndex, this.endSelections, this.beforedSelections);\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error('Notebook Move Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(this.fromIndex, this.length, this.toIndex, this.beforedSelections, this.endSelections);\n\t}\n}\n\nexport class SpliceCellsEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tlabel: string = 'Insert Cell';\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate diffs: [number, NotebookCellTextModel[], NotebookCellTextModel[]][],\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforeHandles: ISelectionState | undefined,\n\t\tprivate endHandles: ISelectionState | undefined\n\t) {\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error('Notebook Replace Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.diffs.forEach(diff => {\n\t\t\tthis.editingDelegate.replaceCell!(diff[0], diff[2].length, diff[1], this.beforeHandles);\n\t\t});\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error('Notebook Replace Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.diffs.reverse().forEach(diff => {\n\t\t\tthis.editingDelegate.replaceCell!(diff[0], diff[1].length, diff[2], this.endHandles);\n\t\t});\n\t}\n}\n\nexport class CellMetadataEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tlabel: string = 'Update Cell Metadata';\n\tconstructor(\n\t\tpublic resource: URI,\n\t\treadonly index: number,\n\t\treadonly oldMetadata: NotebookCellMetadata,\n\t\treadonly newMetadata: NotebookCellMetadata,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t) {\n\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.oldMetadata);\n\t}\n\n\tredo(): void | Promise<void> {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.newMetadata);\n\t}\n}\n"]}