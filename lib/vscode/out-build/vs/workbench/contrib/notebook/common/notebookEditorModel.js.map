{"version":3,"sources":["vs/workbench/contrib/notebook/common/notebookEditorModel.ts"],"names":[],"mappings":"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","file":"notebookEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { EditorModel, IEditorInput, IRevertOptions, ISaveOptions } from 'vs/workbench/common/editor';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { INotebookEditorModel, INotebookLoadOptions, IResolvedNotebookEditorModel, NotebookCellsChangeType, NotebookDataDto, NotebookDocumentBackupData } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { INotebookContentProvider, INotebookSerializer, INotebookService, SimpleNotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IWorkingCopy, IWorkingCopyBackup, WorkingCopyCapabilities, NO_TYPE_ID, IWorkingCopyIdentifier } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { Schemas } from 'vs/base/common/network';\nimport { IFileStatWithMetadata, IFileService, FileChangeType, FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { TaskSequentializer } from 'vs/base/common/async';\nimport { bufferToStream, streamToBuffer, VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { assertType } from 'vs/base/common/types';\nimport { IUntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\nimport { IFileWorkingCopyModel, IFileWorkingCopyModelContentChangedEvent, IFileWorkingCopyModelFactory, IResolvedFileWorkingCopy } from 'vs/workbench/services/workingCopy/common/fileWorkingCopy';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { canceled } from 'vs/base/common/errors';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IFileWorkingCopyManager, IFileWorkingCopySaveAsOptions } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\n\n//#region --- complex content provider\n\nexport class ComplexNotebookEditorModel extends EditorModel implements INotebookEditorModel {\n\n\tprivate readonly _onDidSave = this._register(new Emitter<void>());\n\tprivate readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\n\treadonly onDidSave = this._onDidSave.event;\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprivate _lastResolvedFileStat?: IFileStatWithMetadata;\n\n\tprivate readonly _name: string;\n\tprivate readonly _workingCopyIdentifier: IWorkingCopyIdentifier;\n\tprivate readonly _saveSequentializer = new TaskSequentializer();\n\n\tprivate _dirty: boolean = false;\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\treadonly viewType: string,\n\t\tprivate readonly _contentProvider: INotebookContentProvider,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IWorkingCopyService private readonly _workingCopyService: IWorkingCopyService,\n\t\t@IWorkingCopyBackupService private readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IUntitledTextEditorService private readonly untitledTextEditorService: IUntitledTextEditorService,\n\t\t@ILabelService labelService: ILabelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._name = labelService.getUriBasenameLabel(resource);\n\n\t\tconst that = this;\n\t\tthis._workingCopyIdentifier = {\n\t\t\t// TODO@jrieken TODO@rebornix consider to enable a `typeId` that is\n\t\t\t// specific for custom editors. Using a distinct `typeId` allows the\n\t\t\t// working copy to have any resource (including file based resources)\n\t\t\t// even if other working copies exist with the same resource.\n\t\t\t//\n\t\t\t// IMPORTANT: changing the `typeId` has an impact on backups for this\n\t\t\t// working copy. Any value that is not the empty string will be used\n\t\t\t// as seed to the backup. Only change the `typeId` if you have implemented\n\t\t\t// a fallback solution to resolve any existing backups that do not have\n\t\t\t// this seed.\n\t\t\ttypeId: NO_TYPE_ID,\n\t\t\tresource: URI.from({ scheme: Schemas.vscodeNotebook, path: resource.toString() })\n\t\t};\n\t\tconst workingCopyAdapter = new class implements IWorkingCopy {\n\t\t\treadonly typeId = that._workingCopyIdentifier.typeId;\n\t\t\treadonly resource = that._workingCopyIdentifier.resource;\n\t\t\tget name() { return that._name; }\n\t\t\treadonly capabilities = that._isUntitled() ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t\t\treadonly onDidChangeDirty = that.onDidChangeDirty;\n\t\t\treadonly onDidChangeContent = that._onDidChangeContent.event;\n\t\t\tisDirty(): boolean { return that.isDirty(); }\n\t\t\tbackup(token: CancellationToken): Promise<IWorkingCopyBackup> { return that.backup(token); }\n\t\t\tsave(): Promise<boolean> { return that.save(); }\n\t\t\trevert(options?: IRevertOptions): Promise<void> { return that.revert(options); }\n\t\t};\n\n\t\tthis._register(this._workingCopyService.registerWorkingCopy(workingCopyAdapter));\n\t\tthis._register(this._fileService.onDidFilesChange(async e => {\n\t\t\tif (this.isDirty() || !this.isResolved() || this._saveSequentializer.hasPending()) {\n\t\t\t\t// skip when dirty, unresolved, or when saving\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!e.affects(this.resource, FileChangeType.UPDATED)) {\n\t\t\t\t// no my file\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stats = await this._resolveStats(this.resource);\n\t\t\tif (stats && this._lastResolvedFileStat && stats.etag !== this._lastResolvedFileStat.etag) {\n\t\t\t\tthis._logService.debug('[notebook editor model] trigger load after file event');\n\t\t\t\tthis.load({ forceReadFromFile: true });\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride isResolved(): this is IResolvedNotebookEditorModel {\n\t\treturn this.notebook !== undefined;\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this._dirty;\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate _isUntitled(): boolean {\n\t\treturn this.resource.scheme === Schemas.untitled;\n\t}\n\n\tget notebook(): NotebookTextModel | undefined {\n\t\tconst candidate = this._notebookService.getNotebookTextModel(this.resource);\n\t\treturn candidate && candidate.viewType === this.viewType ? candidate : undefined;\n\t}\n\n\tsetDirty(newState: boolean) {\n\t\tif (this._dirty !== newState) {\n\t\t\tthis._dirty = newState;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tasync backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\n\t\tif (!this.isResolved()) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst backupId = await this._contentProvider.backup(this.resource, token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\t\tconst stats = await this._resolveStats(this.resource);\n\n\t\treturn {\n\t\t\tmeta: {\n\t\t\t\tmtime: stats?.mtime ?? Date.now(),\n\t\t\t\tviewType: this.notebook.viewType,\n\t\t\t\tbackupId\n\t\t\t}\n\t\t};\n\t}\n\n\tasync revert(options?: IRevertOptions | undefined): Promise<void> {\n\t\tif (options?.soft) {\n\t\t\tthis.setDirty(false);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.load({ forceReadFromFile: true });\n\t\tconst newStats = await this._resolveStats(this.resource);\n\t\tthis._lastResolvedFileStat = newStats;\n\n\t\tthis.setDirty(false);\n\t\tthis._onDidChangeDirty.fire();\n\t}\n\n\tasync load(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel> {\n\t\tif (options?.forceReadFromFile) {\n\t\t\tthis._logService.debug('[notebook editor model] load from provider (forceRead)', this.resource.toString());\n\t\t\tthis._loadFromProvider(undefined);\n\t\t\tassertType(this.isResolved());\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.isResolved()) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst backup = await this._workingCopyBackupService.resolve<NotebookDocumentBackupData>(this._workingCopyIdentifier);\n\n\t\tif (this.isResolved()) {\n\t\t\treturn this; // Make sure meanwhile someone else did not succeed in loading\n\t\t}\n\n\t\tthis._logService.debug('[notebook editor model] load from provider', this.resource.toString());\n\t\tawait this._loadFromProvider(backup?.meta?.backupId);\n\t\tassertType(this.isResolved());\n\t\treturn this;\n\t}\n\n\t/**\n\t * @description Uses the textmodel resolver service to acquire the untitled file's content\n\t * @param resource The resource that is the untitled file\n\t * @returns The bytes\n\t */\n\tprivate async getUntitledDocumentData(resource: URI): Promise<VSBuffer | undefined> {\n\t\t// If it's an untitled file we must populate the untitledDocumentData\n\t\tconst untitledString = this.untitledTextEditorService.getValue(resource);\n\t\tlet untitledDocumentData = untitledString ? VSBuffer.fromString(untitledString) : undefined;\n\t\treturn untitledDocumentData;\n\t}\n\n\tprivate async _loadFromProvider(backupId: string | undefined): Promise<void> {\n\n\t\tconst untitledData = await this.getUntitledDocumentData(this.resource);\n\t\t// If we're loading untitled file data we should ensure the model is dirty\n\t\tif (untitledData) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t\tconst data = await this._contentProvider.open(this.resource, backupId, untitledData, CancellationToken.None);\n\n\t\tthis._lastResolvedFileStat = await this._resolveStats(this.resource);\n\n\t\tif (this.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.notebook) {\n\t\t\tthis._logService.debug('[notebook editor model] loading NEW notebook', this.resource.toString());\n\t\t\t// FRESH there is no notebook yet and we are now creating it\n\n\t\t\t// UGLY\n\t\t\t// There might be another notebook for the URI which was created from a different\n\t\t\t// source (different viewType). In that case we simply dispose the\n\t\t\t// existing/conflicting model and proceed with a new notebook\n\t\t\tconst conflictingNotebook = this._notebookService.getNotebookTextModel(this.resource);\n\t\t\tif (conflictingNotebook) {\n\t\t\t\tthis._logService.warn('DISPOSING conflicting notebook with same URI but different view type', this.resource.toString(), this.viewType);\n\t\t\t\tconflictingNotebook.dispose();\n\t\t\t}\n\n\n\t\t\t// this creates and caches a new notebook model so that notebookService.getNotebookTextModel(...)\n\t\t\t// will return this one model\n\t\t\tconst notebook = this._notebookService.createNotebookTextModel(this.viewType, this.resource, data.data, data.transientOptions);\n\t\t\tthis._register(notebook);\n\t\t\tthis._register(notebook.onDidChangeContent(e => {\n\t\t\t\tlet triggerDirty = false;\n\t\t\t\tfor (let i = 0; i < e.rawEvents.length; i++) {\n\t\t\t\t\tif (e.rawEvents[i].kind !== NotebookCellsChangeType.Initialize) {\n\t\t\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t\t\t\ttriggerDirty = triggerDirty || !e.rawEvents[i].transient;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (triggerDirty) {\n\t\t\t\t\tthis.setDirty(true);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} else {\n\t\t\t// UPDATE exitsing notebook with data that we have just fetched\n\t\t\tthis._logService.debug('[notebook editor model] loading onto EXISTING notebook', this.resource.toString());\n\t\t\tthis.notebook.reset(data.data.cells, data.data.metadata, data.transientOptions);\n\t\t}\n\n\t\tif (backupId) {\n\t\t\tthis._workingCopyBackupService.discardBackup(this._workingCopyIdentifier);\n\t\t\tthis.setDirty(true);\n\t\t} else {\n\t\t\tthis.setDirty(false);\n\t\t}\n\t}\n\n\tprivate async _assertStat(): Promise<'overwrite' | 'revert' | 'none'> {\n\t\tthis._logService.debug('[notebook editor model] start assert stat');\n\t\tconst stats = await this._resolveStats(this.resource);\n\t\tif (this._lastResolvedFileStat && stats && stats.mtime > this._lastResolvedFileStat.mtime) {\n\t\t\tthis._logService.debug(`[notebook editor model] noteboook file on disk is newer:\\nLastResolvedStat: ${this._lastResolvedFileStat ? JSON.stringify(this._lastResolvedFileStat) : undefined}.\\nCurrent stat: ${JSON.stringify(stats)}`);\n\t\t\tthis._lastResolvedFileStat = stats;\n\t\t\treturn new Promise<'overwrite' | 'revert' | 'none'>(resolve => {\n\t\t\t\tconst handle = this._notificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tnls.localize('notebook.staleSaveError', \"The contents of the file has changed on disk. Would you like to open the updated version or overwrite the file with your changes?\"),\n\t\t\t\t\t[{\n\t\t\t\t\t\tlabel: nls.localize('notebook.staleSaveError.revert', \"Revert\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tresolve('revert');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: nls.localize('notebook.staleSaveError.overwrite.', \"Overwrite\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tresolve('overwrite');\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\t{ sticky: true }\n\t\t\t\t);\n\n\t\t\t\tEvent.once(handle.onDidClose)(() => {\n\t\t\t\t\tresolve('none');\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (!this._lastResolvedFileStat && stats) {\n\t\t\t// finally get a stats\n\t\t\tthis._lastResolvedFileStat = stats;\n\t\t}\n\n\t\treturn 'overwrite';\n\t}\n\n\tasync save(): Promise<boolean> {\n\n\t\tif (!this.isResolved()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst versionId = this.notebook.versionId;\n\t\tthis._logService.debug(`[notebook editor model] save(${versionId}) - enter with versionId ${versionId}`, this.resource.toString(true));\n\n\t\tif (this._saveSequentializer.hasPending(versionId)) {\n\t\t\tthis._logService.debug(`[notebook editor model] save(${versionId}) - exit - found a pending save for versionId ${versionId}`, this.resource.toString(true));\n\t\t\treturn this._saveSequentializer.pending.then(() => {\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\tif (this._saveSequentializer.hasPending()) {\n\t\t\treturn this._saveSequentializer.setNext(async () => {\n\t\t\t\tawait this.save();\n\t\t\t}).then(() => {\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn this._saveSequentializer.setPending(versionId, (async () => {\n\t\t\tconst result = await this._assertStat();\n\t\t\tif (result === 'none') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (result === 'revert') {\n\t\t\t\tawait this.revert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.isResolved()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst success = await this._contentProvider.save(this.notebook.uri, CancellationToken.None);\n\t\t\tthis._logService.debug(`[notebook editor model] save(${versionId}) - document saved saved, start updating file stats`, this.resource.toString(true), success);\n\t\t\tthis._lastResolvedFileStat = await this._resolveStats(this.resource);\n\t\t\tif (success) {\n\t\t\t\tthis.setDirty(false);\n\t\t\t\tthis._onDidSave.fire();\n\t\t\t}\n\t\t})()).then(() => {\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tasync saveAs(targetResource: URI): Promise<IEditorInput | undefined> {\n\n\t\tif (!this.isResolved()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._logService.debug(`[notebook editor model] saveAs - enter`, this.resource.toString(true));\n\t\tconst result = await this._assertStat();\n\n\t\tif (result === 'none') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (result === 'revert') {\n\t\t\tawait this.revert();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst success = await this._contentProvider.saveAs(this.notebook.uri, targetResource, CancellationToken.None);\n\t\tthis._logService.debug(`[notebook editor model] saveAs - document saved, start updating file stats`, this.resource.toString(true), success);\n\t\tthis._lastResolvedFileStat = await this._resolveStats(this.resource);\n\t\tif (!success) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis.setDirty(false);\n\t\tthis._onDidSave.fire();\n\t\treturn this._instantiationService.createInstance(NotebookEditorInput, targetResource, this.viewType, {});\n\t}\n\n\tprivate async _resolveStats(resource: URI) {\n\t\tif (resource.scheme === Schemas.untitled) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._logService.debug(`[notebook editor model] _resolveStats`, this.resource.toString(true));\n\t\t\tconst newStats = await this._fileService.resolve(this.resource, { resolveMetadata: true });\n\t\t\tthis._logService.debug(`[notebook editor model] _resolveStats - latest file stats: ${JSON.stringify(newStats)}`, this.resource.toString(true));\n\t\t\treturn newStats;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region --- simple content provider\n\nexport class SimpleNotebookEditorModel extends EditorModel implements INotebookEditorModel {\n\n\tprivate readonly _onDidChangeDirty = new Emitter<void>();\n\tprivate readonly _onDidSave = new Emitter<void>();\n\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\treadonly onDidSave: Event<void> = this._onDidSave.event;\n\n\tprivate _workingCopy?: IResolvedFileWorkingCopy<NotebookFileWorkingCopyModel>;\n\tprivate readonly _workingCopyListeners = new DisposableStore();\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\treadonly viewType: string,\n\t\tprivate readonly _workingCopyManager: IFileWorkingCopyManager<NotebookFileWorkingCopyModel>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t}\n\n\toverride dispose(): void {\n\t\tthis._workingCopyListeners.dispose();\n\t\tthis._workingCopy?.dispose();\n\t\tthis._onDidChangeDirty.dispose();\n\t\tthis._onDidSave.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tget notebook(): NotebookTextModel | undefined {\n\t\treturn this._workingCopy?.model.notebookModel;\n\t}\n\n\toverride isResolved(): this is IResolvedNotebookEditorModel {\n\t\treturn Boolean(this._workingCopy);\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this._workingCopy?.isDirty() ?? false;\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn this.fileService.hasCapability(this.resource, FileSystemProviderCapabilities.Readonly);\n\t}\n\n\trevert(options?: IRevertOptions): Promise<void> {\n\t\tassertType(this.isResolved());\n\t\treturn this._workingCopy!.revert(options);\n\t}\n\n\tsave(options?: ISaveOptions): Promise<boolean> {\n\t\tassertType(this.isResolved());\n\t\treturn this._workingCopy!.save(options);\n\t}\n\n\tasync load(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel> {\n\t\tconst workingCopy = await this._workingCopyManager.resolve(this.resource, { reload: { async: !options?.forceReadFromFile } });\n\t\tif (!this._workingCopy) {\n\t\t\tthis._workingCopy = <IResolvedFileWorkingCopy<NotebookFileWorkingCopyModel>>workingCopy;\n\t\t\tthis._workingCopy.onDidChangeDirty(() => this._onDidChangeDirty.fire(), this._workingCopyListeners);\n\t\t\tthis._workingCopy.onDidSave(() => this._onDidSave.fire(), this._workingCopyListeners);\n\t\t}\n\t\tassertType(this.isResolved());\n\t\treturn this;\n\t}\n\n\tasync saveAs(target: URI, options?: IFileWorkingCopySaveAsOptions): Promise<IEditorInput | undefined> {\n\t\tconst newWorkingCopy = await this._workingCopyManager.saveAs(this.resource, target, options);\n\t\tif (!newWorkingCopy) {\n\t\t\treturn undefined;\n\t\t}\n\t\tassertType(newWorkingCopy.isResolved());\n\t\t// this is a little hacky because we leave the new working copy alone. BUT\n\t\t// the newly created editor input will pick it up and claim ownership of it.\n\t\treturn this._instantiationService.createInstance(NotebookEditorInput, newWorkingCopy.resource, this.viewType, {});\n\t}\n}\n\nexport class NotebookFileWorkingCopyModel implements IFileWorkingCopyModel {\n\n\tprivate readonly _onDidChangeContent = new Emitter<IFileWorkingCopyModelContentChangedEvent>();\n\tprivate readonly _changeListener: IDisposable;\n\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\treadonly onWillDispose: Event<void>;\n\n\tconstructor(\n\t\tprivate readonly _notebookModel: NotebookTextModel,\n\t\tprivate readonly _notebookSerializer: INotebookSerializer\n\t) {\n\t\tthis.onWillDispose = _notebookModel.onWillDispose.bind(_notebookModel);\n\n\t\tthis._changeListener = _notebookModel.onDidChangeContent(e => {\n\t\t\tfor (const rawEvent of e.rawEvents) {\n\t\t\t\tif (rawEvent.kind === NotebookCellsChangeType.Initialize) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (rawEvent.transient) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//todo@jrieken,@rebornix forward this information from notebook model\n\t\t\t\tthis._onDidChangeContent.fire({\n\t\t\t\t\tisRedoing: false,\n\t\t\t\t\tisUndoing: false\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._changeListener.dispose();\n\t\tthis._onDidChangeContent.dispose();\n\t\tthis._notebookModel.dispose();\n\t}\n\n\tget notebookModel() {\n\t\treturn this._notebookModel;\n\t}\n\n\tasync snapshot(token: CancellationToken): Promise<VSBufferReadableStream> {\n\n\t\tconst data: NotebookDataDto = {\n\t\t\tmetadata: this._notebookModel.metadata,\n\t\t\tcells: [],\n\t\t};\n\n\t\tfor (const cell of this._notebookModel.cells) {\n\t\t\tdata.cells.push({\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tsource: cell.getValue(),\n\t\t\t\toutputs: cell.outputs\n\t\t\t});\n\t\t}\n\n\t\tconst bytes = await this._notebookSerializer.notebookToData(data);\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn bufferToStream(bytes);\n\t}\n\n\tasync update(stream: VSBufferReadableStream, token: CancellationToken): Promise<void> {\n\n\t\tconst bytes = await streamToBuffer(stream);\n\t\tconst data = await this._notebookSerializer.dataToNotebook(bytes);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tthis._notebookModel.reset(data.cells, data.metadata, this._notebookSerializer.options);\n\t}\n\n\tget versionId() { return this._notebookModel.alternativeVersionId; }\n\n\tpushStackElement(): void {\n\t\tthis._notebookModel.pushStackElement('save', undefined, undefined);\n\t}\n}\n\nexport class NotebookFileWorkingCopyModelFactory implements IFileWorkingCopyModelFactory<NotebookFileWorkingCopyModel>{\n\n\tconstructor(\n\t\tprivate readonly _viewType: string,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t) { }\n\n\tasync createModel(resource: URI, stream: VSBufferReadableStream, token: CancellationToken): Promise<NotebookFileWorkingCopyModel> {\n\n\t\tconst info = await this._notebookService.withNotebookDataProvider(resource, this._viewType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\tthrow new Error('CANNOT open file notebook with this provider');\n\t\t}\n\n\t\tconst data = await info.serializer.dataToNotebook(await streamToBuffer(stream));\n\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\tconst notebookModel = this._notebookService.createNotebookTextModel(info.viewType, resource, data, info.serializer.options);\n\t\treturn new NotebookFileWorkingCopyModel(notebookModel, info.serializer);\n\t}\n}\n\n//#endregion\n"]}