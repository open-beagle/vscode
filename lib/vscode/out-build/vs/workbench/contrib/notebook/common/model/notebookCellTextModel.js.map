{"version":3,"file":"notebookCellTextModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ICell, NotebookCellOutputsSplice, CellKind, NotebookCellMetadata, TransientOptions, IOutputDto, ICellOutput, CellMetadataChangedEvent } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { URI } from 'vs/base/common/uri';\nimport * as UUID from 'vs/base/common/uuid';\nimport * as model from 'vs/editor/common/model';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { hash } from 'vs/base/common/hash';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\nimport { NotebookCellOutputTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellOutputTextModel';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { TextModel } from 'vs/editor/common/model/textModel';\n\nexport class NotebookCellTextModel extends Disposable implements ICell {\n\tprivate _onDidChangeOutputs = new Emitter<NotebookCellOutputsSplice[]>();\n\tonDidChangeOutputs: Event<NotebookCellOutputsSplice[]> = this._onDidChangeOutputs.event;\n\n\tprivate _onDidChangeContent = new Emitter<void>();\n\tonDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate _onDidChangeMetadata = new Emitter<CellMetadataChangedEvent>();\n\tonDidChangeMetadata: Event<CellMetadataChangedEvent> = this._onDidChangeMetadata.event;\n\n\tprivate _onDidChangeLanguage = new Emitter<string>();\n\tonDidChangeLanguage: Event<string> = this._onDidChangeLanguage.event;\n\n\tprivate _outputs: NotebookCellOutputTextModel[];\n\n\tget outputs(): ICellOutput[] {\n\t\treturn this._outputs;\n\t}\n\n\tprivate _metadata: NotebookCellMetadata;\n\n\tget metadata() {\n\t\treturn this._metadata;\n\t}\n\n\tset metadata(newMetadata: NotebookCellMetadata) {\n\t\tconst runStateChanged = this._metadata.runState !== newMetadata.runState;\n\t\tnewMetadata = {\n\t\t\t...newMetadata,\n\t\t\t...{ runStartTimeAdjustment: computeRunStartTimeAdjustment(this._metadata, newMetadata) }\n\t\t};\n\t\tthis._metadata = newMetadata;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeMetadata.fire({ runStateChanged });\n\t}\n\n\tget language() {\n\t\treturn this._language;\n\t}\n\n\tset language(newLanguage: string) {\n\t\tif (this._textModel && this._textModel.getLanguageIdentifier().language !== newLanguage) {\n\t\t\tconst newMode = this._modeService.create(newLanguage);\n\t\t\tthis._textModel.setMode(newMode.languageIdentifier);\n\t\t}\n\n\t\tif (this._language === newLanguage) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._language = newLanguage;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeLanguage.fire(newLanguage);\n\t\tthis._onDidChangeContent.fire();\n\t}\n\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tconst { textBuffer, disposable } = bufferFactory.create(model.DefaultEndOfLine.LF);\n\t\tthis._textBuffer = textBuffer;\n\t\tthis._register(disposable);\n\n\t\tthis._register(this._textBuffer.onDidChangeContent(() => {\n\t\t\tthis._hash = null;\n\t\t\tif (!this._textModel) {\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}\n\t\t}));\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _hash: number | null = null;\n\n\tprivate _versionId: number = 1;\n\tprivate _alternativeId: number = 1;\n\tget alternativeId(): number {\n\t\treturn this._alternativeId;\n\t}\n\n\tprivate _textModelDisposables = new DisposableStore();\n\tprivate _textModel: TextModel | undefined = undefined;\n\tget textModel(): TextModel | undefined {\n\t\treturn this._textModel;\n\t}\n\n\tset textModel(m: TextModel | undefined) {\n\t\tif (this._textModel === m) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textModelDisposables.clear();\n\t\tthis._textModel = m;\n\t\tif (this._textModel) {\n\t\t\t// Init language from text model\n\t\t\tthis.language = this._textModel.getLanguageIdentifier().language;\n\n\t\t\t// Listen to language changes on the model\n\t\t\tthis._textModelDisposables.add(this._textModel.onDidChangeLanguage(e => {\n\t\t\t\tthis.language = e.newLanguage;\n\t\t\t}));\n\t\t\tthis._textModelDisposables.add(this._textModel.onWillDispose(() => this.textModel = undefined));\n\t\t\tthis._textModelDisposables.add(this._textModel.onDidChangeContent(() => {\n\t\t\t\tif (this._textModel) {\n\t\t\t\t\tthis._versionId = this._textModel.getVersionId();\n\t\t\t\t\tthis._alternativeId = this._textModel.getAlternativeVersionId();\n\t\t\t\t}\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}));\n\n\t\t\tthis._textModel._overwriteVersionId(this._versionId);\n\t\t\tthis._textModel._overwriteAlternativeVersionId(this._versionId);\n\t\t}\n\t}\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic handle: number,\n\t\tprivate _source: string,\n\t\tprivate _language: string,\n\t\tpublic cellKind: CellKind,\n\t\toutputs: IOutputDto[],\n\t\tmetadata: NotebookCellMetadata | undefined,\n\t\tpublic readonly transientOptions: TransientOptions,\n\t\tprivate readonly _modeService: IModeService\n\t) {\n\t\tsuper();\n\t\tthis._outputs = outputs.map(op => new NotebookCellOutputTextModel(op));\n\t\tthis._metadata = metadata || {};\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === '\\n') {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.CRLF);\n\t\t}\n\t}\n\n\tgetHashValue(): number {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.language), hash(this.getValue()), this._getPersisentMetadata(), this.transientOptions.transientOutputs ? [] : this._outputs.map(op => ({\n\t\t\toutputs: op.outputs,\n\t\t\tmetadata: op.metadata\n\t\t}))]);\n\t\treturn this._hash;\n\t}\n\n\tprivate _getPersisentMetadata() {\n\t\tlet filteredMetadata: { [key: string]: any } = {};\n\t\tconst transientCellMetadata = this.transientOptions.transientCellMetadata;\n\n\t\tconst keys = new Set([...Object.keys(this.metadata)]);\n\t\tfor (let key of keys) {\n\t\t\tif (!(transientCellMetadata[key as keyof NotebookCellMetadata])\n\t\t\t) {\n\t\t\t\tfilteredMetadata[key] = this.metadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\n\t\treturn filteredMetadata;\n\t}\n\n\tgetTextLength(): number {\n\t\treturn this.textBuffer.getLength();\n\t}\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tspliceNotebookCellOutputs(splices: NotebookCellOutputsSplice[]): void {\n\t\tif (splices.length > 0) {\n\t\t\tsplices.reverse().forEach(splice => {\n\t\t\t\tthis.outputs.splice(splice[0], splice[1], ...splice[2]);\n\t\t\t});\n\t\t\tthis._onDidChangeOutputs.fire(splices);\n\t\t}\n\t}\n\toverride dispose() {\n\t\t// Manually release reference to previous text buffer to avoid large leaks\n\t\t// in case someone leaks a CellTextModel reference\n\t\tconst emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n\t\temptyDisposedTextBuffer.dispose();\n\t\tthis._textBuffer = emptyDisposedTextBuffer;\n\t\tsuper.dispose();\n\t}\n}\n\nexport function cloneMetadata(cell: NotebookCellTextModel) {\n\treturn {\n\t\t...cell.metadata\n\t};\n}\n\nexport function cloneNotebookCellTextModel(cell: NotebookCellTextModel) {\n\treturn {\n\t\tsource: cell.getValue(),\n\t\tlanguage: cell.language,\n\t\tcellKind: cell.cellKind,\n\t\toutputs: cell.outputs.map(output => ({\n\t\t\toutputs: output.outputs,\n\t\t\t/* paste should generate new outputId */ outputId: UUID.generateUuid()\n\t\t})),\n\t\tmetadata: cloneMetadata(cell)\n\t};\n}\n\nfunction computeRunStartTimeAdjustment(oldMetadata: NotebookCellMetadata, newMetadata: NotebookCellMetadata): number | undefined {\n\tif (oldMetadata.runStartTime !== newMetadata.runStartTime && typeof newMetadata.runStartTime === 'number') {\n\t\tconst offset = Date.now() - newMetadata.runStartTime;\n\t\treturn offset < 0 ? Math.abs(offset) : 0;\n\t} else {\n\t\treturn newMetadata.runStartTimeAdjustment;\n\t}\n}\n"]}