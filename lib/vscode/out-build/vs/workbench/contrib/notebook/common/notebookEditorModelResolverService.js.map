{"version":3,"file":"notebookEditorModelResolverService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/notebookEditorModelResolverService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQnF,QAAA,mCAAmC,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAsC,+BAA+B,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IResolvedNotebookEditorModel } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\n\nexport const INotebookEditorModelResolverService = createDecorator<INotebookEditorModelResolverService>('INotebookModelResolverService');\n\nexport interface INotebookEditorModelResolverService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidSaveNotebook: Event<URI>;\n\treadonly onDidChangeDirty: Event<IResolvedNotebookEditorModel>;\n\n\tisDirty(resource: URI): boolean;\n\n\tresolve(resource: URI, viewType?: string): Promise<IReference<IResolvedNotebookEditorModel>>;\n}\n"]}