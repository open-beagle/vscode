{"version":3,"file":"notebookSelector.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/notebookSelector.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAchG,SAAS,mBAAmB,CAAC,CAAmB;QAC/C,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACrB,OAA4B,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACvD;aAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACjC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;SACvB;aAAM;YACN,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAmB,CAAC,CAAC;YACxD,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;SAChE;IACF,CAAC;IAED,SAAgB,KAAK,CAAC,QAA0B,EAAE,YAAiB,EAAE,iBAAyB;QAC7F,OAAO,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACvF,CAAC;IAFD,sBAEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri';\nimport * as ls from 'vs/editor/common/modes/languageSelector';\n\nexport interface NotebookFilter {\n\treadonly viewType?: string;\n\treadonly scheme?: string;\n\treadonly pattern?: string | IRelativePattern;\n}\n\nexport type NotebookSelector = NotebookFilter | string | ReadonlyArray<NotebookFilter | string>;\n\nfunction _asLanguageSelector(s: NotebookSelector): ls.LanguageFilter | ls.LanguageFilter[] {\n\tif (Array.isArray(s)) {\n\t\treturn <ls.LanguageFilter[]>s.map(_asLanguageSelector);\n\t} else if (typeof s === 'string') {\n\t\treturn { language: s };\n\t} else {\n\t\tconst { viewType, scheme, pattern } = <NotebookFilter>s;\n\t\treturn { language: viewType, scheme: scheme, pattern: pattern };\n\t}\n}\n\nexport function score(selector: NotebookSelector, candidateUri: URI, candidateViewType: string): number {\n\treturn ls.score(_asLanguageSelector(selector), candidateUri, candidateViewType, true);\n}\n"]}