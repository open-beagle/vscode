{"version":3,"file":"notebookCommon.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/notebookCommon.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult, ISequence } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command } from 'vs/editor/common/modes';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { IEditorInput, IRevertOptions, ISaveOptions } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { NotebookSelector } from 'vs/workbench/contrib/notebook/common/notebookSelector';\nimport { IWorkingCopyBackupMeta } from 'vs/workbench/services/workingCopy/common/workingCopy';\n\nexport enum CellKind {\n\tMarkdown = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\t'text/markdown',\n\t'image/png',\n\t'image/jpeg',\n\t'text/plain'\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER = [\n\t'text/markdown',\n\t'application/json',\n\t'text/plain',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n];\n\nexport const BUILTIN_RENDERER_ID = '_builtin';\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport const notebookDocumentMetadataDefaults: Required<NotebookDocumentMetadata> = {\n\tcustom: {},\n\ttrusted: true\n};\n\nexport interface NotebookDocumentMetadata {\n\tcustom?: { [key: string]: unknown };\n\ttrusted: boolean;\n\t[key: string]: unknown;\n}\n\nexport enum NotebookCellExecutionState {\n\tIdle = 1,\n\tPending = 2,\n\tExecuting = 3,\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunState?: NotebookCellExecutionState;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport type TransientCellMetadata = { [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\ttransientOutputs: boolean;\n\ttransientCellMetadata: TransientCellMetadata;\n\ttransientDocumentMetadata: TransientDocumentMetadata;\n}\n\nexport interface INotebookMimeTypeSelector {\n\tmimeTypes?: string[];\n}\n\n/**\n * Passed to INotebookRendererInfo.matches when the notebook is initially\n * loaded before the kernel is known.\n */\nexport const AnyRendererApi = Symbol('AnyRendererApi');\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\nexport interface INotebookRendererInfo {\n\tid: string;\n\tdisplayName: string;\n\tentrypoint: URI;\n\tpreloads: ReadonlyArray<URI>;\n\textensionLocation: URI;\n\textensionId: ExtensionIdentifier;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\nexport interface INotebookMarkupRendererInfo {\n\treadonly id: string;\n\treadonly entrypoint: URI;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly extensionIsBuiltin: boolean;\n\treadonly dependsOn: string | undefined;\n\treadonly mimeTypes: readonly string[] | undefined;\n}\n\nexport interface NotebookCellOutputMetadata {\n\t/**\n\t * Additional attributes of a cell metadata.\n\t */\n\tcustom?: { [key: string]: unknown };\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly value: unknown;\n\treadonly metadata?: Record<string, unknown>;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, unknown>;\n}\n\nexport interface ICellOutput {\n\toutputs: IOutputItemDto[];\n\t// metadata?: NotebookCellOutsputMetadata;\n\toutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputItemDto[]): void;\n\tappendData(items: IOutputItemDto[]): void;\n}\n\nexport interface CellMetadataChangedEvent {\n\treadonly runStateChanged?: boolean;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata?: NotebookCellMetadata;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice[]>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<CellMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata\n\treadonly uri: URI;\n\treadonly versionId: number;\n\n\treadonly cells: readonly ICell[];\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = [\n\tstart: number /* start */,\n\tdeleteCount: number /* delete count */,\n\tnewOutputs: ICellOutput[]\n];\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents,\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport type NotebookCellsSplice2 = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: IMainCellDto[]\n];\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tCellClearOutput = 3,\n\tCellsClearOutput = 4,\n\tChangeLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tUnknown = 12\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean; };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: Partial<NullablePartialNotebookCellMetadata>;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: Partial<NullablePartialNotebookCellMetadata>;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\nexport interface NotebookDataDto {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport function getCellUndoRedoComparisonKey(uri: URI) {\n\tconst data = CellUri.parse(uri);\n\tif (!data) {\n\t\treturn uri.toString();\n\t}\n\n\treturn data.notebook.toString();\n}\n\n\nexport namespace CellUri {\n\n\texport const scheme = Schemas.vscodeNotebookCell;\n\n\tconst _regex = /^ch(\\d{7,})/;\n\n\texport function generate(notebook: URI, handle: number): URI {\n\t\treturn notebook.with({\n\t\t\tscheme,\n\t\t\tfragment: `ch${handle.toString().padStart(7, '0')}${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parse(cell: URI): { notebook: URI, handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst match = _regex.exec(cell.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst handle = Number(match[1]);\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: cell.with({\n\t\t\t\tscheme: cell.fragment.substr(match[0].length) || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellMetadataUri(notebook: URI, handle: number): URI {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellMetadata,\n\t\t\tfragment: `ch${handle.toString().padStart(7, '0')}${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellMetadataUri(metadata: URI) {\n\t\tif (metadata.scheme !== Schemas.vscodeNotebookCellMetadata) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst match = _regex.exec(metadata.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst handle = Number(match[1]);\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: metadata.with({\n\t\t\t\tscheme: metadata.fragment.substr(match[0].length) || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n}\n\ntype MimeTypeInfo = {\n\talwaysSecure?: boolean;\n\tsupportedByCore?: boolean;\n\tmergeable?: boolean;\n};\n\nconst _mimeTypeInfo = new Map<string, MimeTypeInfo>([\n\t['application/json', { alwaysSecure: true, supportedByCore: true }],\n\t['text/markdown', { alwaysSecure: true, supportedByCore: true }],\n\t['image/png', { alwaysSecure: true, supportedByCore: true }],\n\t['text/plain', { alwaysSecure: true, supportedByCore: true }],\n\t['application/javascript', { supportedByCore: true }],\n\t['text/html', { supportedByCore: true }],\n\t['image/svg+xml', { supportedByCore: true }],\n\t['image/jpeg', { supportedByCore: true }],\n\t['text/x-javascript', { supportedByCore: true }],\n\t['application/x.notebook.error-traceback', { alwaysSecure: true, supportedByCore: true }],\n\t['application/x.notebook.stream', { alwaysSecure: true, supportedByCore: true, mergeable: true }],\n\t['application/x.notebook.stdout', { alwaysSecure: true, supportedByCore: true, mergeable: true }],\n\t['application/x.notebook.stderr', { alwaysSecure: true, supportedByCore: true, mergeable: true }],\n]);\n\nexport function mimeTypeIsAlwaysSecure(mimeType: string): boolean {\n\treturn _mimeTypeInfo.get(mimeType)?.alwaysSecure ?? false;\n}\n\nexport function mimeTypeSupportedByCore(mimeType: string) {\n\treturn _mimeTypeInfo.get(mimeType)?.supportedByCore ?? false;\n}\n\nexport function mimeTypeIsMergeable(mimeType: string): boolean {\n\treturn _mimeTypeInfo.get(mimeType)?.mergeable ?? false;\n}\n\n// if (isWindows) {\n// \tvalue = value.replace(/\\//g, '\\\\');\n// }\n\nfunction matchGlobUniversal(pattern: string, path: string) {\n\tif (isWindows) {\n\t\tpattern = pattern.replace(/\\//g, '\\\\');\n\t\tpath = path.replace(/\\//g, '\\\\');\n\t}\n\n\treturn glob.match(pattern, path);\n}\n\n\nfunction getMimeTypeOrder(mimeType: string, userDisplayOrder: string[], defaultOrder: string[]) {\n\tlet order = 0;\n\tfor (let i = 0; i < userDisplayOrder.length; i++) {\n\t\tif (matchGlobUniversal(userDisplayOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\t\torder++;\n\t}\n\n\tfor (let i = 0; i < defaultOrder.length; i++) {\n\t\tif (matchGlobUniversal(defaultOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\n\t\torder++;\n\t}\n\n\treturn order;\n}\n\nexport function sortMimeTypes(mimeTypes: string[], userDisplayOrder: string[], defaultOrder: string[]) {\n\treturn mimeTypes.sort((a, b) => getMimeTypeOrder(a, userDisplayOrder, defaultOrder) - getMimeTypeOrder(b, userDisplayOrder, defaultOrder));\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n}\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IEditorModel {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: NotebookTextModel | undefined;\n\tisResolved(): this is IResolvedNotebookEditorModel;\n\tisDirty(): boolean;\n\tisReadonly(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IEditorModel {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n\tresolveOriginalFromDisk(): Promise<void>;\n\tresolveModifiedFromDisk(): Promise<void>;\n}\n\nexport interface INotebookTextModelBackup {\n\tmetadata: NotebookDocumentMetadata;\n\tlanguages: string[];\n\tcells: ICellDto2[]\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean\n\twordSeparators?: string;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern; } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tlet filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tlet excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookKernelChangeEvent {\n\tlabel?: true;\n\tdescription?: true;\n\tdetail?: true;\n\tsupportedLanguages?: true;\n\thasExecutionOrder?: true;\n}\n\nexport interface INotebookKernel {\n\n\treadonly id: string;\n\treadonly viewType: string;\n\treadonly onDidChange: Event<Readonly<INotebookKernelChangeEvent>>;\n\treadonly extension: ExtensionIdentifier;\n\n\treadonly localResourceRoot: URI;\n\treadonly preloadUris: URI[];\n\treadonly preloadProvides: string[];\n\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tsupportedLanguages: string[]\n\timplementsInterrupt?: boolean;\n\timplementsExecutionOrder?: boolean;\n\n\texecuteNotebookCellsRequest(uri: URI, cellHandles: number[]): Promise<void>;\n\tcancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void>;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tselector: NotebookSelector;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\nexport class CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: NotebookTextModel) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getHashValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n}\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult,\n\tlinesDiff?: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: editorCommon.ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport const DisplayOrderKey = 'notebook.displayOrder';\nexport const CellToolbarLocKey = 'notebook.cellToolbarLocation';\nexport const ShowCellStatusBarKey = 'notebook.showCellStatusBar';\nexport const NotebookTextDiffEditorPreview = 'notebook.diff.enablePreview';\nexport const ExperimentalUseMarkdownRenderer = 'notebook.experimental.useMarkdownRenderer';\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport interface INotebookDecorationRenderOptions {\n\tbackgroundColor?: string | ThemeColor;\n\tborderColor?: string | ThemeColor;\n\ttop?: editorCommon.IContentDecorationRenderOptions;\n}\n\nexport const NOTEBOOK_WORKING_COPY_TYPE_PREFIX = 'notebook/';\n"]}