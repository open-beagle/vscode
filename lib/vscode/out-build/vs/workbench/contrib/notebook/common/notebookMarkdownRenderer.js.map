{"version":3,"file":"notebookMarkdownRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/common/notebookMarkdownRenderer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,0BAA0B;QAWtC,YAAY,UAOX;YACA,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;YACnD,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC;YAChE,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,oBAAQ,CAAA,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;YAC1E,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;YAC1C,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;YACzD,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACvC,CAAC;KACD;IA5BD,gEA4BC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { INotebookMarkupRendererInfo } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nexport class NotebookMarkupRendererInfo implements INotebookMarkupRendererInfo {\n\n\treadonly id: string;\n\treadonly entrypoint: URI;\n\treadonly displayName: string;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly extensionIsBuiltin: boolean;\n\treadonly dependsOn: string | undefined;\n\treadonly mimeTypes: readonly string[] | undefined;\n\n\tconstructor(descriptor: {\n\t\treadonly id: string;\n\t\treadonly displayName: string;\n\t\treadonly entrypoint: string;\n\t\treadonly extension: IExtensionDescription;\n\t\treadonly mimeTypes: readonly string[] | undefined,\n\t\treadonly dependsOn: string | undefined,\n\t}) {\n\t\tthis.id = descriptor.id;\n\t\tthis.extensionId = descriptor.extension.identifier;\n\t\tthis.extensionLocation = descriptor.extension.extensionLocation;\n\t\tthis.entrypoint = joinPath(this.extensionLocation, descriptor.entrypoint);\n\t\tthis.displayName = descriptor.displayName;\n\t\tthis.extensionIsBuiltin = descriptor.extension.isBuiltin;\n\t\tthis.dependsOn = descriptor.dependsOn;\n\t\tthis.mimeTypes = descriptor.mimeTypes;\n\t}\n}\n"]}