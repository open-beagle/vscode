{"version":3,"file":"notebookOutline.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/contrib/outline/test/notebookOutline.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { setupInstantiationService, withTestNotebook } from 'vs/workbench/contrib/notebook/test/testNotebookEditor';\nimport { OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { NotebookCellOutline } from 'vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline';\nimport { IFileIconTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { Event } from 'vs/base/common/event';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { MarkerService } from 'vs/platform/markers/common/markerService';\nimport { CellKind, IOutputDto, NotebookCellMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { IActiveNotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\n\n\nsuite('Notebook Outline', function () {\n\n\tconst instantiationService = setupInstantiationService();\n\tinstantiationService.set(IEditorService, new class extends mock<IEditorService>() { });\n\tinstantiationService.set(IMarkerService, new MarkerService());\n\tinstantiationService.set(IThemeService, new class extends mock<IThemeService>() {\n\t\toverride onDidFileIconThemeChange = Event.None;\n\t\toverride getFileIconTheme(): IFileIconTheme {\n\t\t\treturn { hasFileIcons: true, hasFolderIcons: true, hidesExplorerArrows: false };\n\t\t}\n\t});\n\n\tfunction withNotebookOutline<R = any>(cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], callback: (outline: NotebookCellOutline, editor: IActiveNotebookEditor) => R): Promise<R> {\n\t\treturn withTestNotebook(cells, (editor) => {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\tassert.ok(false, 'MUST have active text editor');\n\t\t\t}\n\t\t\tconst outline = instantiationService.createInstance(NotebookCellOutline, editor, OutlineTarget.OutlinePane);\n\t\t\treturn callback(outline, editor);\n\t\t});\n\n\t}\n\n\ttest('basic', async function () {\n\t\tawait withNotebookOutline([], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements(), []);\n\t\t});\n\t});\n\n\ttest('special characters in heading', async function () {\n\t\tawait withNotebookOutline([\n\t\t\t['# Hellö & Hällo', 'md', CellKind.Markdown]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'Hellö & Hällo');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['# bo<i>ld</i>', 'md', CellKind.Markdown]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'bold');\n\t\t});\n\t});\n\n\ttest('Heading text defines entry label', async function () {\n\t\treturn await withNotebookOutline([\n\t\t\t['foo\\n # h1', 'md', CellKind.Markdown]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h1');\n\t\t});\n\t});\n\n\ttest('Notebook outline ignores markdown headings #115200', async function () {\n\t\tawait withNotebookOutline([\n\t\t\t['## h2 \\n# h1', 'md', CellKind.Markdown]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 2);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h2');\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[1].label, 'h1');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['## h2', 'md', CellKind.Markdown],\n\t\t\t['# h1', 'md', CellKind.Markdown]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 2);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h2');\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[1].label, 'h1');\n\t\t});\n\t});\n});\n"]}