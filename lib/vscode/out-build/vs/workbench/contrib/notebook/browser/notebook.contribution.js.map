{"version":3,"sources":["vs/workbench/contrib/notebook/browser/notebook.contribution.ts"],"names":[],"mappings":"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","file":"notebook.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { parse } from 'vs/base/common/marshalling';\nimport { isEqual } from 'vs/base/common/resources';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModel, ITextBufferFactory, DefaultEndOfLine, ITextBuffer } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ITextModelContentProvider, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport * as nls from 'vs/nls';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorDescriptor, IEditorRegistry } from 'vs/workbench/browser/editor';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { EditorInput, ICustomEditorInputFactory, IEditorInput, IEditorInputSerializer, IEditorInputFactoryRegistry, IEditorInputWithOptions, EditorExtensions } from 'vs/workbench/common/editor';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { NotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookEditor';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { NotebookService } from 'vs/workbench/contrib/notebook/browser/notebookServiceImpl';\nimport { CellKind, CellToolbarLocKey, CellUri, DisplayOrderKey, ExperimentalUseMarkdownRenderer, getCellUndoRedoComparisonKey, IResolvedNotebookEditorModel, NotebookDocumentBackupData, NotebookTextDiffEditorPreview, NOTEBOOK_WORKING_COPY_TYPE_PREFIX, ShowCellStatusBarKey } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { INotebookEditorModelResolverService } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { NotebookDiffEditorInput } from 'vs/workbench/contrib/notebook/browser/notebookDiffEditorInput';\nimport { NotebookTextDiffEditor } from 'vs/workbench/contrib/notebook/browser/diff/notebookTextDiffEditor';\nimport { INotebookEditorWorkerService } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerService';\nimport { NotebookEditorWorkerServiceImpl } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerServiceImpl';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { NotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/browser/notebookCellStatusBarServiceImpl';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/notebookEditorService';\nimport { NotebookEditorWidgetService } from 'vs/workbench/contrib/notebook/browser/notebookEditorServiceImpl';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Event } from 'vs/base/common/event';\nimport { getFormatedMetadataJSON } from 'vs/workbench/contrib/notebook/browser/diff/diffElementViewModel';\nimport { NotebookModelResolverServiceImpl } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverServiceImpl';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { NotebookKernelService } from 'vs/workbench/contrib/notebook/browser/notebookKernelServiceImpl';\nimport { IWorkingCopyIdentifier, NO_TYPE_ID } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { EditorOverride } from 'vs/platform/editor/common/editor';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\n\n// Editor Contribution\nimport 'vs/workbench/contrib/notebook/browser/contrib/clipboard/notebookClipboard';\nimport 'vs/workbench/contrib/notebook/browser/contrib/coreActions';\nimport 'vs/workbench/contrib/notebook/browser/contrib/find/findController';\nimport 'vs/workbench/contrib/notebook/browser/contrib/fold/folding';\nimport 'vs/workbench/contrib/notebook/browser/contrib/format/formatting';\nimport 'vs/workbench/contrib/notebook/browser/contrib/layout/layoutActions';\nimport 'vs/workbench/contrib/notebook/browser/contrib/marker/markerProvider';\nimport 'vs/workbench/contrib/notebook/browser/contrib/navigation/arrow';\nimport 'vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline';\nimport 'vs/workbench/contrib/notebook/browser/contrib/statusBar/statusBarProviders';\nimport 'vs/workbench/contrib/notebook/browser/contrib/statusBar/contributedStatusBarItemController';\nimport 'vs/workbench/contrib/notebook/browser/contrib/statusBar/executionStatusBarItemController';\nimport 'vs/workbench/contrib/notebook/browser/contrib/status/editorStatus';\nimport 'vs/workbench/contrib/notebook/browser/contrib/undoRedo/notebookUndoRedo';\nimport 'vs/workbench/contrib/notebook/browser/contrib/cellOperations/cellOperations';\nimport 'vs/workbench/contrib/notebook/browser/contrib/viewportCustomMarkdown/viewportCustomMarkdown';\nimport 'vs/workbench/contrib/notebook/browser/contrib/troubleshoot/layout';\n\n\n// Diff Editor Contribution\nimport 'vs/workbench/contrib/notebook/browser/diff/notebookDiffActions';\n\n// Output renderers registration\nimport 'vs/workbench/contrib/notebook/browser/view/output/transforms/richTransform';\n\n/*--------------------------------------------------------------------------------------------- */\n\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(\n\t\tNotebookEditor,\n\t\tNotebookEditor.ID,\n\t\t'Notebook Editor'\n\t),\n\t[\n\t\tnew SyncDescriptor(NotebookEditorInput)\n\t]\n);\n\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(\n\t\tNotebookTextDiffEditor,\n\t\tNotebookTextDiffEditor.ID,\n\t\t'Notebook Diff Editor'\n\t),\n\t[\n\t\tnew SyncDescriptor(NotebookDiffEditorInput)\n\t]\n);\n\nclass NotebookDiffEditorSerializer implements IEditorInputSerializer {\n\tcanSerialize(): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(input: EditorInput): string {\n\t\tassertType(input instanceof NotebookDiffEditorInput);\n\t\treturn JSON.stringify({\n\t\t\tresource: input.resource,\n\t\t\toriginalResource: input.originalResource,\n\t\t\tname: input.name,\n\t\t\toriginalName: input.originalName,\n\t\t\ttextDiffName: input.textDiffName,\n\t\t\tviewType: input.viewType,\n\t\t});\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\ttype Data = { resource: URI, originalResource: URI, name: string, originalName: string, viewType: string, textDiffName: string | undefined, group: number };\n\t\tconst data = <Data>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, originalResource, name, originalName, textDiffName, viewType } = data;\n\t\tif (!data || !URI.isUri(resource) || !URI.isUri(originalResource) || typeof name !== 'string' || typeof originalName !== 'string' || typeof viewType !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = NotebookDiffEditorInput.create(instantiationService, resource, name, originalResource, originalName,\n\t\t\ttextDiffName || nls.localize('diffLeftRightLabel', \"{0} ⟷ {1}\", originalResource.toString(true), resource.toString(true)),\n\t\t\tviewType);\n\t\treturn input;\n\t}\n\n\tstatic canResolveBackup(editorInput: IEditorInput, backupResource: URI): boolean {\n\t\treturn false;\n\t}\n\n}\nclass NotebookEditorSerializer implements IEditorInputSerializer {\n\tcanSerialize(): boolean {\n\t\treturn true;\n\t}\n\tserialize(input: EditorInput): string {\n\t\tassertType(input instanceof NotebookEditorInput);\n\t\treturn JSON.stringify({\n\t\t\tresource: input.resource,\n\t\t\tname: input.getName(),\n\t\t\tviewType: input.viewType,\n\t\t});\n\t}\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\ttype Data = { resource: URI, viewType: string, group: number };\n\t\tconst data = <Data>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, viewType } = data;\n\t\tif (!data || !URI.isUri(resource) || typeof viewType !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = NotebookEditorInput.create(instantiationService, resource, viewType);\n\t\treturn input;\n\t}\n}\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(\n\tNotebookEditorInput.ID,\n\tNotebookEditorSerializer\n);\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerCustomEditorInputFactory(\n\tSchemas.vscodeNotebook,\n\tnew class implements ICustomEditorInputFactory {\n\t\tasync createCustomEditorInput(resource: URI, instantiationService: IInstantiationService): Promise<NotebookEditorInput> {\n\t\t\treturn instantiationService.invokeFunction(async accessor => {\n\t\t\t\tconst workingCopyBackupService = accessor.get<IWorkingCopyBackupService>(IWorkingCopyBackupService);\n\n\t\t\t\tconst backup = await workingCopyBackupService.resolve<NotebookDocumentBackupData>({ resource, typeId: NO_TYPE_ID });\n\t\t\t\tif (!backup?.meta) {\n\t\t\t\t\tthrow new Error(`No backup found for Notebook editor: ${resource}`);\n\t\t\t\t}\n\n\t\t\t\tconst input = NotebookEditorInput.create(instantiationService, resource, backup.meta.viewType, { startDirty: true });\n\t\t\t\treturn input;\n\t\t\t});\n\t\t}\n\n\t\tcanResolveBackup(editorInput: IEditorInput, backupResource: URI): boolean {\n\t\t\tif (editorInput instanceof NotebookEditorInput) {\n\t\t\t\tif (isEqual(URI.from({ scheme: Schemas.vscodeNotebook, path: editorInput.resource.toString() }), backupResource)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n);\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(\n\tNotebookDiffEditorInput.ID,\n\tNotebookDiffEditorSerializer\n);\n\nexport class NotebookContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IUndoRedoService undoRedoService: IUndoRedoService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(undoRedoService.registerUriComparisonKeyComputer(CellUri.scheme, {\n\t\t\tgetComparisonKey: (uri: URI): string => {\n\t\t\t\treturn getCellUndoRedoComparisonKey(uri);\n\t\t\t}\n\t\t}));\n\t}\n}\n\nclass CellContentProvider implements ITextModelContentProvider {\n\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookModelResolverService: INotebookEditorModelResolverService,\n\t) {\n\t\tthis._registration = textModelService.registerTextModelContentProvider(CellUri.scheme, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst data = CellUri.parse(resource);\n\t\t// const data = parseCellUri(resource);\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst ref = await this._notebookModelResolverService.resolve(data.notebook);\n\t\tlet result: ITextModel | null = null;\n\n\t\tfor (const cell of ref.object.notebook.cells) {\n\t\t\tif (cell.uri.toString() === resource.toString()) {\n\t\t\t\tconst bufferFactory: ITextBufferFactory = {\n\t\t\t\t\tcreate: (defaultEOL) => {\n\t\t\t\t\t\tconst newEOL = (defaultEOL === DefaultEndOfLine.CRLF ? '\\r\\n' : '\\n');\n\t\t\t\t\t\t(cell.textBuffer as ITextBuffer).setEOL(newEOL);\n\t\t\t\t\t\treturn { textBuffer: cell.textBuffer as ITextBuffer, disposable: Disposable.None };\n\t\t\t\t\t},\n\t\t\t\t\tgetFirstLineText: (limit: number) => {\n\t\t\t\t\t\treturn cell.textBuffer.getLineContent(1).substr(0, limit);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst language = cell.cellKind === CellKind.Markdown ? this._modeService.create('markdown') : (cell.language ? this._modeService.create(cell.language) : this._modeService.createByFilepathOrFirstLine(resource, cell.textBuffer.getLineContent(1)));\n\t\t\t\tresult = this._modelService.createModel(\n\t\t\t\t\tbufferFactory,\n\t\t\t\t\tlanguage,\n\t\t\t\t\tresource\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (result) {\n\t\t\tconst once = result.onWillDispose(() => {\n\t\t\t\tonce.dispose();\n\t\t\t\tref.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nclass CellMetadataContentProvider implements ITextModelContentProvider {\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookModelResolverService: INotebookEditorModelResolverService,\n\t) {\n\t\tthis._registration = textModelService.registerTextModelContentProvider(Schemas.vscodeNotebookCellMetadata, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst data = CellUri.parseCellMetadataUri(resource);\n\t\t// const data = parseCellUri(resource);\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst ref = await this._notebookModelResolverService.resolve(data.notebook);\n\t\tlet result: ITextModel | null = null;\n\n\t\tconst mode = this._modeService.create('json');\n\n\t\tfor (const cell of ref.object.notebook.cells) {\n\t\t\tif (cell.handle === data.handle) {\n\t\t\t\tconst metadataSource = getFormatedMetadataJSON(ref.object.notebook, cell.metadata || {}, cell.language);\n\t\t\t\tresult = this._modelService.createModel(\n\t\t\t\t\tmetadataSource,\n\t\t\t\t\tmode,\n\t\t\t\t\tresource\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (result) {\n\t\t\tconst once = result.onWillDispose(() => {\n\t\t\t\tonce.dispose();\n\t\t\t\tref.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nclass RegisterSchemasContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.registerMetadataSchemas();\n\t}\n\n\tprivate registerMetadataSchemas(): void {\n\t\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\t\tconst metadataSchema: IJSONSchema = {\n\t\t\tproperties: {\n\t\t\t\t['language']: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: 'The language for the cell'\n\t\t\t\t},\n\t\t\t\t['inputCollapsed']: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: `Whether a code cell's editor is collapsed`\n\t\t\t\t},\n\t\t\t\t['outputCollapsed']: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: `Whether a code cell's outputs are collapsed`\n\t\t\t\t}\n\t\t\t},\n\t\t\t// patternProperties: allSettings.patternProperties,\n\t\t\tadditionalProperties: true,\n\t\t\tallowTrailingCommas: true,\n\t\t\tallowComments: true\n\t\t};\n\n\t\tjsonRegistry.registerSchema('vscode://schemas/notebook/cellmetadata', metadataSchema);\n\t}\n}\n\n// makes sure that every dirty notebook gets an editor\nclass NotebookFileTracker implements IWorkbenchContribution {\n\n\tprivate readonly _dirtyListener: IDisposable;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookEditorModelService: INotebookEditorModelResolverService,\n\t) {\n\n\t\ttype E = IResolvedNotebookEditorModel;\n\t\tthis._dirtyListener = Event.debounce<E, E[]>(\n\t\t\tthis._notebookEditorModelService.onDidChangeDirty,\n\t\t\t(last, current) => !last ? [current] : [...last, current],\n\t\t\t100\n\t\t)(this._openMissingDirtyNotebookEditors, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._dirtyListener.dispose();\n\t}\n\n\tprivate _openMissingDirtyNotebookEditors(models: IResolvedNotebookEditorModel[]): void {\n\t\tconst result: IEditorInputWithOptions[] = [];\n\t\tfor (let model of models) {\n\t\t\tif (model.isDirty() && !this._editorService.isOpened({ resource: model.resource, typeId: NotebookEditorInput.ID })) {\n\t\t\t\tresult.push({\n\t\t\t\t\teditor: NotebookEditorInput.create(this._instantiationService, model.resource, model.viewType),\n\t\t\t\t\toptions: { inactive: true, preserveFocus: true, pinned: true, override: EditorOverride.DISABLED }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (result.length > 0) {\n\t\t\tthis._editorService.openEditors(result);\n\t\t}\n\t}\n}\n\nclass NotebookWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService private readonly _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService\n\t) {\n\t\tsuper();\n\n\t\tthis._installHandler();\n\t}\n\n\tprivate async _installHandler(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tthis._register(this._workingCopyEditorService.registerHandler({\n\t\t\thandles: workingCopy => typeof this.getViewType(workingCopy) === 'string',\n\t\t\tisOpen: (workingCopy, editor) => editor instanceof NotebookEditorInput && editor.viewType === this.getViewType(workingCopy),\n\t\t\tcreateEditor: workingCopy => NotebookEditorInput.create(this._instantiationService, workingCopy.resource, this.getViewType(workingCopy)!)\n\t\t}));\n\t}\n\n\tprivate getViewType(workingCopy: IWorkingCopyIdentifier): string | undefined {\n\t\tif (workingCopy.typeId.startsWith(NOTEBOOK_WORKING_COPY_TYPE_PREFIX)) {\n\t\t\treturn workingCopy.typeId.substr(NOTEBOOK_WORKING_COPY_TYPE_PREFIX.length);\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(NotebookContribution, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(CellContentProvider, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(CellMetadataContentProvider, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RegisterSchemasContribution, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(NotebookFileTracker, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(NotebookWorkingCopyEditorHandler, LifecyclePhase.Ready);\n\nregisterSingleton(INotebookService, NotebookService);\nregisterSingleton(INotebookEditorWorkerService, NotebookEditorWorkerServiceImpl);\nregisterSingleton(INotebookEditorModelResolverService, NotebookModelResolverServiceImpl, true);\nregisterSingleton(INotebookCellStatusBarService, NotebookCellStatusBarService, true);\nregisterSingleton(INotebookEditorService, NotebookEditorWidgetService, true);\nregisterSingleton(INotebookKernelService, NotebookKernelService, true);\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'notebook',\n\torder: 100,\n\ttitle: nls.localize('notebookConfigurationTitle', \"Notebook\"),\n\ttype: 'object',\n\tproperties: {\n\t\t[DisplayOrderKey]: {\n\t\t\tdescription: nls.localize('notebook.displayOrder.description', \"Priority list for output mime types\"),\n\t\t\ttype: ['array'],\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: []\n\t\t},\n\t\t[CellToolbarLocKey]: {\n\t\t\tdescription: nls.localize('notebook.cellToolbarLocation.description', \"Where the cell toolbar should be shown, or whether it should be hidden.\"),\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: {\n\t\t\t\tmarkdownDescription: nls.localize('notebook.cellToolbarLocation.viewType', \"Configure the cell toolbar position for for specific file types\"),\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['left', 'right', 'hidden']\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\t'default': 'right'\n\t\t\t}\n\t\t},\n\t\t[ShowCellStatusBarKey]: {\n\t\t\tdescription: nls.localize('notebook.showCellStatusbar.description', \"Whether the cell status bar should be shown.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[NotebookTextDiffEditorPreview]: {\n\t\t\tdescription: nls.localize('notebook.diff.enablePreview.description', \"Whether to use the enhanced text diff editor for notebook.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[ExperimentalUseMarkdownRenderer]: {\n\t\t\tdescription: nls.localize('notebook.experimental.useMarkdownRenderer.description', \"Enable/disable using the new extensible markdown renderer.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t}\n});\n"]}