{"version":3,"file":"notebookUndoRedo.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/contrib/undoRedo/test/notebookUndoRedo.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { CellEditType, CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { TestCell, withTestNotebook } from 'vs/workbench/contrib/notebook/test/testNotebookEditor';\n\nsuite('Notebook Undo/Redo', () => {\n\ttest('Basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tconst modeService = accessor.get(IModeService);\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 0);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '0_0,1;1,1');\n\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.length, 0);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 1);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 2);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '0_0,1;1,1');\n\n\t\t\t\tawait viewModel.redo();\n\t\t\t\tassert.strictEqual(viewModel.length, 0);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 3);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 0, cells: [\n\t\t\t\t\t\tnew TestCell(viewModel.viewType, 3, '# header 2', 'markdown', CellKind.Code, [], modeService),\n\t\t\t\t\t]\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 4);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '4_2,1');\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 5);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Invalid replace count should not throw', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tconst modeService = accessor.get(IModeService);\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.doesNotThrow(() => {\n\t\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: [\n\t\t\t\t\t\t\tnew TestCell(viewModel.viewType, 3, '# header 2', 'markdown', CellKind.Code, [], modeService),\n\t\t\t\t\t\t]\n\t\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Replace beyond length', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor) => {\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 1, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 2);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Invalid replace count should not affect undo/redo', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tconst modeService = accessor.get(IModeService);\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: [\n\t\t\t\t\t\tnew TestCell(viewModel.viewType, 3, '# header 2', 'markdown', CellKind.Code, [], modeService),\n\t\t\t\t\t]\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tawait viewModel.undo();\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 2);\n\t\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 1, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\t\t\t}\n\t\t);\n\t});\n});\n"]}