{"version":3,"file":"notebookClipboard.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/contrib/clipboard/test/notebookClipboard.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { mock } from 'vs/base/test/common/mock';\nimport { NotebookClipboardContribution, runCopyCells, runCutCells } from 'vs/workbench/contrib/notebook/browser/contrib/clipboard/notebookClipboard';\nimport { CellKind, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { withTestNotebook } from 'vs/workbench/contrib/notebook/test/testNotebookEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IActiveNotebookEditor, INotebookEditor, NOTEBOOK_EDITOR_ID } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { IVisibleEditorPane } from 'vs/workbench/common/editor';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { FoldingModel, updateFoldingStateAtIndex } from 'vs/workbench/contrib/notebook/browser/contrib/fold/foldingModel';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\n\nsuite('Notebook Clipboard', () => {\n\tconst createEditorService = (editor: IActiveNotebookEditor) => {\n\t\tconst visibleEditorPane = new class extends mock<IVisibleEditorPane>() {\n\t\t\toverride getId(): string {\n\t\t\t\treturn NOTEBOOK_EDITOR_ID;\n\t\t\t}\n\t\t\toverride getControl(): INotebookEditor {\n\t\t\t\treturn editor;\n\t\t\t}\n\t\t};\n\n\t\tconst editorService: IEditorService = new class extends mock<IEditorService>() {\n\t\t\toverride get activeEditorPane(): IVisibleEditorPane | undefined {\n\t\t\t\treturn visibleEditorPane;\n\t\t\t}\n\t\t};\n\n\t\treturn editorService;\n\t};\n\n\ttest('Cut multiple selected cells', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() { override setToCopy() { } });\n\n\t\t\t\tconst clipboardContrib = new NotebookClipboardContribution(createEditorService(editor));\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 2 }, selections: [{ start: 0, end: 2 }] }, 'model');\n\t\t\t\tassert.ok(clipboardContrib.runCutAction(accessor));\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 0, end: 1 });\n\t\t\t\tassert.strictEqual(viewModel.length, 1);\n\t\t\t\tassert.strictEqual(viewModel.cellAt(0)?.getText(), 'paragraph 2');\n\t\t\t});\n\t});\n\n\ttest('Cut should take folding info into account', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header b', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 2;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['var c = 3', 'javascript', CellKind.Markdown, [], {}],\n\t\t\t\t['# header d', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var e = 4;', 'javascript', CellKind.Code, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tconst foldingModel = new FoldingModel();\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\teditor.setHiddenAreas(viewModel.getHiddenRanges());\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 1 }, selections: [{ start: 0, end: 1 }] }, 'model');\n\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() { override setToCopy() { } });\n\n\t\t\t\tconst clipboardContrib = new NotebookClipboardContribution(createEditorService(editor));\n\t\t\t\tclipboardContrib.runCutAction(accessor);\n\t\t\t\tassert.strictEqual(viewModel.length, 5);\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 7);\n\t\t\t});\n\t});\n\n\ttest('Copy should take folding info into account', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header b', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var b = 2;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['var c = 3', 'javascript', CellKind.Markdown, [], {}],\n\t\t\t\t['# header d', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['var e = 4;', 'javascript', CellKind.Code, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tconst foldingModel = new FoldingModel();\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\teditor.setHiddenAreas(viewModel.getHiddenRanges());\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 1 }, selections: [{ start: 0, end: 1 }] }, 'model');\n\n\t\t\t\tlet _cells: NotebookCellTextModel[] = [];\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy(cells: NotebookCellTextModel[]) { _cells = cells; }\n\t\t\t\t\toverride getToCopy() { return { items: _cells, isCopy: true }; }\n\t\t\t\t});\n\n\t\t\t\tconst clipboardContrib = new NotebookClipboardContribution(createEditorService(editor));\n\t\t\t\tclipboardContrib.runCopyAction(accessor);\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 6, end: 7 }, selections: [{ start: 6, end: 7 }] }, 'model');\n\t\t\t\tclipboardContrib.runPasteAction(accessor);\n\n\t\t\t\tassert.strictEqual(viewModel.length, 9);\n\t\t\t\tassert.strictEqual(viewModel.cellAt(8)?.getText(), 'var b = 1;');\n\t\t\t});\n\t});\n\n\ttest('#119773, cut last item should not focus on the top first cell', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() { override setToCopy() { } });\n\t\t\t\tconst clipboardContrib = new NotebookClipboardContribution(createEditorService(editor));\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 2, end: 3 }, selections: [{ start: 2, end: 3 }] }, 'model');\n\t\t\t\tassert.ok(clipboardContrib.runCutAction(accessor));\n\t\t\t\t// it should be the last cell, other than the first one.\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 1, end: 2 });\n\t\t\t});\n\t});\n\n\ttest('#119771, undo paste should restore selections', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy() { }\n\t\t\t\t\toverride getToCopy() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\teditor.viewModel.cellAt(0)!.model\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tisCopy: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst clipboardContrib = new NotebookClipboardContribution(createEditorService(editor));\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 2, end: 3 }, selections: [{ start: 2, end: 3 }] }, 'model');\n\t\t\t\tassert.ok(clipboardContrib.runPasteAction(accessor));\n\n\t\t\t\tassert.strictEqual(viewModel.length, 4);\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 3, end: 4 });\n\t\t\t\tassert.strictEqual(viewModel.cellAt(3)?.getText(), '# header 1');\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 2, end: 3 });\n\t\t\t});\n\t});\n\n\ttest('copy cell from ui still works if the target cell is not part of a selection', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\tlet _toCopy: NotebookCellTextModel[] = [];\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy(toCopy: NotebookCellTextModel[]) { _toCopy = toCopy; }\n\t\t\t\t\toverride getToCopy() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\titems: _toCopy,\n\t\t\t\t\t\t\tisCopy: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 1 }, selections: [{ start: 0, end: 2 }] }, 'model');\n\t\t\t\tassert.ok(runCopyCells(accessor, editor, viewModel.cellAt(0)));\n\t\t\t\tassert.deepStrictEqual(_toCopy, [editor.viewModel.cellAt(0)!.model, editor.viewModel.cellAt(1)!.model]);\n\n\t\t\t\tassert.ok(runCopyCells(accessor, editor, viewModel.cellAt(2)));\n\t\t\t\tassert.deepStrictEqual(_toCopy.length, 1);\n\t\t\t\tassert.deepStrictEqual(_toCopy, [editor.viewModel.cellAt(2)!.model]);\n\t\t\t});\n\t});\n\n\ttest('cut cell from ui still works if the target cell is not part of a selection', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 3', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy() { }\n\t\t\t\t\toverride getToCopy() {\n\t\t\t\t\t\treturn { items: [], isCopy: true };\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 1 }, selections: [{ start: 0, end: 2 }] }, 'model');\n\t\t\t\tassert.ok(runCutCells(accessor, editor, viewModel.cellAt(0)));\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 4);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 0, end: 1 });\n\t\t\t\tassert.deepStrictEqual(viewModel.getSelections(), [{ start: 0, end: 2 }]);\n\t\t\t\tassert.ok(runCutCells(accessor, editor, viewModel.cellAt(2)));\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 0, end: 1 });\n\t\t\t\tassert.strictEqual(viewModel.cellAt(0)?.getText(), '# header 1');\n\t\t\t\tassert.strictEqual(viewModel.cellAt(1)?.getText(), 'paragraph 1');\n\t\t\t\tassert.strictEqual(viewModel.cellAt(2)?.getText(), 'paragraph 3');\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 4);\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 2, end: 3 }, selections: [{ start: 2, end: 4 }] }, 'model');\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 2, end: 3 });\n\t\t\t\tassert.ok(runCutCells(accessor, editor, viewModel.cellAt(0)));\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 1, end: 2 });\n\t\t\t\tassert.deepStrictEqual(viewModel.getSelections(), [{ start: 1, end: 3 }]);\n\t\t\t});\n\t});\n\n\ttest('cut focus cell still works if the focus is not part of any selection', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 3', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy() { }\n\t\t\t\t\toverride getToCopy() {\n\t\t\t\t\t\treturn { items: [], isCopy: true };\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 0, end: 1 }, selections: [{ start: 2, end: 4 }] }, 'model');\n\t\t\t\tassert.ok(runCutCells(accessor, editor, undefined));\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 0, end: 1 });\n\t\t\t\tassert.deepStrictEqual(viewModel.getSelections(), [{ start: 1, end: 3 }]);\n\t\t\t});\n\t});\n\n\ttest('cut focus cell still works if the focus is not part of any selection 2', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t\t['paragraph 3', 'markdown', CellKind.Markdown, [], {}],\n\t\t\t],\n\t\t\tasync (editor, accessor) => {\n\t\t\t\taccessor.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\t\t\toverride setToCopy() { }\n\t\t\t\t\toverride getToCopy() {\n\t\t\t\t\t\treturn { items: [], isCopy: true };\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst viewModel = editor.viewModel;\n\t\t\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: { start: 3, end: 4 }, selections: [{ start: 0, end: 2 }] }, 'model');\n\t\t\t\tassert.ok(runCutCells(accessor, editor, undefined));\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.deepStrictEqual(viewModel.getFocus(), { start: 2, end: 3 });\n\t\t\t\tassert.deepStrictEqual(viewModel.getSelections(), [{ start: 0, end: 2 }]);\n\t\t\t});\n\t});\n});\n"]}