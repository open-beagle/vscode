{"version":3,"file":"viewportCustomMarkdown.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/contrib/viewportCustomMarkdown/viewportCustomMarkdown.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { CellEditState, IInsetRenderOutput, INotebookEditor, INotebookEditorContribution, RenderOutputType } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { registerNotebookContribution } from 'vs/workbench/contrib/notebook/browser/notebookEditorExtensions';\nimport { CodeCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel';\nimport { BUILTIN_RENDERER_ID, CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { cellRangesToIndexes } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\n\nclass NotebookClipboardContribution extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.viewportCustomMarkdown';\n\tprivate readonly _warmupViewport: RunOnceScheduler;\n\n\tconstructor(private readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookService private readonly _notebookService: INotebookService) {\n\t\tsuper();\n\n\t\tthis._warmupViewport = new RunOnceScheduler(() => this._warmupViewportNow(), 200);\n\n\t\tthis._register(this._notebookEditor.onDidScroll(() => {\n\t\t\tthis._warmupViewport.schedule();\n\t\t}));\n\t}\n\n\tprivate _warmupViewportNow() {\n\t\tconst visibleRanges = this._notebookEditor.getVisibleRangesPlusViewportAboveBelow();\n\t\tcellRangesToIndexes(visibleRanges).forEach(index => {\n\t\t\tconst cell = this._notebookEditor.viewModel?.viewCells[index];\n\n\t\t\tif (cell?.cellKind === CellKind.Markdown && cell?.getEditState() === CellEditState.Preview && !cell.metadata?.inputCollapsed) {\n\t\t\t\tthis._notebookEditor.createMarkdownPreview(cell);\n\t\t\t} else if (cell?.cellKind === CellKind.Code) {\n\t\t\t\tconst viewCell = (cell as CodeCellViewModel);\n\t\t\t\tconst outputs = viewCell.outputsViewModels;\n\t\t\t\tfor (let output of outputs) {\n\t\t\t\t\tconst [mimeTypes, pick] = output.resolveMimeTypes(this._notebookEditor.textModel!, undefined);\n\t\t\t\t\tif (!mimeTypes.find(mimeType => mimeType.isTrusted) || mimeTypes.length === 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pickedMimeTypeRenderer = mimeTypes[pick];\n\n\t\t\t\t\tif (!pickedMimeTypeRenderer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pickedMimeTypeRenderer.rendererId === BUILTIN_RENDERER_ID) {\n\t\t\t\t\t\tconst renderer = this._notebookEditor.getOutputRenderer().getContribution(pickedMimeTypeRenderer.mimeType);\n\t\t\t\t\t\tif (renderer?.getType() === RenderOutputType.Html) {\n\t\t\t\t\t\t\tconst renderResult = renderer!.render(output, output.model.outputs.filter(op => op.mime === pickedMimeTypeRenderer.mimeType), DOM.$(''), undefined) as IInsetRenderOutput;\n\t\t\t\t\t\t\tthis._notebookEditor.createOutput(viewCell, renderResult, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst renderer = this._notebookService.getRendererInfo(pickedMimeTypeRenderer.rendererId);\n\n\t\t\t\t\tif (!renderer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result: IInsetRenderOutput = { type: RenderOutputType.Extension, renderer, source: output, mimeType: pickedMimeTypeRenderer.mimeType };\n\t\t\t\t\tthis._notebookEditor.createOutput(viewCell, result, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nregisterNotebookContribution(NotebookClipboardContribution.id, NotebookClipboardContribution);\n"]}