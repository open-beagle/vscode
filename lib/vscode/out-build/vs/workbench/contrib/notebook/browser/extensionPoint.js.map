{"version":3,"sources":["vs/workbench/contrib/notebook/browser/extensionPoint.ts"],"names":[],"mappings":"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","file":"extensionPoint.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as nls from 'vs/nls';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { NotebookEditorPriority } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nnamespace NotebookEditorContribution {\n\texport const viewType = 'viewType';\n\texport const displayName = 'displayName';\n\texport const selector = 'selector';\n\texport const priority = 'priority';\n}\n\nexport interface INotebookEditorContribution {\n\treadonly [NotebookEditorContribution.viewType]: string;\n\treadonly [NotebookEditorContribution.displayName]: string;\n\treadonly [NotebookEditorContribution.selector]?: readonly { filenamePattern?: string; excludeFileNamePattern?: string; }[];\n\treadonly [NotebookEditorContribution.priority]?: string;\n}\n\nnamespace NotebookRendererContribution {\n\texport const viewType = 'viewType';\n\texport const id = 'id';\n\texport const displayName = 'displayName';\n\texport const mimeTypes = 'mimeTypes';\n\texport const entrypoint = 'entrypoint';\n\texport const hardDependencies = 'dependencies';\n\texport const optionalDependencies = 'optionalDependencies';\n}\n\nexport interface INotebookRendererContribution {\n\treadonly [NotebookRendererContribution.id]?: string;\n\treadonly [NotebookRendererContribution.viewType]?: string;\n\treadonly [NotebookRendererContribution.displayName]: string;\n\treadonly [NotebookRendererContribution.mimeTypes]?: readonly string[];\n\treadonly [NotebookRendererContribution.entrypoint]: string;\n\treadonly [NotebookRendererContribution.hardDependencies]: readonly string[];\n\treadonly [NotebookRendererContribution.optionalDependencies]: readonly string[];\n}\n\nenum NotebookMarkupRendererContribution {\n\tid = 'id',\n\tdisplayName = 'displayName',\n\tentrypoint = 'entrypoint',\n\tdependsOn = 'dependsOn',\n\tmimeTypes = 'mimeTypes',\n}\n\nexport interface INotebookMarkupRendererContribution {\n\treadonly [NotebookMarkupRendererContribution.id]?: string;\n\treadonly [NotebookMarkupRendererContribution.displayName]: string;\n\treadonly [NotebookMarkupRendererContribution.entrypoint]: string;\n\treadonly [NotebookMarkupRendererContribution.dependsOn]: string | undefined;\n\treadonly [NotebookMarkupRendererContribution.mimeTypes]: string[] | undefined;\n}\n\nconst notebookProviderContribution: IJSONSchema = {\n\tdescription: nls.localize('contributes.notebook.provider', 'Contributes notebook document provider.'),\n\ttype: 'array',\n\tdefaultSnippets: [{ body: [{ viewType: '', displayName: '' }] }],\n\titems: {\n\t\ttype: 'object',\n\t\trequired: [\n\t\t\tNotebookEditorContribution.viewType,\n\t\t\tNotebookEditorContribution.displayName,\n\t\t\tNotebookEditorContribution.selector,\n\t\t],\n\t\tproperties: {\n\t\t\t[NotebookEditorContribution.viewType]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.provider.viewType', 'Unique identifier of the notebook.'),\n\t\t\t},\n\t\t\t[NotebookEditorContribution.displayName]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.provider.displayName', 'Human readable name of the notebook.'),\n\t\t\t},\n\t\t\t[NotebookEditorContribution.selector]: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('contributes.notebook.provider.selector', 'Set of globs that the notebook is for.'),\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tfilenamePattern: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.notebook.provider.selector.filenamePattern', 'Glob that the notebook is enabled for.'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludeFileNamePattern: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.notebook.selector.provider.excludeFileNamePattern', 'Glob that the notebook is disabled for.')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t[NotebookEditorContribution.priority]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tmarkdownDeprecationMessage: nls.localize('contributes.priority', 'Controls if the custom editor is enabled automatically when the user opens a file. This may be overridden by users using the `workbench.editorAssociations` setting.'),\n\t\t\t\tenum: [\n\t\t\t\t\tNotebookEditorPriority.default,\n\t\t\t\t\tNotebookEditorPriority.option,\n\t\t\t\t],\n\t\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\t\tnls.localize('contributes.priority.default', 'The editor is automatically used when the user opens a resource, provided that no other default custom editors are registered for that resource.'),\n\t\t\t\t\tnls.localize('contributes.priority.option', 'The editor is not automatically used when the user opens a resource, but a user can switch to the editor using the `Reopen With` command.'),\n\t\t\t\t],\n\t\t\t\tdefault: 'default'\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst notebookRendererContribution: IJSONSchema = {\n\tdescription: nls.localize('contributes.notebook.renderer', 'Contributes notebook output renderer provider.'),\n\ttype: 'array',\n\tdefaultSnippets: [{ body: [{ id: '', displayName: '', mimeTypes: [''], entrypoint: '' }] }],\n\titems: {\n\t\ttype: 'object',\n\t\trequired: [\n\t\t\tNotebookRendererContribution.id,\n\t\t\tNotebookRendererContribution.displayName,\n\t\t\tNotebookRendererContribution.mimeTypes,\n\t\t\tNotebookRendererContribution.entrypoint,\n\t\t],\n\t\tproperties: {\n\t\t\t[NotebookRendererContribution.id]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.renderer.viewType', 'Unique identifier of the notebook output renderer.'),\n\t\t\t},\n\t\t\t[NotebookRendererContribution.viewType]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdeprecationMessage: nls.localize('contributes.notebook.provider.viewType.deprecated', 'Rename `viewType` to `id`.'),\n\t\t\t\tdescription: nls.localize('contributes.notebook.renderer.viewType', 'Unique identifier of the notebook output renderer.'),\n\t\t\t},\n\t\t\t[NotebookRendererContribution.displayName]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.renderer.displayName', 'Human readable name of the notebook output renderer.'),\n\t\t\t},\n\t\t\t[NotebookRendererContribution.mimeTypes]: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('contributes.notebook.selector', 'Set of globs that the notebook is for.'),\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\t[NotebookRendererContribution.entrypoint]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.renderer.entrypoint', 'File to load in the webview to render the extension.'),\n\t\t\t},\n\t\t\t[NotebookRendererContribution.hardDependencies]: {\n\t\t\t\ttype: 'array',\n\t\t\t\tuniqueItems: true,\n\t\t\t\titems: { type: 'string' },\n\t\t\t\tmarkdownDescription: nls.localize('contributes.notebook.renderer.hardDependencies', 'List of kernel dependencies the renderer requires. If any of the dependencies are present in the `NotebookKernel.preloads`, the renderer can be used.'),\n\t\t\t},\n\t\t\t[NotebookRendererContribution.optionalDependencies]: {\n\t\t\t\ttype: 'array',\n\t\t\t\tuniqueItems: true,\n\t\t\t\titems: { type: 'string' },\n\t\t\t\tmarkdownDescription: nls.localize('contributes.notebook.renderer.optionalDependencies', 'List of soft kernel dependencies the renderer can make use of. If any of the dependencies are present in the `NotebookKernel.preloads`, the renderer will be preferred over renderers that don\\'t interact with the kernel.'),\n\t\t\t},\n\t\t}\n\t}\n};\nconst notebookMarkupRendererContribution: IJSONSchema = {\n\tdescription: nls.localize('contributes.notebook.markdownRenderer', 'Contributes a renderer for markdown cells in notebooks.'),\n\ttype: 'array',\n\tdefaultSnippets: [{ body: [{ id: '', displayName: '', entrypoint: '' }] }],\n\titems: {\n\t\ttype: 'object',\n\t\trequired: [\n\t\t\tNotebookMarkupRendererContribution.id,\n\t\t\tNotebookMarkupRendererContribution.displayName,\n\t\t\tNotebookMarkupRendererContribution.entrypoint,\n\t\t],\n\t\tproperties: {\n\t\t\t[NotebookMarkupRendererContribution.id]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.markdownRenderer.id', 'Unique identifier of the notebook markdown renderer.'),\n\t\t\t},\n\t\t\t[NotebookMarkupRendererContribution.displayName]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.markdownRenderer.displayName', 'Human readable name of the notebook markdown renderer.'),\n\t\t\t},\n\t\t\t[NotebookMarkupRendererContribution.entrypoint]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.markdownRenderer.entrypoint', 'File to load in the webview to render the extension.'),\n\t\t\t},\n\t\t\t[NotebookMarkupRendererContribution.mimeTypes]: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: { type: 'string' },\n\t\t\t\tdescription: nls.localize('contributes.notebook.markdownRenderer.mimeTypes', 'The mime type that the renderer handles.'),\n\t\t\t},\n\t\t\t[NotebookMarkupRendererContribution.dependsOn]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('contributes.notebook.markdownRenderer.dependsOn', 'If specified, this renderer augments another renderer instead of providing full rendering.'),\n\t\t\t},\n\t\t}\n\t}\n};\n\nexport const notebookProviderExtensionPoint = ExtensionsRegistry.registerExtensionPoint<INotebookEditorContribution[]>(\n\t{\n\t\textensionPoint: 'notebookProvider',\n\t\tjsonSchema: notebookProviderContribution\n\t});\n\nexport const notebookRendererExtensionPoint = ExtensionsRegistry.registerExtensionPoint<INotebookRendererContribution[]>(\n\t{\n\t\textensionPoint: 'notebookOutputRenderer',\n\t\tjsonSchema: notebookRendererContribution\n\t});\n\nexport const notebookMarkupRendererExtensionPoint = ExtensionsRegistry.registerExtensionPoint<INotebookMarkupRendererContribution[]>(\n\t{\n\t\textensionPoint: 'notebookMarkupRenderers',\n\t\tjsonSchema: notebookMarkupRendererContribution\n\t});\n"]}