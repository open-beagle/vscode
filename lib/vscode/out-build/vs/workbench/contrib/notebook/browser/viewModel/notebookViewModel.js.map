{"version":3,"file":"notebookViewModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/viewModel/notebookViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { clamp } from 'vs/base/common/numbers';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDecorationOptions, IModelDeltaDecoration, TrackedRangeStickiness, IReadonlyTextBuffer, EndOfLinePreference } from 'vs/editor/common/model';\nimport { IntervalNode, IntervalTree } from 'vs/editor/common/model/intervalTree';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { WorkspaceTextEdit } from 'vs/editor/common/modes';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { CellEditState, CellFindMatch, ICellViewModel, NotebookLayoutInfo, INotebookDeltaDecoration, INotebookDeltaCellStatusBarItems, CellFocusMode } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CodeCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel';\nimport { NotebookEventDispatcher, NotebookMetadataChangedEvent } from 'vs/workbench/contrib/notebook/browser/viewModel/eventDispatcher';\nimport { CellFoldingState, EditorFoldingStateDelegate } from 'vs/workbench/contrib/notebook/browser/contrib/fold/foldingModel';\nimport { MarkdownCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/markdownCellViewModel';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { CellKind, NotebookCellMetadata, INotebookSearchOptions, NotebookCellsChangeType, ICell, NotebookCellTextModelSplice, CellEditType, IOutputDto, SelectionStateType, ISelectionState } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellRange, cellIndexesToRanges, cellRangesToIndexes, reduceRanges } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { FoldingRegions } from 'vs/editor/contrib/folding/foldingRanges';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { MarkdownRenderer } from 'vs/editor/browser/core/markdownRenderer';\nimport { dirname } from 'vs/base/common/resources';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { MultiModelEditStackElement, SingleModelEditStackElement } from 'vs/editor/common/model/editStack';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { NotebookCellSelectionCollection } from 'vs/workbench/contrib/notebook/browser/viewModel/cellSelectionCollection';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { groupByNumber } from 'vs/base/common/collections';\n\nexport interface INotebookEditorViewState {\n\teditingCells: { [key: number]: boolean };\n\teditorViewStates: { [key: number]: editorCommon.ICodeEditorViewState | null };\n\thiddenFoldingRanges?: ICellRange[];\n\tcellTotalHeights?: { [key: number]: number };\n\tscrollPosition?: { left: number; top: number; };\n\tfocus?: number;\n\teditorFocused?: boolean;\n\tcontributionsState?: { [id: string]: unknown };\n}\n\nexport interface ICellModelDecorations {\n\townerId: number;\n\tdecorations: string[];\n}\n\nexport interface ICellModelDeltaDecorations {\n\townerId: number;\n\tdecorations: IModelDeltaDecoration[];\n}\n\nexport interface IModelDecorationsChangeAccessor {\n\tdeltaDecorations(oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]): ICellModelDecorations[];\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\n\nexport type NotebookViewCellsSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tCellViewModel[]\n];\n\nexport interface INotebookViewCellsUpdateEvent {\n\tsynchronous: boolean;\n\tsplices: NotebookViewCellsSplice[];\n}\n\n\nclass DecorationsTree {\n\tprivate readonly _decorationsTree: IntervalTree;\n\n\tconstructor() {\n\t\tthis._decorationsTree = new IntervalTree();\n\t}\n\n\tpublic intervalSearch(start: number, end: number, filterOwnerId: number, filterOutValidation: boolean, cachedVersionId: number): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n\t\treturn r1;\n\t}\n\n\tpublic search(filterOwnerId: number, filterOutValidation: boolean, overviewRulerOnly: boolean, cachedVersionId: number): IntervalNode[] {\n\t\treturn this._decorationsTree.search(filterOwnerId, filterOutValidation, cachedVersionId);\n\n\t}\n\n\tpublic collectNodesFromOwner(ownerId: number): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.collectNodesFromOwner(ownerId);\n\t\treturn r1;\n\t}\n\n\tpublic collectNodesPostOrder(): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.collectNodesPostOrder();\n\t\treturn r1;\n\t}\n\n\tpublic insert(node: IntervalNode): void {\n\t\tthis._decorationsTree.insert(node);\n\t}\n\n\tpublic delete(node: IntervalNode): void {\n\t\tthis._decorationsTree.delete(node);\n\t}\n\n\tpublic resolveNode(node: IntervalNode, cachedVersionId: number): void {\n\t\tthis._decorationsTree.resolveNode(node, cachedVersionId);\n\t}\n\n\tpublic acceptReplace(offset: number, length: number, textLength: number, forceMoveMarkers: boolean): void {\n\t\tthis._decorationsTree.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t}\n}\n\nconst TRACKED_RANGE_OPTIONS = [\n\tModelDecorationOptions.register({ stickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingBefore }),\n\tModelDecorationOptions.register({ stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingAfter }),\n];\n\nfunction _normalizeOptions(options: IModelDecorationOptions): ModelDecorationOptions {\n\tif (options instanceof ModelDecorationOptions) {\n\t\treturn options;\n\t}\n\treturn ModelDecorationOptions.createDynamic(options);\n}\n\nlet MODEL_ID = 0;\n\nexport interface NotebookViewModelOptions {\n\tisReadOnly: boolean;\n}\n\nexport class NotebookViewModel extends Disposable implements EditorFoldingStateDelegate {\n\tprivate _localStore: DisposableStore = this._register(new DisposableStore());\n\tprivate _handleToViewCellMapping = new Map<number, CellViewModel>();\n\tprivate _options: NotebookViewModelOptions;\n\tget options(): NotebookViewModelOptions { return this._options; }\n\tprivate _viewCells: CellViewModel[] = [];\n\n\tget viewCells(): ICellViewModel[] {\n\t\treturn this._viewCells;\n\t}\n\n\tset viewCells(_: ICellViewModel[]) {\n\t\tthrow new Error('NotebookViewModel.viewCells is readonly');\n\t}\n\n\tget length(): number {\n\t\treturn this._viewCells.length;\n\t}\n\n\tget notebookDocument() {\n\t\treturn this._notebook;\n\t}\n\n\tget uri() {\n\t\treturn this._notebook.uri;\n\t}\n\n\tget metadata() {\n\t\treturn this._notebook.metadata;\n\t}\n\n\tget trusted() {\n\t\treturn !!this._notebook.metadata?.trusted;\n\t}\n\n\tprivate readonly _onDidChangeViewCells = this._register(new Emitter<INotebookViewCellsUpdateEvent>());\n\tget onDidChangeViewCells(): Event<INotebookViewCellsUpdateEvent> { return this._onDidChangeViewCells.event; }\n\n\tprivate _lastNotebookEditResource: URI[] = [];\n\n\tget lastNotebookEditResource(): URI | null {\n\t\tif (this._lastNotebookEditResource.length) {\n\t\t\treturn this._lastNotebookEditResource[this._lastNotebookEditResource.length - 1];\n\t\t}\n\t\treturn null;\n\t}\n\n\tget layoutInfo(): NotebookLayoutInfo | null {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<string>());\n\tget onDidChangeSelection(): Event<string> { return this._onDidChangeSelection.event; }\n\n\tprivate _selectionCollection = new NotebookCellSelectionCollection();\n\n\tprivate get selectionHandles() {\n\t\tconst handlesSet = new Set<number>();\n\t\tconst handles: number[] = [];\n\t\tcellRangesToIndexes(this._selectionCollection.selections).map(index => this.cellAt(index)).forEach(cell => {\n\t\t\tif (cell && !handlesSet.has(cell.handle)) {\n\t\t\t\thandles.push(cell.handle);\n\t\t\t}\n\t\t});\n\n\t\treturn handles;\n\t}\n\n\tprivate set selectionHandles(selectionHandles: number[]) {\n\t\tconst indexes = selectionHandles.map(handle => this._viewCells.findIndex(cell => cell.handle === handle));\n\t\tthis._selectionCollection.setSelections(cellIndexesToRanges(indexes), true, 'model');\n\t}\n\n\tprivate _decorationsTree = new DecorationsTree();\n\tprivate _decorations: { [decorationId: string]: IntervalNode; } = Object.create(null);\n\tprivate _lastDecorationId: number = 0;\n\tprivate readonly _instanceId: string;\n\tpublic readonly id: string;\n\tprivate _foldingRanges: FoldingRegions | null = null;\n\tprivate _hiddenRanges: ICellRange[] = [];\n\tprivate _focused: boolean = true;\n\n\tget focused() {\n\t\treturn this._focused;\n\t}\n\n\tprivate _decorationIdToCellMap = new Map<string, number>();\n\tprivate _statusBarItemIdToCellMap = new Map<string, number>();\n\n\tconstructor(\n\t\tpublic viewType: string,\n\t\tprivate _notebook: NotebookTextModel,\n\t\treadonly eventDispatcher: NotebookEventDispatcher,\n\t\tprivate _layoutInfo: NotebookLayoutInfo | null,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t) {\n\t\tsuper();\n\n\t\tMODEL_ID++;\n\t\tthis.id = '$notebookViewModel' + MODEL_ID;\n\t\tthis._instanceId = strings.singleLetterHash(MODEL_ID);\n\t\tthis._options = { isReadOnly: false };\n\n\t\tconst compute = (changes: NotebookCellTextModelSplice<ICell>[], synchronous: boolean) => {\n\t\t\tconst diffs = changes.map(splice => {\n\t\t\t\treturn [splice[0], splice[1], splice[2].map(cell => {\n\t\t\t\t\treturn createCellViewModel(this._instantiationService, this, cell as NotebookCellTextModel);\n\t\t\t\t})] as [number, number, CellViewModel[]];\n\t\t\t});\n\n\t\t\tdiffs.reverse().forEach(diff => {\n\t\t\t\tconst deletedCells = this._viewCells.splice(diff[0], diff[1], ...diff[2]);\n\n\t\t\t\tthis._decorationsTree.acceptReplace(diff[0], diff[1], diff[2].length, true);\n\t\t\t\tdeletedCells.forEach(cell => {\n\t\t\t\t\tthis._handleToViewCellMapping.delete(cell.handle);\n\t\t\t\t\t// dispose the cell to release ref to the cell text document\n\t\t\t\t\tcell.dispose();\n\t\t\t\t});\n\n\t\t\t\tdiff[2].forEach(cell => {\n\t\t\t\t\tthis._handleToViewCellMapping.set(cell.handle, cell);\n\t\t\t\t\tthis._localStore.add(cell);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis._onDidChangeViewCells.fire({\n\t\t\t\tsynchronous: synchronous,\n\t\t\t\tsplices: diffs\n\t\t\t});\n\n\t\t\tlet endSelectionHandles: number[] = [];\n\t\t\tif (this.selectionHandles.length) {\n\t\t\t\tconst primaryHandle = this.selectionHandles[0];\n\t\t\t\tconst primarySelectionIndex = this._viewCells.indexOf(this.getCellByHandle(primaryHandle)!);\n\t\t\t\tendSelectionHandles = [primaryHandle];\n\t\t\t\tlet delta = 0;\n\n\t\t\t\tfor (let i = 0; i < diffs.length; i++) {\n\t\t\t\t\tconst diff = diffs[0];\n\t\t\t\t\tif (diff[0] + diff[1] <= primarySelectionIndex) {\n\t\t\t\t\t\tdelta += diff[2].length - diff[1];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff[0] > primarySelectionIndex) {\n\t\t\t\t\t\tendSelectionHandles = [primaryHandle];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff[0] + diff[1] > primarySelectionIndex) {\n\t\t\t\t\t\tendSelectionHandles = [this._viewCells[diff[0] + delta].handle];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO@rebornix\n\t\t\tthis.selectionHandles = endSelectionHandles;\n\t\t};\n\n\t\tthis._register(this._notebook.onDidChangeContent(e => {\n\t\t\tfor (let i = 0; i < e.rawEvents.length; i++) {\n\t\t\t\tconst change = e.rawEvents[i];\n\t\t\t\tlet changes: NotebookCellTextModelSplice<ICell>[] = [];\n\n\t\t\t\tif (change.kind === NotebookCellsChangeType.ModelChange || change.kind === NotebookCellsChangeType.Initialize) {\n\t\t\t\t\tchanges = change.changes;\n\t\t\t\t\tcompute(changes, e.synchronous);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (change.kind === NotebookCellsChangeType.Move) {\n\t\t\t\t\tcompute([[change.index, change.length, []]], e.synchronous);\n\t\t\t\t\tcompute([[change.newIdx, 0, change.cells]], e.synchronous);\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._notebook.onDidChangeContent(contentChanges => {\n\t\t\tcontentChanges.rawEvents.forEach(e => {\n\t\t\t\tif (e.kind === NotebookCellsChangeType.ChangeDocumentMetadata) {\n\t\t\t\t\tthis.eventDispatcher.emit([new NotebookMetadataChangedEvent(this._notebook.metadata)]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contentChanges.endSelectionState) {\n\t\t\t\tthis.updateSelectionsState(contentChanges.endSelectionState);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.eventDispatcher.onDidChangeLayout((e) => {\n\t\t\tthis._layoutInfo = e.value;\n\n\t\t\tthis._viewCells.forEach(cell => {\n\t\t\t\tif (cell.cellKind === CellKind.Markdown) {\n\t\t\t\t\tif (e.source.width || e.source.fontInfo) {\n\t\t\t\t\t\tcell.layoutChange({ outerWidth: e.value.width, font: e.value.fontInfo });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (e.source.width !== undefined) {\n\t\t\t\t\t\tcell.layoutChange({ outerWidth: e.value.width, font: e.value.fontInfo });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._selectionCollection.onDidChangeSelection(e => {\n\t\t\tthis._onDidChangeSelection.fire(e);\n\t\t}));\n\n\t\tthis._viewCells = this._notebook.cells.map(cell => {\n\t\t\treturn createCellViewModel(this._instantiationService, this, cell);\n\t\t});\n\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tthis._handleToViewCellMapping.set(cell.handle, cell);\n\t\t});\n\t}\n\n\tupdateOptions(newOptions: Partial<NotebookViewModelOptions>) {\n\t\tthis._options = { ...this._options, ...newOptions };\n\t}\n\n\tgetFocus() {\n\t\treturn this._selectionCollection.focus;\n\t}\n\n\tgetSelections() {\n\t\treturn this._selectionCollection.selections;\n\t}\n\n\tsetFocus(focused: boolean) {\n\t\tthis._focused = focused;\n\t}\n\n\t/**\n\t * Empty selection will be turned to `null`\n\t */\n\tvalidateRange(cellRange: ICellRange | null | undefined): ICellRange | null {\n\t\tif (!cellRange) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst start = clamp(cellRange.start, 0, this.length);\n\t\tconst end = clamp(cellRange.end, 0, this.length);\n\n\t\tif (start === end) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (start < end) {\n\t\t\treturn { start, end };\n\t\t} else {\n\t\t\treturn { start: end, end: start };\n\t\t}\n\t}\n\n\tsetSelections(focus: ICellRange, selections: ICellRange[]) {\n\t\tthis.updateSelectionsState({ kind: SelectionStateType.Index, focus, selections }, 'model');\n\t}\n\n\t// selection change from list view's `setFocus` and `setSelection` should always use `source: view` to prevent events breaking the list view focus/selection change transaction\n\tupdateSelectionsState(state: ISelectionState, source: 'view' | 'model' = 'model') {\n\t\tif (this._focused) {\n\t\t\tif (state.kind === SelectionStateType.Handle) {\n\t\t\t\tconst primaryIndex = state.primary !== null ? this.getCellIndexByHandle(state.primary) : null;\n\t\t\t\tconst primarySelection = primaryIndex !== null ? this.validateRange({ start: primaryIndex, end: primaryIndex + 1 }) : null;\n\t\t\t\tconst selections = cellIndexesToRanges(state.selections.map(sel => this.getCellIndexByHandle(sel)))\n\t\t\t\t\t.map(range => this.validateRange(range))\n\t\t\t\t\t.filter(range => range !== null) as ICellRange[];\n\t\t\t\tthis._selectionCollection.setState(primarySelection, reduceRanges(selections), true, source);\n\t\t\t} else {\n\t\t\t\tconst primarySelection = this.validateRange(state.focus);\n\t\t\t\tconst selections = state.selections\n\t\t\t\t\t.map(range => this.validateRange(range))\n\t\t\t\t\t.filter(range => range !== null) as ICellRange[];\n\t\t\t\tthis._selectionCollection.setState(primarySelection, reduceRanges(selections), true, source);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFoldingStartIndex(index: number): number {\n\t\tif (!this._foldingRanges) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst range = this._foldingRanges.findRange(index + 1);\n\t\tconst startIndex = this._foldingRanges.getStartLineNumber(range) - 1;\n\t\treturn startIndex;\n\t}\n\n\tgetFoldingState(index: number): CellFoldingState {\n\t\tif (!this._foldingRanges) {\n\t\t\treturn CellFoldingState.None;\n\t\t}\n\n\t\tconst range = this._foldingRanges.findRange(index + 1);\n\t\tconst startIndex = this._foldingRanges.getStartLineNumber(range) - 1;\n\n\t\tif (startIndex !== index) {\n\t\t\treturn CellFoldingState.None;\n\t\t}\n\n\t\treturn this._foldingRanges.isCollapsed(range) ? CellFoldingState.Collapsed : CellFoldingState.Expanded;\n\t}\n\n\tupdateFoldingRanges(ranges: FoldingRegions) {\n\t\tthis._foldingRanges = ranges;\n\t\tlet updateHiddenAreas = false;\n\t\tconst newHiddenAreas: ICellRange[] = [];\n\n\t\tlet i = 0; // index into hidden\n\t\tlet k = 0;\n\n\t\tlet lastCollapsedStart = Number.MAX_VALUE;\n\t\tlet lastCollapsedEnd = -1;\n\n\t\tfor (; i < ranges.length; i++) {\n\t\t\tif (!ranges.isCollapsed(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n\t\t\tconst endLineNumber = ranges.getEndLineNumber(i);\n\t\t\tif (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n\t\t\t\t// ignore ranges contained in collapsed regions\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].start + 1 === startLineNumber && (this._hiddenRanges[k].end + 1) === endLineNumber) {\n\t\t\t\t// reuse the old ranges\n\t\t\t\tnewHiddenAreas.push(this._hiddenRanges[k]);\n\t\t\t\tk++;\n\t\t\t} else {\n\t\t\t\tupdateHiddenAreas = true;\n\t\t\t\tnewHiddenAreas.push({ start: startLineNumber - 1, end: endLineNumber - 1 });\n\t\t\t}\n\t\t\tlastCollapsedStart = startLineNumber;\n\t\t\tlastCollapsedEnd = endLineNumber;\n\t\t}\n\n\t\tif (updateHiddenAreas || k < this._hiddenRanges.length) {\n\t\t\tthis._hiddenRanges = newHiddenAreas;\n\t\t}\n\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tif (cell.cellKind === CellKind.Markdown) {\n\t\t\t\tcell.triggerfoldingStateChange();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetHiddenRanges() {\n\t\treturn this._hiddenRanges;\n\t}\n\n\tgetCellByHandle(handle: number) {\n\t\treturn this._handleToViewCellMapping.get(handle);\n\t}\n\n\tgetCellIndexByHandle(handle: number): number {\n\t\treturn this._viewCells.findIndex(cell => cell.handle === handle);\n\t}\n\n\tgetCellIndex(cell: ICellViewModel) {\n\t\treturn this._viewCells.indexOf(cell as CellViewModel);\n\t}\n\n\tcellAt(index: number): CellViewModel | undefined {\n\t\t// if (index < 0 || index >= this.length) {\n\t\t// \tthrow new Error(`Invalid index ${index}`);\n\t\t// }\n\n\t\treturn this._viewCells[index];\n\t}\n\n\tgetCells(range?: ICellRange): ReadonlyArray<ICellViewModel> {\n\t\tif (!range) {\n\t\t\treturn this._viewCells.slice(0);\n\t\t}\n\n\t\tconst validatedRange = this.validateRange(range);\n\n\t\tif (validatedRange) {\n\t\t\tconst result: ICellViewModel[] = [];\n\n\t\t\tfor (let i = validatedRange.start; i < validatedRange.end; i++) {\n\t\t\t\tresult.push(this._viewCells[i]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * If this._viewCells[index] is visible then return index\n\t */\n\tgetNearestVisibleCellIndexUpwards(index: number) {\n\t\tfor (let i = this._hiddenRanges.length - 1; i >= 0; i--) {\n\t\t\tconst cellRange = this._hiddenRanges[i];\n\t\t\tconst foldStart = cellRange.start - 1;\n\t\t\tconst foldEnd = cellRange.end;\n\n\t\t\tif (foldStart > index) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (foldStart <= index && foldEnd >= index) {\n\t\t\t\treturn index;\n\t\t\t}\n\n\t\t\t// foldStart <= index, foldEnd < index\n\t\t\tbreak;\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tgetNextVisibleCellIndex(index: number) {\n\t\tfor (let i = 0; i < this._hiddenRanges.length; i++) {\n\t\t\tconst cellRange = this._hiddenRanges[i];\n\t\t\tconst foldStart = cellRange.start - 1;\n\t\t\tconst foldEnd = cellRange.end;\n\n\t\t\tif (foldEnd < index) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// foldEnd >= index\n\t\t\tif (foldStart <= index) {\n\t\t\t\treturn foldEnd + 1;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\treturn index + 1;\n\t}\n\n\thasCell(handle: number) {\n\t\treturn this._handleToViewCellMapping.has(handle);\n\t}\n\n\tgetVersionId() {\n\t\treturn this._notebook.versionId;\n\t}\n\n\tgetAlternativeId() {\n\t\treturn this._notebook.alternativeVersionId;\n\t}\n\n\tgetTrackedRange(id: string): ICellRange | null {\n\t\treturn this._getDecorationRange(id);\n\t}\n\n\tprivate _getDecorationRange(decorationId: string): ICellRange | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\tconst versionId = this.getVersionId();\n\t\tif (node.cachedVersionId !== versionId) {\n\t\t\tthis._decorationsTree.resolveNode(node, versionId);\n\t\t}\n\t\tif (node.range === null) {\n\t\t\treturn { start: node.cachedAbsoluteStart - 1, end: node.cachedAbsoluteEnd - 1 };\n\t\t}\n\n\t\treturn { start: node.range.startLineNumber - 1, end: node.range.endLineNumber - 1 };\n\t}\n\n\tsetTrackedRange(id: string | null, newRange: ICellRange | null, newStickiness: TrackedRangeStickiness): string | null {\n\t\tconst node = (id ? this._decorations[id] : null);\n\n\t\tif (!node) {\n\t\t\tif (!newRange) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this._deltaCellDecorationsImpl(0, [], [{ range: new Range(newRange.start + 1, 1, newRange.end + 1, 1), options: TRACKED_RANGE_OPTIONS[newStickiness] }])[0];\n\t\t}\n\n\t\tif (!newRange) {\n\t\t\t// node exists, the request is to delete => delete node\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), newRange.start, newRange.end + 1, new Range(newRange.start + 1, 1, newRange.end + 1, 1));\n\t\tnode.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n\t\tthis._decorationsTree.insert(node);\n\t\treturn node.id;\n\t}\n\n\tprivate _deltaCellDecorationsImpl(ownerId: number, oldDecorationsIds: string[], newDecorations: IModelDeltaDecoration[]): string[] {\n\t\tconst versionId = this.getVersionId();\n\n\t\tconst oldDecorationsLen = oldDecorationsIds.length;\n\t\tlet oldDecorationIndex = 0;\n\n\t\tconst newDecorationsLen = newDecorations.length;\n\t\tlet newDecorationIndex = 0;\n\n\t\tconst result = new Array<string>(newDecorationsLen);\n\t\twhile (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n\n\t\t\tlet node: IntervalNode | null = null;\n\n\t\t\tif (oldDecorationIndex < oldDecorationsLen) {\n\t\t\t\t// (1) get ourselves an old node\n\t\t\t\tdo {\n\t\t\t\t\tnode = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n\t\t\t\t} while (!node && oldDecorationIndex < oldDecorationsLen);\n\n\t\t\t\t// (2) remove the node from the tree (if it exists)\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._decorationsTree.delete(node);\n\t\t\t\t\t// this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newDecorationIndex < newDecorationsLen) {\n\t\t\t\t// (3) create a new node if necessary\n\t\t\t\tif (!node) {\n\t\t\t\t\tconst internalDecorationId = (++this._lastDecorationId);\n\t\t\t\t\tconst decorationId = `${this._instanceId};${internalDecorationId}`;\n\t\t\t\t\tnode = new IntervalNode(decorationId, 0, 0);\n\t\t\t\t\tthis._decorations[decorationId] = node;\n\t\t\t\t}\n\n\t\t\t\t// (4) initialize node\n\t\t\t\tconst newDecoration = newDecorations[newDecorationIndex];\n\t\t\t\t// const range = this._validateRangeRelaxedNoAllocations(newDecoration.range);\n\t\t\t\tconst range = newDecoration.range;\n\t\t\t\tconst options = _normalizeOptions(newDecoration.options);\n\t\t\t\t// const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\t\t\t// const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t\t\tnode.ownerId = ownerId;\n\t\t\t\tnode.reset(versionId, range.startLineNumber, range.endLineNumber, Range.lift(range));\n\t\t\t\tnode.setOptions(options);\n\t\t\t\t// this._onDidChangeDecorations.checkAffectedAndFire(options);\n\n\t\t\t\tthis._decorationsTree.insert(node);\n\n\t\t\t\tresult[newDecorationIndex] = node.id;\n\n\t\t\t\tnewDecorationIndex++;\n\t\t\t} else {\n\t\t\t\tif (node) {\n\t\t\t\t\tdelete this._decorations[node.id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdeltaCellDecorations(oldDecorations: string[], newDecorations: INotebookDeltaDecoration[]): string[] {\n\t\toldDecorations.forEach(id => {\n\t\t\tconst handle = this._decorationIdToCellMap.get(id);\n\n\t\t\tif (handle !== undefined) {\n\t\t\t\tconst cell = this.getCellByHandle(handle);\n\t\t\t\tcell?.deltaCellDecorations([id], []);\n\t\t\t}\n\t\t});\n\n\t\tconst result: string[] = [];\n\n\t\tnewDecorations.forEach(decoration => {\n\t\t\tconst cell = this.getCellByHandle(decoration.handle);\n\t\t\tconst ret = cell?.deltaCellDecorations([], [decoration.options]) || [];\n\t\t\tret.forEach(id => {\n\t\t\t\tthis._decorationIdToCellMap.set(id, decoration.handle);\n\t\t\t});\n\n\t\t\tresult.push(...ret);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tdeltaCellStatusBarItems(oldItems: string[], newItems: INotebookDeltaCellStatusBarItems[]): string[] {\n\t\tconst deletesByHandle = groupByNumber(oldItems, id => this._statusBarItemIdToCellMap.get(id) ?? -1);\n\n\t\tconst result: string[] = [];\n\t\tnewItems.forEach(itemDelta => {\n\t\t\tconst cell = this.getCellByHandle(itemDelta.handle);\n\t\t\tconst deleted = deletesByHandle.get(itemDelta.handle) ?? [];\n\t\t\tdeletesByHandle.delete(itemDelta.handle);\n\t\t\tconst ret = cell?.deltaCellStatusBarItems(deleted, itemDelta.items) || [];\n\t\t\tret.forEach(id => {\n\t\t\t\tthis._statusBarItemIdToCellMap.set(id, itemDelta.handle);\n\t\t\t});\n\n\t\t\tresult.push(...ret);\n\t\t});\n\n\t\tdeletesByHandle.forEach((ids, handle) => {\n\t\t\tconst cell = this.getCellByHandle(handle);\n\t\t\tcell?.deltaCellStatusBarItems(ids, []);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tnearestCodeCellIndex(index: number /* exclusive */) {\n\t\tconst nearest = this.viewCells.slice(0, index).reverse().findIndex(cell => cell.cellKind === CellKind.Code);\n\t\tif (nearest > -1) {\n\t\t\treturn index - nearest - 1;\n\t\t} else {\n\t\t\tconst nearestCellTheOtherDirection = this.viewCells.slice(index + 1).findIndex(cell => cell.cellKind === CellKind.Code);\n\t\t\tif (nearestCellTheOtherDirection > -1) {\n\t\t\t\treturn index + 1 + nearestCellTheOtherDirection;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tcreateCell(index: number, source: string, language: string, type: CellKind, metadata: NotebookCellMetadata | undefined, outputs: IOutputDto[], synchronous: boolean, pushUndoStop: boolean = true, previouslyPrimary: number | null = null, previouslyFocused: ICellViewModel[] = []): CellViewModel {\n\t\tconst beforeSelections = previouslyFocused.map(e => e.handle);\n\t\tconst endSelections: ISelectionState = { kind: SelectionStateType.Index, focus: { start: index, end: index + 1 }, selections: [{ start: index, end: index + 1 }] };\n\t\tthis._notebook.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcellKind: type,\n\t\t\t\t\t\tlanguage: language,\n\t\t\t\t\t\toutputs: outputs,\n\t\t\t\t\t\tmetadata: metadata,\n\t\t\t\t\t\tsource: source\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t], synchronous, { kind: SelectionStateType.Handle, primary: previouslyPrimary, selections: beforeSelections }, () => endSelections, undefined);\n\t\treturn this._viewCells[index];\n\t}\n\n\tdeleteCell(index: number, synchronous: boolean, pushUndoStop: boolean = true) {\n\t\tconst focusSelectionIndex = this.getFocus()?.start ?? null;\n\t\tlet endPrimarySelection: number | null = null;\n\n\t\tif (index === focusSelectionIndex) {\n\t\t\tif (focusSelectionIndex < this.length - 1) {\n\t\t\t\tendPrimarySelection = this._viewCells[focusSelectionIndex + 1].handle;\n\t\t\t} else if (focusSelectionIndex === this.length - 1 && this.length > 1) {\n\t\t\t\tendPrimarySelection = this._viewCells[focusSelectionIndex - 1].handle;\n\t\t\t}\n\t\t}\n\n\t\tlet endSelections: number[] = this.selectionHandles.filter(handle => handle !== endPrimarySelection && handle !== this._viewCells[index]?.handle);\n\n\t\tthis._notebook.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: index,\n\t\t\t\tcount: 1,\n\t\t\t\tcells: []\n\t\t\t}],\n\t\t\tsynchronous,\n\t\t\t{ kind: SelectionStateType.Index, focus: this.getFocus(), selections: this.getSelections() },\n\t\t\t() => ({ kind: SelectionStateType.Handle, primary: endPrimarySelection, selections: endSelections }),\n\t\t\tundefined,\n\t\t\tpushUndoStop\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param index\n\t * @param length\n\t * @param newIdx in an index scheme for the state of the tree after the current cell has been \"removed\"\n\t * @param synchronous\n\t * @param pushedToUndoStack\n\t */\n\tmoveCellToIdx(index: number, length: number, newIdx: number, synchronous: boolean, pushedToUndoStack: boolean = true): boolean {\n\t\tconst viewCell = this.viewCells[index] as CellViewModel;\n\t\tif (!viewCell) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._notebook.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Move,\n\t\t\t\tindex,\n\t\t\t\tlength,\n\t\t\t\tnewIdx\n\t\t\t}\n\t\t], synchronous, { kind: SelectionStateType.Index, focus: this.getFocus(), selections: this.getSelections() }, () => ({ kind: SelectionStateType.Index, focus: { start: newIdx, end: newIdx + 1 }, selections: [{ start: newIdx, end: newIdx + 1 }] }), undefined);\n\t\treturn true;\n\t}\n\n\tprivate _pushIfAbsent(positions: IPosition[], p: IPosition) {\n\t\tconst last = positions.length > 0 ? positions[positions.length - 1] : undefined;\n\t\tif (!last || last.lineNumber !== p.lineNumber || last.column !== p.column) {\n\t\t\tpositions.push(p);\n\t\t}\n\t}\n\n\t/**\n\t * Add split point at the beginning and the end;\n\t * Move end of line split points to the beginning of the next line;\n\t * Avoid duplicate split points\n\t */\n\tprivate _splitPointsToBoundaries(splitPoints: IPosition[], textBuffer: IReadonlyTextBuffer): IPosition[] | null {\n\t\tconst boundaries: IPosition[] = [];\n\t\tconst lineCnt = textBuffer.getLineCount();\n\t\tconst getLineLen = (lineNumber: number) => {\n\t\t\treturn textBuffer.getLineLength(lineNumber);\n\t\t};\n\n\t\t// split points need to be sorted\n\t\tsplitPoints = splitPoints.sort((l, r) => {\n\t\t\tconst lineDiff = l.lineNumber - r.lineNumber;\n\t\t\tconst columnDiff = l.column - r.column;\n\t\t\treturn lineDiff !== 0 ? lineDiff : columnDiff;\n\t\t});\n\n\t\tfor (let sp of splitPoints) {\n\t\t\tif (getLineLen(sp.lineNumber) + 1 === sp.column && sp.column !== 1 /** empty line */ && sp.lineNumber < lineCnt) {\n\t\t\t\tsp = new Position(sp.lineNumber + 1, 1);\n\t\t\t}\n\t\t\tthis._pushIfAbsent(boundaries, sp);\n\t\t}\n\n\t\tif (boundaries.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// boundaries already sorted and not empty\n\t\tconst modelStart = new Position(1, 1);\n\t\tconst modelEnd = new Position(lineCnt, getLineLen(lineCnt) + 1);\n\t\treturn [modelStart, ...boundaries, modelEnd];\n\t}\n\n\tcomputeCellLinesContents(cell: ICellViewModel, splitPoints: IPosition[]): string[] | null {\n\t\tconst rangeBoundaries = this._splitPointsToBoundaries(splitPoints, cell.textBuffer);\n\t\tif (!rangeBoundaries) {\n\t\t\treturn null;\n\t\t}\n\t\tconst newLineModels: string[] = [];\n\t\tfor (let i = 1; i < rangeBoundaries.length; i++) {\n\t\t\tconst start = rangeBoundaries[i - 1];\n\t\t\tconst end = rangeBoundaries[i];\n\n\t\t\tnewLineModels.push(cell.textBuffer.getValueInRange(new Range(start.lineNumber, start.column, end.lineNumber, end.column), EndOfLinePreference.TextDefined));\n\t\t}\n\n\t\treturn newLineModels;\n\t}\n\n\tasync splitNotebookCell(index: number): Promise<CellViewModel[] | null> {\n\t\tconst cell = this.viewCells[index] as CellViewModel;\n\n\t\tif (this._options.isReadOnly) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst splitPoints = cell.focusMode === CellFocusMode.Container ? [{ lineNumber: 1, column: 1 }] : cell.getSelectionsStartPosition();\n\n\t\tif (splitPoints && splitPoints.length > 0) {\n\t\t\tawait cell.resolveTextModel();\n\n\t\t\tif (!cell.hasModel()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst newLinesContents = this.computeCellLinesContents(cell, splitPoints);\n\t\t\tif (newLinesContents) {\n\t\t\t\tconst language = cell.language;\n\t\t\t\tconst kind = cell.cellKind;\n\n\t\t\t\tconst textModel = await cell.resolveTextModel();\n\t\t\t\tawait this._bulkEditService.apply(\n\t\t\t\t\t[\n\t\t\t\t\t\tnew ResourceTextEdit(cell.uri, { range: textModel.getFullModelRange(), text: newLinesContents[0] }),\n\t\t\t\t\t\tnew ResourceNotebookCellEdit(this._notebook.uri,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\t\tcells: newLinesContents.slice(1).map(line => ({\n\t\t\t\t\t\t\t\t\tcellKind: kind,\n\t\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\t\tsource: line,\n\t\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\t\tmetadata: {}\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t],\n\t\t\t\t\t{ quotableLabel: 'Split Notebook Cell' }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetEditorViewState(): INotebookEditorViewState {\n\t\tconst editingCells: { [key: number]: boolean } = {};\n\t\tthis._viewCells.forEach((cell, i) => {\n\t\t\tif (cell.getEditState() === CellEditState.Editing) {\n\t\t\t\teditingCells[i] = true;\n\t\t\t}\n\t\t});\n\t\tconst editorViewStates: { [key: number]: editorCommon.ICodeEditorViewState } = {};\n\t\tthis._viewCells.map(cell => ({ handle: cell.model.handle, state: cell.saveEditorViewState() })).forEach((viewState, i) => {\n\t\t\tif (viewState.state) {\n\t\t\t\teditorViewStates[i] = viewState.state;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\teditingCells,\n\t\t\teditorViewStates,\n\t\t};\n\t}\n\n\trestoreEditorViewState(viewState: INotebookEditorViewState | undefined): void {\n\t\tif (!viewState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewCells.forEach((cell, index) => {\n\t\t\tconst isEditing = viewState.editingCells && viewState.editingCells[index];\n\t\t\tconst editorViewState = viewState.editorViewStates && viewState.editorViewStates[index];\n\n\t\t\tcell.updateEditState(isEditing ? CellEditState.Editing : CellEditState.Preview, 'viewState');\n\t\t\tconst cellHeight = viewState.cellTotalHeights ? viewState.cellTotalHeights[index] : undefined;\n\t\t\tcell.restoreEditorViewState(editorViewState, cellHeight);\n\t\t});\n\t}\n\n\t/**\n\t * Editor decorations across cells. For example, find decorations for multiple code cells\n\t * The reason that we can't completely delegate this to CodeEditorWidget is most of the time, the editors for cells are not created yet but we already have decorations for them.\n\t */\n\tchangeModelDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T): T | null {\n\t\tconst changeAccessor: IModelDecorationsChangeAccessor = {\n\t\t\tdeltaDecorations: (oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]): ICellModelDecorations[] => {\n\t\t\t\treturn this._deltaModelDecorationsImpl(oldDecorations, newDecorations);\n\t\t\t}\n\t\t};\n\n\t\tlet result: T | null = null;\n\t\ttry {\n\t\t\tresult = callback(changeAccessor);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\n\t\tchangeAccessor.deltaDecorations = invalidFunc;\n\n\t\treturn result;\n\t}\n\n\tprivate _deltaModelDecorationsImpl(oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]): ICellModelDecorations[] {\n\n\t\tconst mapping = new Map<number, { cell: CellViewModel; oldDecorations: string[]; newDecorations: IModelDeltaDecoration[] }>();\n\t\toldDecorations.forEach(oldDecoration => {\n\t\t\tconst ownerId = oldDecoration.ownerId;\n\n\t\t\tif (!mapping.has(ownerId)) {\n\t\t\t\tconst cell = this._viewCells.find(cell => cell.handle === ownerId);\n\t\t\t\tif (cell) {\n\t\t\t\t\tmapping.set(ownerId, { cell: cell, oldDecorations: [], newDecorations: [] });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst data = mapping.get(ownerId)!;\n\t\t\tif (data) {\n\t\t\t\tdata.oldDecorations = oldDecoration.decorations;\n\t\t\t}\n\t\t});\n\n\t\tnewDecorations.forEach(newDecoration => {\n\t\t\tconst ownerId = newDecoration.ownerId;\n\n\t\t\tif (!mapping.has(ownerId)) {\n\t\t\t\tconst cell = this._viewCells.find(cell => cell.handle === ownerId);\n\n\t\t\t\tif (cell) {\n\t\t\t\t\tmapping.set(ownerId, { cell: cell, oldDecorations: [], newDecorations: [] });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst data = mapping.get(ownerId)!;\n\t\t\tif (data) {\n\t\t\t\tdata.newDecorations = newDecoration.decorations;\n\t\t\t}\n\t\t});\n\n\t\tconst ret: ICellModelDecorations[] = [];\n\t\tmapping.forEach((value, ownerId) => {\n\t\t\tconst cellRet = value.cell.deltaModelDecorations(value.oldDecorations, value.newDecorations);\n\t\t\tret.push({\n\t\t\t\townerId: ownerId,\n\t\t\t\tdecorations: cellRet\n\t\t\t});\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\n\t/**\n\t * Search in notebook text model\n\t * @param value\n\t */\n\tfind(value: string, options: INotebookSearchOptions): CellFindMatch[] {\n\t\tconst matches: CellFindMatch[] = [];\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tconst cellMatches = cell.startFind(value, options);\n\t\t\tif (cellMatches) {\n\t\t\t\tmatches.push(cellMatches);\n\t\t\t}\n\t\t});\n\n\t\treturn matches;\n\t}\n\n\treplaceOne(cell: ICellViewModel, range: Range, text: string): Promise<void> {\n\t\tconst viewCell = cell as CellViewModel;\n\t\tthis._lastNotebookEditResource.push(viewCell.uri);\n\t\treturn viewCell.resolveTextModel().then(() => {\n\t\t\tthis._bulkEditService.apply(\n\t\t\t\t[new ResourceTextEdit(cell.uri, { range, text })],\n\t\t\t\t{ quotableLabel: 'Notebook Replace' }\n\t\t\t);\n\t\t});\n\t}\n\n\tasync replaceAll(matches: CellFindMatch[], text: string): Promise<void> {\n\t\tif (!matches.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst textEdits: WorkspaceTextEdit[] = [];\n\t\tthis._lastNotebookEditResource.push(matches[0].cell.uri);\n\n\t\tmatches.forEach(match => {\n\t\t\tmatch.matches.forEach(singleMatch => {\n\t\t\t\ttextEdits.push({\n\t\t\t\t\tedit: { range: singleMatch.range, text: text },\n\t\t\t\t\tresource: match.cell.uri\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(matches.map(match => {\n\t\t\treturn match.cell.resolveTextModel();\n\t\t})).then(async () => {\n\t\t\tthis._bulkEditService.apply(ResourceEdit.convert({ edits: textEdits }), { quotableLabel: 'Notebook Replace All' });\n\t\t\treturn;\n\t\t});\n\t}\n\n\tasync withElement(element: SingleModelEditStackElement | MultiModelEditStackElement, callback: () => Promise<void>) {\n\t\tconst viewCells = this._viewCells.filter(cell => element.matchesResource(cell.uri));\n\t\tconst refs = await Promise.all(viewCells.map(cell => this._textModelService.createModelReference(cell.uri)));\n\t\tawait callback();\n\t\trefs.forEach(ref => ref.dispose());\n\t}\n\n\tasync undo() {\n\t\tif (this._options.isReadOnly) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editStack = this._undoService.getElements(this.uri);\n\t\tconst element = editStack.past.length ? editStack.past[editStack.past.length - 1] : undefined;\n\n\t\tif (element && element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement) {\n\t\t\tawait this.withElement(element, async () => {\n\t\t\t\tawait this._undoService.undo(this.uri);\n\t\t\t});\n\n\t\t\treturn (element instanceof SingleModelEditStackElement) ? [element.resource] : element.resources;\n\t\t}\n\n\t\tawait this._undoService.undo(this.uri);\n\t\treturn [];\n\t}\n\n\tasync redo() {\n\t\tif (this._options.isReadOnly) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editStack = this._undoService.getElements(this.uri);\n\t\tconst element = editStack.future[0];\n\n\t\tif (element && element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement) {\n\t\t\tawait this.withElement(element, async () => {\n\t\t\t\tawait this._undoService.redo(this.uri);\n\t\t\t});\n\n\t\t\treturn (element instanceof SingleModelEditStackElement) ? [element.resource] : element.resources;\n\t\t}\n\n\t\tawait this._undoService.redo(this.uri);\n\n\t\treturn [];\n\t}\n\n\tequal(notebook: NotebookTextModel) {\n\t\treturn this._notebook === notebook;\n\t}\n\n\toverride dispose() {\n\t\tthis._localStore.clear();\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tcell.dispose();\n\t\t});\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport type CellViewModel = CodeCellViewModel | MarkdownCellViewModel;\n\nexport function createCellViewModel(instantiationService: IInstantiationService, notebookViewModel: NotebookViewModel, cell: NotebookCellTextModel) {\n\tif (cell.cellKind === CellKind.Code) {\n\t\treturn instantiationService.createInstance(CodeCellViewModel, notebookViewModel.viewType, cell, notebookViewModel.layoutInfo, notebookViewModel.eventDispatcher);\n\t} else {\n\t\tconst mdRenderer = instantiationService.createInstance(MarkdownRenderer, { baseUrl: dirname(notebookViewModel.uri) });\n\t\treturn instantiationService.createInstance(MarkdownCellViewModel, notebookViewModel.viewType, cell, notebookViewModel.layoutInfo, notebookViewModel, notebookViewModel.eventDispatcher, mdRenderer);\n\t}\n}\n"]}