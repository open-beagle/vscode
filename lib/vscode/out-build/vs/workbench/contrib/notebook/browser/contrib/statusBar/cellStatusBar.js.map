{"version":3,"file":"cellStatusBar.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/contrib/statusBar/cellStatusBar.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\nimport { Throttler } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Disposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { ICellViewModel, INotebookEditor, INotebookEditorContribution } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { registerNotebookContribution } from 'vs/workbench/contrib/notebook/browser/notebookEditorExtensions';\nimport { CellViewModel, NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModel';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { INotebookCellStatusBarItemList } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { cellRangesToIndexes } from 'vs/workbench/contrib/notebook/common/notebookRange';\n\nexport class NotebookStatusBarController extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.statusBar';\n\n\tprivate readonly _visibleCells = new Map<number, CellStatusBarHelper>();\n\n\tprivate readonly _viewModelDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookCellStatusBarService private readonly _notebookCellStatusBarService: INotebookCellStatusBarService\n\t) {\n\t\tsuper();\n\t\tthis._updateVisibleCells();\n\t\tthis._register(this._notebookEditor.onDidChangeVisibleRanges(this._updateVisibleCells, this));\n\t\tthis._register(this._notebookEditor.onDidChangeModel(this._onModelChange, this));\n\t\tthis._register(this._notebookCellStatusBarService.onDidChangeProviders(this._updateEverything, this));\n\t\tthis._register(this._notebookCellStatusBarService.onDidChangeItems(this._updateEverything, this));\n\t}\n\n\tprivate _onModelChange() {\n\t\tthis._viewModelDisposables.clear();\n\t\tconst vm = this._notebookEditor.viewModel;\n\t\tif (!vm) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewModelDisposables.add(vm.onDidChangeViewCells(() => this._updateEverything()));\n\t\tthis._updateEverything();\n\t}\n\n\tprivate _updateEverything(): void {\n\t\tthis._visibleCells.forEach(cell => cell.dispose());\n\t\tthis._visibleCells.clear();\n\t\tthis._updateVisibleCells();\n\t}\n\n\tprivate _updateVisibleCells(): void {\n\t\tconst vm = this._notebookEditor.viewModel;\n\t\tif (!vm) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newVisibleCells = new Set<number>();\n\t\tconst rangesWithEnd = this._notebookEditor.visibleRanges\n\t\t\t.map(range => ({ start: range.start, end: range.end + 1 }));\n\t\tcellRangesToIndexes(rangesWithEnd)\n\t\t\t.map(index => vm.cellAt(index))\n\t\t\t.filter((cell: CellViewModel | undefined): cell is CellViewModel => !!cell)\n\t\t\t.map(cell => {\n\t\t\t\tif (!this._visibleCells.has(cell.handle)) {\n\t\t\t\t\tconst helper = new CellStatusBarHelper(vm, cell, this._notebookCellStatusBarService);\n\t\t\t\t\tthis._visibleCells.set(cell.handle, helper);\n\t\t\t\t}\n\t\t\t\tnewVisibleCells.add(cell.handle);\n\t\t\t});\n\n\t\tfor (let handle of this._visibleCells.keys()) {\n\t\t\tif (!newVisibleCells.has(handle)) {\n\t\t\t\tthis._visibleCells.get(handle)?.dispose();\n\t\t\t\tthis._visibleCells.delete(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis._visibleCells.forEach(cell => cell.dispose());\n\t\tthis._visibleCells.clear();\n\t}\n}\n\nclass CellStatusBarHelper extends Disposable {\n\tprivate _currentItemIds: string[] = [];\n\tprivate _currentItemLists: INotebookCellStatusBarItemList[] = [];\n\n\tprivate readonly _cancelTokenSource: CancellationTokenSource;\n\n\tprivate readonly _updateThrottler = new Throttler();\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: NotebookViewModel,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\tprivate readonly _notebookCellStatusBarService: INotebookCellStatusBarService\n\t) {\n\t\tsuper();\n\n\t\tthis._cancelTokenSource = new CancellationTokenSource();\n\t\tthis._register(toDisposable(() => this._cancelTokenSource.dispose(true)));\n\n\t\tthis._updateSoon();\n\t\tthis._register(this._cell.model.onDidChangeContent(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeLanguage(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeMetadata(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeOutputs(() => this._updateSoon()));\n\t}\n\n\tprivate _updateSoon(): void {\n\t\tthis._updateThrottler.queue(() => this._update());\n\t}\n\n\tprivate async _update() {\n\t\tconst cellIndex = this._notebookViewModel.getCellIndex(this._cell);\n\t\tconst docUri = this._notebookViewModel.notebookDocument.uri;\n\t\tconst viewType = this._notebookViewModel.notebookDocument.viewType;\n\t\tconst itemLists = await this._notebookCellStatusBarService.getStatusBarItemsForCell(docUri, cellIndex, viewType, this._cancelTokenSource.token);\n\t\tif (this._cancelTokenSource.token.isCancellationRequested) {\n\t\t\titemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = flatten(itemLists.map(itemList => itemList.items));\n\t\tconst newIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items }]);\n\n\t\tthis._currentItemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t\tthis._currentItemLists = itemLists;\n\t\tthis._currentItemIds = newIds;\n\t}\n\n\toverride  dispose() {\n\t\tsuper.dispose();\n\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items: [] }]);\n\t\tthis._currentItemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t}\n}\n\nregisterNotebookContribution(NotebookStatusBarController.id, NotebookStatusBarController);\n"]}