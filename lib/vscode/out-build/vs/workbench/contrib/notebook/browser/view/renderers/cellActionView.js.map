{"version":3,"file":"cellActionView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/view/renderers/cellActionView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport * as DOM from 'vs/base/browser/dom';\nimport { BaseActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { Action, IAction, Separator } from 'vs/base/common/actions';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { MenuEntryActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenu, IMenuActionOptions, MenuItemAction, SubmenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\nexport class VerticalSeparator extends Action {\n\tstatic readonly ID = 'vs.actions.verticalSeparator';\n\n\tconstructor(\n\t\tlabel?: string\n\t) {\n\t\tsuper(VerticalSeparator.ID, label, label ? 'verticalSeparator text' : 'verticalSeparator');\n\t\tthis.checked = false;\n\t\tthis.enabled = false;\n\t}\n}\n\nexport class VerticalSeparatorViewItem extends BaseActionViewItem {\n\toverride render(container: HTMLElement) {\n\t\tcontainer.classList.add('verticalSeparator');\n\t\t// const iconContainer = DOM.append(container, $('.verticalSeparator'));\n\t\t// DOM.addClasses(iconContainer, 'codicon', 'codicon-chrome-minimize');\n\t}\n}\n\nexport function createAndFillInActionBarActionsWithVerticalSeparators(menu: IMenu, options: IMenuActionOptions | undefined, target: IAction[] | { primary: IAction[]; secondary: IAction[]; }, alwaysFillSecondary?: boolean, isPrimaryGroup?: (group: string) => boolean): IDisposable {\n\tconst groups = menu.getActions(options);\n\t// Action bars handle alternative actions on their own so the alternative actions should be ignored\n\tfillInActions(groups, target, false, alwaysFillSecondary, isPrimaryGroup);\n\treturn asDisposable(groups);\n}\n\nfunction fillInActions(groups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>, target: IAction[] | { primary: IAction[]; secondary: IAction[]; }, useAlternativeActions: boolean, alwaysFillSecondary = false, isPrimaryGroup: (group: string) => boolean = group => group === 'navigation'): void {\n\tfor (const tuple of groups) {\n\t\tlet [group, actions] = tuple;\n\t\tif (useAlternativeActions) {\n\t\t\tactions = actions.map(a => (a instanceof MenuItemAction) && !!a.alt ? a.alt : a);\n\t\t}\n\n\t\tconst isPrimary = isPrimaryGroup(group);\n\t\tif (isPrimary) {\n\t\t\tconst to = Array.isArray(target) ? target : target.primary;\n\n\t\t\tif (to.length > 0) {\n\t\t\t\tto.push(new VerticalSeparator());\n\t\t\t}\n\n\t\t\tto.push(...actions);\n\t\t}\n\n\t\tif (!isPrimary || alwaysFillSecondary) {\n\t\t\tconst to = Array.isArray(target) ? target : target.secondary;\n\n\t\t\tif (to.length > 0) {\n\t\t\t\tto.push(new Separator());\n\t\t\t}\n\n\t\t\tto.push(...actions);\n\t\t}\n\t}\n}\n\nfunction asDisposable(groups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>): IDisposable {\n\tconst disposables = new DisposableStore();\n\tfor (const [, actions] of groups) {\n\t\tfor (const action of actions) {\n\t\t\tdisposables.add(action);\n\t\t}\n\t}\n\treturn disposables;\n}\n\n\nexport class CodiconActionViewItem extends MenuEntryActionViewItem {\n\tconstructor(\n\t\t_action: MenuItemAction,\n\t\tkeybindingService: IKeybindingService,\n\t\tnotificationService: INotificationService,\n\t) {\n\t\tsuper(_action, keybindingService, notificationService);\n\t}\n\toverride updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tDOM.reset(this.label, ...renderLabelWithIcons(this._commandAction.label ?? ''));\n\t\t}\n\t}\n}\n"]}