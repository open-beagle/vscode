{"version":3,"file":"outputRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/view/output/outputRenderer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,cAAc;QAK1B,YACC,cAAqC,EACpB,oBAA2C;YAA3C,yBAAoB,GAApB,oBAAoB,CAAuB;YAJrD,2BAAsB,GAAG,IAAI,GAAG,EAAwC,CAAC;YAMhF,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YAErB,MAAM,aAAa,GAAG,mCAAgB,CAAC,+BAA+B,EAAE,CAAC;YAEzE,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;gBACjC,IAAI;oBACH,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;oBACzF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;oBAC5C,YAAY,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAC9C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC;iBACH;gBAAC,OAAO,GAAG,EAAE;oBACb,CAAA,GAAA,0BAAiB,CAAA,CAAC,GAAG,CAAC,CAAC;iBACvB;aACD;QACF,CAAC;QAED,eAAe,CAAC,iBAAqC;YACpD,IAAI,iBAAiB,EAAE;gBACtB,OAAO,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;aAC1D;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,UAAU,CAAC,SAA+B,EAAE,SAAsB;YACjE,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAEhD,WAAW,CAAC,SAAS,GAAG,wCAAwC,CAAC;YACjE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACnC,OAAO,EAAE,IAAI,mBAA4B,EAAE,CAAC;QAC7C,CAAC;QAED,MAAM,CAAC,SAA+B,EAAE,SAAsB,EAAE,iBAAqC,EAAE,WAA4B;YAClI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE;gBACpC,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;gBAC9E,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAChD,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAE7D,MAAM,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE9C,IAAI,iBAAiB,EAAE;oBACtB,WAAW,CAAC,SAAS,GAAG,6CAA6C,iBAAiB,EAAE,CAAC;iBACzF;qBAAM;oBACN,WAAW,CAAC,SAAS,GAAG,2EAA2E,gBAAgB,EAAE,CAAC;iBACtH;gBAED,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACnC,OAAO,EAAE,IAAI,mBAA4B,EAAE,CAAC;aAC5C;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACpE,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC;YAElF,IAAI,KAAK,CAAC,MAAM,IAAI,QAAQ,EAAE;gBAC7B,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;aACjE;iBAAM;gBACN,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7C;QACF,CAAC;KACD;IAzED,wCAyEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { NotebookRegistry } from 'vs/workbench/contrib/notebook/browser/notebookRegistry';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ICellOutputViewModel, ICommonNotebookEditor, IOutputTransformContribution, IRenderOutput, RenderOutputType } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { URI } from 'vs/base/common/uri';\n\nexport class OutputRenderer {\n\tprotected readonly _contributions: { [key: string]: IOutputTransformContribution; };\n\tprotected readonly _renderers: IOutputTransformContribution[];\n\tprivate _richMimeTypeRenderers = new Map<string, IOutputTransformContribution>();\n\n\tconstructor(\n\t\tnotebookEditor: ICommonNotebookEditor,\n\t\tprivate readonly instantiationService: IInstantiationService\n\t) {\n\t\tthis._contributions = {};\n\t\tthis._renderers = [];\n\n\t\tconst contributions = NotebookRegistry.getOutputTransformContributions();\n\n\t\tfor (const desc of contributions) {\n\t\t\ttry {\n\t\t\t\tconst contribution = this.instantiationService.createInstance(desc.ctor, notebookEditor);\n\t\t\t\tthis._contributions[desc.id] = contribution;\n\t\t\t\tcontribution.getMimetypes().forEach(mimetype => {\n\t\t\t\t\tthis._richMimeTypeRenderers.set(mimetype, contribution);\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetContribution(preferredMimeType: string | undefined): IOutputTransformContribution | undefined {\n\t\tif (preferredMimeType) {\n\t\t\treturn this._richMimeTypeRenderers.get(preferredMimeType);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\trenderNoop(viewModel: ICellOutputViewModel, container: HTMLElement): IRenderOutput {\n\t\tconst contentNode = document.createElement('p');\n\n\t\tcontentNode.innerText = `No renderer could be found for output.`;\n\t\tcontainer.appendChild(contentNode);\n\t\treturn { type: RenderOutputType.Mainframe };\n\t}\n\n\trender(viewModel: ICellOutputViewModel, container: HTMLElement, preferredMimeType: string | undefined, notebookUri: URI | undefined): IRenderOutput {\n\t\tif (!viewModel.model.outputs.length) {\n\t\t\treturn this.renderNoop(viewModel, container);\n\t\t}\n\n\t\tif (!preferredMimeType || !this._richMimeTypeRenderers.has(preferredMimeType)) {\n\t\t\tconst contentNode = document.createElement('p');\n\t\t\tconst mimeTypes = viewModel.model.outputs.map(op => op.mime);\n\n\t\t\tconst mimeTypesMessage = mimeTypes.join(', ');\n\n\t\t\tif (preferredMimeType) {\n\t\t\t\tcontentNode.innerText = `No renderer could be found for MIME type: ${preferredMimeType}`;\n\t\t\t} else {\n\t\t\t\tcontentNode.innerText = `No renderer could be found for output. It has the following MIME types: ${mimeTypesMessage}`;\n\t\t\t}\n\n\t\t\tcontainer.appendChild(contentNode);\n\t\t\treturn { type: RenderOutputType.Mainframe };\n\t\t}\n\n\t\tconst renderer = this._richMimeTypeRenderers.get(preferredMimeType);\n\t\tconst items = viewModel.model.outputs.filter(op => op.mime === preferredMimeType);\n\n\t\tif (items.length && renderer) {\n\t\t\treturn renderer.render(viewModel, items, container, notebookUri);\n\t\t} else {\n\t\t\treturn this.renderNoop(viewModel, container);\n\t\t}\n\t}\n}\n"]}