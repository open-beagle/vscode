{"version":3,"file":"notebookRegistry.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/notebookRegistry.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAanF,QAAA,gBAAgB,GAAG,IAAI,MAAM,oBAAoB;QAA1B;YAE1B,qBAAgB,GAAkC,EAAE,CAAC;QAS/D,CAAC;QAPA,uBAAuB,CAAoC,EAAU,EAAE,IAAiG;YACvK,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAA4B,EAAE,CAAC,CAAC;QAC5E,CAAC;QAED,+BAA+B;YAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC;KACD,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrandedService, IConstructorSignature1 } from 'vs/platform/instantiation/common/instantiation';\nimport { ICommonNotebookEditor, IOutputTransformContribution } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\n\nexport type IOutputTransformCtor = IConstructorSignature1<ICommonNotebookEditor, IOutputTransformContribution>;\n\nexport interface IOutputTransformDescription {\n\tid: string;\n\tctor: IOutputTransformCtor;\n}\n\n\nexport const NotebookRegistry = new class NotebookRegistryImpl {\n\n\treadonly outputTransforms: IOutputTransformDescription[] = [];\n\n\tregisterOutputTransform<Services extends BrandedService[]>(id: string, ctor: { new(editor: ICommonNotebookEditor, ...services: Services): IOutputTransformContribution }): void {\n\t\tthis.outputTransforms.push({ id: id, ctor: ctor as IOutputTransformCtor });\n\t}\n\n\tgetOutputTransformContributions(): IOutputTransformDescription[] {\n\t\treturn this.outputTransforms.slice(0);\n\t}\n};\n"]}