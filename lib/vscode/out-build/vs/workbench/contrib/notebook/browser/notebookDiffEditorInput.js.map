{"version":3,"file":"notebookDiffEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/notebookDiffEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkBhG,MAAM,uBAAwB,SAAQ,oBAAW;QAChD,YACU,QAAsC,EACtC,QAAsC;YAE/C,KAAK,EAAE,CAAC;YAHC,aAAQ,GAAR,QAAQ,CAA8B;YACtC,aAAQ,GAAR,QAAQ,CAA8B;QAGhD,CAAC;QAED,KAAK,CAAC,IAAI;YACT,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC3B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAE3B,OAAO,IAAI,CAAC;QACb,CAAC;QAED,KAAK,CAAC,uBAAuB;YAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;QACvD,CAAC;QAED,KAAK,CAAC,uBAAuB;YAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;QACvD,CAAC;QAEQ,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IAED,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,oBAAW;QAWvD,YACiB,QAAa,EACb,IAAY,EACZ,gBAAqB,EACrB,YAAoB,EACpB,YAAoB,EACpB,QAA4B,EAC5B,OAAmC,EAChB,gBAAkC,EACf,6BAAkE,EACnF,kBAAsC;YAE3E,KAAK,EAAE,CAAC;YAXQ,aAAQ,GAAR,QAAQ,CAAK;YACb,SAAI,GAAJ,IAAI,CAAQ;YACZ,qBAAgB,GAAhB,gBAAgB,CAAK;YACrB,iBAAY,GAAZ,YAAY,CAAQ;YACpB,iBAAY,GAAZ,YAAY,CAAQ;YACpB,aAAQ,GAAR,QAAQ,CAAoB;YAC5B,YAAO,GAAP,OAAO,CAA4B;YAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;YACf,kCAA6B,GAA7B,6BAA6B,CAAqC;YACnF,uBAAkB,GAAlB,kBAAkB,CAAoB;YAdpE,uBAAkB,GAAoD,IAAI,CAAC;YAC3E,uBAAkB,GAAoD,IAAI,CAAC;YAC3E,uBAAkB,GAAY,KAAK,CAAC;YAe3C,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;QAChD,CAAC;QAxBD,MAAM,CAAC,MAAM,CAAC,oBAA2C,EAAE,QAAa,EAAE,IAAY,EAAE,gBAAqB,EAAE,YAAoB,EAAE,YAAoB,EAAE,QAA4B,EAAE,UAAsC,EAAE;YAChO,OAAO,oBAAoB,CAAC,cAAc,CAAC,uBAAuB,EAAE,QAAQ,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QACtJ,CAAC;QAwBD,IAAa,MAAM;YAClB,OAAO,uBAAuB,CAAC,EAAE,CAAC;QACnC,CAAC;QAEQ,OAAO;YACf,OAAO,IAAI,CAAC,YAAY,CAAC;QAC1B,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAC/B;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACjD,CAAC;QAEQ,UAAU;;YAClB,OAAO,CAAA,MAAA,IAAI,CAAC,kBAAkB,0CAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,MAAK,iBAAO,CAAC,QAAQ,CAAC;QAC7E,CAAC;QAEQ,UAAU;YAClB,OAAO,KAAK,CAAC;QACd,CAAC;QAEQ,KAAK,CAAC,IAAI,CAAC,KAAsB,EAAE,OAAsB;YACjE,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAE5B,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;oBACtB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;iBACnC;qBAAM;oBACN,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;iBAC5C;gBAED,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEQ,KAAK,CAAC,MAAM,CAAC,KAAsB,EAAE,OAAsB;;YACnE,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC/C,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC;YAEtF,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,oBAAoB,CAAC,CAAC;YACvG,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,SAAS,CAAC,CAAC,iBAAiB;aACnC;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;oBACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;wBAChC,OAAO,OAAO,CAAC;qBACf;oBAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE;wBACpC,OAAO,GAAG,OAAO,UAAU,OAAO,CAAC,IAAI,GAAG,CAAC;qBAC3C;oBAED,OAAO,GAAG,OAAO,CAAC,OAAO,cAAc,OAAO,CAAC,OAAO,GAAG,CAAC;gBAC3D,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,aAAa,MAAM,wBAAwB,QAAQ,CAAC,mBAAmB;;;EAGxF,QAAQ;CACT,CAAC,CAAC;aACA;YAED,IAAI,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBACzD,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,MAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,0CAAE,MAAM,CAAC;QAC1C,CAAC;QAED,+CAA+C;QACtC,MAAM,CAAC,KAAsB,EAAE,MAAW;YAClD,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,MAAM,4BAA4B,GAAG,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;gBAEnG,IAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oBAC5G,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBACjC;aACD;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,KAAK,CAAC,KAAsB,EAAE,WAAgB;YACrD,OAAO,SAAS,CAAC;QAClB,CAAC;QAEQ,KAAK,CAAC,MAAM,CAAC,KAAsB,EAAE,OAAwB;YACrE,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;gBACxE,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACrD;YAED,OAAO;QACR,CAAC;QAEQ,KAAK,CAAC,OAAO;YACrB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,QAAS,CAAC,EAAE;gBAC5D,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,IAAI,CAAC,kBAAkB,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAS,CAAC,CAAC;gBAC1G,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrG,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,kBAAkB,EAAE;oBACzE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;iBAC9B;aAED;YACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,IAAI,CAAC,kBAAkB,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAS,CAAC,CAAC;aAClH;YAED,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACpG,CAAC;QAEQ,OAAO,CAAC,UAAmB;YACnC,IAAI,IAAI,KAAK,UAAU,EAAE;gBACxB,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,UAAU,YAAY,uBAAuB,EAAE;gBAClD,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,QAAQ;uBACxC,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;aAChD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEQ,OAAO;;YACf,MAAA,IAAI,CAAC,kBAAkB,0CAAE,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,MAAA,IAAI,CAAC,kBAAkB,0CAAE,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IArKgB,0BAAE,GAAW,mCAAmC,CAAC;IALrD,uBAAuB;QAmBjC,WAAA,kCAAgB,CAAA;QAChB,WAAA,wEAAmC,CAAA;QACnC,WAAA,4BAAkB,CAAA;OArBR,uBAAuB,CA0KnC;IA1KY,0DAAuB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport { EditorInput, IEditorInput, GroupIdentifier, ISaveOptions, IMoveResult, IRevertOptions, EditorModel } from 'vs/workbench/common/editor';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { URI } from 'vs/base/common/uri';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { INotebookEditorModelResolverService } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { INotebookDiffEditorModel, IResolvedNotebookEditorModel } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Schemas } from 'vs/base/common/network';\n\ninterface NotebookEditorInputOptions {\n\tstartDirty?: boolean;\n}\n\nclass NotebookDiffEditorModel extends EditorModel implements INotebookDiffEditorModel {\n\tconstructor(\n\t\treadonly original: IResolvedNotebookEditorModel,\n\t\treadonly modified: IResolvedNotebookEditorModel,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync load(): Promise<NotebookDiffEditorModel> {\n\t\tawait this.original.load();\n\t\tawait this.modified.load();\n\n\t\treturn this;\n\t}\n\n\tasync resolveOriginalFromDisk() {\n\t\tawait this.original.load({ forceReadFromFile: true });\n\t}\n\n\tasync resolveModifiedFromDisk() {\n\t\tawait this.modified.load({ forceReadFromFile: true });\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n}\n\nexport class NotebookDiffEditorInput extends EditorInput {\n\tstatic create(instantiationService: IInstantiationService, resource: URI, name: string, originalResource: URI, originalName: string, textDiffName: string, viewType: string | undefined, options: NotebookEditorInputOptions = {}) {\n\t\treturn instantiationService.createInstance(NotebookDiffEditorInput, resource, name, originalResource, originalName, textDiffName, viewType, options);\n\t}\n\n\tstatic readonly ID: string = 'workbench.input.diffNotebookInput';\n\n\tprivate _modifiedTextModel: IReference<IResolvedNotebookEditorModel> | null = null;\n\tprivate _originalTextModel: IReference<IResolvedNotebookEditorModel> | null = null;\n\tprivate _defaultDirtyState: boolean = false;\n\n\tconstructor(\n\t\tpublic readonly resource: URI,\n\t\tpublic readonly name: string,\n\t\tpublic readonly originalResource: URI,\n\t\tpublic readonly originalName: string,\n\t\tpublic readonly textDiffName: string,\n\t\tpublic readonly viewType: string | undefined,\n\t\tpublic readonly options: NotebookEditorInputOptions,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookModelResolverService: INotebookEditorModelResolverService,\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService\n\t) {\n\t\tsuper();\n\t\tthis._defaultDirtyState = !!options.startDirty;\n\t}\n\n\toverride get typeId(): string {\n\t\treturn NotebookDiffEditorInput.ID;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.textDiffName;\n\t}\n\n\toverride isDirty() {\n\t\tif (!this._modifiedTextModel) {\n\t\t\treturn this._defaultDirtyState;\n\t\t}\n\t\treturn this._modifiedTextModel.object.isDirty();\n\t}\n\n\toverride isUntitled(): boolean {\n\t\treturn this._modifiedTextModel?.object.resource.scheme === Schemas.untitled;\n\t}\n\n\toverride isReadonly() {\n\t\treturn false;\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tif (this._modifiedTextModel) {\n\n\t\t\tif (this.isUntitled()) {\n\t\t\t\treturn this.saveAs(group, options);\n\t\t\t} else {\n\t\t\t\tawait this._modifiedTextModel.object.save();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tif (!this._modifiedTextModel || !this.viewType) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst provider = this._notebookService.getContributedNotebookProvider(this.viewType!);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst dialogPath = this._modifiedTextModel.object.resource;\n\t\tconst target = await this._fileDialogService.pickFileToSave(dialogPath, options?.availableFileSystems);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tif (!provider.matches(target)) {\n\t\t\tconst patterns = provider.selectors.map(pattern => {\n\t\t\t\tif (typeof pattern === 'string') {\n\t\t\t\t\treturn pattern;\n\t\t\t\t}\n\n\t\t\t\tif (glob.isRelativePattern(pattern)) {\n\t\t\t\t\treturn `${pattern} (base ${pattern.base})`;\n\t\t\t\t}\n\n\t\t\t\treturn `${pattern.include} (exclude: ${pattern.exclude})`;\n\t\t\t}).join(', ');\n\t\t\tthrow new Error(`File name ${target} is not supported by ${provider.providerDisplayName}.\n\nPlease make sure the file name matches following patterns:\n${patterns}\n`);\n\t\t}\n\n\t\tif (!await this._modifiedTextModel.object.saveAs(target)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._move(group, target)?.editor;\n\t}\n\n\t// called when users rename a notebook document\n\toverride rename(group: GroupIdentifier, target: URI): IMoveResult | undefined {\n\t\tif (this._modifiedTextModel) {\n\t\t\tconst contributedNotebookProviders = this._notebookService.getContributedNotebookProviders(target);\n\n\t\t\tif (contributedNotebookProviders.find(provider => provider.id === this._modifiedTextModel!.object.viewType)) {\n\t\t\t\treturn this._move(group, target);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _move(group: GroupIdentifier, newResource: URI): { editor: IEditorInput } | undefined {\n\t\treturn undefined;\n\t}\n\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tif (this._modifiedTextModel && this._modifiedTextModel.object.isDirty()) {\n\t\t\tawait this._modifiedTextModel.object.revert(options);\n\t\t}\n\n\t\treturn;\n\t}\n\n\toverride async resolve(): Promise<INotebookDiffEditorModel | null> {\n\t\tif (!await this._notebookService.canResolve(this.viewType!)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this._modifiedTextModel) {\n\t\t\tthis._modifiedTextModel = await this._notebookModelResolverService.resolve(this.resource, this.viewType!);\n\t\t\tthis._register(this._modifiedTextModel.object.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\t\tif (this._modifiedTextModel.object.isDirty() !== this._defaultDirtyState) {\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}\n\n\t\t}\n\t\tif (!this._originalTextModel) {\n\t\t\tthis._originalTextModel = await this._notebookModelResolverService.resolve(this.originalResource, this.viewType!);\n\t\t}\n\n\t\treturn new NotebookDiffEditorModel(this._originalTextModel.object, this._modifiedTextModel.object);\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof NotebookDiffEditorInput) {\n\t\t\treturn this.viewType === otherInput.viewType\n\t\t\t\t&& isEqual(this.resource, otherInput.resource);\n\t\t}\n\t\treturn false;\n\t}\n\n\toverride dispose() {\n\t\tthis._modifiedTextModel?.dispose();\n\t\tthis._modifiedTextModel = null;\n\t\tthis._originalTextModel?.dispose();\n\t\tthis._originalTextModel = null;\n\t\tsuper.dispose();\n\t}\n}\n"]}