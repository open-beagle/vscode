{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/status/editorStatus.ts"],"names":[],"mappings":"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","file":"editorStatus.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IQuickInputButton, IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { NOTEBOOK_ACTIONS_CATEGORY } from 'vs/workbench/contrib/notebook/browser/contrib/coreActions';\nimport { getNotebookEditorFromEditorPane, INotebookEditor, NOTEBOOK_IS_ACTIVE_EDITOR } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { combinedDisposable, Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from 'vs/workbench/services/statusbar/common/statusbar';\nimport { configureKernelIcon, selectKernelIcon } from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModel';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { INotebookKernel, INotebookTextModel } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.selectKernel',\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\ttitle: { value: nls.localize('notebookActions.selectKernel', \"Select Notebook Kernel\"), original: 'Select Notebook Kernel' },\n\t\t\tprecondition: NOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\ticon: selectKernelIcon,\n\t\t\tf1: true,\n\t\t\tdescription: {\n\t\t\t\tdescription: nls.localize('notebookActions.selectKernel.args', \"Notebook Kernel Args\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'kernelInfo',\n\t\t\t\t\t\tdescription: 'The kernel info',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'required': ['id', 'extension'],\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'id': {\n\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'extension': {\n\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, context?: { id: string, extension: string }): Promise<boolean> {\n\t\tconst notebookKernelService = accessor.get(INotebookKernelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst labelService = accessor.get(ILabelService);\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\t\tif (!editor || !editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (context && (typeof context.id !== 'string' || typeof context.extension !== 'string')) {\n\t\t\t// validate context: id & extension MUST be strings\n\t\t\tcontext = undefined;\n\t\t}\n\n\t\tconst notebook = editor.viewModel.notebookDocument;\n\t\tconst { selected, all } = notebookKernelService.getMatchingKernel(notebook);\n\n\t\tif (selected && context && selected.id === context.id && ExtensionIdentifier.equals(selected.extension, context.extension)) {\n\t\t\t// current kernel is wanted kernel -> done\n\t\t\treturn true;\n\t\t}\n\n\t\tlet newKernel: INotebookKernel | undefined;\n\t\tif (context) {\n\t\t\tconst wantedId = `${context.extension}/${context.id}`;\n\t\t\tfor (let candidate of all) {\n\t\t\t\tif (candidate.id === wantedId) {\n\t\t\t\t\tnewKernel = candidate;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!newKernel) {\n\t\t\t\tlogService.warn(`wanted kernel DOES NOT EXIST, wanted: ${wantedId}, all: ${all.map(k => k.id)}`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (!newKernel) {\n\t\t\ttype KernelPick = IQuickPickItem & { kernel: INotebookKernel };\n\t\t\tconst configButton: IQuickInputButton = {\n\t\t\t\ticonClass: ThemeIcon.asClassName(configureKernelIcon),\n\t\t\t\ttooltip: nls.localize('notebook.promptKernel.setDefaultTooltip', \"Set as default for '{0}' notebooks\", editor.viewModel.viewType)\n\t\t\t};\n\t\t\tconst picks = all.map(kernel => {\n\t\t\t\tconst res = <KernelPick>{\n\t\t\t\t\tkernel,\n\t\t\t\t\tpicked: kernel.id === selected?.id,\n\t\t\t\t\tlabel: kernel.label,\n\t\t\t\t\tdescription: kernel.description,\n\t\t\t\t\tdetail: kernel.detail,\n\t\t\t\t\tbuttons: [configButton]\n\t\t\t\t};\n\t\t\t\tif (kernel.id === selected?.id) {\n\t\t\t\t\tif (!res.description) {\n\t\t\t\t\t\tres.description = nls.localize('current1', \"Currently Selected\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.description = nls.localize('current2', \"{0} - Currently Selected\", res.description);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t{ return res; }\n\t\t\t});\n\t\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\t\tplaceHolder: selected\n\t\t\t\t\t? nls.localize('prompt.placeholder.change', \"Change kernel for '{0}'\", labelService.getUriLabel(notebook.uri, { relative: true }))\n\t\t\t\t\t: nls.localize('prompt.placeholder.select', \"Select kernel for '{0}'\", labelService.getUriLabel(notebook.uri, { relative: true })),\n\t\t\t\tonDidTriggerItemButton: (context) => {\n\t\t\t\t\tnotebookKernelService.selectKernelForNotebookType(context.item.kernel, notebook.viewType);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (pick) {\n\t\t\t\tnewKernel = pick.kernel;\n\t\t\t}\n\t\t}\n\n\t\tif (newKernel) {\n\t\t\tnotebookKernelService.selectKernelForNotebook(newKernel, notebook);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nexport class KernelStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _editorDisposables = this._register(new DisposableStore());\n\tprivate readonly _kernelInfoElement = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._editorService.onDidActiveEditorChange(() => this._updateStatusbar()));\n\t}\n\n\tprivate _updateStatusbar() {\n\t\tthis._editorDisposables.clear();\n\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tif (!activeEditor) {\n\t\t\t// not a notebook -> clean-up, done\n\t\t\tthis._kernelInfoElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateStatus = () => {\n\t\t\tconst notebook = activeEditor.viewModel?.notebookDocument;\n\t\t\tif (notebook) {\n\t\t\t\tthis._showKernelStatus(notebook);\n\t\t\t} else {\n\t\t\t\tthis._kernelInfoElement.clear();\n\t\t\t}\n\t\t};\n\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidAddKernel(updateStatus));\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidChangeNotebookKernelBinding(updateStatus));\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidChangeNotebookAffinity(updateStatus));\n\t\tthis._editorDisposables.add(activeEditor.onDidChangeModel(updateStatus));\n\t\tupdateStatus();\n\t}\n\n\tprivate _showKernelStatus(notebook: INotebookTextModel) {\n\n\t\tlet { selected, all } = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tlet isSuggested = false;\n\n\t\tif (all.length === 0) {\n\t\t\t// no kernel -> no status\n\t\t\tthis._kernelInfoElement.clear();\n\t\t\treturn;\n\n\t\t} else if (selected || all.length === 1) {\n\t\t\t// selected or single kernel\n\t\t\tif (!selected) {\n\t\t\t\tselected = all[0];\n\t\t\t\tisSuggested = true;\n\t\t\t}\n\t\t\tconst text = `$(notebook-kernel-select) ${selected.label}`;\n\t\t\tconst tooltip = selected.description ?? selected.detail ?? selected.label;\n\t\t\tconst registration = this._statusbarService.addEntry(\n\t\t\t\t{\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: selected.label,\n\t\t\t\t\ttooltip: isSuggested ? nls.localize('tooltop', \"{0} (suggestion)\", tooltip) : tooltip,\n\t\t\t\t\tcommand: 'notebook.selectKernel',\n\t\t\t\t},\n\t\t\t\t'notebook.selectKernel',\n\t\t\t\tnls.localize('notebook.info', \"Notebook Kernel Info\"),\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t1000\n\t\t\t);\n\t\t\tconst listener = selected.onDidChange(() => this._showKernelStatus(notebook));\n\t\t\tthis._kernelInfoElement.value = combinedDisposable(listener, registration);\n\n\t\t} else {\n\t\t\t// multiple kernels -> show selection hint\n\t\t\tconst registration = this._statusbarService.addEntry(\n\t\t\t\t{\n\t\t\t\t\ttext: nls.localize('kernel.select.label', \"Select Kernel\"),\n\t\t\t\t\tariaLabel: nls.localize('kernel.select.label', \"Select Kernel\"),\n\t\t\t\t\tcommand: 'notebook.selectKernel',\n\t\t\t\t\tbackgroundColor: { id: 'statusBarItem.prominentBackground' }\n\t\t\t\t},\n\t\t\t\t'notebook.selectKernel',\n\t\t\t\tnls.localize('notebook.select', \"Notebook Kernel Selection\"),\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t1000\n\t\t\t);\n\t\t\tthis._kernelInfoElement.value = registration;\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(KernelStatus, LifecyclePhase.Ready);\n\nexport class ActiveCellStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _itemDisposables = this._register(new DisposableStore());\n\tprivate readonly _accessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._editorService.onDidActiveEditorChange(() => this._update()));\n\t}\n\n\tprivate _update() {\n\t\tthis._itemDisposables.clear();\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tif (activeEditor) {\n\t\t\tthis._itemDisposables.add(activeEditor.onDidChangeSelection(() => this._show(activeEditor)));\n\t\t\tthis._itemDisposables.add(activeEditor.onDidChangeActiveCell(() => this._show(activeEditor)));\n\t\t\tthis._show(activeEditor);\n\t\t} else {\n\t\t\tthis._accessor.clear();\n\t\t}\n\t}\n\n\tprivate _show(editor: INotebookEditor) {\n\t\tconst vm = editor.viewModel;\n\t\tif (!vm) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst newText = this._getSelectionsText(editor, vm);\n\t\tif (!newText) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = { text: newText, ariaLabel: newText };\n\t\tif (!this._accessor.value) {\n\t\t\tthis._accessor.value = this._statusbarService.addEntry(\n\t\t\t\tentry,\n\t\t\t\t'notebook.activeCellStatus',\n\t\t\t\tnls.localize('notebook.activeCellStatusName', \"Notebook Editor Selections\"),\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t100);\n\t\t} else {\n\t\t\tthis._accessor.value.update(entry);\n\t\t}\n\t}\n\n\tprivate _getSelectionsText(editor: INotebookEditor, vm: NotebookViewModel): string | undefined {\n\t\tconst activeCell = editor.getActiveCell();\n\t\tif (!activeCell) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idxFocused = vm.getCellIndex(activeCell) + 1;\n\t\tconst numSelected = vm.getSelections().reduce((prev, range) => prev + (range.end - range.start), 0);\n\t\treturn numSelected > 1 ?\n\t\t\tnls.localize('notebook.multiActiveCellIndicator', \"Cell {0} ({1} selected)\", idxFocused, numSelected) :\n\t\t\tnls.localize('notebook.singleActiveCellIndicator', \"Cell {0}\", idxFocused);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(ActiveCellStatus, LifecyclePhase.Ready);\n"]}