{"version":3,"file":"textHelper.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/view/output/transforms/textHelper.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { renderMarkdown } from 'vs/base/browser/markdownRenderer';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { DefaultEndOfLine, EndOfLinePreference, ITextBuffer } from 'vs/editor/common/model';\nimport { Range } from 'vs/editor/common/core/range';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { handleANSIOutput } from 'vs/workbench/contrib/debug/browser/debugANSIHandling';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\n\nconst SIZE_LIMIT = 65535;\nconst LINES_LIMIT = 500;\n\nfunction generateViewMoreElement(outputs: string[], openerService: IOpenerService, textFileService: ITextFileService) {\n\tconst md: IMarkdownString = {\n\t\tvalue: '[show more (open the raw output data in a text editor) ...](command:workbench.action.openLargeOutput)',\n\t\tisTrusted: true,\n\t\tsupportThemeIcons: true\n\t};\n\n\tconst element = renderMarkdown(md, {\n\t\tactionHandler: {\n\t\t\tcallback: (content) => {\n\t\t\t\tif (content === 'command:workbench.action.openLargeOutput') {\n\t\t\t\t\treturn textFileService.untitled.resolve({\n\t\t\t\t\t\tassociatedResource: undefined,\n\t\t\t\t\t\tmode: 'plaintext',\n\t\t\t\t\t\tinitialValue: outputs.join('')\n\t\t\t\t\t}).then(model => {\n\t\t\t\t\t\tconst resource = model.resource;\n\t\t\t\t\t\topenerService.open(resource);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t},\n\t\t\tdisposeables: new DisposableStore()\n\t\t}\n\t});\n\n\telement.classList.add('output-show-more');\n\treturn element;\n}\n\nexport function truncatedArrayOfString(container: HTMLElement, outputs: string[], linkDetector: LinkDetector, openerService: IOpenerService, textFileService: ITextFileService, themeService: IThemeService) {\n\tconst fullLen = outputs.reduce((p, c) => {\n\t\treturn p + c.length;\n\t}, 0);\n\n\tlet buffer: ITextBuffer | undefined = undefined;\n\n\tif (fullLen > SIZE_LIMIT) {\n\t\t// it's too large and we should find min(maxSizeLimit, maxLineLimit)\n\t\tconst bufferBuilder = new PieceTreeTextBufferBuilder();\n\t\toutputs.forEach(output => bufferBuilder.acceptChunk(output));\n\t\tconst factory = bufferBuilder.finish();\n\t\tbuffer = factory.create(DefaultEndOfLine.LF).textBuffer;\n\t\tconst sizeBufferLimitPosition = buffer.getPositionAt(SIZE_LIMIT);\n\t\tif (sizeBufferLimitPosition.lineNumber < LINES_LIMIT) {\n\t\t\tconst truncatedText = buffer.getValueInRange(new Range(1, 1, sizeBufferLimitPosition.lineNumber, sizeBufferLimitPosition.column), EndOfLinePreference.TextDefined);\n\t\t\tcontainer.appendChild(handleANSIOutput(truncatedText, linkDetector, themeService, undefined));\n\t\t\t// view more ...\n\t\t\tcontainer.appendChild(generateViewMoreElement(outputs, openerService, textFileService));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!buffer) {\n\t\tconst bufferBuilder = new PieceTreeTextBufferBuilder();\n\t\toutputs.forEach(output => bufferBuilder.acceptChunk(output));\n\t\tconst factory = bufferBuilder.finish();\n\t\tbuffer = factory.create(DefaultEndOfLine.LF).textBuffer;\n\t}\n\n\tif (buffer.getLineCount() < LINES_LIMIT) {\n\t\tconst lineCount = buffer.getLineCount();\n\t\tconst fullRange = new Range(1, 1, lineCount, Math.max(1, buffer.getLineLastNonWhitespaceColumn(lineCount)));\n\t\tcontainer.appendChild(handleANSIOutput(buffer.getValueInRange(fullRange, EndOfLinePreference.TextDefined), linkDetector, themeService, undefined));\n\t\treturn;\n\t}\n\n\tconst pre = DOM.$('pre');\n\tcontainer.appendChild(pre);\n\tpre.appendChild(handleANSIOutput(buffer.getValueInRange(new Range(1, 1, LINES_LIMIT - 5, buffer.getLineLastNonWhitespaceColumn(LINES_LIMIT - 5)), EndOfLinePreference.TextDefined), linkDetector, themeService, undefined));\n\n\t// view more ...\n\tcontainer.appendChild(generateViewMoreElement(outputs, openerService, textFileService));\n\n\tconst lineCount = buffer.getLineCount();\n\tconst pre2 = DOM.$('div');\n\tcontainer.appendChild(pre2);\n\tpre2.appendChild(handleANSIOutput(buffer.getValueInRange(new Range(lineCount - 5, 1, lineCount, buffer.getLineLastNonWhitespaceColumn(lineCount)), EndOfLinePreference.TextDefined), linkDetector, themeService, undefined));\n}\n"]}