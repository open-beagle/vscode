{"version":3,"file":"notebookEditorWidgetContextKeys.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/notebookEditorWidgetContextKeys.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ICellViewModel, NOTEBOOK_HAS_RUNNING_CELL, NOTEBOOK_INTERRUPTIBLE_KERNEL, NOTEBOOK_KERNEL_COUNT, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModel';\nimport { NotebookCellExecutionState } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\n\nexport class NotebookEditorContextKeys {\n\n\tprivate readonly _notebookKernelCount: IContextKey<number>;\n\tprivate readonly _interruptibleKernel: IContextKey<boolean>;\n\tprivate readonly _someCellRunning: IContextKey<boolean>;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _viewModelDisposables = new DisposableStore();\n\tprivate readonly _cellStateListeners: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditor,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tthis._notebookKernelCount = NOTEBOOK_KERNEL_COUNT.bindTo(contextKeyService);\n\t\tthis._interruptibleKernel = NOTEBOOK_INTERRUPTIBLE_KERNEL.bindTo(contextKeyService);\n\t\tthis._someCellRunning = NOTEBOOK_HAS_RUNNING_CELL.bindTo(contextKeyService);\n\n\t\tthis._disposables.add(_editor.onDidChangeModel(this._handleDidChangeModel, this));\n\t\tthis._disposables.add(_notebookKernelService.onDidAddKernel(this._updateKernelContext, this));\n\t\tthis._disposables.add(_notebookKernelService.onDidChangeNotebookKernelBinding(this._updateKernelContext, this));\n\t\tthis._handleDidChangeModel();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._viewModelDisposables.dispose();\n\t\tthis._notebookKernelCount.reset();\n\t\tthis._interruptibleKernel.reset();\n\t\tthis._someCellRunning.reset();\n\t}\n\n\tprivate _handleDidChangeModel(): void {\n\n\t\tthis._updateKernelContext();\n\n\t\tthis._viewModelDisposables.clear();\n\t\tdispose(this._cellStateListeners);\n\t\tthis._cellStateListeners.length = 0;\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet executionCount = 0;\n\n\t\tconst addCellStateListener = (c: ICellViewModel) => {\n\t\t\treturn (c as CellViewModel).onDidChangeState(e => {\n\t\t\t\tif (!e.runStateChanged) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (c.metadata?.runState === NotebookCellExecutionState.Pending) {\n\t\t\t\t\texecutionCount++;\n\t\t\t\t} else if (c.metadata?.runState === NotebookCellExecutionState.Idle) {\n\t\t\t\t\texecutionCount--;\n\t\t\t\t}\n\t\t\t\tthis._someCellRunning.set(executionCount > 0);\n\t\t\t});\n\t\t};\n\n\t\tfor (const cell of this._editor.viewModel.viewCells) {\n\t\t\tthis._cellStateListeners.push(addCellStateListener(cell));\n\t\t}\n\n\t\tthis._viewModelDisposables.add(this._editor.viewModel.onDidChangeViewCells(e => {\n\t\t\te.splices.reverse().forEach(splice => {\n\t\t\t\tconst [start, deleted, newCells] = splice;\n\t\t\t\tconst deletedCells = this._cellStateListeners.splice(start, deleted, ...newCells.map(addCellStateListener));\n\t\t\t\tdispose(deletedCells);\n\t\t\t});\n\t\t}));\n\t}\n\n\tprivate _updateKernelContext(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\tthis._notebookKernelCount.reset();\n\t\t\tthis._interruptibleKernel.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tconst { selected, all } = this._notebookKernelService.getMatchingKernel(this._editor.viewModel.notebookDocument);\n\t\tthis._notebookKernelCount.set(all.length);\n\t\tthis._interruptibleKernel.set(selected?.implementsInterrupt ?? false);\n\t}\n}\n"]}