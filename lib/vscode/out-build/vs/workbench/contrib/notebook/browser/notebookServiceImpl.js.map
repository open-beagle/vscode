{"version":3,"sources":["vs/workbench/contrib/notebook/browser/notebookServiceImpl.ts"],"names":[],"mappings":"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","file":"notebookServiceImpl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport { localize } from 'vs/nls';\nimport { getPixelRatio, getZoomLevel } from 'vs/base/browser/browser';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { NotebookExtensionDescription } from 'vs/workbench/api/common/extHost.protocol';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { INotebookEditorContribution, notebookMarkupRendererExtensionPoint, notebookProviderExtensionPoint, notebookRendererExtensionPoint } from 'vs/workbench/contrib/notebook/browser/extensionPoint';\nimport { NotebookEditorOptions, updateEditorTopPadding } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER, BUILTIN_RENDERER_ID, CellUri, DisplayOrderKey, INotebookExclusiveDocumentFilter, INotebookMarkupRendererInfo, INotebookRendererInfo, INotebookTextModel, IOrderedMimeType, IOutputDto, mimeTypeIsAlwaysSecure, mimeTypeSupportedByCore, NotebookDataDto, NotebookEditorPriority, NotebookRendererMatch, NotebookTextDiffEditorPreview, RENDERER_NOT_AVAILABLE, sortMimeTypes, TransientOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookMarkupRendererInfo as NotebookMarkupRendererInfo } from 'vs/workbench/contrib/notebook/common/notebookMarkdownRenderer';\nimport { NotebookOutputRendererInfo } from 'vs/workbench/contrib/notebook/common/notebookOutputRenderer';\nimport { NotebookEditorDescriptor, NotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookProvider';\nimport { ComplexNotebookProviderInfo, INotebookContentProvider, INotebookSerializer, INotebookService, SimpleNotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Schemas } from 'vs/base/common/network';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { NotebookDiffEditorInput } from 'vs/workbench/contrib/notebook/browser/notebookDiffEditorInput';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { ContributedEditorPriority, DiffEditorInputFactoryFunction, EditorInputFactoryFunction, IEditorAssociationsRegistry, IEditorOverrideService, IEditorType, IEditorTypesHandler } from 'vs/workbench/services/editor/common/editorOverrideService';\nimport { EditorExtensions, IEditorInput } from 'vs/workbench/common/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\n\nexport class NotebookProviderInfoStore extends Disposable {\n\n\tprivate static readonly CUSTOM_EDITORS_STORAGE_ID = 'notebookEditors';\n\tprivate static readonly CUSTOM_EDITORS_ENTRY_ID = 'editors';\n\n\tprivate readonly _memento: Memento;\n\tprivate _handled: boolean = false;\n\n\tprivate readonly _contributedEditors = new Map<string, NotebookProviderInfo>();\n\tprivate readonly _contributedEditorDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IEditorOverrideService private readonly _editorOverrideService: IEditorOverrideService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tthis._memento = new Memento(NotebookProviderInfoStore.CUSTOM_EDITORS_STORAGE_ID, storageService);\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tfor (const info of (mementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] || []) as NotebookEditorDescriptor[]) {\n\t\t\tthis.add(new NotebookProviderInfo(info));\n\t\t}\n\n\t\tthis._register(extensionService.onDidRegisterExtensions(() => {\n\t\t\tif (!this._handled) {\n\t\t\t\t// there is no extension point registered for notebook content provider\n\t\t\t\t// clear the memento and cache\n\t\t\t\tthis._clear();\n\t\t\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = [];\n\t\t\t\tthis._memento.saveMemento();\n\t\t\t}\n\t\t}));\n\n\t\tnotebookProviderExtensionPoint.setHandler(extensions => this._setupHandler(extensions));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._clear();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupHandler(extensions: readonly IExtensionPointUser<INotebookEditorContribution[]>[]) {\n\t\tthis._handled = true;\n\t\tthis._clear();\n\n\t\tfor (const extension of extensions) {\n\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\tthis.add(new NotebookProviderInfo({\n\t\t\t\t\tid: notebookContribution.viewType,\n\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\tselectors: notebookContribution.selector || [],\n\t\t\t\t\tpriority: this._convertPriority(notebookContribution.priority),\n\t\t\t\t\tproviderExtensionId: extension.description.identifier.value,\n\t\t\t\t\tproviderDescription: extension.description.description,\n\t\t\t\t\tproviderDisplayName: extension.description.isBuiltin ? localize('builtinProviderDisplayName', \"Built-in\") : extension.description.displayName || extension.description.identifier.value,\n\t\t\t\t\tproviderExtensionLocation: extension.description.extensionLocation,\n\t\t\t\t\tdynamicContribution: false,\n\t\t\t\t\texclusive: false\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = Array.from(this._contributedEditors.values());\n\t\tthis._memento.saveMemento();\n\t}\n\n\tprivate _convertPriority(priority?: string) {\n\t\tif (!priority) {\n\t\t\treturn ContributedEditorPriority.default;\n\t\t}\n\n\t\tif (priority === NotebookEditorPriority.default) {\n\t\t\treturn ContributedEditorPriority.default;\n\t\t}\n\n\t\treturn ContributedEditorPriority.option;\n\n\t}\n\n\tprivate _registerContributionPoint(notebookProviderInfo: NotebookProviderInfo): void {\n\t\tfor (const selector of notebookProviderInfo.selectors) {\n\t\t\tconst globPattern = (selector as INotebookExclusiveDocumentFilter).include || selector as glob.IRelativePattern | string;\n\t\t\tconst notebookEditorInfo = {\n\t\t\t\tid: notebookProviderInfo.id,\n\t\t\t\tlabel: notebookProviderInfo.displayName,\n\t\t\t\tdetail: notebookProviderInfo.providerDisplayName,\n\t\t\t\tdescribes: (currentEditor: IEditorInput) => currentEditor instanceof NotebookEditorInput && currentEditor.viewType === notebookProviderInfo.id,\n\t\t\t\tpriority: notebookProviderInfo.exclusive ? ContributedEditorPriority.exclusive : notebookProviderInfo.priority,\n\t\t\t};\n\t\t\tconst notebookEditorOptions = {\n\t\t\t\tcanHandleDiff: () => !!this._configurationService.getValue(NotebookTextDiffEditorPreview) && !this._accessibilityService.isScreenReaderOptimized(),\n\t\t\t\tcanSupportResource: (resource: URI) => resource.scheme === Schemas.untitled || resource.scheme === Schemas.vscodeNotebookCell || this._fileService.canHandleResource(resource)\n\t\t\t};\n\t\t\tconst notebookEditorInputFactory: EditorInputFactoryFunction = (resource, options, group) => {\n\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\tlet notebookUri: URI = resource;\n\t\t\t\tlet cellOptions: IResourceEditorInput | undefined;\n\n\t\t\t\tif (data) {\n\t\t\t\t\tnotebookUri = data.notebook;\n\t\t\t\t\tcellOptions = { resource: resource };\n\t\t\t\t}\n\n\t\t\t\tconst notebookOptions = new NotebookEditorOptions({ ...options, cellOptions });\n\t\t\t\treturn { editor: NotebookEditorInput.create(this._instantiationService, notebookUri, notebookProviderInfo.id), options: notebookOptions };\n\t\t\t};\n\t\t\tconst notebookEditorDiffFactory: DiffEditorInputFactoryFunction = (diffEditorInput: DiffEditorInput, options, group) => {\n\t\t\t\tconst modifiedInput = diffEditorInput.modifiedInput;\n\t\t\t\tconst originalInput = diffEditorInput.originalInput;\n\t\t\t\tconst notebookUri = modifiedInput.resource!;\n\t\t\t\tconst originalNotebookUri = originalInput.resource!;\n\t\t\t\treturn { editor: NotebookDiffEditorInput.create(this._instantiationService, notebookUri, modifiedInput.getName(), originalNotebookUri, originalInput.getName(), diffEditorInput.getName(), notebookProviderInfo.id) };\n\t\t\t};\n\t\t\t// Register the notebook editor\n\t\t\tthis._contributedEditorDisposables.add(this._editorOverrideService.registerContributionPoint(\n\t\t\t\tglobPattern,\n\t\t\t\tnotebookEditorInfo,\n\t\t\t\tnotebookEditorOptions,\n\t\t\t\tnotebookEditorInputFactory,\n\t\t\t\tnotebookEditorDiffFactory\n\t\t\t));\n\t\t\t// Then register the schema handler as exclusive for that notebook\n\t\t\tthis._contributedEditorDisposables.add(this._editorOverrideService.registerContributionPoint(\n\t\t\t\t`${Schemas.vscodeNotebookCell}:/**/${globPattern}`,\n\t\t\t\t{ ...notebookEditorInfo, priority: ContributedEditorPriority.exclusive },\n\t\t\t\tnotebookEditorOptions,\n\t\t\t\tnotebookEditorInputFactory,\n\t\t\t\tnotebookEditorDiffFactory\n\t\t\t));\n\t\t}\n\t}\n\n\n\tprivate _clear(): void {\n\t\tthis._contributedEditors.clear();\n\t\tthis._contributedEditorDisposables.clear();\n\t}\n\n\tget(viewType: string): NotebookProviderInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tadd(info: NotebookProviderInfo): void {\n\t\tif (this._contributedEditors.has(info.id)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._contributedEditors.set(info.id, info);\n\t\tthis._registerContributionPoint(info);\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = Array.from(this._contributedEditors.values());\n\t\tthis._memento.saveMemento();\n\t}\n\n\tgetContributedNotebook(resource: URI): readonly NotebookProviderInfo[] {\n\t\tconst result: NotebookProviderInfo[] = [];\n\t\tfor (let info of this._contributedEditors.values()) {\n\t\t\tif (info.matches(resource)) {\n\t\t\t\tresult.push(info);\n\t\t\t}\n\t\t}\n\t\tif (result.length === 0 && resource.scheme === Schemas.untitled) {\n\t\t\t// untitled resource and no path-specific match => all providers apply\n\t\t\treturn Array.from(this._contributedEditors.values());\n\t\t}\n\t\treturn result;\n\t}\n\n\t[Symbol.iterator](): Iterator<NotebookProviderInfo> {\n\t\treturn this._contributedEditors.values();\n\t}\n}\n\nexport class NotebookOutputRendererInfoStore {\n\tprivate readonly contributedRenderers = new Map<string, NotebookOutputRendererInfo>();\n\tprivate readonly preferredMimetypeMemento: Memento;\n\tprivate readonly preferredMimetype = new Lazy(() => this.preferredMimetypeMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.USER));\n\n\tconstructor(@IStorageService storageService: IStorageService) {\n\t\tthis.preferredMimetypeMemento = new Memento('workbench.editor.notebook.preferredRenderer', storageService);\n\t}\n\n\tclear() {\n\t\tthis.contributedRenderers.clear();\n\t}\n\n\tget(rendererId: string): NotebookOutputRendererInfo | undefined {\n\t\treturn this.contributedRenderers.get(rendererId);\n\t}\n\n\tadd(info: NotebookOutputRendererInfo): void {\n\t\tif (this.contributedRenderers.has(info.id)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.contributedRenderers.set(info.id, info);\n\t}\n\n\t/** Update and remember the preferred renderer for the given mimetype in this workspace */\n\tsetPreferred(mimeType: string, rendererId: string) {\n\t\tthis.preferredMimetype.getValue()[mimeType] = rendererId;\n\t\tthis.preferredMimetypeMemento.saveMemento();\n\t}\n\n\tgetContributedRenderer(mimeType: string, kernelProvides: readonly string[] | undefined): NotebookOutputRendererInfo[] {\n\t\tconst preferred = this.preferredMimetype.getValue()[mimeType];\n\t\tconst possible = Array.from(this.contributedRenderers.values())\n\t\t\t.map(renderer => ({\n\t\t\t\trenderer,\n\t\t\t\tscore: kernelProvides === undefined\n\t\t\t\t\t? renderer.matchesWithoutKernel(mimeType)\n\t\t\t\t\t: renderer.matches(mimeType, kernelProvides),\n\t\t\t}))\n\t\t\t.sort((a, b) => a.score - b.score)\n\t\t\t.filter(r => r.score !== NotebookRendererMatch.Never)\n\t\t\t.map(r => r.renderer);\n\n\t\treturn preferred ? possible.sort((a, b) => (a.id === preferred ? -1 : 0) + (b.id === preferred ? 1 : 0)) : possible;\n\t}\n}\n\nclass ModelData implements IDisposable {\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\n\tconstructor(\n\t\treadonly model: NotebookTextModel,\n\t\tonWillDispose: (model: INotebookTextModel) => void\n\t) {\n\t\tthis._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\t}\n\n\tdispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\nexport class NotebookService extends Disposable implements INotebookService, IEditorTypesHandler {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _notebookProviders = new Map<string, ComplexNotebookProviderInfo | SimpleNotebookProviderInfo>();\n\tprivate readonly _notebookProviderInfoStore: NotebookProviderInfoStore;\n\tprivate readonly _notebookRenderersInfoStore = this._instantiationService.createInstance(NotebookOutputRendererInfoStore);\n\tprivate readonly _markdownRenderersInfos = new Set<INotebookMarkupRendererInfo>();\n\tprivate readonly _models = new ResourceMap<ModelData>();\n\n\tprivate readonly _onDidCreateNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\tprivate readonly _onDidAddNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\tprivate readonly _onDidRemoveNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\n\treadonly onDidCreateNotebookDocument = this._onDidCreateNotebookDocument.event;\n\treadonly onDidAddNotebookDocument = this._onDidAddNotebookDocument.event;\n\treadonly onDidRemoveNotebookDocument = this._onDidRemoveNotebookDocument.event;\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(new Emitter<void>());\n\tonDidChangeEditorTypes: Event<void> = this._onDidChangeEditorTypes.event;\n\n\tprivate _cutItems: NotebookCellTextModel[] | undefined;\n\tprivate _lastClipboardIsCopy: boolean = true;\n\n\tprivate _displayOrder: { userOrder: string[], defaultOrder: string[]; } = Object.create(null);\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._notebookProviderInfoStore = _instantiationService.createInstance(NotebookProviderInfoStore);\n\t\tthis._register(this._notebookProviderInfoStore);\n\n\n\t\tnotebookRendererExtensionPoint.setHandler((renderers) => {\n\t\t\tthis._notebookRenderersInfoStore.clear();\n\n\t\t\tfor (const extension of renderers) {\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\tconsole.error(`Cannot register renderer for ${extension.description.identifier.value} since it did not have an entrypoint. This is now required: https://github.com/microsoft/vscode/issues/102644`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst id = notebookContribution.id ?? notebookContribution.viewType;\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tconsole.error(`Notebook renderer from ${extension.description.identifier.value} is missing an 'id'`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._notebookRenderersInfoStore.add(new NotebookOutputRendererInfo({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\t\tmimeTypes: notebookContribution.mimeTypes || [],\n\t\t\t\t\t\tdependencies: notebookContribution.dependencies,\n\t\t\t\t\t\toptionalDependencies: notebookContribution.optionalDependencies,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tnotebookMarkupRendererExtensionPoint.setHandler((renderers) => {\n\t\t\tthis._markdownRenderersInfos.clear();\n\n\t\t\tfor (const extension of renderers) {\n\t\t\t\tif (!extension.description.enableProposedApi && !extension.description.isBuiltin) {\n\t\t\t\t\t// Only allow proposed extensions to use this extension point\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\tconsole.error(`Cannot register renderer for ${extension.description.identifier.value} since it did not have an entrypoint. This is now required: https://github.com/microsoft/vscode/issues/102644`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst id = notebookContribution.id;\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tconsole.error(`Notebook renderer from ${extension.description.identifier.value} is missing an 'id'`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._markdownRenderersInfos.add(new NotebookMarkupRendererInfo({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\t\tmimeTypes: notebookContribution.mimeTypes,\n\t\t\t\t\t\tdependsOn: notebookContribution.dependsOn,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._register(Registry.as<IEditorAssociationsRegistry>(EditorExtensions.Associations).registerEditorTypesHandler('Notebook', this));\n\n\t\tconst updateOrder = () => {\n\t\t\tconst userOrder = this._configurationService.getValue<string[]>(DisplayOrderKey);\n\t\t\tthis._displayOrder = {\n\t\t\t\tdefaultOrder: this._accessibilityService.isScreenReaderOptimized() ? ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER : [],\n\t\t\t\tuserOrder: userOrder\n\t\t\t};\n\t\t};\n\n\t\tupdateOrder();\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectedKeys.indexOf(DisplayOrderKey) >= 0) {\n\t\t\t\tupdateOrder();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\tupdateOrder();\n\t\t}));\n\n\t\tlet decorationTriggeredAdjustment = false;\n\t\tlet decorationCheckSet = new Set<string>();\n\t\tthis._register(this._codeEditorService.onDecorationTypeRegistered(e => {\n\t\t\tif (decorationTriggeredAdjustment) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (decorationCheckSet.has(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = this._codeEditorService.resolveDecorationOptions(e, true);\n\t\t\tif (options.afterContentClassName || options.beforeContentClassName) {\n\t\t\t\tconst cssRules = this._codeEditorService.resolveDecorationCSSRules(e);\n\t\t\t\tif (cssRules !== null) {\n\t\t\t\t\tfor (let i = 0; i < cssRules.length; i++) {\n\t\t\t\t\t\t// The following ways to index into the list are equivalent\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t((cssRules[i] as CSSStyleRule).selectorText.endsWith('::after') || (cssRules[i] as CSSStyleRule).selectorText.endsWith('::after'))\n\t\t\t\t\t\t\t&& (cssRules[i] as CSSStyleRule).cssText.indexOf('top:') > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// there is a `::before` or `::after` text decoration whose position is above or below current line\n\t\t\t\t\t\t\t// we at least make sure that the editor top padding is at least one line\n\t\t\t\t\t\t\tconst editorOptions = this.configurationService.getValue<IEditorOptions>('editor');\n\t\t\t\t\t\t\tupdateEditorTopPadding(BareFontInfo.createFromRawSettings(editorOptions, getZoomLevel(), getPixelRatio()).lineHeight + 2);\n\t\t\t\t\t\t\tdecorationTriggeredAdjustment = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdecorationCheckSet.add(e);\n\t\t}));\n\t}\n\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this._notebookProviderInfoStore].map(info => ({\n\t\t\tid: info.id,\n\t\t\tdisplayName: info.displayName,\n\t\t\tproviderDisplayName: info.providerDisplayName\n\t\t}));\n\t}\n\n\tasync canResolve(viewType: string): Promise<boolean> {\n\t\tawait this._extensionService.activateByEvent(`onNotebook:*`);\n\n\t\tif (!this._notebookProviders.has(viewType)) {\n\t\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\t\t// this awaits full activation of all matching extensions\n\t\t\tawait this._extensionService.activateByEvent(`onNotebook:${viewType}`);\n\t\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// notebook providers/kernels/renderers might use `*` as activation event.\n\t\t\t\t// TODO, only activate by `*` if this._notebookProviders.get(viewType).dynamicContribution === true\n\t\t\t\tawait this._extensionService.activateByEvent(`*`);\n\t\t\t}\n\t\t}\n\t\treturn this._notebookProviders.has(viewType);\n\t}\n\n\tprivate _registerProviderData(viewType: string, data: SimpleNotebookProviderInfo | ComplexNotebookProviderInfo): void {\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\tthrow new Error(`notebook controller for viewtype '${viewType}' already exists`);\n\t\t}\n\t\tthis._notebookProviders.set(viewType, data);\n\t}\n\n\tregisterNotebookController(viewType: string, extensionData: NotebookExtensionDescription, controller: INotebookContentProvider): IDisposable {\n\t\tthis._registerProviderData(viewType, new ComplexNotebookProviderInfo(viewType, controller, extensionData));\n\t\tif (controller.viewOptions && !this._notebookProviderInfoStore.get(viewType)) {\n\t\t\t// register this content provider to the static contribution, if it does not exist\n\t\t\tconst info = new NotebookProviderInfo({\n\t\t\t\tdisplayName: controller.viewOptions.displayName,\n\t\t\t\tid: viewType,\n\t\t\t\tpriority: ContributedEditorPriority.default,\n\t\t\t\tselectors: [],\n\t\t\t\tproviderExtensionId: extensionData.id.value,\n\t\t\t\tproviderDescription: extensionData.description,\n\t\t\t\tproviderDisplayName: extensionData.id.value,\n\t\t\t\tproviderExtensionLocation: URI.revive(extensionData.location),\n\t\t\t\tdynamicContribution: true,\n\t\t\t\texclusive: controller.viewOptions.exclusive\n\t\t\t});\n\n\t\t\tinfo.update({ selectors: controller.viewOptions.filenamePattern });\n\t\t\tinfo.update({ options: controller.options });\n\t\t\tthis._notebookProviderInfoStore.add(info);\n\t\t}\n\n\t\tthis._notebookProviderInfoStore.get(viewType)?.update({ options: controller.options });\n\n\t\tthis._onDidChangeEditorTypes.fire();\n\t\treturn toDisposable(() => {\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t});\n\t}\n\n\tregisterNotebookSerializer(viewType: string, extensionData: NotebookExtensionDescription, serializer: INotebookSerializer): IDisposable {\n\t\tthis._registerProviderData(viewType, new SimpleNotebookProviderInfo(viewType, serializer, extensionData));\n\t\treturn toDisposable(() => {\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t});\n\t}\n\n\tasync withNotebookDataProvider(resource: URI, viewType?: string): Promise<ComplexNotebookProviderInfo | SimpleNotebookProviderInfo> {\n\t\tconst providers = this._notebookProviderInfoStore.getContributedNotebook(resource);\n\t\t// If we have a viewtype specified we want that data provider, as the resource won't always map correctly\n\t\tconst selected = viewType ? providers.find(p => p.id === viewType) : providers[0];\n\t\tif (!selected) {\n\t\t\tthrow new Error(`NO contribution for resource: '${resource.toString()}'`);\n\t\t}\n\t\tawait this.canResolve(selected.id);\n\t\tconst result = this._notebookProviders.get(selected.id);\n\t\tif (!result) {\n\t\t\tthrow new Error(`NO provider registered for view type: '${selected.id}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetRendererInfo(rendererId: string): INotebookRendererInfo | undefined {\n\t\treturn this._notebookRenderersInfoStore.get(rendererId);\n\t}\n\n\tupdateMimePreferredRenderer(mimeType: string, rendererId: string): void {\n\t\tthis._notebookRenderersInfoStore.setPreferred(mimeType, rendererId);\n\t}\n\n\tgetMarkupRendererInfo(): INotebookMarkupRendererInfo[] {\n\t\treturn Array.from(this._markdownRenderersInfos);\n\t}\n\n\t// --- notebook documents: create, destory, retrieve, enumerate\n\n\tcreateNotebookTextModel(viewType: string, uri: URI, data: NotebookDataDto, transientOptions: TransientOptions): NotebookTextModel {\n\t\tif (this._models.has(uri)) {\n\t\t\tthrow new Error(`notebook for ${uri} already exists`);\n\t\t}\n\t\tconst notebookModel = this._instantiationService.createInstance(NotebookTextModel, viewType, uri, data.cells, data.metadata, transientOptions);\n\t\tthis._models.set(uri, new ModelData(notebookModel, this._onWillDisposeDocument.bind(this)));\n\t\tthis._onDidCreateNotebookDocument.fire(notebookModel);\n\t\tthis._onDidAddNotebookDocument.fire(notebookModel);\n\t\treturn notebookModel;\n\t}\n\n\tgetNotebookTextModel(uri: URI): NotebookTextModel | undefined {\n\t\treturn this._models.get(uri)?.model;\n\t}\n\n\tgetNotebookTextModels(): Iterable<NotebookTextModel> {\n\t\treturn Iterable.map(this._models.values(), data => data.model);\n\t}\n\n\tlistNotebookDocuments(): NotebookTextModel[] {\n\t\treturn [...this._models].map(e => e[1].model);\n\t}\n\n\tprivate _onWillDisposeDocument(model: INotebookTextModel): void {\n\t\tconst modelData = this._models.get(model.uri);\n\t\tif (modelData) {\n\t\t\tthis._models.delete(model.uri);\n\t\t\tmodelData.dispose();\n\t\t\tthis._onDidRemoveNotebookDocument.fire(modelData.model);\n\t\t}\n\t}\n\n\tgetMimeTypeInfo(textModel: NotebookTextModel, kernelProvides: readonly string[] | undefined, output: IOutputDto): readonly IOrderedMimeType[] {\n\n\t\tconst mimeTypeSet = new Set<string>();\n\t\tlet mimeTypes: string[] = [];\n\t\toutput.outputs.forEach(op => {\n\t\t\tif (!mimeTypeSet.has(op.mime)) {\n\t\t\t\tmimeTypeSet.add(op.mime);\n\t\t\t\tmimeTypes.push(op.mime);\n\t\t\t}\n\t\t});\n\t\tconst coreDisplayOrder = this._displayOrder;\n\t\tconst sorted = sortMimeTypes(mimeTypes, coreDisplayOrder?.userOrder ?? [], coreDisplayOrder?.defaultOrder ?? []);\n\n\t\tconst orderMimeTypes: IOrderedMimeType[] = [];\n\n\t\tsorted.forEach(mimeType => {\n\t\t\tconst handlers = this._findBestMatchedRenderer(mimeType, kernelProvides);\n\n\t\t\tif (handlers.length) {\n\t\t\t\tconst handler = handlers[0];\n\n\t\t\t\torderMimeTypes.push({\n\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\trendererId: handler.id,\n\t\t\t\t\tisTrusted: textModel.metadata.trusted\n\t\t\t\t});\n\n\t\t\t\tfor (let i = 1; i < handlers.length; i++) {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\trendererId: handlers[i].id,\n\t\t\t\t\t\tisTrusted: textModel.metadata.trusted\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (mimeTypeSupportedByCore(mimeType)) {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\trendererId: BUILTIN_RENDERER_ID,\n\t\t\t\t\t\tisTrusted: mimeTypeIsAlwaysSecure(mimeType) || textModel.metadata.trusted\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (mimeTypeSupportedByCore(mimeType)) {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\trendererId: BUILTIN_RENDERER_ID,\n\t\t\t\t\t\tisTrusted: mimeTypeIsAlwaysSecure(mimeType) || textModel.metadata.trusted\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\trendererId: RENDERER_NOT_AVAILABLE,\n\t\t\t\t\t\tisTrusted: textModel.metadata.trusted\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn orderMimeTypes;\n\t}\n\n\tprivate _findBestMatchedRenderer(mimeType: string, kernelProvides: readonly string[] | undefined): readonly NotebookOutputRendererInfo[] {\n\t\treturn this._notebookRenderersInfoStore.getContributedRenderer(mimeType, kernelProvides);\n\t}\n\n\tgetContributedNotebookProviders(resource?: URI): readonly NotebookProviderInfo[] {\n\t\tif (resource) {\n\t\t\treturn this._notebookProviderInfoStore.getContributedNotebook(resource);\n\t\t}\n\n\t\treturn [...this._notebookProviderInfoStore];\n\t}\n\n\tgetContributedNotebookProvider(viewType: string): NotebookProviderInfo | undefined {\n\t\treturn this._notebookProviderInfoStore.get(viewType);\n\t}\n\n\tgetNotebookProviderResourceRoots(): URI[] {\n\t\tconst ret: URI[] = [];\n\t\tthis._notebookProviders.forEach(val => {\n\t\t\tret.push(URI.revive(val.extensionData.location));\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\t// --- copy & paste\n\n\tsetToCopy(items: NotebookCellTextModel[], isCopy: boolean) {\n\t\tthis._cutItems = items;\n\t\tthis._lastClipboardIsCopy = isCopy;\n\t}\n\n\tgetToCopy(): { items: NotebookCellTextModel[], isCopy: boolean; } | undefined {\n\t\tif (this._cutItems) {\n\t\t\treturn { items: this._cutItems, isCopy: this._lastClipboardIsCopy };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n}\n"]}