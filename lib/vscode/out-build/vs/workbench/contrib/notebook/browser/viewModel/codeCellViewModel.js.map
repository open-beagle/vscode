{"version":3,"file":"codeCellViewModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as UUID from 'vs/base/common/uuid';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { BOTTOM_CELL_TOOLBAR_GAP, BOTTOM_CELL_TOOLBAR_HEIGHT, CELL_BOTTOM_MARGIN, CELL_RIGHT_MARGIN, CELL_RUN_GUTTER, CELL_TOP_MARGIN, CODE_CELL_LEFT_MARGIN, COLLAPSED_INDICATOR_HEIGHT, EDITOR_BOTTOM_PADDING, EDITOR_TOOLBAR_HEIGHT } from 'vs/workbench/contrib/notebook/browser/constants';\nimport { CellEditState, CellFindMatch, CodeCellLayoutChangeEvent, CodeCellLayoutInfo, CodeCellLayoutState, getEditorTopPadding, ICellOutputViewModel, ICellViewModel, NotebookLayoutInfo } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellOutputViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/cellOutputViewModel';\nimport { NotebookEventDispatcher } from 'vs/workbench/contrib/notebook/browser/viewModel/eventDispatcher';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { CellKind, INotebookSearchOptions, NotebookCellOutputsSplice } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { BaseCellViewModel } from './baseCellViewModel';\n\nexport class CodeCellViewModel extends BaseCellViewModel implements ICellViewModel {\n\treadonly cellKind = CellKind.Code;\n\tprotected readonly _onDidChangeOutputs = new Emitter<NotebookCellOutputsSplice[]>();\n\treadonly onDidChangeOutputs = this._onDidChangeOutputs.event;\n\tprivate readonly _onDidRemoveOutputs = new Emitter<readonly ICellOutputViewModel[]>();\n\treadonly onDidRemoveOutputs = this._onDidRemoveOutputs.event;\n\tprivate readonly _onDidHideInput = new Emitter<void>();\n\treadonly onDidHideInput = this._onDidHideInput.event;\n\tprivate readonly _onDidHideOutputs = new Emitter<readonly ICellOutputViewModel[]>();\n\treadonly onDidHideOutputs = this._onDidHideOutputs.event;\n\tprivate _outputCollection: number[] = [];\n\n\tprivate _outputsTop: PrefixSumComputer | null = null;\n\n\tprotected readonly _onDidChangeLayout = new Emitter<CodeCellLayoutChangeEvent>();\n\treadonly onDidChangeLayout = this._onDidChangeLayout.event;\n\n\tprivate _editorHeight = 0;\n\tset editorHeight(height: number) {\n\t\tthis._editorHeight = height;\n\n\t\tthis.layoutChange({ editorHeight: true }, 'CodeCellViewModel#editorHeight');\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error('editorHeight is write-only');\n\t}\n\n\tprivate _hoveringOutput: boolean = false;\n\tpublic get outputIsHovered(): boolean {\n\t\treturn this._hoveringOutput;\n\t}\n\n\tpublic set outputIsHovered(v: boolean) {\n\t\tthis._hoveringOutput = v;\n\t\tthis._onDidChangeState.fire({ outputIsHoveredChanged: true });\n\t}\n\n\tprivate _focusOnOutput: boolean = false;\n\tpublic get outputIsFocused(): boolean {\n\t\treturn this._focusOnOutput;\n\t}\n\n\tpublic set outputIsFocused(v: boolean) {\n\t\tthis._focusOnOutput = v;\n\t\tthis._onDidChangeState.fire({ outputIsFocusedChanged: true });\n\t}\n\n\tprivate _outputMinHeight: number = 0;\n\n\tprivate get outputMinHeight() {\n\t\treturn this._outputMinHeight;\n\t}\n\n\t/**\n\t * The minimum height of the output region. It's only set to non-zero temporarily when replacing an output with a new one.\n\t * It's reset to 0 when the new output is rendered, or in one second.\n\t */\n\tprivate set outputMinHeight(newMin: number) {\n\t\tthis._outputMinHeight = newMin;\n\t}\n\n\tprivate _layoutInfo: CodeCellLayoutInfo;\n\n\tget layoutInfo() {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate _outputViewModels: ICellOutputViewModel[];\n\n\tget outputsViewModels() {\n\t\treturn this._outputViewModels;\n\t}\n\n\tconstructor(\n\t\tviewType: string,\n\t\tmodel: NotebookCellTextModel,\n\t\tinitialNotebookLayoutInfo: NotebookLayoutInfo | null,\n\t\treadonly eventDispatcher: NotebookEventDispatcher,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@ITextModelService modelService: ITextModelService,\n\t) {\n\t\tsuper(viewType, model, UUID.generateUuid(), configurationService, modelService);\n\t\tthis._outputViewModels = this.model.outputs.map(output => new CellOutputViewModel(this, output, this._notebookService));\n\n\t\tthis._register(this.model.onDidChangeOutputs((splices) => {\n\t\t\tconst removedOutputs: ICellOutputViewModel[] = [];\n\t\t\tsplices.reverse().forEach(splice => {\n\t\t\t\tthis._outputCollection.splice(splice[0], splice[1], ...splice[2].map(() => 0));\n\t\t\t\tremovedOutputs.push(...this._outputViewModels.splice(splice[0], splice[1], ...splice[2].map(output => new CellOutputViewModel(this, output, this._notebookService))));\n\t\t\t});\n\n\t\t\tthis._outputsTop = null;\n\t\t\tthis._onDidChangeOutputs.fire(splices);\n\t\t\tthis._onDidRemoveOutputs.fire(removedOutputs);\n\t\t\tthis.layoutChange({ outputHeight: true }, 'CodeCellViewModel#model.onDidChangeOutputs');\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeMetadata(e => {\n\t\t\tif (this.metadata?.outputCollapsed) {\n\t\t\t\tthis._onDidHideOutputs.fire(this.outputsViewModels.slice(0));\n\t\t\t}\n\n\t\t\tif (this.metadata?.inputCollapsed) {\n\t\t\t\tthis._onDidHideInput.fire();\n\t\t\t}\n\t\t}));\n\n\t\tthis._outputCollection = new Array(this.model.outputs.length);\n\n\t\tthis._layoutInfo = {\n\t\t\tfontInfo: initialNotebookLayoutInfo?.fontInfo || null,\n\t\t\teditorHeight: 0,\n\t\t\teditorWidth: initialNotebookLayoutInfo ? this.computeEditorWidth(initialNotebookLayoutInfo.width) : 0,\n\t\t\toutputContainerOffset: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputShowMoreContainerHeight: 0,\n\t\t\toutputShowMoreContainerOffset: 0,\n\t\t\ttotalHeight: 0,\n\t\t\tindicatorHeight: 0,\n\t\t\tbottomToolbarOffset: 0,\n\t\t\tlayoutState: CodeCellLayoutState.Uninitialized\n\t\t};\n\t}\n\n\tprivate computeEditorWidth(outerWidth: number): number {\n\t\treturn outerWidth - (CODE_CELL_LEFT_MARGIN + CELL_RUN_GUTTER + CELL_RIGHT_MARGIN);\n\t}\n\n\tlayoutChange(state: CodeCellLayoutChangeEvent, source?: string) {\n\t\t// recompute\n\t\tthis._ensureOutputsTop();\n\t\tconst outputShowMoreContainerHeight = state.outputShowMoreContainerHeight ? state.outputShowMoreContainerHeight : this._layoutInfo.outputShowMoreContainerHeight;\n\t\tlet outputTotalHeight = Math.max(this._outputMinHeight, this.metadata?.outputCollapsed ? COLLAPSED_INDICATOR_HEIGHT : this._outputsTop!.getTotalValue());\n\n\t\tif (!this.metadata?.inputCollapsed) {\n\t\t\tlet newState: CodeCellLayoutState;\n\t\t\tlet editorHeight: number;\n\t\t\tlet totalHeight: number;\n\t\t\tif (!state.editorHeight && this._layoutInfo.layoutState === CodeCellLayoutState.FromCache && !state.outputHeight) {\n\t\t\t\t// No new editorHeight info - keep cached totalHeight and estimate editorHeight\n\t\t\t\teditorHeight = this.estimateEditorHeight(state.font?.lineHeight ?? this._layoutInfo.fontInfo?.lineHeight);\n\t\t\t\ttotalHeight = this._layoutInfo.totalHeight;\n\t\t\t\tnewState = CodeCellLayoutState.FromCache;\n\t\t\t} else if (state.editorHeight || this._layoutInfo.layoutState === CodeCellLayoutState.Measured) {\n\t\t\t\t// Editor has been measured\n\t\t\t\teditorHeight = this._editorHeight;\n\t\t\t\ttotalHeight = this.computeTotalHeight(this._editorHeight, outputTotalHeight, outputShowMoreContainerHeight);\n\t\t\t\tnewState = CodeCellLayoutState.Measured;\n\t\t\t} else {\n\t\t\t\teditorHeight = this.estimateEditorHeight(state.font?.lineHeight ?? this._layoutInfo.fontInfo?.lineHeight);\n\t\t\t\ttotalHeight = this.computeTotalHeight(editorHeight, outputTotalHeight, outputShowMoreContainerHeight);\n\t\t\t\tnewState = CodeCellLayoutState.Estimated;\n\t\t\t}\n\n\t\t\tconst statusbarHeight = this.getEditorStatusbarHeight();\n\t\t\tconst indicatorHeight = editorHeight + statusbarHeight + outputTotalHeight + outputShowMoreContainerHeight;\n\t\t\tconst outputContainerOffset = EDITOR_TOOLBAR_HEIGHT + CELL_TOP_MARGIN + editorHeight + statusbarHeight;\n\t\t\tconst outputShowMoreContainerOffset = totalHeight - BOTTOM_CELL_TOOLBAR_GAP - BOTTOM_CELL_TOOLBAR_HEIGHT / 2 - outputShowMoreContainerHeight;\n\t\t\tconst bottomToolbarOffset = totalHeight - BOTTOM_CELL_TOOLBAR_GAP - BOTTOM_CELL_TOOLBAR_HEIGHT / 2;\n\t\t\tconst editorWidth = state.outerWidth !== undefined ? this.computeEditorWidth(state.outerWidth) : this._layoutInfo?.editorWidth;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font ?? this._layoutInfo.fontInfo ?? null,\n\t\t\t\teditorHeight,\n\t\t\t\teditorWidth,\n\t\t\t\toutputContainerOffset,\n\t\t\t\toutputTotalHeight,\n\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\toutputShowMoreContainerOffset,\n\t\t\t\ttotalHeight,\n\t\t\t\tindicatorHeight,\n\t\t\t\tbottomToolbarOffset,\n\t\t\t\tlayoutState: newState\n\t\t\t};\n\t\t} else {\n\t\t\toutputTotalHeight = Math.max(this._outputMinHeight, this.metadata?.inputCollapsed && this.metadata.outputCollapsed ? 0 : outputTotalHeight);\n\t\t\tconst indicatorHeight = COLLAPSED_INDICATOR_HEIGHT + outputTotalHeight + outputShowMoreContainerHeight;\n\t\t\tconst outputContainerOffset = CELL_TOP_MARGIN + COLLAPSED_INDICATOR_HEIGHT;\n\t\t\tconst totalHeight = CELL_TOP_MARGIN + COLLAPSED_INDICATOR_HEIGHT + CELL_BOTTOM_MARGIN + BOTTOM_CELL_TOOLBAR_GAP + outputTotalHeight + outputShowMoreContainerHeight;\n\t\t\tconst outputShowMoreContainerOffset = totalHeight - BOTTOM_CELL_TOOLBAR_GAP - BOTTOM_CELL_TOOLBAR_HEIGHT / 2 - outputShowMoreContainerHeight;\n\t\t\tconst bottomToolbarOffset = totalHeight - BOTTOM_CELL_TOOLBAR_GAP - BOTTOM_CELL_TOOLBAR_HEIGHT / 2;\n\t\t\tconst editorWidth = state.outerWidth !== undefined ? this.computeEditorWidth(state.outerWidth) : this._layoutInfo?.editorWidth;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font ?? this._layoutInfo.fontInfo ?? null,\n\t\t\t\teditorHeight: this._layoutInfo.editorHeight,\n\t\t\t\teditorWidth,\n\t\t\t\toutputContainerOffset,\n\t\t\t\toutputTotalHeight,\n\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\toutputShowMoreContainerOffset,\n\t\t\t\ttotalHeight,\n\t\t\t\tindicatorHeight,\n\t\t\t\tbottomToolbarOffset,\n\t\t\t\tlayoutState: this._layoutInfo.layoutState\n\t\t\t};\n\t\t}\n\n\t\tif (state.editorHeight || state.outputHeight) {\n\t\t\tstate.totalHeight = true;\n\t\t}\n\n\t\tstate.source = source;\n\n\t\tthis._fireOnDidChangeLayout(state);\n\t}\n\n\tprivate _fireOnDidChangeLayout(state: CodeCellLayoutChangeEvent) {\n\t\tthis._onDidChangeLayout.fire(state);\n\t}\n\n\toverride restoreEditorViewState(editorViewStates: editorCommon.ICodeEditorViewState | null, totalHeight?: number) {\n\t\tsuper.restoreEditorViewState(editorViewStates);\n\t\tif (totalHeight !== undefined && this._layoutInfo.layoutState !== CodeCellLayoutState.Measured) {\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: this._layoutInfo.fontInfo,\n\t\t\t\teditorHeight: this._layoutInfo.editorHeight,\n\t\t\t\teditorWidth: this._layoutInfo.editorWidth,\n\t\t\t\toutputContainerOffset: this._layoutInfo.outputContainerOffset,\n\t\t\t\toutputTotalHeight: this._layoutInfo.outputTotalHeight,\n\t\t\t\toutputShowMoreContainerHeight: this._layoutInfo.outputShowMoreContainerHeight,\n\t\t\t\toutputShowMoreContainerOffset: this._layoutInfo.outputShowMoreContainerOffset,\n\t\t\t\ttotalHeight: totalHeight,\n\t\t\t\tindicatorHeight: this._layoutInfo.indicatorHeight,\n\t\t\t\tbottomToolbarOffset: this._layoutInfo.bottomToolbarOffset,\n\t\t\t\tlayoutState: CodeCellLayoutState.FromCache\n\t\t\t};\n\t\t}\n\t}\n\n\thasDynamicHeight() {\n\t\t// CodeCellVM always measures itself and controls its cell's height\n\t\treturn false;\n\t}\n\n\tfirstLine(): string {\n\t\treturn this.getText().split('\\n')[0];\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CodeCellLayoutState.Uninitialized) {\n\t\t\tconst editorHeight = this.estimateEditorHeight(lineHeight);\n\t\t\treturn this.computeTotalHeight(editorHeight, 0, 0);\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprivate estimateEditorHeight(lineHeight: number | undefined = 20): number {\n\t\tlet hasScrolling = false;\n\t\tif (this.layoutInfo.fontInfo) {\n\t\t\tfor (let i = 0; i < this.lineCount; i++) {\n\t\t\t\tconst max = this.textBuffer.getLineLastNonWhitespaceColumn(i + 1);\n\t\t\t\tconst estimatedWidth = max * (this.layoutInfo.fontInfo.typicalHalfwidthCharacterWidth + this.layoutInfo.fontInfo.letterSpacing);\n\t\t\t\tif (estimatedWidth > this.layoutInfo.editorWidth) {\n\t\t\t\t\thasScrolling = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst verticalScrollbarHeight = hasScrolling ? 12 : 0; // take zoom level into account\n\t\treturn this.lineCount * lineHeight + getEditorTopPadding() + EDITOR_BOTTOM_PADDING + verticalScrollbarHeight;\n\t}\n\n\tprivate computeTotalHeight(editorHeight: number, outputsTotalHeight: number, outputShowMoreContainerHeight: number): number {\n\t\treturn EDITOR_TOOLBAR_HEIGHT + CELL_TOP_MARGIN + editorHeight + this.getEditorStatusbarHeight() + outputsTotalHeight + outputShowMoreContainerHeight + BOTTOM_CELL_TOOLBAR_GAP + CELL_BOTTOM_MARGIN;\n\t}\n\n\tprotected onDidChangeTextModelContent(): void {\n\t\tif (this.getEditState() !== CellEditState.Editing) {\n\t\t\tthis.updateEditState(CellEditState.Editing, 'onDidChangeTextModelContent');\n\t\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t\t}\n\t}\n\n\tonDeselect() {\n\t\tthis.updateEditState(CellEditState.Preview, 'onDeselect');\n\t}\n\n\tupdateOutputShowMoreContainerHeight(height: number) {\n\t\tthis.layoutChange({ outputShowMoreContainerHeight: height }, 'CodeCellViewModel#updateOutputShowMoreContainerHeight');\n\t}\n\n\tupdateOutputMinHeight(height: number) {\n\t\tthis.outputMinHeight = height;\n\t}\n\n\tupdateOutputHeight(index: number, height: number, source?: string) {\n\t\tif (index >= this._outputCollection.length) {\n\t\t\tthrow new Error('Output index out of range!');\n\t\t}\n\n\t\tthis._ensureOutputsTop();\n\t\tthis._outputCollection[index] = height;\n\t\tif (this._outputsTop!.changeValue(index, height)) {\n\t\t\tthis.layoutChange({ outputHeight: true }, source);\n\t\t}\n\t}\n\n\tgetOutputOffsetInContainer(index: number) {\n\t\tthis._ensureOutputsTop();\n\n\t\tif (index >= this._outputCollection.length) {\n\t\t\tthrow new Error('Output index out of range!');\n\t\t}\n\n\t\treturn this._outputsTop!.getAccumulatedValue(index - 1);\n\t}\n\n\tgetOutputOffset(index: number): number {\n\t\treturn this.layoutInfo.outputContainerOffset + this.getOutputOffsetInContainer(index);\n\t}\n\n\tspliceOutputHeights(start: number, deleteCnt: number, heights: number[]) {\n\t\tthis._ensureOutputsTop();\n\n\t\tthis._outputsTop!.removeValues(start, deleteCnt);\n\t\tif (heights.length) {\n\t\t\tconst values = new Uint32Array(heights.length);\n\t\t\tfor (let i = 0; i < heights.length; i++) {\n\t\t\t\tvalues[i] = heights[i];\n\t\t\t}\n\n\t\t\tthis._outputsTop!.insertValues(start, values);\n\t\t}\n\n\t\tthis.layoutChange({ outputHeight: true }, 'CodeCellViewModel#spliceOutputs');\n\t}\n\n\tprivate _ensureOutputsTop(): void {\n\t\tif (!this._outputsTop) {\n\t\t\tconst values = new Uint32Array(this._outputCollection.length);\n\t\t\tfor (let i = 0; i < this._outputCollection.length; i++) {\n\t\t\t\tvalues[i] = this._outputCollection[i];\n\t\t\t}\n\n\t\t\tthis._outputsTop = new PrefixSumComputer(values);\n\t\t}\n\t}\n\n\tprivate readonly _hasFindResult = this._register(new Emitter<boolean>());\n\tpublic readonly hasFindResult: Event<boolean> = this._hasFindResult.event;\n\n\tstartFind(value: string, options: INotebookSearchOptions): CellFindMatch | null {\n\t\tconst matches = super.cellStartFind(value, options);\n\n\t\tif (matches === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: this,\n\t\t\tmatches\n\t\t};\n\t}\n}\n"]}