{"version":3,"sources":["vs/workbench/contrib/update/browser/update.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAahG,MAAM,SAAS,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IAE9F,SAAS,CAAC,6BAA6B,CAAC,4BAAmB,mBAA0B,CAAC;IACtF,SAAS,CAAC,6BAA6B,CAAC,2BAAkB,mBAA0B,CAAC;IACrF,SAAS,CAAC,6BAA6B,CAAC,yCAAgC,mBAA0B,CAAC;IAEnG,MAAM,cAAc,GAAG,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC,CAAC;IAEhG,SAAS;IACT,cAAc;SACZ,uBAAuB,CAAC,8BAAoB,CAAC,IAAI,CAAC,sCAA6B,CAAC,EAAE,GAAG,iBAAO,CAAC,SAAS,sBAAsB,EAAE,iBAAO,CAAC,SAAS,CAAC,CAAC;IAEnJ,cAAc;SACZ,uBAAuB,CAAC,8BAAoB,CAAC,IAAI,CAAC,mCAA0B,CAAC,EAAE,GAAG,iBAAO,CAAC,SAAS,oBAAoB,EAAE,iBAAO,CAAC,SAAS,EAAE,6BAAoB,CAAC,SAAS,mBAAgB,CAAC,CAAC;IAE9L,OAAO;IACP,IAAI,sCAA6B,CAAC,QAAQ,EAAE;QAC3C,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,eAAe,EAAE;YACnD,KAAK,EAAE,WAAW;YAClB,OAAO,EAAE;gBACR,EAAE,EAAE,sCAA6B,CAAC,EAAE;gBACpC,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAA6D,CAA3D,CAA6D,EAA1D,EAAE,AAAyE,CAAC,eAA1D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;aAC3E;YACD,KAAK,EAAE,CAAC;SACR,CAAC,CAAC;KACH","file":"update.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/platform/update/common/update.config.contribution';\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor, MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { ShowCurrentReleaseNotesAction, ProductContribution, UpdateContribution, CheckForVSCodeUpdateAction, CONTEXT_UPDATE_STATE, SwitchProductQualityContribution } from 'vs/workbench/contrib/update/browser/update';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport product from 'vs/platform/product/common/product';\nimport { StateType } from 'vs/platform/update/common/update';\n\nconst workbench = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\n\nworkbench.registerWorkbenchContribution(ProductContribution, LifecyclePhase.Restored);\nworkbench.registerWorkbenchContribution(UpdateContribution, LifecyclePhase.Restored);\nworkbench.registerWorkbenchContribution(SwitchProductQualityContribution, LifecyclePhase.Restored);\n\nconst actionRegistry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\n// Editor\nactionRegistry\n\t.registerWorkbenchAction(SyncActionDescriptor.from(ShowCurrentReleaseNotesAction), `${product.nameShort}: Show Release Notes`, product.nameShort);\n\nactionRegistry\n\t.registerWorkbenchAction(SyncActionDescriptor.from(CheckForVSCodeUpdateAction), `${product.nameShort}: Check for Update`, product.nameShort, CONTEXT_UPDATE_STATE.isEqualTo(StateType.Idle));\n\n// Menu\nif (ShowCurrentReleaseNotesAction.AVAILABE) {\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '1_welcome',\n\t\tcommand: {\n\t\t\tid: ShowCurrentReleaseNotesAction.ID,\n\t\t\ttitle: localize({ key: 'miReleaseNotes', comment: ['&& denotes a mnemonic'] }, \"&&Release Notes\")\n\t\t},\n\t\torder: 4\n\t});\n}\n"]}