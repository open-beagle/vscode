{"version":3,"file":"themeing.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webview/browser/themeing.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createMemoizer } from 'vs/base/common/decorators';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { EDITOR_FONT_DEFAULTS, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport * as colorRegistry from 'vs/platform/theme/common/colorRegistry';\nimport { IColorTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Emitter } from 'vs/base/common/event';\nimport { DEFAULT_FONT_FAMILY } from 'vs/workbench/browser/style';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { WebviewStyles } from 'vs/workbench/contrib/webview/browser/webview';\n\ninterface WebviewThemeData {\n\treadonly activeTheme: string;\n\treadonly themeLabel: string;\n\treadonly styles: Readonly<WebviewStyles>;\n}\n\nexport class WebviewThemeDataProvider extends Disposable {\n\n\n\tprivate static readonly MEMOIZER = createMemoizer();\n\n\tprivate readonly _onThemeDataChanged = this._register(new Emitter<void>());\n\tpublic readonly onThemeDataChanged = this._onThemeDataChanged.event;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis.reset();\n\t\t}));\n\n\t\tconst webviewConfigurationKeys = ['editor.fontFamily', 'editor.fontWeight', 'editor.fontSize'];\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (webviewConfigurationKeys.some(key => e.affectsConfiguration(key))) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic getTheme(): IColorTheme {\n\t\treturn this._themeService.getColorTheme();\n\t}\n\n\t@WebviewThemeDataProvider.MEMOIZER\n\tpublic getWebviewThemeData(): WebviewThemeData {\n\t\tconst configuration = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tconst editorFontFamily = configuration.fontFamily || EDITOR_FONT_DEFAULTS.fontFamily;\n\t\tconst editorFontWeight = configuration.fontWeight || EDITOR_FONT_DEFAULTS.fontWeight;\n\t\tconst editorFontSize = configuration.fontSize || EDITOR_FONT_DEFAULTS.fontSize;\n\n\t\tconst theme = this._themeService.getColorTheme();\n\t\tconst exportedColors = colorRegistry.getColorRegistry().getColors().reduce((colors, entry) => {\n\t\t\tconst color = theme.getColor(entry.id);\n\t\t\tif (color) {\n\t\t\t\tcolors['vscode-' + entry.id.replace('.', '-')] = color.toString();\n\t\t\t}\n\t\t\treturn colors;\n\t\t}, {} as { [key: string]: string; });\n\n\t\tconst styles = {\n\t\t\t'vscode-font-family': DEFAULT_FONT_FAMILY,\n\t\t\t'vscode-font-weight': 'normal',\n\t\t\t'vscode-font-size': '13px',\n\t\t\t'vscode-editor-font-family': editorFontFamily,\n\t\t\t'vscode-editor-font-weight': editorFontWeight,\n\t\t\t'vscode-editor-font-size': editorFontSize + 'px',\n\t\t\t...exportedColors\n\t\t};\n\n\t\tconst activeTheme = ApiThemeClassName.fromTheme(theme);\n\t\treturn { styles, activeTheme, themeLabel: theme.label, };\n\t}\n\n\tprivate reset() {\n\t\tWebviewThemeDataProvider.MEMOIZER.clear();\n\t\tthis._onThemeDataChanged.fire();\n\t}\n}\n\nenum ApiThemeClassName {\n\tlight = 'vscode-light',\n\tdark = 'vscode-dark',\n\thighContrast = 'vscode-high-contrast'\n}\n\nnamespace ApiThemeClassName {\n\texport function fromTheme(theme: IColorTheme): ApiThemeClassName {\n\t\tswitch (theme.type) {\n\t\t\tcase ColorScheme.LIGHT: return ApiThemeClassName.light;\n\t\t\tcase ColorScheme.DARK: return ApiThemeClassName.dark;\n\t\t\tdefault: return ApiThemeClassName.highContrast;\n\t\t}\n\t}\n}\n"]}