{"version":3,"file":"webviewElement.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webview/browser/webviewElement.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener } from 'vs/base/browser/dom';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ITunnelService } from 'vs/platform/remote/common/tunnel';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { BaseWebview, WebviewMessageChannels } from 'vs/workbench/contrib/webview/browser/baseWebviewElement';\nimport { WebviewThemeDataProvider } from 'vs/workbench/contrib/webview/browser/themeing';\nimport { Webview, WebviewContentOptions, WebviewExtensionDescription, WebviewOptions } from 'vs/workbench/contrib/webview/browser/webview';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\nexport class IFrameWebview extends BaseWebview<HTMLIFrameElement> implements Webview {\n\n\tprivate _confirmBeforeClose: string;\n\n\tconstructor(\n\t\tid: string,\n\t\toptions: WebviewOptions,\n\t\tcontentOptions: WebviewContentOptions,\n\t\textension: WebviewExtensionDescription | undefined,\n\t\twebviewThemeDataProvider: WebviewThemeDataProvider,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ITunnelService tunnelService: ITunnelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tsuper(id, options, contentOptions, extension, webviewThemeDataProvider, {\n\t\t\tnotificationService,\n\t\t\tlogService,\n\t\t\ttelemetryService,\n\t\t\tenvironmentService,\n\t\t\trequestService,\n\t\t\tfileService,\n\t\t\ttunnelService,\n\t\t\tremoteAuthorityResolverService\n\t\t});\n\n\t\t/* __GDPR__\n\t\t\t\"webview.createWebview\" : {\n\t\t\t\t\"extension\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"s\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t}\n\t\t*/\n\t\ttelemetryService.publicLog('webview.createWebview', {\n\t\t\textension: extension?.id.value,\n\t\t\twebviewElementType: 'iframe',\n\t\t});\n\n\t\tthis._confirmBeforeClose = configurationService.getValue<string>('window.confirmBeforeClose');\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('window.confirmBeforeClose')) {\n\t\t\t\tthis._confirmBeforeClose = configurationService.getValue('window.confirmBeforeClose');\n\t\t\t\tthis._send(WebviewMessageChannels.setConfirmBeforeClose, this._confirmBeforeClose);\n\t\t\t}\n\t\t}));\n\n\t\tthis.initElement(extension, options);\n\t}\n\n\tprotected createElement(options: WebviewOptions, _contentOptions: WebviewContentOptions) {\n\t\t// Do not start loading the webview yet.\n\t\t// Wait the end of the ctor when all listeners have been hooked up.\n\t\tconst element = document.createElement('iframe');\n\t\telement.className = `webview ${options.customClasses || ''}`;\n\t\telement.sandbox.add('allow-scripts', 'allow-same-origin', 'allow-forms', 'allow-pointer-lock', 'allow-downloads');\n\t\telement.setAttribute('allow', 'clipboard-read; clipboard-write;');\n\t\telement.style.border = 'none';\n\t\telement.style.width = '100%';\n\t\telement.style.height = '100%';\n\n\t\telement.focus = () => {\n\t\t\tthis.doFocus();\n\t\t};\n\n\t\treturn element;\n\t}\n\n\tprotected elementFocusImpl() {\n\t\tthis.element?.contentWindow?.focus();\n\t}\n\n\tprotected initElement(extension: WebviewExtensionDescription | undefined, options: WebviewOptions, extraParams?: object) {\n\t\tconst params = {\n\t\t\tid: this.id,\n\t\t\textensionId: extension?.id.value ?? '', // The extensionId and purpose in the URL are used for filtering in js-debug:\n\t\t\tpurpose: options.purpose,\n\t\t\tserviceWorkerFetchIgnoreSubdomain: options.serviceWorkerFetchIgnoreSubdomain,\n\t\t\t...extraParams\n\t\t} as const;\n\n\t\tconst queryString = (Object.keys(params) as Array<keyof typeof params>)\n\t\t\t.map((key) => `${key}=${encodeURIComponent(params[key]!)}`)\n\t\t\t.join('&');\n\n\t\tthis.element!.setAttribute('src', `${this.webviewContentEndpoint}/index.html?${queryString}`);\n\t}\n\n\tprotected get webviewContentEndpoint(): string {\n\t\tconst endpoint = this._environmentService.webviewExternalEndpoint!.replace('{{uuid}}', this.id);\n\t\tif (endpoint[endpoint.length - 1] === '/') {\n\t\t\treturn endpoint.slice(0, endpoint.length - 1);\n\t\t}\n\t\treturn endpoint;\n\t}\n\n\tprotected get webviewResourceEndpoint(): string {\n\t\treturn this.webviewContentEndpoint;\n\t}\n\n\tpublic mountTo(parent: HTMLElement) {\n\t\tif (this.element) {\n\t\t\tparent.appendChild(this.element);\n\t\t}\n\t}\n\n\tprotected get extraContentOptions(): any {\n\t\treturn {\n\t\t\tconfirmBeforeClose: this._confirmBeforeClose,\n\t\t};\n\t}\n\n\tshowFind(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\thideFind(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\trunFindAction(previous: boolean): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tprotected doPostMessage(channel: string, data?: any): void {\n\t\tif (this.element) {\n\t\t\tthis.element.contentWindow!.postMessage({ channel, args: data }, '*');\n\t\t}\n\t}\n\n\tprotected on<T = unknown>(channel: WebviewMessageChannels, handler: (data: T) => void): IDisposable {\n\t\treturn addDisposableListener(window, 'message', e => {\n\t\t\tif (!e || !e.data || e.data.target !== this.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.data.channel === channel) {\n\t\t\t\thandler(e.data.data);\n\t\t\t}\n\t\t});\n\t}\n}\n"]}