{"version":3,"file":"webviewUri.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webview/common/webviewUri.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,SAAgB,YAAY,CAC3B,kBAAgD,EAChD,IAAY,EACZ,QAAa;QAEb,MAAM,GAAG,GAAG,kBAAkB,CAAC,mBAAmB;YACjD,6FAA6F;YAC7F,gGAAgG;aAC/F,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;aAClE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC5B,OAAO,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAXD,oCAWC;IAED,SAAS,aAAa,CAAC,QAAa;QACnC,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\n\nexport function asWebviewUri(\n\tenvironmentService: IWorkbenchEnvironmentService,\n\tuuid: string,\n\tresource: URI,\n): URI {\n\tconst uri = environmentService.webviewResourceRoot\n\t\t// Make sure we preserve the scheme of the resource but convert it into a normal path segment\n\t\t// The scheme is important as we need to know if we are requesting a local or a remote resource.\n\t\t.replace('{{resource}}', resource.scheme + withoutScheme(resource))\n\t\t.replace('{{uuid}}', uuid);\n\treturn URI.parse(uri);\n}\n\nfunction withoutScheme(resource: URI): string {\n\treturn resource.toString().replace(/^\\S+?:/, '');\n}\n"]}