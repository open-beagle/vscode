{"version":3,"file":"markersFilterOptions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/markers/browser/markersFilterOptions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFilter, matchesFuzzy, matchesFuzzy2 } from 'vs/base/common/filters';\nimport { IExpression, splitGlobAware, getEmptyExpression, ParsedExpression, parse } from 'vs/base/common/glob';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { relativePath } from 'vs/base/common/resources';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }>;\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[],\n\t\turiIdentityService: IUriIdentityService\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tthis.expressionsByRoot = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>(uri => uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport class FilterOptions {\n\n\tstatic readonly _filter: IFilter = matchesFuzzy2;\n\tstatic readonly _messageFilter: IFilter = matchesFuzzy;\n\n\treadonly showWarnings: boolean = false;\n\treadonly showErrors: boolean = false;\n\treadonly showInfos: boolean = false;\n\treadonly textFilter: { readonly text: string, readonly negate: boolean };\n\treadonly excludesMatcher: ResourceGlobMatcher;\n\treadonly includesMatcher: ResourceGlobMatcher;\n\n\tstatic EMPTY(uriIdentityService: IUriIdentityService) { return new FilterOptions('', [], false, false, false, uriIdentityService); }\n\n\tconstructor(\n\t\treadonly filter: string,\n\t\tfilesExclude: { root: URI, expression: IExpression }[] | IExpression,\n\t\tshowWarnings: boolean,\n\t\tshowErrors: boolean,\n\t\tshowInfos: boolean,\n\t\turiIdentityService: IUriIdentityService\n\t) {\n\t\tfilter = filter.trim();\n\t\tthis.showWarnings = showWarnings;\n\t\tthis.showErrors = showErrors;\n\t\tthis.showInfos = showInfos;\n\n\t\tconst filesExcludeByRoot = Array.isArray(filesExclude) ? filesExclude : [];\n\t\tconst excludesExpression: IExpression = Array.isArray(filesExclude) ? getEmptyExpression() : filesExclude;\n\n\t\tfor (const { expression } of filesExcludeByRoot) {\n\t\t\tfor (const pattern of Object.keys(expression)) {\n\t\t\t\tif (!pattern.endsWith('/**')) {\n\t\t\t\t\t// Append `/**` to pattern to match a parent folder #103631\n\t\t\t\t\texpression[`${strings.rtrim(pattern, '/')}/**`] = expression[pattern];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst negate = filter.startsWith('!');\n\t\tthis.textFilter = { text: (negate ? strings.ltrim(filter, '!') : filter).trim(), negate };\n\t\tconst includeExpression: IExpression = getEmptyExpression();\n\n\t\tif (filter) {\n\t\t\tconst filters = splitGlobAware(filter, ',').map(s => s.trim()).filter(s => !!s.length);\n\t\t\tfor (const f of filters) {\n\t\t\t\tif (f.startsWith('!')) {\n\t\t\t\t\tconst filterText = strings.ltrim(f, '!');\n\t\t\t\t\tif (filterText) {\n\t\t\t\t\t\tthis.setPattern(excludesExpression, filterText);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPattern(includeExpression, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.excludesMatcher = new ResourceGlobMatcher(excludesExpression, filesExcludeByRoot, uriIdentityService);\n\t\tthis.includesMatcher = new ResourceGlobMatcher(includeExpression, [], uriIdentityService);\n\t}\n\n\tprivate setPattern(expression: IExpression, pattern: string) {\n\t\tif (pattern[0] === '.') {\n\t\t\tpattern = '*' + pattern; // convert \".js\" to \"*.js\"\n\t\t}\n\t\texpression[`**/${pattern}/**`] = true;\n\t\texpression[`**/${pattern}`] = true;\n\t}\n}\n"]}