{"version":3,"file":"webviewEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webviewPanel/browser/webviewEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,YAAa,SAAQ,oBAAW;QAuB5C,YACiB,EAAU,EACV,QAAgB,EAChC,IAAY,EACZ,OAAuB,EACN,YAAgC;YAEjD,KAAK,EAAE,CAAC;YANQ,OAAE,GAAF,EAAE,CAAQ;YACV,aAAQ,GAAR,QAAQ,CAAQ;YAGf,iBAAY,GAAZ,YAAY,CAAoB;YAd1C,mBAAc,GAAG,KAAK,CAAC;YAiB9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACzB,CAAC;QA7BD,IAAoB,MAAM;YACzB,OAAO,YAAY,CAAC,MAAM,CAAC;QAC5B,CAAC;QAUD,IAAI,QAAQ;YACX,OAAO,SAAG,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,iBAAO,CAAC,YAAY;gBAC5B,IAAI,EAAE,yBAAyB,IAAI,CAAC,EAAE,EAAE;aACxC,CAAC,CAAC;QACJ,CAAC;QAcQ,OAAO;;YACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;oBACzB,MAAA,IAAI,CAAC,QAAQ,0CAAE,OAAO,EAAE,CAAC;iBACzB;aACD;YACD,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEe,OAAO;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAEe,QAAQ,CAAC,UAAsB;YAC9C,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC;QAEe,cAAc;YAC7B,OAAO,SAAS,CAAC;QAClB,CAAC;QAEM,OAAO,CAAC,KAAa;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAED,IAAW,OAAO;YACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAED,IAAW,SAAS;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAC/B,CAAC;QAED,IAAW,QAAQ;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QAED,IAAW,QAAQ,CAAC,KAA+B;YAClD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5C,CAAC;QAEe,OAAO,CAAC,KAAmB;YAC1C,OAAO,KAAK,KAAK,IAAI,CAAC;QACvB,CAAC;QAED,IAAW,KAAK;YACf,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAEM,WAAW,CAAC,KAAsB;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACrB,CAAC;QAEe,QAAQ;YACvB,OAAO,KAAK,CAAC;QACd,CAAC;QAES,QAAQ,CAAC,KAAmB;YACrC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,OAAO,KAAK,CAAC;QACd,CAAC;;IArGF,oCAsGC;IApGc,mBAAM,GAAG,gCAAgC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorInput, GroupIdentifier, IEditorInput, Verbosity } from 'vs/workbench/common/editor';\nimport { WebviewOverlay } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewIconManager, WebviewIcons } from 'vs/workbench/contrib/webviewPanel/browser/webviewIconManager';\n\nexport class WebviewInput extends EditorInput {\n\n\tpublic static typeId = 'workbench.editors.webviewInput';\n\n\tpublic override get typeId(): string {\n\t\treturn WebviewInput.typeId;\n\t}\n\n\tprivate _name: string;\n\tprivate _iconPath?: WebviewIcons;\n\tprivate _group?: GroupIdentifier;\n\n\tprivate _webview: WebviewOverlay;\n\n\tprivate _hasTransfered = false;\n\n\tget resource() {\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.webviewPanel,\n\t\t\tpath: `webview-panel/webview-${this.id}`\n\t\t});\n\t}\n\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tpublic readonly viewType: string,\n\t\tname: string,\n\t\twebview: WebviewOverlay,\n\t\tprivate readonly _iconManager: WebviewIconManager,\n\t) {\n\t\tsuper();\n\t\tthis._name = name;\n\t\tthis._webview = webview;\n\t}\n\n\toverride dispose() {\n\t\tif (!this.isDisposed()) {\n\t\t\tif (!this._hasTransfered) {\n\t\t\t\tthis._webview?.dispose();\n\t\t\t}\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tpublic override getName(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic override getTitle(_verbosity?: Verbosity): string {\n\t\treturn this.getName();\n\t}\n\n\tpublic override getDescription(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic setName(value: string): void {\n\t\tthis._name = value;\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tpublic get webview(): WebviewOverlay {\n\t\treturn this._webview;\n\t}\n\n\tpublic get extension() {\n\t\treturn this.webview.extension;\n\t}\n\n\tpublic get iconPath() {\n\t\treturn this._iconPath;\n\t}\n\n\tpublic set iconPath(value: WebviewIcons | undefined) {\n\t\tthis._iconPath = value;\n\t\tthis._iconManager.setIcons(this.id, value);\n\t}\n\n\tpublic override matches(other: IEditorInput): boolean {\n\t\treturn other === this;\n\t}\n\n\tpublic get group(): GroupIdentifier | undefined {\n\t\treturn this._group;\n\t}\n\n\tpublic updateGroup(group: GroupIdentifier): void {\n\t\tthis._group = group;\n\t}\n\n\tpublic override canSplit() {\n\t\treturn false;\n\t}\n\n\tprotected transfer(other: WebviewInput): WebviewInput | undefined {\n\t\tif (this._hasTransfered) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._hasTransfered = true;\n\t\tother._webview = this._webview;\n\t\treturn other;\n\t}\n}\n"]}