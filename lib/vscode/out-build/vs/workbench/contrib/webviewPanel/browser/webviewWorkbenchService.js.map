{"version":3,"file":"webviewWorkbenchService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { EditorActivation } from 'vs/platform/editor/common/editor';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { GroupIdentifier, IEditorInput } from 'vs/workbench/common/editor';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { IWebviewService, WebviewContentOptions, WebviewExtensionDescription, WebviewOptions, WebviewOverlay } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewIconManager, WebviewIcons } from 'vs/workbench/contrib/webviewPanel/browser/webviewIconManager';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ACTIVE_GROUP_TYPE, IEditorService, SIDE_GROUP_TYPE } from 'vs/workbench/services/editor/common/editorService';\nimport { WebviewInput } from './webviewEditorInput';\n\nexport const IWebviewWorkbenchService = createDecorator<IWebviewWorkbenchService>('webviewEditorService');\n\nexport interface ICreateWebViewShowOptions {\n\tgroup: IEditorGroup | GroupIdentifier | ACTIVE_GROUP_TYPE | SIDE_GROUP_TYPE;\n\tpreserveFocus: boolean;\n}\n\nexport interface IWebviewWorkbenchService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly iconManager: WebviewIconManager;\n\n\tcreateWebview(\n\t\tid: string,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tshowOptions: ICreateWebViewShowOptions,\n\t\twebviewOptions: WebviewOptions,\n\t\tcontentOptions: WebviewContentOptions,\n\t\textension: WebviewExtensionDescription | undefined,\n\t): WebviewInput;\n\n\treviveWebview(options: {\n\t\tid: string,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\ticonPath: WebviewIcons | undefined,\n\t\tstate: any,\n\t\twebviewOptions: WebviewOptions,\n\t\tcontentOptions: WebviewContentOptions,\n\t\textension: WebviewExtensionDescription | undefined,\n\t\tgroup: number | undefined\n\t}): WebviewInput;\n\n\trevealWebview(\n\t\twebview: WebviewInput,\n\t\tgroup: IEditorGroup,\n\t\tpreserveFocus: boolean\n\t): void;\n\n\tregisterResolver(\n\t\tresolver: WebviewResolver\n\t): IDisposable;\n\n\tshouldPersist(\n\t\tinput: WebviewInput\n\t): boolean;\n\n\tresolveWebview(\n\t\twebview: WebviewInput,\n\t): CancelablePromise<void>;\n\n\treadonly onDidChangeActiveWebviewEditor: Event<WebviewInput | undefined>;\n}\n\nexport interface WebviewResolver {\n\tcanResolve(\n\t\twebview: WebviewInput,\n\t): boolean;\n\n\tresolveWebview(\n\t\twebview: WebviewInput,\n\t\tcancellation: CancellationToken,\n\t): Promise<void>;\n}\n\nfunction canRevive(reviver: WebviewResolver, webview: WebviewInput): boolean {\n\treturn reviver.canResolve(webview);\n}\n\n\nexport class LazilyResolvedWebviewEditorInput extends WebviewInput {\n\n\t#resolved = false;\n\t#resolvePromise?: CancelablePromise<void>;\n\n\n\tconstructor(\n\t\tid: string,\n\t\tviewType: string,\n\t\tname: string,\n\t\twebview: WebviewOverlay,\n\t\t@IWebviewWorkbenchService private readonly _webviewWorkbenchService: IWebviewWorkbenchService,\n\t) {\n\t\tsuper(id, viewType, name, webview, _webviewWorkbenchService.iconManager);\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.#resolvePromise?.cancel();\n\t\tthis.#resolvePromise = undefined;\n\t}\n\n\t@memoize\n\tpublic override async resolve() {\n\t\tif (!this.#resolved) {\n\t\t\tthis.#resolved = true;\n\t\t\tthis.#resolvePromise = this._webviewWorkbenchService.resolveWebview(this);\n\t\t\ttry {\n\t\t\t\tawait this.#resolvePromise;\n\t\t\t} catch (e) {\n\t\t\t\tif (!isPromiseCanceledError(e)) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn super.resolve();\n\t}\n\n\tprotected override transfer(other: LazilyResolvedWebviewEditorInput): WebviewInput | undefined {\n\t\tif (!super.transfer(other)) {\n\t\t\treturn;\n\t\t}\n\n\t\tother.#resolved = this.#resolved;\n\t\treturn other;\n\t}\n}\n\n\nclass RevivalPool {\n\tprivate _awaitingRevival: Array<{ input: WebviewInput, resolve: () => void }> = [];\n\n\tpublic add(input: WebviewInput, resolve: () => void) {\n\t\tthis._awaitingRevival.push({ input, resolve });\n\t}\n\n\tpublic reviveFor(reviver: WebviewResolver, cancellation: CancellationToken) {\n\t\tconst toRevive = this._awaitingRevival.filter(({ input }) => canRevive(reviver, input));\n\t\tthis._awaitingRevival = this._awaitingRevival.filter(({ input }) => !canRevive(reviver, input));\n\n\t\tfor (const { input, resolve } of toRevive) {\n\t\t\treviver.resolveWebview(input, cancellation).then(resolve);\n\t\t}\n\t}\n}\n\n\nexport class WebviewEditorService extends Disposable implements IWebviewWorkbenchService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _revivers = new Set<WebviewResolver>();\n\tprivate readonly _revivalPool = new RevivalPool();\n\n\tprivate readonly _iconManager: WebviewIconManager;\n\n\tconstructor(\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tsuper();\n\n\t\tthis._iconManager = this._register(this._instantiationService.createInstance(WebviewIconManager));\n\n\t\tthis._register(_editorService.onDidActiveEditorChange(() => {\n\t\t\tthis.updateActiveWebview();\n\t\t}));\n\n\t\t// The user may have switched focus between two sides of a diff editor\n\t\tthis._register(_webviewService.onDidChangeActiveWebview(() => {\n\t\t\tthis.updateActiveWebview();\n\t\t}));\n\n\t\tthis.updateActiveWebview();\n\t}\n\n\tget iconManager() {\n\t\treturn this._iconManager;\n\t}\n\n\tprivate _activeWebview: WebviewInput | undefined;\n\n\tprivate readonly _onDidChangeActiveWebviewEditor = this._register(new Emitter<WebviewInput | undefined>());\n\tpublic readonly onDidChangeActiveWebviewEditor = this._onDidChangeActiveWebviewEditor.event;\n\n\tprivate updateActiveWebview() {\n\t\tconst activeInput = this._editorService.activeEditor;\n\n\t\tlet newActiveWebview: WebviewInput | undefined;\n\t\tif (activeInput instanceof WebviewInput) {\n\t\t\tnewActiveWebview = activeInput;\n\t\t} else if (activeInput instanceof DiffEditorInput) {\n\t\t\tif (activeInput.primary instanceof WebviewInput && activeInput.primary.webview === this._webviewService.activeWebview) {\n\t\t\t\tnewActiveWebview = activeInput.primary;\n\t\t\t} else if (activeInput.secondary instanceof WebviewInput && activeInput.secondary.webview === this._webviewService.activeWebview) {\n\t\t\t\tnewActiveWebview = activeInput.secondary;\n\t\t\t}\n\t\t}\n\n\t\tif (newActiveWebview !== this._activeWebview) {\n\t\t\tthis._activeWebview = newActiveWebview;\n\t\t\tthis._onDidChangeActiveWebviewEditor.fire(newActiveWebview);\n\t\t}\n\t}\n\n\tpublic createWebview(\n\t\tid: string,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tshowOptions: ICreateWebViewShowOptions,\n\t\twebviewOptions: WebviewOptions,\n\t\tcontentOptions: WebviewContentOptions,\n\t\textension: WebviewExtensionDescription | undefined,\n\t): WebviewInput {\n\t\tconst webview = this._webviewService.createWebviewOverlay(id, webviewOptions, contentOptions, extension);\n\t\tconst webviewInput = this._instantiationService.createInstance(WebviewInput, id, viewType, title, webview, this.iconManager);\n\t\tthis._editorService.openEditor(webviewInput, {\n\t\t\tpinned: true,\n\t\t\tpreserveFocus: showOptions.preserveFocus,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: showOptions.preserveFocus ? EditorActivation.RESTORE : undefined\n\t\t}, showOptions.group);\n\t\treturn webviewInput;\n\t}\n\n\tpublic revealWebview(\n\t\twebview: WebviewInput,\n\t\tgroup: IEditorGroup,\n\t\tpreserveFocus: boolean\n\t): void {\n\t\tconst topLevelEditor = this.findTopLevelEditorForWebview(webview);\n\t\tif (webview.group === group.id) {\n\t\t\tif (this._editorService.activeEditor === topLevelEditor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._editorService.openEditor(topLevelEditor, {\n\t\t\t\tpreserveFocus,\n\t\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\t\tactivation: preserveFocus ? EditorActivation.RESTORE : undefined\n\t\t\t}, webview.group);\n\t\t} else {\n\t\t\tconst groupView = this._editorGroupService.getGroup(webview.group!);\n\t\t\tif (groupView) {\n\t\t\t\tgroupView.moveEditor(topLevelEditor, group, { preserveFocus });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findTopLevelEditorForWebview(webview: WebviewInput): IEditorInput {\n\t\tfor (const editor of this._editorService.editors) {\n\t\t\tif (editor === webview) {\n\t\t\t\treturn editor;\n\t\t\t}\n\t\t\tif (editor instanceof DiffEditorInput) {\n\t\t\t\tif (webview === editor.primary || webview === editor.secondary) {\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn webview;\n\t}\n\n\tpublic reviveWebview(options: {\n\t\tid: string,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\ticonPath: WebviewIcons | undefined,\n\t\tstate: any,\n\t\twebviewOptions: WebviewOptions,\n\t\tcontentOptions: WebviewContentOptions,\n\t\textension: WebviewExtensionDescription | undefined,\n\t\tgroup: number | undefined,\n\t}): WebviewInput {\n\t\tconst webview = this._webviewService.createWebviewOverlay(options.id, options.webviewOptions, options.contentOptions, options.extension);\n\t\twebview.state = options.state;\n\n\t\tconst webviewInput = this._instantiationService.createInstance(LazilyResolvedWebviewEditorInput, options.id, options.viewType, options.title, webview);\n\t\twebviewInput.iconPath = options.iconPath;\n\n\t\tif (typeof options.group === 'number') {\n\t\t\twebviewInput.updateGroup(options.group);\n\t\t}\n\t\treturn webviewInput;\n\t}\n\n\tpublic registerResolver(\n\t\treviver: WebviewResolver\n\t): IDisposable {\n\t\tthis._revivers.add(reviver);\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._revivalPool.reviveFor(reviver, cts.token);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._revivers.delete(reviver);\n\t\t\tcts.dispose(true);\n\t\t});\n\t}\n\n\tpublic shouldPersist(\n\t\twebview: WebviewInput\n\t): boolean {\n\t\t// Revived webviews may not have an actively registered reviver but we still want to presist them\n\t\t// since a reviver should exist when it is actually needed.\n\t\tif (webview instanceof LazilyResolvedWebviewEditorInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Iterable.some(this._revivers.values(), reviver => canRevive(reviver, webview));\n\t}\n\n\tprivate async tryRevive(\n\t\twebview: WebviewInput,\n\t\tcancellation: CancellationToken,\n\t): Promise<boolean> {\n\t\tfor (const reviver of this._revivers.values()) {\n\t\t\tif (canRevive(reviver, webview)) {\n\t\t\t\tawait reviver.resolveWebview(webview, cancellation);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic resolveWebview(\n\t\twebview: WebviewInput,\n\t): CancelablePromise<void> {\n\t\treturn createCancelablePromise(async (cancellation) => {\n\t\t\tconst didRevive = await this.tryRevive(webview, cancellation);\n\t\t\tif (!didRevive) {\n\t\t\t\t// A reviver may not be registered yet. Put into pool and resolve promise when we can revive\n\t\t\t\tlet resolve: () => void;\n\t\t\t\tconst promise = new Promise<void>(r => { resolve = r; });\n\t\t\t\tthis._revivalPool.add(webview, resolve!);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic setIcons(id: string, iconPath: WebviewIcons | undefined): void {\n\t\tthis._iconManager.setIcons(id, iconPath);\n\t}\n}\n"]}