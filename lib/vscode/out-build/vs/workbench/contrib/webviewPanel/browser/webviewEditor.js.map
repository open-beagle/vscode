{"version":3,"file":"webviewEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/webviewPanel/browser/webviewEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { EditorInput, EditorOptions, IEditorOpenContext } from 'vs/workbench/common/editor';\nimport { WebviewOverlay } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewWindowDragMonitor } from 'vs/workbench/contrib/webview/browser/webviewWindowDragMonitor';\nimport { WebviewInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditorInput';\nimport { IEditorDropService } from 'vs/workbench/services/editor/browser/editorDropService';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\n\nexport class WebviewEditor extends EditorPane {\n\n\tpublic static readonly ID = 'WebviewEditor';\n\n\tprivate _element?: HTMLElement;\n\tprivate _dimension?: DOM.Dimension;\n\tprivate _visible = false;\n\tprivate _isDisposed = false;\n\n\tprivate readonly _webviewVisibleDisposables = this._register(new DisposableStore());\n\tprivate readonly _onFocusWindowHandler = this._register(new MutableDisposable());\n\n\tprivate readonly _onDidFocusWebview = this._register(new Emitter<void>());\n\tpublic override get onDidFocus(): Event<any> { return this._onDidFocusWebview.event; }\n\n\tprivate readonly _scopedContextKeyService = this._register(new MutableDisposable<IContextKeyService>());\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWorkbenchLayoutService private readonly _workbenchLayoutService: IWorkbenchLayoutService,\n\t\t@IEditorDropService private readonly _editorDropService: IEditorDropService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(WebviewEditor.ID, telemetryService, themeService, storageService);\n\t}\n\n\tprivate get webview(): WebviewOverlay | undefined {\n\t\treturn this.input instanceof WebviewInput ? this.input.webview : undefined;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\treturn this._scopedContextKeyService.value;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tconst element = document.createElement('div');\n\t\tthis._element = element;\n\t\tthis._element.id = `webview-editor-element-${generateUuid()}`;\n\t\tparent.appendChild(element);\n\n\t\tthis._scopedContextKeyService.value = this._contextKeyService.createScoped(element);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\tthis._element?.remove();\n\t\tthis._element = undefined;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic layout(dimension: DOM.Dimension): void {\n\t\tthis._dimension = dimension;\n\t\tif (this.webview && this._visible) {\n\t\t\tthis.synchronizeWebviewContainerDimensions(this.webview, dimension);\n\t\t}\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\t\tif (!this._onFocusWindowHandler.value && !isWeb) {\n\t\t\t// Make sure we restore focus when switching back to a VS Code window\n\t\t\tthis._onFocusWindowHandler.value = this._hostService.onDidChangeFocus(focused => {\n\t\t\t\tif (focused && this._editorService.activeEditorPane === this && this._workbenchLayoutService.hasFocus(Parts.EDITOR_PART)) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.webview?.focus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean, group: IEditorGroup | undefined): void {\n\t\tthis._visible = visible;\n\t\tif (this.input instanceof WebviewInput && this.webview) {\n\t\t\tif (visible) {\n\t\t\t\tthis.claimWebview(this.input);\n\t\t\t} else {\n\t\t\t\tthis.webview.release(this);\n\t\t\t}\n\t\t}\n\t\tsuper.setEditorVisible(visible, group);\n\t}\n\n\tpublic override clearInput() {\n\t\tif (this.webview) {\n\t\t\tthis.webview.release(this);\n\t\t\tthis._webviewVisibleDisposables.clear();\n\t\t}\n\n\t\tsuper.clearInput();\n\t}\n\n\tpublic override async setInput(input: EditorInput, options: EditorOptions, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tif (input.matches(this.input)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst alreadyOwnsWebview = input instanceof WebviewInput && input.webview === this.webview;\n\t\tif (this.webview && !alreadyOwnsWebview) {\n\t\t\tthis.webview.release(this);\n\t\t}\n\n\t\tawait super.setInput(input, options, context, token);\n\t\tawait input.resolve();\n\n\t\tif (token.isCancellationRequested || this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (input instanceof WebviewInput) {\n\t\t\tif (this.group) {\n\t\t\t\tinput.updateGroup(this.group.id);\n\t\t\t}\n\n\t\t\tif (!alreadyOwnsWebview) {\n\t\t\t\tthis.claimWebview(input);\n\t\t\t}\n\t\t\tif (this._dimension) {\n\t\t\t\tthis.layout(this._dimension);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate claimWebview(input: WebviewInput): void {\n\t\tinput.webview.claim(this, this.scopedContextKeyService);\n\n\t\tif (this._element) {\n\t\t\tthis._element.setAttribute('aria-flowto', input.webview.container.id);\n\t\t\tDOM.setParentFlowTo(input.webview.container, this._element);\n\t\t}\n\n\t\tthis._webviewVisibleDisposables.clear();\n\n\t\t// Webviews are not part of the normal editor dom, so we have to register our own drag and drop handler on them.\n\t\tthis._webviewVisibleDisposables.add(this._editorDropService.createEditorDropTarget(input.webview.container, {\n\t\t\tcontainsGroup: (group) => this.group?.id === group.id\n\t\t}));\n\n\t\tthis._webviewVisibleDisposables.add(new WebviewWindowDragMonitor(() => this.webview));\n\n\t\tthis.synchronizeWebviewContainerDimensions(input.webview);\n\t\tthis._webviewVisibleDisposables.add(this.trackFocus(input.webview));\n\t}\n\n\tprivate synchronizeWebviewContainerDimensions(webview: WebviewOverlay, dimension?: DOM.Dimension) {\n\t\tif (this._element) {\n\t\t\twebview.layoutWebviewOverElement(this._element.parentElement!, dimension);\n\t\t}\n\t}\n\n\tprivate trackFocus(webview: WebviewOverlay): IDisposable {\n\t\tconst store = new DisposableStore();\n\n\t\t// Track focus in webview content\n\t\tconst webviewContentFocusTracker = DOM.trackFocus(webview.container);\n\t\tstore.add(webviewContentFocusTracker);\n\t\tstore.add(webviewContentFocusTracker.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\t// Track focus in webview element\n\t\tstore.add(webview.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\treturn store;\n\t}\n}\n"]}