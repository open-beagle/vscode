{"version":3,"sources":["vs/workbench/contrib/remote/browser/tunnelView.ts"],"names":[],"mappings":"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","file":"tunnelView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/tunnelView';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { IViewDescriptor, IEditableData, IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IContextKeyService, IContextKey, RawContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { ICommandService, ICommandHandler, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { Disposable, IDisposable, toDisposable, MutableDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IconLabel } from 'vs/base/browser/ui/iconLabel/iconLabel';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { IMenuService, MenuId, MenuRegistry, ILocalizedString } from 'vs/platform/actions/common/actions';\nimport { createAndFillInContextMenuActions, createAndFillInActionBarActions, createActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IRemoteExplorerService, TunnelModel, makeAddress, TunnelType, ITunnelItem, Tunnel, TUNNEL_VIEW_ID, parseAddress, CandidatePort, TunnelPrivacy, TunnelEditId, mapHasAddressLocalhostOrAllInterfaces } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { InputBox, MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { attachButtonStyler, attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { once } from 'vs/base/common/functional';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IThemeService, registerThemingParticipant, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ViewPane, IViewPaneOptions } from 'vs/workbench/browser/parts/views/viewPane';\nimport { URI } from 'vs/base/common/uri';\nimport { isPortPrivileged, ITunnelService, RemoteTunnel } from 'vs/platform/remote/common/tunnel';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { copyAddressIcon, forwardedPortWithoutProcessIcon, forwardedPortWithProcessIcon, forwardPortIcon, labelPortIcon, openBrowserIcon, openPreviewIcon, portsViewIcon, privatePortIcon, publicPortIcon, stopForwardIcon } from 'vs/workbench/contrib/remote/browser/remoteIcons';\nimport { IExternalUriOpenerService } from 'vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isMacintosh, isWeb } from 'vs/base/common/platform';\nimport { ITableColumn, ITableContextMenuEvent, ITableEvent, ITableMouseEvent, ITableRenderer, ITableVirtualDelegate } from 'vs/base/browser/ui/table/table';\nimport { WorkbenchTable } from 'vs/platform/list/browser/listService';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { IMarkdownString, MarkdownString } from 'vs/base/common/htmlContent';\nimport { IHoverDelegateOptions } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';\nimport { IHoverService } from 'vs/workbench/services/hover/browser/hover';\nimport { STATUS_BAR_HOST_NAME_BACKGROUND } from 'vs/workbench/common/theme';\n\nexport const forwardedPortsViewEnabled = new RawContextKey<boolean>('forwardedPortsViewEnabled', false, nls.localize('tunnel.forwardedPortsViewEnabled', \"Whether the Ports view is enabled.\"));\n\nclass TunnelTreeVirtualDelegate implements ITableVirtualDelegate<ITunnelItem> {\n\n\treadonly headerRowHeight: number = 22;\n\n\tconstructor(private readonly remoteExplorerService: IRemoteExplorerService) { }\n\n\tgetHeight(row: ITunnelItem): number {\n\t\treturn (row.tunnelType === TunnelType.Add && !this.remoteExplorerService.getEditableData(undefined)) ? 30 : 22;\n\t}\n}\n\nexport interface ITunnelViewModel {\n\treadonly onForwardedPortsChanged: Event<void>;\n\treadonly all: TunnelItem[];\n\treadonly input: TunnelItem;\n\tisEmpty(): boolean;\n}\n\nexport class TunnelViewModel implements ITunnelViewModel {\n\n\treadonly onForwardedPortsChanged: Event<void>;\n\tprivate model: TunnelModel;\n\tprivate _candidates: Map<string, CandidatePort> = new Map();\n\n\treadonly input = {\n\t\tlabel: nls.localize('remote.tunnelsView.addPort', \"Add Port\"),\n\t\ticon: undefined,\n\t\ttunnelType: TunnelType.Add,\n\t\thasRunningProcess: false,\n\t\tremoteHost: '',\n\t\tremotePort: 0,\n\t\tprocessDescription: '',\n\t\ttooltipPostfix: '',\n\t\ticonTooltip: '',\n\t\tportTooltip: '',\n\t\tprocessTooltip: '',\n\t\toriginTooltip: '',\n\t\tprivacyTooltip: '',\n\t\tsource: ''\n\t};\n\n\tconstructor(\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService\n\t) {\n\t\tthis.model = remoteExplorerService.tunnelModel;\n\t\tthis.onForwardedPortsChanged = Event.any(this.model.onForwardPort, this.model.onClosePort, this.model.onPortName, this.model.onCandidatesChanged);\n\t}\n\n\tget all(): TunnelItem[] {\n\t\tconst result: TunnelItem[] = [];\n\t\tthis._candidates = new Map();\n\t\tthis.model.candidates.forEach(candidate => {\n\t\t\tthis._candidates.set(makeAddress(candidate.host, candidate.port), candidate);\n\t\t});\n\t\tif ((this.model.forwarded.size > 0) || this.remoteExplorerService.getEditableData(undefined)) {\n\t\t\tresult.push(...this.forwarded);\n\t\t}\n\t\tif (this.model.detected.size > 0) {\n\t\t\tresult.push(...this.detected);\n\t\t}\n\n\t\tresult.push(this.input);\n\t\treturn result;\n\t}\n\n\tprivate addProcessInfoFromCandidate(tunnelItem: ITunnelItem) {\n\t\tconst key = makeAddress(tunnelItem.remoteHost, tunnelItem.remotePort);\n\t\tif (this._candidates.has(key)) {\n\t\t\ttunnelItem.processDescription = this._candidates.get(key)!.detail;\n\t\t}\n\t}\n\n\tprivate get forwarded(): TunnelItem[] {\n\t\tconst forwarded = Array.from(this.model.forwarded.values()).map(tunnel => {\n\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(this.remoteExplorerService, tunnel);\n\t\t\tthis.addProcessInfoFromCandidate(tunnelItem);\n\t\t\treturn tunnelItem;\n\t\t}).sort((a: TunnelItem, b: TunnelItem) => {\n\t\t\tif (a.remotePort === b.remotePort) {\n\t\t\t\treturn a.remoteHost < b.remoteHost ? -1 : 1;\n\t\t\t} else {\n\t\t\t\treturn a.remotePort < b.remotePort ? -1 : 1;\n\t\t\t}\n\t\t});\n\t\treturn forwarded;\n\t}\n\n\tprivate get detected(): TunnelItem[] {\n\t\treturn Array.from(this.model.detected.values()).map(tunnel => {\n\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(this.remoteExplorerService, tunnel, TunnelType.Detected, false);\n\t\t\tthis.addProcessInfoFromCandidate(tunnelItem);\n\t\t\treturn tunnelItem;\n\t\t});\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn (this.detected.length === 0) &&\n\t\t\t((this.forwarded.length === 0) || (this.forwarded.length === 1 &&\n\t\t\t\t(this.forwarded[0].tunnelType === TunnelType.Add) && !this.remoteExplorerService.getEditableData(undefined)));\n\t}\n}\n\nfunction emptyCell(item: ITunnelItem): ActionBarCell {\n\treturn { label: '', tunnel: item, editId: TunnelEditId.None, tooltip: '' };\n}\n\nclass IconColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = '';\n\treadonly tooltip: string = '';\n\treadonly weight: number = 1;\n\treadonly minimumWidth = 40;\n\treadonly maximumWidth = 40;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst icon = row.processDescription ? forwardedPortWithProcessIcon : forwardedPortWithoutProcessIcon;\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = `${row.iconTooltip} ${row.tooltipPostfix}`;\n\t\t}\n\t\treturn {\n\t\t\tlabel: '', icon, tunnel: row, editId: TunnelEditId.None, tooltip\n\t\t};\n\t}\n}\n\nclass PortColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.portColumn.label', \"Port\");\n\treadonly tooltip: string = nls.localize('tunnel.portColumn.tooltip', \"The label and remote port number of the forwarded port.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tconst isAdd = row.tunnelType === TunnelType.Add;\n\t\tconst label = row.label;\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem && !isAdd) {\n\t\t\ttooltip = `${row.portTooltip} ${row.tooltipPostfix}`;\n\t\t} else {\n\t\t\ttooltip = label;\n\t\t}\n\t\treturn {\n\t\t\tlabel, tunnel: row, menuId: MenuId.TunnelPortInline,\n\t\t\teditId: row.tunnelType === TunnelType.Add ? TunnelEditId.New : TunnelEditId.Label, tooltip\n\t\t};\n\t}\n}\n\nclass LocalAddressColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.addressColumn.label', \"Local Address\");\n\treadonly tooltip: string = nls.localize('tunnel.addressColumn.tooltip', \"The address that the forwarded port is available at locally.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.localAddress ?? '';\n\t\tlet tooltip: string = label;\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = row.tooltipPostfix;\n\t\t}\n\t\treturn {\n\t\t\tlabel,\n\t\t\tmenuId: MenuId.TunnelLocalAddressInline,\n\t\t\ttunnel: row,\n\t\t\teditId: TunnelEditId.LocalPort,\n\t\t\ttooltip,\n\t\t\tmarkdownTooltip: label ? LocalAddressColumn.getHoverText(label) : undefined\n\t\t};\n\t}\n\n\tprivate static getHoverText(localAddress: string) {\n\t\treturn function (configurationService: IConfigurationService) {\n\t\t\tconst editorConf = configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\n\t\t\tlet clickLabel = '';\n\t\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkAlt.mac', \"option + click\");\n\t\t\t\t} else {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkAlt', \"alt + click\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkCmd', \"cmd + click\");\n\t\t\t\t} else {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkCtrl', \"ctrl + click\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markdown = new MarkdownString('', true);\n\t\t\tconst uri = localAddress.startsWith('http') ? localAddress : `http://${localAddress}`;\n\t\t\treturn markdown.appendMarkdown(`[Follow link](${uri}) (${clickLabel})`);\n\t\t};\n\t}\n}\n\nclass RunningProcessColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.processColumn.label', \"Running Process\");\n\treadonly tooltip: string = nls.localize('tunnel.processColumn.tooltip', \"The command line of the process that is using the port.\");\n\treadonly weight: number = 2;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.processDescription ?? '';\n\t\treturn { label, tunnel: row, editId: TunnelEditId.None, tooltip: row instanceof TunnelItem ? row.processTooltip : '' };\n\t}\n}\n\nclass OriginColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.originColumn.label', \"Origin\");\n\treadonly tooltip: string = nls.localize('tunnel.originColumn.tooltip', \"The source that a forwarded port originates from. Can be an extension, user forwarded, statically forwarded, or automatically forwarded.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.source;\n\t\tconst tooltip = `${row instanceof TunnelItem ? row.originTooltip : ''}. ${row instanceof TunnelItem ? row.tooltipPostfix : ''}`;\n\t\treturn { label, menuId: MenuId.TunnelOriginInline, tunnel: row, editId: TunnelEditId.None, tooltip };\n\t}\n}\n\nclass PrivacyColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.privacyColumn.label', \"Privacy\");\n\treadonly tooltip: string = nls.localize('tunnel.privacyColumn.tooltip', \"The availability of the forwarded port.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.privacy === TunnelPrivacy.Public ? nls.localize('tunnel.privacyPublic', \"Public\") : nls.localize('tunnel.privacyPrivate', \"Private\");\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = `${row.privacyTooltip} ${row.tooltipPostfix}`;\n\t\t}\n\t\treturn { label, tunnel: row, icon: row.icon, editId: TunnelEditId.None, tooltip };\n\t}\n}\n\ninterface IActionBarTemplateData {\n\telementDisposable: IDisposable;\n\tcontainer: HTMLElement;\n\tlabel: IconLabel;\n\tbutton?: Button;\n\ticon: HTMLElement;\n\tactionBar: ActionBar;\n}\n\ninterface ActionBarCell {\n\tlabel: string;\n\ticon?: ThemeIcon;\n\ttooltip: string;\n\tmarkdownTooltip?: (configurationService: IConfigurationService) => IMarkdownString;\n\tmenuId?: MenuId;\n\ttunnel: ITunnelItem;\n\teditId: TunnelEditId;\n}\n\nclass ActionBarRenderer extends Disposable implements ITableRenderer<ActionBarCell, IActionBarTemplateData> {\n\treadonly templateId = 'actionbar';\n\tprivate inputDone?: (success: boolean, finishEditing: boolean) => void;\n\tprivate _actionRunner: ActionRunner | undefined;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) { super(); }\n\n\tset actionRunner(actionRunner: ActionRunner) {\n\t\tthis._actionRunner = actionRunner;\n\t}\n\n\trenderTemplate(container: HTMLElement): IActionBarTemplateData {\n\t\tconst cell = dom.append(container, dom.$('.ports-view-actionbar-cell'));\n\t\tconst icon = dom.append(cell, dom.$('.ports-view-actionbar-cell-icon'));\n\t\tconst label = new IconLabel(cell,\n\t\t\t{\n\t\t\t\tsupportHighlights: true,\n\t\t\t\thoverDelegate: {\n\t\t\t\t\tshowHover: (options: IHoverDelegateOptions): IDisposable | undefined => {\n\t\t\t\t\t\treturn this.hoverService.showHover(options);\n\t\t\t\t\t},\n\t\t\t\t\tdelay: <number>this.configurationService.getValue('workbench.hover.delay')\n\t\t\t\t}\n\t\t\t});\n\t\tconst actionsContainer = dom.append(cell, dom.$('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService)\n\t\t});\n\t\treturn { label, icon, actionBar, container: cell, elementDisposable: Disposable.None };\n\t}\n\n\trenderElement(element: ActionBarCell, index: number, templateData: IActionBarTemplateData): void {\n\t\t// reset\n\t\ttemplateData.actionBar.clear();\n\t\ttemplateData.icon.className = 'ports-view-actionbar-cell-icon';\n\t\ttemplateData.icon.style.display = 'none';\n\t\ttemplateData.label.setLabel('');\n\t\ttemplateData.label.element.style.display = 'none';\n\t\tif (templateData.button) {\n\t\t\ttemplateData.button.element.style.display = 'none';\n\t\t\ttemplateData.button.dispose();\n\t\t}\n\t\ttemplateData.container.style.paddingLeft = '0px';\n\t\ttemplateData.elementDisposable.dispose();\n\n\t\tlet editableData: IEditableData | undefined;\n\t\tif (element.editId === TunnelEditId.New && (editableData = this.remoteExplorerService.getEditableData(undefined))) {\n\t\t\tthis.renderInputBox(templateData.container, editableData);\n\t\t} else {\n\t\t\teditableData = this.remoteExplorerService.getEditableData(element.tunnel, element.editId);\n\t\t\tif (editableData) {\n\t\t\t\tthis.renderInputBox(templateData.container, editableData);\n\t\t\t} else if ((element.tunnel.tunnelType === TunnelType.Add) && (element.menuId === MenuId.TunnelPortInline)) {\n\t\t\t\tthis.renderButton(element, templateData);\n\t\t\t} else {\n\t\t\t\tthis.renderActionBarItem(element, templateData);\n\t\t\t}\n\t\t}\n\t}\n\n\trenderButton(element: ActionBarCell, templateData: IActionBarTemplateData): void {\n\t\ttemplateData.container.style.paddingLeft = '7px';\n\t\ttemplateData.container.style.height = '28px';\n\t\ttemplateData.button = this._register(new Button(templateData.container));\n\t\ttemplateData.button.label = element.label;\n\t\ttemplateData.button.element.title = element.tooltip;\n\t\tthis._register(attachButtonStyler(templateData.button, this.themeService));\n\t\tthis._register(templateData.button.onDidClick(() => {\n\t\t\tthis.commandService.executeCommand(ForwardPortAction.INLINE_ID);\n\t\t}));\n\t}\n\n\trenderActionBarItem(element: ActionBarCell, templateData: IActionBarTemplateData): void {\n\t\ttemplateData.label.element.style.display = 'flex';\n\t\ttemplateData.label.setLabel(element.label, undefined,\n\t\t\t{\n\t\t\t\ttitle: element.markdownTooltip ?\n\t\t\t\t\t{ markdown: element.markdownTooltip(this.configurationService), markdownNotSupportedFallback: element.tooltip }\n\t\t\t\t\t: element.tooltip,\n\t\t\t\textraClasses: element.menuId === MenuId.TunnelLocalAddressInline ? ['ports-view-actionbar-cell-localaddress'] : undefined\n\t\t\t});\n\t\ttemplateData.actionBar.context = element.tunnel;\n\t\ttemplateData.container.style.paddingLeft = '10px';\n\t\tconst context: [string, any][] =\n\t\t\t[\n\t\t\t\t['view', TUNNEL_VIEW_ID],\n\t\t\t\t[TunnelTypeContextKey.key, element.tunnel.tunnelType],\n\t\t\t\t[TunnelCloseableContextKey.key, element.tunnel.closeable],\n\t\t\t\t[TunnelPrivacyContextKey.key, element.tunnel.privacy]\n\t\t\t];\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(context);\n\t\tconst disposableStore = new DisposableStore();\n\t\ttemplateData.elementDisposable = disposableStore;\n\t\tif (element.menuId) {\n\t\t\tconst menu = disposableStore.add(this.menuService.createMenu(element.menuId, contextKeyService));\n\t\t\tlet actions: IAction[] = [];\n\t\t\tdisposableStore.add(createAndFillInActionBarActions(menu, { shouldForwardArgs: true }, actions));\n\t\t\tif (actions) {\n\t\t\t\tlet labelActions = actions.filter(action => action.id.toLowerCase().indexOf('label') >= 0);\n\t\t\t\tif (labelActions.length > 1) {\n\t\t\t\t\tlabelActions.sort((a, b) => a.label.length - b.label.length);\n\t\t\t\t\tlabelActions.pop();\n\t\t\t\t\tactions = actions.filter(action => labelActions.indexOf(action) < 0);\n\t\t\t\t}\n\t\t\t\ttemplateData.actionBar.push(actions, { icon: true, label: false });\n\t\t\t\tif (this._actionRunner) {\n\t\t\t\t\ttemplateData.actionBar.actionRunner = this._actionRunner;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (element.icon) {\n\t\t\ttemplateData.icon.className = `ports-view-actionbar-cell-icon ${ThemeIcon.asClassName(element.icon)}`;\n\t\t\ttemplateData.icon.title = element.tooltip;\n\t\t\ttemplateData.icon.style.display = 'inline';\n\t\t}\n\t}\n\n\tprivate renderInputBox(container: HTMLElement, editableData: IEditableData): IDisposable {\n\t\t// Required for FireFox. The blur event doesn't fire on FireFox when you just mash the \"+\" button to forward a port.\n\t\tif (this.inputDone) {\n\t\t\tthis.inputDone(false, false);\n\t\t\tthis.inputDone = undefined;\n\t\t}\n\t\tcontainer.style.paddingLeft = '5px';\n\t\tconst value = editableData.startingValue || '';\n\t\tconst inputBox = new InputBox(container, this.contextViewService, {\n\t\t\tariaLabel: nls.localize('remote.tunnelsView.input', \"Press Enter to confirm or Escape to cancel.\"),\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: (value) => {\n\t\t\t\t\tconst message = editableData.validationMessage(value);\n\t\t\t\t\tif (!message) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype: message.severity === Severity.Error ? MessageType.ERROR : MessageType.INFO\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\tplaceholder: editableData.placeholder || ''\n\t\t});\n\t\tconst styler = attachInputBoxStyler(inputBox, this.themeService);\n\n\t\tinputBox.value = value;\n\t\tinputBox.focus();\n\t\tinputBox.select({ start: 0, end: editableData.startingValue ? editableData.startingValue.length : 0 });\n\n\t\tconst done = once(async (success: boolean, finishEditing: boolean) => {\n\t\t\tdispose(toDispose);\n\t\t\tif (this.inputDone) {\n\t\t\t\tthis.inputDone = undefined;\n\t\t\t}\n\t\t\tinputBox.element.style.display = 'none';\n\t\t\tconst inputValue = inputBox.value;\n\t\t\tif (finishEditing) {\n\t\t\t\treturn editableData.onFinish(inputValue, success);\n\t\t\t}\n\t\t});\n\t\tthis.inputDone = done;\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tdom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, async (e: IKeyboardEvent) => {\n\t\t\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (inputBox.validate() !== MessageType.ERROR) {\n\t\t\t\t\t\treturn done(true, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn done(false, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\treturn done(false, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, () => {\n\t\t\t\treturn done(inputBox.validate() !== MessageType.ERROR, true);\n\t\t\t}),\n\t\t\tstyler\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tdisposeElement(element: ActionBarCell, index: number, templateData: IActionBarTemplateData, height: number | undefined) {\n\t\ttemplateData.elementDisposable.dispose();\n\t}\n\n\tdisposeTemplate(templateData: IActionBarTemplateData): void {\n\t\ttemplateData.label.dispose();\n\t\ttemplateData.actionBar.dispose();\n\t\ttemplateData.elementDisposable.dispose();\n\t\ttemplateData.button?.dispose();\n\t}\n}\n\nclass TunnelItem implements ITunnelItem {\n\tstatic createFromTunnel(remoteExplorerService: IRemoteExplorerService, tunnel: Tunnel, type: TunnelType = TunnelType.Forwarded, closeable?: boolean) {\n\t\treturn new TunnelItem(type,\n\t\t\ttunnel.remoteHost,\n\t\t\ttunnel.remotePort,\n\t\t\ttunnel.source ?? (tunnel.userForwarded ? nls.localize('tunnel.user', \"User Forwarded\") :\n\t\t\t\t(type === TunnelType.Detected ? nls.localize('tunnel.staticallyForwarded', \"Statically Forwarded\") : nls.localize('tunnel.automatic', \"Auto Forwarded\"))),\n\t\t\t!!tunnel.hasRunningProcess,\n\t\t\ttunnel.localAddress,\n\t\t\ttunnel.localPort,\n\t\t\tcloseable === undefined ? tunnel.closeable : closeable,\n\t\t\ttunnel.name,\n\t\t\ttunnel.runningProcess,\n\t\t\ttunnel.pid,\n\t\t\ttunnel.privacy,\n\t\t\tremoteExplorerService);\n\t}\n\n\tconstructor(\n\t\tpublic tunnelType: TunnelType,\n\t\tpublic remoteHost: string,\n\t\tpublic remotePort: number,\n\t\tpublic source: string,\n\t\tpublic hasRunningProcess: boolean,\n\t\tpublic localAddress?: string,\n\t\tpublic localPort?: number,\n\t\tpublic closeable?: boolean,\n\t\tpublic name?: string,\n\t\tprivate runningProcess?: string,\n\t\tprivate pid?: number,\n\t\tpublic privacy?: TunnelPrivacy,\n\t\tprivate remoteExplorerService?: IRemoteExplorerService\n\t) { }\n\n\tget label(): string {\n\t\tif (this.tunnelType === TunnelType.Add && this.name) {\n\t\t\treturn this.name;\n\t\t} else if (this.name) {\n\t\t\treturn `${this.name} (${this.remotePort})`;\n\t\t} else {\n\t\t\treturn `${this.remotePort}`;\n\t\t}\n\t}\n\n\tset processDescription(description: string | undefined) {\n\t\tthis.runningProcess = description;\n\t}\n\n\tget processDescription(): string | undefined {\n\t\tlet description: string = '';\n\t\tif (this.runningProcess) {\n\t\t\tif (this.pid && this.remoteExplorerService?.namedProcesses.has(this.pid)) {\n\t\t\t\t// This is a known process. Give it a friendly name.\n\t\t\t\tdescription = this.remoteExplorerService.namedProcesses.get(this.pid)!;\n\t\t\t} else {\n\t\t\t\tdescription = this.runningProcess.replace(/\\0/g, ' ').trim();\n\t\t\t}\n\t\t\tif (this.pid) {\n\t\t\t\tdescription += ` (${this.pid})`;\n\t\t\t}\n\t\t} else if (this.hasRunningProcess) {\n\t\t\tdescription = nls.localize('tunnelView.runningProcess.inacessable', \"Process information unavailable\");\n\t\t}\n\n\t\treturn description;\n\t}\n\n\tget icon(): ThemeIcon | undefined {\n\t\tswitch (this.privacy) {\n\t\t\tcase TunnelPrivacy.Public: return publicPortIcon;\n\t\t\tdefault: {\n\t\t\t\tif (this.tunnelType !== TunnelType.Add) {\n\t\t\t\t\treturn privatePortIcon;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget tooltipPostfix(): string {\n\t\tlet information: string;\n\t\tif (this.localAddress) {\n\t\t\tinformation = nls.localize('remote.tunnel.tooltipForwarded', \"Remote port {0}:{1} forwarded to local address {2}. \", this.remoteHost, this.remotePort, this.localAddress);\n\t\t} else {\n\t\t\tinformation = nls.localize('remote.tunnel.tooltipCandidate', \"Remote port {0}:{1} not forwarded. \", this.remoteHost, this.remotePort);\n\t\t}\n\n\t\treturn information;\n\t}\n\n\tget iconTooltip(): string {\n\t\tconst isAdd = this.tunnelType === TunnelType.Add;\n\t\tif (!isAdd) {\n\t\t\treturn `${this.processDescription ? nls.localize('tunnel.iconColumn.running', \"Port has running process.\") :\n\t\t\t\tnls.localize('tunnel.iconColumn.notRunning', \"No running process.\")}`;\n\t\t} else {\n\t\t\treturn this.label;\n\t\t}\n\t}\n\n\tget portTooltip(): string {\n\t\tconst isAdd = this.tunnelType === TunnelType.Add;\n\t\tif (!isAdd) {\n\t\t\treturn `${this.name ? nls.localize('remote.tunnel.tooltipName', \"Port labeled {0}. \", this.name) : ''}`;\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tget processTooltip(): string {\n\t\treturn this.processDescription ?? '';\n\t}\n\n\tget originTooltip(): string {\n\t\treturn this.source;\n\t}\n\n\tget privacyTooltip(): string {\n\t\treturn `${this.privacy === TunnelPrivacy.Public ? nls.localize('remote.tunnel.tooltipPublic', \"Accessible publicly. \") :\n\t\t\tnls.localize('remote.tunnel.tooltipPrivate', \"Only accessible from this machine. \")}`;\n\t}\n}\n\nexport const TunnelTypeContextKey = new RawContextKey<TunnelType>('tunnelType', TunnelType.Add, true);\nexport const TunnelCloseableContextKey = new RawContextKey<boolean>('tunnelCloseable', false, true);\nconst TunnelPrivacyContextKey = new RawContextKey<TunnelPrivacy | undefined>('tunnelPrivacy', undefined, true);\nconst TunnelViewFocusContextKey = new RawContextKey<boolean>('tunnelViewFocus', false, nls.localize('tunnel.focusContext', \"Whether the Ports view has focus.\"));\nconst TunnelViewSelectionKeyName = 'tunnelViewSelection';\nconst TunnelViewSelectionContextKey = new RawContextKey<ITunnelItem | undefined>(TunnelViewSelectionKeyName, undefined, true);\nconst PortChangableContextKey = new RawContextKey<boolean>('portChangable', false, true);\nconst WebContextKey = new RawContextKey<boolean>('isWeb', isWeb, true);\n\nexport class TunnelPanel extends ViewPane {\n\n\tstatic readonly ID = TUNNEL_VIEW_ID;\n\tstatic readonly TITLE = nls.localize('remote.tunnel', \"Ports\");\n\n\tprivate table!: WorkbenchTable<ITunnelItem>;\n\tprivate tunnelTypeContext: IContextKey<TunnelType>;\n\tprivate tunnelCloseableContext: IContextKey<boolean>;\n\tprivate tunnelPrivacyContext: IContextKey<TunnelPrivacy | undefined>;\n\tprivate tunnelViewFocusContext: IContextKey<boolean>;\n\tprivate tunnelViewSelectionContext: IContextKey<ITunnelItem | undefined>;\n\tprivate portChangableContextKey: IContextKey<boolean>;\n\tprivate isEditing: boolean = false;\n\tprivate titleActions: IAction[] = [];\n\tprivate lastFocus: number[] = [];\n\tprivate readonly titleActionsDisposable = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprotected viewModel: ITunnelViewModel,\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t\tthis.tunnelTypeContext = TunnelTypeContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelCloseableContext = TunnelCloseableContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelPrivacyContext = TunnelPrivacyContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelViewFocusContext = TunnelViewFocusContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelViewSelectionContext = TunnelViewSelectionContextKey.bindTo(contextKeyService);\n\t\tthis.portChangableContextKey = PortChangableContextKey.bindTo(contextKeyService);\n\n\t\tconst overlayContextKeyService = this._register(this.contextKeyService.createOverlay([['view', TunnelPanel.ID]]));\n\t\tconst titleMenu = this._register(this.menuService.createMenu(MenuId.TunnelTitle, overlayContextKeyService));\n\t\tconst updateActions = () => {\n\t\t\tthis.titleActions = [];\n\t\t\tthis.titleActionsDisposable.value = createAndFillInActionBarActions(titleMenu, undefined, this.titleActions);\n\t\t\tthis.updateActions();\n\t\t};\n\n\t\tthis._register(titleMenu.onDidChange(updateActions));\n\t\tupdateActions();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.titleActions = [];\n\t\t}));\n\t}\n\n\tget portCount(): number {\n\t\treturn this.remoteExplorerService.tunnelModel.forwarded.size + this.remoteExplorerService.tunnelModel.detected.size;\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tconst panelContainer = dom.append(container, dom.$('.tree-explorer-viewlet-tree-view'));\n\t\tconst widgetContainer = dom.append(panelContainer, dom.$('.customview-tree'));\n\t\twidgetContainer.classList.add('ports-view');\n\t\twidgetContainer.classList.add('file-icon-themable-tree', 'show-file-icons');\n\n\t\tconst actionBarRenderer = new ActionBarRenderer(this.instantiationService, this.contextKeyService,\n\t\t\tthis.menuService, this.contextViewService, this.themeService, this.remoteExplorerService, this.commandService,\n\t\t\tthis.configurationService, this.hoverService);\n\t\tconst columns = [new IconColumn(), new PortColumn(), new LocalAddressColumn(), new RunningProcessColumn()];\n\t\tif (this.tunnelService.canMakePublic) {\n\t\t\tcolumns.push(new PrivacyColumn());\n\t\t}\n\t\tcolumns.push(new OriginColumn());\n\n\t\tthis.table = this.instantiationService.createInstance(WorkbenchTable,\n\t\t\t'RemoteTunnels',\n\t\t\twidgetContainer,\n\t\t\tnew TunnelTreeVirtualDelegate(this.remoteExplorerService),\n\t\t\tcolumns,\n\t\t\t[actionBarRenderer],\n\t\t\t{\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (item: ITunnelItem) => {\n\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (item: ITunnelItem) => {\n\t\t\t\t\t\tif (item instanceof TunnelItem) {\n\t\t\t\t\t\t\treturn `${item.tooltipPostfix} ${item.portTooltip} ${item.iconTooltip} ${item.processTooltip} ${item.originTooltip} ${this.tunnelService.canMakePublic ? item.privacyTooltip : ''}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel: () => nls.localize('tunnelView', \"Tunnel View\")\n\t\t\t\t},\n\t\t\t\topenOnSingleClick: true\n\t\t\t}\n\t\t) as WorkbenchTable<ITunnelItem>;\n\n\t\tconst actionRunner: ActionRunner = new ActionRunner();\n\t\tactionBarRenderer.actionRunner = actionRunner;\n\n\t\tthis._register(this.table.onContextMenu(e => this.onContextMenu(e, actionRunner)));\n\t\tthis._register(this.table.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis._register(this.table.onDidChangeFocus(e => this.onFocusChanged(e)));\n\t\tthis._register(this.table.onDidFocus(() => this.tunnelViewFocusContext.set(true)));\n\t\tthis._register(this.table.onDidBlur(() => this.tunnelViewFocusContext.set(false)));\n\n\t\tconst rerender = () => this.table.splice(0, Number.POSITIVE_INFINITY, this.viewModel.all);\n\n\t\trerender();\n\t\tlet lastPortCount = this.portCount;\n\t\tthis._register(Event.debounce(this.viewModel.onForwardedPortsChanged, (_last, e) => e, 50)(() => {\n\t\t\tconst newPortCount = this.portCount;\n\t\t\tif (((lastPortCount === 0) || (newPortCount === 0)) && (lastPortCount !== newPortCount)) {\n\t\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t\t}\n\t\t\tlastPortCount = newPortCount;\n\t\t\trerender();\n\t\t}));\n\n\t\tthis._register(this.table.onDidOpen(e => {\n\t\t\tif (!e.element || (e.element.tunnelType !== TunnelType.Forwarded)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.browserEvent?.type === 'dblclick') {\n\t\t\t\tthis.commandService.executeCommand(LabelTunnelAction.ID);\n\t\t\t} else if (e.browserEvent instanceof MouseEvent) {\n\t\t\t\tconst editorConf = this.configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\n\t\t\t\tlet modifierKey = false;\n\t\t\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\t\t\tmodifierKey = e.browserEvent.altKey;\n\t\t\t\t} else {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\tmodifierKey = e.browserEvent.metaKey;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodifierKey = e.browserEvent.ctrlKey;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (modifierKey) {\n\t\t\t\t\tthis.commandService.executeCommand(OpenPortInBrowserAction.ID, e.element);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.remoteExplorerService.onDidChangeEditable(e => {\n\t\t\tthis.isEditing = !!this.remoteExplorerService.getEditableData(e?.tunnel, e?.editId);\n\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\n\t\t\tif (!this.isEditing) {\n\t\t\t\twidgetContainer.classList.remove('highlight');\n\t\t\t}\n\n\t\t\trerender();\n\n\t\t\tif (this.isEditing) {\n\t\t\t\twidgetContainer.classList.add('highlight');\n\t\t\t\tif (!e) {\n\t\t\t\t\t// When we are in editing mode for a new forward, rather than updating an existing one we need to reveal the input box since it might be out of view.\n\t\t\t\t\tthis.table.reveal(this.table.indexOf(this.viewModel.input));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (e && (e.tunnel.tunnelType !== TunnelType.Add)) {\n\t\t\t\t\tthis.table.setFocus(this.lastFocus);\n\t\t\t\t}\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn this.viewModel.isEmpty() && !this.isEditing;\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.table.domFocus();\n\t}\n\n\tprivate onFocusChanged(event: ITableEvent<ITunnelItem>) {\n\t\tif (event.indexes.length > 0 && event.elements.length > 0) {\n\t\t\tthis.lastFocus = event.indexes;\n\t\t}\n\t\tconst elements = event.elements;\n\t\tconst item = elements && elements.length ? elements[0] : undefined;\n\t\tif (item) {\n\t\t\tthis.tunnelViewSelectionContext.set(item);\n\t\t\tthis.tunnelTypeContext.set(item.tunnelType);\n\t\t\tthis.tunnelCloseableContext.set(!!item.closeable);\n\t\t\tthis.tunnelPrivacyContext.set(item.privacy);\n\t\t\tthis.portChangableContextKey.set(!!item.localPort);\n\t\t} else {\n\t\t\tthis.tunnelTypeContext.reset();\n\t\t\tthis.tunnelViewSelectionContext.reset();\n\t\t\tthis.tunnelCloseableContext.reset();\n\t\t\tthis.tunnelPrivacyContext.reset();\n\t\t\tthis.portChangableContextKey.reset();\n\t\t}\n\t}\n\n\tprivate onContextMenu(event: ITableContextMenuEvent<ITunnelItem>, actionRunner: ActionRunner): void {\n\t\tif ((event.element !== undefined) && !(event.element instanceof TunnelItem)) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.browserEvent.preventDefault();\n\t\tevent.browserEvent.stopPropagation();\n\n\t\tconst node: ITunnelItem | undefined = event.element;\n\n\t\tif (node) {\n\t\t\tthis.table.setFocus([this.table.indexOf(node)]);\n\t\t\tthis.tunnelTypeContext.set(node.tunnelType);\n\t\t\tthis.tunnelCloseableContext.set(!!node.closeable);\n\t\t\tthis.tunnelPrivacyContext.set(node.privacy);\n\t\t\tthis.portChangableContextKey.set(!!node.localPort);\n\t\t} else {\n\t\t\tthis.tunnelTypeContext.set(TunnelType.Add);\n\t\t\tthis.tunnelCloseableContext.set(false);\n\t\t\tthis.tunnelPrivacyContext.set(undefined);\n\t\t\tthis.portChangableContextKey.set(false);\n\t\t}\n\n\t\tconst menu = this.menuService.createMenu(MenuId.TunnelContext, this.table.contextKeyService);\n\t\tconst actions: IAction[] = [];\n\t\tthis._register(createAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, actions));\n\t\tmenu.dispose();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionViewItem: (action) => {\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.id);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\treturn new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel() });\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\tthis.table.domFocus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetActionsContext: () => node,\n\t\t\tactionRunner\n\t\t});\n\t}\n\n\tprivate onMouseDblClick(e: ITableMouseEvent<ITunnelItem>): void {\n\t\tif (!e.element) {\n\t\t\tthis.commandService.executeCommand(ForwardPortAction.INLINE_ID);\n\t\t}\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.table.layout(height, width);\n\t}\n}\n\nexport class TunnelPanelDescriptor implements IViewDescriptor {\n\treadonly id = TunnelPanel.ID;\n\treadonly name = TunnelPanel.TITLE;\n\treadonly ctorDescriptor: SyncDescriptor<TunnelPanel>;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\treadonly workspace = true;\n\t// group is not actually used for views that are not extension contributed. Use order instead.\n\treadonly group = 'details@0';\n\t// -500 comes from the remote explorer viewOrderDelegate\n\treadonly order = -500;\n\treadonly remoteAuthority?: string | string[];\n\treadonly canMoveView = true;\n\treadonly containerIcon = portsViewIcon;\n\n\tconstructor(viewModel: ITunnelViewModel, environmentService: IWorkbenchEnvironmentService) {\n\t\tthis.ctorDescriptor = new SyncDescriptor(TunnelPanel, [viewModel]);\n\t\tthis.remoteAuthority = environmentService.remoteAuthority ? environmentService.remoteAuthority.split('+')[0] : undefined;\n\t}\n}\n\nnamespace LabelTunnelAction {\n\texport const ID = 'remote.tunnel.label';\n\texport const LABEL = nls.localize('remote.tunnel.label', \"Set Port Label\");\n\texport const COMMAND_ID_KEYWORD = 'label';\n\n\tfunction isITunnelItem(item: any): item is ITunnelItem {\n\t\treturn item && item.tunnelType && item.remoteHost && item.source;\n\t}\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg): Promise<{ port: number, label: string } | undefined> => {\n\t\t\tconst context = isITunnelItem(arg) ? arg : accessor.get(IContextKeyService).getContextKeyValue<ITunnelItem | undefined>(TunnelViewSelectionKeyName);\n\t\t\tif (context) {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\t\t\tconst startingValue = context.name ? context.name : `${context.remotePort}`;\n\t\t\t\t\tremoteExplorerService.setEditable(context, TunnelEditId.Label, {\n\t\t\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\t\t\tvalue = value.trim();\n\t\t\t\t\t\t\tremoteExplorerService.setEditable(context, TunnelEditId.Label, null);\n\t\t\t\t\t\t\tconst changed = success && (value !== startingValue);\n\t\t\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t\t\tawait remoteExplorerService.tunnelModel.name(context.remoteHost, context.remotePort, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(changed ? { port: context.remotePort, label: value } : undefined);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidationMessage: () => null,\n\t\t\t\t\t\tplaceholder: nls.localize('remote.tunnelsView.labelPlaceholder', \"Port label\"),\n\t\t\t\t\t\tstartingValue\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t}\n}\n\nconst invalidPortString: string = nls.localize('remote.tunnelsView.portNumberValid', \"Forwarded port is invalid.\");\nconst maxPortNumber: number = 65536;\nconst invalidPortNumberString: string = nls.localize('remote.tunnelsView.portNumberToHigh', \"Port number must be \\u2265 0 and < {0}.\", maxPortNumber);\nconst requiresSudoString: string = nls.localize('remote.tunnelView.inlineElevationMessage', \"May Require Sudo\");\nconst alreadyForwarded: string = nls.localize('remote.tunnelView.alreadyForwarded', \"Port is already forwarded\");\n\nexport namespace ForwardPortAction {\n\texport const INLINE_ID = 'remote.tunnel.forwardInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.forwardCommandPalette';\n\texport const LABEL: ILocalizedString = { value: nls.localize('remote.tunnel.forward', \"Forward a Port\"), original: 'Forward a Port' };\n\texport const TREEITEM_LABEL = nls.localize('remote.tunnel.forwardItem', \"Forward Port\");\n\tconst forwardPrompt = nls.localize('remote.tunnel.forwardPrompt', \"Port number or address (eg. 3000 or 10.10.10.10:2000).\");\n\n\tfunction validateInput(remoteExplorerService: IRemoteExplorerService, value: string, canElevate: boolean): { content: string, severity: Severity } | null {\n\t\tconst parsed = parseAddress(value);\n\t\tif (!parsed) {\n\t\t\treturn { content: invalidPortString, severity: Severity.Error };\n\t\t} else if (parsed.port >= maxPortNumber) {\n\t\t\treturn { content: invalidPortNumberString, severity: Severity.Error };\n\t\t} else if (canElevate && isPortPrivileged(parsed.port)) {\n\t\t\treturn { content: requiresSudoString, severity: Severity.Info };\n\t\t} else if (mapHasAddressLocalhostOrAllInterfaces(remoteExplorerService.tunnelModel.forwarded, parsed.host, parsed.port)) {\n\t\t\treturn { content: alreadyForwarded, severity: Severity.Error };\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction error(notificationService: INotificationService, tunnel: RemoteTunnel | void, host: string, port: number) {\n\t\tif (!tunnel) {\n\t\t\tnotificationService.warn(nls.localize('remote.tunnel.forwardError', \"Unable to forward {0}:{1}. The host may not be available or that remote port may already be forwarded\", host, port));\n\t\t}\n\t}\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tremoteExplorerService.setEditable(undefined, TunnelEditId.New, {\n\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\tremoteExplorerService.setEditable(undefined, TunnelEditId.New, null);\n\t\t\t\t\tlet parsed: { host: string, port: number } | undefined;\n\t\t\t\t\tif (success && (parsed = parseAddress(value))) {\n\t\t\t\t\t\tremoteExplorerService.forward({ host: parsed.host, port: parsed.port }, undefined, undefined, undefined, true).then(tunnel => error(notificationService, tunnel, parsed!.host, parsed!.port));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvalidationMessage: (value) => validateInput(remoteExplorerService, value, tunnelService.canElevate),\n\t\t\t\tplaceholder: forwardPrompt\n\t\t\t});\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tawait viewsService.openView(TunnelPanel.ID, true);\n\t\t\tconst value = await quickInputService.input({\n\t\t\t\tprompt: forwardPrompt,\n\t\t\t\tvalidateInput: (value) => Promise.resolve(validateInput(remoteExplorerService, value, tunnelService.canElevate))\n\t\t\t});\n\t\t\tlet parsed: { host: string, port: number } | undefined;\n\t\t\tif (value && (parsed = parseAddress(value))) {\n\t\t\t\tremoteExplorerService.forward({ host: parsed.host, port: parsed.port }, undefined, undefined, undefined, true).then(tunnel => error(notificationService, tunnel, parsed!.host, parsed!.port));\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface QuickPickTunnel extends IQuickPickItem {\n\ttunnel?: ITunnelItem\n}\n\nfunction makeTunnelPicks(tunnels: Tunnel[], remoteExplorerService: IRemoteExplorerService): QuickPickInput<QuickPickTunnel>[] {\n\tconst picks: QuickPickInput<QuickPickTunnel>[] = tunnels.map(forwarded => {\n\t\tconst item = TunnelItem.createFromTunnel(remoteExplorerService, forwarded);\n\t\treturn {\n\t\t\tlabel: item.label,\n\t\t\tdescription: item.processDescription,\n\t\t\ttunnel: item\n\t\t};\n\t});\n\tif (picks.length === 0) {\n\t\tpicks.push({\n\t\t\tlabel: nls.localize('remote.tunnel.closeNoPorts', \"No ports currently forwarded. Try running the {0} command\", ForwardPortAction.LABEL.value)\n\t\t});\n\t}\n\treturn picks;\n}\n\nnamespace ClosePortAction {\n\texport const INLINE_ID = 'remote.tunnel.closeInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.closeCommandPalette';\n\texport const LABEL: ILocalizedString = { value: nls.localize('remote.tunnel.close', \"Stop Forwarding Port\"), original: 'Stop Forwarding Port' };\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst context = (arg !== undefined || arg instanceof TunnelItem) ? arg : accessor.get(IContextKeyService).getContextKeyValue(TunnelViewSelectionKeyName);\n\t\t\tif (context instanceof TunnelItem) {\n\t\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\t\tawait remoteExplorerService.close({ host: context.remoteHost, port: context.remotePort });\n\t\t\t}\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor) => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst picks: QuickPickInput<QuickPickTunnel>[] = makeTunnelPicks(Array.from(remoteExplorerService.tunnelModel.forwarded.values()).filter(tunnel => tunnel.closeable), remoteExplorerService);\n\t\t\tconst result = await quickInputService.pick(picks, { placeHolder: nls.localize('remote.tunnel.closePlaceholder', \"Choose a port to stop forwarding\") });\n\t\t\tif (result && result.tunnel) {\n\t\t\t\tawait remoteExplorerService.close({ host: result.tunnel.remoteHost, port: result.tunnel.remotePort });\n\t\t\t} else if (result) {\n\t\t\t\tawait commandService.executeCommand(ForwardPortAction.COMMANDPALETTE_ID);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport namespace OpenPortInBrowserAction {\n\texport const ID = 'remote.tunnel.open';\n\texport const LABEL = nls.localize('remote.tunnel.open', \"Open in Browser\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tlet key: string | undefined;\n\t\t\tif (arg instanceof TunnelItem) {\n\t\t\t\tkey = makeAddress(arg.remoteHost, arg.remotePort);\n\t\t\t} else if (arg.tunnelRemoteHost && arg.tunnelRemotePort) {\n\t\t\t\tkey = makeAddress(arg.tunnelRemoteHost, arg.tunnelRemotePort);\n\t\t\t}\n\t\t\tif (key) {\n\t\t\t\tconst model = accessor.get(IRemoteExplorerService).tunnelModel;\n\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\treturn run(model, openerService, key);\n\t\t\t}\n\t\t};\n\t}\n\n\texport function run(model: TunnelModel, openerService: IOpenerService, key: string) {\n\t\tconst tunnel = model.forwarded.get(key) || model.detected.get(key);\n\t\tlet address: string | undefined;\n\t\tif (tunnel && tunnel.localAddress && (address = model.address(tunnel.remoteHost, tunnel.remotePort))) {\n\t\t\tif (!address.startsWith('http')) {\n\t\t\t\taddress = `http://${address}`;\n\t\t\t}\n\t\t\treturn openerService.open(URI.parse(address), { allowContributedOpeners: false });\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport namespace OpenPortInPreviewAction {\n\texport const ID = 'remote.tunnel.openPreview';\n\texport const LABEL = nls.localize('remote.tunnel.openPreview', \"Preview in Editor\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tlet key: string | undefined;\n\t\t\tif (arg instanceof TunnelItem) {\n\t\t\t\tkey = makeAddress(arg.remoteHost, arg.remotePort);\n\t\t\t} else if (arg.tunnelRemoteHost && arg.tunnelRemotePort) {\n\t\t\t\tkey = makeAddress(arg.tunnelRemoteHost, arg.tunnelRemotePort);\n\t\t\t}\n\t\t\tif (key) {\n\t\t\t\tconst model = accessor.get(IRemoteExplorerService).tunnelModel;\n\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\tconst externalOpenerService = accessor.get(IExternalUriOpenerService);\n\t\t\t\treturn run(model, openerService, externalOpenerService, key);\n\t\t\t}\n\t\t};\n\t}\n\n\texport async function run(model: TunnelModel, openerService: IOpenerService, externalOpenerService: IExternalUriOpenerService, key: string) {\n\t\tconst tunnel = model.forwarded.get(key) || model.detected.get(key);\n\t\tlet address: string | undefined;\n\t\tif (tunnel && tunnel.localAddress && (address = model.address(tunnel.remoteHost, tunnel.remotePort))) {\n\t\t\tif (!address.startsWith('http')) {\n\t\t\t\taddress = `http://${address}`;\n\t\t\t}\n\t\t\tconst uri = URI.parse(address);\n\t\t\tconst sourceUri = URI.parse(`http://${tunnel.remoteHost}:${tunnel.remotePort}`);\n\t\t\tconst opener = await externalOpenerService.getOpener(uri, { sourceUri }, new CancellationTokenSource().token);\n\t\t\tif (opener) {\n\t\t\t\treturn opener.openExternalUri(uri, { sourceUri }, new CancellationTokenSource().token);\n\t\t\t}\n\t\t\treturn openerService.open(uri);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nnamespace OpenPortInBrowserCommandPaletteAction {\n\texport const ID = 'remote.tunnel.openCommandPalette';\n\texport const LABEL = nls.localize('remote.tunnel.openCommandPalette', \"Open Port in Browser\");\n\n\tinterface QuickPickTunnel extends IQuickPickItem {\n\t\ttunnel?: TunnelItem;\n\t}\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst model = remoteExplorerService.tunnelModel;\n\t\t\tconst quickPickService = accessor.get(IQuickInputService);\n\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst options: QuickPickTunnel[] = [...model.forwarded, ...model.detected].map(value => {\n\t\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(remoteExplorerService, value[1]);\n\t\t\t\treturn {\n\t\t\t\t\tlabel: tunnelItem.label,\n\t\t\t\t\tdescription: tunnelItem.processDescription,\n\t\t\t\t\ttunnel: tunnelItem\n\t\t\t\t};\n\t\t\t});\n\t\t\tif (options.length === 0) {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: nls.localize('remote.tunnel.openCommandPaletteNone', \"No ports currently forwarded. Open the Ports view to get started.\")\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: nls.localize('remote.tunnel.openCommandPaletteView', \"Open the Ports view...\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst picked = await quickPickService.pick<QuickPickTunnel>(options, { placeHolder: nls.localize('remote.tunnel.openCommandPalettePick', \"Choose the port to open\") });\n\t\t\tif (picked && picked.tunnel) {\n\t\t\t\treturn OpenPortInBrowserAction.run(model, openerService, makeAddress(picked.tunnel.remoteHost, picked.tunnel.remotePort));\n\t\t\t} else if (picked) {\n\t\t\t\treturn commandService.executeCommand(`${TUNNEL_VIEW_ID}.focus`);\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace CopyAddressAction {\n\texport const INLINE_ID = 'remote.tunnel.copyAddressInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.copyAddressCommandPalette';\n\texport const INLINE_LABEL = nls.localize('remote.tunnel.copyAddressInline', \"Copy Local Address\");\n\texport const COMMANDPALETTE_LABEL = nls.localize('remote.tunnel.copyAddressCommandPalette', \"Copy Forwarded Port Address\");\n\n\tasync function copyAddress(remoteExplorerService: IRemoteExplorerService, clipboardService: IClipboardService, tunnelItem: ITunnelItem) {\n\t\tconst address = remoteExplorerService.tunnelModel.address(tunnelItem.remoteHost, tunnelItem.remotePort);\n\t\tif (address) {\n\t\t\tawait clipboardService.writeText(address.toString());\n\t\t}\n\t}\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst context = (arg !== undefined || arg instanceof TunnelItem) ? arg : accessor.get(IContextKeyService).getContextKeyValue(TunnelViewSelectionKeyName);\n\t\t\tif (context instanceof TunnelItem) {\n\t\t\t\treturn copyAddress(accessor.get(IRemoteExplorerService), accessor.get(IClipboardService), context);\n\t\t\t}\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\t\tconst tunnels = Array.from(remoteExplorerService.tunnelModel.forwarded.values()).concat(Array.from(remoteExplorerService.tunnelModel.detected.values()));\n\t\t\tconst result = await quickInputService.pick(makeTunnelPicks(tunnels, remoteExplorerService), { placeHolder: nls.localize('remote.tunnel.copyAddressPlaceholdter', \"Choose a forwarded port\") });\n\t\t\tif (result && result.tunnel) {\n\t\t\t\tawait copyAddress(remoteExplorerService, clipboardService, result.tunnel);\n\t\t\t} else if (result) {\n\t\t\t\tawait commandService.executeCommand(ForwardPortAction.COMMANDPALETTE_ID);\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace ChangeLocalPortAction {\n\texport const ID = 'remote.tunnel.changeLocalPort';\n\texport const LABEL = nls.localize('remote.tunnel.changeLocalPort', \"Change Local Address Port\");\n\n\tfunction validateInput(value: string, canElevate: boolean): { content: string, severity: Severity } | null {\n\t\tif (!value.match(/^[0-9]+$/)) {\n\t\t\treturn { content: invalidPortString, severity: Severity.Error };\n\t\t} else if (Number(value) >= maxPortNumber) {\n\t\t\treturn { content: invalidPortNumberString, severity: Severity.Error };\n\t\t} else if (canElevate && isPortPrivileged(Number(value))) {\n\t\t\treturn { content: requiresSudoString, severity: Severity.Info };\n\t\t}\n\t\treturn null;\n\t}\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tconst context = (arg !== undefined || arg instanceof TunnelItem) ? arg : accessor.get(IContextKeyService).getContextKeyValue(TunnelViewSelectionKeyName);\n\t\t\tif (context instanceof TunnelItem) {\n\t\t\t\tremoteExplorerService.setEditable(context, TunnelEditId.LocalPort, {\n\t\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\t\tremoteExplorerService.setEditable(context, TunnelEditId.LocalPort, null);\n\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\tawait remoteExplorerService.close({ host: context.remoteHost, port: context.remotePort });\n\t\t\t\t\t\t\tconst numberValue = Number(value);\n\t\t\t\t\t\t\tconst newForward = await remoteExplorerService.forward({ host: context.remoteHost, port: context.remotePort }, numberValue, context.name, undefined, true);\n\t\t\t\t\t\t\tif (newForward && newForward.tunnelLocalPort !== numberValue) {\n\t\t\t\t\t\t\t\tnotificationService.warn(nls.localize('remote.tunnel.changeLocalPortNumber', \"The local port {0} is not available. Port number {1} has been used instead\", value, newForward.tunnelLocalPort ?? newForward.localAddress));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tvalidationMessage: (value) => validateInput(value, tunnelService.canElevate),\n\t\t\t\t\tplaceholder: nls.localize('remote.tunnelsView.changePort', \"New local port\")\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace MakePortPublicAction {\n\texport const ID = 'remote.tunnel.makePublic';\n\texport const LABEL = nls.localize('remote.tunnel.makePublic', \"Make Public\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tif (arg instanceof TunnelItem) {\n\t\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\t\tawait remoteExplorerService.close({ host: arg.remoteHost, port: arg.remotePort });\n\t\t\t\treturn remoteExplorerService.forward({ host: arg.remoteHost, port: arg.remotePort }, arg.localPort, arg.name, undefined, true, true);\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace MakePortPrivateAction {\n\texport const ID = 'remote.tunnel.makePrivate';\n\texport const LABEL = nls.localize('remote.tunnel.makePrivate', \"Make Private\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tif (arg instanceof TunnelItem) {\n\t\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\t\tawait remoteExplorerService.close({ host: arg.remoteHost, port: arg.remotePort });\n\t\t\t\treturn remoteExplorerService.forward({ host: arg.remoteHost, port: arg.remotePort }, arg.localPort, arg.name, undefined, true, false);\n\t\t\t}\n\t\t};\n\t}\n}\n\nconst tunnelViewCommandsWeightBonus = 10; // give our commands a little bit more weight over other default list/tree commands\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: LabelTunnelAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.and(TunnelViewFocusContextKey, TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded)),\n\tprimary: KeyCode.F2,\n\tmac: {\n\t\tprimary: KeyCode.Enter\n\t},\n\thandler: LabelTunnelAction.handler()\n});\nCommandsRegistry.registerCommand(ForwardPortAction.INLINE_ID, ForwardPortAction.inlineHandler());\nCommandsRegistry.registerCommand(ForwardPortAction.COMMANDPALETTE_ID, ForwardPortAction.commandPaletteHandler());\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: ClosePortAction.INLINE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.and(TunnelCloseableContextKey, TunnelViewFocusContextKey),\n\tprimary: KeyCode.Delete,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\tsecondary: [KeyCode.Delete]\n\t},\n\thandler: ClosePortAction.inlineHandler()\n});\n\nCommandsRegistry.registerCommand(ClosePortAction.COMMANDPALETTE_ID, ClosePortAction.commandPaletteHandler());\nCommandsRegistry.registerCommand(OpenPortInBrowserAction.ID, OpenPortInBrowserAction.handler());\nCommandsRegistry.registerCommand(OpenPortInPreviewAction.ID, OpenPortInPreviewAction.handler());\nCommandsRegistry.registerCommand(OpenPortInBrowserCommandPaletteAction.ID, OpenPortInBrowserCommandPaletteAction.handler());\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CopyAddressAction.INLINE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.or(ContextKeyExpr.and(TunnelViewFocusContextKey, TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded)), ContextKeyExpr.and(TunnelViewFocusContextKey, TunnelTypeContextKey.isEqualTo(TunnelType.Detected))),\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_C,\n\thandler: CopyAddressAction.inlineHandler()\n});\nCommandsRegistry.registerCommand(CopyAddressAction.COMMANDPALETTE_ID, CopyAddressAction.commandPaletteHandler());\nCommandsRegistry.registerCommand(ChangeLocalPortAction.ID, ChangeLocalPortAction.handler());\nCommandsRegistry.registerCommand(MakePortPublicAction.ID, MakePortPublicAction.handler());\nCommandsRegistry.registerCommand(MakePortPrivateAction.ID, MakePortPrivateAction.handler());\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: ClosePortAction.COMMANDPALETTE_ID,\n\t\ttitle: ClosePortAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: ForwardPortAction.COMMANDPALETTE_ID,\n\t\ttitle: ForwardPortAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: CopyAddressAction.COMMANDPALETTE_ID,\n\t\ttitle: CopyAddressAction.COMMANDPALETTE_LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: OpenPortInBrowserCommandPaletteAction.ID,\n\t\ttitle: OpenPortInBrowserCommandPaletteAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\n\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '._open',\n\torder: 0,\n\tcommand: {\n\t\tid: OpenPortInBrowserAction.ID,\n\t\ttitle: OpenPortInBrowserAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected))\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '._open',\n\torder: 1,\n\tcommand: {\n\t\tid: OpenPortInPreviewAction.ID,\n\t\ttitle: OpenPortInPreviewAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(WebContextKey.negate(), TunnelPrivacyContextKey.isEqualTo(TunnelPrivacy.Public)),\n\t\tContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected)))\n}));\n// The group 0_manage is used by extensions, so try not to change it\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '0_manage',\n\torder: 1,\n\tcommand: {\n\t\tid: LabelTunnelAction.ID,\n\t\ttitle: LabelTunnelAction.LABEL,\n\t\ticon: labelPortIcon\n\t},\n\twhen: TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 0,\n\tcommand: {\n\t\tid: CopyAddressAction.INLINE_ID,\n\t\ttitle: CopyAddressAction.INLINE_LABEL,\n\t},\n\twhen: ContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected))\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 1,\n\tcommand: {\n\t\tid: ChangeLocalPortAction.ID,\n\t\ttitle: ChangeLocalPortAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.and(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), PortChangableContextKey)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 2,\n\tcommand: {\n\t\tid: MakePortPublicAction.ID,\n\t\ttitle: MakePortPublicAction.LABEL,\n\t},\n\twhen: TunnelPrivacyContextKey.isEqualTo(TunnelPrivacy.Private)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 2,\n\tcommand: {\n\t\tid: MakePortPrivateAction.ID,\n\t\ttitle: MakePortPrivateAction.LABEL,\n\t},\n\twhen: TunnelPrivacyContextKey.isEqualTo(TunnelPrivacy.Public)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '3_forward',\n\torder: 0,\n\tcommand: {\n\t\tid: ClosePortAction.INLINE_ID,\n\t\ttitle: ClosePortAction.LABEL,\n\t},\n\twhen: TunnelCloseableContextKey\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '3_forward',\n\torder: 1,\n\tcommand: {\n\t\tid: ForwardPortAction.INLINE_ID,\n\t\ttitle: ForwardPortAction.LABEL,\n\t},\n}));\n\n\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 0,\n\tcommand: {\n\t\tid: ForwardPortAction.INLINE_ID,\n\t\ttitle: ForwardPortAction.TREEITEM_LABEL,\n\t\ticon: forwardPortIcon\n\t},\n\twhen: TunnelTypeContextKey.isEqualTo(TunnelType.Candidate)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 4,\n\tcommand: {\n\t\tid: LabelTunnelAction.ID,\n\t\ttitle: LabelTunnelAction.LABEL,\n\t\ticon: labelPortIcon\n\t},\n\twhen: TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 5,\n\tcommand: {\n\t\tid: ClosePortAction.INLINE_ID,\n\t\ttitle: ClosePortAction.LABEL,\n\t\ticon: stopForwardIcon\n\t},\n\twhen: TunnelCloseableContextKey\n}));\n\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: -1,\n\tcommand: {\n\t\tid: CopyAddressAction.INLINE_ID,\n\t\ttitle: CopyAddressAction.INLINE_LABEL,\n\t\ticon: copyAddressIcon\n\t},\n\twhen: ContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected))\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: 0,\n\tcommand: {\n\t\tid: OpenPortInBrowserAction.ID,\n\t\ttitle: OpenPortInBrowserAction.LABEL,\n\t\ticon: openBrowserIcon\n\t},\n\twhen: ContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected))\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: 1,\n\tcommand: {\n\t\tid: OpenPortInPreviewAction.ID,\n\t\ttitle: OpenPortInPreviewAction.LABEL,\n\t\ticon: openPreviewIcon\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(WebContextKey.negate(), TunnelPrivacyContextKey.isEqualTo(TunnelPrivacy.Public)),\n\t\tContextKeyExpr.or(TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded), TunnelTypeContextKey.isEqualTo(TunnelType.Detected)))\n}));\n\nexport const portWithRunningProcessForeground = registerColor('ports.iconRunningProcessForeground', {\n\tlight: STATUS_BAR_HOST_NAME_BACKGROUND,\n\tdark: STATUS_BAR_HOST_NAME_BACKGROUND,\n\thc: STATUS_BAR_HOST_NAME_BACKGROUND\n}, nls.localize('portWithRunningProcess.foreground', \"The color of the icon for a port that has an associated running process.\"));\n\nregisterThemingParticipant((theme, collector) => {\n\tconst portWithRunningProcessColor = theme.getColor(portWithRunningProcessForeground);\n\tif (portWithRunningProcessColor) {\n\t\tcollector.addRule(`.monaco-workbench ${ThemeIcon.asCSSSelector(forwardedPortWithProcessIcon)} { color: ${portWithRunningProcessColor} ; }`);\n\t}\n\n});\n"]}