{"version":3,"sources":["vs/workbench/contrib/remote/browser/remote.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAgEhG,MAAM,kBAAkB,GAAG,uCAAkB,CAAC,sBAAsB,CAAkB;QACrF,cAAc,EAAE,YAAY;QAC5B,UAAU,EAAE;YACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAAyC,CAAC;YACrG,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACX,YAAY,EAAE;oBACb,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA0C,EAAE,IAAoF,CAAC;oBAC3J,IAAI,EAAE,QAAQ;iBACd;gBACD,eAAe,EAAE;oBAChB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA6C,EAAE,IAAkF,CAAC;oBAC5J,IAAI,EAAE,QAAQ;iBACd;gBACD,UAAU,EAAE;oBACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwC,EAAE,IAAiF,CAAC;oBACtJ,IAAI,EAAE,QAAQ;iBACd;gBACD,QAAQ,EAAE;oBACT,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAsC,EAAE,IAA2E,CAAC;oBAC9I,IAAI,EAAE,QAAQ;iBACd;aACD;SACD;KACD,CAAC,CAAC;IAMH,MAAM,uBAAuB;QAC5B,SAAS,CAAC,OAAkB;YAC3B,OAAO,EAAE,CAAC;QACX,CAAC;QAED,aAAa,CAAC,OAAkB;YAC/B,OAAO,kBAAkB,CAAC;QAC3B,CAAC;KACD;IAOD,MAAM,gBAAgB;QAAtB;YACC,eAAU,GAAW,kBAAkB,CAAC;QAsBzC,CAAC;QApBA,cAAc,CAAC,SAAsB;YACpC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YACtD,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;YAC9E,MAAM,IAAI,GAA0B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,aAAa,CAAC,OAAwC,EAAE,KAAa,EAAE,YAAmC,EAAE,MAA0B;YACrI,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC;YACtC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YACzC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAChE,MAAM,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACxE,cAAc,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,CAAC;QAED,eAAe,CAAC,YAAmC;QAEnD,CAAC;KACD;IAED,MAAM,cAAc;QACnB,WAAW,CAAC,OAAkB;YAC7B,OAAO,OAAO,YAAY,SAAS,CAAC;QACrC,CAAC;QAED,WAAW,CAAC,OAAkB;YAC7B,IAAI,OAAO,YAAY,SAAS,IAAI,OAAO,CAAC,KAAK,EAAE;gBAClD,OAAO,OAAO,CAAC,KAAK,CAAC;aACrB;YAED,OAAO,EAAE,CAAC;QACX,CAAC;KACD;IAQD,MAAM,SAAS;QAGd,YACC,SAAqB,EACrB,aAA6B,EAC7B,iBAAqC,EACrC,cAA+B,EAC/B,qBAA6C,EAC7C,kBAAgD;YAEhD,IAAI,SAAS,GAAgB,EAAE,CAAC;YAChC,MAAM,UAAU,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE7E,IAAI,UAAU,CAAC,MAAM,EAAE;gBACtB,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAC1B,KAAK,CAAC,cAAc,EACpB,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAa,CAAC,EACrD,UAAU,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,EAC1E,IAAI,CAAC,oBAAoB,EACzB,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC3E,IAAI,CAAC,UAAW,CAAC,CACjB,CAAC,EACF,iBAAiB,EACjB,kBAAkB,EAClB,aAAa,EACb,qBAAqB,CACrB,CAAC,CAAC;aACH;YAED,MAAM,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEnF,IAAI,aAAa,CAAC,MAAM,EAAE;gBACzB,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAC1B,KAAK,CAAC,iBAAiB,EACvB,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAAoB,CAAC,EAC/D,aAAa,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,EAC7E,IAAI,CAAC,oBAAoB,EACzB,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC3E,IAAI,CAAC,aAAc,CAAC,CACpB,CAAC,EACF,iBAAiB,EACjB,kBAAkB,EAClB,aAAa,EACb,qBAAqB,CACrB,CAAC,CAAC;aACH;YAED,MAAM,QAAQ,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzE,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACpB,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAC1B,KAAK,CAAC,YAAY,EAClB,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAAkB,CAAC,EACxD,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,EACxE,IAAI,CAAC,oBAAoB,EACzB,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC3E,IAAI,CAAC,QAAS,CAAC,CACf,CAAC,EACF,iBAAiB,EACjB,kBAAkB,EAClB,aAAa,EACb,qBAAqB,CACrB,CAAC,CAAC;aACH;YAED,MAAM,MAAM,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAErE,IAAI,MAAM,CAAC,MAAM,EAAE;gBAClB,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAC1B,KAAK,CAAC,gBAAgB,EACtB,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAe,CAAC,EACnD,MAAM,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,EACtE,IAAI,CAAC,oBAAoB,EACzB,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC3E,IAAI,CAAC,MAAO,CAAC,CACb,CAAC,EACF,iBAAiB,EACjB,kBAAkB,EAClB,aAAa,EACb,qBAAqB,CACrB,CAAC,CAAC;aACH;YAED,IAAI,SAAS,CAAC,MAAM,EAAE;gBACrB,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAiB,CACnC,KAAK,CAAC,gBAAgB,EACtB,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAc,CAAC,EAClD,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,EACtE,IAAI,CAAC,oBAAoB,EACzB,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAC3E,CAAC,CAAC,EACH,iBAAiB,EACjB,kBAAkB,EAClB,cAAc,EACd,qBAAqB,CACrB,CAAC,CAAC;aACH;YAED,IAAI,SAAS,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;aACvB;QACF,CAAC;KACD;IAED,MAAM,aAAa;QAElB,YAAoB,cAA+B,EAAS,oBAA2C,EAAS,eAAqC,EAAU,YAAqB;YAAhK,mBAAc,GAAd,cAAc,CAAiB;YAAS,yBAAoB,GAApB,oBAAoB,CAAuB;YAAS,oBAAe,GAAf,eAAe,CAAsB;YAAU,iBAAY,GAAZ,YAAY,CAAS;QAAI,CAAC;QAEzL,IAAI,GAAG;YACN,OAAO,IAAI,OAAO,CAAS,KAAK,EAAE,OAAO,EAAE,EAAE;gBAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;wBACtB,IAAI,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBACvC,IAAI,GAAG,CAAC,SAAS,EAAE;4BAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;yBAC9B;6BAAM;4BACN,MAAM,UAAU,GAAgC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BACtG,iGAAiG;4BACjG,MAAM,WAAW,GAAoB,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;4BAChG,IAAI,CAAC,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;yBAC1D;qBACD;iBACD;gBACD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC5B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;iBACf;gBACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;IAED,MAAe,YAAY;QAE1B,YACQ,IAAe,EACf,KAAa,EACb,MAAuB,EACtB,iBAAqC,EACrC,kBAAgD,EAChD,qBAA6C;YAL9C,SAAI,GAAJ,IAAI,CAAW;YACf,UAAK,GAAL,KAAK,CAAQ;YACb,WAAM,GAAN,MAAM,CAAiB;YACtB,sBAAiB,GAAjB,iBAAiB,CAAoB;YACrC,uBAAkB,GAAlB,kBAAkB,CAA8B;YAChD,0BAAqB,GAArB,qBAAqB,CAAwB;YAP/C,gBAAW,GAAa,EAAE,CAAC;YASjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,wBAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QAC1D,CAAC;QAED,KAAK,CAAC,WAAW;YAChB,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;YAChE,IAAI,eAAe,EAAE;gBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtE,IAAI,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;wBACzE,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;4BAC9B,IAAI,KAAK,CAAC,eAAe,EAAE;gCAC1B,KAAK,IAAI,SAAS,IAAI,KAAK,CAAC,eAAe,EAAE;oCAC5C,IAAI,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;wCAC1C,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,oBAAoB,EAAE,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;wCACnE,OAAO;qCACP;iCACD;6BACD;yBACD;qBACD;iBACD;aACD;YAED,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,OAAO,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;oBAChE,OAAO;wBACN,KAAK,EAAE,KAAK,CAAC,oBAAoB,CAAC,WAAW,IAAI,KAAK,CAAC,oBAAoB,CAAC,UAAU,CAAC,KAAK;wBAC5F,WAAW,EAAE,MAAM,KAAK,CAAC,GAAG;wBAC5B,oBAAoB,EAAE,KAAK,CAAC,oBAAoB;qBAChD,CAAC;gBACH,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAEtC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAqB,EAAE,IAAoB,CAAC,EAAE,CAAC,CAAC;gBAEtI,IAAI,MAAM,EAAE;oBACX,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;iBACvE;aACD;iBAAM;gBACN,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACrF;QACF,CAAC;KAGD;IAED,MAAM,QAAS,SAAQ,YAAY;QAClC,YACC,IAAe,EACf,KAAa,EACb,MAAuB,EACvB,iBAAqC,EACrC,kBAAgD,EACxC,aAA6B,EACrC,qBAA6C;YAE7C,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;YAHjF,kBAAa,GAAb,aAAa,CAAgB;QAItC,CAAC;QAES,KAAK,CAAC,UAAU,CAAC,oBAA2C,EAAE,GAAW;YAClF,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;QACxE,CAAC;KACD;IAED,MAAM,iBAAkB,SAAQ,YAAY;QAC3C,YACC,IAAe,EACf,KAAa,EACb,MAAuB,EACvB,iBAAqC,EACrC,kBAAgD,EACxC,cAA+B,EACvC,qBAA6C;YAE7C,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;YAHjF,mBAAc,GAAd,cAAc,CAAiB;QAIxC,CAAC;QAES,KAAK,CAAC,UAAU,CAAC,oBAA2C;YACrE,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,oCAAoC,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACzH,CAAC;KACD;IAED,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,mBAAQ;QAK/B,YACW,SAAqB,EAC/B,OAAyB,EACL,iBAAqC,EACpC,kBAAuC,EACxC,iBAAqC,EAClC,oBAA2C,EAC3C,oBAA2C,EAC1C,qBAA6C,EACrD,aAA6B,EACf,iBAAqC,EACxC,cAA+B,EACf,qBAA6C,EACvC,kBAAgD,EAClF,YAA2B,EACvB,gBAAmC;YAEtD,KAAK,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;YAhBjL,cAAS,GAAT,SAAS,CAAY;YASD,sBAAiB,GAAjB,iBAAiB,CAAoB;YACxC,mBAAc,GAAd,cAAc,CAAiB;YACf,0BAAqB,GAArB,qBAAqB,CAAwB;YACvC,uBAAkB,GAAlB,kBAAkB,CAA8B;QAKlG,CAAC;QAEkB,UAAU,CAAC,SAAsB;YACnD,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAE5B,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACvC,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpD,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnD,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAErC,IAAI,CAAC,IAAI,GAA4D,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,oCAAsB,EACnI,YAAY,EACZ,aAAa,EACb,IAAI,uBAAuB,EAAE,EAC7B,CAAC,IAAI,gBAAgB,EAAE,CAAC,EACxB,IAAI,cAAc,EAAE,EACpB;gBACC,qBAAqB,EAAE;oBACtB,YAAY,EAAE,CAAC,IAAkB,EAAE,EAAE;wBACpC,OAAO,IAAI,CAAC,KAAK,CAAC;oBACnB,CAAC;oBACD,kBAAkB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC;iBACnE;aACD,CACD,CAAC;YAEF,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAElK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;;gBACxF,MAAA,CAAC,CAAC,OAAO,0CAAE,WAAW,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEkB,UAAU,CAAC,MAAc,EAAE,KAAa;YAC1D,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC;KACD,CAAA;IA7DgB,YAAE,GAAG,mBAAmB,CAAC;IACzB,eAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAa,EAAE,IAAmB,CAAC,CAAC;IAFpE,SAAS;QAQZ,WAAA,+BAAkB,CAAA;QAClB,WAAA,iCAAmB,CAAA;QACnB,WAAA,+BAAkB,CAAA;QAClB,WAAA,qCAAqB,CAAA;QACrB,WAAA,qCAAqB,CAAA;QACrB,WAAA,8BAAsB,CAAA;QACtB,WAAA,uBAAc,CAAA;QACd,WAAA,+BAAkB,CAAA;QAClB,YAAA,0BAAe,CAAA;QACf,YAAA,8CAAsB,CAAA;QACtB,YAAA,iDAA4B,CAAA;QAC5B,YAAA,4BAAa,CAAA;QACb,YAAA,6BAAiB,CAAA;OApBd,SAAS,CA8Dd;IAED,MAAM,mBAAmB;QASxB,YAAY,SAAqB;YARxB,OAAE,GAAG,SAAS,CAAC,EAAE,CAAC;YAClB,SAAI,GAAG,SAAS,CAAC,KAAK,CAAC;YAEvB,wBAAmB,GAAG,IAAI,CAAC;YAC3B,kBAAa,GAAG,KAAK,CAAC;YACtB,UAAK,GAAG,SAAS,CAAC;YAClB,UAAK,GAAG,CAAC,EAAE,CAAC;YAGpB,IAAI,CAAC,cAAc,GAAG,IAAI,4BAAc,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;QAClE,CAAC;KACD;IAED,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,sCAAuB;QAKnE,YAC0B,aAAsC,EAC5C,gBAAmC,EAC5B,cAAwC,EACjD,cAA+B,EACzB,oBAA2C,EAC3C,oBAA2C,EACnD,YAA2B,EACrB,kBAAuC,EACzC,gBAAmC,EACrB,qBAA6C,EACvC,kBAAgD,EAClD,iBAAqC,EAClD,qBAA6C;YAErE,KAAK,CAAC,2BAAU,EAAE,qBAAqB,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,EAAE,oBAAoB,EAAE,YAAY,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,cAAc,EAAE,qBAAqB,CAAC,CAAC;YALtN,0BAAqB,GAArB,qBAAqB,CAAwB;YACvC,uBAAkB,GAAlB,kBAAkB,CAA8B;YAClD,sBAAiB,GAAjB,iBAAiB,CAAoB;YAhBnE,wBAAmB,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC5D,oBAAe,GAAsB,EAAE,CAAC;YAChC,8BAAyB,GAAY,KAAK,CAAC;YAkBlD,IAAI,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5D,kBAAkB,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC5C,IAAI,eAAe,GAAsB,EAAE,CAAC;gBAC5C,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;oBACjC,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;iBACjE;gBAED,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBAEvC,MAAM,aAAa,GAAG,mBAAQ,CAAC,EAAE,CAAiB,kBAAU,CAAC,aAAa,CAAC,CAAC;gBAC5E,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;oBAChC,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC5E;qBAAM;oBACN,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC9E;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,+BAA+B,CAAC,SAA+C,EAAE,eAAkC;YAC1H,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,iBAAiB,EAAE;gBAC7C,OAAO;aACP;YAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC1H,OAAO;aACP;YAED,eAAe,CAAC,IAAI,CAAC;gBACpB,oBAAoB,EAAE,SAAS,CAAC,WAAW;gBAC3C,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,UAAU;gBACtC,aAAa,EAAE,SAAS,CAAC,KAAK,CAAC,aAAa;gBAC5C,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ;gBAClC,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM;gBAC9B,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,UAAU;aACtC,CAAC,CAAC;QACJ,CAAC;QAES,WAAW,CAAC,cAA+B;YACpD,OAAO,CAAA,GAAA,qBAAa,CAAA,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC;QAC3H,CAAC;QAES,SAAS,CAAC,cAA+B;YAClD,IAAI,CAAC,qBAAqB,CAAC,UAAU,GAAG,CAAA,GAAA,qBAAa,CAAA,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAgB,CAAC,CAAC;QAC5J,CAAC;QAEe,iBAAiB,CAAC,MAAc;YAC/C,IAAI,MAAM,CAAC,EAAE,KAAK,sCAAkB,CAAC,EAAE,EAAE;gBACxC,MAAM,WAAW,GAAG,wCAAoB,CAAC,iBAAiB,CAAC,mBAAQ,CAAC,EAAE,CAAiB,kBAAU,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACvK,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,wCAAoB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;gBACjG,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;oBACpC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;iBAClE;qBAAM;oBACN,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;gBACD,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAED,QAAQ;YACP,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;YACjE,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAA;IArFY,uBAAuB;QAMjC,WAAA,uCAAuB,CAAA;QACvB,WAAA,6BAAiB,CAAA;QACjB,WAAA,oCAAwB,CAAA;QACxB,WAAA,yBAAe,CAAA;QACf,WAAA,qCAAqB,CAAA;QACrB,WAAA,qCAAqB,CAAA;QACrB,WAAA,4BAAa,CAAA;QACb,WAAA,iCAAmB,CAAA;QACnB,WAAA,8BAAiB,CAAA;QACjB,WAAA,8CAAsB,CAAA;QACtB,YAAA,iDAA4B,CAAA;QAC5B,YAAA,+BAAkB,CAAA;QAClB,YAAA,8BAAsB,CAAA;OAlBZ,uBAAuB,CAqFnC;IArFY,0DAAuB;IAuFpC,CAAA,GAAA,yBAAe,CAAA,CAAC,sCAAkB,CAAC,CAAC;IAEpC,mBAAQ,CAAC,EAAE,CAA0B,kBAAU,CAAC,sBAAsB,CAAC,CAAC,qBAAqB,CAC5F;QACC,EAAE,EAAE,2BAAU;QACd,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;QACzD,cAAc,EAAE,IAAI,4BAAc,CAAC,uBAAuB,CAAC;QAC3D,WAAW,EAAE,IAAI;QACjB,iBAAiB,EAAE;YAClB,QAAQ,EAAE,CAAC,KAAc,EAAE,EAAE;gBAC5B,IAAI,CAAC,KAAK,EAAE;oBACX,OAAO;iBACP;gBAED,IAAI,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,IAAI,OAAO,EAAE;oBACZ,OAAO,CAAC,IAAI,CAAC;iBACb;gBAED,OAAO,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,OAAO,EAAE;oBACZ,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjC;gBAED,OAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,IAAI,OAAO,EAAE;oBACZ,OAAO,CAAC,EAAE,CAAC;iBACX;gBAED,OAAO;YACR,CAAC;SACD;QACD,IAAI,EAAE,KAAK,CAAC,sBAAsB;QAClC,KAAK,EAAE,CAAC;KACR,kBAAgC,CAAC;IAEnC,IAAM,aAAa,GAAnB,MAAM,aAAa;QAElB,YACsB,kBAAuC,EAC7C,YAA2B;YAE1C,kBAAkB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBACpD,IAAI,SAAS,EAAE;oBACd,YAAY,CAAC,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;iBAC5D;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAZK,aAAa;QAGhB,WAAA,wCAAmB,CAAA;QACnB,WAAA,4BAAa,CAAA;OAJV,aAAa,CAYlB;IAED,MAAM,eAAe;QAapB,YAAY,eAAiC,EAAE,QAA0B,EAAE,aAA4B,EAAE,OAAiB,EAAE,WAA4E;YACvM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YACjC,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC;YAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,MAAM,OAAO,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,8BAA8B,GAAG,OAAO,CAAC,CAAC;YAE9F,eAAe,CAAC,YAAY,CAC3B,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,EACxC,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBAAE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;aAAE,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,EAC9F,CAAC,MAAM,EAAE,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CACjD,CAAC;YAEF,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,MAAM,EAAE,CAAC;aACd;QACF,CAAC;QAvBD,IAAW,UAAU;YACpB,OAAO,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;QAuBM,OAAO;YACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,8BAA8B,EAAE;gBACxC,IAAI,CAAC,8BAA8B,EAAE,CAAC;gBACtC,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC;aAC3C;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC1B;QACF,CAAC;QAEM,MAAM,CAAC,OAAgB;YAC7B,IAAI,OAAO,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;aAC3B;YAED,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC9C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;aAC5D;QACF,CAAC;QAEM,UAAU,CAAC,cAAsB;YACvC,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,aAAa,GAAG,IAAI,kBAAkB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACnE,CAAC;QAEM,SAAS;YACf,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC1B;QACF,CAAC;KACD;IAED,MAAM,kBAAkB;QAKvB,YAAY,MAAuB,EAAE,cAAsB;YAC1D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;QAEM,OAAO;YACb,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;QAEO,OAAO;YACd,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC1D,IAAI,eAAe,GAAG,CAAC,EAAE;gBACxB,OAAO;aACP;YACD,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;YACxD,IAAI,aAAa,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,qBAAqB,EAAE,0CAA0C,EAAE,aAAa,CAAC,CAAC,CAAC;aACpH;iBAAM;gBACN,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,2CAA2C,EAAE,aAAa,CAAC,CAAC,CAAC;aACtH;QACF,CAAC;KACD;IAED;;OAEG;IACH,MAAM,sBAAsB,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,aAAa;IAEvD,IAAM,mCAAmC,GAAzC,MAAM,mCAAoC,SAAQ,sBAAU;QAI3D,YACsB,kBAAuC,EAC1C,eAAiC,EACnC,aAA6B,EAC5B,cAA+B,EAC5B,iBAAqC,EAC5C,UAAuB,EACN,kBAAgD,EAC3D,gBAAmC;YAEtD,KAAK,EAAE,CAAC;YAZD,uBAAkB,GAAY,KAAK,CAAC;YAa3C,MAAM,UAAU,GAAG,kBAAkB,CAAC,aAAa,EAAE,CAAC;YACtD,IAAI,UAAU,EAAE;gBACf,IAAI,iBAAiB,GAAG,KAAK,CAAC;gBAC9B,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC;gBACzD,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,GAA2B,IAAI,CAAC;gBACnD,IAAI,kBAAkB,GAAiC,IAAI,CAAC;gBAC5D,IAAI,kBAAkB,GAAuB,IAAI,CAAC;gBAElD,SAAS,YAAY,CAAC,QAAwE,EAAE,OAAkD,EAAE,gBAA+B,IAAI;oBACtL,IAAI,eAAe,EAAE;wBACpB,eAAe,CAAC,OAAO,EAAE,CAAC;wBAC1B,eAAe,GAAG,IAAI,CAAC;qBACvB;oBAED,IAAI,CAAC,QAAQ,EAAE;wBACd,QAAQ,GAAG,iBAAiB,CAAC,CAAC,uBAA+B,CAAC,gBAAwB,CAAC;qBACvF;oBAED,OAAO,IAAI,eAAe,CACzB,eAAe,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAC7E,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;wBACtB,4BAA4B;wBAC5B,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;4BACrD,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;yBAC3B;6BAAM;4BACN,IAAI,QAAQ,oBAA4B,EAAE;gCACzC,eAAe,GAAG,YAAY,wBAAgC,OAAO,EAAE,UAAU,CAAC,CAAC;6BACnF;iCAAM;gCACN,YAAY,EAAE,CAAC;6BACf;yBACD;oBACF,CAAC,CACD,CAAC;gBACH,CAAC;gBAED,SAAS,YAAY;oBACpB,IAAI,eAAe,EAAE;wBACpB,eAAe,CAAC,OAAO,EAAE,CAAC;wBAC1B,eAAe,GAAG,IAAI,CAAC;qBACvB;gBACF,CAAC;gBAED,IAAI,iBAAiB,GAAW,EAAE,CAAC;gBACnC,IAAI,oBAAoB,GAAW,CAAC,CAAC;gBACrC,IAAI,oBAAoB,GAAW,CAAC,CAAC;gBAErC,MAAM,eAAe,GAAG;oBACvB,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC;oBACpD,QAAQ,EAAE,GAAG,EAAE;wBACd,IAAI,kBAAkB,EAAE;4BACvB,kBAAkB,CAAC,QAAQ,EAAE,CAAC;yBAC9B;oBACF,CAAC;iBACD,CAAC;gBAEF,MAAM,YAAY,GAAG;oBACpB,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC;oBACpD,QAAQ,EAAE,GAAG,EAAE;wBAcd,gBAAgB,CAAC,UAAU,CAAsD,0BAA0B,EAAE;4BAC5G,UAAU,EAAE,CAAA,GAAA,2BAAa,CAAA,CAAC,kBAAkB,CAAC,eAAe,CAAC;4BAC7D,iBAAiB,EAAE,iBAAiB;4BACpC,2BAA2B,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,oBAAoB;4BAC9D,OAAO,EAAE,oBAAoB;yBAC7B,CAAC,CAAC;wBAEH,cAAc,CAAC,cAAc,CAAC,kCAAkB,CAAC,EAAE,CAAC,CAAC;oBACtD,CAAC;iBACD,CAAC;gBAEF,8BAA8B;gBAC9B,wCAAwC;gBACxC,+DAA+D;gBAC/D,6CAA6C;gBAC7C,sEAAsE;gBAEtE,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAE;oBACjC,IAAI,eAAe,EAAE;wBACpB,eAAe,CAAC,SAAS,EAAE,CAAC;qBAC5B;oBAED,IAAI,kBAAkB,EAAE;wBACvB,kBAAkB,CAAC,OAAO,EAAE,CAAC;wBAC7B,kBAAkB,GAAG,IAAI,CAAC;qBAC1B;oBACD,QAAQ,CAAC,CAAC,IAAI,EAAE;wBACf;4BACC,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC;4BACxC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,2BAA2B,CAAC;4BAClE,oBAAoB,GAAG,CAAC,CAAC;4BAUzB,gBAAgB,CAAC,UAAU,CAAgE,sBAAsB,EAAE;gCAClH,UAAU,EAAE,CAAA,GAAA,2BAAa,CAAA,CAAC,kBAAkB,CAAC,eAAe,CAAC;gCAC7D,iBAAiB,EAAE,CAAC,CAAC,iBAAiB;6BACtC,CAAC,CAAC;4BAEH,IAAI,eAAe,IAAI,CAAC,CAAC,2BAA2B,GAAG,sBAAsB,EAAE;gCAC9E,IAAI,CAAC,eAAe,EAAE;oCACrB,eAAe,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC;iCACtE;gCACD,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC,CAAC;6BAC1E;4BACD,MAAM;wBAEP;4BACC,IAAI,eAAe,EAAE;gCACpB,kBAAkB,GAAG,CAAC,CAAC;gCACvB,eAAe,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC;gCACtE,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;6BAClE;4BACD,MAAM;wBAEP;4BACC,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC;4BACxC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,2BAA2B,CAAC;4BAClE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC;4BAcjC,gBAAgB,CAAC,UAAU,CAA0E,2BAA2B,EAAE;gCACjI,UAAU,EAAE,CAAA,GAAA,2BAAa,CAAA,CAAC,kBAAkB,CAAC,eAAe,CAAC;gCAC7D,iBAAiB,EAAE,CAAC,CAAC,iBAAiB;gCACtC,2BAA2B,EAAE,CAAC,CAAC,2BAA2B;gCAC1D,OAAO,EAAE,CAAC,CAAC,OAAO;6BAClB,CAAC,CAAC;4BAEH,IAAI,eAAe,IAAI,CAAC,CAAC,2BAA2B,GAAG,sBAAsB,EAAE;gCAC9E,eAAe,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;gCACrD,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,qBAAqB,EAAE,0CAA0C,CAAC,CAAC,CAAC;gCAExG,+CAA+C;gCAC/C,kBAAkB,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE;oCAClD,6EAA6E;oCAC7E,IAAI,eAAe,IAAI,eAAe,CAAC,QAAQ,oBAA4B,EAAE;wCAC5E,eAAe,GAAG,YAAY,wBAAgC,CAAC,YAAY,CAAC,EAAE,eAAe,CAAC,UAAU,CAAC,CAAC;qCAC1G;gCACF,CAAC,CAAC,CAAC;6BACH;4BAED,MAAM;wBAEP;4BACC,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC;4BACxC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,2BAA2B,CAAC;4BAClE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC;4BAgBjC,gBAAgB,CAAC,UAAU,CAA4F,oCAAoC,EAAE;gCAC5J,UAAU,EAAE,CAAA,GAAA,2BAAa,CAAA,CAAC,kBAAkB,CAAC,eAAe,CAAC;gCAC7D,iBAAiB,EAAE,CAAC,CAAC,iBAAiB;gCACtC,2BAA2B,EAAE,CAAC,CAAC,2BAA2B;gCAC1D,OAAO,EAAE,CAAC,CAAC,OAAO;gCAClB,OAAO,EAAE,CAAC,CAAC,OAAO;6BAClB,CAAC,CAAC;4BAEH,YAAY,EAAE,CAAC;4BAEf,IAAI,CAAC,CAAC,OAAO,EAAE;gCACd,UAAU,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;gCAC5E,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;6BACxE;iCAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gCACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gCAC/B,aAAa,CAAC,IAAI,CAAC,kBAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,8BAA8B,EAAE,6CAA6C,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oCAC/P,oBAAoB;oCACpB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;wCACxB,cAAc,CAAC,cAAc,CAAC,kCAAkB,CAAC,EAAE,CAAC,CAAC;qCACrD;gCACF,CAAC,CAAC,CAAC;6BACH;4BACD,MAAM;wBAEP;4BACC,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC;4BACxC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,2BAA2B,CAAC;4BAClE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC;4BAcjC,gBAAgB,CAAC,UAAU,CAAgE,sBAAsB,EAAE;gCAClH,UAAU,EAAE,CAAA,GAAA,2BAAa,CAAA,CAAC,kBAAkB,CAAC,eAAe,CAAC;gCAC7D,iBAAiB,EAAE,CAAC,CAAC,iBAAiB;gCACtC,2BAA2B,EAAE,CAAC,CAAC,2BAA2B;gCAC1D,OAAO,EAAE,CAAC,CAAC,OAAO;6BAClB,CAAC,CAAC;4BAEH,YAAY,EAAE,CAAC;4BACf,MAAM;qBACP;gBACF,CAAC,CAAC,CAAC;aACH;QACF,CAAC;KACD,CAAA;IArQK,mCAAmC;QAKtC,WAAA,wCAAmB,CAAA;QACnB,WAAA,2BAAgB,CAAA;QAChB,WAAA,wBAAc,CAAA;QACd,WAAA,0BAAe,CAAA;QACf,WAAA,+BAAkB,CAAA;QAClB,WAAA,iBAAW,CAAA;QACX,WAAA,iDAA4B,CAAA;QAC5B,WAAA,6BAAiB,CAAA;OAZd,mCAAmC,CAqQxC;IAED,MAAM,8BAA8B,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IACnH,8BAA8B,CAAC,6BAA6B,CAAC,mCAAmC,qBAA4B,CAAC;IAC7H,8BAA8B,CAAC,6BAA6B,CAAC,uCAAqB,mBAA0B,CAAC;IAC7G,8BAA8B,CAAC,6BAA6B,CAAC,mCAAkB,qBAA4B,CAAC;IAC5G,8BAA8B,CAAC,6BAA6B,CAAC,4BAAW,qBAA4B,CAAC;IACrG,8BAA8B,CAAC,6BAA6B,CAAC,wCAAuB,qBAA4B,CAAC;IACjH,8BAA8B,CAAC,6BAA6B,CAAC,aAAa,qBAA4B,CAAC","file":"remote.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/remoteViewlet';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { FilterViewPaneContainer } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { AutomaticPortForwarding, ForwardedPortsView, PortRestore, VIEWLET_ID } from 'vs/workbench/contrib/remote/browser/remoteExplorer';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewDescriptor, IViewsRegistry, Extensions, ViewContainerLocation, IViewContainersRegistry, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IProgress, IProgressStep, IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { ReconnectionWaitEvent, PersistentConnectionEventType } from 'vs/platform/remote/common/remoteAgentConnection';\nimport Severity from 'vs/base/common/severity';\nimport { ReloadWindowAction } from 'vs/workbench/browser/actions/windowActions';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { SwitchRemoteViewItem, SwitchRemoteAction } from 'vs/workbench/contrib/remote/browser/explorerViewItems';\nimport { Action } from 'vs/base/common/actions';\nimport { isStringArray } from 'vs/base/common/types';\nimport { IRemoteExplorerService } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ViewPane, IViewPaneOptions } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { ITreeRenderer, ITreeNode, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Event } from 'vs/base/common/event';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { RemoteStatusIndicator } from 'vs/workbench/contrib/remote/browser/remoteIndicator';\nimport * as icons from 'vs/workbench/contrib/remote/browser/remoteIcons';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\n\n\nexport interface HelpInformation {\n\textensionDescription: IExtensionDescription;\n\tgetStarted?: string;\n\tdocumentation?: string;\n\tfeedback?: string;\n\tissues?: string;\n\tremoteName?: string[] | string;\n}\n\nconst remoteHelpExtPoint = ExtensionsRegistry.registerExtensionPoint<HelpInformation>({\n\textensionPoint: 'remoteHelp',\n\tjsonSchema: {\n\t\tdescription: nls.localize('RemoteHelpInformationExtPoint', 'Contributes help information for Remote'),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'getStarted': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.getStarted', \"The url, or a command that returns the url, to your project's Getting Started page\"),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t'documentation': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.documentation', \"The url, or a command that returns the url, to your project's documentation page\"),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t'feedback': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.feedback', \"The url, or a command that returns the url, to your project's feedback reporter\"),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t'issues': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.issues', \"The url, or a command that returns the url, to your project's issues list\"),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t}\n});\n\ninterface IViewModel {\n\thelpInformation: HelpInformation[];\n}\n\nclass HelpTreeVirtualDelegate implements IListVirtualDelegate<IHelpItem> {\n\tgetHeight(element: IHelpItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IHelpItem): string {\n\t\treturn 'HelpItemTemplate';\n\t}\n}\n\ninterface IHelpItemTemplateData {\n\tparent: HTMLElement;\n\ticon: HTMLElement;\n}\n\nclass HelpTreeRenderer implements ITreeRenderer<HelpModel | IHelpItem, IHelpItem, IHelpItemTemplateData> {\n\ttemplateId: string = 'HelpItemTemplate';\n\n\trenderTemplate(container: HTMLElement): IHelpItemTemplateData {\n\t\tcontainer.classList.add('remote-help-tree-node-item');\n\t\tconst icon = dom.append(container, dom.$('.remote-help-tree-node-item-icon'));\n\t\tconst data = <IHelpItemTemplateData>Object.create(null);\n\t\tdata.parent = container;\n\t\tdata.icon = icon;\n\t\treturn data;\n\t}\n\n\trenderElement(element: ITreeNode<IHelpItem, IHelpItem>, index: number, templateData: IHelpItemTemplateData, height: number | undefined): void {\n\t\tconst container = templateData.parent;\n\t\tdom.append(container, templateData.icon);\n\t\ttemplateData.icon.classList.add(...element.element.iconClasses);\n\t\tconst labelContainer = dom.append(container, dom.$('.help-item-label'));\n\t\tlabelContainer.innerText = element.element.label;\n\t}\n\n\tdisposeTemplate(templateData: IHelpItemTemplateData): void {\n\n\t}\n}\n\nclass HelpDataSource implements IAsyncDataSource<HelpModel, IHelpItem> {\n\thasChildren(element: HelpModel) {\n\t\treturn element instanceof HelpModel;\n\t}\n\n\tgetChildren(element: HelpModel) {\n\t\tif (element instanceof HelpModel && element.items) {\n\t\t\treturn element.items;\n\t\t}\n\n\t\treturn [];\n\t}\n}\ninterface IHelpItem {\n\ticon: ThemeIcon,\n\ticonClasses: string[];\n\tlabel: string;\n\thandleClick(): Promise<void>;\n}\n\nclass HelpModel {\n\titems: IHelpItem[] | undefined;\n\n\tconstructor(\n\t\tviewModel: IViewModel,\n\t\topenerService: IOpenerService,\n\t\tquickInputService: IQuickInputService,\n\t\tcommandService: ICommandService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tenvironmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tlet helpItems: IHelpItem[] = [];\n\t\tconst getStarted = viewModel.helpInformation.filter(info => info.getStarted);\n\n\t\tif (getStarted.length) {\n\t\t\thelpItems.push(new HelpItem(\n\t\t\t\ticons.getStartedIcon,\n\t\t\t\tnls.localize('remote.help.getStarted', \"Get Started\"),\n\t\t\t\tgetStarted.map((info: HelpInformation) => (new HelpItemValue(commandService,\n\t\t\t\t\tinfo.extensionDescription,\n\t\t\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName,\n\t\t\t\t\tinfo.getStarted!)\n\t\t\t\t)),\n\t\t\t\tquickInputService,\n\t\t\t\tenvironmentService,\n\t\t\t\topenerService,\n\t\t\t\tremoteExplorerService\n\t\t\t));\n\t\t}\n\n\t\tconst documentation = viewModel.helpInformation.filter(info => info.documentation);\n\n\t\tif (documentation.length) {\n\t\t\thelpItems.push(new HelpItem(\n\t\t\t\ticons.documentationIcon,\n\t\t\t\tnls.localize('remote.help.documentation', \"Read Documentation\"),\n\t\t\t\tdocumentation.map((info: HelpInformation) => (new HelpItemValue(commandService,\n\t\t\t\t\tinfo.extensionDescription,\n\t\t\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName,\n\t\t\t\t\tinfo.documentation!)\n\t\t\t\t)),\n\t\t\t\tquickInputService,\n\t\t\t\tenvironmentService,\n\t\t\t\topenerService,\n\t\t\t\tremoteExplorerService\n\t\t\t));\n\t\t}\n\n\t\tconst feedback = viewModel.helpInformation.filter(info => info.feedback);\n\n\t\tif (feedback.length) {\n\t\t\thelpItems.push(new HelpItem(\n\t\t\t\ticons.feedbackIcon,\n\t\t\t\tnls.localize('remote.help.feedback', \"Provide Feedback\"),\n\t\t\t\tfeedback.map((info: HelpInformation) => (new HelpItemValue(commandService,\n\t\t\t\t\tinfo.extensionDescription,\n\t\t\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName,\n\t\t\t\t\tinfo.feedback!)\n\t\t\t\t)),\n\t\t\t\tquickInputService,\n\t\t\t\tenvironmentService,\n\t\t\t\topenerService,\n\t\t\t\tremoteExplorerService\n\t\t\t));\n\t\t}\n\n\t\tconst issues = viewModel.helpInformation.filter(info => info.issues);\n\n\t\tif (issues.length) {\n\t\t\thelpItems.push(new HelpItem(\n\t\t\t\ticons.reviewIssuesIcon,\n\t\t\t\tnls.localize('remote.help.issues', \"Review Issues\"),\n\t\t\t\tissues.map((info: HelpInformation) => (new HelpItemValue(commandService,\n\t\t\t\t\tinfo.extensionDescription,\n\t\t\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName,\n\t\t\t\t\tinfo.issues!)\n\t\t\t\t)),\n\t\t\t\tquickInputService,\n\t\t\t\tenvironmentService,\n\t\t\t\topenerService,\n\t\t\t\tremoteExplorerService\n\t\t\t));\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\thelpItems.push(new IssueReporterItem(\n\t\t\t\ticons.reportIssuesIcon,\n\t\t\t\tnls.localize('remote.help.report', \"Report Issue\"),\n\t\t\t\tviewModel.helpInformation.map(info => (new HelpItemValue(commandService,\n\t\t\t\t\tinfo.extensionDescription,\n\t\t\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName\n\t\t\t\t))),\n\t\t\t\tquickInputService,\n\t\t\t\tenvironmentService,\n\t\t\t\tcommandService,\n\t\t\t\tremoteExplorerService\n\t\t\t));\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\tthis.items = helpItems;\n\t\t}\n\t}\n}\n\nclass HelpItemValue {\n\tprivate _url: string | undefined;\n\tconstructor(private commandService: ICommandService, public extensionDescription: IExtensionDescription, public remoteAuthority: string[] | undefined, private urlOrCommand?: string) { }\n\n\tget url(): Promise<string> {\n\t\treturn new Promise<string>(async (resolve) => {\n\t\t\tif (this._url === undefined) {\n\t\t\t\tif (this.urlOrCommand) {\n\t\t\t\t\tlet url = URI.parse(this.urlOrCommand);\n\t\t\t\t\tif (url.authority) {\n\t\t\t\t\t\tthis._url = this.urlOrCommand;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst urlCommand: Promise<string | undefined> = this.commandService.executeCommand(this.urlOrCommand);\n\t\t\t\t\t\t// We must be defensive. The command may never return, meaning that no help at all is ever shown!\n\t\t\t\t\t\tconst emptyString: Promise<string> = new Promise(resolve => setTimeout(() => resolve(''), 500));\n\t\t\t\t\t\tthis._url = await Promise.race([urlCommand, emptyString]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._url === undefined) {\n\t\t\t\tthis._url = '';\n\t\t\t}\n\t\t\tresolve(this._url);\n\t\t});\n\t}\n}\n\nabstract class HelpItemBase implements IHelpItem {\n\tpublic iconClasses: string[] = [];\n\tconstructor(\n\t\tpublic icon: ThemeIcon,\n\t\tpublic label: string,\n\t\tpublic values: HelpItemValue[],\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t\tprivate remoteExplorerService: IRemoteExplorerService\n\t) {\n\t\tthis.iconClasses.push(...ThemeIcon.asClassNameArray(icon));\n\t\tthis.iconClasses.push('remote-help-tree-node-item-icon');\n\t}\n\n\tasync handleClick() {\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tif (remoteAuthority) {\n\t\t\tfor (let i = 0; i < this.remoteExplorerService.targetType.length; i++) {\n\t\t\t\tif (remoteAuthority.startsWith(this.remoteExplorerService.targetType[i])) {\n\t\t\t\t\tfor (let value of this.values) {\n\t\t\t\t\t\tif (value.remoteAuthority) {\n\t\t\t\t\t\t\tfor (let authority of value.remoteAuthority) {\n\t\t\t\t\t\t\t\tif (remoteAuthority.startsWith(authority)) {\n\t\t\t\t\t\t\t\t\tawait this.takeAction(value.extensionDescription, await value.url);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.values.length > 1) {\n\t\t\tlet actions = (await Promise.all(this.values.map(async (value) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: value.extensionDescription.displayName || value.extensionDescription.identifier.value,\n\t\t\t\t\tdescription: await value.url,\n\t\t\t\t\textensionDescription: value.extensionDescription\n\t\t\t\t};\n\t\t\t}))).filter(item => item.description);\n\n\t\t\tconst action = await this.quickInputService.pick(actions, { placeHolder: nls.localize('pickRemoteExtension', \"Select url to open\") });\n\n\t\t\tif (action) {\n\t\t\t\tawait this.takeAction(action.extensionDescription, action.description);\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.takeAction(this.values[0].extensionDescription, await this.values[0].url);\n\t\t}\n\t}\n\n\tprotected abstract takeAction(extensionDescription: IExtensionDescription, url?: string): Promise<void>;\n}\n\nclass HelpItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService\n\t) {\n\t\tsuper(icon, label, values, quickInputService, environmentService, remoteExplorerService);\n\t}\n\n\tprotected async takeAction(extensionDescription: IExtensionDescription, url: string): Promise<void> {\n\t\tawait this.openerService.open(URI.parse(url), { allowCommands: true });\n\t}\n}\n\nclass IssueReporterItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate commandService: ICommandService,\n\t\tremoteExplorerService: IRemoteExplorerService\n\t) {\n\t\tsuper(icon, label, values, quickInputService, environmentService, remoteExplorerService);\n\t}\n\n\tprotected async takeAction(extensionDescription: IExtensionDescription): Promise<void> {\n\t\tawait this.commandService.executeCommand('workbench.action.openIssueReporter', [extensionDescription.identifier.value]);\n\t}\n}\n\nclass HelpPanel extends ViewPane {\n\tstatic readonly ID = '~remote.helpPanel';\n\tstatic readonly TITLE = nls.localize('remote.help', \"Help and feedback\");\n\tprivate tree!: WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>;\n\n\tconstructor(\n\t\tprotected viewModel: IViewModel,\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IRemoteExplorerService protected readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tcontainer.classList.add('remote-help');\n\t\tconst treeContainer = document.createElement('div');\n\t\ttreeContainer.classList.add('remote-help-content');\n\t\tcontainer.appendChild(treeContainer);\n\n\t\tthis.tree = <WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>>this.instantiationService.createInstance(WorkbenchAsyncDataTree,\n\t\t\t'RemoteHelp',\n\t\t\ttreeContainer,\n\t\t\tnew HelpTreeVirtualDelegate(),\n\t\t\t[new HelpTreeRenderer()],\n\t\t\tnew HelpDataSource(),\n\t\t\t{\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (item: HelpItemBase) => {\n\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel: () => nls.localize('remotehelp', \"Remote Help\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst model = new HelpModel(this.viewModel, this.openerService, this.quickInputService, this.commandService, this.remoteExplorerService, this.environmentService);\n\n\t\tthis.tree.setInput(model);\n\n\t\tthis._register(Event.debounce(this.tree.onDidOpen, (last, event) => event, 75, true)(e => {\n\t\t\te.element?.handleClick();\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n}\n\nclass HelpPanelDescriptor implements IViewDescriptor {\n\treadonly id = HelpPanel.ID;\n\treadonly name = HelpPanel.TITLE;\n\treadonly ctorDescriptor: SyncDescriptor<HelpPanel>;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\treadonly group = 'help@50';\n\treadonly order = -10;\n\n\tconstructor(viewModel: IViewModel) {\n\t\tthis.ctorDescriptor = new SyncDescriptor(HelpPanel, [viewModel]);\n\t}\n}\n\nexport class RemoteViewPaneContainer extends FilterViewPaneContainer implements IViewModel {\n\tprivate helpPanelDescriptor = new HelpPanelDescriptor(this);\n\thelpInformation: HelpInformation[] = [];\n\tprivate hasSetSwitchForConnection: boolean = false;\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IRemoteExplorerService readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper(VIEWLET_ID, remoteExplorerService.onDidChangeTargetType, configurationService, layoutService, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService, viewDescriptorService);\n\t\tthis.addConstantViewDescriptors([this.helpPanelDescriptor]);\n\t\tremoteHelpExtPoint.setHandler((extensions) => {\n\t\t\tlet helpInformation: HelpInformation[] = [];\n\t\t\tfor (let extension of extensions) {\n\t\t\t\tthis._handleRemoteInfoExtensionPoint(extension, helpInformation);\n\t\t\t}\n\n\t\t\tthis.helpInformation = helpInformation;\n\n\t\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\t\tif (this.helpInformation.length) {\n\t\t\t\tviewsRegistry.registerViews([this.helpPanelDescriptor], this.viewContainer);\n\t\t\t} else {\n\t\t\t\tviewsRegistry.deregisterViews([this.helpPanelDescriptor], this.viewContainer);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _handleRemoteInfoExtensionPoint(extension: IExtensionPointUser<HelpInformation>, helpInformation: HelpInformation[]) {\n\t\tif (!extension.description.enableProposedApi) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!extension.value.documentation && !extension.value.feedback && !extension.value.getStarted && !extension.value.issues) {\n\t\t\treturn;\n\t\t}\n\n\t\thelpInformation.push({\n\t\t\textensionDescription: extension.description,\n\t\t\tgetStarted: extension.value.getStarted,\n\t\t\tdocumentation: extension.value.documentation,\n\t\t\tfeedback: extension.value.feedback,\n\t\t\tissues: extension.value.issues,\n\t\t\tremoteName: extension.value.remoteName\n\t\t});\n\t}\n\n\tprotected getFilterOn(viewDescriptor: IViewDescriptor): string | undefined {\n\t\treturn isStringArray(viewDescriptor.remoteAuthority) ? viewDescriptor.remoteAuthority[0] : viewDescriptor.remoteAuthority;\n\t}\n\n\tprotected setFilter(viewDescriptor: IViewDescriptor): void {\n\t\tthis.remoteExplorerService.targetType = isStringArray(viewDescriptor.remoteAuthority) ? viewDescriptor.remoteAuthority : [viewDescriptor.remoteAuthority!];\n\t}\n\n\tpublic override getActionViewItem(action: Action): IActionViewItem | undefined {\n\t\tif (action.id === SwitchRemoteAction.ID) {\n\t\t\tconst optionItems = SwitchRemoteViewItem.createOptionItems(Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).getViews(this.viewContainer), this.contextKeyService);\n\t\t\tconst item = this.instantiationService.createInstance(SwitchRemoteViewItem, action, optionItems);\n\t\t\tif (!this.hasSetSwitchForConnection) {\n\t\t\t\tthis.hasSetSwitchForConnection = item.setSelectionForConnection();\n\t\t\t} else {\n\t\t\t\titem.setSelection();\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\n\t\treturn super.getActionViewItem(action);\n\t}\n\n\tgetTitle(): string {\n\t\tconst title = nls.localize('remote.explorer', \"Remote Explorer\");\n\t\treturn title;\n\t}\n}\n\nregisterAction2(SwitchRemoteAction);\n\nRegistry.as<IViewContainersRegistry>(Extensions.ViewContainersRegistry).registerViewContainer(\n\t{\n\t\tid: VIEWLET_ID,\n\t\ttitle: nls.localize('remote.explorer', \"Remote Explorer\"),\n\t\tctorDescriptor: new SyncDescriptor(RemoteViewPaneContainer),\n\t\thideIfEmpty: true,\n\t\tviewOrderDelegate: {\n\t\t\tgetOrder: (group?: string) => {\n\t\t\t\tif (!group) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet matches = /^targets@(\\d+)$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -1000;\n\t\t\t\t}\n\n\t\t\t\tmatches = /^details(@(\\d+))?$/.exec(group);\n\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -500 + Number(matches[2]);\n\t\t\t\t}\n\n\t\t\t\tmatches = /^help(@(\\d+))?$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -10;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\ticon: icons.remoteExplorerViewIcon,\n\t\torder: 4\n\t}, ViewContainerLocation.Sidebar);\n\nclass RemoteMarkers implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ITimerService timerService: ITimerService,\n\t) {\n\t\tremoteAgentService.getEnvironment().then(remoteEnv => {\n\t\t\tif (remoteEnv) {\n\t\t\t\ttimerService.setPerformanceMarks('server', remoteEnv.marks);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass VisibleProgress {\n\n\tpublic readonly location: ProgressLocation;\n\tprivate _isDisposed: boolean;\n\tprivate _lastReport: string | null;\n\tprivate _currentProgressPromiseResolve: (() => void) | null;\n\tprivate _currentProgress: IProgress<IProgressStep> | null;\n\tprivate _currentTimer: ReconnectionTimer2 | null;\n\n\tpublic get lastReport(): string | null {\n\t\treturn this._lastReport;\n\t}\n\n\tconstructor(progressService: IProgressService, location: ProgressLocation, initialReport: string | null, buttons: string[], onDidCancel: (choice: number | undefined, lastReport: string | null) => void) {\n\t\tthis.location = location;\n\t\tthis._isDisposed = false;\n\t\tthis._lastReport = initialReport;\n\t\tthis._currentProgressPromiseResolve = null;\n\t\tthis._currentProgress = null;\n\t\tthis._currentTimer = null;\n\n\t\tconst promise = new Promise<void>((resolve) => this._currentProgressPromiseResolve = resolve);\n\n\t\tprogressService.withProgress(\n\t\t\t{ location: location, buttons: buttons },\n\t\t\t(progress) => { if (!this._isDisposed) { this._currentProgress = progress; } return promise; },\n\t\t\t(choice) => onDidCancel(choice, this._lastReport)\n\t\t);\n\n\t\tif (this._lastReport) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._currentProgressPromiseResolve) {\n\t\t\tthis._currentProgressPromiseResolve();\n\t\t\tthis._currentProgressPromiseResolve = null;\n\t\t}\n\t\tthis._currentProgress = null;\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n\n\tpublic report(message?: string) {\n\t\tif (message) {\n\t\t\tthis._lastReport = message;\n\t\t}\n\n\t\tif (this._lastReport && this._currentProgress) {\n\t\t\tthis._currentProgress.report({ message: this._lastReport });\n\t\t}\n\t}\n\n\tpublic startTimer(completionTime: number): void {\n\t\tthis.stopTimer();\n\t\tthis._currentTimer = new ReconnectionTimer2(this, completionTime);\n\t}\n\n\tpublic stopTimer(): void {\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n}\n\nclass ReconnectionTimer2 implements IDisposable {\n\tprivate readonly _parent: VisibleProgress;\n\tprivate readonly _completionTime: number;\n\tprivate readonly _token: any;\n\n\tconstructor(parent: VisibleProgress, completionTime: number) {\n\t\tthis._parent = parent;\n\t\tthis._completionTime = completionTime;\n\t\tthis._token = setInterval(() => this._render(), 1000);\n\t\tthis._render();\n\t}\n\n\tpublic dispose(): void {\n\t\tclearInterval(this._token);\n\t}\n\n\tprivate _render() {\n\t\tconst remainingTimeMs = this._completionTime - Date.now();\n\t\tif (remainingTimeMs < 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst remainingTime = Math.ceil(remainingTimeMs / 1000);\n\t\tif (remainingTime === 1) {\n\t\t\tthis._parent.report(nls.localize('reconnectionWaitOne', \"Attempting to reconnect in {0} second...\", remainingTime));\n\t\t} else {\n\t\t\tthis._parent.report(nls.localize('reconnectionWaitMany', \"Attempting to reconnect in {0} seconds...\", remainingTime));\n\t\t}\n\t}\n}\n\n/**\n * The time when a prompt is shown to the user\n */\nconst DISCONNECT_PROMPT_TIME = 40 * 1000; // 40 seconds\n\nclass RemoteAgentConnectionStatusListener extends Disposable implements IWorkbenchContribution {\n\n\tprivate _reloadWindowShown: boolean = false;\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tlet quickInputVisible = false;\n\t\t\tquickInputService.onShow(() => quickInputVisible = true);\n\t\t\tquickInputService.onHide(() => quickInputVisible = false);\n\n\t\t\tlet visibleProgress: VisibleProgress | null = null;\n\t\t\tlet reconnectWaitEvent: ReconnectionWaitEvent | null = null;\n\t\t\tlet disposableListener: IDisposable | null = null;\n\n\t\t\tfunction showProgress(location: ProgressLocation.Dialog | ProgressLocation.Notification | null, buttons: { label: string, callback: () => void }[], initialReport: string | null = null): VisibleProgress {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\n\t\t\t\tif (!location) {\n\t\t\t\t\tlocation = quickInputVisible ? ProgressLocation.Notification : ProgressLocation.Dialog;\n\t\t\t\t}\n\n\t\t\t\treturn new VisibleProgress(\n\t\t\t\t\tprogressService, location, initialReport, buttons.map(button => button.label),\n\t\t\t\t\t(choice, lastReport) => {\n\t\t\t\t\t\t// Handle choice from dialog\n\t\t\t\t\t\tif (typeof choice !== 'undefined' && buttons[choice]) {\n\t\t\t\t\t\t\tbuttons[choice].callback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (location === ProgressLocation.Dialog) {\n\t\t\t\t\t\t\t\tvisibleProgress = showProgress(ProgressLocation.Notification, buttons, lastReport);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfunction hideProgress() {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reconnectionToken: string = '';\n\t\t\tlet lastIncomingDataTime: number = 0;\n\t\t\tlet reconnectionAttempts: number = 0;\n\n\t\t\tconst reconnectButton = {\n\t\t\t\tlabel: nls.localize('reconnectNow', \"Reconnect Now\"),\n\t\t\t\tcallback: () => {\n\t\t\t\t\tif (reconnectWaitEvent) {\n\t\t\t\t\t\treconnectWaitEvent.skipWait();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst reloadButton = {\n\t\t\t\tlabel: nls.localize('reloadWindow', \"Reload Window\"),\n\t\t\t\tcallback: () => {\n\n\t\t\t\t\ttype ReconnectReloadClassification = {\n\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\tattempt: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t};\n\t\t\t\t\ttype ReconnectReloadEvent = {\n\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t};\n\t\t\t\t\ttelemetryService.publicLog2<ReconnectReloadEvent, ReconnectReloadClassification>('remoteReconnectionReload', {\n\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\treconnectionToken: reconnectionToken,\n\t\t\t\t\t\tmillisSinceLastIncomingData: Date.now() - lastIncomingDataTime,\n\t\t\t\t\t\tattempt: reconnectionAttempts\n\t\t\t\t\t});\n\n\t\t\t\t\tcommandService.executeCommand(ReloadWindowAction.ID);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Possible state transitions:\n\t\t\t// ConnectionGain      -> ConnectionLost\n\t\t\t// ConnectionLost      -> ReconnectionWait, ReconnectionRunning\n\t\t\t// ReconnectionWait    -> ReconnectionRunning\n\t\t\t// ReconnectionRunning -> ConnectionGain, ReconnectionPermanentFailure\n\n\t\t\tconnection.onDidStateChange((e) => {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.stopTimer();\n\t\t\t\t}\n\n\t\t\t\tif (disposableListener) {\n\t\t\t\t\tdisposableListener.dispose();\n\t\t\t\t\tdisposableListener = null;\n\t\t\t\t}\n\t\t\t\tswitch (e.type) {\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionLost:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = 0;\n\n\t\t\t\t\t\ttype RemoteConnectionLostClassification = {\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionLostEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteConnectionLostEvent, RemoteConnectionLostClassification>('remoteConnectionLost', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (visibleProgress || e.millisSinceLastIncomingData > DISCONNECT_PROMPT_TIME) {\n\t\t\t\t\t\t\tif (!visibleProgress) {\n\t\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reconnectButton, reloadButton]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleProgress.report(nls.localize('connectionLost', \"Connection Lost\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionWait:\n\t\t\t\t\t\tif (visibleProgress) {\n\t\t\t\t\t\t\treconnectWaitEvent = e;\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reconnectButton, reloadButton]);\n\t\t\t\t\t\t\tvisibleProgress.startTimer(Date.now() + 1000 * e.durationSeconds);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionRunning:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionRunningClassification = {\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionRunningEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteReconnectionRunningEvent, RemoteReconnectionRunningClassification>('remoteReconnectionRunning', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (visibleProgress || e.millisSinceLastIncomingData > DISCONNECT_PROMPT_TIME) {\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reloadButton]);\n\t\t\t\t\t\t\tvisibleProgress.report(nls.localize('reconnectionRunning', \"Disconnected. Attempting to reconnect...\"));\n\n\t\t\t\t\t\t\t// Register to listen for quick input is opened\n\t\t\t\t\t\t\tdisposableListener = quickInputService.onShow(() => {\n\t\t\t\t\t\t\t\t// Need to move from dialog if being shown and user needs to type in a prompt\n\t\t\t\t\t\t\t\tif (visibleProgress && visibleProgress.location === ProgressLocation.Dialog) {\n\t\t\t\t\t\t\t\t\tvisibleProgress = showProgress(ProgressLocation.Notification, [reloadButton], visibleProgress.lastReport);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionPermanentFailure:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureClassification = {\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\thandled: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t\thandled: boolean;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteReconnectionPermanentFailureEvent, RemoteReconnectionPermanentFailureClassification>('remoteReconnectionPermanentFailure', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt,\n\t\t\t\t\t\t\thandled: e.handled\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\n\t\t\t\t\t\tif (e.handled) {\n\t\t\t\t\t\t\tlogService.info(`Error handled: Not showing a notification for the error.`);\n\t\t\t\t\t\t\tconsole.log(`Error handled: Not showing a notification for the error.`);\n\t\t\t\t\t\t} else if (!this._reloadWindowShown) {\n\t\t\t\t\t\t\tthis._reloadWindowShown = true;\n\t\t\t\t\t\t\tdialogService.show(Severity.Error, nls.localize('reconnectionPermanentFailure', \"Cannot reconnect. Please reload the window.\"), [nls.localize('reloadWindow', \"Reload Window\"), nls.localize('cancel', \"Cancel\")], { cancelId: 1, custom: true }).then(result => {\n\t\t\t\t\t\t\t\t// Reload the window\n\t\t\t\t\t\t\t\tif (result.choice === 0) {\n\t\t\t\t\t\t\t\t\tcommandService.executeCommand(ReloadWindowAction.ID);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionGain:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteConnectionGainClassification = {\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionGainEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteConnectionGainEvent, RemoteConnectionGainClassification>('remoteConnectionGain', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentConnectionStatusListener, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteStatusIndicator, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(ForwardedPortsView, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(PortRestore, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(AutomaticPortForwarding, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteMarkers, LifecyclePhase.Eventually);\n"]}