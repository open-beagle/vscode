{"version":3,"file":"urlFinder.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/remote/browser/urlFinder.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITerminalInstance, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IDebugService, IDebugSession, IReplElement } from 'vs/workbench/contrib/debug/common/debug';\n\nexport class UrlFinder extends Disposable {\n\tprivate static readonly terminalCodesRegex = /(?:\\u001B|\\u009B)[\\[\\]()#;?]*(?:(?:(?:[a-zA-Z0-9]*(?:;[a-zA-Z0-9]*)*)?\\u0007)|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[0-9A-PR-TZcf-ntqry=><~]))/g;\n\t/**\n\t * Local server url pattern matching following urls:\n\t * http://localhost:3000/ - commonly used across multiple frameworks\n\t * https://127.0.0.1:5001/ - ASP.NET\n\t * http://:8080 - Beego Golang\n\t * http://0.0.0.0:4000 - Elixir Phoenix\n\t */\n\tprivate static readonly localUrlRegex = /\\b\\w{2,20}:\\/\\/(?:localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0|:\\d{2,5})[\\w\\-\\.\\~:\\/\\?\\#[\\]\\@!\\$&\\(\\)\\*\\+\\,\\;\\=]*/gim;\n\tprivate static readonly extractPortRegex = /(localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0):(\\d{1,5})/;\n\t/**\n\t * https://github.com/microsoft/vscode-remote-release/issues/3949\n\t */\n\tprivate static readonly localPythonServerRegex = /HTTP\\son\\s(127\\.0\\.0\\.1|0\\.0\\.0\\.0)\\sport\\s(\\d+)/;\n\n\tprivate static readonly excludeTerminals = ['Dev Containers'];\n\n\tprivate _onDidMatchLocalUrl: Emitter<{ host: string, port: number }> = new Emitter();\n\tpublic readonly onDidMatchLocalUrl = this._onDidMatchLocalUrl.event;\n\tprivate listeners: Map<ITerminalInstance | string, IDisposable> = new Map();\n\n\tconstructor(terminalService: ITerminalService, debugService: IDebugService) {\n\t\tsuper();\n\t\t// Terminal\n\t\tterminalService.terminalInstances.forEach(instance => {\n\t\t\tthis.registerTerminalInstance(instance);\n\t\t});\n\t\tthis._register(terminalService.onInstanceCreated(instance => {\n\t\t\tthis.registerTerminalInstance(instance);\n\t\t}));\n\t\tthis._register(terminalService.onInstanceDisposed(instance => {\n\t\t\tthis.listeners.get(instance)?.dispose();\n\t\t\tthis.listeners.delete(instance);\n\t\t}));\n\n\t\t// Debug\n\t\tthis._register(debugService.onDidNewSession(session => {\n\t\t\tif (!session.parentSession || (session.parentSession && session.hasSeparateRepl())) {\n\t\t\t\tthis.listeners.set(session.getId(), session.onDidChangeReplElements(() => {\n\t\t\t\t\tthis.processNewReplElements(session);\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\t\tthis._register(debugService.onDidEndSession(session => {\n\t\t\tif (this.listeners.has(session.getId())) {\n\t\t\t\tthis.listeners.get(session.getId())?.dispose();\n\t\t\t\tthis.listeners.delete(session.getId());\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerTerminalInstance(instance: ITerminalInstance) {\n\t\tif (!UrlFinder.excludeTerminals.includes(instance.title)) {\n\t\t\tthis.listeners.set(instance, instance.onData(data => {\n\t\t\t\tthis.processData(data);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate replPositions: Map<string, { position: number, tail: IReplElement }> = new Map();\n\tprivate processNewReplElements(session: IDebugSession) {\n\t\tconst oldReplPosition = this.replPositions.get(session.getId());\n\t\tconst replElements = session.getReplElements();\n\t\tthis.replPositions.set(session.getId(), { position: replElements.length - 1, tail: replElements[replElements.length - 1] });\n\n\t\tif (!oldReplPosition && replElements.length > 0) {\n\t\t\treplElements.forEach(element => this.processData(element.toString()));\n\t\t} else if (oldReplPosition && (replElements.length - 1 !== oldReplPosition.position)) {\n\t\t\t// Process lines until we reach the old \"tail\"\n\t\t\tfor (let i = replElements.length - 1; i >= 0; i--) {\n\t\t\t\tconst element = replElements[i];\n\t\t\t\tif (element === oldReplPosition.tail) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tthis.processData(element.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tconst listeners = this.listeners.values();\n\t\tfor (const listener of listeners) {\n\t\t\tlistener.dispose();\n\t\t}\n\t}\n\n\tprivate processData(data: string) {\n\t\t// strip ANSI terminal codes\n\t\tdata = data.replace(UrlFinder.terminalCodesRegex, '');\n\t\tconst urlMatches = data.match(UrlFinder.localUrlRegex) || [];\n\t\tif (urlMatches && urlMatches.length > 0) {\n\t\t\turlMatches.forEach((match) => {\n\t\t\t\t// check if valid url\n\t\t\t\tlet serverUrl;\n\t\t\t\ttry {\n\t\t\t\t\tserverUrl = new URL(match);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Not a valid URL\n\t\t\t\t}\n\t\t\t\tif (serverUrl) {\n\t\t\t\t\t// check if the port is a valid integer value\n\t\t\t\t\tconst portMatch = match.match(UrlFinder.extractPortRegex);\n\t\t\t\t\tconst port = parseFloat(serverUrl.port ? serverUrl.port : (portMatch ? portMatch[2] : 'NaN'));\n\t\t\t\t\tif (!isNaN(port) && Number.isInteger(port) && port > 0 && port <= 65535) {\n\t\t\t\t\t\t// normalize the host name\n\t\t\t\t\t\tlet host = serverUrl.hostname;\n\t\t\t\t\t\tif (host !== '0.0.0.0' && host !== '127.0.0.1') {\n\t\t\t\t\t\t\thost = 'localhost';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Exclude node inspect, except when using default port\n\t\t\t\t\t\tif (port !== 9229 && data.startsWith('Debugger listening on')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._onDidMatchLocalUrl.fire({ port, host });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// Try special python case\n\t\t\tconst pythonMatch = data.match(UrlFinder.localPythonServerRegex);\n\t\t\tif (pythonMatch && pythonMatch.length === 3) {\n\t\t\t\tthis._onDidMatchLocalUrl.fire({ host: pythonMatch[1], port: Number(pythonMatch[2]) });\n\t\t\t}\n\t\t}\n\t}\n}\n"]}