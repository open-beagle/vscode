{"version":3,"file":"showCandidate.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/remote/common/showCandidate.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,IAAa,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,sBAAU;QACxD,YACyB,qBAA6C,EACvC,kBAAgD;;YAE9E,KAAK,EAAE,CAAC;YACR,MAAM,iBAAiB,GAAG,MAAA,MAAA,kBAAkB,CAAC,OAAO,0CAAE,cAAc,0CAAE,iBAAiB,CAAC;YACxF,IAAI,iBAAiB,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,KAAK,EAAE,UAA2B,EAA4B,EAAE;oBACvH,MAAM,OAAO,GAAc,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,WAAC,OAAA,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,MAAA,SAAS,CAAC,MAAM,mCAAI,EAAE,CAAC,CAAA,EAAA,CAAC,CAAC,CAAC;oBACrJ,MAAM,kBAAkB,GAAoB,EAAE,CAAC;oBAC/C,IAAI,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,EAAE;wBACzC,OAAO,UAAU,CAAC;qBAClB;oBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;4BACf,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;yBACvC;qBACD;oBACD,OAAO,kBAAkB,CAAC;gBAC3B,CAAC,CAAC,CAAC,CAAC;aACJ;QACF,CAAC;KACD,CAAA;IAvBY,yBAAyB;QAEnC,WAAA,8CAAsB,CAAA;QACtB,WAAA,iDAA4B,CAAA;OAHlB,yBAAyB,CAuBrC;IAvBY,8DAAyB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { CandidatePort, IRemoteExplorerService } from 'vs/workbench/services/remote/common/remoteExplorerService';\n\nexport class ShowCandidateContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteExplorerService remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tconst showPortCandidate = environmentService.options?.tunnelProvider?.showPortCandidate;\n\t\tif (showPortCandidate) {\n\t\t\tthis._register(remoteExplorerService.setCandidateFilter(async (candidates: CandidatePort[]): Promise<CandidatePort[]> => {\n\t\t\t\tconst filters: boolean[] = await Promise.all(candidates.map(candidate => showPortCandidate(candidate.host, candidate.port, candidate.detail ?? '')));\n\t\t\t\tconst filteredCandidates: CandidatePort[] = [];\n\t\t\t\tif (filters.length !== candidates.length) {\n\t\t\t\t\treturn candidates;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < candidates.length; i++) {\n\t\t\t\t\tif (filters[i]) {\n\t\t\t\t\t\tfilteredCandidates.push(candidates[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn filteredCandidates;\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}