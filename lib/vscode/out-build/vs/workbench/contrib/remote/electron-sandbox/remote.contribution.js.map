{"version":3,"sources":["vs/workbench/contrib/remote/electron-sandbox/remote.contribution.ts"],"names":[],"mappings":"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","file":"remote.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchContributionsExtensions } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { Schemas } from 'vs/base/common/network';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILoggerService, ILogService } from 'vs/platform/log/common/log';\nimport { DownloadServiceChannel } from 'vs/platform/download/common/downloadIpc';\nimport { LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { IDiagnosticInfoOptions, IRemoteDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { PersistentConnectionEventType } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { OpenLocalFileFolderCommand, OpenLocalFileCommand, OpenLocalFolderCommand, SaveLocalFileCommand, RemoteFileDialogContext } from 'vs/workbench/services/dialogs/browser/simpleFileDialog';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\n\nclass RemoteChannelsContribution implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@ILogService loggerService: ILoggerService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IDownloadService downloadService: IDownloadService\n\t) {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tconnection.registerChannel('download', new DownloadServiceChannel(downloadService));\n\t\t\tconnection.registerChannel('logger', new LogLevelChannel(logService));\n\t\t}\n\t}\n}\n\nclass RemoteAgentDiagnosticListener implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService\n\t) {\n\t\tipcRenderer.on('vscode:getDiagnosticInfo', (event: unknown, request: { replyChannel: string, args: IDiagnosticInfoOptions }): void => {\n\t\t\tconst connection = remoteAgentService.getConnection();\n\t\t\tif (connection) {\n\t\t\t\tconst hostName = labelService.getHostLabel(Schemas.vscodeRemote, connection.remoteAuthority);\n\t\t\t\tremoteAgentService.getDiagnosticInfo(request.args)\n\t\t\t\t\t.then(info => {\n\t\t\t\t\t\tif (info) {\n\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).hostName = hostName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, info);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tconst errorMessage = e && e.message ? `Fetching remote diagnostics for '${hostName}' failed: ${e.message}` : `Fetching remote diagnostics for '${hostName}' failed.`;\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, { hostName, errorMessage });\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tipcRenderer.send(request.replyChannel);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass RemoteExtensionHostEnvironmentUpdater implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IRemoteAuthorityResolverService remoteResolverService: IRemoteAuthorityResolverService,\n\t\t@IExtensionService extensionService: IExtensionService\n\t) {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tconnection.onDidStateChange(async e => {\n\t\t\t\tif (e.type === PersistentConnectionEventType.ConnectionGain) {\n\t\t\t\t\tconst resolveResult = await remoteResolverService.resolveAuthority(connection.remoteAuthority);\n\t\t\t\t\tif (resolveResult.options && resolveResult.options.extensionHostEnv) {\n\t\t\t\t\t\tawait extensionService.setRemoteEnvironment(resolveResult.options.extensionHostEnv);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RemoteTelemetryEnablementUpdater extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateRemoteTelemetryEnablement();\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('telemetry.enableTelemetry')) {\n\t\t\t\tthis.updateRemoteTelemetryEnablement();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateRemoteTelemetryEnablement(): Promise<void> {\n\t\tif (!this.configurationService.getValue('telemetry.enableTelemetry')) {\n\t\t\treturn this.remoteAgentService.disableTelemetry();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n}\n\n\nclass RemoteEmptyWorkbenchPresentation extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\n\t\tfunction shouldShowExplorer(): boolean {\n\t\t\tconst startupEditor = configurationService.getValue<string>('workbench.startupEditor');\n\t\t\treturn startupEditor !== 'welcomePage' && startupEditor !== 'welcomePageInEmptyWorkbench';\n\t\t}\n\n\t\tfunction shouldShowTerminal(): boolean {\n\t\t\treturn shouldShowExplorer();\n\t\t}\n\n\t\tconst { remoteAuthority, filesToDiff, filesToOpenOrCreate, filesToWait } = environmentService.configuration;\n\t\tif (remoteAuthority && contextService.getWorkbenchState() === WorkbenchState.EMPTY && !filesToDiff?.length && !filesToOpenOrCreate?.length && !filesToWait) {\n\t\t\tremoteAuthorityResolverService.resolveAuthority(remoteAuthority).then(() => {\n\t\t\t\tif (shouldShowExplorer()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.view.explorer');\n\t\t\t\t}\n\t\t\t\tif (shouldShowTerminal()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.action.terminal.toggleTerminal');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchContributionsExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteChannelsContribution, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentDiagnosticListener, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteExtensionHostEnvironmentUpdater, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteTelemetryEnablementUpdater, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteEmptyWorkbenchPresentation, LifecyclePhase.Starting);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'remote',\n\t\ttitle: nls.localize('remote', \"Remote\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'remote.downloadExtensionsLocally': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tmarkdownDescription: nls.localize('remote.downloadExtensionsLocally', \"When enabled extensions are downloaded locally and installed on remote.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t}\n\t});\n\nif (isMacintosh) {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_O,\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFileFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileFolderCommand.handler()\n\t});\n} else {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_O,\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFileCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileCommand.handler()\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_O),\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFolderCommand.handler()\n\t});\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SaveLocalFileCommand.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_S,\n\twhen: RemoteFileDialogContext,\n\tdescription: { description: SaveLocalFileCommand.LABEL, args: [] },\n\thandler: SaveLocalFileCommand.handler()\n});\n"]}