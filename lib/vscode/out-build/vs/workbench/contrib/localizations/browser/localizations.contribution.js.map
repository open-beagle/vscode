{"version":3,"sources":["vs/workbench/contrib/localizations/browser/localizations.contribution.ts"],"names":[],"mappings":"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","file":"localizations.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContribution, Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { IWorkbenchActionRegistry, Extensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ConfigureLocaleAction } from 'vs/workbench/contrib/localizations/browser/localizationsActions';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { IExtensionManagementService, DidInstallExtensionEvent, IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport Severity from 'vs/base/common/severity';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { VIEWLET_ID as EXTENSIONS_VIEWLET_ID, IExtensionsViewPaneContainer } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { minimumTranslatedStrings } from 'vs/workbench/contrib/localizations/browser/minimalTranslations';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n// Register action to configure locale and related settings\nconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ConfigureLocaleAction), 'Configure Display Language');\n\nconst LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY = 'extensionsAssistant/languagePackSuggestionIgnore';\n\nexport class LocalizationWorkbenchContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IJSONEditingService private readonly jsonEditingService: IJSONEditingService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis.checkAndInstall();\n\t\tthis._register(this.extensionManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (e.local && e.operation === InstallOperation.Install && e.local.manifest.contributes && e.local.manifest.contributes.localizations && e.local.manifest.contributes.localizations.length) {\n\t\t\tconst locale = e.local.manifest.contributes.localizations[0].languageId;\n\t\t\tif (platform.language !== locale) {\n\t\t\t\tconst updateAndRestart = platform.locale !== locale;\n\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tupdateAndRestart ? localize('updateLocale', \"Would you like to change VS Code's UI language to {0} and restart?\", e.local.manifest.contributes.localizations[0].languageName || e.local.manifest.contributes.localizations[0].languageId)\n\t\t\t\t\t\t: localize('activateLanguagePack', \"In order to use VS Code in {0}, VS Code needs to restart.\", e.local.manifest.contributes.localizations[0].languageName || e.local.manifest.contributes.localizations[0].languageId),\n\t\t\t\t\t[{\n\t\t\t\t\t\tlabel: updateAndRestart ? localize('changeAndRestart', \"Change Language and Restart\") : localize('restart', \"Restart\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tconst updatePromise = updateAndRestart ? this.jsonEditingService.write(this.environmentService.argvResource, [{ path: ['locale'], value: locale }], true) : Promise.resolve(undefined);\n\t\t\t\t\t\t\tupdatePromise.then(() => this.hostService.restart(), e => this.notificationService.error(e));\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\t{\n\t\t\t\t\t\tsticky: true,\n\t\t\t\t\t\tneverShowAgain: { id: 'langugage.update.donotask', isSecondary: true }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkAndInstall(): void {\n\t\tconst language = platform.language;\n\t\tconst locale = platform.locale;\n\t\tconst languagePackSuggestionIgnoreList = <string[]>JSON.parse(this.storageService.get(LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY, StorageScope.GLOBAL, '[]'));\n\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!language || !locale || language === 'en' || language.indexOf('en-') === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (language === locale || languagePackSuggestionIgnoreList.indexOf(language) > -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isLanguageInstalled(locale)\n\t\t\t.then(installed => {\n\t\t\t\tif (installed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.galleryService.query({ text: `tag:lp-${locale}` }, CancellationToken.None).then(tagResult => {\n\t\t\t\t\tif (tagResult.total === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst extensionToInstall = tagResult.total === 1 ? tagResult.firstPage[0] : tagResult.firstPage.filter(e => e.publisher === 'MS-CEINTL' && e.name.indexOf('vscode-language-pack') === 0)[0];\n\t\t\t\t\tconst extensionToFetchTranslationsFrom = extensionToInstall || tagResult.firstPage[0];\n\n\t\t\t\t\tif (!extensionToFetchTranslationsFrom.assets.manifest) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([this.galleryService.getManifest(extensionToFetchTranslationsFrom, CancellationToken.None), this.galleryService.getCoreTranslation(extensionToFetchTranslationsFrom, locale)])\n\t\t\t\t\t\t.then(([manifest, translation]) => {\n\t\t\t\t\t\t\tconst loc = manifest && manifest.contributes && manifest.contributes.localizations && manifest.contributes.localizations.filter(x => x.languageId.toLowerCase() === locale)[0];\n\t\t\t\t\t\t\tconst languageName = loc ? (loc.languageName || locale) : locale;\n\t\t\t\t\t\t\tconst languageDisplayName = loc ? (loc.localizedLanguageName || loc.languageName || locale) : locale;\n\t\t\t\t\t\t\tconst translationsFromPack: any = translation && translation.contents ? translation.contents['vs/workbench/contrib/localizations/browser/minimalTranslations'] : {};\n\t\t\t\t\t\t\tconst promptMessageKey = extensionToInstall ? 'installAndRestartMessage' : 'showLanguagePackExtensions';\n\t\t\t\t\t\t\tconst useEnglish = !translationsFromPack[promptMessageKey];\n\n\t\t\t\t\t\t\tconst translations: any = {};\n\t\t\t\t\t\t\tObject.keys(minimumTranslatedStrings).forEach(key => {\n\t\t\t\t\t\t\t\tif (!translationsFromPack[key] || useEnglish) {\n\t\t\t\t\t\t\t\t\ttranslations[key] = minimumTranslatedStrings[key].replace('{0}', languageName);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttranslations[key] = `${translationsFromPack[key].replace('{0}', languageDisplayName)} (${minimumTranslatedStrings[key].replace('{0}', languageName)})`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst logUserReaction = (userReaction: string) => {\n\t\t\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\t\t\"languagePackSuggestion:popup\" : {\n\t\t\t\t\t\t\t\t\t\t\"userReaction\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\t\t\"language\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tthis.telemetryService.publicLog('languagePackSuggestion:popup', { userReaction, language });\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst searchAction = {\n\t\t\t\t\t\t\t\tlabel: translations['searchMarketplace'],\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tlogUserReaction('search');\n\t\t\t\t\t\t\t\t\tthis.viewletService.openViewlet(EXTENSIONS_VIEWLET_ID, true)\n\t\t\t\t\t\t\t\t\t\t.then(viewlet => viewlet?.getViewPaneContainer() as IExtensionsViewPaneContainer)\n\t\t\t\t\t\t\t\t\t\t.then(viewlet => {\n\t\t\t\t\t\t\t\t\t\t\tviewlet.search(`tag:lp-${locale}`);\n\t\t\t\t\t\t\t\t\t\t\tviewlet.focus();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst installAndRestartAction = {\n\t\t\t\t\t\t\t\tlabel: translations['installAndRestart'],\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tlogUserReaction('installAndRestart');\n\t\t\t\t\t\t\t\t\tthis.installExtension(extensionToInstall).then(() => this.hostService.restart());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst promptMessage = translations[promptMessageKey];\n\n\t\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\t\tpromptMessage,\n\t\t\t\t\t\t\t\t[extensionToInstall ? installAndRestartAction : searchAction,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: localize('neverAgain', \"Don't Show Again\"),\n\t\t\t\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\t\tlanguagePackSuggestionIgnoreList.push(language);\n\t\t\t\t\t\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\t\t\t\t\t\tLANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(languagePackSuggestionIgnoreList),\n\t\t\t\t\t\t\t\t\t\t\tStorageScope.GLOBAL,\n\t\t\t\t\t\t\t\t\t\t\tStorageTarget.USER\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tlogUserReaction('neverShowAgain');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t\t\t\tlogUserReaction('cancelled');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t}\n\n\tprivate isLanguageInstalled(language: string | undefined): Promise<boolean> {\n\t\treturn this.extensionManagementService.getInstalled()\n\t\t\t.then(installed => installed.some(i =>\n\t\t\t\t!!(i.manifest\n\t\t\t\t\t&& i.manifest.contributes\n\t\t\t\t\t&& i.manifest.contributes.localizations\n\t\t\t\t\t&& i.manifest.contributes.localizations.length\n\t\t\t\t\t&& i.manifest.contributes.localizations.some(l => l.languageId.toLowerCase() === language))));\n\t}\n\n\tprivate installExtension(extension: IGalleryExtension): Promise<void> {\n\t\treturn this.viewletService.openViewlet(EXTENSIONS_VIEWLET_ID)\n\t\t\t.then(viewlet => viewlet?.getViewPaneContainer() as IExtensionsViewPaneContainer)\n\t\t\t.then(viewlet => viewlet.search(`@id:${extension.identifier.id}`))\n\t\t\t.then(() => this.extensionManagementService.installFromGallery(extension))\n\t\t\t.then(() => undefined, err => this.notificationService.error(err));\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(LocalizationWorkbenchContribution, LifecyclePhase.Eventually);\n\nExtensionsRegistry.registerExtensionPoint({\n\textensionPoint: 'localizations',\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.localizations', \"Contributes localizations to the editor\"),\n\t\ttype: 'array',\n\t\tdefault: [],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['languageId', 'translations'],\n\t\t\tdefaultSnippets: [{ body: { languageId: '', languageName: '', localizedLanguageName: '', translations: [{ id: 'vscode', path: '' }] } }],\n\t\t\tproperties: {\n\t\t\t\tlanguageId: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.languageId', 'Id of the language into which the display strings are translated.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tlanguageName: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.languageName', 'Name of the language in English.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tlocalizedLanguageName: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.languageNameLocalized', 'Name of the language in contributed language.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\ttranslations: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.translations', 'List of translations associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdefault: [{ id: 'vscode', path: '' }],\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'path'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.translations.id', \"Id of VS Code or Extension for which this translation is contributed to. Id of VS Code is always `vscode` and of extension should be in format `publisherId.extensionName`.\"),\n\t\t\t\t\t\t\t\tpattern: '^((vscode)|([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*))$',\n\t\t\t\t\t\t\t\tpatternErrorMessage: localize('vscode.extension.contributes.localizations.translations.id.pattern', \"Id should be `vscode` or in format `publisherId.extensionName` for translating VS code or an extension respectively.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.localizations.translations.path', \"A relative path to a file containing translations for the language.\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefaultSnippets: [{ body: { id: '', path: '' } }],\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n"]}