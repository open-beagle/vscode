{"version":3,"file":"outputChannelModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/contrib/output/common/outputChannelModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport * as strings from 'vs/base/common/strings';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { RunOnceScheduler, ThrottledDelayer } from 'vs/base/common/async';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { Disposable, toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { isNumber } from 'vs/base/common/types';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { binarySearch } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IOutputChannelModel extends IDisposable {\n\treadonly onDidAppendedContent: Event<void>;\n\treadonly onDispose: Event<void>;\n\tappend(output: string): void;\n\tupdate(): void;\n\tloadModel(): Promise<ITextModel>;\n\tclear(till?: number): void;\n}\n\nexport const IOutputChannelModelService = createDecorator<IOutputChannelModelService>('outputChannelModelService');\n\nexport interface IOutputChannelModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, mimeType: string, file?: URI): IOutputChannelModel;\n\n}\n\nexport abstract class AbstractOutputChannelModelService {\n\n\tconstructor(\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService\n\t) { }\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, mimeType: string, file?: URI): IOutputChannelModel {\n\t\treturn file ? this.instantiationService.createInstance(FileOutputChannelModel, modelUri, mimeType, file) : this.instantiationService.createInstance(BufferredOutputChannel, modelUri, mimeType);\n\t}\n\n}\n\nexport abstract class AbstractFileOutputChannelModel extends Disposable implements IOutputChannelModel {\n\n\tprotected readonly _onDidAppendedContent = this._register(new Emitter<void>());\n\treadonly onDidAppendedContent: Event<void> = this._onDidAppendedContent.event;\n\n\tprotected readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprotected modelUpdater: RunOnceScheduler;\n\tprotected model: ITextModel | null = null;\n\n\tprotected startOffset: number = 0;\n\tprotected endOffset: number = 0;\n\n\tconstructor(\n\t\tprivate readonly modelUri: URI,\n\t\tprivate readonly mimeType: string,\n\t\tprotected readonly file: URI,\n\t\tprotected fileService: IFileService,\n\t\tprotected modelService: IModelService,\n\t\tprotected modeService: IModeService,\n\t) {\n\t\tsuper();\n\t\tthis.modelUpdater = new RunOnceScheduler(() => this.updateModel(), 300);\n\t\tthis._register(toDisposable(() => this.modelUpdater.cancel()));\n\t}\n\n\tclear(till?: number): void {\n\t\tif (this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.cancel();\n\t\t\tthis.onUpdateModelCancelled();\n\t\t}\n\t\tif (this.model) {\n\t\t\tthis.model.setValue('');\n\t\t}\n\t\tthis.endOffset = isNumber(till) ? till : this.endOffset;\n\t\tthis.startOffset = this.endOffset;\n\t}\n\n\tupdate(): void { }\n\n\tprotected createModel(content: string): ITextModel {\n\t\tif (this.model) {\n\t\t\tthis.model.setValue(content);\n\t\t} else {\n\t\t\tthis.model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n\t\t\tthis.onModelCreated(this.model);\n\t\t\tconst disposable = this.model.onWillDispose(() => {\n\t\t\t\tthis.onModelWillDispose(this.model);\n\t\t\t\tthis.model = null;\n\t\t\t\tdispose(disposable);\n\t\t\t});\n\t\t}\n\t\treturn this.model;\n\t}\n\n\tappendToModel(content: string): void {\n\t\tif (this.model && content) {\n\t\t\tconst lastLine = this.model.getLineCount();\n\t\t\tconst lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n\t\t\tthis.model.applyEdits([EditOperation.insert(new Position(lastLine, lastLineMaxColumn), content)]);\n\t\t\tthis._onDidAppendedContent.fire();\n\t\t}\n\t}\n\n\tabstract loadModel(): Promise<ITextModel>;\n\tabstract append(message: string): void;\n\n\tprotected onModelCreated(model: ITextModel) { }\n\tprotected onModelWillDispose(model: ITextModel | null) { }\n\tprotected onUpdateModelCancelled() { }\n\tprotected updateModel() { }\n\n\toverride dispose(): void {\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\n// TODO@bpasero see if new watchers can cope with spdlog and avoid polling then\nclass OutputFileListener extends Disposable {\n\n\tprivate readonly _onDidContentChange = new Emitter<number | undefined>();\n\treadonly onDidContentChange: Event<number | undefined> = this._onDidContentChange.event;\n\n\tprivate watching: boolean = false;\n\tprivate syncDelayer: ThrottledDelayer<void>;\n\tprivate etag: string | undefined;\n\n\tconstructor(\n\t\tprivate readonly file: URI,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.syncDelayer = new ThrottledDelayer<void>(500);\n\t}\n\n\twatch(eTag: string | undefined): void {\n\t\tif (!this.watching) {\n\t\t\tthis.etag = eTag;\n\t\t\tthis.poll();\n\t\t\tthis.watching = true;\n\t\t}\n\t}\n\n\tprivate poll(): void {\n\t\tconst loop = () => this.doWatch().then(() => this.poll());\n\t\tthis.syncDelayer.trigger(loop);\n\t}\n\n\tprivate doWatch(): Promise<void> {\n\t\treturn this.fileService.resolve(this.file, { resolveMetadata: true })\n\t\t\t.then(stat => {\n\t\t\t\tif (stat.etag !== this.etag) {\n\t\t\t\t\tthis.etag = stat.etag;\n\t\t\t\t\tthis._onDidContentChange.fire(stat.size);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tunwatch(): void {\n\t\tif (this.watching) {\n\t\t\tthis.syncDelayer.cancel();\n\t\t\tthis.watching = false;\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.unwatch();\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * An output channel driven by a file and does not support appending messages.\n */\nclass FileOutputChannelModel extends AbstractFileOutputChannelModel implements IOutputChannelModel {\n\n\tprivate readonly fileHandler: OutputFileListener;\n\n\tprivate updateInProgress: boolean = false;\n\tprivate etag: string | undefined = '';\n\tprivate loadModelPromise: Promise<ITextModel> | null = null;\n\n\tconstructor(\n\t\tmodelUri: URI,\n\t\tmimeType: string,\n\t\tfile: URI,\n\t\t@IFileService fileService: IFileService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tsuper(modelUri, mimeType, file, fileService, modelService, modeService);\n\n\t\tthis.fileHandler = this._register(new OutputFileListener(this.file, this.fileService));\n\t\tthis._register(this.fileHandler.onDidContentChange(size => this.update(size)));\n\t\tthis._register(toDisposable(() => this.fileHandler.unwatch()));\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\tthis.loadModelPromise = new Promise<ITextModel>(async (c, e) => {\n\t\t\ttry {\n\t\t\t\tlet content = '';\n\t\t\t\tif (await this.fileService.exists(this.file)) {\n\t\t\t\t\tconst fileContent = await this.fileService.readFile(this.file, { position: this.startOffset });\n\t\t\t\t\tthis.endOffset = this.startOffset + fileContent.value.byteLength;\n\t\t\t\t\tthis.etag = fileContent.etag;\n\t\t\t\t\tcontent = fileContent.value.toString();\n\t\t\t\t} else {\n\t\t\t\t\tthis.startOffset = 0;\n\t\t\t\t\tthis.endOffset = 0;\n\t\t\t\t}\n\t\t\t\tc(this.createModel(content));\n\t\t\t} catch (error) {\n\t\t\t\te(error);\n\t\t\t}\n\t\t});\n\t\treturn this.loadModelPromise;\n\t}\n\n\toverride clear(till?: number): void {\n\t\tconst loadModelPromise: Promise<any> = this.loadModelPromise ? this.loadModelPromise : Promise.resolve();\n\t\tloadModelPromise.then(() => {\n\t\t\tsuper.clear(till);\n\t\t\tthis.update();\n\t\t});\n\t}\n\n\tappend(message: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tprotected override updateModel(): void {\n\t\tif (this.model) {\n\t\t\tthis.fileService.readFile(this.file, { position: this.endOffset })\n\t\t\t\t.then(content => {\n\t\t\t\t\tthis.etag = content.etag;\n\t\t\t\t\tif (content.value) {\n\t\t\t\t\t\tthis.endOffset = this.endOffset + content.value.byteLength;\n\t\t\t\t\t\tthis.appendToModel(content.value.toString());\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateInProgress = false;\n\t\t\t\t}, () => this.updateInProgress = false);\n\t\t} else {\n\t\t\tthis.updateInProgress = false;\n\t\t}\n\t}\n\n\tprotected override onModelCreated(model: ITextModel): void {\n\t\tthis.fileHandler.watch(this.etag);\n\t}\n\n\tprotected override onModelWillDispose(model: ITextModel | null): void {\n\t\tthis.fileHandler.unwatch();\n\t}\n\n\tprotected override onUpdateModelCancelled(): void {\n\t\tthis.updateInProgress = false;\n\t}\n\n\tprotected getByteLength(str: string): number {\n\t\treturn VSBuffer.fromString(str).byteLength;\n\t}\n\n\toverride update(size?: number): void {\n\t\tif (this.model) {\n\t\t\tif (!this.updateInProgress) {\n\t\t\t\tthis.updateInProgress = true;\n\t\t\t\tif (isNumber(size) && this.endOffset > size) { // Reset - Content is removed\n\t\t\t\t\tthis.startOffset = this.endOffset = 0;\n\t\t\t\t\tthis.model.setValue('');\n\t\t\t\t}\n\t\t\t\tthis.modelUpdater.schedule();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class BufferredOutputChannel extends Disposable implements IOutputChannelModel {\n\n\treadonly file: URI | null = null;\n\tscrollLock: boolean = false;\n\n\tprotected _onDidAppendedContent = new Emitter<void>();\n\treadonly onDidAppendedContent: Event<void> = this._onDidAppendedContent.event;\n\n\tprivate readonly _onDispose = new Emitter<void>();\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate modelUpdater: RunOnceScheduler;\n\tprivate model: ITextModel | null = null;\n\tprivate readonly bufferredContent: BufferedContent;\n\tprivate lastReadId: number | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly modelUri: URI, private readonly mimeType: string,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService\n\t) {\n\t\tsuper();\n\n\t\tthis.modelUpdater = new RunOnceScheduler(() => this.updateModel(), 300);\n\t\tthis._register(toDisposable(() => this.modelUpdater.cancel()));\n\n\t\tthis.bufferredContent = new BufferedContent();\n\t\tthis._register(toDisposable(() => this.bufferredContent.clear()));\n\t}\n\n\tappend(output: string) {\n\t\tthis.bufferredContent.append(output);\n\t\tif (!this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.schedule();\n\t\t}\n\t}\n\n\tupdate(): void { }\n\n\tclear(): void {\n\t\tif (this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.cancel();\n\t\t}\n\t\tif (this.model) {\n\t\t\tthis.model.setValue('');\n\t\t}\n\t\tthis.bufferredContent.clear();\n\t\tthis.lastReadId = undefined;\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\tconst { value, id } = this.bufferredContent.getDelta(this.lastReadId);\n\t\tif (this.model) {\n\t\t\tthis.model.setValue(value);\n\t\t} else {\n\t\t\tthis.model = this.createModel(value);\n\t\t}\n\t\tthis.lastReadId = id;\n\t\treturn Promise.resolve(this.model);\n\t}\n\n\tprivate createModel(content: string): ITextModel {\n\t\tconst model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n\t\tconst disposable = model.onWillDispose(() => {\n\t\t\tthis.model = null;\n\t\t\tdispose(disposable);\n\t\t});\n\t\treturn model;\n\t}\n\n\tprivate updateModel(): void {\n\t\tif (this.model) {\n\t\t\tconst { value, id } = this.bufferredContent.getDelta(this.lastReadId);\n\t\t\tthis.lastReadId = id;\n\t\t\tconst lastLine = this.model.getLineCount();\n\t\t\tconst lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n\t\t\tthis.model.applyEdits([EditOperation.insert(new Position(lastLine, lastLineMaxColumn), value)]);\n\t\t\tthis._onDidAppendedContent.fire();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nclass BufferedContent {\n\n\tprivate static readonly MAX_OUTPUT_LENGTH = 10000 /* Max. number of output lines to show in output */ * 100 /* Guestimated chars per line */;\n\n\tprivate data: string[] = [];\n\tprivate dataIds: number[] = [];\n\tprivate idPool = 0;\n\tprivate length = 0;\n\n\tpublic append(content: string): void {\n\t\tthis.data.push(content);\n\t\tthis.dataIds.push(++this.idPool);\n\t\tthis.length += content.length;\n\t\tthis.trim();\n\t}\n\n\tpublic clear(): void {\n\t\tthis.data.length = 0;\n\t\tthis.dataIds.length = 0;\n\t\tthis.length = 0;\n\t}\n\n\tprivate trim(): void {\n\t\tif (this.length < BufferedContent.MAX_OUTPUT_LENGTH * 1.2) {\n\t\t\treturn;\n\t\t}\n\n\t\twhile (this.length > BufferedContent.MAX_OUTPUT_LENGTH) {\n\t\t\tthis.dataIds.shift();\n\t\t\tconst removed = this.data.shift();\n\t\t\tif (removed) {\n\t\t\t\tthis.length -= removed.length;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getDelta(previousId?: number): { value: string, id: number } {\n\t\tlet idx = -1;\n\t\tif (previousId !== undefined) {\n\t\t\tidx = binarySearch(this.dataIds, previousId, (a, b) => a - b);\n\t\t}\n\n\t\tconst id = this.idPool;\n\t\tif (idx >= 0) {\n\t\t\tconst value = strings.removeAnsiEscapeCodes(this.data.slice(idx + 1).join(''));\n\t\t\treturn { value, id };\n\t\t} else {\n\t\t\tconst value = strings.removeAnsiEscapeCodes(this.data.join(''));\n\t\t\treturn { value, id };\n\t\t}\n\t}\n}\n"]}