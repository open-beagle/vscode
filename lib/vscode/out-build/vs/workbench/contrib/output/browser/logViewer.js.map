{"version":3,"sources":["vs/workbench/contrib/output/browser/logViewer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBhG,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,yCAAmB;QAQtD,YACC,uBAAqD,EAClC,wBAA2C,EAC5C,eAAiC,EACnC,aAA6B,EACvB,kBAAwC,EAChD,WAAyB,EACxB,YAA2B,EACd,yBAAqD;YAEjF,KAAK,CACJ,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,mBAAU,EAAE,IAAI,EAAE,uBAAuB,CAAC,EAAE,EAAE,CAAC,EAClE,CAAA,GAAA,eAAQ,CAAA,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC3C,CAAA,GAAA,cAAO,CAAA,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,SAAS,EACT,wBAAwB,EACxB,eAAe,EACf,aAAa,EACb,kBAAkB,EAClB,WAAW,EACX,YAAY,EACZ,yBAAyB,CACzB,CAAC;QACH,CAAC;QA3BD,IAAa,MAAM;YAClB,OAAO,cAAc,CAAC,EAAE,CAAC;QAC1B,CAAC;KA0BD,CAAA;IA9ByB,iBAAE,GAAG,+BAA+B,CAAC;IAFlD,cAAc;QAUxB,WAAA,mCAAiB,CAAA;QACjB,WAAA,4BAAgB,CAAA;QAChB,WAAA,8BAAc,CAAA;QACd,WAAA,0CAAoB,CAAA;QACpB,WAAA,oBAAY,CAAA;QACZ,WAAA,qBAAa,CAAA;QACb,WAAA,sDAA0B,CAAA;OAhBhB,cAAc,CAgC1B;IAhCY,wCAAc;IAkC3B,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,+CAA0B;QAIxD,YACoB,gBAAmC,EAC/B,oBAA2C,EACjD,cAA+B,EACb,gCAAmE,EACvF,YAA2B,EACpB,kBAAwC,EAC9C,aAA6B;YAE7C,KAAK,CAAC,SAAS,CAAC,oBAAoB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,EAAE,gCAAgC,EAAE,YAAY,EAAE,kBAAkB,EAAE,aAAa,CAAC,CAAC;QAClL,CAAC;QAEkB,yBAAyB;YAC3C,MAAM,OAAO,GAAG,KAAK,CAAC,yBAAyB,EAAE,CAAC;YAClD,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,8BAA8B;YACxD,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YACxB,OAAO,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACrC,OAAO,CAAC,2BAA2B,GAAG,UAAU,CAAC;YACjD,OAAO,OAAO,CAAC;QAChB,CAAC;QAES,YAAY;YACrB,OAAO,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAoB,EAAE,IAAY,CAAC,CAAC;QACrD,CAAC;KACD,CAAA;IA1BgB,8BAAoB,GAAG,6BAA6B,CAAC;IAFzD,SAAS;QAKnB,WAAA,6BAAiB,CAAA;QACjB,WAAA,qCAAqB,CAAA;QACrB,WAAA,yBAAe,CAAA;QACf,WAAA,oEAAiC,CAAA;QACjC,WAAA,4BAAa,CAAA;QACb,WAAA,0CAAoB,CAAA;QACpB,WAAA,8BAAc,CAAA;OAXJ,SAAS,CA4BrB;IA5BY,8BAAS","file":"logViewer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { dirname, basename } from 'vs/base/common/path';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { AbstractTextResourceEditor } from 'vs/workbench/browser/parts/editor/textResourceEditor';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { LOG_SCHEME } from 'vs/workbench/contrib/output/common/output';\nimport { IFileOutputChannelDescriptor } from 'vs/workbench/services/output/common/output';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\n\nexport class LogViewerInput extends ResourceEditorInput {\n\n\tstatic override readonly ID = 'workbench.editorinputs.output';\n\n\toverride get typeId(): string {\n\t\treturn LogViewerInput.ID;\n\t}\n\n\tconstructor(\n\t\toutputChannelDescriptor: IFileOutputChannelDescriptor,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper(\n\t\t\tURI.from({ scheme: LOG_SCHEME, path: outputChannelDescriptor.id }),\n\t\t\tbasename(outputChannelDescriptor.file.path),\n\t\t\tdirname(outputChannelDescriptor.file.path),\n\t\t\tundefined,\n\t\t\ttextModelResolverService,\n\t\t\ttextFileService,\n\t\t\teditorService,\n\t\t\teditorGroupService,\n\t\t\tfileService,\n\t\t\tlabelService,\n\t\t\tfilesConfigurationService\n\t\t);\n\t}\n}\n\nexport class LogViewer extends AbstractTextResourceEditor {\n\n\tstatic readonly LOG_VIEWER_EDITOR_ID = 'workbench.editors.logViewer';\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(LogViewer.LOG_VIEWER_EDITOR_ID, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorGroupService, editorService);\n\t}\n\n\tprotected override getConfigurationOverrides(): IEditorOptions {\n\t\tconst options = super.getConfigurationOverrides();\n\t\toptions.wordWrap = 'off'; // all log viewers do not wrap\n\t\toptions.folding = false;\n\t\toptions.scrollBeyondLastLine = false;\n\t\toptions.renderValidationDecorations = 'editable';\n\t\treturn options;\n\t}\n\n\tprotected getAriaLabel(): string {\n\t\treturn localize('logViewerAriaLabel', \"Log viewer\");\n\t}\n}\n"]}