{"version":3,"sources":["vs/workbench/contrib/output/browser/output.contribution.ts"],"names":[],"mappings":"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","file":"output.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport 'vs/css!./media/output';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { ModesRegistry } from 'vs/editor/common/modes/modesRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { OutputService, LogContentProvider } from 'vs/workbench/contrib/output/browser/outputServices';\nimport { OUTPUT_MODE_ID, OUTPUT_MIME, OUTPUT_VIEW_ID, IOutputService, CONTEXT_IN_OUTPUT, LOG_SCHEME, LOG_MODE_ID, LOG_MIME, CONTEXT_ACTIVE_LOG_OUTPUT, CONTEXT_OUTPUT_SCROLL_LOCK } from 'vs/workbench/contrib/output/common/output';\nimport { OutputViewPane } from 'vs/workbench/contrib/output/browser/outputView';\nimport { IEditorRegistry, EditorDescriptor } from 'vs/workbench/browser/editor';\nimport { LogViewer, LogViewerInput } from 'vs/workbench/contrib/output/browser/logViewer';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ViewContainer, IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry, IViewsService } from 'vs/workbench/common/views';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IQuickPickItem, IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IOutputChannelDescriptor, IFileOutputChannelDescriptor } from 'vs/workbench/services/output/common/output';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { CATEGORIES } from 'vs/workbench/common/actions';\nimport { EditorExtensions } from 'vs/workbench/common/editor';\n\n// Register Service\nregisterSingleton(IOutputService, OutputService);\n\n// Register Output Mode\nModesRegistry.registerLanguage({\n\tid: OUTPUT_MODE_ID,\n\textensions: [],\n\tmimetypes: [OUTPUT_MIME]\n});\n\n// Register Log Output Mode\nModesRegistry.registerLanguage({\n\tid: LOG_MODE_ID,\n\textensions: [],\n\tmimetypes: [LOG_MIME]\n});\n\n// register output container\nconst outputViewIcon = registerIcon('output-view-icon', Codicon.output, nls.localize('outputViewIcon', 'View icon of the output view.'));\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: OUTPUT_VIEW_ID,\n\ttitle: nls.localize('output', \"Output\"),\n\ticon: outputViewIcon,\n\torder: 1,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [OUTPUT_VIEW_ID, { mergeViewWithContainerWhenSingleView: true, donotShowContainerTitleWhenMergedWithContainer: true }]),\n\tstorageId: OUTPUT_VIEW_ID,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Panel, { donotRegisterOpenCommand: true });\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: OUTPUT_VIEW_ID,\n\tname: nls.localize('output', \"Output\"),\n\tcontainerIcon: outputViewIcon,\n\tcanMoveView: true,\n\tcanToggleVisibility: false,\n\tctorDescriptor: new SyncDescriptor(OutputViewPane),\n\topenCommandActionDescriptor: {\n\t\tid: 'workbench.action.output.toggleOutput',\n\t\tmnemonicTitle: nls.localize({ key: 'miToggleOutput', comment: ['&& denotes a mnemonic'] }, \"&&Output\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_U,\n\t\t\tlinux: {\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_H)  // On Ubuntu Ctrl+Shift+U is taken by some global OS command\n\t\t\t}\n\t\t},\n\t\torder: 1,\n\t}\n}], VIEW_CONTAINER);\n\nRegistry.as<IEditorRegistry>(EditorExtensions.Editors).registerEditor(\n\tEditorDescriptor.create(\n\t\tLogViewer,\n\t\tLogViewer.LOG_VIEWER_EDITOR_ID,\n\t\tnls.localize('logViewer', \"Log Viewer\")\n\t),\n\t[\n\t\tnew SyncDescriptor(LogViewerInput)\n\t]\n);\n\nclass OutputContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService textModelService: ITextModelService\n\t) {\n\t\ttextModelService.registerTextModelContentProvider(LOG_SCHEME, instantiationService.createInstance(LogContentProvider));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(OutputContribution, LifecyclePhase.Restored);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.output.action.switchBetweenOutputs`,\n\t\t\ttitle: nls.localize('switchToOutput.label', \"Switch to Output\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OUTPUT_VIEW_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1\n\t\t\t},\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, channelId: string): Promise<void> {\n\t\tif (typeof channelId === 'string') {\n\t\t\t// Sometimes the action is executed with no channelId parameter, then we should just ignore it #103496\n\t\t\taccessor.get(IOutputService).showChannel(channelId, true);\n\t\t}\n\t}\n});\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.output.action.clearOutput`,\n\t\t\ttitle: { value: nls.localize('clearOutput.label', \"Clear Output\"), original: 'Clear Output' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OUTPUT_VIEW_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette\n\t\t\t}, {\n\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\twhen: CONTEXT_IN_OUTPUT\n\t\t\t}],\n\t\t\ticon: Codicon.clearAll\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outputService = accessor.get(IOutputService);\n\t\tconst activeChannel = outputService.getActiveChannel();\n\t\tif (activeChannel) {\n\t\t\tactiveChannel.clear();\n\t\t\taria.status(nls.localize('outputCleared', \"Output was cleared\"));\n\t\t}\n\t}\n});\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.output.action.toggleAutoScroll`,\n\t\t\ttitle: { value: nls.localize('toggleAutoScroll', \"Toggle Auto Scrolling\"), original: 'Toggle Auto Scrolling' },\n\t\t\ttooltip: nls.localize('outputScrollOff', \"Turn Auto Scrolling Off\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyEqualsExpr.create('view', OUTPUT_VIEW_ID)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t\ticon: Codicon.unlock,\n\t\t\ttoggled: {\n\t\t\t\tcondition: CONTEXT_OUTPUT_SCROLL_LOCK,\n\t\t\t\ticon: Codicon.lock,\n\t\t\t\ttooltip: nls.localize('outputScrollOn', \"Turn Auto Scrolling On\")\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outputView = accessor.get(IViewsService).getActiveViewWithId<OutputViewPane>(OUTPUT_VIEW_ID)!;\n\t\toutputView.scrollLock = !outputView.scrollLock;\n\t}\n});\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.action.openActiveLogOutputFile`,\n\t\t\ttitle: { value: nls.localize('openActiveLogOutputFile', \"Open Log Output File\"), original: 'Open Log Output File' },\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('view', OUTPUT_VIEW_ID),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 4\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_ACTIVE_LOG_OUTPUT,\n\t\t\t}],\n\t\t\ticon: Codicon.goToFile,\n\t\t\tprecondition: CONTEXT_ACTIVE_LOG_OUTPUT\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outputService = accessor.get(IOutputService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst logFileOutputChannelDescriptor = this.getLogFileOutputChannelDescriptor(outputService);\n\t\tif (logFileOutputChannelDescriptor) {\n\t\t\tawait editorService.openEditor(instantiationService.createInstance(LogViewerInput, logFileOutputChannelDescriptor), { pinned: true });\n\t\t}\n\t}\n\tprivate getLogFileOutputChannelDescriptor(outputService: IOutputService): IFileOutputChannelDescriptor | null {\n\t\tconst channel = outputService.getActiveChannel();\n\t\tif (channel) {\n\t\t\tconst descriptor = outputService.getChannelDescriptors().filter(c => c.id === channel.id)[0];\n\t\t\tif (descriptor && descriptor.file && descriptor.log) {\n\t\t\t\treturn <IFileOutputChannelDescriptor>descriptor;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.showLogs',\n\t\t\ttitle: { value: nls.localize('showLogs', \"Show Logs...\"), original: 'Show Logs...' },\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t},\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outputService = accessor.get(IOutputService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst entries: { id: string, label: string }[] = outputService.getChannelDescriptors().filter(c => c.file && c.log)\n\t\t\t.map(({ id, label }) => ({ id, label }));\n\n\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectlog', \"Select Log\") });\n\t\tif (entry) {\n\t\t\treturn outputService.showChannel(entry.id);\n\t\t}\n\t}\n});\n\ninterface IOutputChannelQuickPickItem extends IQuickPickItem {\n\tchannel: IOutputChannelDescriptor;\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openLogFile',\n\t\t\ttitle: { value: nls.localize('openLogFile', \"Open Log File...\"), original: 'Open Log File...' },\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t},\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outputService = accessor.get(IOutputService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst entries: IOutputChannelQuickPickItem[] = outputService.getChannelDescriptors().filter(c => c.file && c.log)\n\t\t\t.map(channel => (<IOutputChannelQuickPickItem>{ id: channel.id, label: channel.label, channel }));\n\n\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectlogFile', \"Select Log file\") });\n\t\tif (entry) {\n\t\t\tassertIsDefined(entry.channel.file);\n\t\t\tawait editorService.openEditor(instantiationService.createInstance(LogViewerInput, (entry.channel as IFileOutputChannelDescriptor)), { pinned: true });\n\t\t}\n\t}\n});\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'output',\n\torder: 30,\n\ttitle: nls.localize('output', \"Output\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'output.smartScroll.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('output.smartScroll.enabled', \"Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.WINDOW,\n\t\t\ttags: ['output']\n\t\t}\n\t}\n});\n"]}