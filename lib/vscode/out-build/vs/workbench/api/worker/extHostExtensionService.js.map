{"version":3,"file":"extHostExtensionService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/worker/extHostExtensionService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createApiFactoryAndRegisterActors } from 'vs/workbench/api/common/extHost.api.impl';\nimport { ExtensionActivationTimesBuilder } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { AbstractExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { URI } from 'vs/base/common/uri';\nimport { RequireInterceptor } from 'vs/workbench/api/common/extHostRequireInterceptor';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionRuntime } from 'vs/workbench/api/common/extHostTypes';\nimport { timeout } from 'vs/base/common/async';\nimport { MainContext, MainThreadConsoleShape } from 'vs/workbench/api/common/extHost.protocol';\n\nnamespace TrustedFunction {\n\n\t// workaround a chrome issue not allowing to create new functions\n\t// see https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\n\tconst ttpTrustedFunction = self.trustedTypes?.createPolicy('TrustedFunctionWorkaround', {\n\t\tcreateScript: (_, ...args: string[]) => {\n\t\t\targs.forEach((arg) => {\n\t\t\t\tif (!self.trustedTypes?.isScript(arg)) {\n\t\t\t\t\tthrow new Error('TrustedScripts only, please');\n\t\t\t\t}\n\t\t\t});\n\t\t\t// NOTE: This is insecure without parsing the arguments and body,\n\t\t\t// Malicious inputs  can escape the function body and execute immediately!\n\t\t\tconst fnArgs = args.slice(0, -1).join(',');\n\t\t\tconst fnBody = args.pop()!.toString();\n\t\t\tconst body = `(function anonymous(${fnArgs}) {\\n${fnBody}\\n})`;\n\t\t\treturn body;\n\t\t}\n\t});\n\n\texport function create(...args: string[]): Function {\n\t\tif (!ttpTrustedFunction) {\n\t\t\treturn new Function(...args);\n\t\t}\n\t\treturn self.eval(ttpTrustedFunction.createScript('', ...args) as unknown as string);\n\t}\n}\n\nclass WorkerRequireInterceptor extends RequireInterceptor {\n\n\t_installInterceptor() { }\n\n\tgetModule(request: string, parent: URI): undefined | any {\n\t\tfor (let alternativeModuleName of this._alternatives) {\n\t\t\tlet alternative = alternativeModuleName(request);\n\t\t\tif (alternative) {\n\t\t\t\trequest = alternative;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._factories.has(request)) {\n\t\t\treturn this._factories.get(request)!.load(request, parent, () => { throw new Error('CANNOT LOAD MODULE from here.'); });\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ExtHostExtensionService extends AbstractExtHostExtensionService {\n\treadonly extensionRuntime = ExtensionRuntime.Webworker;\n\n\tprivate static _ttpExtensionScripts = self.trustedTypes?.createPolicy('ExtensionScripts', { createScript: source => source });\n\n\tprivate _fakeModules?: WorkerRequireInterceptor;\n\n\tprotected async _beforeAlmostReadyToRunExtensions(): Promise<void> {\n\t\tconst mainThreadConsole = this._extHostContext.getProxy(MainContext.MainThreadConsole);\n\t\twrapConsoleMethods(mainThreadConsole, this._initData.environment.isExtensionDevelopmentDebug);\n\n\t\t// initialize API and register actors\n\t\tconst apiFactory = this._instaService.invokeFunction(createApiFactoryAndRegisterActors);\n\t\tthis._fakeModules = this._instaService.createInstance(WorkerRequireInterceptor, apiFactory, this._registry);\n\t\tawait this._fakeModules.install();\n\t\tperformance.mark('code/extHost/didInitAPI');\n\n\t\tawait this._waitForDebuggerAttachment();\n\t}\n\n\tprotected _getEntryPoint(extensionDescription: IExtensionDescription): string | undefined {\n\t\treturn extensionDescription.browser;\n\t}\n\n\tprotected async _loadCommonJSModule<T>(extensionId: ExtensionIdentifier | null, module: URI, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<T> {\n\n\t\tmodule = module.with({ path: ensureSuffix(module.path, '.js') });\n\t\tif (extensionId) {\n\t\t\tperformance.mark(`code/extHost/willFetchExtensionCode/${extensionId.value}`);\n\t\t}\n\t\tconst response = await fetch(module.toString(true));\n\t\tif (extensionId) {\n\t\t\tperformance.mark(`code/extHost/didFetchExtensionCode/${extensionId.value}`);\n\t\t}\n\n\t\tif (response.status !== 200) {\n\t\t\tthrow new Error(response.statusText);\n\t\t}\n\n\t\t// fetch JS sources as text and create a new function around it\n\t\tconst source = await response.text();\n\t\t// Here we append #vscode-extension to serve as a marker, such that source maps\n\t\t// can be adjusted for the extra wrapping function.\n\t\tconst sourceURL = `${module.toString(true)}#vscode-extension`;\n\t\tconst fullSource = `${source}\\n//# sourceURL=${sourceURL}`;\n\t\tlet initFn: Function;\n\t\ttry {\n\t\t\tinitFn = TrustedFunction.create(\n\t\t\t\tExtHostExtensionService._ttpExtensionScripts?.createScript('module') as unknown as string ?? 'module',\n\t\t\t\tExtHostExtensionService._ttpExtensionScripts?.createScript('exports') as unknown as string ?? 'exports',\n\t\t\t\tExtHostExtensionService._ttpExtensionScripts?.createScript('require') as unknown as string ?? 'require',\n\t\t\t\tExtHostExtensionService._ttpExtensionScripts?.createScript(fullSource) as unknown as string ?? fullSource\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tif (extensionId) {\n\t\t\t\tconsole.error(`Loading code for extension ${extensionId.value} failed: ${err.message}`);\n\t\t\t} else {\n\t\t\t\tconsole.error(`Loading code failed: ${err.message}`);\n\t\t\t}\n\t\t\tconsole.error(`${module.toString(true)}${typeof err.line === 'number' ? ` line ${err.line}` : ''}${typeof err.column === 'number' ? ` column ${err.column}` : ''}`);\n\t\t\tconsole.error(err);\n\t\t\tthrow err;\n\t\t}\n\n\t\t// define commonjs globals: `module`, `exports`, and `require`\n\t\tconst _exports = {};\n\t\tconst _module = { exports: _exports };\n\t\tconst _require = (request: string) => {\n\t\t\tconst result = this._fakeModules!.getModule(request, module);\n\t\t\tif (result === undefined) {\n\t\t\t\tthrow new Error(`Cannot load module '${request}'`);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\ttry {\n\t\t\tactivationTimesBuilder.codeLoadingStart();\n\t\t\tif (extensionId) {\n\t\t\t\tperformance.mark(`code/extHost/willLoadExtensionCode/${extensionId.value}`);\n\t\t\t}\n\t\t\tinitFn(_module, _exports, _require);\n\t\t\treturn <T>(_module.exports !== _exports ? _module.exports : _exports);\n\t\t} finally {\n\t\t\tif (extensionId) {\n\t\t\t\tperformance.mark(`code/extHost/didLoadExtensionCode/${extensionId.value}`);\n\t\t\t}\n\t\t\tactivationTimesBuilder.codeLoadingStop();\n\t\t}\n\t}\n\n\tasync $setRemoteEnvironment(_env: { [key: string]: string | null }): Promise<void> {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tprivate async _waitForDebuggerAttachment(waitTimeout = 5000) {\n\t\t// debugger attaches async, waiting for it fixes #106698 and #99222\n\t\tif (!this._initData.environment.isExtensionDevelopmentDebug) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst deadline = Date.now() + waitTimeout;\n\t\twhile (Date.now() < deadline && !('__jsDebugIsReady' in globalThis)) {\n\t\t\tawait timeout(10);\n\t\t}\n\t}\n}\n\nfunction ensureSuffix(path: string, suffix: string): string {\n\treturn path.endsWith(suffix) ? path : path + suffix;\n}\n\n// copied from bootstrap-fork.js\nfunction wrapConsoleMethods(service: MainThreadConsoleShape, callToNative: boolean) {\n\twrap('info', 'log');\n\twrap('log', 'log');\n\twrap('warn', 'warn');\n\twrap('error', 'error');\n\n\tfunction wrap(method: 'error' | 'warn' | 'info' | 'log', severity: 'error' | 'warn' | 'log') {\n\t\tconst original = console[method];\n\t\tconsole[method] = function () {\n\t\t\tservice.$logExtensionHostMessage({ type: '__$console', severity, arguments: safeToArray(arguments) });\n\t\t\tif (callToNative) {\n\t\t\t\toriginal.apply(console, arguments as any);\n\t\t\t}\n\t\t};\n\t}\n\n\tconst MAX_LENGTH = 100000;\n\n\tfunction safeToArray(args: IArguments) {\n\t\tconst seen: any[] = [];\n\t\tconst argsArray = [];\n\n\t\t// Massage some arguments with special treatment\n\t\tif (args.length) {\n\t\t\tfor (let i = 0; i < args.length; i++) {\n\n\t\t\t\t// Any argument of type 'undefined' needs to be specially treated because\n\t\t\t\t// JSON.stringify will simply ignore those. We replace them with the string\n\t\t\t\t// 'undefined' which is not 100% right, but good enough to be logged to console\n\t\t\t\tif (typeof args[i] === 'undefined') {\n\t\t\t\t\targs[i] = 'undefined';\n\t\t\t\t}\n\n\t\t\t\t// Any argument that is an Error will be changed to be just the error stack/message\n\t\t\t\t// itself because currently cannot serialize the error over entirely.\n\t\t\t\telse if (args[i] instanceof Error) {\n\t\t\t\t\tconst errorObj = args[i];\n\t\t\t\t\tif (errorObj.stack) {\n\t\t\t\t\t\targs[i] = errorObj.stack;\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs[i] = errorObj.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\targsArray.push(args[i]);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst res = JSON.stringify(argsArray, function (key, value) {\n\n\t\t\t\t// Objects get special treatment to prevent circles\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\t\t\treturn '[Circular]';\n\t\t\t\t\t}\n\n\t\t\t\t\tseen.push(value);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\n\t\t\tif (res.length > MAX_LENGTH) {\n\t\t\t\treturn 'Output omitted for a large object that exceeds the limits';\n\t\t\t}\n\n\t\t\treturn res;\n\t\t} catch (error) {\n\t\t\treturn `Output omitted for an object that cannot be inspected ('${error.toString()}')`;\n\t\t}\n\t}\n}\n"]}