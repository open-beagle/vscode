{"version":3,"file":"extHostLogService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/worker/extHostLogService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQhG,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,oBAAc;QAOpD,YACqB,GAAuB,EAClB,QAAiC;YAE1D,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,8BAAW,CAAC,aAAa,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;QAED,SAAS,CAAC,KAAe;YACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QAED,KAAK,CAAC,QAAgB,EAAE,GAAG,KAAY;YACtC,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,KAAK,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACvE;QACF,CAAC;QAED,KAAK,CAAC,QAAgB,EAAE,GAAG,KAAY;YACtC,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,KAAK,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACvE;QACF,CAAC;QAED,IAAI,CAAC,QAAgB,EAAE,GAAG,KAAY;YACrC,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,IAAI,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACtE;QACF,CAAC;QAED,IAAI,CAAC,QAAgB,EAAE,GAAG,KAAY;YACrC,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,OAAO,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACzE;QACF,CAAC;QAED,KAAK,CAAC,QAAwB,EAAE,GAAG,KAAY;YAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,KAAK,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACvE;QACF,CAAC;QAED,QAAQ,CAAC,QAAwB,EAAE,GAAG,KAAY;YACjD,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,cAAQ,CAAC,QAAQ,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1E;QACF,CAAC;QAED,KAAK,KAAW,CAAC;KACjB,CAAA;IA1DY,iBAAiB;QAQ3B,WAAA,sCAAkB,CAAA;QAClB,WAAA,gDAAuB,CAAA;OATb,iBAAiB,CA0D7B;IA1DY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogger } from 'vs/platform/log/common/log';\nimport { ExtHostLogServiceShape, MainThreadLogShape, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { UriComponents } from 'vs/base/common/uri';\n\nexport class ExtHostLogService extends AbstractLogger implements ILogService, ExtHostLogServiceShape {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _proxy: MainThreadLogShape;\n\tprivate readonly _logFile: UriComponents;\n\n\tconstructor(\n\t\t@IExtHostRpcService rpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = rpc.getProxy(MainContext.MainThreadLog);\n\t\tthis._logFile = initData.logFile.toJSON();\n\t\tthis.setLevel(initData.logLevel);\n\t}\n\n\t$setLevel(level: LogLevel): void {\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Trace, Array.from(arguments));\n\t\t}\n\t}\n\n\tdebug(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Debug, Array.from(arguments));\n\t\t}\n\t}\n\n\tinfo(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Info, Array.from(arguments));\n\t\t}\n\t}\n\n\twarn(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Warning, Array.from(arguments));\n\t\t}\n\t}\n\n\terror(_message: string | Error, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Error, Array.from(arguments));\n\t\t}\n\t}\n\n\tcritical(_message: string | Error, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Critical, Array.from(arguments));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n"]}