{"version":3,"sources":["vs/workbench/api/common/extHostWorkspace.ts"],"names":[],"mappings":"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","file":"extHostWorkspace.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { delta as arrayDelta, mapArrayOrNot } from 'vs/base/common/arrays';\nimport { Barrier } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { Counter } from 'vs/base/common/numbers';\nimport { basename, basenameOrAuthority, dirname, ExtUri, relativePath } from 'vs/base/common/resources';\nimport { compare } from 'vs/base/common/strings';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { Workspace, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { Range, RelativePattern } from 'vs/workbench/api/common/extHostTypes';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IRawFileMatch2, resultIsMatch } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\nimport { ExtHostWorkspaceShape, IWorkspaceData, MainContext, MainThreadMessageServiceShape, MainThreadWorkspaceShape } from './extHost.protocol';\n\nexport interface IExtHostWorkspaceProvider {\n\tgetWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined>;\n\tresolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined>;\n\tgetWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nfunction isFolderEqual(folderA: URI, folderB: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): boolean {\n\treturn new ExtUri(uri => ignorePathCasing(uri, extHostFileSystemInfo)).isEqual(folderA, folderB);\n}\n\nfunction compareWorkspaceFolderByUri(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo): number {\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo) ? 0 : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction compareWorkspaceFolderByUriAndNameAndIndex(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo): number {\n\tif (a.index !== b.index) {\n\t\treturn a.index < b.index ? -1 : 1;\n\t}\n\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo) ? compare(a.name, b.name) : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction delta(oldFolders: vscode.WorkspaceFolder[], newFolders: vscode.WorkspaceFolder[], compare: (a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo) => number, extHostFileSystemInfo: IExtHostFileSystemInfo): { removed: vscode.WorkspaceFolder[], added: vscode.WorkspaceFolder[] } {\n\tconst oldSortedFolders = oldFolders.slice(0).sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\tconst newSortedFolders = newFolders.slice(0).sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\n\treturn arrayDelta(oldSortedFolders, newSortedFolders, (a, b) => compare(a, b, extHostFileSystemInfo));\n}\n\nfunction ignorePathCasing(uri: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): boolean {\n\tconst capabilities = extHostFileSystemInfo.getCapabilities(uri.scheme);\n\treturn !(capabilities && (capabilities & FileSystemProviderCapabilities.PathCaseSensitive));\n}\n\ninterface MutableWorkspaceFolder extends vscode.WorkspaceFolder {\n\tname: string;\n\tindex: number;\n}\n\nclass ExtHostWorkspaceImpl extends Workspace {\n\n\tstatic toExtHostWorkspace(data: IWorkspaceData | null, previousConfirmedWorkspace: ExtHostWorkspaceImpl | undefined, previousUnconfirmedWorkspace: ExtHostWorkspaceImpl | undefined, extHostFileSystemInfo: IExtHostFileSystemInfo): { workspace: ExtHostWorkspaceImpl | null, added: vscode.WorkspaceFolder[], removed: vscode.WorkspaceFolder[] } {\n\t\tif (!data) {\n\t\t\treturn { workspace: null, added: [], removed: [] };\n\t\t}\n\n\t\tconst { id, name, folders, configuration, isUntitled } = data;\n\t\tconst newWorkspaceFolders: vscode.WorkspaceFolder[] = [];\n\n\t\t// If we have an existing workspace, we try to find the folders that match our\n\t\t// data and update their properties. It could be that an extension stored them\n\t\t// for later use and we want to keep them \"live\" if they are still present.\n\t\tconst oldWorkspace = previousConfirmedWorkspace;\n\t\tif (previousConfirmedWorkspace) {\n\t\t\tfolders.forEach((folderData, index) => {\n\t\t\t\tconst folderUri = URI.revive(folderData.uri);\n\t\t\t\tconst existingFolder = ExtHostWorkspaceImpl._findFolder(previousUnconfirmedWorkspace || previousConfirmedWorkspace, folderUri, extHostFileSystemInfo);\n\n\t\t\t\tif (existingFolder) {\n\t\t\t\t\texistingFolder.name = folderData.name;\n\t\t\t\t\texistingFolder.index = folderData.index;\n\n\t\t\t\t\tnewWorkspaceFolders.push(existingFolder);\n\t\t\t\t} else {\n\t\t\t\t\tnewWorkspaceFolders.push({ uri: folderUri, name: folderData.name, index });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewWorkspaceFolders.push(...folders.map(({ uri, name, index }) => ({ uri: URI.revive(uri), name, index })));\n\t\t}\n\n\t\t// make sure to restore sort order based on index\n\t\tnewWorkspaceFolders.sort((f1, f2) => f1.index < f2.index ? -1 : 1);\n\n\t\tconst workspace = new ExtHostWorkspaceImpl(id, name, newWorkspaceFolders, configuration ? URI.revive(configuration) : null, !!isUntitled, uri => ignorePathCasing(uri, extHostFileSystemInfo));\n\t\tconst { added, removed } = delta(oldWorkspace ? oldWorkspace.workspaceFolders : [], workspace.workspaceFolders, compareWorkspaceFolderByUri, extHostFileSystemInfo);\n\n\t\treturn { workspace, added, removed };\n\t}\n\n\tprivate static _findFolder(workspace: ExtHostWorkspaceImpl, folderUriToFind: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): MutableWorkspaceFolder | undefined {\n\t\tfor (let i = 0; i < workspace.folders.length; i++) {\n\t\t\tconst folder = workspace.workspaceFolders[i];\n\t\t\tif (isFolderEqual(folder.uri, folderUriToFind, extHostFileSystemInfo)) {\n\t\t\t\treturn folder;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _workspaceFolders: vscode.WorkspaceFolder[] = [];\n\tprivate readonly _structure: TernarySearchTree<URI, vscode.WorkspaceFolder>;\n\n\tconstructor(id: string, private _name: string, folders: vscode.WorkspaceFolder[], configuration: URI | null, private _isUntitled: boolean, ignorePathCasing: (key: URI) => boolean) {\n\t\tsuper(id, folders.map(f => new WorkspaceFolder(f)), configuration, ignorePathCasing);\n\t\tthis._structure = TernarySearchTree.forUris<vscode.WorkspaceFolder>(ignorePathCasing);\n\n\t\t// setup the workspace folder data structure\n\t\tfolders.forEach(folder => {\n\t\t\tthis._workspaceFolders.push(folder);\n\t\t\tthis._structure.set(folder.uri, folder);\n\t\t});\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget isUntitled(): boolean {\n\t\treturn this._isUntitled;\n\t}\n\n\tget workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn this._workspaceFolders.slice(0);\n\t}\n\n\tgetWorkspaceFolder(uri: URI, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (resolveParent && this._structure.get(uri)) {\n\t\t\t// `uri` is a workspace folder so we check for its parent\n\t\t\turi = dirname(uri);\n\t\t}\n\t\treturn this._structure.findSubstr(uri);\n\t}\n\n\tresolveWorkspaceFolder(uri: URI): vscode.WorkspaceFolder | undefined {\n\t\treturn this._structure.get(uri);\n\t}\n}\n\nexport class ExtHostWorkspace implements ExtHostWorkspaceShape, IExtHostWorkspaceProvider {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeWorkspace = new Emitter<vscode.WorkspaceFoldersChangeEvent>();\n\treadonly onDidChangeWorkspace: Event<vscode.WorkspaceFoldersChangeEvent> = this._onDidChangeWorkspace.event;\n\n\tprivate readonly _onDidGrantWorkspaceTrust = new Emitter<void>();\n\treadonly onDidGrantWorkspaceTrust: Event<void> = this._onDidGrantWorkspaceTrust.event;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _requestIdProvider: Counter;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate _confirmedWorkspace?: ExtHostWorkspaceImpl;\n\tprivate _unconfirmedWorkspace?: ExtHostWorkspaceImpl;\n\n\tprivate readonly _proxy: MainThreadWorkspaceShape;\n\tprivate readonly _messageService: MainThreadMessageServiceShape;\n\tprivate readonly _extHostFileSystemInfo: IExtHostFileSystemInfo;\n\n\tprivate readonly _activeSearchCallbacks: ((match: IRawFileMatch2) => any)[] = [];\n\n\tprivate _trusted: boolean = false;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostFileSystemInfo extHostFileSystemInfo: IExtHostFileSystemInfo,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tthis._logService = logService;\n\t\tthis._extHostFileSystemInfo = extHostFileSystemInfo;\n\t\tthis._requestIdProvider = new Counter();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._messageService = extHostRpc.getProxy(MainContext.MainThreadMessageService);\n\t\tconst data = initData.workspace;\n\t\tthis._confirmedWorkspace = data ? new ExtHostWorkspaceImpl(data.id, data.name, [], data.configuration ? URI.revive(data.configuration) : null, !!data.isUntitled, uri => ignorePathCasing(uri, extHostFileSystemInfo)) : undefined;\n\t}\n\n\t$initializeWorkspace(data: IWorkspaceData | null, trusted: boolean): void {\n\t\tthis._trusted = trusted;\n\t\tthis.$acceptWorkspaceData(data);\n\t\tthis._barrier.open();\n\t}\n\n\twaitForInitializeCall(): Promise<boolean> {\n\t\treturn this._barrier.wait();\n\t}\n\n\t// --- workspace ---\n\n\tget workspace(): Workspace | undefined {\n\t\treturn this._actualWorkspace;\n\t}\n\n\tget name(): string | undefined {\n\t\treturn this._actualWorkspace ? this._actualWorkspace.name : undefined;\n\t}\n\n\tget workspaceFile(): vscode.Uri | undefined {\n\t\tif (this._actualWorkspace) {\n\t\t\tif (this._actualWorkspace.configuration) {\n\t\t\t\tif (this._actualWorkspace.isUntitled) {\n\t\t\t\t\treturn URI.from({ scheme: Schemas.untitled, path: basename(dirname(this._actualWorkspace.configuration)) }); // Untitled Worspace: return untitled URI\n\t\t\t\t}\n\n\t\t\t\treturn this._actualWorkspace.configuration; // Workspace: return the configuration location\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate get _actualWorkspace(): ExtHostWorkspaceImpl | undefined {\n\t\treturn this._unconfirmedWorkspace || this._confirmedWorkspace;\n\t}\n\n\tgetWorkspaceFolders(): vscode.WorkspaceFolder[] | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tasync getWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tupdateWorkspaceFolders(extension: IExtensionDescription, index: number, deleteCount: number, ...workspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[]): boolean {\n\t\tconst validatedDistinctWorkspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[] = [];\n\t\tif (Array.isArray(workspaceFoldersToAdd)) {\n\t\t\tworkspaceFoldersToAdd.forEach(folderToAdd => {\n\t\t\t\tif (URI.isUri(folderToAdd.uri) && !validatedDistinctWorkspaceFoldersToAdd.some(f => isFolderEqual(f.uri, folderToAdd.uri, this._extHostFileSystemInfo))) {\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.push({ uri: folderToAdd.uri, name: folderToAdd.name || basenameOrAuthority(folderToAdd.uri) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!!this._unconfirmedWorkspace) {\n\t\t\treturn false; // prevent accumulated calls without a confirmed workspace\n\t\t}\n\n\t\tif ([index, deleteCount].some(i => typeof i !== 'number' || i < 0)) {\n\t\t\treturn false; // validate numbers\n\t\t}\n\n\t\tif (deleteCount === 0 && validatedDistinctWorkspaceFoldersToAdd.length === 0) {\n\t\t\treturn false; // nothing to delete or add\n\t\t}\n\n\t\tconst currentWorkspaceFolders: MutableWorkspaceFolder[] = this._actualWorkspace ? this._actualWorkspace.workspaceFolders : [];\n\t\tif (index + deleteCount > currentWorkspaceFolders.length) {\n\t\t\treturn false; // cannot delete more than we have\n\t\t}\n\n\t\t// Simulate the updateWorkspaceFolders method on our data to do more validation\n\t\tconst newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n\t\tnewWorkspaceFolders.splice(index, deleteCount, ...validatedDistinctWorkspaceFoldersToAdd.map(f => ({ uri: f.uri, name: f.name || basenameOrAuthority(f.uri), index: undefined! /* fixed later */ })));\n\n\t\tfor (let i = 0; i < newWorkspaceFolders.length; i++) {\n\t\t\tconst folder = newWorkspaceFolders[i];\n\t\t\tif (newWorkspaceFolders.some((otherFolder, index) => index !== i && isFolderEqual(folder.uri, otherFolder.uri, this._extHostFileSystemInfo))) {\n\t\t\t\treturn false; // cannot add the same folder multiple times\n\t\t\t}\n\t\t}\n\n\t\tnewWorkspaceFolders.forEach((f, index) => f.index = index); // fix index\n\t\tconst { added, removed } = delta(currentWorkspaceFolders, newWorkspaceFolders, compareWorkspaceFolderByUriAndNameAndIndex, this._extHostFileSystemInfo);\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false; // nothing actually changed\n\t\t}\n\n\t\t// Trigger on main side\n\t\tif (this._proxy) {\n\t\t\tconst extName = extension.displayName || extension.name;\n\t\t\tthis._proxy.$updateWorkspaceFolders(extName, index, deleteCount, validatedDistinctWorkspaceFoldersToAdd).then(undefined, error => {\n\n\t\t\t\t// in case of an error, make sure to clear out the unconfirmed workspace\n\t\t\t\t// because we cannot expect the acknowledgement from the main side for this\n\t\t\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t\t\t// show error to user\n\t\t\t\tthis._messageService.$showMessage(Severity.Error, localize('updateerror', \"Extension '{0}' failed to update workspace folders: {1}\", extName, error.toString()), { extension }, []);\n\t\t\t});\n\t\t}\n\n\t\t// Try to accept directly\n\t\tthis.trySetWorkspaceFolders(newWorkspaceFolders);\n\n\t\treturn true;\n\t}\n\n\tgetWorkspaceFolder(uri: vscode.Uri, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync getWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync resolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.resolveWorkspaceFolder(uri);\n\t}\n\n\tgetPath(): string | undefined {\n\n\t\t// this is legacy from the days before having\n\t\t// multi-root and we keep it only alive if there\n\t\t// is just one workspace folder.\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { folders } = this._actualWorkspace;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// #54483 @Joh Why are we still using fsPath?\n\t\treturn folders[0].uri.fsPath;\n\t}\n\n\tgetRelativePath(pathOrUri: string | vscode.Uri, includeWorkspace?: boolean): string {\n\n\t\tlet resource: URI | undefined;\n\t\tlet path: string = '';\n\t\tif (typeof pathOrUri === 'string') {\n\t\t\tresource = URI.file(pathOrUri);\n\t\t\tpath = pathOrUri;\n\t\t} else if (typeof pathOrUri !== 'undefined') {\n\t\t\tresource = pathOrUri;\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (!resource) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst folder = this.getWorkspaceFolder(\n\t\t\tresource,\n\t\t\ttrue\n\t\t);\n\n\t\tif (!folder) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (typeof includeWorkspace === 'undefined' && this._actualWorkspace) {\n\t\t\tincludeWorkspace = this._actualWorkspace.folders.length > 1;\n\t\t}\n\n\t\tlet result = relativePath(folder.uri, resource);\n\t\tif (includeWorkspace && folder.name) {\n\t\t\tresult = `${folder.name}/${result}`;\n\t\t}\n\t\treturn result!;\n\t}\n\n\tprivate trySetWorkspaceFolders(folders: vscode.WorkspaceFolder[]): void {\n\n\t\t// Update directly here. The workspace is unconfirmed as long as we did not get an\n\t\t// acknowledgement from the main side (via $acceptWorkspaceData)\n\t\tif (this._actualWorkspace) {\n\t\t\tthis._unconfirmedWorkspace = ExtHostWorkspaceImpl.toExtHostWorkspace({\n\t\t\t\tid: this._actualWorkspace.id,\n\t\t\t\tname: this._actualWorkspace.name,\n\t\t\t\tconfiguration: this._actualWorkspace.configuration,\n\t\t\t\tfolders,\n\t\t\t\tisUntitled: this._actualWorkspace.isUntitled\n\t\t\t} as IWorkspaceData, this._actualWorkspace, undefined, this._extHostFileSystemInfo).workspace || undefined;\n\t\t}\n\t}\n\n\t$acceptWorkspaceData(data: IWorkspaceData | null): void {\n\n\t\tconst { workspace, added, removed } = ExtHostWorkspaceImpl.toExtHostWorkspace(data, this._confirmedWorkspace, this._unconfirmedWorkspace, this._extHostFileSystemInfo);\n\n\t\t// Update our workspace object. We have a confirmed workspace, so we drop our\n\t\t// unconfirmed workspace.\n\t\tthis._confirmedWorkspace = workspace || undefined;\n\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t// Events\n\t\tthis._onDidChangeWorkspace.fire(Object.freeze({\n\t\t\tadded,\n\t\t\tremoved,\n\t\t}));\n\t}\n\n\t// --- search ---\n\n\t/**\n\t * Note, null/undefined have different and important meanings for \"exclude\"\n\t */\n\tfindFiles(include: string | RelativePattern | undefined, exclude: vscode.GlobPattern | null | undefined, maxResults: number | undefined, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles`);\n\n\t\tlet excludePatternOrDisregardExcludes: string | false | undefined = undefined;\n\t\tif (exclude === null) {\n\t\t\texcludePatternOrDisregardExcludes = false;\n\t\t} else if (exclude) {\n\t\t\tif (typeof exclude === 'string') {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude;\n\t\t\t} else {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude.pattern;\n\t\t\t}\n\t\t}\n\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst { includePattern, folder } = parseSearchInclude(include);\n\t\treturn this._proxy.$startFileSearch(\n\t\t\twithUndefinedAsNull(includePattern),\n\t\t\twithUndefinedAsNull(folder),\n\t\t\twithUndefinedAsNull(excludePatternOrDisregardExcludes),\n\t\t\twithUndefinedAsNull(maxResults),\n\t\t\ttoken\n\t\t)\n\t\t\t.then(data => Array.isArray(data) ? data.map(d => URI.revive(d)) : []);\n\t}\n\n\tasync findTextInFiles(query: vscode.TextSearchQuery, options: vscode.FindTextInFilesOptions, callback: (result: vscode.TextSearchResult) => void, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.TextSearchComplete> {\n\t\tthis._logService.trace(`extHostWorkspace#findTextInFiles: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFiles`);\n\n\t\tconst requestId = this._requestIdProvider.getNext();\n\n\t\tconst previewOptions: vscode.TextSearchPreviewOptions = typeof options.previewOptions === 'undefined' ?\n\t\t\t{\n\t\t\t\tmatchLines: 100,\n\t\t\t\tcharsPerLine: 10000\n\t\t\t} :\n\t\t\toptions.previewOptions;\n\n\t\tconst { includePattern, folder } = parseSearchInclude(options.include);\n\t\tconst excludePattern = (typeof options.exclude === 'string') ? options.exclude :\n\t\t\toptions.exclude ? options.exclude.pattern : undefined;\n\t\tconst queryOptions: ITextQueryBuilderOptions = {\n\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles === 'boolean' ? !options.useIgnoreFiles : undefined,\n\t\t\tdisregardGlobalIgnoreFiles: typeof options.useGlobalIgnoreFiles === 'boolean' ? !options.useGlobalIgnoreFiles : undefined,\n\t\t\tdisregardExcludeSettings: typeof options.useDefaultExcludes === 'boolean' ? !options.useDefaultExcludes : true,\n\t\t\tfileEncoding: options.encoding,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tpreviewOptions,\n\t\t\tafterContext: options.afterContext,\n\t\t\tbeforeContext: options.beforeContext,\n\n\t\t\tincludePattern: includePattern,\n\t\t\texcludePattern: excludePattern\n\t\t};\n\n\t\tconst isCanceled = false;\n\n\t\tthis._activeSearchCallbacks[requestId] = p => {\n\t\t\tif (isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uri = URI.revive(p.resource);\n\t\t\tp.results!.forEach(result => {\n\t\t\t\tif (resultIsMatch(result)) {\n\t\t\t\t\tcallback(<vscode.TextSearchMatch>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tpreview: {\n\t\t\t\t\t\t\ttext: result.preview.text,\n\t\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\t\tresult.preview.matches,\n\t\t\t\t\t\t\t\tm => new Range(m.startLineNumber, m.startColumn, m.endLineNumber, m.endColumn))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\t\tresult.ranges,\n\t\t\t\t\t\t\tr => new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn))\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcallback(<vscode.TextSearchContext>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\ttext: result.text,\n\t\t\t\t\t\tlineNumber: result.lineNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await this._proxy.$startTextSearch(\n\t\t\t\tquery,\n\t\t\t\twithUndefinedAsNull(folder),\n\t\t\t\tqueryOptions,\n\t\t\t\trequestId,\n\t\t\t\ttoken);\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn result || {};\n\t\t} catch (err) {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void {\n\t\tif (this._activeSearchCallbacks[requestId]) {\n\t\t\tthis._activeSearchCallbacks[requestId](result);\n\t\t}\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._proxy.$saveAll(includeUntitled);\n\t}\n\n\tresolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$resolveProxy(url);\n\t}\n\n\t// --- trust ---\n\n\tget trusted(): boolean {\n\t\treturn this._trusted;\n\t}\n\n\trequestWorkspaceTrust(options?: vscode.WorkspaceTrustRequestOptions): Promise<boolean | undefined> {\n\t\tconst promise = this._proxy.$requestWorkspaceTrust(options);\n\t\treturn options?.modal ? promise : Promise.resolve(this._trusted);\n\t}\n\n\t$onDidGrantWorkspaceTrust(): void {\n\t\tif (!this._trusted) {\n\t\t\tthis._trusted = true;\n\t\t\tthis._onDidGrantWorkspaceTrust.fire();\n\t\t}\n\t}\n}\n\nexport const IExtHostWorkspace = createDecorator<IExtHostWorkspace>('IExtHostWorkspace');\nexport interface IExtHostWorkspace extends ExtHostWorkspace, ExtHostWorkspaceShape, IExtHostWorkspaceProvider { }\n\nfunction parseSearchInclude(include: RelativePattern | string | undefined): { includePattern?: string, folder?: URI } {\n\tlet includePattern: string | undefined;\n\tlet includeFolder: URI | undefined;\n\tif (include) {\n\t\tif (typeof include === 'string') {\n\t\t\tincludePattern = include;\n\t\t} else {\n\t\t\tincludePattern = include.pattern;\n\t\t\tincludeFolder = include.baseFolder || URI.file(include.base);\n\t\t}\n\t}\n\n\treturn {\n\t\tincludePattern,\n\t\tfolder: includeFolder\n\t};\n}\n"]}