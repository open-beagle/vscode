{"version":3,"file":"extHostFileSystemInfo.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostFileSystemInfo.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,qBAAqB;QAAlC;YAIkB,mBAAc,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAO,CAAC,CAAC,CAAC;YAC/C,kBAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;QAiB5D,CAAC;QAfA,oBAAoB,CAAC,MAAc,EAAE,YAA2B;YAC/D,IAAI,YAAY,KAAK,IAAI,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAClC;iBAAM;gBACN,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;aAC7C;QACF,CAAC;QAED,YAAY,CAAC,MAAc;YAC1B,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5E,CAAC;QAED,eAAe,CAAC,MAAc;YAC7B,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;KACD;IAtBD,sDAsBC;IAGY,QAAA,sBAAsB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAyB,wBAAwB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostFileSystemInfoShape } from 'vs/workbench/api/common/extHost.protocol';\n\nexport class ExtHostFileSystemInfo implements ExtHostFileSystemInfoShape {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _systemSchemes = new Set(Object.keys(Schemas));\n\tprivate readonly _providerInfo = new Map<string, number>();\n\n\t$acceptProviderInfos(scheme: string, capabilities: number | null): void {\n\t\tif (capabilities === null) {\n\t\t\tthis._providerInfo.delete(scheme);\n\t\t} else {\n\t\t\tthis._providerInfo.set(scheme, capabilities);\n\t\t}\n\t}\n\n\tisFreeScheme(scheme: string): boolean {\n\t\treturn !this._providerInfo.has(scheme) && !this._systemSchemes.has(scheme);\n\t}\n\n\tgetCapabilities(scheme: string): number | undefined {\n\t\treturn this._providerInfo.get(scheme);\n\t}\n}\n\nexport interface IExtHostFileSystemInfo extends ExtHostFileSystemInfo { }\nexport const IExtHostFileSystemInfo = createDecorator<IExtHostFileSystemInfo>('IExtHostFileSystemInfo');\n"]}