{"version":3,"file":"extHostNotebookKernels.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostNotebookKernels.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ExtHostNotebookKernelsShape, IMainContext, INotebookKernelDto2, MainContext, MainThreadNotebookKernelsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport * as vscode from 'vscode';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as extHostTypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { asWebviewUri } from 'vs/workbench/api/common/shared/webview';\n\ninterface IKernelData {\n\textensionId: ExtensionIdentifier,\n\tcontroller: vscode.NotebookController;\n\tonDidChangeSelection: Emitter<{ selected: boolean; notebook: vscode.NotebookDocument; }>;\n\tonDidReceiveMessage: Emitter<{ editor: vscode.NotebookEditor, message: any }>;\n}\n\nexport class ExtHostNotebookKernels implements ExtHostNotebookKernelsShape {\n\n\tprivate readonly _proxy: MainThreadNotebookKernelsShape;\n\n\tprivate readonly _kernelData = new Map<number, IKernelData>();\n\tprivate _handlePool: number = 0;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _initData: IExtHostInitDataService,\n\t\tprivate readonly _extHostNotebook: ExtHostNotebookController\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadNotebookKernels);\n\t}\n\n\tcreateNotebookController(extension: IExtensionDescription, id: string, viewType: string, label: string, handler?: vscode.NotebookExecuteHandler, preloads?: vscode.NotebookKernelPreload[]): vscode.NotebookController {\n\n\t\tfor (let data of this._kernelData.values()) {\n\t\t\tif (data.controller.id === id && ExtensionIdentifier.equals(extension.identifier, data.extensionId)) {\n\t\t\t\tthrow new Error(`notebook controller with id '${id}' ALREADY exist`);\n\t\t\t}\n\t\t}\n\n\t\tconst handle = this._handlePool++;\n\t\tconst that = this;\n\n\t\tconst _defaultExecutHandler = () => console.warn(`NO execute handler from notebook controller '${data.id}' of extension: '${extension.identifier}'`);\n\n\t\tlet isDisposed = false;\n\t\tconst commandDisposables = new DisposableStore();\n\n\t\tconst onDidChangeSelection = new Emitter<{ selected: boolean, notebook: vscode.NotebookDocument }>();\n\t\tconst onDidReceiveMessage = new Emitter<{ editor: vscode.NotebookEditor, message: any }>();\n\n\t\tconst data: INotebookKernelDto2 = {\n\t\t\tid: `${extension.identifier.value}/${id}`,\n\t\t\tviewType,\n\t\t\textensionId: extension.identifier,\n\t\t\textensionLocation: extension.extensionLocation,\n\t\t\tlabel: label || extension.identifier.value,\n\t\t\tpreloads: preloads ? preloads.map(extHostTypeConverters.NotebookKernelPreload.from) : []\n\t\t};\n\n\t\t//\n\t\tlet _executeHandler: vscode.NotebookExecuteHandler = handler ?? _defaultExecutHandler;\n\t\tlet _interruptHandler: vscode.NotebookInterruptHandler | undefined;\n\n\t\t// todo@jrieken the selector needs to be massaged\n\t\tthis._proxy.$addKernel(handle, data).catch(err => {\n\t\t\t// this can happen when a kernel with that ID is already registered\n\t\t\tconsole.log(err);\n\t\t\tisDisposed = true;\n\t\t});\n\n\t\t// update: all setters write directly into the dto object\n\t\t// and trigger an update. the actual update will only happen\n\t\t// once per event loop execution\n\t\tlet tokenPool = 0;\n\t\tconst _update = () => {\n\t\t\tif (isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst myToken = ++tokenPool;\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (myToken === tokenPool) {\n\t\t\t\t\tthis._proxy.$updateKernel(handle, data);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst controller: vscode.NotebookController = {\n\t\t\tget id() { return id; },\n\t\t\tget viewType() { return data.viewType; },\n\t\t\tonDidChangeNotebookAssociation: onDidChangeSelection.event,\n\t\t\tget label() {\n\t\t\t\treturn data.label;\n\t\t\t},\n\t\t\tset label(value) {\n\t\t\t\tdata.label = value ?? extension.displayName ?? extension.name;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget detail() {\n\t\t\t\treturn data.detail ?? '';\n\t\t\t},\n\t\t\tset detail(value) {\n\t\t\t\tdata.detail = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget description() {\n\t\t\t\treturn data.description ?? '';\n\t\t\t},\n\t\t\tset description(value) {\n\t\t\t\tdata.description = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget supportedLanguages() {\n\t\t\t\treturn data.supportedLanguages;\n\t\t\t},\n\t\t\tset supportedLanguages(value) {\n\t\t\t\tdata.supportedLanguages = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget hasExecutionOrder() {\n\t\t\t\treturn data.hasExecutionOrder ?? false;\n\t\t\t},\n\t\t\tset hasExecutionOrder(value) {\n\t\t\t\tdata.hasExecutionOrder = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget preloads() {\n\t\t\t\treturn data.preloads ? data.preloads.map(extHostTypeConverters.NotebookKernelPreload.to) : [];\n\t\t\t},\n\t\t\tget executeHandler() {\n\t\t\t\treturn _executeHandler;\n\t\t\t},\n\t\t\tset executeHandler(value) {\n\t\t\t\t_executeHandler = value ?? _defaultExecutHandler;\n\t\t\t},\n\t\t\tget interruptHandler() {\n\t\t\t\treturn _interruptHandler;\n\t\t\t},\n\t\t\tset interruptHandler(value) {\n\t\t\t\t_interruptHandler = value;\n\t\t\t\tdata.supportsInterrupt = Boolean(value);\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tcreateNotebookCellExecutionTask(cell) {\n\t\t\t\tif (isDisposed) {\n\t\t\t\t\tthrow new Error('notebook controller is DISPOSED');\n\t\t\t\t}\n\t\t\t\t//todo@jrieken\n\t\t\t\treturn that._extHostNotebook.createNotebookCellExecution(cell.notebook.uri, cell.index, data.id)!;\n\t\t\t},\n\t\t\tdispose: () => {\n\t\t\t\tif (!isDisposed) {\n\t\t\t\t\tisDisposed = true;\n\t\t\t\t\tthis._kernelData.delete(handle);\n\t\t\t\t\tcommandDisposables.dispose();\n\t\t\t\t\tonDidChangeSelection.dispose();\n\t\t\t\t\tonDidReceiveMessage.dispose();\n\t\t\t\t\tthis._proxy.$removeKernel(handle);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// --- ipc\n\t\t\tonDidReceiveMessage: onDidReceiveMessage.event,\n\t\t\tpostMessage(message, editor) {\n\t\t\t\treturn that._proxy.$postMessage(handle, editor && that._extHostNotebook.getIdByEditor(editor), message);\n\t\t\t},\n\t\t\tasWebviewUri(uri: URI) {\n\t\t\t\treturn asWebviewUri(that._initData.environment, String(handle), uri);\n\t\t\t},\n\t\t\t// --- priority\n\t\t\tupdateNotebookAffinity(notebook, priority) {\n\t\t\t\tthat._proxy.$updateNotebookPriority(handle, notebook.uri, priority);\n\t\t\t}\n\t\t};\n\n\t\tthis._kernelData.set(handle, { extensionId: extension.identifier, controller, onDidChangeSelection, onDidReceiveMessage });\n\t\treturn controller;\n\t}\n\n\t$acceptSelection(handle: number, uri: UriComponents, value: boolean): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (obj) {\n\t\t\tobj.onDidChangeSelection.fire({\n\t\t\t\tselected: value,\n\t\t\t\tnotebook: this._extHostNotebook.lookupNotebookDocument(URI.revive(uri))!.apiNotebook\n\t\t\t});\n\t\t}\n\t}\n\n\tasync $executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\t\tconst document = this._extHostNotebook.lookupNotebookDocument(URI.revive(uri));\n\t\tif (!document) {\n\t\t\tthrow new Error('MISSING notebook');\n\t\t}\n\n\t\tconst cells: vscode.NotebookCell[] = [];\n\t\tfor (let cellHandle of handles) {\n\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\tif (cell) {\n\t\t\t\tcells.push(cell.apiCell);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait obj.controller.executeHandler.call(obj.controller, cells, document.apiNotebook, obj.controller);\n\t\t} catch (err) {\n\t\t\t//\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\tasync $cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\t\tconst document = this._extHostNotebook.lookupNotebookDocument(URI.revive(uri));\n\t\tif (!document) {\n\t\t\tthrow new Error('MISSING notebook');\n\t\t}\n\t\tif (obj.controller.interruptHandler) {\n\t\t\tawait obj.controller.interruptHandler.call(obj.controller, document.apiNotebook);\n\t\t}\n\n\t\t// we do both? interrupt and cancellation or should we be selective?\n\t\tfor (let cellHandle of handles) {\n\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\tif (cell) {\n\t\t\t\tthis._extHostNotebook.cancelOneNotebookCellExecution(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\t$acceptRendererMessage(handle: number, editorId: string, message: any): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this._extHostNotebook.getEditorById(editorId);\n\t\tif (!editor) {\n\t\t\tthrow new Error(`send message for UNKNOWN editor: ${editorId}`);\n\t\t}\n\n\t\tobj.onDidReceiveMessage.fire(Object.freeze({ editor: editor.apiEditor, message }));\n\t}\n}\n"]}