{"version":3,"file":"extHostNotebookConcatDocument.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostNotebookConcatDocument.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport * as vscode from 'vscode';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { score } from 'vs/editor/common/modes/languageSelector';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\n\nexport class ExtHostNotebookConcatDocument implements vscode.NotebookConcatTextDocument {\n\n\tprivate _disposables = new DisposableStore();\n\tprivate _isClosed = false;\n\n\tprivate _cells!: vscode.NotebookCell[];\n\tprivate _cellUris!: ResourceMap<number>;\n\tprivate _cellLengths!: PrefixSumComputer;\n\tprivate _cellLines!: PrefixSumComputer;\n\tprivate _versionId = 0;\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\treadonly uri = URI.from({ scheme: 'vscode-concat-doc', path: generateUuid() });\n\n\tconstructor(\n\t\textHostNotebooks: ExtHostNotebookController,\n\t\textHostDocuments: ExtHostDocuments,\n\t\tprivate readonly _notebook: vscode.NotebookDocument,\n\t\tprivate readonly _selector: vscode.DocumentSelector | undefined,\n\t) {\n\t\tthis._init();\n\n\t\tthis._disposables.add(extHostDocuments.onDidChangeDocument(e => {\n\t\t\tconst cellIdx = this._cellUris.get(e.document.uri);\n\t\t\tif (cellIdx !== undefined) {\n\t\t\t\tthis._cellLengths.changeValue(cellIdx, this._cells[cellIdx].document.getText().length + 1);\n\t\t\t\tthis._cellLines.changeValue(cellIdx, this._cells[cellIdx].document.lineCount);\n\t\t\t\tthis._versionId += 1;\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t}\n\t\t}));\n\t\tconst documentChange = (document: vscode.NotebookDocument) => {\n\t\t\tif (document === this._notebook) {\n\t\t\t\tthis._init();\n\t\t\t\tthis._versionId += 1;\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t}\n\t\t};\n\n\t\tthis._disposables.add(extHostNotebooks.onDidChangeNotebookCells(e => documentChange(e.document)));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._isClosed = true;\n\t}\n\n\tget isClosed() {\n\t\treturn this._isClosed;\n\t}\n\n\tprivate _init() {\n\t\tthis._cells = [];\n\t\tthis._cellUris = new ResourceMap();\n\t\tconst cellLengths: number[] = [];\n\t\tconst cellLineCounts: number[] = [];\n\t\tfor (const cell of this._notebook.getCells()) {\n\t\t\tif (cell.kind === types.NotebookCellKind.Code && (!this._selector || score(this._selector, cell.document.uri, cell.document.languageId, true))) {\n\t\t\t\tthis._cellUris.set(cell.document.uri, this._cells.length);\n\t\t\t\tthis._cells.push(cell);\n\t\t\t\tcellLengths.push(cell.document.getText().length + 1);\n\t\t\t\tcellLineCounts.push(cell.document.lineCount);\n\t\t\t}\n\t\t}\n\t\tthis._cellLengths = new PrefixSumComputer(new Uint32Array(cellLengths));\n\t\tthis._cellLines = new PrefixSumComputer(new Uint32Array(cellLineCounts));\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(range?: vscode.Range): string {\n\t\tif (!range) {\n\t\t\tlet result = '';\n\t\t\tfor (const cell of this._cells) {\n\t\t\t\tresult += cell.document.getText() + '\\n';\n\t\t\t}\n\t\t\t// remove last newline again\n\t\t\tresult = result.slice(0, -1);\n\t\t\treturn result;\n\t\t}\n\n\t\tif (range.isEmpty) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// get start and end locations and create substrings\n\t\tconst start = this.locationAt(range.start);\n\t\tconst end = this.locationAt(range.end);\n\t\tconst startCell = this._cells[this._cellUris.get(start.uri) ?? -1];\n\t\tconst endCell = this._cells[this._cellUris.get(end.uri) ?? -1];\n\n\t\tif (!startCell || !endCell) {\n\t\t\treturn '';\n\t\t} else if (startCell === endCell) {\n\t\t\treturn startCell.document.getText(new types.Range(start.range.start, end.range.end));\n\t\t} else {\n\t\t\tconst a = startCell.document.getText(new types.Range(start.range.start, new types.Position(startCell.document.lineCount, 0)));\n\t\t\tconst b = endCell.document.getText(new types.Range(new types.Position(0, 0), end.range.end));\n\t\t\treturn a + '\\n' + b;\n\t\t}\n\t}\n\n\toffsetAt(position: vscode.Position): number {\n\t\tconst idx = this._cellLines.getIndexOf(position.line);\n\t\tconst offset1 = this._cellLengths.getAccumulatedValue(idx.index - 1);\n\t\tconst offset2 = this._cells[idx.index].document.offsetAt(position.with(idx.remainder));\n\t\treturn offset1 + offset2;\n\t}\n\n\tpositionAt(locationOrOffset: vscode.Location | number): vscode.Position {\n\t\tif (typeof locationOrOffset === 'number') {\n\t\t\tconst idx = this._cellLengths.getIndexOf(locationOrOffset);\n\t\t\tconst lineCount = this._cellLines.getAccumulatedValue(idx.index - 1);\n\t\t\treturn this._cells[idx.index].document.positionAt(idx.remainder).translate(lineCount);\n\t\t}\n\n\t\tconst idx = this._cellUris.get(locationOrOffset.uri);\n\t\tif (idx !== undefined) {\n\t\t\tconst line = this._cellLines.getAccumulatedValue(idx - 1);\n\t\t\treturn new types.Position(line + locationOrOffset.range.start.line, locationOrOffset.range.start.character);\n\t\t}\n\t\t// do better?\n\t\t// return undefined;\n\t\treturn new types.Position(0, 0);\n\t}\n\n\tlocationAt(positionOrRange: vscode.Range | vscode.Position): types.Location {\n\t\tif (!types.Range.isRange(positionOrRange)) {\n\t\t\tpositionOrRange = new types.Range(<types.Position>positionOrRange, <types.Position>positionOrRange);\n\t\t}\n\n\t\tconst startIdx = this._cellLines.getIndexOf(positionOrRange.start.line);\n\t\tlet endIdx = startIdx;\n\t\tif (!positionOrRange.isEmpty) {\n\t\t\tendIdx = this._cellLines.getIndexOf(positionOrRange.end.line);\n\t\t}\n\n\t\tconst startPos = new types.Position(startIdx.remainder, positionOrRange.start.character);\n\t\tconst endPos = new types.Position(endIdx.remainder, positionOrRange.end.character);\n\t\tconst range = new types.Range(startPos, endPos);\n\n\t\tconst startCell = this._cells[startIdx.index];\n\t\treturn new types.Location(startCell.document.uri, <types.Range>startCell.document.validateRange(range));\n\t}\n\n\tcontains(uri: vscode.Uri): boolean {\n\t\treturn this._cellUris.has(uri);\n\t}\n\n\tvalidateRange(range: vscode.Range): vscode.Range {\n\t\tconst start = this.validatePosition(range.start);\n\t\tconst end = this.validatePosition(range.end);\n\t\treturn range.with(start, end);\n\t}\n\n\tvalidatePosition(position: vscode.Position): vscode.Position {\n\t\tconst startIdx = this._cellLines.getIndexOf(position.line);\n\n\t\tconst cellPosition = new types.Position(startIdx.remainder, position.character);\n\t\tconst validCellPosition = this._cells[startIdx.index].document.validatePosition(cellPosition);\n\n\t\tconst line = this._cellLines.getAccumulatedValue(startIdx.index - 1);\n\t\treturn new types.Position(line + validCellPosition.line, validCellPosition.character);\n\t}\n}\n"]}