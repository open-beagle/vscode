{"version":3,"file":"extHostFileSystemConsumer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostFileSystemConsumer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext } from './extHost.protocol';\nimport * as vscode from 'vscode';\nimport * as files from 'vs/platform/files/common/files';\nimport { FileSystemError } from 'vs/workbench/api/common/extHostTypes';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\n\nexport class ExtHostConsumerFileSystem {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly value: vscode.FileSystem;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostFileSystemInfo fileSystemInfo: IExtHostFileSystemInfo,\n\t) {\n\t\tconst proxy = extHostRpc.getProxy(MainContext.MainThreadFileSystem);\n\n\t\tthis.value = Object.freeze({\n\t\t\tstat(uri: vscode.Uri): Promise<vscode.FileStat> {\n\t\t\t\treturn proxy.$stat(uri).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\treadDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\n\t\t\t\treturn proxy.$readdir(uri).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\tcreateDirectory(uri: vscode.Uri): Promise<void> {\n\t\t\t\treturn proxy.$mkdir(uri).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\tasync readFile(uri: vscode.Uri): Promise<Uint8Array> {\n\t\t\t\treturn proxy.$readFile(uri).then(buff => buff.buffer).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\twriteFile(uri: vscode.Uri, content: Uint8Array): Promise<void> {\n\t\t\t\treturn proxy.$writeFile(uri, VSBuffer.wrap(content)).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\tdelete(uri: vscode.Uri, options?: { recursive?: boolean; useTrash?: boolean; }): Promise<void> {\n\t\t\t\treturn proxy.$delete(uri, { ...{ recursive: false, useTrash: false }, ...options }).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\trename(oldUri: vscode.Uri, newUri: vscode.Uri, options?: { overwrite?: boolean; }): Promise<void> {\n\t\t\t\treturn proxy.$rename(oldUri, newUri, { ...{ overwrite: false }, ...options }).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\tcopy(source: vscode.Uri, destination: vscode.Uri, options?: { overwrite?: boolean; }): Promise<void> {\n\t\t\t\treturn proxy.$copy(source, destination, { ...{ overwrite: false }, ...options }).catch(ExtHostConsumerFileSystem._handleError);\n\t\t\t},\n\t\t\tisWritableFileSystem(scheme: string): boolean | undefined {\n\t\t\t\tconst capabilities = fileSystemInfo.getCapabilities(scheme);\n\t\t\t\tif (typeof capabilities === 'number') {\n\t\t\t\t\treturn !(capabilities & files.FileSystemProviderCapabilities.Readonly);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _handleError(err: any): never {\n\t\t// generic error\n\t\tif (!(err instanceof Error)) {\n\t\t\tthrow new FileSystemError(String(err));\n\t\t}\n\n\t\t// no provider (unknown scheme) error\n\t\tif (err.name === 'ENOPRO') {\n\t\t\tthrow FileSystemError.Unavailable(err.message);\n\t\t}\n\n\t\t// file system error\n\t\tswitch (err.name) {\n\t\t\tcase files.FileSystemProviderErrorCode.FileExists: throw FileSystemError.FileExists(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotFound: throw FileSystemError.FileNotFound(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotADirectory: throw FileSystemError.FileNotADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileIsADirectory: throw FileSystemError.FileIsADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.NoPermissions: throw FileSystemError.NoPermissions(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.Unavailable: throw FileSystemError.Unavailable(err.message);\n\n\t\t\tdefault: throw new FileSystemError(err.message, err.name as files.FileSystemProviderErrorCode);\n\t\t}\n\t}\n}\n\nexport interface IExtHostConsumerFileSystem extends ExtHostConsumerFileSystem { }\nexport const IExtHostConsumerFileSystem = createDecorator<IExtHostConsumerFileSystem>('IExtHostConsumerFileSystem');\n"]}