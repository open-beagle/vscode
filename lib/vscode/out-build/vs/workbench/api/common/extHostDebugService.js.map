{"version":3,"file":"extHostDebugService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostDebugService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { asPromise } from 'vs/base/common/async';\nimport {\n\tMainContext, MainThreadDebugServiceShape, ExtHostDebugServiceShape, DebugSessionUUID,\n\tIBreakpointsDeltaDto, ISourceMultiBreakpointDto, IFunctionBreakpointDto, IDebugSessionDto\n} from 'vs/workbench/api/common/extHost.protocol';\nimport { Disposable, Position, Location, SourceBreakpoint, FunctionBreakpoint, DebugAdapterServer, DebugAdapterExecutable, DataBreakpoint, DebugConsoleMode, DebugAdapterInlineImplementation, DebugAdapterNamedPipeServer } from 'vs/workbench/api/common/extHostTypes';\nimport { AbstractDebugAdapter } from 'vs/workbench/contrib/debug/common/abstractDebugAdapter';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { ExtHostDocumentsAndEditors, IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IDebuggerContribution, IConfig, IDebugAdapter, IDebugAdapterServer, IDebugAdapterExecutable, IAdapterDescriptor, IDebugAdapterImpl, IDebugAdapterNamedPipeServer } from 'vs/workbench/contrib/debug/common/debug';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from '../common/extHostConfiguration';\nimport { convertToVSCPaths, convertToDAPaths, isDebuggerMainContribution } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport type * as vscode from 'vscode';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport * as process from 'vs/base/common/process';\n\nexport const IExtHostDebugService = createDecorator<IExtHostDebugService>('IExtHostDebugService');\n\nexport interface IExtHostDebugService extends ExtHostDebugServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tonDidStartDebugSession: Event<vscode.DebugSession>;\n\tonDidTerminateDebugSession: Event<vscode.DebugSession>;\n\tonDidChangeActiveDebugSession: Event<vscode.DebugSession | undefined>;\n\tactiveDebugSession: vscode.DebugSession | undefined;\n\tactiveDebugConsole: vscode.DebugConsole;\n\tonDidReceiveDebugSessionCustomEvent: Event<vscode.DebugSessionCustomEvent>;\n\tonDidChangeBreakpoints: Event<vscode.BreakpointsChangeEvent>;\n\tbreakpoints: vscode.Breakpoint[];\n\n\taddBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void>;\n\tremoveBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void>;\n\tstartDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, options: vscode.DebugSessionOptions): Promise<boolean>;\n\tstopDebugging(session?: vscode.DebugSession): Promise<void>;\n\tregisterDebugConfigurationProvider(type: string, provider: vscode.DebugConfigurationProvider, trigger: vscode.DebugConfigurationProviderTriggerKind): vscode.Disposable;\n\tregisterDebugAdapterDescriptorFactory(extension: IExtensionDescription, type: string, factory: vscode.DebugAdapterDescriptorFactory): vscode.Disposable;\n\tregisterDebugAdapterTrackerFactory(type: string, factory: vscode.DebugAdapterTrackerFactory): vscode.Disposable;\n\tasDebugSourceUri(source: vscode.DebugProtocolSource, session?: vscode.DebugSession): vscode.Uri;\n}\n\nexport abstract class ExtHostDebugServiceBase implements IExtHostDebugService, ExtHostDebugServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _configProviderHandleCounter: number;\n\tprivate _configProviders: ConfigProviderTuple[];\n\n\tprivate _adapterFactoryHandleCounter: number;\n\tprivate _adapterFactories: DescriptorFactoryTuple[];\n\n\tprivate _trackerFactoryHandleCounter: number;\n\tprivate _trackerFactories: TrackerFactoryTuple[];\n\n\tprivate _debugServiceProxy: MainThreadDebugServiceShape;\n\tprivate _debugSessions: Map<DebugSessionUUID, ExtHostDebugSession> = new Map<DebugSessionUUID, ExtHostDebugSession>();\n\n\tprivate readonly _onDidStartDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidStartDebugSession(): Event<vscode.DebugSession> { return this._onDidStartDebugSession.event; }\n\n\tprivate readonly _onDidTerminateDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidTerminateDebugSession(): Event<vscode.DebugSession> { return this._onDidTerminateDebugSession.event; }\n\n\tprivate readonly _onDidChangeActiveDebugSession: Emitter<vscode.DebugSession | undefined>;\n\tget onDidChangeActiveDebugSession(): Event<vscode.DebugSession | undefined> { return this._onDidChangeActiveDebugSession.event; }\n\n\tprivate _activeDebugSession: ExtHostDebugSession | undefined;\n\tget activeDebugSession(): ExtHostDebugSession | undefined { return this._activeDebugSession; }\n\n\tprivate readonly _onDidReceiveDebugSessionCustomEvent: Emitter<vscode.DebugSessionCustomEvent>;\n\tget onDidReceiveDebugSessionCustomEvent(): Event<vscode.DebugSessionCustomEvent> { return this._onDidReceiveDebugSessionCustomEvent.event; }\n\n\tprivate _activeDebugConsole: ExtHostDebugConsole;\n\tget activeDebugConsole(): vscode.DebugConsole { return this._activeDebugConsole.value; }\n\n\tprivate _breakpoints: Map<string, vscode.Breakpoint>;\n\tprivate _breakpointEventsActive: boolean;\n\n\tprivate readonly _onDidChangeBreakpoints: Emitter<vscode.BreakpointsChangeEvent>;\n\n\tprivate _debugAdapters: Map<number, IDebugAdapter>;\n\tprivate _debugAdaptersTrackers: Map<number, vscode.DebugAdapterTracker>;\n\n\tprivate _variableResolver: IConfigurationResolverService | undefined;\n\n\tprivate _signService: ISignService | undefined;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpcService: IExtHostRpcService,\n\t\t@IExtHostWorkspace protected _workspaceService: IExtHostWorkspace,\n\t\t@IExtHostExtensionService private _extensionService: IExtHostExtensionService,\n\t\t@IExtHostDocumentsAndEditors private _editorsService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration protected _configurationService: IExtHostConfiguration,\n\t) {\n\t\tthis._configProviderHandleCounter = 0;\n\t\tthis._configProviders = [];\n\n\t\tthis._adapterFactoryHandleCounter = 0;\n\t\tthis._adapterFactories = [];\n\n\t\tthis._trackerFactoryHandleCounter = 0;\n\t\tthis._trackerFactories = [];\n\n\t\tthis._debugAdapters = new Map();\n\t\tthis._debugAdaptersTrackers = new Map();\n\n\t\tthis._onDidStartDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidTerminateDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidChangeActiveDebugSession = new Emitter<vscode.DebugSession | undefined>();\n\t\tthis._onDidReceiveDebugSessionCustomEvent = new Emitter<vscode.DebugSessionCustomEvent>();\n\n\t\tthis._debugServiceProxy = extHostRpcService.getProxy(MainContext.MainThreadDebugService);\n\n\t\tthis._onDidChangeBreakpoints = new Emitter<vscode.BreakpointsChangeEvent>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis.startBreakpoints();\n\t\t\t}\n\t\t});\n\n\t\tthis._activeDebugConsole = new ExtHostDebugConsole(this._debugServiceProxy);\n\n\t\tthis._breakpoints = new Map<string, vscode.Breakpoint>();\n\t\tthis._breakpointEventsActive = false;\n\n\t\tthis._extensionService.getExtensionRegistry().then((extensionRegistry: ExtensionDescriptionRegistry) => {\n\t\t\textensionRegistry.onDidChange(_ => {\n\t\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t\t});\n\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t});\n\t}\n\n\tpublic asDebugSourceUri(src: vscode.DebugProtocolSource, session?: vscode.DebugSession): URI {\n\n\t\tconst source = <any>src;\n\n\t\tif (typeof source.sourceReference === 'number' && source.sourceReference > 0) {\n\t\t\t// src can be retrieved via DAP's \"source\" request\n\n\t\t\tlet debug = `debug:${encodeURIComponent(source.path || '')}`;\n\t\t\tlet sep = '?';\n\n\t\t\tif (session) {\n\t\t\t\tdebug += `${sep}session=${encodeURIComponent(session.id)}`;\n\t\t\t\tsep = '&';\n\t\t\t}\n\n\t\t\tdebug += `${sep}ref=${source.sourceReference}`;\n\n\t\t\treturn URI.parse(debug);\n\t\t} else if (source.path) {\n\t\t\t// src is just a local file path\n\t\t\treturn URI.file(source.path);\n\t\t} else {\n\t\t\tthrow new Error(`cannot create uri from DAP 'source' object; properties 'path' and 'sourceReference' are both missing.`);\n\t\t}\n\t}\n\n\tprivate registerAllDebugTypes(extensionRegistry: ExtensionDescriptionRegistry) {\n\n\t\tconst debugTypes: string[] = [];\n\n\t\tfor (const ed of extensionRegistry.getAllExtensionDescriptions()) {\n\t\t\tif (ed.contributes) {\n\t\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t\tif (isDebuggerMainContribution(dbg)) {\n\t\t\t\t\t\t\tdebugTypes.push(dbg.type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._debugServiceProxy.$registerDebugTypes(debugTypes);\n\t}\n\n\t// extension debug API\n\n\tget onDidChangeBreakpoints(): Event<vscode.BreakpointsChangeEvent> {\n\t\treturn this._onDidChangeBreakpoints.event;\n\t}\n\n\tget breakpoints(): vscode.Breakpoint[] {\n\n\t\tthis.startBreakpoints();\n\n\t\tconst result: vscode.Breakpoint[] = [];\n\t\tthis._breakpoints.forEach(bp => result.push(bp));\n\t\treturn result;\n\t}\n\n\tpublic addBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// filter only new breakpoints\n\t\tconst breakpoints = breakpoints0.filter(bp => {\n\t\t\tconst id = bp.id;\n\t\t\tif (!this._breakpoints.has(id)) {\n\t\t\t\tthis._breakpoints.set(id, bp);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t// send notification for added breakpoints\n\t\tthis.fireBreakpointChanges(breakpoints, [], []);\n\n\t\t// convert added breakpoints to DTOs\n\t\tconst dtos: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto> = [];\n\t\tconst map = new Map<string, ISourceMultiBreakpointDto>();\n\t\tfor (const bp of breakpoints) {\n\t\t\tif (bp instanceof SourceBreakpoint) {\n\t\t\t\tlet dto = map.get(bp.location.uri.toString());\n\t\t\t\tif (!dto) {\n\t\t\t\t\tdto = <ISourceMultiBreakpointDto>{\n\t\t\t\t\t\ttype: 'sourceMulti',\n\t\t\t\t\t\turi: bp.location.uri,\n\t\t\t\t\t\tlines: []\n\t\t\t\t\t};\n\t\t\t\t\tmap.set(bp.location.uri.toString(), dto);\n\t\t\t\t\tdtos.push(dto);\n\t\t\t\t}\n\t\t\t\tdto.lines.push({\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tline: bp.location.range.start.line,\n\t\t\t\t\tcharacter: bp.location.range.start.character\n\t\t\t\t});\n\t\t\t} else if (bp instanceof FunctionBreakpoint) {\n\t\t\t\tdtos.push({\n\t\t\t\t\ttype: 'function',\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\tfunctionName: bp.functionName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// send DTOs to VS Code\n\t\treturn this._debugServiceProxy.$registerBreakpoints(dtos);\n\t}\n\n\tpublic removeBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// remove from array\n\t\tconst breakpoints = breakpoints0.filter(b => this._breakpoints.delete(b.id));\n\n\t\t// send notification\n\t\tthis.fireBreakpointChanges([], breakpoints, []);\n\n\t\t// unregister with VS Code\n\t\tconst ids = breakpoints.filter(bp => bp instanceof SourceBreakpoint).map(bp => bp.id);\n\t\tconst fids = breakpoints.filter(bp => bp instanceof FunctionBreakpoint).map(bp => bp.id);\n\t\tconst dids = breakpoints.filter(bp => bp instanceof DataBreakpoint).map(bp => bp.id);\n\t\treturn this._debugServiceProxy.$unregisterBreakpoints(ids, fids, dids);\n\t}\n\n\tpublic startDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, options: vscode.DebugSessionOptions): Promise<boolean> {\n\t\treturn this._debugServiceProxy.$startDebugging(folder ? folder.uri : undefined, nameOrConfig, {\n\t\t\tparentSessionID: options.parentSession ? options.parentSession.id : undefined,\n\t\t\trepl: options.consoleMode === DebugConsoleMode.MergeWithParent ? 'mergeWithParent' : 'separate',\n\t\t\tnoDebug: options.noDebug,\n\t\t\tcompact: options.compact\n\t\t});\n\t}\n\n\tpublic stopDebugging(session?: vscode.DebugSession): Promise<void> {\n\t\treturn this._debugServiceProxy.$stopDebugging(session ? session.id : undefined);\n\t}\n\n\tpublic registerDebugConfigurationProvider(type: string, provider: vscode.DebugConfigurationProvider, trigger: vscode.DebugConfigurationProviderTriggerKind): vscode.Disposable {\n\n\t\tif (!provider) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tconst handle = this._configProviderHandleCounter++;\n\t\tthis._configProviders.push({ type, handle, provider });\n\n\t\tthis._debugServiceProxy.$registerDebugConfigurationProvider(type, trigger,\n\t\t\t!!provider.provideDebugConfigurations,\n\t\t\t!!provider.resolveDebugConfiguration,\n\t\t\t!!provider.resolveDebugConfigurationWithSubstitutedVariables,\n\t\t\thandle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._configProviders = this._configProviders.filter(p => p.provider !== provider);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugConfigurationProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterDescriptorFactory(extension: IExtensionDescription, type: string, factory: vscode.DebugAdapterDescriptorFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\t// a DebugAdapterDescriptorFactory can only be registered in the extension that contributes the debugger\n\t\tif (!this.definesDebugType(extension, type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered from the extension that defines the '${type}' debugger.`);\n\t\t}\n\n\t\t// make sure that only one factory for this type is registered\n\t\tif (this.getAdapterDescriptorFactoryByType(type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered once per a type.`);\n\t\t}\n\n\t\tconst handle = this._adapterFactoryHandleCounter++;\n\t\tthis._adapterFactories.push({ type, handle, factory });\n\n\t\tthis._debugServiceProxy.$registerDebugAdapterDescriptorFactory(type, handle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._adapterFactories = this._adapterFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugAdapterDescriptorFactory(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterTrackerFactory(type: string, factory: vscode.DebugAdapterTrackerFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tconst handle = this._trackerFactoryHandleCounter++;\n\t\tthis._trackerFactories.push({ type, handle, factory });\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._trackerFactories = this._trackerFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t});\n\t}\n\n\t// RPC methods (ExtHostDebugServiceShape)\n\n\tpublic async $runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, sessionId: string): Promise<number | undefined> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprotected abstract createVariableResolver(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors, configurationService: ExtHostConfigProvider): AbstractVariableResolverService;\n\n\tpublic async $substituteVariables(folderUri: UriComponents | undefined, config: IConfig): Promise<IConfig> {\n\t\tif (!this._variableResolver) {\n\t\t\tconst [workspaceFolders, configProvider] = await Promise.all([this._workspaceService.getWorkspaceFolders2(), this._configurationService.getConfigProvider()]);\n\t\t\tthis._variableResolver = this.createVariableResolver(workspaceFolders || [], this._editorsService, configProvider!);\n\t\t}\n\t\tlet ws: IWorkspaceFolder | undefined;\n\t\tconst folder = await this.getFolder(folderUri);\n\t\tif (folder) {\n\t\t\tws = {\n\t\t\t\turi: folder.uri,\n\t\t\t\tname: folder.name,\n\t\t\t\tindex: folder.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._variableResolver.resolveAnyAsync(ws, config);\n\t}\n\n\tprotected createDebugAdapter(adapter: IAdapterDescriptor, session: ExtHostDebugSession): AbstractDebugAdapter | undefined {\n\t\tif (adapter.type === 'implementation') {\n\t\t\treturn new DirectDebugAdapter(adapter.implementation);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected createSignService(): ISignService | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic async $startDASession(debugAdapterHandle: number, sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst mythis = this;\n\n\t\tconst session = await this.getSession(sessionDto);\n\n\t\treturn this.getAdapterDescriptor(this.getAdapterDescriptorFactoryByType(session.type), session).then(daDescriptor => {\n\n\t\t\tif (!daDescriptor) {\n\t\t\t\tthrow new Error(`Couldn't find a debug adapter descriptor for debug type '${session.type}' (extension might have failed to activate)`);\n\t\t\t}\n\n\t\t\tconst adapterDescriptor = this.convertToDto(daDescriptor);\n\n\t\t\tconst da = this.createDebugAdapter(adapterDescriptor, session);\n\t\t\tif (!da) {\n\t\t\t\tthrow new Error(`Couldn't create a debug adapter for type '${session.type}'.`);\n\t\t\t}\n\n\t\t\tconst debugAdapter = da;\n\n\t\t\tthis._debugAdapters.set(debugAdapterHandle, debugAdapter);\n\n\t\t\treturn this.getDebugAdapterTrackers(session).then(tracker => {\n\n\t\t\t\tif (tracker) {\n\t\t\t\t\tthis._debugAdaptersTrackers.set(debugAdapterHandle, tracker);\n\t\t\t\t}\n\n\t\t\t\tdebugAdapter.onMessage(async message => {\n\n\t\t\t\t\tif (message.type === 'request' && (<DebugProtocol.Request>message).command === 'handshake') {\n\n\t\t\t\t\t\tconst request = <DebugProtocol.Request>message;\n\n\t\t\t\t\t\tconst response: DebugProtocol.Response = {\n\t\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\t\tseq: 0,\n\t\t\t\t\t\t\tcommand: request.command,\n\t\t\t\t\t\t\trequest_seq: request.seq,\n\t\t\t\t\t\t\tsuccess: true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!this._signService) {\n\t\t\t\t\t\t\tthis._signService = this.createSignService();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (this._signService) {\n\t\t\t\t\t\t\t\tconst signature = await this._signService.sign(request.arguments.value);\n\t\t\t\t\t\t\t\tresponse.body = {\n\t\t\t\t\t\t\t\t\tsignature: signature\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tdebugAdapter.sendResponse(response);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('no signer');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tresponse.success = false;\n\t\t\t\t\t\t\tresponse.message = e.message;\n\t\t\t\t\t\t\tdebugAdapter.sendResponse(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (tracker && tracker.onDidSendMessage) {\n\t\t\t\t\t\t\ttracker.onDidSendMessage(message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// DA -> VS Code\n\t\t\t\t\t\tmessage = convertToVSCPaths(message, true);\n\n\t\t\t\t\t\tmythis._debugServiceProxy.$acceptDAMessage(debugAdapterHandle, message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdebugAdapter.onError(err => {\n\t\t\t\t\tif (tracker && tracker.onError) {\n\t\t\t\t\t\ttracker.onError(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis._debugServiceProxy.$acceptDAError(debugAdapterHandle, err.name, err.message, err.stack);\n\t\t\t\t});\n\t\t\t\tdebugAdapter.onExit((code: number | null) => {\n\t\t\t\t\tif (tracker && tracker.onExit) {\n\t\t\t\t\t\ttracker.onExit(withNullAsUndefined(code), undefined);\n\t\t\t\t\t}\n\t\t\t\t\tthis._debugServiceProxy.$acceptDAExit(debugAdapterHandle, withNullAsUndefined(code), undefined);\n\t\t\t\t});\n\n\t\t\t\tif (tracker && tracker.onWillStartSession) {\n\t\t\t\t\ttracker.onWillStartSession();\n\t\t\t\t}\n\n\t\t\t\treturn debugAdapter.startSession();\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $sendDAMessage(debugAdapterHandle: number, message: DebugProtocol.ProtocolMessage): void {\n\n\t\t// VS Code -> DA\n\t\tmessage = convertToDAPaths(message, false);\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\t// TODO@AW: same handle?\n\t\tif (tracker && tracker.onWillReceiveMessage) {\n\t\t\ttracker.onWillReceiveMessage(message);\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tif (da) {\n\t\t\tda.sendMessage(message);\n\t\t}\n\t}\n\n\tpublic $stopDASession(debugAdapterHandle: number): Promise<void> {\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\n\t\tthis._debugAdaptersTrackers.delete(debugAdapterHandle);\n\t\tif (tracker && tracker.onWillStopSession) {\n\t\t\ttracker.onWillStopSession();\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tthis._debugAdapters.delete(debugAdapterHandle);\n\t\tif (da) {\n\t\t\treturn da.stopSession();\n\t\t} else {\n\t\t\treturn Promise.resolve(void 0);\n\t\t}\n\t}\n\n\tpublic $acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void {\n\n\t\tconst a: vscode.Breakpoint[] = [];\n\t\tconst r: vscode.Breakpoint[] = [];\n\t\tconst c: vscode.Breakpoint[] = [];\n\n\t\tif (delta.added) {\n\t\t\tfor (const bpd of delta.added) {\n\t\t\t\tconst id = bpd.id;\n\t\t\t\tif (id && !this._breakpoints.has(id)) {\n\t\t\t\t\tlet bp: vscode.Breakpoint;\n\t\t\t\t\tif (bpd.type === 'function') {\n\t\t\t\t\t\tbp = new FunctionBreakpoint(bpd.functionName, bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t} else if (bpd.type === 'data') {\n\t\t\t\t\t\tbp = new DataBreakpoint(bpd.label, bpd.dataId, bpd.canPersist, bpd.enabled, bpd.hitCondition, bpd.condition, bpd.logMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst uri = URI.revive(bpd.uri);\n\t\t\t\t\t\tbp = new SourceBreakpoint(new Location(uri, new Position(bpd.line, bpd.character)), bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t}\n\t\t\t\t\t(bp as any)._id = id;\n\t\t\t\t\tthis._breakpoints.set(id, bp);\n\t\t\t\t\ta.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removed) {\n\t\t\tfor (const id of delta.removed) {\n\t\t\t\tconst bp = this._breakpoints.get(id);\n\t\t\t\tif (bp) {\n\t\t\t\t\tthis._breakpoints.delete(id);\n\t\t\t\t\tr.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.changed) {\n\t\t\tfor (const bpd of delta.changed) {\n\t\t\t\tif (bpd.id) {\n\t\t\t\t\tconst bp = this._breakpoints.get(bpd.id);\n\t\t\t\t\tif (bp) {\n\t\t\t\t\t\tif (bp instanceof FunctionBreakpoint && bpd.type === 'function') {\n\t\t\t\t\t\t\tconst fbp = <any>bp;\n\t\t\t\t\t\t\tfbp.enabled = bpd.enabled;\n\t\t\t\t\t\t\tfbp.condition = bpd.condition;\n\t\t\t\t\t\t\tfbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\t\tfbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\t\tfbp.functionName = bpd.functionName;\n\t\t\t\t\t\t} else if (bp instanceof SourceBreakpoint && bpd.type === 'source') {\n\t\t\t\t\t\t\tconst sbp = <any>bp;\n\t\t\t\t\t\t\tsbp.enabled = bpd.enabled;\n\t\t\t\t\t\t\tsbp.condition = bpd.condition;\n\t\t\t\t\t\t\tsbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\t\tsbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\t\tsbp.location = new Location(URI.revive(bpd.uri), new Position(bpd.line, bpd.character));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc.push(bp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.fireBreakpointChanges(a, r, c);\n\t}\n\n\tpublic $provideDebugConfigurations(configProviderHandle: number, folderUri: UriComponents | undefined, token: CancellationToken): Promise<vscode.DebugConfiguration[]> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.provideDebugConfigurations) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method provideDebugConfigurations');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.provideDebugConfigurations(folder, token);\n\t\t}).then(debugConfigurations => {\n\t\t\tif (!debugConfigurations) {\n\t\t\t\tthrow new Error('nothing returned from DebugConfigurationProvider.provideDebugConfigurations');\n\t\t\t}\n\t\t\treturn debugConfigurations;\n\t\t});\n\t}\n\n\tpublic $resolveDebugConfiguration(configProviderHandle: number, folderUri: UriComponents | undefined, debugConfiguration: vscode.DebugConfiguration, token: CancellationToken): Promise<vscode.DebugConfiguration | null | undefined> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.resolveDebugConfiguration) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method resolveDebugConfiguration');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.resolveDebugConfiguration(folder, debugConfiguration, token);\n\t\t});\n\t}\n\n\tpublic $resolveDebugConfigurationWithSubstitutedVariables(configProviderHandle: number, folderUri: UriComponents | undefined, debugConfiguration: vscode.DebugConfiguration, token: CancellationToken): Promise<vscode.DebugConfiguration | null | undefined> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.resolveDebugConfigurationWithSubstitutedVariables) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method resolveDebugConfigurationWithSubstitutedVariables');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.resolveDebugConfigurationWithSubstitutedVariables(folder, debugConfiguration, token);\n\t\t});\n\t}\n\n\tpublic async $provideDebugAdapter(adapterFactoryHandle: number, sessionDto: IDebugSessionDto): Promise<IAdapterDescriptor> {\n\t\tconst adapterDescriptorFactory = this.getAdapterDescriptorFactoryByHandle(adapterFactoryHandle);\n\t\tif (!adapterDescriptorFactory) {\n\t\t\treturn Promise.reject(new Error('no adapter descriptor factory found for handle'));\n\t\t}\n\t\tconst session = await this.getSession(sessionDto);\n\t\treturn this.getAdapterDescriptor(adapterDescriptorFactory, session).then(adapterDescriptor => {\n\t\t\tif (!adapterDescriptor) {\n\t\t\t\tthrow new Error(`Couldn't find a debug adapter descriptor for debug type '${session.type}'`);\n\t\t\t}\n\t\t\treturn this.convertToDto(adapterDescriptor);\n\t\t});\n\t}\n\n\tpublic async $acceptDebugSessionStarted(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tthis._onDidStartDebugSession.fire(session);\n\t}\n\n\tpublic async $acceptDebugSessionTerminated(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tif (session) {\n\t\t\tthis._onDidTerminateDebugSession.fire(session);\n\t\t\tthis._debugSessions.delete(session.id);\n\t\t}\n\t}\n\n\tpublic async $acceptDebugSessionActiveChanged(sessionDto: IDebugSessionDto | undefined): Promise<void> {\n\t\tthis._activeDebugSession = sessionDto ? await this.getSession(sessionDto) : undefined;\n\t\tthis._onDidChangeActiveDebugSession.fire(this._activeDebugSession);\n\t}\n\n\tpublic async $acceptDebugSessionNameChanged(sessionDto: IDebugSessionDto, name: string): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tif (session) {\n\t\t\tsession._acceptNameChanged(name);\n\t\t}\n\t}\n\n\tpublic async $acceptDebugSessionCustomEvent(sessionDto: IDebugSessionDto, event: any): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tconst ee: vscode.DebugSessionCustomEvent = {\n\t\t\tsession: session,\n\t\t\tevent: event.event,\n\t\t\tbody: event.body\n\t\t};\n\t\tthis._onDidReceiveDebugSessionCustomEvent.fire(ee);\n\t}\n\n\t// private & dto helpers\n\n\tprivate convertToDto(x: vscode.DebugAdapterDescriptor): IAdapterDescriptor {\n\n\t\tif (x instanceof DebugAdapterExecutable) {\n\t\t\treturn <IDebugAdapterExecutable>{\n\t\t\t\ttype: 'executable',\n\t\t\t\tcommand: x.command,\n\t\t\t\targs: x.args,\n\t\t\t\toptions: x.options\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterServer) {\n\t\t\treturn <IDebugAdapterServer>{\n\t\t\t\ttype: 'server',\n\t\t\t\tport: x.port,\n\t\t\t\thost: x.host\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterNamedPipeServer) {\n\t\t\treturn <IDebugAdapterNamedPipeServer>{\n\t\t\t\ttype: 'pipeServer',\n\t\t\t\tpath: x.path\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterInlineImplementation) {\n\t\t\treturn <IDebugAdapterImpl>{\n\t\t\t\ttype: 'implementation',\n\t\t\t\timplementation: x.implementation\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new Error('convertToDto unexpected type');\n\t\t}\n\t}\n\n\tprivate getAdapterDescriptorFactoryByType(type: string): vscode.DebugAdapterDescriptorFactory | undefined {\n\t\tconst results = this._adapterFactories.filter(p => p.type === type);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getAdapterDescriptorFactoryByHandle(handle: number): vscode.DebugAdapterDescriptorFactory | undefined {\n\t\tconst results = this._adapterFactories.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getConfigProviderByHandle(handle: number): vscode.DebugConfigurationProvider | undefined {\n\t\tconst results = this._configProviders.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].provider;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate definesDebugType(ed: IExtensionDescription, type: string) {\n\t\tif (ed.contributes) {\n\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t// only debugger contributions with a \"label\" are considered a \"defining\" debugger contribution\n\t\t\t\t\tif (dbg.label && dbg.type) {\n\t\t\t\t\t\tif (dbg.type === type) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getDebugAdapterTrackers(session: ExtHostDebugSession): Promise<vscode.DebugAdapterTracker | undefined> {\n\n\t\tconst config = session.configuration;\n\t\tconst type = config.type;\n\n\t\tconst promises = this._trackerFactories\n\t\t\t.filter(tuple => tuple.type === type || tuple.type === '*')\n\t\t\t.map(tuple => asPromise<vscode.ProviderResult<vscode.DebugAdapterTracker>>(() => tuple.factory.createDebugAdapterTracker(session)).then(p => p, err => null));\n\n\t\treturn Promise.race([\n\t\t\tPromise.all(promises).then(result => {\n\t\t\t\tconst trackers = <vscode.DebugAdapterTracker[]>result.filter(t => !!t);\t// filter null\n\t\t\t\tif (trackers.length > 0) {\n\t\t\t\t\treturn new MultiTracker(trackers);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnew Promise<never>((resolve, reject) => {\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\treject(new Error('timeout'));\n\t\t\t\t}, 1000);\n\t\t\t})\n\t\t]).catch(err => {\n\t\t\t// ignore errors\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate async getAdapterDescriptor(adapterDescriptorFactory: vscode.DebugAdapterDescriptorFactory | undefined, session: ExtHostDebugSession): Promise<vscode.DebugAdapterDescriptor | undefined> {\n\n\t\t// a \"debugServer\" attribute in the launch config takes precedence\n\t\tconst serverPort = session.configuration.debugServer;\n\t\tif (typeof serverPort === 'number') {\n\t\t\treturn Promise.resolve(new DebugAdapterServer(serverPort));\n\t\t}\n\n\t\tif (adapterDescriptorFactory) {\n\t\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\t\treturn asPromise(() => adapterDescriptorFactory.createDebugAdapterDescriptor(session, this.daExecutableFromPackage(session, extensionRegistry))).then(daDescriptor => {\n\t\t\t\tif (daDescriptor) {\n\t\t\t\t\treturn daDescriptor;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\t// fallback: use executable information from package.json\n\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\treturn Promise.resolve(this.daExecutableFromPackage(session, extensionRegistry));\n\t}\n\n\tprotected daExecutableFromPackage(session: ExtHostDebugSession, extensionRegistry: ExtensionDescriptionRegistry): DebugAdapterExecutable | undefined {\n\t\treturn undefined;\n\t}\n\n\tprivate startBreakpoints() {\n\t\tif (!this._breakpointEventsActive) {\n\t\t\tthis._breakpointEventsActive = true;\n\t\t\tthis._debugServiceProxy.$startBreakpointEvents();\n\t\t}\n\t}\n\n\tprivate fireBreakpointChanges(added: vscode.Breakpoint[], removed: vscode.Breakpoint[], changed: vscode.Breakpoint[]) {\n\t\tif (added.length > 0 || removed.length > 0 || changed.length > 0) {\n\t\t\tthis._onDidChangeBreakpoints.fire(Object.freeze({\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tchanged,\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async getSession(dto: IDebugSessionDto): Promise<ExtHostDebugSession> {\n\t\tif (dto) {\n\t\t\tif (typeof dto === 'string') {\n\t\t\t\tconst ds = this._debugSessions.get(dto);\n\t\t\t\tif (ds) {\n\t\t\t\t\treturn ds;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet ds = this._debugSessions.get(dto.id);\n\t\t\t\tif (!ds) {\n\t\t\t\t\tconst folder = await this.getFolder(dto.folderUri);\n\t\t\t\t\tds = new ExtHostDebugSession(this._debugServiceProxy, dto.id, dto.type, dto.name, folder, dto.configuration);\n\t\t\t\t\tthis._debugSessions.set(ds.id, ds);\n\t\t\t\t\tthis._debugServiceProxy.$sessionCached(ds.id);\n\t\t\t\t}\n\t\t\t\treturn ds;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('cannot find session');\n\t}\n\n\tprivate getFolder(_folderUri: UriComponents | undefined): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tif (_folderUri) {\n\t\t\tconst folderURI = URI.revive(_folderUri);\n\t\t\treturn this._workspaceService.resolveWorkspaceFolder(folderURI);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class ExtHostDebugSession implements vscode.DebugSession {\n\n\tconstructor(\n\t\tprivate _debugServiceProxy: MainThreadDebugServiceShape,\n\t\tprivate _id: DebugSessionUUID,\n\t\tprivate _type: string,\n\t\tprivate _name: string,\n\t\tprivate _workspaceFolder: vscode.WorkspaceFolder | undefined,\n\t\tprivate _configuration: vscode.DebugConfiguration) {\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get type(): string {\n\t\treturn this._type;\n\t}\n\n\tpublic get name(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic set name(name: string) {\n\t\tthis._name = name;\n\t\tthis._debugServiceProxy.$setDebugSessionName(this._id, name);\n\t}\n\n\t_acceptNameChanged(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tpublic get workspaceFolder(): vscode.WorkspaceFolder | undefined {\n\t\treturn this._workspaceFolder;\n\t}\n\n\tpublic get configuration(): vscode.DebugConfiguration {\n\t\treturn this._configuration;\n\t}\n\n\tpublic customRequest(command: string, args: any): Promise<any> {\n\t\treturn this._debugServiceProxy.$customDebugAdapterRequest(this._id, command, args);\n\t}\n\n\tpublic getDebugProtocolBreakpoint(breakpoint: vscode.Breakpoint): Promise<vscode.DebugProtocolBreakpoint | undefined> {\n\t\treturn this._debugServiceProxy.$getDebugProtocolBreakpoint(this._id, breakpoint.id);\n\t}\n}\n\nexport class ExtHostDebugConsole {\n\n\treadonly value: vscode.DebugConsole;\n\n\tconstructor(proxy: MainThreadDebugServiceShape) {\n\n\t\tthis.value = Object.freeze({\n\t\t\tappend(value: string): void {\n\t\t\t\tproxy.$appendDebugConsole(value);\n\t\t\t},\n\t\t\tappendLine(value: string): void {\n\t\t\t\tthis.append(value + '\\n');\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class ExtHostVariableResolverService extends AbstractVariableResolverService {\n\n\tconstructor(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors | undefined, configurationService: ExtHostConfigProvider, workspaceService?: IExtHostWorkspace) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = folders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn folders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI | undefined, section: string): string | undefined => {\n\t\t\t\treturn configurationService.getConfiguration(undefined, folderUri).get<string>(section);\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn process.cwd();\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn process.env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\treturn path.normalize(activeEditor.document.uri.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderPathForFile: (): string | undefined => {\n\t\t\t\tif (editorService && workspaceService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\tconst ws = workspaceService.getWorkspaceFolder(activeEditor.document.uri);\n\t\t\t\t\t\tif (ws) {\n\t\t\t\t\t\t\treturn path.normalize(ws.uri.fsPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\t\treturn activeEditor.document.getText(activeEditor.selection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}, undefined, Promise.resolve(process.env));\n\t}\n}\n\ninterface ConfigProviderTuple {\n\ttype: string;\n\thandle: number;\n\tprovider: vscode.DebugConfigurationProvider;\n}\n\ninterface DescriptorFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterDescriptorFactory;\n}\n\ninterface TrackerFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterTrackerFactory;\n}\n\nclass MultiTracker implements vscode.DebugAdapterTracker {\n\n\tconstructor(private trackers: vscode.DebugAdapterTracker[]) {\n\t}\n\n\tonWillStartSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStartSession ? t.onWillStartSession() : undefined);\n\t}\n\n\tonWillReceiveMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onWillReceiveMessage ? t.onWillReceiveMessage(message) : undefined);\n\t}\n\n\tonDidSendMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onDidSendMessage ? t.onDidSendMessage(message) : undefined);\n\t}\n\n\tonWillStopSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStopSession ? t.onWillStopSession() : undefined);\n\t}\n\n\tonError(error: Error): void {\n\t\tthis.trackers.forEach(t => t.onError ? t.onError(error) : undefined);\n\t}\n\n\tonExit(code: number, signal: string): void {\n\t\tthis.trackers.forEach(t => t.onExit ? t.onExit(code, signal) : undefined);\n\t}\n}\n\n/*\n * Call directly into a debug adapter implementation\n */\nclass DirectDebugAdapter extends AbstractDebugAdapter {\n\n\tconstructor(private implementation: vscode.DebugAdapter) {\n\t\tsuper();\n\n\t\timplementation.onDidSendMessage((message: vscode.DebugProtocolMessage) => {\n\t\t\tthis.acceptMessage(message as DebugProtocol.ProtocolMessage);\n\t\t});\n\t}\n\n\tstartSession(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tsendMessage(message: DebugProtocol.ProtocolMessage): void {\n\t\tthis.implementation.handleMessage(message);\n\t}\n\n\tstopSession(): Promise<void> {\n\t\tthis.implementation.dispose();\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\n\nexport class WorkerExtHostDebugService extends ExtHostDebugServiceBase {\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpcService: IExtHostRpcService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostExtensionService extensionService: IExtHostExtensionService,\n\t\t@IExtHostDocumentsAndEditors editorsService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration\n\t) {\n\t\tsuper(extHostRpcService, workspaceService, extensionService, editorsService, configurationService);\n\t}\n\n\tprotected createVariableResolver(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors, configurationService: ExtHostConfigProvider): AbstractVariableResolverService {\n\t\treturn new ExtHostVariableResolverService(folders, editorService, configurationService);\n\t}\n}\n"]}