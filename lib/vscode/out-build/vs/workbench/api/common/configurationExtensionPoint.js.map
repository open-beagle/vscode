{"version":3,"sources":["vs/workbench/api/common/configurationExtensionPoint.ts"],"names":[],"mappings":"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","file":"configurationExtensionPoint.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as objects from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { IConfigurationNode, IConfigurationRegistry, Extensions, resourceLanguageSettingsSchemaId, validateProperty, ConfigurationScope, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { workspaceSettingsSchemaId, launchSchemaId, tasksSchemaId } from 'vs/workbench/services/configuration/common/configuration';\nimport { isObject } from 'vs/base/common/types';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\nconst configurationEntrySchema: IJSONSchema = {\n\ttype: 'object',\n\tdefaultSnippets: [{ body: { title: '', properties: {} } }],\n\tproperties: {\n\t\ttitle: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.configuration.title', 'A summary of the settings. This label will be used in the settings file as separating comment.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tproperties: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.configuration.properties', 'Description of the configuration properties.'),\n\t\t\ttype: 'object',\n\t\t\tpropertyNames: {\n\t\t\t\tpattern: '\\\\S+',\n\t\t\t\tpatternErrorMessage: nls.localize('vscode.extension.contributes.configuration.property.empty', 'Property should not be empty.'),\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{ $ref: 'http://json-schema.org/draft-07/schema#' },\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tisExecutable: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdeprecationMessage: 'This property is deprecated. Instead use `scope` property and set it to `machine` value.'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tscope: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tenum: ['application', 'machine', 'window', 'resource', 'language-overridable', 'machine-overridable'],\n\t\t\t\t\t\t\t\tdefault: 'window',\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('scope.application.description', \"Configuration that can be configured only in the user settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.machine.description', \"Configuration that can be configured only in the user settings or only in the remote settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.window.description', \"Configuration that can be configured in the user, remote or workspace settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.resource.description', \"Configuration that can be configured in the user, remote, workspace or folder settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.language-overridable.description', \"Resource configuration that can be configured in language specific settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.machine-overridable.description', \"Machine configuration that can be configured also in workspace or folder settings.\")\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.description', \"Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumDescriptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.enumDescriptions', 'Descriptions for enum values')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownEnumDescriptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownEnumDescriptions', 'Descriptions for enum values in the markdown format.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownDescription', 'The description in the markdown format.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.deprecationMessage', 'If set, the property is marked as deprecated and the given message is shown as an explanation.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownDeprecationMessage', 'If set, the property is marked as deprecated and the given message is shown as an explanation in the markdown format.')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n};\n\n// BEGIN VSCode extension point `configurationDefaults`\nconst defaultConfigurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\textensionPoint: 'configurationDefaults',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.defaultConfiguration', 'Contributes default editor configuration settings by language.'),\n\t\ttype: 'object',\n\t\tpatternProperties: {\n\t\t\t'^\\\\[.*\\\\]$': {\n\t\t\t\ttype: 'object',\n\t\t\t\tdefault: {},\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t}\n\t\t},\n\t\terrorMessage: nls.localize('config.property.defaultConfiguration.languageExpected', \"Language selector expected (e.g. [\\\"java\\\"])\"),\n\t\tadditionalProperties: false\n\t}\n});\ndefaultConfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\tif (removed.length) {\n\t\tconst removedDefaultConfigurations = removed.map<IStringDictionary<any>>(extension => objects.deepClone(extension.value));\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(removedDefaultConfigurations);\n\t}\n\tif (added.length) {\n\t\tconst addedDefaultConfigurations = added.map<IStringDictionary<any>>(extension => {\n\t\t\tconst defaults: IStringDictionary<any> = objects.deepClone(extension.value);\n\t\t\tfor (const key of Object.keys(defaults)) {\n\t\t\t\tif (!OVERRIDE_PROPERTY_PATTERN.test(key) || typeof defaults[key] !== 'object') {\n\t\t\t\t\textension.collector.warn(nls.localize('config.property.defaultConfiguration.warning', \"Cannot register configuration defaults for '{0}'. Only defaults for language specific settings are supported.\", key));\n\t\t\t\t\tdelete defaults[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn defaults;\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations(addedDefaultConfigurations);\n\t}\n});\n// END VSCode extension point `configurationDefaults`\n\n\n// BEGIN VSCode extension point `configuration`\nconst configurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\textensionPoint: 'configuration',\n\tdeps: [defaultConfigurationExtPoint],\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.configuration', 'Contributes configuration settings.'),\n\t\toneOf: [\n\t\t\tconfigurationEntrySchema,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: configurationEntrySchema\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst extensionConfigurations: Map<string, IConfigurationNode[]> = new Map<string, IConfigurationNode[]>();\n\nconfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\n\tif (removed.length) {\n\t\tconst removedConfigurations: IConfigurationNode[] = [];\n\t\tfor (const extension of removed) {\n\t\t\tconst key = ExtensionIdentifier.toKey(extension.description.identifier);\n\t\t\tremovedConfigurations.push(...(extensionConfigurations.get(key) || []));\n\t\t\textensionConfigurations.delete(key);\n\t\t}\n\t\tconfigurationRegistry.deregisterConfigurations(removedConfigurations);\n\t}\n\n\tfunction handleConfiguration(node: IConfigurationNode, extension: IExtensionPointUser<any>): IConfigurationNode[] {\n\t\tconst configurations: IConfigurationNode[] = [];\n\t\tlet configuration = objects.deepClone(node);\n\n\t\tif (configuration.title && (typeof configuration.title !== 'string')) {\n\t\t\textension.collector.error(nls.localize('invalid.title', \"'configuration.title' must be a string\"));\n\t\t}\n\n\t\tvalidateProperties(configuration, extension);\n\n\t\tconfiguration.id = node.id || extension.description.identifier.value;\n\t\tconfiguration.extensionInfo = { id: extension.description.identifier.value, restrictedConfigurations: extension.description.capabilities?.untrustedWorkspaces?.supported === 'limited' ? extension.description.capabilities?.untrustedWorkspaces.restrictedConfigurations : undefined };\n\t\tconfiguration.title = configuration.title || extension.description.displayName || extension.description.identifier.value;\n\t\tconfigurations.push(configuration);\n\t\treturn configurations;\n\t}\n\n\tif (added.length) {\n\t\tconst addedConfigurations: IConfigurationNode[] = [];\n\t\tfor (let extension of added) {\n\t\t\tconst configurations: IConfigurationNode[] = [];\n\t\t\tconst value = <IConfigurationNode | IConfigurationNode[]>extension.value;\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach(v => configurations.push(...handleConfiguration(v, extension)));\n\t\t\t} else {\n\t\t\t\tconfigurations.push(...handleConfiguration(value, extension));\n\t\t\t}\n\t\t\textensionConfigurations.set(ExtensionIdentifier.toKey(extension.description.identifier), configurations);\n\t\t\taddedConfigurations.push(...configurations);\n\t\t}\n\n\t\tconfigurationRegistry.registerConfigurations(addedConfigurations, false);\n\t}\n\n});\n// END VSCode extension point `configuration`\n\nfunction validateProperties(configuration: IConfigurationNode, extension: IExtensionPointUser<any>): void {\n\tlet properties = configuration.properties;\n\tif (properties) {\n\t\tif (typeof properties !== 'object') {\n\t\t\textension.collector.error(nls.localize('invalid.properties', \"'configuration.properties' must be an object\"));\n\t\t\tconfiguration.properties = {};\n\t\t}\n\t\tfor (let key in properties) {\n\t\t\tconst message = validateProperty(key);\n\t\t\tif (message) {\n\t\t\t\tdelete properties[key];\n\t\t\t\textension.collector.warn(message);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyConfiguration = properties[key];\n\t\t\tif (!isObject(propertyConfiguration)) {\n\t\t\t\tdelete properties[key];\n\t\t\t\textension.collector.error(nls.localize('invalid.property', \"configuration.properties property '{0}' must be an object\", key));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (propertyConfiguration.scope) {\n\t\t\t\tif (propertyConfiguration.scope.toString() === 'application') {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.APPLICATION;\n\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'machine') {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.MACHINE;\n\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'resource') {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.RESOURCE;\n\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'machine-overridable') {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.MACHINE_OVERRIDABLE;\n\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'language-overridable') {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.LANGUAGE_OVERRIDABLE;\n\t\t\t\t} else {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.WINDOW;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.WINDOW;\n\t\t\t}\n\t\t}\n\t}\n\tlet subNodes = configuration.allOf;\n\tif (subNodes) {\n\t\textension.collector.error(nls.localize('invalid.allOf', \"'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point.\"));\n\t\tfor (let node of subNodes) {\n\t\t\tvalidateProperties(node, extension);\n\t\t}\n\t}\n}\n\nconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\njsonRegistry.registerSchema('vscode://schemas/workspaceConfig', {\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tdefault: {\n\t\tfolders: [\n\t\t\t{\n\t\t\t\tpath: ''\n\t\t\t}\n\t\t],\n\t\tsettings: {\n\t\t}\n\t},\n\trequired: ['folders'],\n\tproperties: {\n\t\t'folders': {\n\t\t\tminItems: 0,\n\t\t\tuniqueItems: true,\n\t\t\tdescription: nls.localize('workspaceConfig.folders.description', \"List of folders to be loaded in the workspace.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'object',\n\t\t\t\tdefault: { path: '' },\n\t\t\t\toneOf: [{\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.path.description', \"A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.name.description', \"An optional name for the folder. \")\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['path']\n\t\t\t\t}, {\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\turi: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.uri.description', \"URI of the folder\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.name.description', \"An optional name for the folder. \")\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['uri']\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t'settings': {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize('workspaceConfig.settings.description', \"Workspace settings\"),\n\t\t\t$ref: workspaceSettingsSchemaId\n\t\t},\n\t\t'launch': {\n\t\t\ttype: 'object',\n\t\t\tdefault: { configurations: [], compounds: [] },\n\t\t\tdescription: nls.localize('workspaceConfig.launch.description', \"Workspace launch configurations\"),\n\t\t\t$ref: launchSchemaId\n\t\t},\n\t\t'tasks': {\n\t\t\ttype: 'object',\n\t\t\tdefault: { version: '2.0.0', tasks: [] },\n\t\t\tdescription: nls.localize('workspaceConfig.tasks.description', \"Workspace task configurations\"),\n\t\t\t$ref: tasksSchemaId\n\t\t},\n\t\t'extensions': {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize('workspaceConfig.extensions.description', \"Workspace extensions\"),\n\t\t\t$ref: 'vscode://schemas/extensions'\n\t\t},\n\t\t'remoteAuthority': {\n\t\t\ttype: 'string',\n\t\t\tdoNotSuggest: true,\n\t\t\tdescription: nls.localize('workspaceConfig.remoteAuthority', \"The remote server where the workspace is located.\"),\n\t\t}\n\t},\n\terrorMessage: nls.localize('unknownWorkspaceProperty', \"Unknown workspace configuration property\")\n});\n"]}