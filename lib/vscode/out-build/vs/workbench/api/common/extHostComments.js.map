{"version":3,"file":"extHostComments.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostComments.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IRange } from 'vs/editor/common/core/range';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport * as extHostTypeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { ExtHostCommentsShape, IMainContext, MainContext, MainThreadCommentsShape, CommentThreadChanges } from './extHost.protocol';\nimport { ExtHostCommands } from './extHostCommands';\n\ntype ProviderHandle = number;\n\nexport class ExtHostComments implements ExtHostCommentsShape, IDisposable {\n\n\tprivate static handlePool = 0;\n\n\tprivate _proxy: MainThreadCommentsShape;\n\n\tprivate _commentControllers: Map<ProviderHandle, ExtHostCommentController> = new Map<ProviderHandle, ExtHostCommentController>();\n\n\tprivate _commentControllersByExtension: Map<string, ExtHostCommentController[]> = new Map<string, ExtHostCommentController[]>();\n\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadComments);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 6) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.handle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentController;\n\t\t\t\t} else if (arg && arg.$mid === 7) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentThread;\n\t\t\t\t} else if (arg && arg.$mid === 8) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tthread: commentThread,\n\t\t\t\t\t\ttext: arg.text\n\t\t\t\t\t};\n\t\t\t\t} else if (arg && arg.$mid === 9) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\tlet comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn comment;\n\n\t\t\t\t} else if (arg && arg.$mid === 10) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet body = arg.text;\n\t\t\t\t\tlet commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\tlet comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tcomment.body = body;\n\t\t\t\t\treturn comment;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateCommentController(extension: IExtensionDescription, id: string, label: string): vscode.CommentController {\n\t\tconst handle = ExtHostComments.handlePool++;\n\t\tconst commentController = new ExtHostCommentController(extension, handle, this._proxy, id, label);\n\t\tthis._commentControllers.set(commentController.handle, commentController);\n\n\t\tconst commentControllers = this._commentControllersByExtension.get(ExtensionIdentifier.toKey(extension.identifier)) || [];\n\t\tcommentControllers.push(commentController);\n\t\tthis._commentControllersByExtension.set(ExtensionIdentifier.toKey(extension.identifier), commentControllers);\n\n\t\treturn commentController;\n\t}\n\n\t$createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: IRange): void {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tcommentController.$createCommentThreadTemplate(uriComponents, range);\n\t}\n\n\tasync $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: IRange) {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tcommentController.$updateCommentThreadTemplate(threadHandle, range);\n\t}\n\n\t$deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number) {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (commentController) {\n\t\t\tcommentController.$deleteCommentThread(commentThreadHandle);\n\t\t}\n\t}\n\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.commentingRangeProvider) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst document = this._documents.getDocument(URI.revive(uriComponents));\n\t\treturn asPromise(() => {\n\t\t\treturn commentController.commentingRangeProvider!.provideCommentingRanges(document, token);\n\t\t}).then(ranges => ranges ? ranges.map(x => extHostTypeConverter.Range.from(x)) : undefined);\n\t}\n\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.reactionHandler) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => {\n\t\t\tconst commentThread = commentController.getCommentThread(threadHandle);\n\t\t\tif (commentThread) {\n\t\t\t\tconst vscodeComment = commentThread.getCommentByUniqueId(comment.uniqueIdInThread);\n\n\t\t\t\tif (commentController !== undefined && vscodeComment) {\n\t\t\t\t\tif (commentController.reactionHandler) {\n\t\t\t\t\t\treturn commentController.reactionHandler(vscodeComment, convertFromReaction(reaction));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t});\n\t}\n\tdispose() {\n\n\t}\n}\ntype CommentThreadModification = Partial<{\n\trange: vscode.Range,\n\tlabel: string | undefined,\n\tcontextValue: string | undefined,\n\tcomments: vscode.Comment[],\n\tcollapsibleState: vscode.CommentThreadCollapsibleState\n\tcanReply: boolean;\n}>;\n\nexport class ExtHostCommentThread implements vscode.CommentThread {\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostCommentThread._handlePool++;\n\tpublic commentHandle: number = 0;\n\n\tprivate modifications: CommentThreadModification = Object.create(null);\n\n\tset threadId(id: string) {\n\t\tthis._id = id;\n\t}\n\n\tget threadId(): string {\n\t\treturn this._id!;\n\t}\n\n\tget id(): string {\n\t\treturn this._id!;\n\t}\n\n\tget resource(): vscode.Uri {\n\t\treturn this._uri;\n\t}\n\n\tget uri(): vscode.Uri {\n\t\treturn this._uri;\n\t}\n\n\tprivate readonly _onDidUpdateCommentThread = new Emitter<void>();\n\treadonly onDidUpdateCommentThread = this._onDidUpdateCommentThread.event;\n\n\tset range(range: vscode.Range) {\n\t\tif (!range.isEqual(this._range)) {\n\t\t\tthis._range = range;\n\t\t\tthis.modifications.range = range;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\t}\n\n\tget range(): vscode.Range {\n\t\treturn this._range;\n\t}\n\n\tprivate _canReply: boolean = true;\n\n\tset canReply(state: boolean) {\n\t\tif (this._canReply !== state) {\n\t\t\tthis._canReply = state;\n\t\t\tthis.modifications.canReply = state;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\t}\n\tget canReply() {\n\t\treturn this._canReply;\n\t}\n\n\tprivate _label: string | undefined;\n\n\tget label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tset label(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis.modifications.label = label;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _contextValue: string | undefined;\n\n\tget contextValue(): string | undefined {\n\t\treturn this._contextValue;\n\t}\n\n\tset contextValue(context: string | undefined) {\n\t\tthis._contextValue = context;\n\t\tthis.modifications.contextValue = context;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tget comments(): vscode.Comment[] {\n\t\treturn this._comments;\n\t}\n\n\tset comments(newComments: vscode.Comment[]) {\n\t\tthis._comments = newComments;\n\t\tthis.modifications.comments = newComments;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _collapseState?: vscode.CommentThreadCollapsibleState;\n\n\tget collapsibleState(): vscode.CommentThreadCollapsibleState {\n\t\treturn this._collapseState!;\n\t}\n\n\tset collapsibleState(newState: vscode.CommentThreadCollapsibleState) {\n\t\tthis._collapseState = newState;\n\t\tthis.modifications.collapsibleState = newState;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _localDisposables: types.Disposable[];\n\n\tprivate _isDiposed: boolean;\n\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDiposed;\n\t}\n\n\tprivate _commentsMap: Map<vscode.Comment, number> = new Map<vscode.Comment, number>();\n\n\tprivate _acceptInputDisposables = new MutableDisposable<DisposableStore>();\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate _commentController: ExtHostCommentController,\n\t\tprivate _id: string | undefined,\n\t\tprivate _uri: vscode.Uri,\n\t\tprivate _range: vscode.Range,\n\t\tprivate _comments: vscode.Comment[],\n\t\textensionId: ExtensionIdentifier\n\t) {\n\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\n\t\tif (this._id === undefined) {\n\t\t\tthis._id = `${_commentController.id}.${this.handle}`;\n\t\t}\n\n\t\tthis._proxy.$createCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle,\n\t\t\tthis._id,\n\t\t\tthis._uri,\n\t\t\textHostTypeConverter.Range.from(this._range),\n\t\t\textensionId\n\t\t);\n\n\t\tthis._localDisposables = [];\n\t\tthis._isDiposed = false;\n\n\t\tthis._localDisposables.push(this.onDidUpdateCommentThread(() => {\n\t\t\tthis.eventuallyUpdateCommentThread();\n\t\t}));\n\n\t\t// set up comments after ctor to batch update events.\n\t\tthis.comments = _comments;\n\t}\n\n\n\t@debounce(100)\n\teventuallyUpdateCommentThread(): void {\n\t\tif (this._isDiposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._acceptInputDisposables.value) {\n\t\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\t\t}\n\n\t\tconst modified = (value: keyof CommentThreadModification): boolean =>\n\t\t\tObject.prototype.hasOwnProperty.call(this.modifications, value);\n\n\t\tconst formattedModifications: CommentThreadChanges = {};\n\t\tif (modified('range')) {\n\t\t\tformattedModifications.range = extHostTypeConverter.Range.from(this._range);\n\t\t}\n\t\tif (modified('label')) {\n\t\t\tformattedModifications.label = this.label;\n\t\t}\n\t\tif (modified('contextValue')) {\n\t\t\tformattedModifications.contextValue = this.contextValue;\n\t\t}\n\t\tif (modified('comments')) {\n\t\t\tformattedModifications.comments =\n\t\t\t\tthis._comments.map(cmt => convertToModeComment(this, this._commentController, cmt, this._commentsMap));\n\t\t}\n\t\tif (modified('collapsibleState')) {\n\t\t\tformattedModifications.collapseState = convertToCollapsibleState(this._collapseState);\n\t\t}\n\t\tif (modified('canReply')) {\n\t\t\tformattedModifications.canReply = this.canReply;\n\t\t}\n\t\tthis.modifications = {};\n\n\t\tthis._proxy.$updateCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle,\n\t\t\tthis._id!,\n\t\t\tthis._uri,\n\t\t\tformattedModifications\n\t\t);\n\t}\n\n\tgetCommentByUniqueId(uniqueId: number): vscode.Comment | undefined {\n\t\tfor (let key of this._commentsMap) {\n\t\t\tlet comment = key[0];\n\t\t\tlet id = key[1];\n\t\t\tif (uniqueId === id) {\n\t\t\t\treturn comment;\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tdispose() {\n\t\tthis._isDiposed = true;\n\t\tthis._acceptInputDisposables.dispose();\n\t\tthis._localDisposables.forEach(disposable => disposable.dispose());\n\t\tthis._proxy.$deleteCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle\n\t\t);\n\t}\n}\n\ntype ReactionHandler = (comment: vscode.Comment, reaction: vscode.CommentReaction) => Promise<void>;\n\nclass ExtHostCommentController implements vscode.CommentController {\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tpublic get handle(): number {\n\t\treturn this._handle;\n\t}\n\n\tprivate _threads: Map<number, ExtHostCommentThread> = new Map<number, ExtHostCommentThread>();\n\tcommentingRangeProvider?: vscode.CommentingRangeProvider;\n\n\tprivate _reactionHandler?: ReactionHandler;\n\n\tget reactionHandler(): ReactionHandler | undefined {\n\t\treturn this._reactionHandler;\n\t}\n\n\tset reactionHandler(handler: ReactionHandler | undefined) {\n\t\tthis._reactionHandler = handler;\n\n\t\tthis._proxy.$updateCommentControllerFeatures(this.handle, { reactionHandler: !!handler });\n\t}\n\n\tprivate _options: modes.CommentOptions | undefined;\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tset options(options: modes.CommentOptions | undefined) {\n\t\tthis._options = options;\n\n\t\tthis._proxy.$updateCommentControllerFeatures(this.handle, { options: this._options });\n\t}\n\n\tconstructor(\n\t\tprivate _extension: IExtensionDescription,\n\t\tprivate _handle: number,\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate _id: string,\n\t\tprivate _label: string\n\t) {\n\t\tthis._proxy.$registerCommentController(this.handle, _id, _label);\n\t}\n\n\tcreateCommentThread(resource: vscode.Uri, range: vscode.Range, comments: vscode.Comment[]): vscode.CommentThread;\n\tcreateCommentThread(arg0: vscode.Uri | string, arg1: vscode.Uri | vscode.Range, arg2: vscode.Range | vscode.Comment[], arg3?: vscode.Comment[]): vscode.CommentThread {\n\t\tif (typeof arg0 === 'string') {\n\t\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, arg0, arg1 as vscode.Uri, arg2 as vscode.Range, arg3 as vscode.Comment[], this._extension.identifier);\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t} else {\n\t\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, undefined, arg0 as vscode.Uri, arg1 as vscode.Range, arg2 as vscode.Comment[], this._extension.identifier);\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t}\n\t}\n\n\t$createCommentThreadTemplate(uriComponents: UriComponents, range: IRange): ExtHostCommentThread {\n\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, undefined, URI.revive(uriComponents), extHostTypeConverter.Range.to(range), [], this._extension.identifier);\n\t\tcommentThread.collapsibleState = modes.CommentThreadCollapsibleState.Expanded;\n\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\treturn commentThread;\n\t}\n\n\t$updateCommentThreadTemplate(threadHandle: number, range: IRange): void {\n\t\tlet thread = this._threads.get(threadHandle);\n\t\tif (thread) {\n\t\t\tthread.range = extHostTypeConverter.Range.to(range);\n\t\t}\n\t}\n\n\t$deleteCommentThread(threadHandle: number): void {\n\t\tlet thread = this._threads.get(threadHandle);\n\n\t\tif (thread) {\n\t\t\tthread.dispose();\n\t\t}\n\n\t\tthis._threads.delete(threadHandle);\n\t}\n\n\tgetCommentThread(handle: number): ExtHostCommentThread | undefined {\n\t\treturn this._threads.get(handle);\n\t}\n\n\tdispose(): void {\n\t\tthis._threads.forEach(value => {\n\t\t\tvalue.dispose();\n\t\t});\n\n\t\tthis._proxy.$unregisterCommentController(this.handle);\n\t}\n}\n\nfunction convertToModeComment(thread: ExtHostCommentThread, commentController: ExtHostCommentController, vscodeComment: vscode.Comment, commentsMap: Map<vscode.Comment, number>): modes.Comment {\n\tlet commentUniqueId = commentsMap.get(vscodeComment)!;\n\tif (!commentUniqueId) {\n\t\tcommentUniqueId = ++thread.commentHandle;\n\t\tcommentsMap.set(vscodeComment, commentUniqueId);\n\t}\n\n\tconst iconPath = vscodeComment.author && vscodeComment.author.iconPath ? vscodeComment.author.iconPath.toString() : undefined;\n\n\treturn {\n\t\tmode: vscodeComment.mode,\n\t\tcontextValue: vscodeComment.contextValue,\n\t\tuniqueIdInThread: commentUniqueId,\n\t\tbody: extHostTypeConverter.MarkdownString.from(vscodeComment.body),\n\t\tuserName: vscodeComment.author.name,\n\t\tuserIconPath: iconPath,\n\t\tlabel: vscodeComment.label,\n\t\tcommentReactions: vscodeComment.reactions ? vscodeComment.reactions.map(reaction => convertToReaction(reaction)) : undefined\n\t};\n}\n\nfunction convertToReaction(reaction: vscode.CommentReaction): modes.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label,\n\t\ticonPath: reaction.iconPath ? extHostTypeConverter.pathOrURIToURI(reaction.iconPath) : undefined,\n\t\tcount: reaction.count,\n\t\thasReacted: reaction.authorHasReacted,\n\t};\n}\n\nfunction convertFromReaction(reaction: modes.CommentReaction): vscode.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label || '',\n\t\tcount: reaction.count || 0,\n\t\ticonPath: reaction.iconPath ? URI.revive(reaction.iconPath) : '',\n\t\tauthorHasReacted: reaction.hasReacted || false\n\t};\n}\n\nfunction convertToCollapsibleState(kind: vscode.CommentThreadCollapsibleState | undefined): modes.CommentThreadCollapsibleState {\n\tif (kind !== undefined) {\n\t\tswitch (kind) {\n\t\t\tcase types.CommentThreadCollapsibleState.Expanded:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Expanded;\n\t\t\tcase types.CommentThreadCollapsibleState.Collapsed:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Collapsed;\n\t\t}\n\t}\n\treturn modes.CommentThreadCollapsibleState.Collapsed;\n}\n"]}