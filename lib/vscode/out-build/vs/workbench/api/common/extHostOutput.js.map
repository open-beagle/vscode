{"version":3,"file":"extHostOutput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostOutput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadOutputServiceShape, ExtHostOutputServiceShape } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport abstract class AbstractExtHostOutputChannel extends Disposable implements vscode.OutputChannel {\n\n\treadonly _id: Promise<string>;\n\tprivate readonly _name: string;\n\tprotected readonly _proxy: MainThreadOutputServiceShape;\n\tprivate _disposed: boolean;\n\tprivate _offset: number;\n\n\tprotected readonly _onDidAppend: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidAppend: Event<void> = this._onDidAppend.event;\n\n\tconstructor(name: string, log: boolean, file: URI | undefined, proxy: MainThreadOutputServiceShape) {\n\t\tsuper();\n\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t\tthis._id = proxy.$register(this.name, log, file);\n\t\tthis._disposed = false;\n\t\tthis._offset = 0;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tappend(value: string): void {\n\t\tthis.validate();\n\t\tthis._offset += value ? VSBuffer.fromString(value).byteLength : 0;\n\t}\n\n\tupdate(): void {\n\t\tthis._id.then(id => this._proxy.$update(id));\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.validate();\n\t\tthis.append(value + '\\n');\n\t}\n\n\tclear(): void {\n\t\tthis.validate();\n\t\tconst till = this._offset;\n\t\tthis._id.then(id => this._proxy.$clear(id, till));\n\t}\n\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$reveal(id, !!(typeof columnOrPreserveFocus === 'boolean' ? columnOrPreserveFocus : preserveFocus)));\n\t}\n\n\thide(): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$close(id));\n\t}\n\n\tprotected validate(): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Channel has been closed');\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (!this._disposed) {\n\t\t\tthis._id\n\t\t\t\t.then(id => this._proxy.$dispose(id))\n\t\t\t\t.then(() => this._disposed = true);\n\t\t}\n\t}\n}\n\nexport class ExtHostPushOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, false, undefined, proxy);\n\t}\n\n\toverride append(value: string): void {\n\t\tsuper.append(value);\n\t\tthis._id.then(id => this._proxy.$append(id, value));\n\t\tthis._onDidAppend.fire();\n\t}\n}\n\nclass ExtHostLogFileOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, file: URI, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, true, file, proxy);\n\t}\n\n\toverride append(value: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n}\n\nexport class LazyOutputChannel implements vscode.OutputChannel {\n\n\tconstructor(\n\t\treadonly name: string,\n\t\tprivate readonly _channel: Promise<AbstractExtHostOutputChannel>\n\t) { }\n\n\tappend(value: string): void {\n\t\tthis._channel.then(channel => channel.append(value));\n\t}\n\tappendLine(value: string): void {\n\t\tthis._channel.then(channel => channel.appendLine(value));\n\t}\n\tclear(): void {\n\t\tthis._channel.then(channel => channel.clear());\n\t}\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis._channel.then(channel => channel.show(columnOrPreserveFocus, preserveFocus));\n\t}\n\thide(): void {\n\t\tthis._channel.then(channel => channel.hide());\n\t}\n\tdispose(): void {\n\t\tthis._channel.then(channel => channel.dispose());\n\t}\n}\n\nexport class ExtHostOutputService implements ExtHostOutputServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected readonly _proxy: MainThreadOutputServiceShape;\n\n\tconstructor(@IExtHostRpcService extHostRpc: IExtHostRpcService) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadOutputService);\n\t}\n\n\t$setVisibleChannel(channelId: string): void {\n\t}\n\n\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\treturn new ExtHostPushOutputChannel(name, this._proxy);\n\t}\n\n\tcreateOutputChannelFromLogFile(name: string, file: URI): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\tif (!file) {\n\t\t\tthrow new Error('illegal argument `file`. must not be falsy');\n\t\t}\n\t\treturn new ExtHostLogFileOutputChannel(name, file, this._proxy);\n\t}\n}\n\nexport interface IExtHostOutputService extends ExtHostOutputService { }\nexport const IExtHostOutputService = createDecorator<IExtHostOutputService>('IExtHostOutputService');\n"]}