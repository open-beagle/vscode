{"version":3,"file":"extHostLanguages.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostLanguages.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,gBAAgB;QAK5B,YACC,WAAyB,EACzB,SAA2B;YAE3B,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,QAAQ,CAAC,8BAAW,CAAC,mBAAmB,CAAC,CAAC;YACpE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC7B,CAAC;QAED,YAAY;YACX,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;QACpC,CAAC;QAED,KAAK,CAAC,cAAc,CAAC,GAAe,EAAE,UAAkB;YACvD,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YACnD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC,QAAQ,aAAa,CAAC,CAAC;aACxD;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAED,KAAK,CAAC,eAAe,CAAC,QAA6B,EAAE,QAAyB;;YAC7E,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,MAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACpE,MAAM,YAAY,GAAG;gBACpB,IAAI,EAAE,gCAAiB,CAAC,KAAK;gBAC7B,KAAK,EAAE,MAAA,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,mCAAI,IAAI,oBAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC;aACnI,CAAC;YACF,IAAI,CAAC,IAAI,EAAE;gBACV,YAAY;gBACZ,OAAO,YAAY,CAAC;aACpB;YACD,MAAM,MAAM,GAAG;gBACd,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;gBACvC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;aACzC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAW,QAAQ,CAAC,EAAE;gBAC/C,gBAAgB;gBAChB,OAAO,YAAY,CAAC;aACpB;YACD,IAAI,UAAU,KAAK,QAAQ,CAAC,OAAO,EAAE;gBACpC,oBAAoB;gBACpB,OAAO,YAAY,CAAC;aACpB;YACD,OAAO,MAAM,CAAC;QACf,CAAC;KACD;IApDD,4CAoDC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadLanguagesShape, IMainContext } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport * as typeConvert from 'vs/workbench/api/common/extHostTypeConverters';\nimport { StandardTokenType, Range, Position } from 'vs/workbench/api/common/extHostTypes';\n\nexport class ExtHostLanguages {\n\n\tprivate readonly _proxy: MainThreadLanguagesShape;\n\tprivate readonly _documents: ExtHostDocuments;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tdocuments: ExtHostDocuments\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLanguages);\n\t\tthis._documents = documents;\n\t}\n\n\tgetLanguages(): Promise<string[]> {\n\t\treturn this._proxy.$getLanguages();\n\t}\n\n\tasync changeLanguage(uri: vscode.Uri, languageId: string): Promise<vscode.TextDocument> {\n\t\tawait this._proxy.$changeLanguage(uri, languageId);\n\t\tconst data = this._documents.getDocumentData(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error(`document '${uri.toString}' NOT found`);\n\t\t}\n\t\treturn data.document;\n\t}\n\n\tasync tokenAtPosition(document: vscode.TextDocument, position: vscode.Position): Promise<vscode.TokenInformation> {\n\t\tconst versionNow = document.version;\n\t\tconst pos = typeConvert.Position.from(position);\n\t\tconst info = await this._proxy.$tokensAtPosition(document.uri, pos);\n\t\tconst defaultRange = {\n\t\t\ttype: StandardTokenType.Other,\n\t\t\trange: document.getWordRangeAtPosition(position) ?? new Range(position.line, position.character, position.line, position.character)\n\t\t};\n\t\tif (!info) {\n\t\t\t// no result\n\t\t\treturn defaultRange;\n\t\t}\n\t\tconst result = {\n\t\t\trange: typeConvert.Range.to(info.range),\n\t\t\ttype: typeConvert.TokenType.to(info.type)\n\t\t};\n\t\tif (!result.range.contains(<Position>position)) {\n\t\t\t// bogous result\n\t\t\treturn defaultRange;\n\t\t}\n\t\tif (versionNow !== document.version) {\n\t\t\t// concurrent change\n\t\t\treturn defaultRange;\n\t\t}\n\t\treturn result;\n\t}\n}\n"]}