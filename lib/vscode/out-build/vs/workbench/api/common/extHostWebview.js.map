{"version":3,"file":"extHostWebview.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostWebview.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { normalizeVersion, parseVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { deserializeWebviewMessage } from 'vs/workbench/api/common/extHostWebviewMessaging';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { asWebviewUri, WebviewInitData } from 'vs/workbench/api/common/shared/webview';\nimport type * as vscode from 'vscode';\nimport * as extHostProtocol from './extHost.protocol';\n\nexport class ExtHostWebview implements vscode.Webview {\n\n\treadonly #handle: extHostProtocol.WebviewHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #deprecationService: IExtHostApiDeprecationService;\n\n\treadonly #initData: WebviewInitData;\n\treadonly #workspace: IExtHostWorkspace | undefined;\n\treadonly #extension: IExtensionDescription;\n\n\t#html: string = '';\n\t#options: vscode.WebviewOptions;\n\t#isDisposed: boolean = false;\n\t#hasCalledAsWebviewUri = false;\n\n\t#serializeBuffersForPostMessage = false;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions,\n\t\tinitData: WebviewInitData,\n\t\tworkspace: IExtHostWorkspace | undefined,\n\t\textension: IExtensionDescription,\n\t\tdeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#options = options;\n\t\tthis.#initData = initData;\n\t\tthis.#workspace = workspace;\n\t\tthis.#extension = extension;\n\t\tthis.#serializeBuffersForPostMessage = shouldSerializeBuffersForPostMessage(extension);\n\t\tthis.#deprecationService = deprecationService;\n\t}\n\n\t/* internal */ readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> = this._onMessageEmitter.event;\n\n\treadonly #onDidDisposeEmitter = new Emitter<void>();\n\t/* internal */ readonly _onDidDispose: Event<void> = this.#onDidDisposeEmitter.event;\n\n\tpublic dispose() {\n\t\tthis.#isDisposed = true;\n\n\t\tthis.#onDidDisposeEmitter.fire();\n\n\t\tthis.#onDidDisposeEmitter.dispose();\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic asWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\tthis.#hasCalledAsWebviewUri = true;\n\t\treturn asWebviewUri(this.#initData, this.#handle, resource);\n\t}\n\n\tpublic get cspSource(): string {\n\t\treturn this.#initData.webviewCspSource\n\t\t\t.replace('{{uuid}}', this.#handle);\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#html !== value) {\n\t\t\tthis.#html = value;\n\t\t\tif (!this.#hasCalledAsWebviewUri && /([\"'])vscode-resource:([^\\s'\"]+?)([\"'])/i.test(value)) {\n\t\t\t\tthis.#hasCalledAsWebviewUri = true;\n\t\t\t\tthis.#deprecationService.report('Webview vscode-resource: uris', this.#extension,\n\t\t\t\t\t`Please migrate to use the 'webview.asWebviewUri' api instead: https://aka.ms/vscode-webview-use-aswebviewuri`);\n\t\t\t}\n\t\t\tthis.#proxy.$setHtml(this.#handle, value);\n\t\t}\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\t\tthis.#proxy.$setOptions(this.#handle, serializeWebviewOptions(this.#extension, this.#workspace, newOptions));\n\t\tthis.#options = newOptions;\n\t}\n\n\tpublic async postMessage(message: any): Promise<boolean> {\n\t\tif (this.#isDisposed) {\n\t\t\treturn false;\n\t\t}\n\t\tconst serialized = serializeMessage(message, { serializeBuffersForPostMessage: this.#serializeBuffersForPostMessage });\n\t\treturn this.#proxy.$postMessage(this.#handle, serialized.message, ...serialized.buffers);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n}\n\nexport function shouldSerializeBuffersForPostMessage(extension: IExtensionDescription): boolean {\n\tif (!extension.enableProposedApi) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tconst version = normalizeVersion(parseVersion(extension.engines.vscode));\n\t\treturn !!version && version.majorBase >= 1 && version.minorBase >= 56;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport function serializeMessage(message: any, options: { serializeBuffersForPostMessage?: boolean }): { message: string, buffers: VSBuffer[] } {\n\tif (options.serializeBuffersForPostMessage) {\n\t\t// Extract all ArrayBuffers from the message and replace them with references.\n\t\tconst vsBuffers: Array<{ original: ArrayBuffer, vsBuffer: VSBuffer }> = [];\n\n\t\tconst replacer = (_key: string, value: any) => {\n\t\t\tif (value && value instanceof ArrayBuffer) {\n\t\t\t\tlet index = vsBuffers.findIndex(x => x.original === value);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tconst bytes = new Uint8Array(value);\n\t\t\t\t\tconst vsBuffer = VSBuffer.wrap(bytes);\n\t\t\t\t\tindex = vsBuffers.length;\n\t\t\t\t\tvsBuffers.push({ original: value, vsBuffer });\n\t\t\t\t}\n\n\t\t\t\treturn <extHostProtocol.WebviewMessageArrayBufferReference>{\n\t\t\t\t\t$$vscode_array_buffer_reference$$: true,\n\t\t\t\t\tindex,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\tconst serializedMessage = JSON.stringify(message, replacer);\n\t\treturn { message: serializedMessage, buffers: vsBuffers.map(x => x.vsBuffer) };\n\t} else {\n\t\treturn { message: JSON.stringify(message), buffers: [] };\n\t}\n}\n\nexport class ExtHostWebviews implements extHostProtocol.ExtHostWebviewsShape {\n\n\tprivate readonly _webviewProxy: extHostProtocol.MainThreadWebviewsShape;\n\n\tprivate readonly _webviews = new Map<extHostProtocol.WebviewHandle, ExtHostWebview>();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly initData: WebviewInitData,\n\t\tprivate readonly workspace: IExtHostWorkspace | undefined,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _deprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis._webviewProxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadWebviews);\n\t}\n\n\tpublic $onMessage(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tjsonMessage: string,\n\t\t...buffers: VSBuffer[]\n\t): void {\n\t\tconst webview = this.getWebview(handle);\n\t\tif (webview) {\n\t\t\tconst { message } = deserializeWebviewMessage(jsonMessage, buffers);\n\t\t\twebview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onMissingCsp(\n\t\t_handle: extHostProtocol.WebviewHandle,\n\t\textensionId: string\n\t): void {\n\t\tthis._logService.warn(`${extensionId} created a webview without a content security policy: https://aka.ms/vscode-webview-missing-csp`);\n\t}\n\n\tpublic createNewWebview(handle: string, options: extHostProtocol.IWebviewOptions, extension: IExtensionDescription): ExtHostWebview {\n\t\tconst webview = new ExtHostWebview(handle, this._webviewProxy, reviveOptions(options), this.initData, this.workspace, extension, this._deprecationService);\n\t\tthis._webviews.set(handle, webview);\n\n\t\twebview._onDidDispose(() => { this._webviews.delete(handle); });\n\n\t\treturn webview;\n\t}\n\n\tpublic deleteWebview(handle: string) {\n\t\tthis._webviews.delete(handle);\n\t}\n\n\tprivate getWebview(handle: extHostProtocol.WebviewHandle): ExtHostWebview | undefined {\n\t\treturn this._webviews.get(handle);\n\t}\n}\n\nexport function toExtensionData(extension: IExtensionDescription): extHostProtocol.WebviewExtensionDescription {\n\treturn { id: extension.identifier, location: extension.extensionLocation };\n}\n\nexport function serializeWebviewOptions(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n\toptions: vscode.WebviewOptions,\n): extHostProtocol.IWebviewOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots || getDefaultLocalResourceRoots(extension, workspace)\n\t};\n}\n\nexport function reviveOptions(options: extHostProtocol.IWebviewOptions): vscode.WebviewOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots?.map(components => URI.from(components)),\n\t};\n}\n\nfunction getDefaultLocalResourceRoots(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n): URI[] {\n\treturn [\n\t\t...(workspace?.getWorkspaceFolders() || []).map(x => x.uri),\n\t\textension.extensionLocation,\n\t];\n}\n"]}