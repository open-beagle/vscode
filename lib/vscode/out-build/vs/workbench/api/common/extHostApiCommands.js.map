{"version":3,"file":"extHostApiCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostApiCommands.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport type * as vscode from 'vscode';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport { IRawColorInfo, IWorkspaceEditDto, ICallHierarchyItemDto, IIncomingCallDto, IOutgoingCallDto } from 'vs/workbench/api/common/extHost.protocol';\nimport * as modes from 'vs/editor/common/modes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ApiCommand, ApiCommandArgument, ApiCommandResult, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { CustomCodeAction } from 'vs/workbench/api/common/extHostLanguageFeatures';\nimport { ICommandsExecutor, RemoveFromRecentlyOpenedAPICommand, OpenIssueReporter, OpenIssueReporterArgs } from './apiCommands';\nimport { isFalsyOrEmpty } from 'vs/base/common/arrays';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { TransientCellMetadata, TransientDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { decodeSemanticTokensDto } from 'vs/editor/common/services/semanticTokensDto';\n\n//#region --- NEW world\n\nconst newCommands: ApiCommand[] = [\n\t// -- document highlights\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentHighlights', '_executeDocumentHighlights', 'Execute document highlight provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.DocumentHighlight[], types.DocumentHighlight[] | undefined>('A promise that resolves to an array of DocumentHighlight-instances.', tryMapWith(typeConverters.DocumentHighlight.to))\n\t),\n\t// -- document symbols\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentSymbolProvider', '_executeDocumentSymbolProvider', 'Execute document symbol provider.',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<modes.DocumentSymbol[], vscode.SymbolInformation[] | undefined>('A promise that resolves to an array of SymbolInformation and DocumentSymbol instances.', (value, apiArgs) => {\n\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tclass MergedInfo extends types.SymbolInformation implements vscode.DocumentSymbol {\n\t\t\t\tstatic to(symbol: modes.DocumentSymbol): MergedInfo {\n\t\t\t\t\tconst res = new MergedInfo(\n\t\t\t\t\t\tsymbol.name,\n\t\t\t\t\t\ttypeConverters.SymbolKind.to(symbol.kind),\n\t\t\t\t\t\tsymbol.containerName || '',\n\t\t\t\t\t\tnew types.Location(apiArgs[0], typeConverters.Range.to(symbol.range))\n\t\t\t\t\t);\n\t\t\t\t\tres.detail = symbol.detail;\n\t\t\t\t\tres.range = res.location.range;\n\t\t\t\t\tres.selectionRange = typeConverters.Range.to(symbol.selectionRange);\n\t\t\t\t\tres.children = symbol.children ? symbol.children.map(MergedInfo.to) : [];\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\n\t\t\t\tdetail!: string;\n\t\t\t\trange!: vscode.Range;\n\t\t\t\tselectionRange!: vscode.Range;\n\t\t\t\tchildren!: vscode.DocumentSymbol[];\n\t\t\t\toverride containerName!: string;\n\t\t\t}\n\t\t\treturn value.map(MergedInfo.to);\n\n\t\t})\n\t),\n\t// -- formatting\n\tnew ApiCommand(\n\t\t'vscode.executeFormatDocumentProvider', '_executeFormatDocumentProvider', 'Execute document format provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatRangeProvider', '_executeFormatRangeProvider', 'Execute range format provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatOnTypeProvider', '_executeFormatOnTypeProvider', 'Execute format on type provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, new ApiCommandArgument('ch', 'Trigger character', v => typeof v === 'string', v => v), new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\t// -- go to symbol (definition, type definition, declaration, impl, references)\n\tnew ApiCommand(\n\t\t'vscode.executeDefinitionProvider', '_executeDefinitionProvider', 'Execute all definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeTypeDefinitionProvider', '_executeTypeDefinitionProvider', 'Execute all type definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeDeclarationProvider', '_executeDeclarationProvider', 'Execute all declaration providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeImplementationProvider', '_executeImplementationProvider', 'Execute all implementation providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeReferenceProvider', '_executeReferenceProvider', 'Execute all reference providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.Location[], types.Location[] | undefined>('A promise that resolves to an array of Location-instances.', tryMapWith(typeConverters.location.to))\n\t),\n\t// -- hover\n\tnew ApiCommand(\n\t\t'vscode.executeHoverProvider', '_executeHoverProvider', 'Execute all hover providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.Hover[], types.Hover[] | undefined>('A promise that resolves to an array of Hover-instances.', tryMapWith(typeConverters.Hover.to))\n\t),\n\t// -- selection range\n\tnew ApiCommand(\n\t\t'vscode.executeSelectionRangeProvider', '_executeSelectionRangeProvider', 'Execute selection range provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument<types.Position[], IPosition[]>('position', 'A position in a text document', v => Array.isArray(v) && v.every(v => types.Position.isPosition(v)), v => v.map(typeConverters.Position.from))],\n\t\tnew ApiCommandResult<IRange[][], types.SelectionRange[]>('A promise that resolves to an array of ranges.', result => {\n\t\t\treturn result.map(ranges => {\n\t\t\t\tlet node: types.SelectionRange | undefined;\n\t\t\t\tfor (const range of ranges.reverse()) {\n\t\t\t\t\tnode = new types.SelectionRange(typeConverters.Range.to(range), node);\n\t\t\t\t}\n\t\t\t\treturn node!;\n\t\t\t});\n\t\t})\n\t),\n\t// -- symbol search\n\tnew ApiCommand(\n\t\t'vscode.executeWorkspaceSymbolProvider', '_executeWorkspaceSymbolProvider', 'Execute all workspace symbol providers.',\n\t\t[ApiCommandArgument.String.with('query', 'Search string')],\n\t\tnew ApiCommandResult<[search.IWorkspaceSymbolProvider, search.IWorkspaceSymbol[]][], types.SymbolInformation[]>('A promise that resolves to an array of SymbolInformation-instances.', value => {\n\t\t\tconst result: types.SymbolInformation[] = [];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (let tuple of value) {\n\t\t\t\t\tresult.push(...tuple[1].map(typeConverters.WorkspaceSymbol.to));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t})\n\t),\n\t// --- call hierarchy\n\tnew ApiCommand(\n\t\t'vscode.prepareCallHierarchy', '_executePrepareCallHierarchy', 'Prepare call hierarchy at a position inside a document',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<ICallHierarchyItemDto[], types.CallHierarchyItem[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyItem.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideIncomingCalls', '_executeProvideIncomingCalls', 'Compute incoming calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IIncomingCallDto[], types.CallHierarchyIncomingCall[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyIncomingCall.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideOutgoingCalls', '_executeProvideOutgoingCalls', 'Compute outgoing calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IOutgoingCallDto[], types.CallHierarchyOutgoingCall[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyOutgoingCall.to))\n\t),\n\t// --- rename\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentRenameProvider', '_executeDocumentRenameProvider', 'Execute rename provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, ApiCommandArgument.String.with('newName', 'The new symbol name')],\n\t\tnew ApiCommandResult<IWorkspaceEditDto & { rejectReason?: string }, types.WorkspaceEdit | undefined>('A promise that resolves to a WorkspaceEdit.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\tthrow new Error(value.rejectReason);\n\t\t\t}\n\t\t\treturn typeConverters.WorkspaceEdit.to(value);\n\t\t})\n\t),\n\t// --- links\n\tnew ApiCommand(\n\t\t'vscode.executeLinkProvider', '_executeLinkProvider', 'Execute document link provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Number.with('linkResolveCount', 'Number of links that should be resolved, only when links are unresolved.').optional()],\n\t\tnew ApiCommandResult<modes.ILink[], vscode.DocumentLink[]>('A promise that resolves to an array of DocumentLink-instances.', value => value.map(typeConverters.DocumentLink.to))\n\t),\n\t// --- semantic tokens\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentSemanticTokensLegend', '_provideDocumentSemanticTokensLegend', 'Provide semantic tokens legend for a document',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<modes.SemanticTokensLegend, types.SemanticTokensLegend | undefined>('A promise that resolves to SemanticTokensLegend.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(value.tokenTypes, value.tokenModifiers);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentSemanticTokens', '_provideDocumentSemanticTokens', 'Provide semantic tokens for a document',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>('A promise that resolves to SemanticTokens.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\tif (semanticTokensDto.type !== 'full') {\n\t\t\t\t// only accepting full semantic tokens from provideDocumentSemanticTokens\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokens(semanticTokensDto.data, undefined);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentRangeSemanticTokensLegend', '_provideDocumentRangeSemanticTokensLegend', 'Provide semantic tokens legend for a document range',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<modes.SemanticTokensLegend, types.SemanticTokensLegend | undefined>('A promise that resolves to SemanticTokensLegend.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(value.tokenTypes, value.tokenModifiers);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentRangeSemanticTokens', '_provideDocumentRangeSemanticTokens', 'Provide semantic tokens for a document range',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>('A promise that resolves to SemanticTokens.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\tif (semanticTokensDto.type !== 'full') {\n\t\t\t\t// only accepting full semantic tokens from provideDocumentRangeSemanticTokens\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokens(semanticTokensDto.data, undefined);\n\t\t})\n\t),\n\t// --- completions\n\tnew ApiCommand(\n\t\t'vscode.executeCompletionItemProvider', '_executeCompletionItemProvider', 'Execute completion item provider.',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tApiCommandArgument.String.with('triggerCharacter', 'Trigger completion when the user types the character, like `,` or `(`').optional(),\n\t\t\tApiCommandArgument.Number.with('itemResolveCount', 'Number of completions to resolve (too large numbers slow down completions)').optional()\n\t\t],\n\t\tnew ApiCommandResult<modes.CompletionList, vscode.CompletionList>('A promise that resolves to a CompletionList-instance.', (value, _args, converter) => {\n\t\t\tif (!value) {\n\t\t\t\treturn new types.CompletionList([]);\n\t\t\t}\n\t\t\tconst items = value.suggestions.map(suggestion => typeConverters.CompletionItem.to(suggestion, converter));\n\t\t\treturn new types.CompletionList(items, value.incomplete);\n\t\t})\n\t),\n\t// --- signature help\n\tnew ApiCommand(\n\t\t'vscode.executeSignatureHelpProvider', '_executeSignatureHelpProvider', 'Execute signature help provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, ApiCommandArgument.String.with('triggerCharacter', 'Trigger signature help when the user types the character, like `,` or `(`').optional()],\n\t\tnew ApiCommandResult<modes.SignatureHelp, vscode.SignatureHelp | undefined>('A promise that resolves to SignatureHelp.', value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t),\n\t// --- code lens\n\tnew ApiCommand(\n\t\t'vscode.executeCodeLensProvider', '_executeCodeLensProvider', 'Execute code lens provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Number.with('itemResolveCount', 'Number of lenses that should be resolved and returned. Will only return resolved lenses, will impact performance)').optional()],\n\t\tnew ApiCommandResult<modes.CodeLens[], vscode.CodeLens[] | undefined>('A promise that resolves to an array of CodeLens-instances.', (value, _args, converter) => {\n\t\t\treturn tryMapWith<modes.CodeLens, vscode.CodeLens>(item => {\n\t\t\t\treturn new types.CodeLens(typeConverters.Range.to(item.range), item.command && converter.fromInternal(item.command));\n\t\t\t})(value);\n\t\t})\n\t),\n\t// --- code actions\n\tnew ApiCommand(\n\t\t'vscode.executeCodeActionProvider', '_executeCodeActionProvider', 'Execute code action provider.',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument('rangeOrSelection', 'Range in a text document. Some refactoring provider requires Selection object.', v => types.Range.isRange(v), v => types.Selection.isSelection(v) ? typeConverters.Selection.from(v) : typeConverters.Range.from(v)),\n\t\t\tApiCommandArgument.String.with('kind', 'Code action kind to return code actions for').optional(),\n\t\t\tApiCommandArgument.Number.with('itemResolveCount', 'Number of code actions to resolve (too large numbers slow down code actions)').optional()\n\t\t],\n\t\tnew ApiCommandResult<CustomCodeAction[], (vscode.CodeAction | vscode.Command | undefined)[] | undefined>('A promise that resolves to an array of Command-instances.', (value, _args, converter) => {\n\t\t\treturn tryMapWith<CustomCodeAction, vscode.CodeAction | vscode.Command | undefined>((codeAction) => {\n\t\t\t\tif (codeAction._isSynthetic) {\n\t\t\t\t\tif (!codeAction.command) {\n\t\t\t\t\t\tthrow new Error('Synthetic code actions must have a command');\n\t\t\t\t\t}\n\t\t\t\t\treturn converter.fromInternal(codeAction.command);\n\t\t\t\t} else {\n\t\t\t\t\tconst ret = new types.CodeAction(\n\t\t\t\t\t\tcodeAction.title,\n\t\t\t\t\t\tcodeAction.kind ? new types.CodeActionKind(codeAction.kind) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tif (codeAction.edit) {\n\t\t\t\t\t\tret.edit = typeConverters.WorkspaceEdit.to(codeAction.edit);\n\t\t\t\t\t}\n\t\t\t\t\tif (codeAction.command) {\n\t\t\t\t\t\tret.command = converter.fromInternal(codeAction.command);\n\t\t\t\t\t}\n\t\t\t\t\tret.isPreferred = codeAction.isPreferred;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t})(value);\n\t\t})\n\t),\n\t// --- colors\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentColorProvider', '_executeDocumentColorProvider', 'Execute document color provider.',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<IRawColorInfo[], vscode.ColorInformation[]>('A promise that resolves to an array of ColorInformation objects.', result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(ci => new types.ColorInformation(typeConverters.Range.to(ci.range), typeConverters.Color.to(ci.color)));\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeColorPresentationProvider', '_executeColorPresentationProvider', 'Execute color presentation provider.',\n\t\t[\n\t\t\tnew ApiCommandArgument<types.Color, [number, number, number, number]>('color', 'The color to show and insert', v => v instanceof types.Color, typeConverters.Color.from),\n\t\t\tnew ApiCommandArgument<{ uri: URI, range: types.Range; }, { uri: URI, range: IRange; }>('context', 'Context object with uri and range', _v => true, v => ({ uri: v.uri, range: typeConverters.Range.from(v.range) })),\n\t\t],\n\t\tnew ApiCommandResult<modes.IColorPresentation[], types.ColorPresentation[]>('A promise that resolves to an array of ColorPresentation objects.', result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(typeConverters.ColorPresentation.to);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t),\n\t// --- inline hints\n\tnew ApiCommand(\n\t\t'vscode.executeInlineHintProvider', '_executeInlineHintProvider', 'Execute inline hints provider',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<modes.InlineHint[], vscode.InlineHint[]>('A promise that resolves to an array of InlineHint objects', result => {\n\t\t\treturn result.map(typeConverters.InlineHint.to);\n\t\t})\n\t),\n\t// --- notebooks\n\tnew ApiCommand(\n\t\t'vscode.resolveNotebookContentProviders', '_resolveNotebookContentProvider', 'Resolve Notebook Content Providers',\n\t\t[\n\t\t\t// new ApiCommandArgument<string, string>('viewType', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<string, string>('displayName', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<object, object>('options', '', v => typeof v === 'object', v => v),\n\t\t],\n\t\tnew ApiCommandResult<{\n\t\t\tviewType: string;\n\t\t\tdisplayName: string;\n\t\t\toptions: { transientOutputs: boolean; transientCellMetadata: TransientCellMetadata; transientDocumentMetadata: TransientDocumentMetadata; };\n\t\t\tfilenamePattern: (string | types.RelativePattern | { include: string | types.RelativePattern, exclude: string | types.RelativePattern })[]\n\t\t}[], {\n\t\t\tviewType: string;\n\t\t\tdisplayName: string;\n\t\t\tfilenamePattern: (vscode.GlobPattern | { include: vscode.GlobPattern; exclude: vscode.GlobPattern; })[];\n\t\t\toptions: vscode.NotebookDocumentContentOptions;\n\t\t}[] | undefined>('A promise that resolves to an array of NotebookContentProvider static info objects.', tryMapWith(item => {\n\t\t\treturn {\n\t\t\t\tviewType: item.viewType,\n\t\t\t\tdisplayName: item.displayName,\n\t\t\t\toptions: {\n\t\t\t\t\ttransientOutputs: item.options.transientOutputs,\n\t\t\t\t\ttransientCellMetadata: item.options.transientCellMetadata,\n\t\t\t\t\ttransientDocumentMetadata: item.options.transientDocumentMetadata\n\t\t\t\t},\n\t\t\t\tfilenamePattern: item.filenamePattern.map(pattern => typeConverters.NotebookExclusiveDocumentPattern.to(pattern))\n\t\t\t};\n\t\t}))\n\t),\n\t// --- debug support\n\tnew ApiCommand(\n\t\t'vscode.executeInlineValueProvider', '_executeInlineValueProvider', 'Execute inline value provider',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<modes.InlineValue[], vscode.InlineValue[]>('A promise that resolves to an array of InlineValue objects', result => {\n\t\t\treturn result.map(typeConverters.InlineValue.to);\n\t\t})\n\t),\n\t// --- open'ish commands\n\tnew ApiCommand(\n\t\t'vscode.open', '_workbench.open', 'Opens the provided resource in the editor. Can be a text or binary file, or an http(s) URL. If you need more control over the options for opening a text file, use vscode.window.showTextDocument instead.',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument<vscode.ViewColumn | typeConverters.TextEditorOpenOptions | undefined, [number?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'number' || typeof v === 'object',\n\t\t\t\tv => !v ? v : typeof v === 'number' ? [v, undefined] : [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)]\n\t\t\t).optional(),\n\t\t\tApiCommandArgument.String.with('label', '').optional()\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\tnew ApiCommand(\n\t\t'vscode.openWith', '_workbench.openWith', 'Opens the provided resource with a specific editor.',\n\t\t[\n\t\t\tApiCommandArgument.Uri.with('resource', 'Resource to open'),\n\t\t\tApiCommandArgument.String.with('viewId', 'Custom editor view id or \\'default\\' to use VS Code\\'s default editor'),\n\t\t\tnew ApiCommandArgument<vscode.ViewColumn | typeConverters.TextEditorOpenOptions | undefined, [number?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'number' || typeof v === 'object',\n\t\t\t\tv => !v ? v : typeof v === 'number' ? [v, undefined] : [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)],\n\t\t\t).optional()\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\tnew ApiCommand(\n\t\t'vscode.diff', '_workbench.diff', 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t[\n\t\t\tApiCommandArgument.Uri.with('left', 'Left-hand side resource of the diff editor'),\n\t\t\tApiCommandArgument.Uri.with('right', 'Right-hand side resource of the diff editor'),\n\t\t\tApiCommandArgument.String.with('title', 'Human readable title for the diff editor').optional(),\n\t\t\tnew ApiCommandArgument<typeConverters.TextEditorOpenOptions | undefined, [number?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'object',\n\t\t\t\tv => v && [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)]\n\t\t\t).optional(),\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n];\n\n//#endregion\n\n\n//#region OLD world\n\nexport class ExtHostApiCommands {\n\n\tstatic register(commands: ExtHostCommands) {\n\t\tnewCommands.forEach(commands.registerApiCommand, commands);\n\t\treturn new ExtHostApiCommands(commands).registerCommands();\n\t}\n\n\tprivate _commands: ExtHostCommands;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate constructor(commands: ExtHostCommands) {\n\t\tthis._commands = commands;\n\t}\n\n\tregisterCommands() {\n\n\n\n\n\n\t\t// -----------------------------------------------------------------\n\t\t// The following commands are registered on both sides separately.\n\t\t//\n\t\t// We are trying to maintain backwards compatibility for cases where\n\t\t// API commands are encoded as markdown links, for example.\n\t\t// -----------------------------------------------------------------\n\n\t\ttype ICommandHandler = (...args: any[]) => any;\n\t\tconst adjustHandler = (handler: (executor: ICommandsExecutor, ...args: any[]) => any): ICommandHandler => {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\treturn handler(this._commands, ...args);\n\t\t\t};\n\t\t};\n\n\t\tthis._register(RemoveFromRecentlyOpenedAPICommand.ID, adjustHandler(RemoveFromRecentlyOpenedAPICommand.execute), {\n\t\t\tdescription: 'Removes an entry with the given path from the recently opened list.',\n\t\t\targs: [\n\t\t\t\t{ name: 'path', description: 'Path to remove from recently opened.', constraint: (value: any) => typeof value === 'string' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(OpenIssueReporter.ID, adjustHandler(OpenIssueReporter.execute), {\n\t\t\tdescription: 'Opens the issue reporter with the provided extension id as the selected source',\n\t\t\targs: [\n\t\t\t\t{ name: 'extensionId', description: 'extensionId to report an issue on', constraint: (value: unknown) => typeof value === 'string' || (typeof value === 'object' && typeof (value as OpenIssueReporterArgs).extensionId === 'string') }\n\t\t\t]\n\t\t});\n\t}\n\n\t// --- command impl\n\n\t/**\n\t * @deprecated use the ApiCommand instead\n\t */\n\tprivate _register(id: string, handler: (...args: any[]) => any, description?: ICommandHandlerDescription): void {\n\t\tconst disposable = this._commands.registerCommand(false, id, handler, this, description);\n\t\tthis._disposables.add(disposable);\n\t}\n\n\n\n}\n\nfunction tryMapWith<T, R>(f: (x: T) => R) {\n\treturn (value: T[]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(f);\n\t\t}\n\t\treturn undefined;\n\t};\n}\n\nfunction mapLocationOrLocationLink(values: (modes.Location | modes.LocationLink)[]): (types.Location | vscode.LocationLink)[] | undefined {\n\tif (!Array.isArray(values)) {\n\t\treturn undefined;\n\t}\n\tconst result: (types.Location | vscode.LocationLink)[] = [];\n\tfor (const item of values) {\n\t\tif (modes.isLocationLink(item)) {\n\t\t\tresult.push(typeConverters.DefinitionLink.to(item));\n\t\t} else {\n\t\t\tresult.push(typeConverters.location.to(item));\n\t\t}\n\t}\n\treturn result;\n}\n"]}