{"version":3,"file":"extHostFileSystemEventService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostFileSystemEventService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { AsyncEmitter, IWaitUntil } from 'vs/base/common/async';\nimport { IRelativePattern, parse } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport type * as vscode from 'vscode';\nimport { ExtHostFileSystemEventServiceShape, FileSystemEvents, IMainContext, SourceTargetPair, IWorkspaceEditDto, IWillRunFileOperationParticipation } from './extHost.protocol';\nimport * as typeConverter from './extHostTypeConverters';\nimport { Disposable, WorkspaceEdit } from './extHostTypes';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileOperation } from 'vs/platform/files/common/files';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nclass FileSystemWatcher implements vscode.FileSystemWatcher {\n\n\tprivate readonly _onDidCreate = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidChange = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidDelete = new Emitter<vscode.Uri>();\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean {\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean {\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean {\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(dispatcher: Event<FileSystemEvents>, globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean) {\n\n\t\tthis._config = 0;\n\t\tif (ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tconst parsedPattern = parse(globPattern);\n\n\t\tconst subscription = dispatcher(events => {\n\t\t\tif (!ignoreCreateEvents) {\n\t\t\t\tfor (let created of events.created) {\n\t\t\t\t\tconst uri = URI.revive(created);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidCreate.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreChangeEvents) {\n\t\t\t\tfor (let changed of events.changed) {\n\t\t\t\t\tconst uri = URI.revive(changed);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreDeleteEvents) {\n\t\t\t\tfor (let deleted of events.deleted) {\n\t\t\t\t\tconst uri = URI.revive(deleted);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidDelete.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<vscode.Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<vscode.Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<vscode.Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nexport class ExtHostFileSystemEventService implements ExtHostFileSystemEventServiceShape {\n\n\tprivate readonly _onFileSystemEvent = new Emitter<FileSystemEvents>();\n\n\tprivate readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n\tprivate readonly _onDidCreateFile = new Emitter<vscode.FileCreateEvent>();\n\tprivate readonly _onDidDeleteFile = new Emitter<vscode.FileDeleteEvent>();\n\tprivate readonly _onWillRenameFile = new AsyncEmitter<vscode.FileWillRenameEvent>();\n\tprivate readonly _onWillCreateFile = new AsyncEmitter<vscode.FileWillCreateEvent>();\n\tprivate readonly _onWillDeleteFile = new AsyncEmitter<vscode.FileWillDeleteEvent>();\n\n\treadonly onDidRenameFile: Event<vscode.FileRenameEvent> = this._onDidRenameFile.event;\n\treadonly onDidCreateFile: Event<vscode.FileCreateEvent> = this._onDidCreateFile.event;\n\treadonly onDidDeleteFile: Event<vscode.FileDeleteEvent> = this._onDidDeleteFile.event;\n\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors\n\t) {\n\t\t//\n\t}\n\n\t//--- file events\n\n\tcreateFileSystemWatcher(globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): vscode.FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._onFileSystemEvent.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n\t}\n\n\t$onFileEvent(events: FileSystemEvents) {\n\t\tthis._onFileSystemEvent.fire(events);\n\t}\n\n\n\t//--- file operations\n\n\t$onDidRunFileOperation(operation: FileOperation, files: SourceTargetPair[]): void {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\tthis._onDidRenameFile.fire(Object.freeze({ files: files.map(f => ({ oldUri: URI.revive(f.source!), newUri: URI.revive(f.target) })) }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\tthis._onDidDeleteFile.fire(Object.freeze({ files: files.map(f => URI.revive(f.target)) }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.CREATE:\n\t\t\t\tthis._onDidCreateFile.fire(Object.freeze({ files: files.map(f => URI.revive(f.target)) }));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//ignore, dont send\n\t\t}\n\t}\n\n\n\tgetOnWillRenameFileEvent(extension: IExtensionDescription): Event<vscode.FileWillRenameEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillRenameFile);\n\t}\n\n\tgetOnWillCreateFileEvent(extension: IExtensionDescription): Event<vscode.FileWillCreateEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillCreateFile);\n\t}\n\n\tgetOnWillDeleteFileEvent(extension: IExtensionDescription): Event<vscode.FileWillDeleteEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillDeleteFile);\n\t}\n\n\tprivate _createWillExecuteEvent<E extends IWaitUntil>(extension: IExtensionDescription, emitter: AsyncEmitter<E>): Event<E> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<E> = function wrapped(e: E) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn emitter.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $onWillRunFileOperation(operation: FileOperation, files: SourceTargetPair[], timeout: number, token: CancellationToken): Promise<IWillRunFileOperationParticipation | undefined> {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\treturn await this._fireWillEvent(this._onWillRenameFile, { files: files.map(f => ({ oldUri: URI.revive(f.source!), newUri: URI.revive(f.target) })) }, timeout, token);\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\treturn await this._fireWillEvent(this._onWillDeleteFile, { files: files.map(f => URI.revive(f.target)) }, timeout, token);\n\t\t\tcase FileOperation.CREATE:\n\t\t\t\treturn await this._fireWillEvent(this._onWillCreateFile, { files: files.map(f => URI.revive(f.target)) }, timeout, token);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _fireWillEvent<E extends IWaitUntil>(emitter: AsyncEmitter<E>, data: Omit<E, 'waitUntil'>, timeout: number, token: CancellationToken): Promise<IWillRunFileOperationParticipation | undefined> {\n\n\t\tconst extensionNames = new Set<string>();\n\t\tconst edits: WorkspaceEdit[] = [];\n\n\t\tawait emitter.fireAsync(data, token, async (thenable, listener) => {\n\t\t\t// ignore all results except for WorkspaceEdits. Those are stored in an array.\n\t\t\tconst now = Date.now();\n\t\t\tconst result = await Promise.resolve(thenable);\n\t\t\tif (result instanceof WorkspaceEdit) {\n\t\t\t\tedits.push(result);\n\t\t\t\textensionNames.add((<IExtensionListener<E>>listener).extension.displayName ?? (<IExtensionListener<E>>listener).extension.identifier.value);\n\t\t\t}\n\n\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\tthis._logService.warn('SLOW file-participant', (<IExtensionListener<E>>listener).extension.identifier);\n\t\t\t}\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// concat all WorkspaceEdits collected via waitUntil-call and send them over to the renderer\n\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\tfor (let edit of edits) {\n\t\t\tlet { edits } = typeConverter.WorkspaceEdit.from(edit, this._extHostDocumentsAndEditors);\n\t\t\tdto.edits = dto.edits.concat(edits);\n\t\t}\n\t\treturn { edit: dto, extensionNames: Array.from(extensionNames) };\n\t}\n}\n"]}