{"version":3,"file":"extHostTimeline.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostTimeline.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { UriComponents, URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostTimelineShape, MainThreadTimelineShape, IMainContext, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { Timeline, TimelineItem, TimelineOptions, TimelineProvider, InternalTimelineOptions } from 'vs/workbench/contrib/timeline/common/timeline';\nimport { IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CommandsConverter, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ThemeIcon } from 'vs/workbench/api/common/extHostTypes';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport interface IExtHostTimeline extends ExtHostTimelineShape {\n\treadonly _serviceBrand: undefined;\n\t$getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\nexport const IExtHostTimeline = createDecorator<IExtHostTimeline>('IExtHostTimeline');\n\nexport class ExtHostTimeline implements IExtHostTimeline {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadTimelineShape;\n\n\tprivate _providers = new Map<string, TimelineProvider>();\n\n\tprivate _itemsBySourceAndUriMap = new Map<string, Map<string | undefined, Map<string, vscode.TimelineItem>>>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTimeline);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 11) {\n\t\t\t\t\tconst uri = arg.uri === undefined ? undefined : URI.revive(arg.uri);\n\t\t\t\t\treturn this._itemsBySourceAndUriMap.get(arg.source)?.get(getUriKey(uri))?.get(arg.handle);\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined> {\n\t\tconst provider = this._providers.get(id);\n\t\treturn provider?.provideTimeline(URI.revive(uri), options, token, internalOptions);\n\t}\n\n\tregisterTimelineProvider(scheme: string | string[], provider: vscode.TimelineProvider, _extensionId: ExtensionIdentifier, commandConverter: CommandsConverter): IDisposable {\n\t\tconst timelineDisposables = new DisposableStore();\n\n\t\tconst convertTimelineItem = this.convertTimelineItem(provider.id, commandConverter, timelineDisposables).bind(this);\n\n\t\tlet disposable: IDisposable | undefined;\n\t\tif (provider.onDidChange) {\n\t\t\tdisposable = provider.onDidChange(e => this._proxy.$emitTimelineChangeEvent({ uri: undefined, reset: true, ...e, id: provider.id }), this);\n\t\t}\n\n\t\tconst itemsBySourceAndUriMap = this._itemsBySourceAndUriMap;\n\t\treturn this.registerTimelineProviderCore({\n\t\t\t...provider,\n\t\t\tscheme: scheme,\n\t\t\tonDidChange: undefined,\n\t\t\tasync provideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: InternalTimelineOptions) {\n\t\t\t\tif (internalOptions?.resetCache) {\n\t\t\t\t\ttimelineDisposables.clear();\n\n\t\t\t\t\t// For now, only allow the caching of a single Uri\n\t\t\t\t\t// itemsBySourceAndUriMap.get(provider.id)?.get(getUriKey(uri))?.clear();\n\t\t\t\t\titemsBySourceAndUriMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tconst result = await provider.provideTimeline(uri, options, token);\n\t\t\t\tif (result === undefined || result === null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Should we bother converting all the data if we aren't caching? Meaning it is being requested by an extension?\n\n\t\t\t\tconst convertItem = convertTimelineItem(uri, internalOptions);\n\t\t\t\treturn {\n\t\t\t\t\t...result,\n\t\t\t\t\tsource: provider.id,\n\t\t\t\t\titems: result.items.map(convertItem)\n\t\t\t\t};\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tfor (const sourceMap of itemsBySourceAndUriMap.values()) {\n\t\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tdisposable?.dispose();\n\t\t\t\ttimelineDisposables.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertTimelineItem(source: string, commandConverter: CommandsConverter, disposables: DisposableStore) {\n\t\treturn (uri: URI, options?: InternalTimelineOptions) => {\n\t\t\tlet items: Map<string, vscode.TimelineItem> | undefined;\n\t\t\tif (options?.cacheResults) {\n\t\t\t\tlet itemsByUri = this._itemsBySourceAndUriMap.get(source);\n\t\t\t\tif (itemsByUri === undefined) {\n\t\t\t\t\titemsByUri = new Map();\n\t\t\t\t\tthis._itemsBySourceAndUriMap.set(source, itemsByUri);\n\t\t\t\t}\n\n\t\t\t\tconst uriKey = getUriKey(uri);\n\t\t\t\titems = itemsByUri.get(uriKey);\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\titems = new Map();\n\t\t\t\t\titemsByUri.set(uriKey, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (item: vscode.TimelineItem): TimelineItem => {\n\t\t\t\tconst { iconPath, ...props } = item;\n\n\t\t\t\tconst handle = `${source}|${item.id ?? item.timestamp}`;\n\t\t\t\titems?.set(handle, item);\n\n\t\t\t\tlet icon;\n\t\t\t\tlet iconDark;\n\t\t\t\tlet themeIcon;\n\t\t\t\tif (item.iconPath) {\n\t\t\t\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\t\t\t\tthemeIcon = { id: iconPath.id };\n\t\t\t\t\t}\n\t\t\t\t\telse if (URI.isUri(iconPath)) {\n\t\t\t\t\t\ticon = iconPath;\n\t\t\t\t\t\ticonDark = iconPath;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t({ light: icon, dark: iconDark } = iconPath as { light: URI; dark: URI });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...props,\n\t\t\t\t\tid: props.id ?? undefined,\n\t\t\t\t\thandle: handle,\n\t\t\t\t\tsource: source,\n\t\t\t\t\tcommand: item.command ? commandConverter.toInternal(item.command, disposables) : undefined,\n\t\t\t\t\ticon: icon,\n\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\tthemeIcon: themeIcon,\n\t\t\t\t\taccessibilityInformation: item.accessibilityInformation\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate registerTimelineProviderCore(provider: TimelineProvider): IDisposable {\n\t\t// console.log(`ExtHostTimeline#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst existing = this._providers.get(provider.id);\n\t\tif (existing) {\n\t\t\tthrow new Error(`Timeline Provider ${provider.id} already exists.`);\n\t\t}\n\n\t\tthis._proxy.$registerTimelineProvider({\n\t\t\tid: provider.id,\n\t\t\tlabel: provider.label,\n\t\t\tscheme: provider.scheme\n\t\t});\n\t\tthis._providers.set(provider.id, provider);\n\n\t\treturn toDisposable(() => {\n\t\t\tfor (const sourceMap of this._itemsBySourceAndUriMap.values()) {\n\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t}\n\n\t\t\tthis._providers.delete(provider.id);\n\t\t\tthis._proxy.$unregisterTimelineProvider(provider.id);\n\t\t\tprovider.dispose();\n\t\t});\n\t}\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n\treturn uri?.toString();\n}\n"]}