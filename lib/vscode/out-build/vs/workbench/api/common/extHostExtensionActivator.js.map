{"version":3,"file":"extHostExtensionActivator.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostExtensionActivator.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { MissingExtensionDependency } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst NO_OP_VOID_PROMISE = Promise.resolve<void>(undefined);\n\n/**\n * Represents the source code (module) of an extension.\n */\nexport interface IExtensionModule {\n\tactivate?(ctx: vscode.ExtensionContext): Promise<IExtensionAPI>;\n\tdeactivate?(): void;\n}\n\n/**\n * Represents the API of an extension (return value of `activate`).\n */\nexport interface IExtensionAPI {\n\t// _extensionAPIBrand: any;\n}\n\nexport type ExtensionActivationTimesFragment = {\n\tstartup?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcodeLoadingTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tactivateCallTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tactivateResolvedTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\n\nexport class ExtensionActivationTimes {\n\n\tpublic static readonly NONE = new ExtensionActivationTimes(false, -1, -1, -1);\n\n\tpublic readonly startup: boolean;\n\tpublic readonly codeLoadingTime: number;\n\tpublic readonly activateCallTime: number;\n\tpublic readonly activateResolvedTime: number;\n\n\tconstructor(startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number) {\n\t\tthis.startup = startup;\n\t\tthis.codeLoadingTime = codeLoadingTime;\n\t\tthis.activateCallTime = activateCallTime;\n\t\tthis.activateResolvedTime = activateResolvedTime;\n\t}\n}\n\nexport class ExtensionActivationTimesBuilder {\n\n\tprivate readonly _startup: boolean;\n\tprivate _codeLoadingStart: number;\n\tprivate _codeLoadingStop: number;\n\tprivate _activateCallStart: number;\n\tprivate _activateCallStop: number;\n\tprivate _activateResolveStart: number;\n\tprivate _activateResolveStop: number;\n\n\tconstructor(startup: boolean) {\n\t\tthis._startup = startup;\n\t\tthis._codeLoadingStart = -1;\n\t\tthis._codeLoadingStop = -1;\n\t\tthis._activateCallStart = -1;\n\t\tthis._activateCallStop = -1;\n\t\tthis._activateResolveStart = -1;\n\t\tthis._activateResolveStop = -1;\n\t}\n\n\tprivate _delta(start: number, stop: number): number {\n\t\tif (start === -1 || stop === -1) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn stop - start;\n\t}\n\n\tpublic build(): ExtensionActivationTimes {\n\t\treturn new ExtensionActivationTimes(\n\t\t\tthis._startup,\n\t\t\tthis._delta(this._codeLoadingStart, this._codeLoadingStop),\n\t\t\tthis._delta(this._activateCallStart, this._activateCallStop),\n\t\t\tthis._delta(this._activateResolveStart, this._activateResolveStop)\n\t\t);\n\t}\n\n\tpublic codeLoadingStart(): void {\n\t\tthis._codeLoadingStart = Date.now();\n\t}\n\n\tpublic codeLoadingStop(): void {\n\t\tthis._codeLoadingStop = Date.now();\n\t}\n\n\tpublic activateCallStart(): void {\n\t\tthis._activateCallStart = Date.now();\n\t}\n\n\tpublic activateCallStop(): void {\n\t\tthis._activateCallStop = Date.now();\n\t}\n\n\tpublic activateResolveStart(): void {\n\t\tthis._activateResolveStart = Date.now();\n\t}\n\n\tpublic activateResolveStop(): void {\n\t\tthis._activateResolveStop = Date.now();\n\t}\n}\n\nexport class ActivatedExtension {\n\n\tpublic readonly activationFailed: boolean;\n\tpublic readonly activationFailedError: Error | null;\n\tpublic readonly activationTimes: ExtensionActivationTimes;\n\tpublic readonly module: IExtensionModule;\n\tpublic readonly exports: IExtensionAPI | undefined;\n\tpublic readonly subscriptions: IDisposable[];\n\n\tconstructor(\n\t\tactivationFailed: boolean,\n\t\tactivationFailedError: Error | null,\n\t\tactivationTimes: ExtensionActivationTimes,\n\t\tmodule: IExtensionModule,\n\t\texports: IExtensionAPI | undefined,\n\t\tsubscriptions: IDisposable[]\n\t) {\n\t\tthis.activationFailed = activationFailed;\n\t\tthis.activationFailedError = activationFailedError;\n\t\tthis.activationTimes = activationTimes;\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.subscriptions = subscriptions;\n\t}\n}\n\nexport class EmptyExtension extends ActivatedExtension {\n\tconstructor(activationTimes: ExtensionActivationTimes) {\n\t\tsuper(false, null, activationTimes, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class HostExtension extends ActivatedExtension {\n\tconstructor() {\n\t\tsuper(false, null, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class FailedExtension extends ActivatedExtension {\n\tconstructor(activationError: Error) {\n\t\tsuper(true, activationError, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport interface IExtensionsActivatorHost {\n\tonExtensionActivationError(extensionId: ExtensionIdentifier, error: Error | null, missingExtensionDependency: MissingExtensionDependency | null): void;\n\tactualActivateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension>;\n}\n\nexport interface ExtensionActivationReason {\n\treadonly startup: boolean;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly activationEvent: string;\n}\n\ntype ActivationIdAndReason = { id: ExtensionIdentifier, reason: ExtensionActivationReason };\n\nexport class ExtensionsActivator {\n\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _resolvedExtensionsSet: Set<string>;\n\tprivate readonly _hostExtensionsMap: Map<string, ExtensionIdentifier>;\n\tprivate readonly _host: IExtensionsActivatorHost;\n\tprivate readonly _activatingExtensions: Map<string, Promise<void>>;\n\tprivate readonly _activatedExtensions: Map<string, ActivatedExtension>;\n\t/**\n\t * A map of already activated events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _alreadyActivatedEvents: { [activationEvent: string]: boolean; };\n\n\tconstructor(\n\t\tregistry: ExtensionDescriptionRegistry,\n\t\tresolvedExtensions: ExtensionIdentifier[],\n\t\thostExtensions: ExtensionIdentifier[],\n\t\thost: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._registry = registry;\n\t\tthis._resolvedExtensionsSet = new Set<string>();\n\t\tresolvedExtensions.forEach((extensionId) => this._resolvedExtensionsSet.add(ExtensionIdentifier.toKey(extensionId)));\n\t\tthis._hostExtensionsMap = new Map<string, ExtensionIdentifier>();\n\t\thostExtensions.forEach((extensionId) => this._hostExtensionsMap.set(ExtensionIdentifier.toKey(extensionId), extensionId));\n\t\tthis._host = host;\n\t\tthis._activatingExtensions = new Map<string, Promise<void>>();\n\t\tthis._activatedExtensions = new Map<string, ActivatedExtension>();\n\t\tthis._alreadyActivatedEvents = Object.create(null);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\treturn this._activatedExtensions.has(extensionKey);\n\t}\n\n\tpublic getActivatedExtension(extensionId: ExtensionIdentifier): ActivatedExtension {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tconst activatedExtension = this._activatedExtensions.get(extensionKey);\n\t\tif (!activatedExtension) {\n\t\t\tthrow new Error('Extension `' + extensionId.value + '` is not known or not activated');\n\t\t}\n\t\treturn activatedExtension;\n\t}\n\n\tpublic activateByEvent(activationEvent: string, startup: boolean): Promise<void> {\n\t\tif (this._alreadyActivatedEvents[activationEvent]) {\n\t\t\treturn NO_OP_VOID_PROMISE;\n\t\t}\n\t\tconst activateExtensions = this._registry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\treturn this._activateExtensions(activateExtensions.map(e => ({\n\t\t\tid: e.identifier,\n\t\t\treason: { startup, extensionId: e.identifier, activationEvent }\n\t\t}))).then(() => {\n\t\t\tthis._alreadyActivatedEvents[activationEvent] = true;\n\t\t});\n\t}\n\n\tpublic activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst desc = this._registry.getExtensionDescription(extensionId);\n\t\tif (!desc) {\n\t\t\tthrow new Error('Extension `' + extensionId + '` is not known');\n\t\t}\n\n\t\treturn this._activateExtensions([{\n\t\t\tid: desc.identifier,\n\t\t\treason\n\t\t}]);\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentActivation: ActivationIdAndReason, greenExtensions: { [id: string]: ActivationIdAndReason; }, redExtensions: ActivationIdAndReason[]): void {\n\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(currentActivation.id))) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentActivation.id)] = currentActivation;\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentExtension = this._registry.getExtensionDescription(currentActivation.id);\n\t\tif (!currentExtension) {\n\t\t\t// Error condition 0: unknown extension\n\t\t\tconst error = new Error(`Cannot activate unknown extension '${currentActivation.id.value}'`);\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentActivation.id,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(currentActivation.id.value)\n\t\t\t);\n\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentActivation.id), new FailedExtension(error));\n\t\t\treturn;\n\t\t}\n\n\t\tconst depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tlet currentExtensionGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tconst depId = depIds[j];\n\n\t\t\tif (this._resolvedExtensionsSet.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// This dependency is already resolved\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst dep = this._activatedExtensions.get(ExtensionIdentifier.toKey(depId));\n\t\t\tif (dep && !dep.activationFailed) {\n\t\t\t\t// the dependency is already activated OK\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (dep && dep.activationFailed) {\n\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\tconst currentExtensionFriendlyName = currentExtension.displayName || currentExtension.identifier.value;\n\t\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\t\tconst depFriendlyName = (depDesc ? depDesc.displayName || depId : depId);\n\t\t\t\tconst error = new Error(`Cannot activate the '${currentExtensionFriendlyName}' extension because its dependency '${depFriendlyName}' failed to activate`);\n\t\t\t\t(<any>error).detail = dep.activationFailedError;\n\t\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\t\tcurrentExtension.identifier,\n\t\t\t\t\terror,\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = {\n\t\t\t\t\tid: this._hostExtensionsMap.get(ExtensionIdentifier.toKey(depId))!,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\tif (depDesc) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = {\n\t\t\t\t\tid: depDesc.identifier,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Error condition 1: unknown dependency\n\t\t\tconst currentExtensionFriendlyName = currentExtension.displayName || currentExtension.identifier.value;\n\t\t\tconst error = new Error(`Cannot activate the '${currentExtensionFriendlyName}' extension because it depends on unknown extension '${depId}'`);\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentExtension.identifier,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(depId)\n\t\t\t);\n\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentExtensionGetsGreenLight) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentExtension.identifier)] = currentActivation;\n\t\t} else {\n\t\t\tredExtensions.push(currentActivation);\n\t\t}\n\t}\n\n\tprivate _activateExtensions(extensions: ActivationIdAndReason[]): Promise<void> {\n\t\tif (extensions.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\textensions = extensions.filter((p) => !this._activatedExtensions.has(ExtensionIdentifier.toKey(p.id)));\n\t\tif (extensions.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst greenMap: { [id: string]: ActivationIdAndReason; } = Object.create(null),\n\t\t\tred: ActivationIdAndReason[] = [];\n\n\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(extensions[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tconst redExtensionKey = ExtensionIdentifier.toKey(red[i].id);\n\t\t\tif (greenMap[redExtensionKey]) {\n\t\t\t\tdelete greenMap[redExtensionKey];\n\t\t\t}\n\t\t}\n\n\t\tconst green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn Promise.all(green.map((p) => this._activateExtension(p.id, p.reason))).then(_ => undefined);\n\t\t}\n\n\t\treturn this._activateExtensions(green).then(_ => {\n\t\t\treturn this._activateExtensions(red);\n\t\t});\n\t}\n\n\tprivate _activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tif (this._activatedExtensions.has(extensionKey)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst currentlyActivatingExtension = this._activatingExtensions.get(extensionKey);\n\t\tif (currentlyActivatingExtension) {\n\t\t\treturn currentlyActivatingExtension;\n\t\t}\n\n\t\tconst newlyActivatingExtension = this._host.actualActivateExtension(extensionId, reason).then(undefined, (err) => {\n\n\t\t\tconst error = new Error();\n\t\t\tif (err && err.name) {\n\t\t\t\terror.name = err.name;\n\t\t\t}\n\t\t\tif (err && err.message) {\n\t\t\t\terror.message = `Activating extension '${extensionId.value}' failed: ${err.message}.`;\n\t\t\t} else {\n\t\t\t\terror.message = `Activating extension '${extensionId.value}' failed: ${err}.`;\n\t\t\t}\n\t\t\tif (err && err.stack) {\n\t\t\t\terror.stack = err.stack;\n\t\t\t}\n\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\textensionId,\n\t\t\t\terror,\n\t\t\t\tnull\n\t\t\t);\n\t\t\tthis._logService.error(`Activating extension ${extensionId.value} failed due to an error:`);\n\t\t\tthis._logService.error(err);\n\t\t\t// Treat the extension as being empty\n\t\t\treturn new FailedExtension(err);\n\t\t}).then((x: ActivatedExtension) => {\n\t\t\tthis._activatedExtensions.set(extensionKey, x);\n\t\t\tthis._activatingExtensions.delete(extensionKey);\n\t\t});\n\n\t\tthis._activatingExtensions.set(extensionKey, newlyActivatingExtension);\n\t\treturn newlyActivatingExtension;\n\t}\n}\n"]}