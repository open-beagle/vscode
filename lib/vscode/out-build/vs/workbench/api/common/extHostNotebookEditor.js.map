{"version":3,"file":"extHostNotebookEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostNotebookEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainThreadNotebookEditorsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport * as extHostConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport { CellEditType, ICellEditOperation, ICellReplaceEdit } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport * as vscode from 'vscode';\nimport { ExtHostNotebookDocument } from './extHostNotebookDocument';\n\ninterface INotebookEditData {\n\tdocumentVersionId: number;\n\tcellEdits: ICellEditOperation[];\n}\n\nclass NotebookEditorCellEditBuilder implements vscode.NotebookEditorEdit {\n\n\tprivate readonly _documentVersionId: number;\n\n\tprivate _finalized: boolean = false;\n\tprivate _collectedEdits: ICellEditOperation[] = [];\n\n\tconstructor(documentVersionId: number) {\n\t\tthis._documentVersionId = documentVersionId;\n\t}\n\n\tfinalize(): INotebookEditData {\n\t\tthis._finalized = true;\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tcellEdits: this._collectedEdits\n\t\t};\n\t}\n\n\tprivate _throwIfFinalized() {\n\t\tif (this._finalized) {\n\t\t\tthrow new Error('Edit is only valid while callback runs');\n\t\t}\n\t}\n\n\treplaceMetadata(value: vscode.NotebookDocumentMetadata): void {\n\t\tthis._throwIfFinalized();\n\t\tthis._collectedEdits.push({\n\t\t\teditType: CellEditType.DocumentMetadata,\n\t\t\tmetadata: value\n\t\t});\n\t}\n\n\treplaceCellMetadata(index: number, metadata: vscode.NotebookCellMetadata): void {\n\t\tthis._throwIfFinalized();\n\t\tthis._collectedEdits.push({\n\t\t\teditType: CellEditType.Metadata,\n\t\t\tindex,\n\t\t\tmetadata\n\t\t});\n\t}\n\n\treplaceCells(from: number, to: number, cells: vscode.NotebookCellData[]): void {\n\t\tthis._throwIfFinalized();\n\t\tif (from === to && cells.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._collectedEdits.push({\n\t\t\teditType: CellEditType.Replace,\n\t\t\tindex: from,\n\t\t\tcount: to - from,\n\t\t\tcells: cells.map(extHostConverter.NotebookCellData.from)\n\t\t});\n\t}\n}\n\nexport class ExtHostNotebookEditor {\n\n\tprivate _selections: vscode.NotebookRange[] = [];\n\tprivate _visibleRanges: vscode.NotebookRange[] = [];\n\tprivate _viewColumn?: vscode.ViewColumn;\n\n\tprivate _visible: boolean = false;\n\tprivate readonly _hasDecorationsForKey = new Set<string>();\n\n\tprivate _editor?: vscode.NotebookEditor;\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate readonly _proxy: MainThreadNotebookEditorsShape,\n\t\treadonly notebookData: ExtHostNotebookDocument,\n\t\tvisibleRanges: vscode.NotebookRange[],\n\t\tselections: vscode.NotebookRange[],\n\t\tviewColumn: vscode.ViewColumn | undefined\n\t) {\n\t\tthis._selections = selections;\n\t\tthis._visibleRanges = visibleRanges;\n\t\tthis._viewColumn = viewColumn;\n\t}\n\n\tget apiEditor(): vscode.NotebookEditor {\n\t\tif (!this._editor) {\n\t\t\tconst that = this;\n\t\t\tthis._editor = {\n\t\t\t\tget document() {\n\t\t\t\t\treturn that.notebookData.apiNotebook;\n\t\t\t\t},\n\t\t\t\tget selections() {\n\t\t\t\t\treturn that._selections;\n\t\t\t\t},\n\t\t\t\tget visibleRanges() {\n\t\t\t\t\treturn that._visibleRanges;\n\t\t\t\t},\n\t\t\t\trevealRange(range, revealType) {\n\t\t\t\t\tthat._proxy.$tryRevealRange(\n\t\t\t\t\t\tthat.id,\n\t\t\t\t\t\textHostConverter.NotebookRange.from(range),\n\t\t\t\t\t\trevealType ?? extHostTypes.NotebookEditorRevealType.Default\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tget viewColumn() {\n\t\t\t\t\treturn that._viewColumn;\n\t\t\t\t},\n\t\t\t\tedit(callback) {\n\t\t\t\t\tconst edit = new NotebookEditorCellEditBuilder(this.document.version);\n\t\t\t\t\tcallback(edit);\n\t\t\t\t\treturn that._applyEdit(edit.finalize());\n\t\t\t\t},\n\t\t\t\tsetDecorations(decorationType, range) {\n\t\t\t\t\treturn that.setDecorations(decorationType, range);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._editor;\n\t}\n\n\tget visible(): boolean {\n\t\treturn this._visible;\n\t}\n\n\t_acceptVisibility(value: boolean) {\n\t\tthis._visible = value;\n\t}\n\n\t_acceptVisibleRanges(value: vscode.NotebookRange[]): void {\n\t\tthis._visibleRanges = value;\n\t}\n\n\t_acceptSelections(selections: vscode.NotebookRange[]): void {\n\t\tthis._selections = selections;\n\t}\n\n\t_acceptViewColumn(value: vscode.ViewColumn | undefined) {\n\t\tthis._viewColumn = value;\n\t}\n\n\tprivate _applyEdit(editData: INotebookEditData): Promise<boolean> {\n\n\t\t// return when there is nothing to do\n\t\tif (editData.cellEdits.length === 0) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tconst compressedEdits: ICellEditOperation[] = [];\n\t\tlet compressedEditsIndex = -1;\n\n\t\tfor (let i = 0; i < editData.cellEdits.length; i++) {\n\t\t\tif (compressedEditsIndex < 0) {\n\t\t\t\tcompressedEdits.push(editData.cellEdits[i]);\n\t\t\t\tcompressedEditsIndex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst prevIndex = compressedEditsIndex;\n\t\t\tconst prev = compressedEdits[prevIndex];\n\n\t\t\tconst edit = editData.cellEdits[i];\n\t\t\tif (prev.editType === CellEditType.Replace && edit.editType === CellEditType.Replace) {\n\t\t\t\tif (prev.index === edit.index) {\n\t\t\t\t\tprev.cells.push(...(editData.cellEdits[i] as ICellReplaceEdit).cells);\n\t\t\t\t\tprev.count += (editData.cellEdits[i] as ICellReplaceEdit).count;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcompressedEdits.push(editData.cellEdits[i]);\n\t\t\tcompressedEditsIndex++;\n\t\t}\n\n\t\treturn this._proxy.$tryApplyEdits(this.id, editData.documentVersionId, compressedEdits);\n\t}\n\n\tsetDecorations(decorationType: vscode.NotebookEditorDecorationType, range: vscode.NotebookRange): void {\n\t\tif (range.isEmpty && !this._hasDecorationsForKey.has(decorationType.key)) {\n\t\t\t// avoid no-op call to the renderer\n\t\t\treturn;\n\t\t}\n\t\tif (range.isEmpty) {\n\t\t\tthis._hasDecorationsForKey.delete(decorationType.key);\n\t\t} else {\n\t\t\tthis._hasDecorationsForKey.add(decorationType.key);\n\t\t}\n\n\t\treturn this._proxy.$trySetDecorations(\n\t\t\tthis.id,\n\t\t\textHostConverter.NotebookRange.from(range),\n\t\t\tdecorationType.key\n\t\t);\n\t}\n}\n"]}