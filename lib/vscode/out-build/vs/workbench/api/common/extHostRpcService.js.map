{"version":3,"file":"extHostRpcService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/common/extHostRpcService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKnF,QAAA,kBAAkB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAqB,oBAAoB,CAAC,CAAC;IAM5F,MAAa,iBAAiB;QAQ7B,YAAY,WAAyB;YACpC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACvD,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,CAAC;KACD;IAdD,8CAcC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyIdentifier, IRPCProtocol } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtHostRpcService = createDecorator<IExtHostRpcService>('IExtHostRpcService');\n\nexport interface IExtHostRpcService extends IRPCProtocol {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class ExtHostRpcService implements IExtHostRpcService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly getProxy: <T>(identifier: ProxyIdentifier<T>) => T;\n\treadonly set: <T, R extends T> (identifier: ProxyIdentifier<T>, instance: R) => R;\n\treadonly assertRegistered: (identifiers: ProxyIdentifier<any>[]) => void;\n\treadonly drain: () => Promise<void>;\n\n\tconstructor(rpcProtocol: IRPCProtocol) {\n\t\tthis.getProxy = rpcProtocol.getProxy.bind(rpcProtocol);\n\t\tthis.set = rpcProtocol.set.bind(rpcProtocol);\n\t\tthis.assertRegistered = rpcProtocol.assertRegistered.bind(rpcProtocol);\n\t\tthis.drain = rpcProtocol.drain.bind(rpcProtocol);\n\t}\n}\n"]}