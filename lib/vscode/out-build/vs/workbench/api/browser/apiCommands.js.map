{"version":3,"file":"apiCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/apiCommands.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,IAAI,gBAAK,EAAE;QACV,2BAAgB,CAAC,eAAe,CAAC,sBAAsB,EAAE,KAAK,WAAW,QAA0B,EAAE,GAAW,EAAE,MAAc;YAC/H,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC;YAErF,IAAI,MAAM,CAAC,EAAE,EAAE;gBACd,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;aACrB;iBAAM;gBACN,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACnC;QACF,CAAC,CAAC,CAAC;KACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { isWeb } from 'vs/base/common/platform';\n\nif (isWeb) {\n\tCommandsRegistry.registerCommand('_workbench.fetchJSON', async function (accessor: ServicesAccessor, url: string, method: string) {\n\t\tconst result = await fetch(url, { method, headers: { Accept: 'application/json' } });\n\n\t\tif (result.ok) {\n\t\t\treturn result.json();\n\t\t} else {\n\t\t\tthrow new Error(result.statusText);\n\t\t}\n\t});\n}\n"]}