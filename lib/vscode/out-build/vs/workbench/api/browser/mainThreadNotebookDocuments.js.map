{"version":3,"file":"mainThreadNotebookDocuments.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadNotebookDocuments.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { BoundModelReferenceCollection } from 'vs/workbench/api/browser/mainThreadDocuments';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { IImmediateCellEditOperation, IMainCellDto, NotebookCellsChangeType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookEditorModelResolverService } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { ExtHostContext, ExtHostNotebookShape, IExtHostContext, MainThreadNotebookDocumentsShape } from '../common/extHost.protocol';\nimport { MainThreadNotebooksAndEditors } from 'vs/workbench/api/browser/mainThreadNotebookDocumentsAndEditors';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class MainThreadNotebookDocuments implements MainThreadNotebookDocumentsShape {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _proxy: ExtHostNotebookShape;\n\tprivate readonly _documentEventListenersMapping = new ResourceMap<DisposableStore>();\n\tprivate readonly _modelReferenceCollection: BoundModelReferenceCollection;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\tnotebooksAndEditors: MainThreadNotebooksAndEditors,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookEditorModelResolverService: INotebookEditorModelResolverService,\n\t\t@IUriIdentityService private readonly _uriIdentityService: IUriIdentityService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\t\tthis._modelReferenceCollection = new BoundModelReferenceCollection(this._uriIdentityService.extUri);\n\n\t\tnotebooksAndEditors.onDidAddNotebooks(this._handleNotebooksAdded, this, this._disposables);\n\t\tnotebooksAndEditors.onDidRemoveNotebooks(this._handleNotebooksRemoved, this, this._disposables);\n\n\t\t// forward dirty and save events\n\t\tthis._disposables.add(this._notebookEditorModelResolverService.onDidChangeDirty(model => this._proxy.$acceptDirtyStateChanged(model.resource, model.isDirty())));\n\t\tthis._disposables.add(this._notebookEditorModelResolverService.onDidSaveNotebook(e => this._proxy.$acceptModelSaved(e)));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._modelReferenceCollection.dispose();\n\t\tdispose(this._documentEventListenersMapping.values());\n\n\t}\n\n\tprivate _handleNotebooksAdded(notebooks: readonly NotebookTextModel[]): void {\n\n\t\tfor (const textModel of notebooks) {\n\t\t\tconst disposableStore = new DisposableStore();\n\t\t\tdisposableStore.add(textModel.onDidChangeContent(event => {\n\t\t\t\tconst dto = event.rawEvents.map(e => {\n\t\t\t\t\tconst data =\n\t\t\t\t\t\te.kind === NotebookCellsChangeType.ModelChange || e.kind === NotebookCellsChangeType.Initialize\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tkind: e.kind,\n\t\t\t\t\t\t\t\tversionId: event.versionId,\n\t\t\t\t\t\t\t\tchanges: e.changes.map(diff => [diff[0], diff[1], diff[2].map(cell => MainThreadNotebookDocuments._cellToDto(cell as NotebookCellTextModel))] as [number, number, IMainCellDto[]])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\te.kind === NotebookCellsChangeType.Move\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tkind: e.kind,\n\t\t\t\t\t\t\t\t\t\tindex: e.index,\n\t\t\t\t\t\t\t\t\t\tlength: e.length,\n\t\t\t\t\t\t\t\t\t\tnewIdx: e.newIdx,\n\t\t\t\t\t\t\t\t\t\tversionId: event.versionId,\n\t\t\t\t\t\t\t\t\t\tcells: e.cells.map(cell => MainThreadNotebookDocuments._cellToDto(cell as NotebookCellTextModel))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t: e\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\treturn data;\n\t\t\t\t});\n\n\t\t\t\t// using the model resolver service to know if the model is dirty or not.\n\t\t\t\t// assuming this is the first listener it can mean that at first the model\n\t\t\t\t// is marked as dirty and that another event is fired\n\t\t\t\tthis._proxy.$acceptModelChanged(\n\t\t\t\t\ttextModel.uri,\n\t\t\t\t\t{ rawEvents: dto, versionId: event.versionId },\n\t\t\t\t\tthis._notebookEditorModelResolverService.isDirty(textModel.uri)\n\t\t\t\t);\n\n\t\t\t\tconst hasDocumentMetadataChangeEvent = event.rawEvents.find(e => e.kind === NotebookCellsChangeType.ChangeDocumentMetadata);\n\t\t\t\tif (hasDocumentMetadataChangeEvent) {\n\t\t\t\t\tthis._proxy.$acceptDocumentPropertiesChanged(textModel.uri, { metadata: textModel.metadata });\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._documentEventListenersMapping.set(textModel.uri, disposableStore);\n\t\t}\n\t}\n\n\tprivate _handleNotebooksRemoved(uris: URI[]): void {\n\t\tfor (const uri of uris) {\n\t\t\tthis._documentEventListenersMapping.get(uri)?.dispose();\n\t\t\tthis._documentEventListenersMapping.delete(uri);\n\t\t}\n\t}\n\n\tprivate static _cellToDto(cell: NotebookCellTextModel): IMainCellDto {\n\t\treturn {\n\t\t\thandle: cell.handle,\n\t\t\turi: cell.uri,\n\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\tlanguage: cell.language,\n\t\t\tcellKind: cell.cellKind,\n\t\t\toutputs: cell.outputs,\n\t\t\tmetadata: cell.metadata\n\t\t};\n\t}\n\n\tasync $tryOpenDocument(uriComponents: UriComponents): Promise<URI> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst ref = await this._notebookEditorModelResolverService.resolve(uri, undefined);\n\t\tthis._modelReferenceCollection.add(uri, ref);\n\t\treturn uri;\n\t}\n\n\tasync $trySaveDocument(uriComponents: UriComponents) {\n\t\tconst uri = URI.revive(uriComponents);\n\n\t\tconst ref = await this._notebookEditorModelResolverService.resolve(uri);\n\t\tconst saveResult = await ref.object.save();\n\t\tref.dispose();\n\t\treturn saveResult;\n\t}\n\n\tasync $applyEdits(resource: UriComponents, cellEdits: IImmediateCellEditOperation[], computeUndoRedo = true): Promise<void> {\n\t\tconst textModel = this._notebookService.getNotebookTextModel(URI.from(resource));\n\t\tif (!textModel) {\n\t\t\tthrow new Error(`Can't apply edits to unknown notebook model: ${URI.revive(resource).toString()}`);\n\t\t}\n\n\t\ttry {\n\t\t\ttextModel.applyEdits(cellEdits, true, undefined, () => undefined, undefined, computeUndoRedo);\n\t\t} catch (e) {\n\t\t\t// Clearing outputs at the same time as the EH calling append/replaceOutputItems is an expected race, and it should be a no-op.\n\t\t\t// And any other failure should not throw back to the extension.\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n}\n"]}