{"version":3,"file":"mainThreadFileSystem.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadFileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, dispose, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { FileWriteOptions, FileSystemProviderCapabilities, IFileChange, IFileService, IStat, IWatchOptions, FileType, FileOverwriteOptions, FileDeleteOptions, FileOpenOptions, IFileStat, FileOperationError, FileOperationResult, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ExtHostContext, ExtHostFileSystemShape, IExtHostContext, IFileChangeDto, MainContext, MainThreadFileSystemShape } from '../common/extHost.protocol';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n@extHostNamedCustomer(MainContext.MainThreadFileSystem)\nexport class MainThreadFileSystem implements MainThreadFileSystemShape {\n\n\tprivate readonly _proxy: ExtHostFileSystemShape;\n\tprivate readonly _fileProvider = new Map<number, RemoteFileSystemProvider>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystem);\n\n\t\tconst infoProxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystemInfo);\n\n\t\tfor (let entry of _fileService.listCapabilities()) {\n\t\t\tinfoProxy.$acceptProviderInfos(entry.scheme, entry.capabilities);\n\t\t}\n\t\tthis._disposables.add(_fileService.onDidChangeFileSystemProviderRegistrations(e => infoProxy.$acceptProviderInfos(e.scheme, e.provider?.capabilities ?? null)));\n\t\tthis._disposables.add(_fileService.onDidChangeFileSystemProviderCapabilities(e => infoProxy.$acceptProviderInfos(e.scheme, e.provider.capabilities)));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tdispose(this._fileProvider.values());\n\t\tthis._fileProvider.clear();\n\t}\n\n\tasync $registerFileSystemProvider(handle: number, scheme: string, capabilities: FileSystemProviderCapabilities): Promise<void> {\n\t\tthis._fileProvider.set(handle, new RemoteFileSystemProvider(this._fileService, scheme, capabilities, handle, this._proxy));\n\t}\n\n\t$unregisterProvider(handle: number): void {\n\t\tthis._fileProvider.get(handle)?.dispose();\n\t\tthis._fileProvider.delete(handle);\n\t}\n\n\t$onFileSystemChange(handle: number, changes: IFileChangeDto[]): void {\n\t\tconst fileProvider = this._fileProvider.get(handle);\n\t\tif (!fileProvider) {\n\t\t\tthrow new Error('Unknown file provider');\n\t\t}\n\t\tfileProvider.$onFileSystemChange(changes);\n\t}\n\n\n\t// --- consumer fs, vscode.workspace.fs\n\n\t$stat(uri: UriComponents): Promise<IStat> {\n\t\treturn this._fileService.resolve(URI.revive(uri), { resolveMetadata: true }).then(stat => {\n\t\t\treturn {\n\t\t\t\tctime: stat.ctime,\n\t\t\t\tmtime: stat.mtime,\n\t\t\t\tsize: stat.size,\n\t\t\t\ttype: MainThreadFileSystem._asFileType(stat)\n\t\t\t};\n\t\t}).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$readdir(uri: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this._fileService.resolve(URI.revive(uri), { resolveMetadata: false }).then(stat => {\n\t\t\tif (!stat.isDirectory) {\n\t\t\t\tconst err = new Error(stat.name);\n\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\treturn !stat.children ? [] : stat.children.map(child => [child.name, MainThreadFileSystem._asFileType(child)] as [string, FileType]);\n\t\t}).catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _asFileType(stat: IFileStat): FileType {\n\t\tlet res = 0;\n\t\tif (stat.isFile) {\n\t\t\tres += FileType.File;\n\n\t\t} else if (stat.isDirectory) {\n\t\t\tres += FileType.Directory;\n\t\t}\n\t\tif (stat.isSymbolicLink) {\n\t\t\tres += FileType.SymbolicLink;\n\t\t}\n\t\treturn res;\n\t}\n\n\t$readFile(uri: UriComponents): Promise<VSBuffer> {\n\t\treturn this._fileService.readFile(URI.revive(uri)).then(file => file.value).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$writeFile(uri: UriComponents, content: VSBuffer): Promise<void> {\n\t\treturn this._fileService.writeFile(URI.revive(uri), content)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$rename(source: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._fileService.move(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$copy(source: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._fileService.copy(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$mkdir(uri: UriComponents): Promise<void> {\n\t\treturn this._fileService.createFolder(URI.revive(uri))\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$delete(uri: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this._fileService.del(URI.revive(uri), opts).catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _handleError(err: any): never {\n\t\tif (err instanceof FileOperationError) {\n\t\t\tswitch (err.fileOperationResult) {\n\t\t\t\tcase FileOperationResult.FILE_NOT_FOUND:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_IS_DIRECTORY:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_PERMISSION_DENIED:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_MOVE_CONFLICT:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileExists;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nclass RemoteFileSystemProvider implements IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly _onDidChange = new Emitter<readonly IFileChange[]>();\n\tprivate readonly _registration: IDisposable;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChange.event;\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tconstructor(\n\t\tfileService: IFileService,\n\t\tscheme: string,\n\t\tcapabilities: FileSystemProviderCapabilities,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _proxy: ExtHostFileSystemShape\n\t) {\n\t\tthis.capabilities = capabilities;\n\t\tthis._registration = fileService.registerProvider(scheme, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t\tthis._onDidChange.dispose();\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions) {\n\t\tconst session = Math.random();\n\t\tthis._proxy.$watch(this._handle, session, resource, opts);\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unwatch(this._handle, session);\n\t\t});\n\t}\n\n\t$onFileSystemChange(changes: IFileChangeDto[]): void {\n\t\tthis._onDidChange.fire(changes.map(RemoteFileSystemProvider._createFileChange));\n\t}\n\n\tprivate static _createFileChange(dto: IFileChangeDto): IFileChange {\n\t\treturn { resource: URI.revive(dto.resource), type: dto.type };\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this._proxy.$stat(this._handle, resource).then(undefined, err => {\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\treturn this._proxy.$readFile(this._handle, resource).then(buffer => buffer.buffer);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this._proxy.$writeFile(this._handle, resource, VSBuffer.wrap(content), opts);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this._proxy.$delete(this._handle, resource, opts);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this._proxy.$mkdir(this._handle, resource);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this._proxy.$readdir(this._handle, resource);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._proxy.$rename(this._handle, resource, target, opts);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._proxy.$copy(this._handle, resource, target, opts);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this._proxy.$open(this._handle, resource, opts);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this._proxy.$close(this._handle, fd);\n\t}\n\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this._proxy.$read(this._handle, fd, pos, length).then(readData => {\n\t\t\tdata.set(readData.buffer, offset);\n\t\t\treturn readData.byteLength;\n\t\t});\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this._proxy.$write(this._handle, fd, pos, VSBuffer.wrap(data).slice(offset, offset + length));\n\t}\n}\n"]}