{"version":3,"sources":["vs/workbench/api/browser/mainThreadComments.ts"],"names":[],"mappings":"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","file":"mainThreadComments.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IRange } from 'vs/editor/common/core/range';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ICommentInfo, ICommentService } from 'vs/workbench/contrib/comments/browser/commentService';\nimport { CommentsPanel } from 'vs/workbench/contrib/comments/browser/commentsView';\nimport { CommentProviderFeatures, ExtHostCommentsShape, ExtHostContext, IExtHostContext, MainContext, MainThreadCommentsShape, CommentThreadChanges } from '../common/extHost.protocol';\nimport { COMMENTS_VIEW_ID, COMMENTS_VIEW_TITLE } from 'vs/workbench/contrib/comments/browser/commentsTreeViewer';\nimport { ViewContainer, IViewContainersRegistry, Extensions as ViewExtensions, ViewContainerLocation, IViewsRegistry, IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { localize } from 'vs/nls';\n\n\nexport class MainThreadCommentThread implements modes.CommentThread {\n\tprivate _input?: modes.CommentInput;\n\tget input(): modes.CommentInput | undefined {\n\t\treturn this._input;\n\t}\n\n\tset input(value: modes.CommentInput | undefined) {\n\t\tthis._input = value;\n\t\tthis._onDidChangeInput.fire(value);\n\t}\n\n\tprivate readonly _onDidChangeInput = new Emitter<modes.CommentInput | undefined>();\n\tget onDidChangeInput(): Event<modes.CommentInput | undefined> { return this._onDidChangeInput.event; }\n\n\tprivate _label: string | undefined;\n\n\tget label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tset label(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis._onDidChangeLabel.fire(this._label);\n\t}\n\n\tprivate _contextValue: string | undefined;\n\n\tget contextValue(): string | undefined {\n\t\treturn this._contextValue;\n\t}\n\n\tset contextValue(context: string | undefined) {\n\t\tthis._contextValue = context;\n\t}\n\n\tprivate readonly _onDidChangeLabel = new Emitter<string | undefined>();\n\treadonly onDidChangeLabel: Event<string | undefined> = this._onDidChangeLabel.event;\n\n\tprivate _comments: modes.Comment[] | undefined;\n\n\tpublic get comments(): modes.Comment[] | undefined {\n\t\treturn this._comments;\n\t}\n\n\tpublic set comments(newComments: modes.Comment[] | undefined) {\n\t\tthis._comments = newComments;\n\t\tthis._onDidChangeComments.fire(this._comments);\n\t}\n\n\tprivate readonly _onDidChangeComments = new Emitter<modes.Comment[] | undefined>();\n\tget onDidChangeComments(): Event<modes.Comment[] | undefined> { return this._onDidChangeComments.event; }\n\n\tset range(range: IRange) {\n\t\tthis._range = range;\n\t\tthis._onDidChangeRange.fire(this._range);\n\t}\n\n\tget range(): IRange {\n\t\treturn this._range;\n\t}\n\n\tprivate readonly _onDidChangeCanReply = new Emitter<boolean>();\n\tget onDidChangeCanReply(): Event<boolean> { return this._onDidChangeCanReply.event; }\n\tset canReply(state: boolean) {\n\t\tthis._canReply = state;\n\t\tthis._onDidChangeCanReply.fire(this._canReply);\n\t}\n\n\tget canReply() {\n\t\treturn this._canReply;\n\t}\n\n\tprivate readonly _onDidChangeRange = new Emitter<IRange>();\n\tpublic onDidChangeRange = this._onDidChangeRange.event;\n\n\tprivate _collapsibleState: modes.CommentThreadCollapsibleState | undefined;\n\tget collapsibleState() {\n\t\treturn this._collapsibleState;\n\t}\n\n\tset collapsibleState(newState: modes.CommentThreadCollapsibleState | undefined) {\n\t\tthis._collapsibleState = newState;\n\t\tthis._onDidChangeCollasibleState.fire(this._collapsibleState);\n\t}\n\n\tprivate readonly _onDidChangeCollasibleState = new Emitter<modes.CommentThreadCollapsibleState | undefined>();\n\tpublic onDidChangeCollasibleState = this._onDidChangeCollasibleState.event;\n\n\tprivate _isDisposed: boolean;\n\n\tget isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tconstructor(\n\t\tpublic commentThreadHandle: number,\n\t\tpublic controllerHandle: number,\n\t\tpublic extensionId: string,\n\t\tpublic threadId: string,\n\t\tpublic resource: string,\n\t\tprivate _range: IRange,\n\t\tprivate _canReply: boolean\n\t) {\n\t\tthis._isDisposed = false;\n\t}\n\n\tbatchUpdate(changes: CommentThreadChanges) {\n\t\tconst modified = (value: keyof CommentThreadChanges): boolean =>\n\t\t\tObject.prototype.hasOwnProperty.call(changes, value);\n\n\t\tif (modified('range')) { this._range = changes.range!; }\n\t\tif (modified('label')) { this._label = changes.label; }\n\t\tif (modified('contextValue')) { this._contextValue = changes.contextValue; }\n\t\tif (modified('comments')) { this._comments = changes.comments; }\n\t\tif (modified('collapseState')) { this._collapsibleState = changes.collapseState; }\n\t\tif (modified('canReply')) { this.canReply = changes.canReply!; }\n\t}\n\n\tdispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._onDidChangeCollasibleState.dispose();\n\t\tthis._onDidChangeComments.dispose();\n\t\tthis._onDidChangeInput.dispose();\n\t\tthis._onDidChangeLabel.dispose();\n\t\tthis._onDidChangeRange.dispose();\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: 7,\n\t\t\tcommentControlHandle: this.controllerHandle,\n\t\t\tcommentThreadHandle: this.commentThreadHandle,\n\t\t};\n\t}\n}\n\nexport class MainThreadCommentController {\n\tget handle(): number {\n\t\treturn this._handle;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget contextValue(): string {\n\t\treturn this._id;\n\t}\n\n\tget proxy(): ExtHostCommentsShape {\n\t\treturn this._proxy;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tprivate _reactions: modes.CommentReaction[] | undefined;\n\n\tget reactions() {\n\t\treturn this._reactions;\n\t}\n\n\tset reactions(reactions: modes.CommentReaction[] | undefined) {\n\t\tthis._reactions = reactions;\n\t}\n\n\tget options() {\n\t\treturn this._features.options;\n\t}\n\n\tprivate readonly _threads: Map<number, MainThreadCommentThread> = new Map<number, MainThreadCommentThread>();\n\tpublic activeCommentThread?: MainThreadCommentThread;\n\n\tget features(): CommentProviderFeatures {\n\t\treturn this._features;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: ExtHostCommentsShape,\n\t\tprivate readonly _commentService: ICommentService,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _uniqueId: string,\n\t\tprivate readonly _id: string,\n\t\tprivate readonly _label: string,\n\t\tprivate _features: CommentProviderFeatures\n\t) { }\n\n\tupdateFeatures(features: CommentProviderFeatures) {\n\t\tthis._features = features;\n\t}\n\n\tcreateCommentThread(extensionId: string,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\trange: IRange,\n\t): modes.CommentThread {\n\t\tlet thread = new MainThreadCommentThread(\n\t\t\tcommentThreadHandle,\n\t\t\tthis.handle,\n\t\t\textensionId,\n\t\t\tthreadId,\n\t\t\tURI.revive(resource).toString(),\n\t\t\trange,\n\t\t\ttrue\n\t\t);\n\n\t\tthis._threads.set(commentThreadHandle, thread);\n\n\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\tadded: [thread],\n\t\t\tremoved: [],\n\t\t\tchanged: []\n\t\t});\n\n\t\treturn thread;\n\t}\n\n\tupdateCommentThread(commentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\tchanges: CommentThreadChanges): void {\n\t\tlet thread = this.getKnownThread(commentThreadHandle);\n\t\tthread.batchUpdate(changes);\n\n\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\tadded: [],\n\t\t\tremoved: [],\n\t\t\tchanged: [thread]\n\t\t});\n\t}\n\n\tdeleteCommentThread(commentThreadHandle: number) {\n\t\tlet thread = this.getKnownThread(commentThreadHandle);\n\t\tthis._threads.delete(commentThreadHandle);\n\n\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\tadded: [],\n\t\t\tremoved: [thread],\n\t\t\tchanged: []\n\t\t});\n\n\t\tthread.dispose();\n\t}\n\n\tdeleteCommentThreadMain(commentThreadId: string) {\n\t\tthis._threads.forEach(thread => {\n\t\t\tif (thread.threadId === commentThreadId) {\n\t\t\t\tthis._proxy.$deleteCommentThread(this._handle, thread.commentThreadHandle);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateInput(input: string) {\n\t\tlet thread = this.activeCommentThread;\n\n\t\tif (thread && thread.input) {\n\t\t\tlet commentInput = thread.input;\n\t\t\tcommentInput.value = input;\n\t\t\tthread.input = commentInput;\n\t\t}\n\t}\n\n\tprivate getKnownThread(commentThreadHandle: number): MainThreadCommentThread {\n\t\tconst thread = this._threads.get(commentThreadHandle);\n\t\tif (!thread) {\n\t\t\tthrow new Error('unknown thread');\n\t\t}\n\t\treturn thread;\n\t}\n\n\tasync getDocumentComments(resource: URI, token: CancellationToken) {\n\t\tlet ret: modes.CommentThread[] = [];\n\t\tfor (let thread of [...this._threads.keys()]) {\n\t\t\tconst commentThread = this._threads.get(thread)!;\n\t\t\tif (commentThread.resource === resource.toString()) {\n\t\t\t\tret.push(commentThread);\n\t\t\t}\n\t\t}\n\n\t\tlet commentingRanges = await this._proxy.$provideCommentingRanges(this.handle, resource, token);\n\n\t\treturn <ICommentInfo>{\n\t\t\towner: this._uniqueId,\n\t\t\tlabel: this.label,\n\t\t\tthreads: ret,\n\t\t\tcommentingRanges: {\n\t\t\t\tresource: resource,\n\t\t\t\tranges: commentingRanges || []\n\t\t\t}\n\t\t};\n\t}\n\n\tasync getCommentingRanges(resource: URI, token: CancellationToken): Promise<IRange[]> {\n\t\tlet commentingRanges = await this._proxy.$provideCommentingRanges(this.handle, resource, token);\n\t\treturn commentingRanges || [];\n\t}\n\n\tasync toggleReaction(uri: URI, thread: modes.CommentThread, comment: modes.Comment, reaction: modes.CommentReaction, token: CancellationToken): Promise<void> {\n\t\treturn this._proxy.$toggleReaction(this._handle, thread.commentThreadHandle, uri, comment, reaction);\n\t}\n\n\tgetAllComments(): MainThreadCommentThread[] {\n\t\tlet ret: MainThreadCommentThread[] = [];\n\t\tfor (let thread of [...this._threads.keys()]) {\n\t\t\tret.push(this._threads.get(thread)!);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tcreateCommentThreadTemplate(resource: UriComponents, range: IRange): void {\n\t\tthis._proxy.$createCommentThreadTemplate(this.handle, resource, range);\n\t}\n\n\tasync updateCommentThreadTemplate(threadHandle: number, range: IRange) {\n\t\tawait this._proxy.$updateCommentThreadTemplate(this.handle, threadHandle, range);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: 6,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n}\n\n\nconst commentsViewIcon = registerIcon('comments-view-icon', Codicon.commentDiscussion, localize('commentsViewIcon', 'View icon of the comments view.'));\n\n@extHostNamedCustomer(MainContext.MainThreadComments)\nexport class MainThreadComments extends Disposable implements MainThreadCommentsShape {\n\tprivate readonly _proxy: ExtHostCommentsShape;\n\tprivate _documentProviders = new Map<number, IDisposable>();\n\tprivate _workspaceProviders = new Map<number, IDisposable>();\n\tprivate _handlers = new Map<number, string>();\n\tprivate _commentControllers = new Map<number, MainThreadCommentController>();\n\n\tprivate _activeCommentThread?: MainThreadCommentThread;\n\tprivate readonly _activeCommentThreadDisposables = this._register(new DisposableStore());\n\n\tprivate _openViewListener: IDisposable | null = null;\n\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ICommentService private readonly _commentService: ICommentService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostComments);\n\n\t\tthis._register(this._commentService.onDidChangeActiveCommentThread(async thread => {\n\t\t\tlet handle = (thread as MainThreadCommentThread).controllerHandle;\n\t\t\tlet controller = this._commentControllers.get(handle);\n\n\t\t\tif (!controller) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._activeCommentThreadDisposables.clear();\n\t\t\tthis._activeCommentThread = thread as MainThreadCommentThread;\n\t\t\tcontroller.activeCommentThread = this._activeCommentThread;\n\t\t}));\n\t}\n\n\t$registerCommentController(handle: number, id: string, label: string): void {\n\t\tconst providerId = generateUuid();\n\t\tthis._handlers.set(handle, providerId);\n\n\t\tconst provider = new MainThreadCommentController(this._proxy, this._commentService, handle, providerId, id, label, {});\n\t\tthis._commentService.registerCommentController(providerId, provider);\n\t\tthis._commentControllers.set(handle, provider);\n\n\t\tconst commentsPanelAlreadyConstructed = !!this._viewDescriptorService.getViewDescriptorById(COMMENTS_VIEW_ID);\n\t\tif (!commentsPanelAlreadyConstructed) {\n\t\t\tthis.registerView(commentsPanelAlreadyConstructed);\n\t\t\tthis.registerViewOpenedListener(commentsPanelAlreadyConstructed);\n\t\t}\n\t\tthis._commentService.setWorkspaceComments(String(handle), []);\n\t}\n\n\t$unregisterCommentController(handle: number): void {\n\t\tconst providerId = this._handlers.get(handle);\n\t\tif (typeof providerId !== 'string') {\n\t\t\tthrow new Error('unknown handler');\n\t\t}\n\t\tthis._commentService.unregisterCommentController(providerId);\n\t\tthis._handlers.delete(handle);\n\t\tthis._commentControllers.delete(handle);\n\t}\n\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void {\n\t\tlet provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tprovider.updateFeatures(features);\n\t}\n\n\t$createCommentThread(handle: number,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\trange: IRange,\n\t\textensionId: ExtensionIdentifier\n\t): modes.CommentThread | undefined {\n\t\tlet provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.createCommentThread(extensionId.value, commentThreadHandle, threadId, resource, range);\n\t}\n\n\t$updateCommentThread(handle: number,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\tchanges: CommentThreadChanges): void {\n\t\tlet provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.updateCommentThread(commentThreadHandle, threadId, resource, changes);\n\t}\n\n\t$deleteCommentThread(handle: number, commentThreadHandle: number) {\n\t\tlet provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn provider.deleteCommentThread(commentThreadHandle);\n\t}\n\n\tprivate registerView(commentsViewAlreadyRegistered: boolean) {\n\t\tif (!commentsViewAlreadyRegistered) {\n\t\t\tconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\t\t\t\tid: COMMENTS_VIEW_ID,\n\t\t\t\ttitle: COMMENTS_VIEW_TITLE,\n\t\t\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [COMMENTS_VIEW_ID, { mergeViewWithContainerWhenSingleView: true, donotShowContainerTitleWhenMergedWithContainer: true }]),\n\t\t\t\tstorageId: COMMENTS_VIEW_TITLE,\n\t\t\t\thideIfEmpty: true,\n\t\t\t\ticon: commentsViewIcon,\n\t\t\t\torder: 10,\n\t\t\t}, ViewContainerLocation.Panel);\n\n\t\t\tRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([{\n\t\t\t\tid: COMMENTS_VIEW_ID,\n\t\t\t\tname: COMMENTS_VIEW_TITLE,\n\t\t\t\tcanToggleVisibility: false,\n\t\t\t\tctorDescriptor: new SyncDescriptor(CommentsPanel),\n\t\t\t\tcanMoveView: true,\n\t\t\t\tcontainerIcon: commentsViewIcon,\n\t\t\t\tfocusCommand: {\n\t\t\t\t\tid: 'workbench.action.focusCommentsPanel'\n\t\t\t\t}\n\t\t\t}], VIEW_CONTAINER);\n\t\t}\n\t}\n\n\t/**\n\t * If the comments view has never been opened, the constructor for it has not yet run so it has\n\t * no listeners for comment threads being set or updated. Listen for the view opening for the\n\t * first time and send it comments then.\n\t */\n\tprivate registerViewOpenedListener(commentsPanelAlreadyConstructed: boolean) {\n\t\tif (!commentsPanelAlreadyConstructed && !this._openViewListener) {\n\t\t\tthis._openViewListener = this._viewsService.onDidChangeViewVisibility(e => {\n\t\t\t\tif (e.id === COMMENTS_VIEW_ID && e.visible) {\n\t\t\t\t\t[...this._commentControllers.keys()].forEach(handle => {\n\t\t\t\t\t\tlet threads = this._commentControllers.get(handle)!.getAllComments();\n\n\t\t\t\t\t\tif (threads.length) {\n\t\t\t\t\t\t\tconst providerId = this.getHandler(handle);\n\t\t\t\t\t\t\tthis._commentService.setWorkspaceComments(providerId, threads);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this._openViewListener) {\n\t\t\t\t\t\tthis._openViewListener.dispose();\n\t\t\t\t\t\tthis._openViewListener = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getHandler(handle: number) {\n\t\tif (!this._handlers.has(handle)) {\n\t\t\tthrow new Error('Unknown handler');\n\t\t}\n\t\treturn this._handlers.get(handle)!;\n\t}\n\n\t$onDidCommentThreadsChange(handle: number, event: modes.CommentThreadChangedEvent) {\n\t\t// notify comment service\n\t\tconst providerId = this.getHandler(handle);\n\t\tthis._commentService.updateComments(providerId, event);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._workspaceProviders.forEach(value => dispose(value));\n\t\tthis._workspaceProviders.clear();\n\t\tthis._documentProviders.forEach(value => dispose(value));\n\t\tthis._documentProviders.clear();\n\t}\n}\n"]}