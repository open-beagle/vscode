{"version":3,"file":"mainThreadDocumentsAndEditors.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadDocumentsAndEditors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor, isCodeEditor, isDiffEditor, IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelService, shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { extHostCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { MainThreadDocuments } from 'vs/workbench/api/browser/mainThreadDocuments';\nimport { MainThreadTextEditor } from 'vs/workbench/api/browser/mainThreadEditor';\nimport { MainThreadTextEditors } from 'vs/workbench/api/browser/mainThreadEditors';\nimport { ExtHostContext, ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta, IExtHostContext, IModelAddedData, ITextEditorAddData, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { BaseTextEditor } from 'vs/workbench/browser/parts/editor/textEditor';\nimport { editorGroupToViewColumn, EditorGroupColumn, IEditorPane } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { diffSets, diffMaps } from 'vs/base/common/collections';\n\n\nclass TextEditorSnapshot {\n\n\treadonly id: string;\n\n\tconstructor(\n\t\treadonly editor: IActiveCodeEditor,\n\t) {\n\t\tthis.id = `${editor.getId()},${editor.getModel().id}`;\n\t}\n}\n\nclass DocumentAndEditorStateDelta {\n\n\treadonly isEmpty: boolean;\n\n\tconstructor(\n\t\treadonly removedDocuments: ITextModel[],\n\t\treadonly addedDocuments: ITextModel[],\n\t\treadonly removedEditors: TextEditorSnapshot[],\n\t\treadonly addedEditors: TextEditorSnapshot[],\n\t\treadonly oldActiveEditor: string | null | undefined,\n\t\treadonly newActiveEditor: string | null | undefined,\n\t) {\n\t\tthis.isEmpty = this.removedDocuments.length === 0\n\t\t\t&& this.addedDocuments.length === 0\n\t\t\t&& this.removedEditors.length === 0\n\t\t\t&& this.addedEditors.length === 0\n\t\t\t&& oldActiveEditor === newActiveEditor;\n\t}\n\n\ttoString(): string {\n\t\tlet ret = 'DocumentAndEditorStateDelta\\n';\n\t\tret += `\\tRemoved Documents: [${this.removedDocuments.map(d => d.uri.toString(true)).join(', ')}]\\n`;\n\t\tret += `\\tAdded Documents: [${this.addedDocuments.map(d => d.uri.toString(true)).join(', ')}]\\n`;\n\t\tret += `\\tRemoved Editors: [${this.removedEditors.map(e => e.id).join(', ')}]\\n`;\n\t\tret += `\\tAdded Editors: [${this.addedEditors.map(e => e.id).join(', ')}]\\n`;\n\t\tret += `\\tNew Active Editor: ${this.newActiveEditor}\\n`;\n\t\treturn ret;\n\t}\n}\n\nclass DocumentAndEditorState {\n\n\tstatic compute(before: DocumentAndEditorState | undefined, after: DocumentAndEditorState): DocumentAndEditorStateDelta {\n\t\tif (!before) {\n\t\t\treturn new DocumentAndEditorStateDelta(\n\t\t\t\t[], [...after.documents.values()],\n\t\t\t\t[], [...after.textEditors.values()],\n\t\t\t\tundefined, after.activeEditor\n\t\t\t);\n\t\t}\n\t\tconst documentDelta = diffSets(before.documents, after.documents);\n\t\tconst editorDelta = diffMaps(before.textEditors, after.textEditors);\n\t\tconst oldActiveEditor = before.activeEditor !== after.activeEditor ? before.activeEditor : undefined;\n\t\tconst newActiveEditor = before.activeEditor !== after.activeEditor ? after.activeEditor : undefined;\n\n\t\treturn new DocumentAndEditorStateDelta(\n\t\t\tdocumentDelta.removed, documentDelta.added,\n\t\t\teditorDelta.removed, editorDelta.added,\n\t\t\toldActiveEditor, newActiveEditor\n\t\t);\n\t}\n\n\tconstructor(\n\t\treadonly documents: Set<ITextModel>,\n\t\treadonly textEditors: Map<string, TextEditorSnapshot>,\n\t\treadonly activeEditor: string | null | undefined,\n\t) {\n\t\t//\n\t}\n}\n\nconst enum ActiveEditorOrder {\n\tEditor, Panel\n}\n\nclass MainThreadDocumentAndEditorStateComputer {\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _toDisposeOnEditorRemove = new Map<string, IDisposable>();\n\tprivate _currentState?: DocumentAndEditorState;\n\tprivate _activeEditorOrder: ActiveEditorOrder = ActiveEditorOrder.Editor;\n\n\tconstructor(\n\t\tprivate readonly _onDidChangeState: (delta: DocumentAndEditorStateDelta) => void,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IPanelService private readonly _panelService: IPanelService\n\t) {\n\t\tthis._modelService.onModelAdded(this._updateStateOnModelAdd, this, this._toDispose);\n\t\tthis._modelService.onModelRemoved(_ => this._updateState(), this, this._toDispose);\n\t\tthis._editorService.onDidActiveEditorChange(_ => this._updateState(), this, this._toDispose);\n\n\t\tthis._codeEditorService.onCodeEditorAdd(this._onDidAddEditor, this, this._toDispose);\n\t\tthis._codeEditorService.onCodeEditorRemove(this._onDidRemoveEditor, this, this._toDispose);\n\t\tthis._codeEditorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n\n\t\tthis._panelService.onDidPanelOpen(_ => this._activeEditorOrder = ActiveEditorOrder.Panel, undefined, this._toDispose);\n\t\tthis._panelService.onDidPanelClose(_ => this._activeEditorOrder = ActiveEditorOrder.Editor, undefined, this._toDispose);\n\t\tthis._editorService.onDidVisibleEditorsChange(_ => this._activeEditorOrder = ActiveEditorOrder.Editor, undefined, this._toDispose);\n\n\t\tthis._updateState();\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tprivate _onDidAddEditor(e: ICodeEditor): void {\n\t\tthis._toDisposeOnEditorRemove.set(e.getId(), combinedDisposable(\n\t\t\te.onDidChangeModel(() => this._updateState()),\n\t\t\te.onDidFocusEditorText(() => this._updateState()),\n\t\t\te.onDidFocusEditorWidget(() => this._updateState(e))\n\t\t));\n\t\tthis._updateState();\n\t}\n\n\tprivate _onDidRemoveEditor(e: ICodeEditor): void {\n\t\tconst sub = this._toDisposeOnEditorRemove.get(e.getId());\n\t\tif (sub) {\n\t\t\tthis._toDisposeOnEditorRemove.delete(e.getId());\n\t\t\tsub.dispose();\n\t\t\tthis._updateState();\n\t\t}\n\t}\n\n\tprivate _updateStateOnModelAdd(model: ITextModel): void {\n\t\tif (!shouldSynchronizeModel(model)) {\n\t\t\t// ignore\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._currentState) {\n\t\t\t// too early\n\t\t\tthis._updateState();\n\t\t\treturn;\n\t\t}\n\n\t\t// small (fast) delta\n\t\tthis._currentState = new DocumentAndEditorState(\n\t\t\tthis._currentState.documents.add(model),\n\t\t\tthis._currentState.textEditors,\n\t\t\tthis._currentState.activeEditor\n\t\t);\n\n\t\tthis._onDidChangeState(new DocumentAndEditorStateDelta(\n\t\t\t[], [model],\n\t\t\t[], [],\n\t\t\tundefined, undefined\n\t\t));\n\t}\n\n\tprivate _updateState(widgetFocusCandidate?: ICodeEditor): void {\n\n\t\t// models: ignore too large models\n\t\tconst models = new Set<ITextModel>();\n\t\tfor (const model of this._modelService.getModels()) {\n\t\t\tif (shouldSynchronizeModel(model)) {\n\t\t\t\tmodels.add(model);\n\t\t\t}\n\t\t}\n\n\t\t// editor: only take those that have a not too large model\n\t\tconst editors = new Map<string, TextEditorSnapshot>();\n\t\tlet activeEditor: string | null = null; // Strict null work. This doesn't like being undefined!\n\n\t\tfor (const editor of this._codeEditorService.listCodeEditors()) {\n\t\t\tif (editor.isSimpleWidget) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\t\t\tif (editor.hasModel() && model && shouldSynchronizeModel(model)\n\t\t\t\t&& !model.isDisposed() // model disposed\n\t\t\t\t&& Boolean(this._modelService.getModel(model.uri)) // model disposing, the flag didn't flip yet but the model service already removed it\n\t\t\t) {\n\t\t\t\tconst apiEditor = new TextEditorSnapshot(editor);\n\t\t\t\teditors.set(apiEditor.id, apiEditor);\n\t\t\t\tif (editor.hasTextFocus() || (widgetFocusCandidate === editor && editor.hasWidgetFocus())) {\n\t\t\t\t\t// text focus has priority, widget focus is tricky because multiple\n\t\t\t\t\t// editors might claim widget focus at the same time. therefore we use a\n\t\t\t\t\t// candidate (which is the editor that has raised an widget focus event)\n\t\t\t\t\t// in addition to the widget focus check\n\t\t\t\t\tactiveEditor = apiEditor.id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// active editor: if none of the previous editors had focus we try\n\t\t// to match output panels or the active workbench editor with\n\t\t// one of editor we have just computed\n\t\tif (!activeEditor) {\n\t\t\tlet candidate: IEditor | undefined;\n\t\t\tif (this._activeEditorOrder === ActiveEditorOrder.Editor) {\n\t\t\t\tcandidate = this._getActiveEditorFromEditorPart() || this._getActiveEditorFromPanel();\n\t\t\t} else {\n\t\t\t\tcandidate = this._getActiveEditorFromPanel() || this._getActiveEditorFromEditorPart();\n\t\t\t}\n\n\t\t\tif (candidate) {\n\t\t\t\tfor (const snapshot of editors.values()) {\n\t\t\t\t\tif (candidate === snapshot.editor) {\n\t\t\t\t\t\tactiveEditor = snapshot.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// compute new state and compare against old\n\t\tconst newState = new DocumentAndEditorState(models, editors, activeEditor);\n\t\tconst delta = DocumentAndEditorState.compute(this._currentState, newState);\n\t\tif (!delta.isEmpty) {\n\t\t\tthis._currentState = newState;\n\t\t\tthis._onDidChangeState(delta);\n\t\t}\n\t}\n\n\tprivate _getActiveEditorFromPanel(): IEditor | undefined {\n\t\tconst panel = this._panelService.getActivePanel();\n\t\tif (panel instanceof BaseTextEditor && isCodeEditor(panel.getControl())) {\n\t\t\treturn panel.getControl();\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate _getActiveEditorFromEditorPart(): IEditor | undefined {\n\t\tlet activeTextEditorControl = this._editorService.activeTextEditorControl;\n\t\tif (isDiffEditor(activeTextEditorControl)) {\n\t\t\tactiveTextEditorControl = activeTextEditorControl.getModifiedEditor();\n\t\t}\n\t\treturn activeTextEditorControl;\n\t}\n}\n\n@extHostCustomer\nexport class MainThreadDocumentsAndEditors {\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _proxy: ExtHostDocumentsAndEditorsShape;\n\tprivate readonly _mainThreadDocuments: MainThreadDocuments;\n\tprivate readonly _textEditors = new Map<string, MainThreadTextEditor>();\n\n\tprivate readonly _onTextEditorAdd = new Emitter<MainThreadTextEditor[]>();\n\tprivate readonly _onTextEditorRemove = new Emitter<string[]>();\n\tprivate readonly _onDocumentAdd = new Emitter<ITextModel[]>();\n\tprivate readonly _onDocumentRemove = new Emitter<URI[]>();\n\n\treadonly onTextEditorAdd: Event<MainThreadTextEditor[]> = this._onTextEditorAdd.event;\n\treadonly onTextEditorRemove: Event<string[]> = this._onTextEditorRemove.event;\n\treadonly onDocumentAdd: Event<ITextModel[]> = this._onDocumentAdd.event;\n\treadonly onDocumentRemove: Event<URI[]> = this._onDocumentRemove.event;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IBulkEditService bulkEditService: IBulkEditService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IPathService pathService: IPathService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocumentsAndEditors);\n\n\t\tthis._mainThreadDocuments = this._toDispose.add(new MainThreadDocuments(this, extHostContext, this._modelService, this._textFileService, fileService, textModelResolverService, environmentService, uriIdentityService, workingCopyFileService, pathService));\n\t\textHostContext.set(MainContext.MainThreadDocuments, this._mainThreadDocuments);\n\n\t\tconst mainThreadTextEditors = this._toDispose.add(new MainThreadTextEditors(this, extHostContext, codeEditorService, bulkEditService, this._editorService, this._editorGroupService));\n\t\textHostContext.set(MainContext.MainThreadTextEditors, mainThreadTextEditors);\n\n\t\t// It is expected that the ctor of the state computer calls our `_onDelta`.\n\t\tthis._toDispose.add(new MainThreadDocumentAndEditorStateComputer(delta => this._onDelta(delta), _modelService, codeEditorService, this._editorService, panelService));\n\n\t\tthis._toDispose.add(this._onTextEditorAdd);\n\t\tthis._toDispose.add(this._onTextEditorRemove);\n\t\tthis._toDispose.add(this._onDocumentAdd);\n\t\tthis._toDispose.add(this._onDocumentRemove);\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tprivate _onDelta(delta: DocumentAndEditorStateDelta): void {\n\n\t\tlet removedDocuments: URI[];\n\t\tconst removedEditors: string[] = [];\n\t\tconst addedEditors: MainThreadTextEditor[] = [];\n\n\t\t// removed models\n\t\tremovedDocuments = delta.removedDocuments.map(m => m.uri);\n\n\t\t// added editors\n\t\tfor (const apiEditor of delta.addedEditors) {\n\t\t\tconst mainThreadEditor = new MainThreadTextEditor(apiEditor.id, apiEditor.editor.getModel(),\n\t\t\t\tapiEditor.editor, { onGainedFocus() { }, onLostFocus() { } }, this._mainThreadDocuments, this._modelService, this._clipboardService);\n\n\t\t\tthis._textEditors.set(apiEditor.id, mainThreadEditor);\n\t\t\taddedEditors.push(mainThreadEditor);\n\t\t}\n\n\t\t// removed editors\n\t\tfor (const { id } of delta.removedEditors) {\n\t\t\tconst mainThreadEditor = this._textEditors.get(id);\n\t\t\tif (mainThreadEditor) {\n\t\t\t\tmainThreadEditor.dispose();\n\t\t\t\tthis._textEditors.delete(id);\n\t\t\t\tremovedEditors.push(id);\n\t\t\t}\n\t\t}\n\n\t\tconst extHostDelta: IDocumentsAndEditorsDelta = Object.create(null);\n\t\tlet empty = true;\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tempty = false;\n\t\t\textHostDelta.newActiveEditor = delta.newActiveEditor;\n\t\t}\n\t\tif (removedDocuments.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.removedDocuments = removedDocuments;\n\t\t}\n\t\tif (removedEditors.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.removedEditors = removedEditors;\n\t\t}\n\t\tif (delta.addedDocuments.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.addedDocuments = delta.addedDocuments.map(m => this._toModelAddData(m));\n\t\t}\n\t\tif (delta.addedEditors.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.addedEditors = addedEditors.map(e => this._toTextEditorAddData(e));\n\t\t}\n\n\t\tif (!empty) {\n\t\t\t// first update ext host\n\t\t\tthis._proxy.$acceptDocumentsAndEditorsDelta(extHostDelta);\n\t\t\t// second update dependent state listener\n\t\t\tthis._onDocumentRemove.fire(removedDocuments);\n\t\t\tthis._onDocumentAdd.fire(delta.addedDocuments);\n\t\t\tthis._onTextEditorRemove.fire(removedEditors);\n\t\t\tthis._onTextEditorAdd.fire(addedEditors);\n\t\t}\n\t}\n\n\tprivate _toModelAddData(model: ITextModel): IModelAddedData {\n\t\treturn {\n\t\t\turi: model.uri,\n\t\t\tversionId: model.getVersionId(),\n\t\t\tlines: model.getLinesContent(),\n\t\t\tEOL: model.getEOL(),\n\t\t\tmodeId: model.getLanguageIdentifier().language,\n\t\t\tisDirty: this._textFileService.isDirty(model.uri)\n\t\t};\n\t}\n\n\tprivate _toTextEditorAddData(textEditor: MainThreadTextEditor): ITextEditorAddData {\n\t\tconst props = textEditor.getProperties();\n\t\treturn {\n\t\t\tid: textEditor.getId(),\n\t\t\tdocumentUri: textEditor.getModel().uri,\n\t\t\toptions: props.options,\n\t\t\tselections: props.selections,\n\t\t\tvisibleRanges: props.visibleRanges,\n\t\t\teditorPosition: this._findEditorPosition(textEditor)\n\t\t};\n\t}\n\n\tprivate _findEditorPosition(editor: MainThreadTextEditor): EditorGroupColumn | undefined {\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tif (editor.matches(editorPane)) {\n\t\t\t\treturn editorGroupToViewColumn(this._editorGroupService, editorPane.group);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tfindTextEditorIdFor(editorPane: IEditorPane): string | undefined {\n\t\tfor (const [id, editor] of this._textEditors) {\n\t\t\tif (editor.matches(editorPane)) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetEditor(id: string): MainThreadTextEditor | undefined {\n\t\treturn this._textEditors.get(id);\n\t}\n}\n"]}