{"version":3,"sources":["vs/workbench/api/browser/mainThreadFileSystemEventService.ts"],"names":[],"mappings":"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","file":"mainThreadFileSystemEventService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileChangeType, FileOperation, IFileService } from 'vs/platform/files/common/files';\nimport { extHostCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ExtHostContext, FileSystemEvents, IExtHostContext } from '../common/extHost.protocol';\nimport { localize } from 'vs/nls';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkingCopyFileOperationParticipant, IWorkingCopyFileService, SourceTargetPair, IFileOperationUndoRedoInfo } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { reviveWorkspaceEditDto2 } from 'vs/workbench/api/browser/mainThreadEditors';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { raceCancellation } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\n@extHostCustomer\nexport class MainThreadFileSystemEventService {\n\n\tstatic readonly MementoKeyAdditionalEdits = `file.particpants.additionalEdits`;\n\n\tprivate readonly _listener = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IBulkEditService bulkEditService: IBulkEditService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService envService: IEnvironmentService\n\t) {\n\n\t\tconst proxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystemEventService);\n\n\t\t// file system events - (changes the editor and other make)\n\t\tconst events: FileSystemEvents = {\n\t\t\tcreated: [],\n\t\t\tchanged: [],\n\t\t\tdeleted: []\n\t\t};\n\t\tthis._listener.add(fileService.onDidFilesChange(event => {\n\t\t\tfor (let change of event.changes) {\n\t\t\t\tswitch (change.type) {\n\t\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\t\tevents.created.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\t\tevents.changed.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\t\tevents.deleted.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproxy.$onFileEvent(events);\n\t\t\tevents.created.length = 0;\n\t\t\tevents.changed.length = 0;\n\t\t\tevents.deleted.length = 0;\n\t\t}));\n\n\n\t\tconst fileOperationParticipant = new class implements IWorkingCopyFileOperationParticipant {\n\t\t\tasync participate(files: SourceTargetPair[], operation: FileOperation, undoInfo: IFileOperationUndoRedoInfo | undefined, timeout: number, token: CancellationToken) {\n\t\t\t\tif (undoInfo?.isUndoing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst cts = new CancellationTokenSource(token);\n\t\t\t\tconst timer = setTimeout(() => cts.cancel(), timeout);\n\n\t\t\t\tconst data = await progressService.withProgress({\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\ttitle: this._progressLabel(operation),\n\t\t\t\t\tcancellable: true,\n\t\t\t\t\tdelay: Math.min(timeout / 2, 3000)\n\t\t\t\t}, () => {\n\t\t\t\t\t// race extension host event delivery against timeout AND user-cancel\n\t\t\t\t\tconst onWillEvent = proxy.$onWillRunFileOperation(operation, files, timeout, token);\n\t\t\t\t\treturn raceCancellation(onWillEvent, cts.token);\n\t\t\t\t}, () => {\n\t\t\t\t\t// user-cancel\n\t\t\t\t\tcts.cancel();\n\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tcts.dispose();\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t});\n\n\t\t\t\tif (!data) {\n\t\t\t\t\t// cancelled or no reply\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst needsConfirmation = data.edit.edits.some(edit => edit.metadata?.needsConfirmation);\n\t\t\t\tlet showPreview = storageService.getBoolean(MainThreadFileSystemEventService.MementoKeyAdditionalEdits, StorageScope.GLOBAL);\n\n\t\t\t\tif (envService.extensionTestsLocationURI) {\n\t\t\t\t\t// don't show dialog in tests\n\t\t\t\t\tshowPreview = false;\n\t\t\t\t}\n\n\t\t\t\tif (showPreview === undefined) {\n\t\t\t\t\t// show a user facing message\n\n\t\t\t\t\tlet message: string;\n\t\t\t\t\tif (data.extensionNames.length === 1) {\n\t\t\t\t\t\tif (operation === FileOperation.CREATE) {\n\t\t\t\t\t\t\tmessage = localize('ask.1.create', \"Extension '{0}' wants to make refactoring changes with this file creation\", data.extensionNames[0]);\n\t\t\t\t\t\t} else if (operation === FileOperation.COPY) {\n\t\t\t\t\t\t\tmessage = localize('ask.1.copy', \"Extension '{0}' wants to make refactoring changes with this file copy\", data.extensionNames[0]);\n\t\t\t\t\t\t} else if (operation === FileOperation.MOVE) {\n\t\t\t\t\t\t\tmessage = localize('ask.1.move', \"Extension '{0}' wants to make refactoring changes with this file move\", data.extensionNames[0]);\n\t\t\t\t\t\t} else /* if (operation === FileOperation.DELETE) */ {\n\t\t\t\t\t\t\tmessage = localize('ask.1.delete', \"Extension '{0}' wants to make refactoring changes with this file deletion\", data.extensionNames[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (operation === FileOperation.CREATE) {\n\t\t\t\t\t\t\tmessage = localize({ key: 'ask.N.create', comment: ['{0} is a number, e.g \"3 extensions want...\"'] }, \"{0} extensions want to make refactoring changes with this file creation\", data.extensionNames.length);\n\t\t\t\t\t\t} else if (operation === FileOperation.COPY) {\n\t\t\t\t\t\t\tmessage = localize({ key: 'ask.N.copy', comment: ['{0} is a number, e.g \"3 extensions want...\"'] }, \"{0} extensions want to make refactoring changes with this file copy\", data.extensionNames.length);\n\t\t\t\t\t\t} else if (operation === FileOperation.MOVE) {\n\t\t\t\t\t\t\tmessage = localize({ key: 'ask.N.move', comment: ['{0} is a number, e.g \"3 extensions want...\"'] }, \"{0} extensions want to make refactoring changes with this file move\", data.extensionNames.length);\n\t\t\t\t\t\t} else /* if (operation === FileOperation.DELETE) */ {\n\t\t\t\t\t\t\tmessage = localize({ key: 'ask.N.delete', comment: ['{0} is a number, e.g \"3 extensions want...\"'] }, \"{0} extensions want to make refactoring changes with this file deletion\", data.extensionNames.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (needsConfirmation) {\n\t\t\t\t\t\t// edit which needs confirmation -> always show dialog\n\t\t\t\t\t\tconst answer = await dialogService.show(Severity.Info, message, [localize('preview', \"Show Preview\"), localize('cancel', \"Skip Changes\")], { cancelId: 1 });\n\t\t\t\t\t\tshowPreview = true;\n\t\t\t\t\t\tif (answer.choice === 1) {\n\t\t\t\t\t\t\t// no changes wanted\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// choice\n\t\t\t\t\t\tconst answer = await dialogService.show(Severity.Info, message,\n\t\t\t\t\t\t\t[localize('ok', \"OK\"), localize('preview', \"Show Preview\"), localize('cancel', \"Skip Changes\")],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcancelId: 2,\n\t\t\t\t\t\t\t\tcheckbox: { label: localize('again', \"Don't ask again\") }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (answer.choice === 2) {\n\t\t\t\t\t\t\t// no changes wanted, don't persist cancel option\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowPreview = answer.choice === 1;\n\t\t\t\t\t\tif (answer.checkboxChecked /* && answer.choice !== 2 */) {\n\t\t\t\t\t\t\tstorageService.store(MainThreadFileSystemEventService.MementoKeyAdditionalEdits, showPreview, StorageScope.GLOBAL, StorageTarget.USER);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlogService.info('[onWill-handler] applying additional workspace edit from extensions', data.extensionNames);\n\n\t\t\t\tawait bulkEditService.apply(\n\t\t\t\t\treviveWorkspaceEditDto2(data.edit),\n\t\t\t\t\t{ undoRedoGroupId: undoInfo?.undoRedoGroupId, showPreview }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tprivate _progressLabel(operation: FileOperation): string {\n\t\t\t\tswitch (operation) {\n\t\t\t\t\tcase FileOperation.CREATE:\n\t\t\t\t\t\treturn localize('msg-create', \"Running 'File Create' participants...\");\n\t\t\t\t\tcase FileOperation.MOVE:\n\t\t\t\t\t\treturn localize('msg-rename', \"Running 'File Rename' participants...\");\n\t\t\t\t\tcase FileOperation.COPY:\n\t\t\t\t\t\treturn localize('msg-copy', \"Running 'File Copy' participants...\");\n\t\t\t\t\tcase FileOperation.DELETE:\n\t\t\t\t\t\treturn localize('msg-delete', \"Running 'File Delete' participants...\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// BEFORE file operation\n\t\tthis._listener.add(workingCopyFileService.addFileOperationParticipant(fileOperationParticipant));\n\n\t\t// AFTER file operation\n\t\tthis._listener.add(workingCopyFileService.onDidRunWorkingCopyFileOperation(e => proxy.$onDidRunFileOperation(e.operation, e.files)));\n\t}\n\n\tdispose(): void {\n\t\tthis._listener.dispose();\n\t}\n}\n\nregisterAction2(class ResetMemento extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'files.participants.resetChoice',\n\t\t\ttitle: localize('label', \"Reset choice for 'File operation needs preview'\"),\n\t\t\tf1: true\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IStorageService).remove(MainThreadFileSystemEventService.MementoKeyAdditionalEdits, StorageScope.GLOBAL);\n\t}\n});\n\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\tid: 'files',\n\tproperties: {\n\t\t'files.participants.timeout': {\n\t\t\ttype: 'number',\n\t\t\tdefault: 60000,\n\t\t\tmarkdownDescription: localize('files.participants.timeout', \"Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.\"),\n\t\t}\n\t}\n});\n"]}