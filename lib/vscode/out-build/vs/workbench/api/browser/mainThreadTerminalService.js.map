{"version":3,"file":"mainThreadTerminalService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadTerminalService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IShellLaunchConfig, IShellLaunchConfigDto, ITerminalDimensions } from 'vs/platform/terminal/common/terminal';\nimport { TerminalDataBufferer } from 'vs/platform/terminal/common/terminalDataBuffering';\nimport { ExtHostContext, ExtHostTerminalServiceShape, IExtHostContext, ITerminalDimensionsDto, MainContext, MainThreadTerminalServiceShape, TerminalIdentifier, TerminalLaunchConfig } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ITerminalExternalLinkProvider, ITerminalInstance, ITerminalInstanceService, ITerminalLink, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalProcessExtHostProxy } from 'vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { deserializeEnvironmentVariableCollection, serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { IAvailableProfilesRequest as IAvailableProfilesRequest, IDefaultShellAndArgsRequest, IStartExtensionTerminalRequest, ITerminalProcessExtHostProxy } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensions';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\n@extHostNamedCustomer(MainContext.MainThreadTerminalService)\nexport class MainThreadTerminalService implements MainThreadTerminalServiceShape {\n\n\tprivate _proxy: ExtHostTerminalServiceShape;\n\t/**\n\t * Stores a map from a temporary terminal id (a UUID generated on the extension host side)\n\t * to a numeric terminal id (an id generated on the renderer side)\n\t * This comes in play only when dealing with terminals created on the extension host side\n\t */\n\tprivate _extHostTerminalIds = new Map<string, number>();\n\tprivate _remoteAuthority: string | null;\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _terminalProcessProxies = new Map<number, ITerminalProcessExtHostProxy>();\n\tprivate _dataEventTracker: TerminalDataEventTracker | undefined;\n\tprivate _extHostKind: ExtensionHostKind;\n\t/**\n\t * A single shared terminal link provider for the exthost. When an ext registers a link\n\t * provider, this is registered with the terminal on the renderer side and all links are\n\t * provided through this, even from multiple ext link providers. Xterm should remove lower\n\t * priority intersecting links itself.\n\t */\n\tprivate _linkProvider: IDisposable | undefined;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalInstanceService readonly terminalInstanceService: ITerminalInstanceService,\n\t\t@IRemoteAgentService private readonly _remoteAgentService: IRemoteAgentService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTerminalService);\n\t\tthis._remoteAuthority = extHostContext.remoteAuthority;\n\n\t\t// ITerminalService listeners\n\t\tthis._toDispose.add(_terminalService.onInstanceCreated((instance) => {\n\t\t\tthis._onTerminalOpened(instance);\n\t\t\tthis._onInstanceDimensionsChanged(instance);\n\t\t}));\n\n\t\tthis._extHostKind = extHostContext.extensionHostKind;\n\n\t\tthis._toDispose.add(_terminalService.onInstanceDisposed(instance => this._onTerminalDisposed(instance)));\n\t\tthis._toDispose.add(_terminalService.onInstanceProcessIdReady(instance => this._onTerminalProcessIdReady(instance)));\n\t\tthis._toDispose.add(_terminalService.onInstanceDimensionsChanged(instance => this._onInstanceDimensionsChanged(instance)));\n\t\tthis._toDispose.add(_terminalService.onInstanceMaximumDimensionsChanged(instance => this._onInstanceMaximumDimensionsChanged(instance)));\n\t\tthis._toDispose.add(_terminalService.onInstanceRequestStartExtensionTerminal(e => this._onRequestStartExtensionTerminal(e)));\n\t\tthis._toDispose.add(_terminalService.onActiveInstanceChanged(instance => this._onActiveTerminalChanged(instance ? instance.instanceId : null)));\n\t\tthis._toDispose.add(_terminalService.onInstanceTitleChanged(instance => instance && this._onTitleChanged(instance.instanceId, instance.title)));\n\t\tthis._toDispose.add(_terminalService.onRequestAvailableProfiles(e => this._onRequestAvailableProfiles(e)));\n\n\t\t// ITerminalInstanceService listeners\n\t\tif (terminalInstanceService.onRequestDefaultShellAndArgs) {\n\t\t\tthis._toDispose.add(terminalInstanceService.onRequestDefaultShellAndArgs(e => this._onRequestDefaultShellAndArgs(e)));\n\t\t}\n\n\t\t// Set initial ext host state\n\t\tthis._terminalService.terminalInstances.forEach(t => {\n\t\t\tthis._onTerminalOpened(t);\n\t\t\tt.processReady.then(() => this._onTerminalProcessIdReady(t));\n\t\t});\n\t\tconst activeInstance = this._terminalService.getActiveInstance();\n\t\tif (activeInstance) {\n\t\t\tthis._proxy.$acceptActiveTerminalChanged(activeInstance.instanceId);\n\t\t}\n\t\tif (this._environmentVariableService.collections.size > 0) {\n\t\t\tconst collectionAsArray = [...this._environmentVariableService.collections.entries()];\n\t\t\tconst serializedCollections: [string, ISerializableEnvironmentVariableCollection][] = collectionAsArray.map(e => {\n\t\t\t\treturn [e[0], serializeEnvironmentVariableCollection(e[1].map)];\n\t\t\t});\n\t\t\tthis._proxy.$initEnvironmentVariableCollections(serializedCollections);\n\t\t}\n\n\t\tthis._terminalService.extHostReady(extHostContext.remoteAuthority!); // TODO@Tyriar: remove null assertion\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose.dispose();\n\t\tthis._linkProvider?.dispose();\n\t}\n\n\tprivate _getTerminalId(id: TerminalIdentifier): number | undefined {\n\t\tif (typeof id === 'number') {\n\t\t\treturn id;\n\t\t}\n\t\treturn this._extHostTerminalIds.get(id);\n\t}\n\n\tprivate _getTerminalInstance(id: TerminalIdentifier): ITerminalInstance | undefined {\n\t\tconst rendererId = this._getTerminalId(id);\n\t\tif (typeof rendererId === 'number') {\n\t\t\treturn this._terminalService.getInstanceFromId(rendererId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic async $createTerminal(extHostTerminalId: string, launchConfig: TerminalLaunchConfig): Promise<void> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: launchConfig.name,\n\t\t\texecutable: launchConfig.shellPath,\n\t\t\targs: launchConfig.shellArgs,\n\t\t\tcwd: typeof launchConfig.cwd === 'string' ? launchConfig.cwd : URI.revive(launchConfig.cwd),\n\t\t\ticon: launchConfig.icon,\n\t\t\tinitialText: launchConfig.initialText,\n\t\t\twaitOnExit: launchConfig.waitOnExit,\n\t\t\tignoreConfigurationCwd: true,\n\t\t\tenv: launchConfig.env,\n\t\t\tstrictEnv: launchConfig.strictEnv,\n\t\t\thideFromUser: launchConfig.hideFromUser,\n\t\t\tcustomPtyImplementation: launchConfig.isExtensionCustomPtyTerminal\n\t\t\t\t? (id, cols, rows) => new TerminalProcessExtHostProxy(id, cols, rows, this._terminalService)\n\t\t\t\t: undefined,\n\t\t\textHostTerminalId: extHostTerminalId,\n\t\t\tisFeatureTerminal: launchConfig.isFeatureTerminal,\n\t\t\tisExtensionOwnedTerminal: launchConfig.isExtensionOwnedTerminal\n\t\t};\n\t\tconst terminal = this._terminalService.createTerminal(shellLaunchConfig);\n\t\tthis._extHostTerminalIds.set(extHostTerminalId, terminal.instanceId);\n\t}\n\n\tpublic $show(id: TerminalIdentifier, preserveFocus: boolean): void {\n\t\tconst terminalInstance = this._getTerminalInstance(id);\n\t\tif (terminalInstance) {\n\t\t\tthis._terminalService.setActiveInstance(terminalInstance);\n\t\t\tthis._terminalService.showPanel(!preserveFocus);\n\t\t}\n\t}\n\n\tpublic $hide(id: TerminalIdentifier): void {\n\t\tconst rendererId = this._getTerminalId(id);\n\t\tconst instance = this._terminalService.getActiveInstance();\n\t\tif (instance && instance.instanceId === rendererId) {\n\t\t\tthis._terminalService.hidePanel();\n\t\t}\n\t}\n\n\tpublic $dispose(id: TerminalIdentifier): void {\n\t\tthis._getTerminalInstance(id)?.dispose();\n\t}\n\n\tpublic $sendText(id: TerminalIdentifier, text: string, addNewLine: boolean): void {\n\t\tthis._getTerminalInstance(id)?.sendText(text, addNewLine);\n\t}\n\n\tpublic $startSendingDataEvents(): void {\n\t\tif (!this._dataEventTracker) {\n\t\t\tthis._dataEventTracker = this._instantiationService.createInstance(TerminalDataEventTracker, (id, data) => {\n\t\t\t\tthis._onTerminalData(id, data);\n\t\t\t});\n\t\t\t// Send initial events if they exist\n\t\t\tthis._terminalService.terminalInstances.forEach(t => {\n\t\t\t\tt.initialDataEvents?.forEach(d => this._onTerminalData(t.instanceId, d));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic $stopSendingDataEvents(): void {\n\t\tthis._dataEventTracker?.dispose();\n\t\tthis._dataEventTracker = undefined;\n\t}\n\n\tpublic $startLinkProvider(): void {\n\t\tthis._linkProvider?.dispose();\n\t\tthis._linkProvider = this._terminalService.registerLinkProvider(new ExtensionTerminalLinkProvider(this._proxy));\n\t}\n\n\tpublic $stopLinkProvider(): void {\n\t\tthis._linkProvider?.dispose();\n\t\tthis._linkProvider = undefined;\n\t}\n\n\tpublic $registerProcessSupport(isSupported: boolean): void {\n\t\tthis._terminalService.registerProcessSupport(isSupported);\n\t}\n\n\tprivate _onActiveTerminalChanged(terminalId: number | null): void {\n\t\tthis._proxy.$acceptActiveTerminalChanged(terminalId);\n\t}\n\n\tprivate _onTerminalData(terminalId: number, data: string): void {\n\t\tthis._proxy.$acceptTerminalProcessData(terminalId, data);\n\t}\n\n\tprivate _onTitleChanged(terminalId: number, name: string): void {\n\t\tthis._proxy.$acceptTerminalTitleChange(terminalId, name);\n\t}\n\n\tprivate _onTerminalDisposed(terminalInstance: ITerminalInstance): void {\n\t\tthis._proxy.$acceptTerminalClosed(terminalInstance.instanceId, terminalInstance.exitCode);\n\t}\n\n\tprivate _onTerminalOpened(terminalInstance: ITerminalInstance): void {\n\t\tconst extHostTerminalId = terminalInstance.shellLaunchConfig.extHostTerminalId;\n\t\tconst shellLaunchConfigDto: IShellLaunchConfigDto = {\n\t\t\tname: terminalInstance.shellLaunchConfig.name,\n\t\t\texecutable: terminalInstance.shellLaunchConfig.executable,\n\t\t\targs: terminalInstance.shellLaunchConfig.args,\n\t\t\tcwd: terminalInstance.shellLaunchConfig.cwd,\n\t\t\tenv: terminalInstance.shellLaunchConfig.env,\n\t\t\thideFromUser: terminalInstance.shellLaunchConfig.hideFromUser\n\t\t};\n\t\tthis._proxy.$acceptTerminalOpened(terminalInstance.instanceId, extHostTerminalId, terminalInstance.title, shellLaunchConfigDto);\n\t}\n\n\tprivate _onTerminalProcessIdReady(terminalInstance: ITerminalInstance): void {\n\t\tif (terminalInstance.processId === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._proxy.$acceptTerminalProcessId(terminalInstance.instanceId, terminalInstance.processId);\n\t}\n\n\tprivate _onInstanceDimensionsChanged(instance: ITerminalInstance): void {\n\t\tthis._proxy.$acceptTerminalDimensions(instance.instanceId, instance.cols, instance.rows);\n\t}\n\n\tprivate _onInstanceMaximumDimensionsChanged(instance: ITerminalInstance): void {\n\t\tthis._proxy.$acceptTerminalMaximumDimensions(instance.instanceId, instance.maxCols, instance.maxRows);\n\t}\n\n\n\tprivate _onRequestStartExtensionTerminal(request: IStartExtensionTerminalRequest): void {\n\t\tconst proxy = request.proxy;\n\t\tthis._terminalProcessProxies.set(proxy.instanceId, proxy);\n\n\t\t// Note that onReisze is not being listened to here as it needs to fire when max dimensions\n\t\t// change, excluding the dimension override\n\t\tconst initialDimensions: ITerminalDimensionsDto | undefined = request.cols && request.rows ? {\n\t\t\tcolumns: request.cols,\n\t\t\trows: request.rows\n\t\t} : undefined;\n\n\t\tthis._proxy.$startExtensionTerminal(\n\t\t\tproxy.instanceId,\n\t\t\tinitialDimensions\n\t\t).then(request.callback);\n\n\t\tproxy.onInput(data => this._proxy.$acceptProcessInput(proxy.instanceId, data));\n\t\tproxy.onShutdown(immediate => this._proxy.$acceptProcessShutdown(proxy.instanceId, immediate));\n\t\tproxy.onRequestCwd(() => this._proxy.$acceptProcessRequestCwd(proxy.instanceId));\n\t\tproxy.onRequestInitialCwd(() => this._proxy.$acceptProcessRequestInitialCwd(proxy.instanceId));\n\t\tproxy.onRequestLatency(() => this._onRequestLatency(proxy.instanceId));\n\t}\n\n\tpublic $sendProcessTitle(terminalId: number, title: string): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitTitle(title);\n\t}\n\n\tpublic $sendProcessData(terminalId: number, data: string): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitData(data);\n\t}\n\n\tpublic $sendProcessReady(terminalId: number, pid: number, cwd: string): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitReady(pid, cwd);\n\t}\n\n\tpublic $sendProcessExit(terminalId: number, exitCode: number | undefined): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitExit(exitCode);\n\t}\n\n\tpublic $sendOverrideDimensions(terminalId: number, dimensions: ITerminalDimensions | undefined): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitOverrideDimensions(dimensions);\n\t}\n\n\tpublic $sendProcessInitialCwd(terminalId: number, initialCwd: string): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitInitialCwd(initialCwd);\n\t}\n\n\tpublic $sendProcessCwd(terminalId: number, cwd: string): void {\n\t\tthis._terminalProcessProxies.get(terminalId)?.emitCwd(cwd);\n\t}\n\n\tpublic $sendResolvedLaunchConfig(terminalId: number, shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._getTerminalProcess(terminalId)?.emitResolvedShellLaunchConfig(shellLaunchConfig);\n\t}\n\n\tprivate async _onRequestLatency(terminalId: number): Promise<void> {\n\t\tconst COUNT = 2;\n\t\tlet sum = 0;\n\t\tfor (let i = 0; i < COUNT; i++) {\n\t\t\tconst sw = StopWatch.create(true);\n\t\t\tawait this._proxy.$acceptProcessRequestLatency(terminalId);\n\t\t\tsw.stop();\n\t\t\tsum += sw.elapsed();\n\t\t}\n\t\tthis._getTerminalProcess(terminalId)?.emitLatency(sum / COUNT);\n\t}\n\n\tprivate _isPrimaryExtHost(): boolean {\n\t\t// The \"primary\" ext host is the remote ext host if there is one, otherwise the local\n\t\tconst conn = this._remoteAgentService.getConnection();\n\t\tif (conn) {\n\t\t\treturn this._remoteAuthority === conn.remoteAuthority;\n\t\t}\n\t\treturn this._extHostKind !== ExtensionHostKind.LocalWebWorker;\n\t}\n\n\tprivate async _onRequestAvailableProfiles(req: IAvailableProfilesRequest): Promise<void> {\n\t\tif (this._isPrimaryExtHost()) {\n\t\t\treq.callback(await this._proxy.$getAvailableProfiles(req.configuredProfilesOnly));\n\t\t}\n\t}\n\n\tprivate async _onRequestDefaultShellAndArgs(req: IDefaultShellAndArgsRequest): Promise<void> {\n\t\tif (this._isPrimaryExtHost()) {\n\t\t\tconst res = await this._proxy.$getDefaultShellAndArgs(req.useAutomationShell);\n\t\t\treq.callback(res.shell, res.args);\n\t\t}\n\t}\n\n\tprivate _getTerminalProcess(terminalId: number): ITerminalProcessExtHostProxy | undefined {\n\t\tconst terminal = this._terminalProcessProxies.get(terminalId);\n\t\tif (!terminal) {\n\t\t\tthis._logService.error(`Unknown terminal: ${terminalId}`);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn terminal;\n\t}\n\n\t$setEnvironmentVariableCollection(extensionIdentifier: string, persistent: boolean, collection: ISerializableEnvironmentVariableCollection | undefined): void {\n\t\tif (collection) {\n\t\t\tconst translatedCollection = {\n\t\t\t\tpersistent,\n\t\t\t\tmap: deserializeEnvironmentVariableCollection(collection)\n\t\t\t};\n\t\t\tthis._environmentVariableService.set(extensionIdentifier, translatedCollection);\n\t\t} else {\n\t\t\tthis._environmentVariableService.delete(extensionIdentifier);\n\t\t}\n\t}\n}\n\n/**\n * Encapsulates temporary tracking of data events from terminal instances, once disposed all\n * listeners are removed.\n */\nclass TerminalDataEventTracker extends Disposable {\n\tprivate readonly _bufferer: TerminalDataBufferer;\n\n\tconstructor(\n\t\tprivate readonly _callback: (id: number, data: string) => void,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._bufferer = new TerminalDataBufferer(this._callback));\n\n\t\tthis._terminalService.terminalInstances.forEach(instance => this._registerInstance(instance));\n\t\tthis._register(this._terminalService.onInstanceCreated(instance => this._registerInstance(instance)));\n\t\tthis._register(this._terminalService.onInstanceDisposed(instance => this._bufferer.stopBuffering(instance.instanceId)));\n\t}\n\n\tprivate _registerInstance(instance: ITerminalInstance): void {\n\t\t// Buffer data events to reduce the amount of messages going to the extension host\n\t\tthis._register(this._bufferer.startBuffering(instance.instanceId, instance.onData));\n\t}\n}\n\nclass ExtensionTerminalLinkProvider implements ITerminalExternalLinkProvider {\n\tconstructor(\n\t\tprivate readonly _proxy: ExtHostTerminalServiceShape\n\t) {\n\t}\n\n\tasync provideLinks(instance: ITerminalInstance, line: string): Promise<ITerminalLink[] | undefined> {\n\t\tconst proxy = this._proxy;\n\t\tconst extHostLinks = await proxy.$provideLinks(instance.instanceId, line);\n\t\treturn extHostLinks.map(dto => ({\n\t\t\tid: dto.id,\n\t\t\tstartIndex: dto.startIndex,\n\t\t\tlength: dto.length,\n\t\t\tlabel: dto.label,\n\t\t\tactivate: () => proxy.$activateLink(instance.instanceId, dto.id)\n\t\t}));\n\t}\n}\n"]}