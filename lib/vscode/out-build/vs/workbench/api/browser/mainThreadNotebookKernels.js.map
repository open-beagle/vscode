{"version":3,"file":"mainThreadNotebookKernels.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadNotebookKernels.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/notebookEditorService';\nimport { INotebookKernel, INotebookKernelChangeEvent } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { ExtHostContext, ExtHostNotebookKernelsShape, IExtHostContext, INotebookKernelDto2, MainContext, MainThreadNotebookKernelsShape } from '../common/extHost.protocol';\n\nabstract class MainThreadKernel implements INotebookKernel {\n\n\tprivate readonly _onDidChange = new Emitter<INotebookKernelChangeEvent>();\n\tprivate readonly preloads: { uri: URI, provides: string[] }[];\n\treadonly onDidChange: Event<INotebookKernelChangeEvent> = this._onDidChange.event;\n\n\treadonly id: string;\n\treadonly viewType: string;\n\treadonly extension: ExtensionIdentifier;\n\n\timplementsInterrupt: boolean;\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tsupportedLanguages: string[];\n\timplementsExecutionOrder: boolean;\n\tlocalResourceRoot: URI;\n\n\tpublic get preloadUris() {\n\t\treturn this.preloads.map(p => p.uri);\n\t}\n\n\tpublic get preloadProvides() {\n\t\treturn flatten(this.preloads.map(p => p.provides));\n\t}\n\n\tconstructor(data: INotebookKernelDto2, private _modeService: IModeService) {\n\t\tthis.id = data.id;\n\t\tthis.viewType = data.viewType;\n\t\tthis.extension = data.extensionId;\n\n\t\tthis.implementsInterrupt = data.supportsInterrupt ?? false;\n\t\tthis.label = data.label;\n\t\tthis.description = data.description;\n\t\tthis.detail = data.detail;\n\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : _modeService.getRegisteredModes();\n\t\tthis.implementsExecutionOrder = data.hasExecutionOrder ?? false;\n\t\tthis.localResourceRoot = URI.revive(data.extensionLocation);\n\t\tthis.preloads = data.preloads?.map(u => ({ uri: URI.revive(u.uri), provides: u.provides })) ?? [];\n\t}\n\n\n\tupdate(data: Partial<INotebookKernelDto2>) {\n\n\t\tconst event: INotebookKernelChangeEvent = Object.create(null);\n\t\tif (data.label !== undefined) {\n\t\t\tthis.label = data.label;\n\t\t\tevent.label = true;\n\t\t}\n\t\tif (data.description !== undefined) {\n\t\t\tthis.description = data.description;\n\t\t\tevent.description = true;\n\t\t}\n\t\tif (data.detail !== undefined) {\n\t\t\tthis.detail = data.detail;\n\t\t\tevent.detail = true;\n\t\t}\n\t\tif (data.supportedLanguages !== undefined) {\n\t\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : this._modeService.getRegisteredModes();\n\t\t\tevent.supportedLanguages = true;\n\t\t}\n\t\tif (data.hasExecutionOrder !== undefined) {\n\t\t\tthis.implementsExecutionOrder = data.hasExecutionOrder;\n\t\t\tevent.hasExecutionOrder = true;\n\t\t}\n\t\tthis._onDidChange.fire(event);\n\t}\n\n\tabstract executeNotebookCellsRequest(uri: URI, cellHandles: number[]): Promise<void>;\n\tabstract cancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void>;\n}\n\n@extHostNamedCustomer(MainContext.MainThreadNotebookKernels)\nexport class MainThreadNotebookKernels implements MainThreadNotebookKernelsShape {\n\n\tprivate readonly _editors = new Map<INotebookEditor, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _kernels = new Map<number, [kernel: MainThreadKernel, registraion: IDisposable]>();\n\tprivate readonly _proxy: ExtHostNotebookKernelsShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@INotebookEditorService notebookEditorService: INotebookEditorService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebookKernels);\n\n\t\tnotebookEditorService.listNotebookEditors().forEach(this._onEditorAdd, this);\n\t\tnotebookEditorService.onDidAddNotebookEditor(this._onEditorAdd, this, this._disposables);\n\t\tnotebookEditorService.onDidRemoveNotebookEditor(this._onEditorRemove, this, this._disposables);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tfor (let [, registration] of this._kernels.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t}\n\n\t// --- kernel ipc\n\n\tprivate _onEditorAdd(editor: INotebookEditor) {\n\n\t\tconst ipcListener = editor.onDidReceiveMessage(e => {\n\t\t\tif (e.forRenderer) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { selected } = this._notebookKernelService.getMatchingKernel(editor.viewModel.notebookDocument);\n\t\t\tif (!selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let [handle, candidate] of this._kernels) {\n\t\t\t\tif (candidate[0] === selected) {\n\t\t\t\t\tthis._proxy.$acceptRendererMessage(handle, editor.getId(), e.message);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._editors.set(editor, ipcListener);\n\t}\n\n\tprivate _onEditorRemove(editor: INotebookEditor) {\n\t\tthis._editors.get(editor)?.dispose();\n\t\tthis._editors.delete(editor);\n\t}\n\n\tasync $postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean> {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (!tuple) {\n\t\t\tthrow new Error('kernel already disposed');\n\t\t}\n\t\tconst [kernel] = tuple;\n\t\tlet didSend = false;\n\t\tfor (const [editor] of this._editors) {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._notebookKernelService.getMatchingKernel(editor.viewModel.notebookDocument).selected !== kernel) {\n\t\t\t\t// different kernel\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (editorId === undefined) {\n\t\t\t\t// all editors\n\t\t\t\teditor.postMessage(undefined, message);\n\t\t\t\tdidSend = true;\n\t\t\t} else if (editor.getId() === editorId) {\n\t\t\t\t// selected editors\n\t\t\t\teditor.postMessage(undefined, message);\n\t\t\t\tdidSend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn didSend;\n\t}\n\n\t// --- kernel adding/updating/removal\n\n\tasync $addKernel(handle: number, data: INotebookKernelDto2): Promise<void> {\n\t\tconst that = this;\n\t\tconst kernel = new class extends MainThreadKernel {\n\t\t\tasync executeNotebookCellsRequest(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$executeCells(handle, uri, handles);\n\t\t\t}\n\t\t\tasync cancelNotebookCellExecution(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$cancelCells(handle, uri, handles);\n\t\t\t}\n\t\t}(data, this._modeService);\n\t\tconst registration = this._notebookKernelService.registerKernel(kernel);\n\n\t\tconst listener = this._notebookKernelService.onDidChangeNotebookKernelBinding(e => {\n\t\t\tif (e.oldKernel === kernel.id) {\n\t\t\t\tthis._proxy.$acceptSelection(handle, e.notebook, false);\n\t\t\t} else if (e.newKernel === kernel.id) {\n\t\t\t\tthis._proxy.$acceptSelection(handle, e.notebook, true);\n\t\t\t}\n\t\t});\n\n\t\tthis._kernels.set(handle, [kernel, combinedDisposable(listener, registration)]);\n\t}\n\n\t$updateKernel(handle: number, data: Partial<INotebookKernelDto2>): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[0].update(data);\n\t\t}\n\t}\n\n\t$removeKernel(handle: number): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernels.delete(handle);\n\t\t}\n\t}\n\n\t$updateNotebookPriority(handle: number, notebook: UriComponents, value: number | undefined): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\tthis._notebookKernelService.updateKernelNotebookAffinity(tuple[0], URI.revive(notebook), value);\n\t\t}\n\t}\n}\n"]}