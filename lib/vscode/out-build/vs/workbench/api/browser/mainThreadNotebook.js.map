{"version":3,"file":"mainThreadNotebook.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadNotebook.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { NotebookSelector } from 'vs/workbench/contrib/notebook/common/notebookSelector';\nimport { INotebookCellStatusBarItemProvider, INotebookExclusiveDocumentFilter, NotebookDataDto, TransientCellMetadata, TransientDocumentMetadata, TransientOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookContentProvider, INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { ExtHostContext, ExtHostNotebookShape, IExtHostContext, MainContext, MainThreadNotebookShape, NotebookExtensionDescription } from '../common/extHost.protocol';\n\n@extHostNamedCustomer(MainContext.MainThreadNotebook)\nexport class MainThreadNotebooks implements MainThreadNotebookShape {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _proxy: ExtHostNotebookShape;\n\tprivate readonly _notebookProviders = new Map<string, { controller: INotebookContentProvider, disposable: IDisposable }>();\n\tprivate readonly _notebookSerializer = new Map<number, IDisposable>();\n\tprivate readonly _notebookCellStatusBarRegistrations = new Map<number, IDisposable>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookCellStatusBarService private readonly _cellStatusBarService: INotebookCellStatusBarService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\t// remove all notebook providers\n\t\tfor (const item of this._notebookProviders.values()) {\n\t\t\titem.disposable.dispose();\n\t\t}\n\t\tdispose(this._notebookSerializer.values());\n\t}\n\n\tasync $registerNotebookProvider(extension: NotebookExtensionDescription, viewType: string, options: {\n\t\ttransientOutputs: boolean;\n\t\ttransientCellMetadata: TransientCellMetadata;\n\t\ttransientDocumentMetadata: TransientDocumentMetadata;\n\t\tviewOptions?: { displayName: string; filenamePattern: (string | IRelativePattern | INotebookExclusiveDocumentFilter)[]; exclusive: boolean; };\n\t}): Promise<void> {\n\t\tlet contentOptions = { transientOutputs: options.transientOutputs, transientCellMetadata: options.transientCellMetadata, transientDocumentMetadata: options.transientDocumentMetadata };\n\n\t\tconst controller: INotebookContentProvider = {\n\t\t\tget options() {\n\t\t\t\treturn contentOptions;\n\t\t\t},\n\t\t\tset options(newOptions) {\n\t\t\t\tcontentOptions.transientCellMetadata = newOptions.transientCellMetadata;\n\t\t\t\tcontentOptions.transientDocumentMetadata = newOptions.transientDocumentMetadata;\n\t\t\t\tcontentOptions.transientOutputs = newOptions.transientOutputs;\n\t\t\t},\n\t\t\tviewOptions: options.viewOptions,\n\t\t\topen: async (uri: URI, backupId: string | undefined, untitledDocumentData: VSBuffer | undefined, token: CancellationToken) => {\n\t\t\t\tconst data = await this._proxy.$openNotebook(viewType, uri, backupId, untitledDocumentData, token);\n\t\t\t\treturn {\n\t\t\t\t\tdata,\n\t\t\t\t\ttransientOptions: contentOptions\n\t\t\t\t};\n\t\t\t},\n\t\t\tsave: async (uri: URI, token: CancellationToken) => {\n\t\t\t\treturn this._proxy.$saveNotebook(viewType, uri, token);\n\t\t\t},\n\t\t\tsaveAs: async (uri: URI, target: URI, token: CancellationToken) => {\n\t\t\t\treturn this._proxy.$saveNotebookAs(viewType, uri, target, token);\n\t\t\t},\n\t\t\tbackup: async (uri: URI, token: CancellationToken) => {\n\t\t\t\treturn this._proxy.$backupNotebook(viewType, uri, token);\n\t\t\t}\n\t\t};\n\n\t\tconst disposable = this._notebookService.registerNotebookController(viewType, extension, controller);\n\t\tthis._notebookProviders.set(viewType, { controller, disposable });\n\t}\n\n\tasync $updateNotebookProviderOptions(viewType: string, options?: { transientOutputs: boolean; transientCellMetadata: TransientCellMetadata; transientDocumentMetadata: TransientDocumentMetadata; }): Promise<void> {\n\t\tconst provider = this._notebookProviders.get(viewType);\n\n\t\tif (provider && options) {\n\t\t\tprovider.controller.options = options;\n\t\t\tthis._notebookService.listNotebookDocuments().forEach(document => {\n\t\t\t\tif (document.viewType === viewType) {\n\t\t\t\t\tdocument.transientOptions = provider.controller.options;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tasync $unregisterNotebookProvider(viewType: string): Promise<void> {\n\t\tconst entry = this._notebookProviders.get(viewType);\n\t\tif (entry) {\n\t\t\tentry.disposable.dispose();\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t}\n\t}\n\n\t$registerNotebookSerializer(handle: number, extension: NotebookExtensionDescription, viewType: string, options: TransientOptions): void {\n\t\tconst registration = this._notebookService.registerNotebookSerializer(viewType, extension, {\n\t\t\toptions,\n\t\t\tdataToNotebook: (data: VSBuffer): Promise<NotebookDataDto> => {\n\t\t\t\treturn this._proxy.$dataToNotebook(handle, data, CancellationToken.None);\n\t\t\t},\n\t\t\tnotebookToData: (data: NotebookDataDto): Promise<VSBuffer> => {\n\t\t\t\treturn this._proxy.$notebookToData(handle, data, CancellationToken.None);\n\t\t\t}\n\t\t});\n\t\tthis._notebookSerializer.set(handle, registration);\n\t}\n\n\t$unregisterNotebookSerializer(handle: number): void {\n\t\tthis._notebookSerializer.get(handle)?.dispose();\n\t\tthis._notebookSerializer.delete(handle);\n\t}\n\n\t$emitCellStatusBarEvent(eventHandle: number): void {\n\t\tconst emitter = this._notebookCellStatusBarRegistrations.get(eventHandle);\n\t\tif (emitter instanceof Emitter) {\n\t\t\temitter.fire(undefined);\n\t\t}\n\t}\n\n\tasync $registerNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined, selector: NotebookSelector): Promise<void> {\n\t\tconst that = this;\n\t\tconst provider: INotebookCellStatusBarItemProvider = {\n\t\t\tasync provideCellStatusBarItems(uri: URI, index: number, token: CancellationToken) {\n\t\t\t\tconst result = await that._proxy.$provideNotebookCellStatusBarItems(handle, uri, index, token);\n\t\t\t\treturn {\n\t\t\t\t\titems: result?.items ?? [],\n\t\t\t\t\tdispose() {\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tthat._proxy.$releaseNotebookCellStatusBarItems(result.cacheId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tselector: selector\n\t\t};\n\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tconst emitter = new Emitter<void>();\n\t\t\tthis._notebookCellStatusBarRegistrations.set(eventHandle, emitter);\n\t\t\tprovider.onDidChangeStatusBarItems = emitter.event;\n\t\t}\n\n\t\tconst disposable = this._cellStatusBarService.registerCellStatusBarItemProvider(provider);\n\t\tthis._notebookCellStatusBarRegistrations.set(handle, disposable);\n\t}\n\n\tasync $unregisterNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined): Promise<void> {\n\t\tconst unregisterThing = (handle: number) => {\n\t\t\tconst entry = this._notebookCellStatusBarRegistrations.get(handle);\n\t\t\tif (entry) {\n\t\t\t\tthis._notebookCellStatusBarRegistrations.get(handle)?.dispose();\n\t\t\t\tthis._notebookCellStatusBarRegistrations.delete(handle);\n\t\t\t}\n\t\t};\n\t\tunregisterThing(handle);\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tunregisterThing(eventHandle);\n\t\t}\n\t}\n}\n"]}