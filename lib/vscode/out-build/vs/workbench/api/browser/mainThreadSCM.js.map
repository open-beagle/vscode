{"version":3,"file":"mainThreadSCM.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadSCM.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable, DisposableStore, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { ISCMService, ISCMRepository, ISCMProvider, ISCMResource, ISCMResourceGroup, ISCMResourceDecorations, IInputValidation, ISCMViewService, InputValidationType } from 'vs/workbench/contrib/scm/common/scm';\nimport { ExtHostContext, MainThreadSCMShape, ExtHostSCMShape, SCMProviderFeatures, SCMRawResourceSplices, SCMGroupFeatures, MainContext, IExtHostContext } from '../common/extHost.protocol';\nimport { Command } from 'vs/editor/common/modes';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ISplice, Sequence } from 'vs/base/common/sequence';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nclass MainThreadSCMResourceGroup implements ISCMResourceGroup {\n\n\treadonly elements: ISCMResource[] = [];\n\n\tprivate readonly _onDidSplice = new Emitter<ISplice<ISCMResource>>();\n\treadonly onDidSplice = this._onDidSplice.event;\n\n\tget hideWhenEmpty(): boolean { return !!this.features.hideWhenEmpty; }\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly handle: number,\n\t\tpublic provider: ISCMProvider,\n\t\tpublic features: SCMGroupFeatures,\n\t\tpublic label: string,\n\t\tpublic id: string\n\t) { }\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: 4,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.handle\n\t\t};\n\t}\n\n\tsplice(start: number, deleteCount: number, toInsert: ISCMResource[]) {\n\t\tthis.elements.splice(start, deleteCount, ...toInsert);\n\t\tthis._onDidSplice.fire({ start, deleteCount, toInsert });\n\t}\n\n\t$updateGroup(features: SCMGroupFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\t}\n\n\t$updateGroupLabel(label: string): void {\n\t\tthis.label = label;\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nclass MainThreadSCMResource implements ISCMResource {\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly groupHandle: number,\n\t\tprivate readonly handle: number,\n\t\treadonly sourceUri: URI,\n\t\treadonly resourceGroup: ISCMResourceGroup,\n\t\treadonly decorations: ISCMResourceDecorations,\n\t\treadonly contextValue: string | undefined,\n\t\treadonly command: Command | undefined\n\t) { }\n\n\topen(preserveFocus: boolean): Promise<void> {\n\t\treturn this.proxy.$executeResourceCommand(this.sourceControlHandle, this.groupHandle, this.handle, preserveFocus);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: 3,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.groupHandle,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n}\n\nclass MainThreadSCMProvider implements ISCMProvider {\n\n\tprivate static ID_HANDLE = 0;\n\tprivate _id = `scm${MainThreadSCMProvider.ID_HANDLE++}`;\n\tget id(): string { return this._id; }\n\n\treadonly groups = new Sequence<MainThreadSCMResourceGroup>();\n\tprivate readonly _groupsByHandle: { [handle: number]: MainThreadSCMResourceGroup; } = Object.create(null);\n\n\t// get groups(): ISequence<ISCMResourceGroup> {\n\t// \treturn {\n\t// \t\telements: this._groups,\n\t// \t\tonDidSplice: this._onDidSplice.event\n\t// \t};\n\n\t// \t// return this._groups\n\t// \t// \t.filter(g => g.resources.elements.length > 0 || !g.features.hideWhenEmpty);\n\t// }\n\n\tprivate readonly _onDidChangeResources = new Emitter<void>();\n\treadonly onDidChangeResources: Event<void> = this._onDidChangeResources.event;\n\n\tprivate features: SCMProviderFeatures = {};\n\n\tget handle(): number { return this._handle; }\n\tget label(): string { return this._label; }\n\tget rootUri(): URI | undefined { return this._rootUri; }\n\tget contextValue(): string { return this._contextValue; }\n\n\tget commitTemplate(): string { return this.features.commitTemplate || ''; }\n\tget acceptInputCommand(): Command | undefined { return this.features.acceptInputCommand; }\n\tget statusBarCommands(): Command[] | undefined { return this.features.statusBarCommands; }\n\tget count(): number | undefined { return this.features.count; }\n\n\tprivate readonly _onDidChangeCommitTemplate = new Emitter<string>();\n\treadonly onDidChangeCommitTemplate: Event<string> = this._onDidChangeCommitTemplate.event;\n\n\tprivate readonly _onDidChangeStatusBarCommands = new Emitter<Command[]>();\n\tget onDidChangeStatusBarCommands(): Event<Command[]> { return this._onDidChangeStatusBarCommands.event; }\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _contextValue: string,\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _rootUri: URI | undefined\n\t) { }\n\n\t$updateSourceControl(features: SCMProviderFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\n\t\tif (typeof features.commitTemplate !== 'undefined') {\n\t\t\tthis._onDidChangeCommitTemplate.fire(this.commitTemplate!);\n\t\t}\n\n\t\tif (typeof features.statusBarCommands !== 'undefined') {\n\t\t\tthis._onDidChangeStatusBarCommands.fire(this.statusBarCommands!);\n\t\t}\n\t}\n\n\t$registerGroups(_groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures][]): void {\n\t\tconst groups = _groups.map(([handle, id, label, features]) => {\n\t\t\tconst group = new MainThreadSCMResourceGroup(\n\t\t\t\tthis.handle,\n\t\t\t\thandle,\n\t\t\t\tthis,\n\t\t\t\tfeatures,\n\t\t\t\tlabel,\n\t\t\t\tid\n\t\t\t);\n\n\t\t\tthis._groupsByHandle[handle] = group;\n\t\t\treturn group;\n\t\t});\n\n\t\tthis.groups.splice(this.groups.elements.length, 0, groups);\n\t}\n\n\t$updateGroup(handle: number, features: SCMGroupFeatures): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroup(features);\n\t}\n\n\t$updateGroupLabel(handle: number, label: string): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroupLabel(label);\n\t}\n\n\t$spliceGroupResourceStates(splices: SCMRawResourceSplices[]): void {\n\t\tfor (const [groupHandle, groupSlices] of splices) {\n\t\t\tconst group = this._groupsByHandle[groupHandle];\n\n\t\t\tif (!group) {\n\t\t\t\tconsole.warn(`SCM group ${groupHandle} not found in provider ${this.label}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// reverse the splices sequence in order to apply them correctly\n\t\t\tgroupSlices.reverse();\n\n\t\t\tfor (const [start, deleteCount, rawResources] of groupSlices) {\n\t\t\t\tconst resources = rawResources.map(rawResource => {\n\t\t\t\t\tconst [handle, sourceUri, icons, tooltip, strikeThrough, faded, contextValue, command] = rawResource;\n\t\t\t\t\tconst icon = icons[0];\n\t\t\t\t\tconst iconDark = icons[1] || icon;\n\t\t\t\t\tconst decorations = {\n\t\t\t\t\t\ticon: icon ? URI.revive(icon) : undefined,\n\t\t\t\t\t\ticonDark: iconDark ? URI.revive(iconDark) : undefined,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\tstrikeThrough,\n\t\t\t\t\t\tfaded\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MainThreadSCMResource(\n\t\t\t\t\t\tthis.proxy,\n\t\t\t\t\t\tthis.handle,\n\t\t\t\t\t\tgroupHandle,\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tURI.revive(sourceUri),\n\t\t\t\t\t\tgroup,\n\t\t\t\t\t\tdecorations,\n\t\t\t\t\t\tcontextValue || undefined,\n\t\t\t\t\t\tcommand\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tgroup.splice(start, deleteCount, resources);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\t$unregisterGroup(handle: number): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this._groupsByHandle[handle];\n\t\tthis.groups.splice(this.groups.elements.indexOf(group), 1);\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\tasync getOriginalResource(uri: URI): Promise<URI | null> {\n\t\tif (!this.features.hasQuickDiffProvider) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = await this.proxy.$provideOriginalResource(this.handle, uri, CancellationToken.None);\n\t\treturn result && URI.revive(result);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: 5,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n\n\tdispose(): void {\n\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadSCM)\nexport class MainThreadSCM implements MainThreadSCMShape {\n\n\tprivate readonly _proxy: ExtHostSCMShape;\n\tprivate _repositories = new Map<number, ISCMRepository>();\n\tprivate _repositoryDisposables = new Map<number, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostSCM);\n\t}\n\n\tdispose(): void {\n\t\tthis._repositories.forEach(r => r.dispose());\n\t\tthis._repositories.clear();\n\n\t\tthis._repositoryDisposables.forEach(d => d.dispose());\n\t\tthis._repositoryDisposables.clear();\n\n\t\tthis._disposables.dispose();\n\t}\n\n\t$registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined): void {\n\t\tconst provider = new MainThreadSCMProvider(this._proxy, handle, id, label, rootUri ? URI.revive(rootUri) : undefined);\n\t\tconst repository = this.scmService.registerSCMProvider(provider);\n\t\tthis._repositories.set(handle, repository);\n\n\t\tconst disposable = combinedDisposable(\n\t\t\tEvent.filter(this.scmViewService.onDidFocusRepository, r => r === repository)(_ => this._proxy.$setSelectedSourceControl(handle)),\n\t\t\trepository.input.onDidChange(({ value }) => this._proxy.$onInputBoxValueChange(handle, value))\n\t\t);\n\n\t\tif (this.scmViewService.focusedRepository === repository) {\n\t\t\tsetTimeout(() => this._proxy.$setSelectedSourceControl(handle), 0);\n\t\t}\n\n\t\tif (repository.input.value) {\n\t\t\tsetTimeout(() => this._proxy.$onInputBoxValueChange(handle, repository.input.value), 0);\n\t\t}\n\n\t\tthis._repositoryDisposables.set(handle, disposable);\n\t}\n\n\t$updateSourceControl(handle: number, features: SCMProviderFeatures): void {\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateSourceControl(features);\n\t}\n\n\t$unregisterSourceControl(handle: number): void {\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._repositoryDisposables.get(handle)!.dispose();\n\t\tthis._repositoryDisposables.delete(handle);\n\n\t\trepository.dispose();\n\t\tthis._repositories.delete(handle);\n\t}\n\n\t$registerGroups(sourceControlHandle: number, groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures][], splices: SCMRawResourceSplices[]): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$registerGroups(groups);\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\t$updateGroup(sourceControlHandle: number, groupHandle: number, features: SCMGroupFeatures): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroup(groupHandle, features);\n\t}\n\n\t$updateGroupLabel(sourceControlHandle: number, groupHandle: number, label: string): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroupLabel(groupHandle, label);\n\t}\n\n\t$spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\t$unregisterGroup(sourceControlHandle: number, handle: number): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$unregisterGroup(handle);\n\t}\n\n\t$setInputBoxValue(sourceControlHandle: number, value: string): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.setValue(value, false);\n\t}\n\n\t$setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.placeholder = placeholder;\n\t}\n\n\t$setInputBoxVisibility(sourceControlHandle: number, visible: boolean): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.visible = visible;\n\t}\n\n\t$setInputBoxFocus(sourceControlHandle: number): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.setFocus();\n\t}\n\n\t$showValidationMessage(sourceControlHandle: number, message: string, type: InputValidationType) {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.showValidationMessage(message, type);\n\t}\n\n\t$setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): void {\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (enabled) {\n\t\t\trepository.input.validateInput = async (value, pos): Promise<IInputValidation | undefined> => {\n\t\t\t\tconst result = await this._proxy.$validateInput(sourceControlHandle, value, pos);\n\t\t\t\treturn result && { message: result[0], type: result[1] };\n\t\t\t};\n\t\t} else {\n\t\t\trepository.input.validateInput = async () => undefined;\n\t\t}\n\t}\n}\n"]}