{"version":3,"file":"mainThreadCodeInsets.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadCodeInsets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IActiveCodeEditor, IViewZone } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { reviveWebviewContentOptions } from 'vs/workbench/api/browser/mainThreadWebviews';\nimport { ExtHostContext, ExtHostEditorInsetsShape, IExtHostContext, IWebviewOptions, MainContext, MainThreadEditorInsetsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IWebviewService, WebviewElement } from 'vs/workbench/contrib/webview/browser/webview';\nimport { extHostNamedCustomer } from '../common/extHostCustomers';\n\n// todo@jrieken move these things back into something like contrib/insets\nclass EditorWebviewZone implements IViewZone {\n\n\treadonly domNode: HTMLElement;\n\treadonly afterLineNumber: number;\n\treadonly afterColumn: number;\n\treadonly heightInLines: number;\n\n\tprivate _id?: string;\n\t// suppressMouseDown?: boolean | undefined;\n\t// heightInPx?: number | undefined;\n\t// minWidthInPx?: number | undefined;\n\t// marginDomNode?: HTMLElement | null | undefined;\n\t// onDomNodeTop?: ((top: number) => void) | undefined;\n\t// onComputedHeight?: ((height: number) => void) | undefined;\n\n\tconstructor(\n\t\treadonly editor: IActiveCodeEditor,\n\t\treadonly line: number,\n\t\treadonly height: number,\n\t\treadonly webview: WebviewElement,\n\t) {\n\t\tthis.domNode = document.createElement('div');\n\t\tthis.domNode.style.zIndex = '10'; // without this, the webview is not interactive\n\t\tthis.afterLineNumber = line;\n\t\tthis.afterColumn = 1;\n\t\tthis.heightInLines = height;\n\n\t\teditor.changeViewZones(accessor => this._id = accessor.addZone(this));\n\t\twebview.mountTo(this.domNode);\n\t}\n\n\tdispose(): void {\n\t\tthis.editor.changeViewZones(accessor => this._id && accessor.removeZone(this._id));\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadEditorInsets)\nexport class MainThreadEditorInsets implements MainThreadEditorInsetsShape {\n\n\tprivate readonly _proxy: ExtHostEditorInsetsShape;\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _insets = new Map<number, EditorWebviewZone>();\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tthis._proxy = context.getProxy(ExtHostContext.ExtHostEditorInsets);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tasync $createEditorInset(handle: number, id: string, uri: UriComponents, line: number, height: number, options: IWebviewOptions, extensionId: ExtensionIdentifier, extensionLocation: UriComponents): Promise<void> {\n\n\t\tlet editor: IActiveCodeEditor | undefined;\n\t\tid = id.substr(0, id.indexOf(',')); //todo@jrieken HACK\n\n\t\tfor (const candidate of this._editorService.listCodeEditors()) {\n\t\t\tif (candidate.getId() === id && candidate.hasModel() && isEqual(candidate.getModel().uri, URI.revive(uri))) {\n\t\t\t\teditor = candidate;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!editor) {\n\t\t\tsetTimeout(() => this._proxy.$onDidDispose(handle));\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst webview = this._webviewService.createWebviewElement('' + handle, {\n\t\t\tenableFindWidget: false,\n\t\t}, reviveWebviewContentOptions(options), { id: extensionId, location: URI.revive(extensionLocation) });\n\n\t\tconst webviewZone = new EditorWebviewZone(editor, line, height, webview);\n\n\t\tconst remove = () => {\n\t\t\tdisposables.dispose();\n\t\t\tthis._proxy.$onDidDispose(handle);\n\t\t\tthis._insets.delete(handle);\n\t\t};\n\n\t\tdisposables.add(editor.onDidChangeModel(remove));\n\t\tdisposables.add(editor.onDidDispose(remove));\n\t\tdisposables.add(webviewZone);\n\t\tdisposables.add(webview);\n\t\tdisposables.add(webview.onMessage(msg => this._proxy.$onDidReceiveMessage(handle, msg.message)));\n\n\t\tthis._insets.set(handle, webviewZone);\n\t}\n\n\t$disposeEditorInset(handle: number): void {\n\t\tconst inset = this.getInset(handle);\n\t\tthis._insets.delete(handle);\n\t\tinset.dispose();\n\t}\n\n\t$setHtml(handle: number, value: string): void {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.html = value;\n\t}\n\n\t$setOptions(handle: number, options: IWebviewOptions): void {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.contentOptions = reviveWebviewContentOptions(options);\n\t}\n\n\tasync $postMessage(handle: number, value: any): Promise<boolean> {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.postMessage(value);\n\t\treturn true;\n\t}\n\n\tprivate getInset(handle: number): EditorWebviewZone {\n\t\tconst inset = this._insets.get(handle);\n\t\tif (!inset) {\n\t\t\tthrow new Error('Unknown inset');\n\t\t}\n\t\treturn inset;\n\t}\n}\n"]}