{"version":3,"file":"mainThreadEditorTabs.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadEditorTabs.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAehG,IAAa,oBAAoB,4BAAjC,MAAa,oBAAoB;QAQhC,YACC,cAA+B,EACQ,oBAA0C;YAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;YANjE,gBAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;YACpC,YAAO,GAAG,IAAI,GAAG,EAA6B,CAAC;YAQ/D,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,iCAAc,CAAC,iBAAiB,CAAC,CAAC;YAExE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;gBAC9D,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,YAAY,EAAE;oBACjB,YAAY,CAAC,OAAO,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC;QAED,OAAO;YACN,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;QAEO,iBAAiB,CAAC,KAAmB;;YAC5C,MAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,0CAAE,OAAO,EAAE,CAAC;YACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;gBAC3C,IAAI,sBAAoB,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;oBACvD,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACnC,CAAC;QAEO,eAAe;;YACtB,MAAM,IAAI,GAAoB,EAAE,CAAC;YACjC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;gBACrD,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE;oBACnC,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;wBAC5C,SAAS;qBACT;oBACD,IAAI,CAAC,IAAI,CAAC;wBACT,KAAK,EAAE,KAAK,CAAC,EAAE;wBACf,IAAI,EAAE,MAAA,MAAM,CAAC,QAAQ,eAAiB,mCAAI,EAAE;wBAC5C,QAAQ,EAAE,MAAM,CAAC,QAAQ;qBACzB,CAAC,CAAC;iBACH;aACD;YAED,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;KACD,CAAA;IA1De,sCAAiB,GAAG,IAAI,GAAG,CAAC,2CAA2D,CAAC,CAAC;IAF5F,oBAAoB;QADhC,CAAA,GAAA,uCAAoB,CAAA,CAAC,8BAAW,CAAC,oBAAoB,CAAC;QAWpD,WAAA,0CAAoB,CAAA;OAVV,oBAAoB,CA4DhC;IA5DY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtHostContext, IExtHostEditorTabsShape, IExtHostContext, MainContext, IEditorTabDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { Verbosity } from 'vs/workbench/common/editor';\nimport { GroupChangeKind, IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\n\nexport interface ITabInfo {\n\tname: string;\n\tresource: URI;\n}\n\n@extHostNamedCustomer(MainContext.MainThreadEditorTabs)\nexport class MainThreadEditorTabs {\n\n\tprivate static _GroupEventFilter = new Set([GroupChangeKind.EDITOR_CLOSE, GroupChangeKind.EDITOR_OPEN]);\n\n\tprivate readonly _dispoables = new DisposableStore();\n\tprivate readonly _groups = new Map<IEditorGroup, IDisposable>();\n\tprivate readonly _proxy: IExtHostEditorTabsShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IEditorGroupsService private readonly _editorGroupsService: IEditorGroupsService,\n\t) {\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostEditorTabs);\n\n\t\tthis._editorGroupsService.groups.forEach(this._subscribeToGroup, this);\n\t\tthis._dispoables.add(_editorGroupsService.onDidAddGroup(this._subscribeToGroup, this));\n\t\tthis._dispoables.add(_editorGroupsService.onDidRemoveGroup(e => {\n\t\t\tconst subscription = this._groups.get(e);\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tthis._groups.delete(e);\n\t\t\t\tthis._pushEditorTabs();\n\t\t\t}\n\t\t}));\n\t\tthis._pushEditorTabs();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._groups.values());\n\t\tthis._dispoables.dispose();\n\t}\n\n\tprivate _subscribeToGroup(group: IEditorGroup) {\n\t\tthis._groups.get(group)?.dispose();\n\t\tconst listener = group.onDidGroupChange(e => {\n\t\t\tif (MainThreadEditorTabs._GroupEventFilter.has(e.kind)) {\n\t\t\t\tthis._pushEditorTabs();\n\t\t\t}\n\t\t});\n\t\tthis._groups.set(group, listener);\n\t}\n\n\tprivate _pushEditorTabs(): void {\n\t\tconst tabs: IEditorTabDto[] = [];\n\t\tfor (const group of this._editorGroupsService.groups) {\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tif (editor.isDisposed() || !editor.resource) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttabs.push({\n\t\t\t\t\tgroup: group.id,\n\t\t\t\t\tname: editor.getTitle(Verbosity.SHORT) ?? '',\n\t\t\t\t\tresource: editor.resource\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis._proxy.$acceptEditorTabs(tabs);\n\t}\n}\n"]}