{"version":3,"file":"mainThreadEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { RenderLineNumbersType, TextEditorCursorStyle, cursorStyleToString, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { IDecorationOptions, ScrollType } from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation, ITextModel, ITextModelUpdateOptions, IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/snippetController2';\nimport { IApplyEditsOptions, IEditorPropertiesChangeData, IResolvedTextEditorConfiguration, ITextEditorConfigurationUpdate, IUndoStopOptions, TextEditorRevealType } from 'vs/workbench/api/common/extHost.protocol';\nimport { IEditorPane } from 'vs/workbench/common/editor';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { equals } from 'vs/base/common/arrays';\nimport { CodeEditorStateFlag, EditorState } from 'vs/editor/browser/core/editorState';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { SnippetParser } from 'vs/editor/contrib/snippet/snippetParser';\nimport { MainThreadDocuments } from 'vs/workbench/api/browser/mainThreadDocuments';\n\nexport interface IFocusTracker {\n\tonGainedFocus(): void;\n\tonLostFocus(): void;\n}\n\nexport class MainThreadTextEditorProperties {\n\n\tpublic static readFromEditor(previousProperties: MainThreadTextEditorProperties | null, model: ITextModel, codeEditor: ICodeEditor | null): MainThreadTextEditorProperties {\n\t\tconst selections = MainThreadTextEditorProperties._readSelectionsFromCodeEditor(previousProperties, codeEditor);\n\t\tconst options = MainThreadTextEditorProperties._readOptionsFromCodeEditor(previousProperties, model, codeEditor);\n\t\tconst visibleRanges = MainThreadTextEditorProperties._readVisibleRangesFromCodeEditor(previousProperties, codeEditor);\n\t\treturn new MainThreadTextEditorProperties(selections, options, visibleRanges);\n\t}\n\n\tprivate static _readSelectionsFromCodeEditor(previousProperties: MainThreadTextEditorProperties | null, codeEditor: ICodeEditor | null): Selection[] {\n\t\tlet result: Selection[] | null = null;\n\t\tif (codeEditor) {\n\t\t\tresult = codeEditor.getSelections();\n\t\t}\n\t\tif (!result && previousProperties) {\n\t\t\tresult = previousProperties.selections;\n\t\t}\n\t\tif (!result) {\n\t\t\tresult = [new Selection(1, 1, 1, 1)];\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _readOptionsFromCodeEditor(previousProperties: MainThreadTextEditorProperties | null, model: ITextModel, codeEditor: ICodeEditor | null): IResolvedTextEditorConfiguration {\n\t\tif (model.isDisposed()) {\n\t\t\tif (previousProperties) {\n\t\t\t\t// shutdown time\n\t\t\t\treturn previousProperties.options;\n\t\t\t} else {\n\t\t\t\tthrow new Error('No valid properties');\n\t\t\t}\n\t\t}\n\n\t\tlet cursorStyle: TextEditorCursorStyle;\n\t\tlet lineNumbers: RenderLineNumbersType;\n\t\tif (codeEditor) {\n\t\t\tconst options = codeEditor.getOptions();\n\t\t\tconst lineNumbersOpts = options.get(EditorOption.lineNumbers);\n\t\t\tcursorStyle = options.get(EditorOption.cursorStyle);\n\t\t\tlineNumbers = lineNumbersOpts.renderType;\n\t\t} else if (previousProperties) {\n\t\t\tcursorStyle = previousProperties.options.cursorStyle;\n\t\t\tlineNumbers = previousProperties.options.lineNumbers;\n\t\t} else {\n\t\t\tcursorStyle = TextEditorCursorStyle.Line;\n\t\t\tlineNumbers = RenderLineNumbersType.On;\n\t\t}\n\n\t\tconst modelOptions = model.getOptions();\n\t\treturn {\n\t\t\tinsertSpaces: modelOptions.insertSpaces,\n\t\t\ttabSize: modelOptions.tabSize,\n\t\t\tcursorStyle: cursorStyle,\n\t\t\tlineNumbers: lineNumbers\n\t\t};\n\t}\n\n\tprivate static _readVisibleRangesFromCodeEditor(previousProperties: MainThreadTextEditorProperties | null, codeEditor: ICodeEditor | null): Range[] {\n\t\tif (codeEditor) {\n\t\t\treturn codeEditor.getVisibleRanges();\n\t\t}\n\t\treturn [];\n\t}\n\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly options: IResolvedTextEditorConfiguration,\n\t\tpublic readonly visibleRanges: Range[]\n\t) {\n\t}\n\n\tpublic generateDelta(oldProps: MainThreadTextEditorProperties | null, selectionChangeSource: string | null): IEditorPropertiesChangeData | null {\n\t\tconst delta: IEditorPropertiesChangeData = {\n\t\t\toptions: null,\n\t\t\tselections: null,\n\t\t\tvisibleRanges: null\n\t\t};\n\n\t\tif (!oldProps || !MainThreadTextEditorProperties._selectionsEqual(oldProps.selections, this.selections)) {\n\t\t\tdelta.selections = {\n\t\t\t\tselections: this.selections,\n\t\t\t\tsource: withNullAsUndefined(selectionChangeSource)\n\t\t\t};\n\t\t}\n\n\t\tif (!oldProps || !MainThreadTextEditorProperties._optionsEqual(oldProps.options, this.options)) {\n\t\t\tdelta.options = this.options;\n\t\t}\n\n\t\tif (!oldProps || !MainThreadTextEditorProperties._rangesEqual(oldProps.visibleRanges, this.visibleRanges)) {\n\t\t\tdelta.visibleRanges = this.visibleRanges;\n\t\t}\n\n\t\tif (delta.selections || delta.options || delta.visibleRanges) {\n\t\t\t// something changed\n\t\t\treturn delta;\n\t\t}\n\t\t// nothing changed\n\t\treturn null;\n\t}\n\n\tprivate static _selectionsEqual(a: readonly Selection[], b: readonly Selection[]): boolean {\n\t\treturn equals(a, b, (aValue, bValue) => aValue.equalsSelection(bValue));\n\t}\n\n\tprivate static _rangesEqual(a: readonly Range[], b: readonly Range[]): boolean {\n\t\treturn equals(a, b, (aValue, bValue) => aValue.equalsRange(bValue));\n\t}\n\n\tprivate static _optionsEqual(a: IResolvedTextEditorConfiguration, b: IResolvedTextEditorConfiguration): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\ta.tabSize === b.tabSize\n\t\t\t&& a.insertSpaces === b.insertSpaces\n\t\t\t&& a.cursorStyle === b.cursorStyle\n\t\t\t&& a.lineNumbers === b.lineNumbers\n\t\t);\n\t}\n}\n\n/**\n * Text Editor that is permanently bound to the same model.\n * It can be bound or not to a CodeEditor.\n */\nexport class MainThreadTextEditor {\n\n\tprivate readonly _id: string;\n\tprivate readonly _model: ITextModel;\n\tprivate readonly _mainThreadDocuments: MainThreadDocuments;\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _clipboardService: IClipboardService;\n\tprivate readonly _modelListeners = new DisposableStore();\n\tprivate _codeEditor: ICodeEditor | null;\n\tprivate readonly _focusTracker: IFocusTracker;\n\tprivate readonly _codeEditorListeners = new DisposableStore();\n\n\tprivate _properties: MainThreadTextEditorProperties | null;\n\tprivate readonly _onPropertiesChanged: Emitter<IEditorPropertiesChangeData>;\n\n\tconstructor(\n\t\tid: string,\n\t\tmodel: ITextModel,\n\t\tcodeEditor: ICodeEditor,\n\t\tfocusTracker: IFocusTracker,\n\t\tmainThreadDocuments: MainThreadDocuments,\n\t\tmodelService: IModelService,\n\t\tclipboardService: IClipboardService,\n\t) {\n\t\tthis._id = id;\n\t\tthis._model = model;\n\t\tthis._codeEditor = null;\n\t\tthis._properties = null;\n\t\tthis._focusTracker = focusTracker;\n\t\tthis._mainThreadDocuments = mainThreadDocuments;\n\t\tthis._modelService = modelService;\n\t\tthis._clipboardService = clipboardService;\n\n\t\tthis._onPropertiesChanged = new Emitter<IEditorPropertiesChangeData>();\n\n\t\tthis._modelListeners.add(this._model.onDidChangeOptions((e) => {\n\t\t\tthis._updatePropertiesNow(null);\n\t\t}));\n\n\t\tthis.setCodeEditor(codeEditor);\n\t\tthis._updatePropertiesNow(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modelListeners.dispose();\n\t\tthis._codeEditor = null;\n\t\tthis._codeEditorListeners.dispose();\n\t}\n\n\tprivate _updatePropertiesNow(selectionChangeSource: string | null): void {\n\t\tthis._setProperties(\n\t\t\tMainThreadTextEditorProperties.readFromEditor(this._properties, this._model, this._codeEditor),\n\t\t\tselectionChangeSource\n\t\t);\n\t}\n\n\tprivate _setProperties(newProperties: MainThreadTextEditorProperties, selectionChangeSource: string | null): void {\n\t\tconst delta = newProperties.generateDelta(this._properties, selectionChangeSource);\n\t\tthis._properties = newProperties;\n\t\tif (delta) {\n\t\t\tthis._onPropertiesChanged.fire(delta);\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getModel(): ITextModel {\n\t\treturn this._model;\n\t}\n\n\tpublic getCodeEditor(): ICodeEditor | null {\n\t\treturn this._codeEditor;\n\t}\n\n\tpublic hasCodeEditor(codeEditor: ICodeEditor | null): boolean {\n\t\treturn (this._codeEditor === codeEditor);\n\t}\n\n\tpublic setCodeEditor(codeEditor: ICodeEditor | null): void {\n\t\tif (this.hasCodeEditor(codeEditor)) {\n\t\t\t// Nothing to do...\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditorListeners.clear();\n\n\t\tthis._codeEditor = codeEditor;\n\t\tif (this._codeEditor) {\n\n\t\t\t// Catch early the case that this code editor gets a different model set and disassociate from this model\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidChangeModel(() => {\n\t\t\t\tthis.setCodeEditor(null);\n\t\t\t}));\n\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidFocusEditorWidget(() => {\n\t\t\t\tthis._focusTracker.onGainedFocus();\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidBlurEditorWidget(() => {\n\t\t\t\tthis._focusTracker.onLostFocus();\n\t\t\t}));\n\n\t\t\tlet nextSelectionChangeSource: string | null = null;\n\t\t\tthis._codeEditorListeners.add(this._mainThreadDocuments.onIsCaughtUpWithContentChanges((uri) => {\n\t\t\t\tif (uri.toString() === this._model.uri.toString()) {\n\t\t\t\t\tconst selectionChangeSource = nextSelectionChangeSource;\n\t\t\t\t\tnextSelectionChangeSource = null;\n\t\t\t\t\tthis._updatePropertiesNow(selectionChangeSource);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst isValidCodeEditor = () => {\n\t\t\t\t// Due to event timings, it is possible that there is a model change event not yet delivered to us.\n\t\t\t\t// > e.g. a model change event is emitted to a listener which then decides to update editor options\n\t\t\t\t// > In this case the editor configuration change event reaches us first.\n\t\t\t\t// So simply check that the model is still attached to this code editor\n\t\t\t\treturn (this._codeEditor && this._codeEditor.getModel() === this._model);\n\t\t\t};\n\n\t\t\tconst updateProperties = (selectionChangeSource: string | null) => {\n\t\t\t\t// Some editor events get delivered faster than model content changes. This is\n\t\t\t\t// problematic, as this leads to editor properties reaching the extension host\n\t\t\t\t// too soon, before the model content change that was the root cause.\n\t\t\t\t//\n\t\t\t\t// If this case is identified, then let's update editor properties on the next model\n\t\t\t\t// content change instead.\n\t\t\t\tif (this._mainThreadDocuments.isCaughtUpWithContentChanges(this._model.uri)) {\n\t\t\t\t\tnextSelectionChangeSource = null;\n\t\t\t\t\tthis._updatePropertiesNow(selectionChangeSource);\n\t\t\t\t} else {\n\t\t\t\t\t// update editor properties on the next model content change\n\t\t\t\t\tnextSelectionChangeSource = selectionChangeSource;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidChangeCursorSelection((e) => {\n\t\t\t\t// selection\n\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdateProperties(e.source);\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidChangeConfiguration((e) => {\n\t\t\t\t// options\n\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdateProperties(null);\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidLayoutChange(() => {\n\t\t\t\t// visibleRanges\n\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdateProperties(null);\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.add(this._codeEditor.onDidScrollChange(() => {\n\t\t\t\t// visibleRanges\n\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tupdateProperties(null);\n\t\t\t}));\n\t\t\tthis._updatePropertiesNow(null);\n\t\t}\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn !!this._codeEditor;\n\t}\n\n\tpublic getProperties(): MainThreadTextEditorProperties {\n\t\treturn this._properties!;\n\t}\n\n\tpublic get onPropertiesChanged(): Event<IEditorPropertiesChangeData> {\n\t\treturn this._onPropertiesChanged.event;\n\t}\n\n\tpublic setSelections(selections: ISelection[]): void {\n\t\tif (this._codeEditor) {\n\t\t\tthis._codeEditor.setSelections(selections);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newSelections = selections.map(Selection.liftSelection);\n\t\tthis._setProperties(\n\t\t\tnew MainThreadTextEditorProperties(newSelections, this._properties!.options, this._properties!.visibleRanges),\n\t\t\tnull\n\t\t);\n\t}\n\n\tprivate _setIndentConfiguration(newConfiguration: ITextEditorConfigurationUpdate): void {\n\t\tconst creationOpts = this._modelService.getCreationOptions(this._model.getLanguageIdentifier().language, this._model.uri, this._model.isForSimpleWidget);\n\n\t\tif (newConfiguration.tabSize === 'auto' || newConfiguration.insertSpaces === 'auto') {\n\t\t\t// one of the options was set to 'auto' => detect indentation\n\t\t\tlet insertSpaces = creationOpts.insertSpaces;\n\t\t\tlet tabSize = creationOpts.tabSize;\n\n\t\t\tif (newConfiguration.insertSpaces !== 'auto' && typeof newConfiguration.insertSpaces !== 'undefined') {\n\t\t\t\tinsertSpaces = newConfiguration.insertSpaces;\n\t\t\t}\n\n\t\t\tif (newConfiguration.tabSize !== 'auto' && typeof newConfiguration.tabSize !== 'undefined') {\n\t\t\t\ttabSize = newConfiguration.tabSize;\n\t\t\t}\n\n\t\t\tthis._model.detectIndentation(insertSpaces, tabSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newOpts: ITextModelUpdateOptions = {};\n\t\tif (typeof newConfiguration.insertSpaces !== 'undefined') {\n\t\t\tnewOpts.insertSpaces = newConfiguration.insertSpaces;\n\t\t}\n\t\tif (typeof newConfiguration.tabSize !== 'undefined') {\n\t\t\tnewOpts.tabSize = newConfiguration.tabSize;\n\t\t}\n\t\tthis._model.updateOptions(newOpts);\n\t}\n\n\tpublic setConfiguration(newConfiguration: ITextEditorConfigurationUpdate): void {\n\t\tthis._setIndentConfiguration(newConfiguration);\n\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (newConfiguration.cursorStyle) {\n\t\t\tconst newCursorStyle = cursorStyleToString(newConfiguration.cursorStyle);\n\t\t\tthis._codeEditor.updateOptions({\n\t\t\t\tcursorStyle: newCursorStyle\n\t\t\t});\n\t\t}\n\n\t\tif (typeof newConfiguration.lineNumbers !== 'undefined') {\n\t\t\tlet lineNumbers: 'on' | 'off' | 'relative';\n\t\t\tswitch (newConfiguration.lineNumbers) {\n\t\t\t\tcase RenderLineNumbersType.On:\n\t\t\t\t\tlineNumbers = 'on';\n\t\t\t\t\tbreak;\n\t\t\t\tcase RenderLineNumbersType.Relative:\n\t\t\t\t\tlineNumbers = 'relative';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlineNumbers = 'off';\n\t\t\t}\n\t\t\tthis._codeEditor.updateOptions({\n\t\t\t\tlineNumbers: lineNumbers\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setDecorations(key: string, ranges: IDecorationOptions[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditor.setDecorations(key, ranges);\n\t}\n\n\tpublic setDecorationsFast(key: string, _ranges: number[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges: Range[] = [];\n\t\tfor (let i = 0, len = Math.floor(_ranges.length / 4); i < len; i++) {\n\t\t\tranges[i] = new Range(_ranges[4 * i], _ranges[4 * i + 1], _ranges[4 * i + 2], _ranges[4 * i + 3]);\n\t\t}\n\t\tthis._codeEditor.setDecorationsFast(key, ranges);\n\t}\n\n\tpublic revealRange(range: IRange, revealType: TextEditorRevealType): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (revealType) {\n\t\t\tcase TextEditorRevealType.Default:\n\t\t\t\tthis._codeEditor.revealRange(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.InCenter:\n\t\t\t\tthis._codeEditor.revealRangeInCenter(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.InCenterIfOutsideViewport:\n\t\t\t\tthis._codeEditor.revealRangeInCenterIfOutsideViewport(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.AtTop:\n\t\t\t\tthis._codeEditor.revealRangeAtTop(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`Unknown revealType: ${revealType}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic isFocused(): boolean {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.hasTextFocus();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic matches(editor: IEditorPane): boolean {\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\t\treturn editor.getControl() === this._codeEditor;\n\t}\n\n\tpublic applyEdits(versionIdCheck: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): boolean {\n\t\tif (this._model.getVersionId() !== versionIdCheck) {\n\t\t\t// throw new Error('Model has changed in the meantime!');\n\t\t\t// model changed in the meantime\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this._codeEditor) {\n\t\t\t// console.warn('applyEdits on invisible editor');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof opts.setEndOfLine !== 'undefined') {\n\t\t\tthis._model.pushEOL(opts.setEndOfLine);\n\t\t}\n\n\t\tconst transformedEdits = edits.map((edit): IIdentifiedSingleEditOperation => {\n\t\t\treturn {\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\tif (opts.undoStopBefore) {\n\t\t\tthis._codeEditor.pushUndoStop();\n\t\t}\n\t\tthis._codeEditor.executeEdits('MainThreadTextEditor', transformedEdits);\n\t\tif (opts.undoStopAfter) {\n\t\t\tthis._codeEditor.pushUndoStop();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync insertSnippet(template: string, ranges: readonly IRange[], opts: IUndoStopOptions) {\n\n\t\tif (!this._codeEditor || !this._codeEditor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check if clipboard is required and only iff read it (async)\n\t\tlet clipboardText: string | undefined;\n\t\tconst needsTemplate = SnippetParser.guessNeedsClipboard(template);\n\t\tif (needsTemplate) {\n\t\t\tconst state = new EditorState(this._codeEditor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position);\n\t\t\tclipboardText = await this._clipboardService.readText();\n\t\t\tif (!state.validate(this._codeEditor)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst snippetController = SnippetController2.get(this._codeEditor);\n\n\t\t// cancel previous snippet mode\n\t\t// snippetController.leaveSnippet();\n\n\t\t// set selection, focus editor\n\t\tconst selections = ranges.map(r => new Selection(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn));\n\t\tthis._codeEditor.setSelections(selections);\n\t\tthis._codeEditor.focus();\n\n\t\t// make modifications\n\t\tsnippetController.insert(template, {\n\t\t\toverwriteBefore: 0, overwriteAfter: 0,\n\t\t\tundoStopBefore: opts.undoStopBefore, undoStopAfter: opts.undoStopAfter,\n\t\t\tclipboardText\n\t\t});\n\n\t\treturn true;\n\t}\n}\n"]}