{"version":3,"file":"mainThreadNotebookEditors.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadNotebookEditors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { getNotebookEditorFromEditorPane, INotebookEditor, NotebookEditorOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/notebookEditorService';\nimport { ExtHostContext, ExtHostNotebookShape, IExtHostContext, INotebookDocumentShowOptions, INotebookEditorViewColumnInfo, MainThreadNotebookEditorsShape, NotebookEditorRevealType } from '../common/extHost.protocol';\nimport { MainThreadNotebooksAndEditors } from 'vs/workbench/api/browser/mainThreadNotebookDocumentsAndEditors';\nimport { ICellEditOperation, INotebookDecorationRenderOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { EditorActivation, EditorOverride } from 'vs/platform/editor/common/editor';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { editorGroupToViewColumn } from 'vs/workbench/common/editor';\nimport { equals } from 'vs/base/common/objects';\n\nclass MainThreadNotebook {\n\n\tconstructor(\n\t\treadonly editor: INotebookEditor,\n\t\treadonly disposables: DisposableStore\n\t) { }\n\n\tdispose() {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class MainThreadNotebookEditors implements MainThreadNotebookEditorsShape {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _proxy: ExtHostNotebookShape;\n\tprivate readonly _mainThreadEditors = new Map<string, MainThreadNotebook>();\n\n\tprivate _currentViewColumnInfo?: INotebookEditorViewColumnInfo;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\tnotebooksAndEditors: MainThreadNotebooksAndEditors,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INotebookEditorService private readonly _notebookEditorService: INotebookEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\n\t\tnotebooksAndEditors.onDidAddEditors(this._handleEditorsAdded, this, this._disposables);\n\t\tnotebooksAndEditors.onDidRemoveEditors(this._handleEditorsRemoved, this, this._disposables);\n\n\t\tthis._editorService.onDidActiveEditorChange(() => this._updateEditorViewColumns(), this, this._disposables);\n\t\tthis._editorGroupService.onDidRemoveGroup(() => this._updateEditorViewColumns(), this, this._disposables);\n\t\tthis._editorGroupService.onDidMoveGroup(() => this._updateEditorViewColumns(), this, this._disposables);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tdispose(this._mainThreadEditors.values());\n\t}\n\n\tprivate _handleEditorsAdded(editors: readonly INotebookEditor[]): void {\n\n\t\tfor (const editor of editors) {\n\n\t\t\tconst editorDisposables = new DisposableStore();\n\t\t\teditorDisposables.add(editor.onDidChangeVisibleRanges(() => {\n\t\t\t\tthis._proxy.$acceptEditorPropertiesChanged(editor.getId(), { visibleRanges: { ranges: editor.visibleRanges } });\n\t\t\t}));\n\n\t\t\teditorDisposables.add(editor.onDidChangeSelection(() => {\n\t\t\t\tthis._proxy.$acceptEditorPropertiesChanged(editor.getId(), { selections: { selections: editor.getSelections() } });\n\t\t\t}));\n\n\t\t\tconst wrapper = new MainThreadNotebook(editor, editorDisposables);\n\t\t\tthis._mainThreadEditors.set(editor.getId(), wrapper);\n\t\t}\n\t}\n\n\tprivate _handleEditorsRemoved(editorIds: readonly string[]): void {\n\t\tfor (const id of editorIds) {\n\t\t\tthis._mainThreadEditors.get(id)?.dispose();\n\t\t\tthis._mainThreadEditors.delete(id);\n\t\t}\n\t}\n\n\tprivate _updateEditorViewColumns(): void {\n\t\tconst result: INotebookEditorViewColumnInfo = Object.create(null);\n\t\tfor (let editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst candidate = getNotebookEditorFromEditorPane(editorPane);\n\t\t\tif (candidate && this._mainThreadEditors.has(candidate.getId())) {\n\t\t\t\tresult[candidate.getId()] = editorGroupToViewColumn(this._editorGroupService, editorPane.group);\n\t\t\t}\n\t\t}\n\t\tif (!equals(result, this._currentViewColumnInfo)) {\n\t\t\tthis._currentViewColumnInfo = result;\n\t\t\tthis._proxy.$acceptEditorViewColumns(result);\n\t\t}\n\t}\n\n\tasync $tryApplyEdits(editorId: string, modelVersionId: number, cellEdits: ICellEditOperation[]): Promise<boolean> {\n\t\tconst wrapper = this._mainThreadEditors.get(editorId);\n\t\tif (!wrapper) {\n\t\t\treturn false;\n\t\t}\n\t\tconst { editor } = wrapper;\n\t\tif (!editor.textModel) {\n\t\t\tthis._logService.warn('Notebook editor has NO model', editorId);\n\t\t\treturn false;\n\t\t}\n\t\tif (editor.textModel.versionId !== modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\t\t//todo@jrieken use proper selection logic!\n\t\treturn editor.textModel.applyEdits(cellEdits, true, undefined, () => undefined, undefined);\n\t}\n\n\n\n\tasync $tryShowNotebookDocument(resource: UriComponents, viewType: string, options: INotebookDocumentShowOptions): Promise<string> {\n\t\tconst editorOptions = new NotebookEditorOptions({\n\t\t\tcellSelections: options.selections,\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\t// selection: options.selection,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: options.preserveFocus ? EditorActivation.RESTORE : undefined,\n\t\t\toverride: EditorOverride.DISABLED,\n\t\t});\n\n\t\tconst input = NotebookEditorInput.create(this._instantiationService, URI.revive(resource), viewType);\n\t\tconst editorPane = await this._editorService.openEditor(input, editorOptions, options.position);\n\t\tconst notebookEditor = getNotebookEditorFromEditorPane(editorPane);\n\n\t\tif (notebookEditor) {\n\t\t\treturn notebookEditor.getId();\n\t\t} else {\n\t\t\tthrow new Error(`Notebook Editor creation failure for documenet ${resource}`);\n\t\t}\n\t}\n\n\tasync $tryRevealRange(id: string, range: ICellRange, revealType: NotebookEditorRevealType): Promise<void> {\n\t\tconst editor = this._notebookEditorService.getNotebookEditor(id);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst notebookEditor = editor as INotebookEditor;\n\t\tif (!notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = notebookEditor.viewModel;\n\t\tconst cell = viewModel.cellAt(range.start);\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (revealType) {\n\t\t\tcase NotebookEditorRevealType.Default:\n\t\t\t\treturn notebookEditor.revealCellRangeInView(range);\n\t\t\tcase NotebookEditorRevealType.InCenter:\n\t\t\t\treturn notebookEditor.revealInCenter(cell);\n\t\t\tcase NotebookEditorRevealType.InCenterIfOutsideViewport:\n\t\t\t\treturn notebookEditor.revealInCenterIfOutsideViewport(cell);\n\t\t\tcase NotebookEditorRevealType.AtTop:\n\t\t\t\treturn notebookEditor.revealInViewAtTop(cell);\n\t\t}\n\t}\n\n\t$registerNotebookEditorDecorationType(key: string, options: INotebookDecorationRenderOptions): void {\n\t\tthis._notebookEditorService.registerEditorDecorationType(key, options);\n\t}\n\n\t$removeNotebookEditorDecorationType(key: string): void {\n\t\tthis._notebookEditorService.removeEditorDecorationType(key);\n\t}\n\n\t$trySetDecorations(id: string, range: ICellRange, key: string): void {\n\t\tconst editor = this._notebookEditorService.getNotebookEditor(id);\n\t\tif (editor) {\n\t\t\tconst notebookEditor = editor as INotebookEditor;\n\t\t\tnotebookEditor.setEditorDecorations(key, range);\n\t\t}\n\t}\n}\n"]}