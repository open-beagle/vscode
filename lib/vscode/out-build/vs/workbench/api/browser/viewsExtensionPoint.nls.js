/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
define([], [
	"Unique id used to identify the container in which views can be contributed using 'views' contribution point",
	'Human readable string used to render the container',
	"Path to the container icon. Icons are 24x24 centered on a 50x40 block and have a fill color of 'rgb(215, 218, 224)' or '#d7dae0'. It is recommended that icons be in SVG, though any image file type is accepted.",
	'Contributes views containers to the editor',
	"Contribute views containers to Activity Bar",
	"Contribute views containers to Panel",
	"Type of the view. This can either be `tree` for a tree view based view or `webview` for a webview based view. The default is `tree`.",
	"The view is backed by a `TreeView` created by `createTreeView`.",
	"The view is backed by a `WebviewView` registered by `registerWebviewViewProvider`.",
	'Identifier of the view. This should be unique across all views. It is recommended to include your extension id as part of the view id. Use this to register a data provider through `vscode.window.registerTreeDataProviderForView` API. Also to trigger activating your extension by registering `onView:${id}` event to `activationEvents`.',
	'The human-readable name of the view. Will be shown',
	'Condition which must be true to show this view',
	"Path to the view icon. View icons are displayed when the name of the view cannot be shown. It is recommended that icons be in SVG, though any image file type is accepted.",
	"Human-readable context for when the view is moved out of its original location. By default, the view's container name will be used.",
	"Initial state of the view when the extension is first installed. Once the user has changed the view state by collapsing, moving, or hiding the view, the initial state will not be used again.",
	"The default initial state for the view. In most containers the view will be expanded, however; some built-in containers (explorer, scm, and debug) show all contributed views collapsed regardless of the `visibility`.",
	"The view will not be shown in the view container, but will be discoverable through the views menu and other view entry points and can be un-hidden by the user.",
	"The view will show in the view container, but will be collapsed.",
	'Identifier of the view. This should be unique across all views. It is recommended to include your extension id as part of the view id. Use this to register a data provider through `vscode.window.registerTreeDataProviderForView` API. Also to trigger activating your extension by registering `onView:${id}` event to `activationEvents`.',
	'The human-readable name of the view. Will be shown',
	'Condition which must be true to show this view',
	'Nested group in the viewlet',
	'The name of the remote type associated with this view',
	"Contributes views to the editor",
	"Contributes views to Explorer container in the Activity bar",
	"Contributes views to Debug container in the Activity bar",
	"Contributes views to SCM container in the Activity bar",
	"Contributes views to Test container in the Activity bar",
	"Contributes views to Remote container in the Activity bar. To contribute to this container, enableProposedApi needs to be turned on",
	"Contributes views to contributed views container",
	"views containers must be an array",
	"property `{0}` is mandatory and must be of type `string`. Only alphanumeric characters, '_', and '-' are allowed.",
	"property `{0}` is mandatory and must be of type `string`. Only alphanumeric characters, '_', and '-' are allowed.",
	"property `{0}` is mandatory and must be of type `string`",
	"property `{0}` is mandatory and must be of type `string`",
	"View container '{0}' requires 'enableProposedApi' turned on to be added to 'Remote'.",
	"View container '{0}' does not exist and all views registered to it will be added to 'Explorer'.",
	"Cannot register multiple views with same id `{0}`",
	"A view with id `{0}` is already registered.",
	"Unknown view type `{0}`.",
	"views must be an array",
	"property `{0}` is mandatory and must be of type `string`",
	"property `{0}` is mandatory and must be of type `string`",
	"property `{0}` can be omitted or must be of type `string`",
	"property `{0}` can be omitted or must be of type `string`",
	"property `{0}` can be omitted or must be of type `string`",
	"property `{0}` can be omitted or must be one of {1}"
]);