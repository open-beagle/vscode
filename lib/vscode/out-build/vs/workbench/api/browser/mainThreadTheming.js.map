{"version":3,"file":"mainThreadTheming.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadTheming.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQhG,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;QAM7B,YACC,cAA+B,EAChB,YAA2B;YAE1C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,iCAAc,CAAC,cAAc,CAAC,CAAC;YAErE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE;gBACxE,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;YAC1E,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1E,CAAC;QAED,OAAO;YACN,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC;KACD,CAAA;IAtBY,iBAAiB;QAD7B,CAAA,GAAA,uCAAoB,CAAA,CAAC,8BAAW,CAAC,iBAAiB,CAAC;QASjD,WAAA,4BAAa,CAAA;OARH,iBAAiB,CAsB7B;IAtBY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, IExtHostContext, ExtHostThemingShape, ExtHostContext, MainThreadThemingShape } from '../common/extHost.protocol';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\n@extHostNamedCustomer(MainContext.MainThreadTheming)\nexport class MainThreadTheming implements MainThreadThemingShape {\n\n\tprivate readonly _themeService: IThemeService;\n\tprivate readonly _proxy: ExtHostThemingShape;\n\tprivate readonly _themeChangeListener: IDisposable;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tthis._themeService = themeService;\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTheming);\n\n\t\tthis._themeChangeListener = this._themeService.onDidColorThemeChange(e => {\n\t\t\tthis._proxy.$onColorThemeChange(this._themeService.getColorTheme().type);\n\t\t});\n\t\tthis._proxy.$onColorThemeChange(this._themeService.getColorTheme().type);\n\t}\n\n\tdispose(): void {\n\t\tthis._themeChangeListener.dispose();\n\t}\n}\n"]}