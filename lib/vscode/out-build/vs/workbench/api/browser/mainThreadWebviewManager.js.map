{"version":3,"file":"mainThreadWebviewManager.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadWebviewManager.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAYhG,IAAa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,sBAAU;QACvD,YACC,OAAwC,EACjB,oBAA2C;YAElE,KAAK,EAAE,CAAC;YAER,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,uCAAkB,EAAE,OAAO,CAAC,CAAC,CAAC;YAClG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;YAEtE,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,iDAAuB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;YACtH,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;YAEhF,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,iDAAuB,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;YACrI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;YAEhF,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,gDAAuB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;YACrH,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;QAC/E,CAAC;KACD,CAAA;IAnBY,wBAAwB;QADpC,kCAAe;QAIb,WAAA,qCAAqB,CAAA;OAHX,wBAAwB,CAmBpC;IAnBY,4DAAwB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { MainThreadCustomEditors } from 'vs/workbench/api/browser/mainThreadCustomEditors';\nimport { MainThreadWebviewPanels } from 'vs/workbench/api/browser/mainThreadWebviewPanels';\nimport { MainThreadWebviews } from 'vs/workbench/api/browser/mainThreadWebviews';\nimport { MainThreadWebviewsViews } from 'vs/workbench/api/browser/mainThreadWebviewViews';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostCustomer } from '../common/extHostCustomers';\n\n@extHostCustomer\nexport class MainThreadWebviewManager extends Disposable {\n\tconstructor(\n\t\tcontext: extHostProtocol.IExtHostContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst webviews = this._register(instantiationService.createInstance(MainThreadWebviews, context));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviews, webviews);\n\n\t\tconst webviewPanels = this._register(instantiationService.createInstance(MainThreadWebviewPanels, context, webviews));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviewPanels, webviewPanels);\n\n\t\tconst customEditors = this._register(instantiationService.createInstance(MainThreadCustomEditors, context, webviews, webviewPanels));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadCustomEditors, customEditors);\n\n\t\tconst webviewViews = this._register(instantiationService.createInstance(MainThreadWebviewsViews, context, webviews));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviewViews, webviewViews);\n\t}\n}\n"]}