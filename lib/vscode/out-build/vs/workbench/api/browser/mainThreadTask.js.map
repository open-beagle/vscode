{"version":3,"sources":["vs/workbench/api/browser/mainThreadTask.ts"],"names":[],"mappings":"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","file":"mainThreadTask.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as Types from 'vs/base/common/types';\nimport * as Platform from 'vs/base/common/platform';\nimport { IStringDictionary, forEach } from 'vs/base/common/collections';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nimport { IWorkspace, IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nimport {\n\tContributedTask, ConfiguringTask, KeyedTaskIdentifier, TaskExecution, Task, TaskEvent, TaskEventKind,\n\tPresentationOptions, CommandOptions, CommandConfiguration, RuntimeType, CustomTask, TaskScope, TaskSource,\n\tTaskSourceKind, ExtensionTaskSource, RunOptions, TaskSet, TaskDefinition\n} from 'vs/workbench/contrib/tasks/common/tasks';\n\n\nimport { ResolveSet, ResolvedVariables } from 'vs/workbench/contrib/tasks/common/taskSystem';\nimport { ITaskService, TaskFilter, ITaskProvider } from 'vs/workbench/contrib/tasks/common/taskService';\n\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ExtHostContext, MainThreadTaskShape, ExtHostTaskShape, MainContext, IExtHostContext } from 'vs/workbench/api/common/extHost.protocol';\nimport {\n\tTaskDefinitionDTO, TaskExecutionDTO, ProcessExecutionOptionsDTO, TaskPresentationOptionsDTO,\n\tProcessExecutionDTO, ShellExecutionDTO, ShellExecutionOptionsDTO, CustomExecutionDTO, TaskDTO, TaskSourceDTO, TaskHandleDTO, TaskFilterDTO, TaskProcessStartedDTO, TaskProcessEndedDTO, TaskSystemInfoDTO,\n\tRunOptionsDTO\n} from 'vs/workbench/api/common/shared/tasks';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\n\nnamespace TaskExecutionDTO {\n\texport function from(value: TaskExecution): TaskExecutionDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\ttask: TaskDTO.from(value.task)\n\t\t};\n\t}\n}\n\nnamespace TaskProcessStartedDTO {\n\texport function from(value: TaskExecution, processId: number): TaskProcessStartedDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\tprocessId\n\t\t};\n\t}\n}\n\nnamespace TaskProcessEndedDTO {\n\texport function from(value: TaskExecution, exitCode: number | undefined): TaskProcessEndedDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\texitCode\n\t\t};\n\t}\n}\n\nnamespace TaskDefinitionDTO {\n\texport function from(value: KeyedTaskIdentifier): TaskDefinitionDTO {\n\t\tconst result = Object.assign(Object.create(null), value);\n\t\tdelete result._key;\n\t\treturn result;\n\t}\n\texport function to(value: TaskDefinitionDTO, executeOnly: boolean): KeyedTaskIdentifier | undefined {\n\t\tlet result = TaskDefinition.createTaskIdentifier(value, console);\n\t\tif (result === undefined && executeOnly) {\n\t\t\tresult = {\n\t\t\t\t_key: generateUuid(),\n\t\t\t\ttype: '$executeOnly'\n\t\t\t};\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace TaskPresentationOptionsDTO {\n\texport function from(value: PresentationOptions | undefined): TaskPresentationOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Object.assign(Object.create(null), value);\n\t}\n\texport function to(value: TaskPresentationOptionsDTO | undefined): PresentationOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn PresentationOptions.defaults;\n\t\t}\n\t\treturn Object.assign(Object.create(null), PresentationOptions.defaults, value);\n\t}\n}\n\nnamespace RunOptionsDTO {\n\texport function from(value: RunOptions): RunOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Object.assign(Object.create(null), value);\n\t}\n\texport function to(value: RunOptionsDTO | undefined): RunOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn RunOptions.defaults;\n\t\t}\n\t\treturn Object.assign(Object.create(null), RunOptions.defaults, value);\n\t}\n}\n\nnamespace ProcessExecutionOptionsDTO {\n\texport function from(value: CommandOptions): ProcessExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\tcwd: value.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t}\n\texport function to(value: ProcessExecutionOptionsDTO | undefined): CommandOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn CommandOptions.defaults;\n\t\t}\n\t\treturn {\n\t\t\tcwd: value.cwd || CommandOptions.defaults.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t}\n}\n\nnamespace ProcessExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ProcessExecutionDTO {\n\t\tconst candidate = value as ProcessExecutionDTO;\n\t\treturn candidate && !!candidate.process;\n\t}\n\texport function from(value: CommandConfiguration): ProcessExecutionDTO {\n\t\tconst process: string = Types.isString(value.name) ? value.name : value.name!.value;\n\t\tconst args: string[] = value.args ? value.args.map(value => Types.isString(value) ? value : value.value) : [];\n\t\tconst result: ProcessExecutionDTO = {\n\t\t\tprocess: process,\n\t\t\targs: args\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ProcessExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ProcessExecutionDTO): CommandConfiguration {\n\t\tconst result: CommandConfiguration = {\n\t\t\truntime: RuntimeType.Process,\n\t\t\tname: value.process,\n\t\t\targs: value.args,\n\t\t\tpresentation: undefined\n\t\t};\n\t\tresult.options = ProcessExecutionOptionsDTO.to(value.options);\n\t\treturn result;\n\t}\n}\n\nnamespace ShellExecutionOptionsDTO {\n\texport function from(value: CommandOptions): ShellExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: ShellExecutionOptionsDTO = {\n\t\t\tcwd: value.cwd || CommandOptions.defaults.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t\tif (value.shell) {\n\t\t\tresult.executable = value.shell.executable;\n\t\t\tresult.shellArgs = value.shell.args;\n\t\t\tresult.shellQuoting = value.shell.quoting;\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ShellExecutionOptionsDTO): CommandOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: CommandOptions = {\n\t\t\tcwd: value.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t\tif (value.executable) {\n\t\t\tresult.shell = {\n\t\t\t\texecutable: value.executable\n\t\t\t};\n\t\t\tif (value.shellArgs) {\n\t\t\t\tresult.shell.args = value.shellArgs;\n\t\t\t}\n\t\t\tif (value.shellQuoting) {\n\t\t\t\tresult.shell.quoting = value.shellQuoting;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace ShellExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ShellExecutionDTO {\n\t\tconst candidate = value as ShellExecutionDTO;\n\t\treturn candidate && (!!candidate.commandLine || !!candidate.command);\n\t}\n\texport function from(value: CommandConfiguration): ShellExecutionDTO {\n\t\tconst result: ShellExecutionDTO = {};\n\t\tif (value.name && Types.isString(value.name) && (value.args === undefined || value.args === null || value.args.length === 0)) {\n\t\t\tresult.commandLine = value.name;\n\t\t} else {\n\t\t\tresult.command = value.name;\n\t\t\tresult.args = value.args;\n\t\t}\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ShellExecutionDTO): CommandConfiguration {\n\t\tconst result: CommandConfiguration = {\n\t\t\truntime: RuntimeType.Shell,\n\t\t\tname: value.commandLine ? value.commandLine : value.command,\n\t\t\targs: value.args,\n\t\t\tpresentation: undefined\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.to(value.options);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace CustomExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is CustomExecutionDTO {\n\t\tconst candidate = value as CustomExecutionDTO;\n\t\treturn candidate && candidate.customExecution === 'customExecution';\n\t}\n\n\texport function from(value: CommandConfiguration): CustomExecutionDTO {\n\t\treturn {\n\t\t\tcustomExecution: 'customExecution'\n\t\t};\n\t}\n\n\texport function to(value: CustomExecutionDTO): CommandConfiguration {\n\t\treturn {\n\t\t\truntime: RuntimeType.CustomExecution,\n\t\t\tpresentation: undefined\n\t\t};\n\t}\n}\n\nnamespace TaskSourceDTO {\n\texport function from(value: TaskSource): TaskSourceDTO {\n\t\tconst result: TaskSourceDTO = {\n\t\t\tlabel: value.label\n\t\t};\n\t\tif (value.kind === TaskSourceKind.Extension) {\n\t\t\tresult.extensionId = value.extension;\n\t\t\tif (value.workspaceFolder) {\n\t\t\t\tresult.scope = value.workspaceFolder.uri;\n\t\t\t} else {\n\t\t\t\tresult.scope = value.scope;\n\t\t\t}\n\t\t} else if (value.kind === TaskSourceKind.Workspace) {\n\t\t\tresult.extensionId = '$core';\n\t\t\tresult.scope = value.config.workspaceFolder ? value.config.workspaceFolder.uri : TaskScope.Global;\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: TaskSourceDTO, workspace: IWorkspaceContextService): ExtensionTaskSource {\n\t\tlet scope: TaskScope;\n\t\tlet workspaceFolder: IWorkspaceFolder | undefined;\n\t\tif ((value.scope === undefined) || ((typeof value.scope === 'number') && (value.scope !== TaskScope.Global))) {\n\t\t\tif (workspace.getWorkspace().folders.length === 0) {\n\t\t\t\tscope = TaskScope.Global;\n\t\t\t\tworkspaceFolder = undefined;\n\t\t\t} else {\n\t\t\t\tscope = TaskScope.Folder;\n\t\t\t\tworkspaceFolder = workspace.getWorkspace().folders[0];\n\t\t\t}\n\t\t} else if (typeof value.scope === 'number') {\n\t\t\tscope = value.scope;\n\t\t} else {\n\t\t\tscope = TaskScope.Folder;\n\t\t\tworkspaceFolder = Types.withNullAsUndefined(workspace.getWorkspaceFolder(URI.revive(value.scope)));\n\t\t}\n\t\tconst result: ExtensionTaskSource = {\n\t\t\tkind: TaskSourceKind.Extension,\n\t\t\tlabel: value.label,\n\t\t\textension: value.extensionId,\n\t\t\tscope,\n\t\t\tworkspaceFolder\n\t\t};\n\t\treturn result;\n\t}\n}\n\nnamespace TaskHandleDTO {\n\texport function is(value: any): value is TaskHandleDTO {\n\t\tconst candidate: TaskHandleDTO = value;\n\t\treturn candidate && Types.isString(candidate.id) && !!candidate.workspaceFolder;\n\t}\n}\n\nnamespace TaskDTO {\n\texport function from(task: Task | ConfiguringTask): TaskDTO | undefined {\n\t\tif (task === undefined || task === null || (!CustomTask.is(task) && !ContributedTask.is(task) && !ConfiguringTask.is(task))) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: TaskDTO = {\n\t\t\t_id: task._id,\n\t\t\tname: task.configurationProperties.name,\n\t\t\tdefinition: TaskDefinitionDTO.from(task.getDefinition(true)),\n\t\t\tsource: TaskSourceDTO.from(task._source),\n\t\t\texecution: undefined,\n\t\t\tpresentationOptions: !ConfiguringTask.is(task) && task.command ? TaskPresentationOptionsDTO.from(task.command.presentation) : undefined,\n\t\t\tisBackground: task.configurationProperties.isBackground,\n\t\t\tproblemMatchers: [],\n\t\t\thasDefinedMatchers: ContributedTask.is(task) ? task.hasDefinedMatchers : false,\n\t\t\trunOptions: RunOptionsDTO.from(task.runOptions),\n\t\t};\n\t\tif (task.configurationProperties.group) {\n\t\t\tresult.group = task.configurationProperties.group;\n\t\t}\n\t\tif (task.configurationProperties.detail) {\n\t\t\tresult.detail = task.configurationProperties.detail;\n\t\t}\n\t\tif (!ConfiguringTask.is(task) && task.command) {\n\t\t\tswitch (task.command.runtime) {\n\t\t\t\tcase RuntimeType.Process: result.execution = ProcessExecutionDTO.from(task.command); break;\n\t\t\t\tcase RuntimeType.Shell: result.execution = ShellExecutionDTO.from(task.command); break;\n\t\t\t\tcase RuntimeType.CustomExecution: result.execution = CustomExecutionDTO.from(task.command); break;\n\t\t\t}\n\t\t}\n\t\tif (task.configurationProperties.problemMatchers) {\n\t\t\tfor (let matcher of task.configurationProperties.problemMatchers) {\n\t\t\t\tif (Types.isString(matcher)) {\n\t\t\t\t\tresult.problemMatchers.push(matcher);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function to(task: TaskDTO | undefined, workspace: IWorkspaceContextService, executeOnly: boolean): ContributedTask | undefined {\n\t\tif (!task || (typeof task.name !== 'string')) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet command: CommandConfiguration | undefined;\n\t\tif (task.execution) {\n\t\t\tif (ShellExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = ShellExecutionDTO.to(task.execution);\n\t\t\t} else if (ProcessExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = ProcessExecutionDTO.to(task.execution);\n\t\t\t} else if (CustomExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = CustomExecutionDTO.to(task.execution);\n\t\t\t}\n\t\t}\n\n\t\tif (!command) {\n\t\t\treturn undefined;\n\t\t}\n\t\tcommand.presentation = TaskPresentationOptionsDTO.to(task.presentationOptions);\n\t\tconst source = TaskSourceDTO.to(task.source, workspace);\n\n\t\tconst label = nls.localize('task.label', '{0}: {1}', source.label, task.name);\n\t\tconst definition = TaskDefinitionDTO.to(task.definition, executeOnly)!;\n\t\tconst id = (CustomExecutionDTO.is(task.execution!) && task._id) ? task._id : `${task.source.extensionId}.${definition._key}`;\n\t\tconst result: ContributedTask = new ContributedTask(\n\t\t\tid, // uuidMap.getUUID(identifier)\n\t\t\tsource,\n\t\t\tlabel,\n\t\t\tdefinition.type,\n\t\t\tdefinition,\n\t\t\tcommand,\n\t\t\ttask.hasDefinedMatchers,\n\t\t\tRunOptionsDTO.to(task.runOptions),\n\t\t\t{\n\t\t\t\tname: task.name,\n\t\t\t\tidentifier: label,\n\t\t\t\tgroup: task.group,\n\t\t\t\tisBackground: !!task.isBackground,\n\t\t\t\tproblemMatchers: task.problemMatchers.slice(),\n\t\t\t\tdetail: task.detail\n\t\t\t}\n\t\t);\n\t\treturn result;\n\t}\n}\n\nnamespace TaskFilterDTO {\n\texport function from(value: TaskFilter): TaskFilterDTO {\n\t\treturn value;\n\t}\n\texport function to(value: TaskFilterDTO | undefined): TaskFilter | undefined {\n\t\treturn value;\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadTask)\nexport class MainThreadTask implements MainThreadTaskShape {\n\n\tprivate readonly _extHostContext: IExtHostContext | undefined;\n\tprivate readonly _proxy: ExtHostTaskShape;\n\tprivate readonly _providers: Map<number, { disposable: IDisposable, provider: ITaskProvider }>;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITaskService private readonly _taskService: ITaskService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextServer: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _configurationResolverService: IConfigurationResolverService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTask);\n\t\tthis._providers = new Map();\n\t\tthis._taskService.onDidStateChange(async (event: TaskEvent) => {\n\t\t\tconst task = event.__task!;\n\t\t\tif (event.kind === TaskEventKind.Start) {\n\t\t\t\tconst execution = TaskExecutionDTO.from(task.getTaskExecution());\n\t\t\t\tlet resolvedDefinition: TaskDefinitionDTO = execution.task!.definition;\n\t\t\t\tif (execution.task?.execution && CustomExecutionDTO.is(execution.task.execution) && event.resolvedVariables) {\n\t\t\t\t\tconst dictionary: IStringDictionary<string> = {};\n\t\t\t\t\tArray.from(event.resolvedVariables.entries()).forEach(entry => dictionary[entry[0]] = entry[1]);\n\t\t\t\t\tresolvedDefinition = await this._configurationResolverService.resolveAnyAsync(task.getWorkspaceFolder(),\n\t\t\t\t\t\texecution.task.definition, dictionary);\n\t\t\t\t}\n\t\t\t\tthis._proxy.$onDidStartTask(execution, event.terminalId!, resolvedDefinition);\n\t\t\t} else if (event.kind === TaskEventKind.ProcessStarted) {\n\t\t\t\tthis._proxy.$onDidStartTaskProcess(TaskProcessStartedDTO.from(task.getTaskExecution(), event.processId!));\n\t\t\t} else if (event.kind === TaskEventKind.ProcessEnded) {\n\t\t\t\tthis._proxy.$onDidEndTaskProcess(TaskProcessEndedDTO.from(task.getTaskExecution(), event.exitCode));\n\t\t\t} else if (event.kind === TaskEventKind.End) {\n\t\t\t\tthis._proxy.$OnDidEndTask(TaskExecutionDTO.from(task.getTaskExecution()));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._providers.forEach((value) => {\n\t\t\tvalue.disposable.dispose();\n\t\t});\n\t\tthis._providers.clear();\n\t}\n\n\t$createTaskId(taskDTO: TaskDTO): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet task = TaskDTO.to(taskDTO, this._workspaceContextServer, true);\n\t\t\tif (task) {\n\t\t\t\tresolve(task._id);\n\t\t\t} else {\n\t\t\t\treject(new Error('Task could not be created from DTO'));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic $registerTaskProvider(handle: number, type: string): Promise<void> {\n\t\tconst provider: ITaskProvider = {\n\t\t\tprovideTasks: (validTypes: IStringDictionary<boolean>) => {\n\t\t\t\treturn Promise.resolve(this._proxy.$provideTasks(handle, validTypes)).then((value) => {\n\t\t\t\t\tconst tasks: Task[] = [];\n\t\t\t\t\tfor (let dto of value.tasks) {\n\t\t\t\t\t\tconst task = TaskDTO.to(dto, this._workspaceContextServer, true);\n\t\t\t\t\t\tif (task) {\n\t\t\t\t\t\t\ttasks.push(task);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error(`Task System: can not convert task: ${JSON.stringify(dto.definition, undefined, 0)}. Task will be dropped`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttasks,\n\t\t\t\t\t\textension: value.extension\n\t\t\t\t\t} as TaskSet;\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveTask: (task: ConfiguringTask) => {\n\t\t\t\tconst dto = TaskDTO.from(task);\n\n\t\t\t\tif (dto) {\n\t\t\t\t\tdto.name = ((dto.name === undefined) ? '' : dto.name); // Using an empty name causes the name to default to the one given by the provider.\n\t\t\t\t\treturn Promise.resolve(this._proxy.$resolveTask(handle, dto)).then(resolvedTask => {\n\t\t\t\t\t\tif (resolvedTask) {\n\t\t\t\t\t\t\treturn TaskDTO.to(resolvedTask, this._workspaceContextServer, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve<ContributedTask | undefined>(undefined);\n\t\t\t}\n\t\t};\n\t\tconst disposable = this._taskService.registerTaskProvider(provider, type);\n\t\tthis._providers.set(handle, { disposable, provider });\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic $unregisterTaskProvider(handle: number): Promise<void> {\n\t\tconst provider = this._providers.get(handle);\n\t\tif (provider) {\n\t\t\tprovider.disposable.dispose();\n\t\t\tthis._providers.delete(handle);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic $fetchTasks(filter?: TaskFilterDTO): Promise<TaskDTO[]> {\n\t\treturn this._taskService.tasks(TaskFilterDTO.to(filter)).then((tasks) => {\n\t\t\tconst result: TaskDTO[] = [];\n\t\t\tfor (let task of tasks) {\n\t\t\t\tconst item = TaskDTO.from(task);\n\t\t\t\tif (item) {\n\t\t\t\t\tresult.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate getWorkspace(value: UriComponents | string): string | IWorkspace | IWorkspaceFolder | null {\n\t\tlet workspace;\n\t\tif (typeof value === 'string') {\n\t\t\tworkspace = value;\n\t\t} else {\n\t\t\tconst workspaceObject = this._workspaceContextServer.getWorkspace();\n\t\t\tconst uri = URI.revive(value);\n\t\t\tif (workspaceObject.configuration?.toString() === uri.toString()) {\n\t\t\t\tworkspace = workspaceObject;\n\t\t\t} else {\n\t\t\t\tworkspace = this._workspaceContextServer.getWorkspaceFolder(uri);\n\t\t\t}\n\t\t}\n\t\treturn workspace;\n\t}\n\n\tpublic async $getTaskExecution(value: TaskHandleDTO | TaskDTO): Promise<TaskExecutionDTO> {\n\t\tif (TaskHandleDTO.is(value)) {\n\t\t\tconst workspace = this.getWorkspace(value.workspaceFolder);\n\t\t\tif (workspace) {\n\t\t\t\tconst task = await this._taskService.getTask(workspace, value.id, true);\n\t\t\t\tif (task) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: task._id,\n\t\t\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tthrow new Error('Task not found');\n\t\t\t} else {\n\t\t\t\tthrow new Error('No workspace folder');\n\t\t\t}\n\t\t} else {\n\t\t\tconst task = TaskDTO.to(value, this._workspaceContextServer, true)!;\n\t\t\treturn {\n\t\t\t\tid: task._id,\n\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t};\n\t\t}\n\t}\n\n\t// Passing in a TaskHandleDTO will cause the task to get re-resolved, which is important for tasks are coming from the core,\n\t// such as those gotten from a fetchTasks, since they can have missing configuration properties.\n\tpublic $executeTask(value: TaskHandleDTO | TaskDTO): Promise<TaskExecutionDTO> {\n\t\treturn new Promise<TaskExecutionDTO>((resolve, reject) => {\n\t\t\tif (TaskHandleDTO.is(value)) {\n\t\t\t\tconst workspace = this.getWorkspace(value.workspaceFolder);\n\t\t\t\tif (workspace) {\n\t\t\t\t\tthis._taskService.getTask(workspace, value.id, true).then((task: Task | undefined) => {\n\t\t\t\t\t\tif (!task) {\n\t\t\t\t\t\t\treject(new Error('Task not found'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst result: TaskExecutionDTO = {\n\t\t\t\t\t\t\t\tid: value.id,\n\t\t\t\t\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis._taskService.run(task).then(summary => {\n\t\t\t\t\t\t\t\t// Ensure that the task execution gets cleaned up if the exit code is undefined\n\t\t\t\t\t\t\t\t// This can happen when the task has dependent tasks and one of them failed\n\t\t\t\t\t\t\t\tif ((summary?.exitCode === undefined) || (summary.exitCode !== 0)) {\n\t\t\t\t\t\t\t\t\tthis._proxy.$OnDidEndTask(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, reason => {\n\t\t\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (_error) => {\n\t\t\t\t\t\treject(new Error('Task not found'));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('No workspace folder'));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst task = TaskDTO.to(value, this._workspaceContextServer, true)!;\n\t\t\t\tthis._taskService.run(task).then(undefined, reason => {\n\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t});\n\t\t\t\tconst result: TaskExecutionDTO = {\n\t\t\t\t\tid: task._id,\n\t\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t\t};\n\t\t\t\tresolve(result);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tpublic $customExecutionComplete(id: string, result?: number): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis._taskService.getActiveTasks().then((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (id === task._id) {\n\t\t\t\t\t\tthis._taskService.extensionCallbackTaskComplete(task, result).then((value) => {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treject(new Error('Task to mark as complete not found'));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $terminateTask(id: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis._taskService.getActiveTasks().then((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (id === task._id) {\n\t\t\t\t\t\tthis._taskService.terminate(task).then((value) => {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\t\treject(undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treject(new Error('Task to terminate not found'));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $registerTaskSystem(key: string, info: TaskSystemInfoDTO): void {\n\t\tlet platform: Platform.Platform;\n\t\tswitch (info.platform) {\n\t\t\tcase 'Web':\n\t\t\t\tplatform = Platform.Platform.Web;\n\t\t\t\tbreak;\n\t\t\tcase 'win32':\n\t\t\t\tplatform = Platform.Platform.Windows;\n\t\t\t\tbreak;\n\t\t\tcase 'darwin':\n\t\t\t\tplatform = Platform.Platform.Mac;\n\t\t\t\tbreak;\n\t\t\tcase 'linux':\n\t\t\t\tplatform = Platform.Platform.Linux;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tplatform = Platform.platform;\n\t\t}\n\t\tthis._taskService.registerTaskSystem(key, {\n\t\t\tplatform: platform,\n\t\t\turiProvider: (path: string): URI => {\n\t\t\t\treturn URI.parse(`${info.scheme}://${info.authority}${path}`);\n\t\t\t},\n\t\t\tcontext: this._extHostContext,\n\t\t\tresolveVariables: (workspaceFolder: IWorkspaceFolder, toResolve: ResolveSet, target: ConfigurationTarget): Promise<ResolvedVariables | undefined> => {\n\t\t\t\tconst vars: string[] = [];\n\t\t\t\ttoResolve.variables.forEach(item => vars.push(item));\n\t\t\t\treturn Promise.resolve(this._proxy.$resolveVariables(workspaceFolder.uri, { process: toResolve.process, variables: vars })).then(values => {\n\t\t\t\t\tconst partiallyResolvedVars = new Array<string>();\n\t\t\t\t\tforEach(values.variables, (entry) => {\n\t\t\t\t\t\tpartiallyResolvedVars.push(entry.value);\n\t\t\t\t\t});\n\t\t\t\t\treturn new Promise<ResolvedVariables | undefined>((resolve, reject) => {\n\t\t\t\t\t\tthis._configurationResolverService.resolveWithInteraction(workspaceFolder, partiallyResolvedVars, 'tasks', undefined, target).then(resolvedVars => {\n\t\t\t\t\t\t\tif (!resolvedVars) {\n\t\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst result: ResolvedVariables = {\n\t\t\t\t\t\t\t\tprocess: undefined,\n\t\t\t\t\t\t\t\tvariables: new Map<string, string>()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor (let i = 0; i < partiallyResolvedVars.length; i++) {\n\t\t\t\t\t\t\t\tconst variableName = vars[i].substring(2, vars[i].length - 1);\n\t\t\t\t\t\t\t\tif (resolvedVars && values.variables[vars[i]] === vars[i]) {\n\t\t\t\t\t\t\t\t\tconst resolved = resolvedVars.get(variableName);\n\t\t\t\t\t\t\t\t\tif (typeof resolved === 'string') {\n\t\t\t\t\t\t\t\t\t\tresult.variables.set(variableName, resolved);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresult.variables.set(variableName, partiallyResolvedVars[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Types.isString(values.process)) {\n\t\t\t\t\t\t\t\tresult.process = values.process;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}, reason => {\n\t\t\t\t\t\t\treject(reason);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetDefaultShellAndArgs: (): Promise<{ shell: string, args: string[] | string | undefined }> => {\n\t\t\t\treturn Promise.resolve(this._proxy.$getDefaultShellAndArgs());\n\t\t\t},\n\t\t\tfindExecutable: (command: string, cwd?: string, paths?: string[]): Promise<string | undefined> => {\n\t\t\t\treturn this._proxy.$findExecutable(command, cwd, paths);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $registerSupportedExecutions(custom?: boolean, shell?: boolean, process?: boolean): Promise<void> {\n\t\treturn this._taskService.registerSupportedExecutions(custom, shell, process);\n\t}\n\n}\n"]}