{"version":3,"file":"mainThreadDocuments.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/api/browser/mainThreadDocuments.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IReference, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelService, shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IFileService, FileOperation } from 'vs/platform/files/common/files';\nimport { MainThreadDocumentsAndEditors } from 'vs/workbench/api/browser/mainThreadDocumentsAndEditors';\nimport { ExtHostContext, ExtHostDocumentsShape, IExtHostContext, MainThreadDocumentsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { toLocalResource, extUri, IExtUri } from 'vs/base/common/resources';\nimport { IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { Emitter } from 'vs/base/common/event';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\n\nexport class BoundModelReferenceCollection {\n\n\tprivate _data = new Array<{ uri: URI, length: number, dispose(): void }>();\n\tprivate _length = 0;\n\n\tconstructor(\n\t\tprivate readonly _extUri: IExtUri,\n\t\tprivate readonly _maxAge: number = 1000 * 60 * 3,\n\t\tprivate readonly _maxLength: number = 1024 * 1024 * 80,\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._data = dispose(this._data);\n\t}\n\n\tremove(uri: URI): void {\n\t\tfor (const entry of [...this._data] /* copy array because dispose will modify it */) {\n\t\t\tif (this._extUri.isEqualOrParent(entry.uri, uri)) {\n\t\t\t\tentry.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(uri: URI, ref: IReference<any>, length: number = 0): void {\n\t\t// const length = ref.object.textEditorModel.getValueLength();\n\t\tlet handle: any;\n\t\tlet entry: { uri: URI, length: number, dispose(): void };\n\t\tconst dispose = () => {\n\t\t\tconst idx = this._data.indexOf(entry);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._length -= length;\n\t\t\t\tref.dispose();\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tthis._data.splice(idx, 1);\n\t\t\t}\n\t\t};\n\t\thandle = setTimeout(dispose, this._maxAge);\n\t\tentry = { uri, length, dispose };\n\n\t\tthis._data.push(entry);\n\t\tthis._length += length;\n\t\tthis._cleanup();\n\t}\n\n\tprivate _cleanup(): void {\n\t\twhile (this._length > this._maxLength) {\n\t\t\tthis._data[0].dispose();\n\t\t}\n\t}\n}\n\nclass ModelTracker extends Disposable {\n\n\tprivate _knownVersionId: number;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _onIsCaughtUpWithContentChanges: Emitter<URI>,\n\t\tprivate readonly _proxy: ExtHostDocumentsShape,\n\t\tprivate readonly _textFileService: ITextFileService,\n\t) {\n\t\tsuper();\n\t\tthis._knownVersionId = this._model.getVersionId();\n\t\tthis._register(this._model.onDidChangeContent((e) => {\n\t\t\tthis._knownVersionId = e.versionId;\n\t\t\tthis._proxy.$acceptModelChanged(this._model.uri, e, this._textFileService.isDirty(this._model.uri));\n\t\t\tif (this.isCaughtUpWithContentChanges()) {\n\t\t\t\tthis._onIsCaughtUpWithContentChanges.fire(this._model.uri);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic isCaughtUpWithContentChanges(): boolean {\n\t\treturn (this._model.getVersionId() === this._knownVersionId);\n\t}\n}\n\nexport class MainThreadDocuments extends Disposable implements MainThreadDocumentsShape {\n\n\tprivate _onIsCaughtUpWithContentChanges = this._register(new Emitter<URI>());\n\tpublic readonly onIsCaughtUpWithContentChanges = this._onIsCaughtUpWithContentChanges.event;\n\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _textModelResolverService: ITextModelService;\n\tprivate readonly _textFileService: ITextFileService;\n\tprivate readonly _fileService: IFileService;\n\tprivate readonly _environmentService: IWorkbenchEnvironmentService;\n\tprivate readonly _uriIdentityService: IUriIdentityService;\n\n\tprivate _modelTrackers: { [modelUrl: string]: ModelTracker; };\n\tprivate readonly _proxy: ExtHostDocumentsShape;\n\tprivate readonly _modelIsSynced = new Set<string>();\n\tprivate readonly _modelReferenceCollection: BoundModelReferenceCollection;\n\n\tconstructor(\n\t\tdocumentsAndEditors: MainThreadDocumentsAndEditors,\n\t\textHostContext: IExtHostContext,\n\t\t@IModelService modelService: IModelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IPathService private readonly _pathService: IPathService\n\t) {\n\t\tsuper();\n\t\tthis._modelService = modelService;\n\t\tthis._textModelResolverService = textModelResolverService;\n\t\tthis._textFileService = textFileService;\n\t\tthis._fileService = fileService;\n\t\tthis._environmentService = environmentService;\n\t\tthis._uriIdentityService = uriIdentityService;\n\n\t\tthis._modelReferenceCollection = this._register(new BoundModelReferenceCollection(uriIdentityService.extUri));\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocuments);\n\n\t\tthis._register(documentsAndEditors.onDocumentAdd(models => models.forEach(this._onModelAdded, this)));\n\t\tthis._register(documentsAndEditors.onDocumentRemove(urls => urls.forEach(this._onModelRemoved, this)));\n\t\tthis._register(modelService.onModelModeChanged(this._onModelModeChanged, this));\n\n\t\tthis._register(textFileService.files.onDidSave(e => {\n\t\t\tif (this._shouldHandleFileEvent(e.model.resource)) {\n\t\t\t\tthis._proxy.$acceptModelSaved(e.model.resource);\n\t\t\t}\n\t\t}));\n\t\tthis._register(textFileService.files.onDidChangeDirty(m => {\n\t\t\tif (this._shouldHandleFileEvent(m.resource)) {\n\t\t\t\tthis._proxy.$acceptDirtyStateChanged(m.resource, m.isDirty());\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tconst isMove = e.operation === FileOperation.MOVE;\n\t\t\tif (isMove || e.operation === FileOperation.DELETE) {\n\t\t\t\tfor (const pair of e.files) {\n\t\t\t\t\tconst removed = isMove ? pair.source : pair.target;\n\t\t\t\t\tif (removed) {\n\t\t\t\t\t\tthis._modelReferenceCollection.remove(removed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._modelTrackers = Object.create(null);\n\t}\n\n\tpublic override dispose(): void {\n\t\tObject.keys(this._modelTrackers).forEach((modelUrl) => {\n\t\t\tthis._modelTrackers[modelUrl].dispose();\n\t\t});\n\t\tthis._modelTrackers = Object.create(null);\n\t\tsuper.dispose();\n\t}\n\n\tpublic isCaughtUpWithContentChanges(resource: URI): boolean {\n\t\tconst modelUrl = resource.toString();\n\t\tif (this._modelTrackers[modelUrl]) {\n\t\t\treturn this._modelTrackers[modelUrl].isCaughtUpWithContentChanges();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _shouldHandleFileEvent(resource: URI): boolean {\n\t\tconst model = this._modelService.getModel(resource);\n\t\treturn !!model && shouldSynchronizeModel(model);\n\t}\n\n\tprivate _onModelAdded(model: ITextModel): void {\n\t\t// Same filter as in mainThreadEditorsTracker\n\t\tif (!shouldSynchronizeModel(model)) {\n\t\t\t// don't synchronize too large models\n\t\t\treturn;\n\t\t}\n\t\tconst modelUrl = model.uri;\n\t\tthis._modelIsSynced.add(modelUrl.toString());\n\t\tthis._modelTrackers[modelUrl.toString()] = new ModelTracker(model, this._onIsCaughtUpWithContentChanges, this._proxy, this._textFileService);\n\t}\n\n\tprivate _onModelModeChanged(event: { model: ITextModel; oldModeId: string; }): void {\n\t\tlet { model } = event;\n\t\tconst modelUrl = model.uri;\n\t\tif (!this._modelIsSynced.has(modelUrl.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tthis._proxy.$acceptModelModeChanged(model.uri, model.getLanguageIdentifier().language);\n\t}\n\n\tprivate _onModelRemoved(modelUrl: URI): void {\n\t\tconst strModelUrl = modelUrl.toString();\n\t\tif (!this._modelIsSynced.has(strModelUrl)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._modelIsSynced.delete(strModelUrl);\n\t\tthis._modelTrackers[strModelUrl].dispose();\n\t\tdelete this._modelTrackers[strModelUrl];\n\t}\n\n\t// --- from extension host process\n\n\t$trySaveDocument(uri: UriComponents): Promise<boolean> {\n\t\treturn this._textFileService.save(URI.revive(uri)).then(target => !!target);\n\t}\n\n\t$tryOpenDocument(uriData: UriComponents): Promise<URI> {\n\t\tconst inputUri = URI.revive(uriData);\n\t\tif (!inputUri.scheme || !(inputUri.fsPath || inputUri.authority)) {\n\t\t\treturn Promise.reject(new Error(`Invalid uri. Scheme and authority or path must be set.`));\n\t\t}\n\n\t\tconst canonicalUri = this._uriIdentityService.asCanonicalUri(inputUri);\n\n\t\tlet promise: Promise<URI>;\n\t\tswitch (canonicalUri.scheme) {\n\t\t\tcase Schemas.untitled:\n\t\t\t\tpromise = this._handleUntitledScheme(canonicalUri);\n\t\t\t\tbreak;\n\t\t\tcase Schemas.file:\n\t\t\tdefault:\n\t\t\t\tpromise = this._handleAsResourceInput(canonicalUri);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn promise.then(documentUri => {\n\t\t\tif (!documentUri) {\n\t\t\t\treturn Promise.reject(new Error(`cannot open ${canonicalUri.toString()}`));\n\t\t\t} else if (!extUri.isEqual(documentUri, canonicalUri)) {\n\t\t\t\treturn Promise.reject(new Error(`cannot open ${canonicalUri.toString()}. Detail: Actual document opened as ${documentUri.toString()}`));\n\t\t\t} else if (!this._modelIsSynced.has(canonicalUri.toString())) {\n\t\t\t\treturn Promise.reject(new Error(`cannot open ${canonicalUri.toString()}. Detail: Files above 50MB cannot be synchronized with extensions.`));\n\t\t\t} else {\n\t\t\t\treturn canonicalUri;\n\t\t\t}\n\t\t}, err => {\n\t\t\treturn Promise.reject(new Error(`cannot open ${canonicalUri.toString()}. Detail: ${toErrorMessage(err)}`));\n\t\t});\n\t}\n\n\t$tryCreateDocument(options?: { language?: string, content?: string }): Promise<URI> {\n\t\treturn this._doCreateUntitled(undefined, options ? options.language : undefined, options ? options.content : undefined);\n\t}\n\n\tprivate _handleAsResourceInput(uri: URI): Promise<URI> {\n\t\treturn this._textModelResolverService.createModelReference(uri).then(ref => {\n\t\t\tthis._modelReferenceCollection.add(uri, ref, ref.object.textEditorModel.getValueLength());\n\t\t\treturn ref.object.textEditorModel.uri;\n\t\t});\n\t}\n\n\tprivate _handleUntitledScheme(uri: URI): Promise<URI> {\n\t\tconst asLocalUri = toLocalResource(uri, this._environmentService.remoteAuthority, this._pathService.defaultUriScheme);\n\t\treturn this._fileService.resolve(asLocalUri).then(stats => {\n\t\t\t// don't create a new file ontop of an existing file\n\t\t\treturn Promise.reject(new Error('file already exists'));\n\t\t}, err => {\n\t\t\treturn this._doCreateUntitled(Boolean(uri.path) ? uri : undefined);\n\t\t});\n\t}\n\n\tprivate _doCreateUntitled(associatedResource?: URI, mode?: string, initialValue?: string): Promise<URI> {\n\t\treturn this._textFileService.untitled.resolve({\n\t\t\tassociatedResource,\n\t\t\tmode,\n\t\t\tinitialValue\n\t\t}).then(model => {\n\t\t\tconst resource = model.resource;\n\n\t\t\tif (!this._modelIsSynced.has(resource.toString())) {\n\t\t\t\tthrow new Error(`expected URI ${resource.toString()} to have come to LIFE`);\n\t\t\t}\n\n\t\t\tthis._proxy.$acceptDirtyStateChanged(resource, true); // mark as dirty\n\n\t\t\treturn resource;\n\t\t});\n\t}\n}\n"]}