{"version":3,"sources":["vs/workbench/electron-sandbox/actions/windowActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAqBhG,IAAa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,gBAAM;QAKnD,YACC,EAAU,EACV,KAAa,EACwB,iBAAqC;YAE1E,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAFoB,sBAAiB,GAAjB,iBAAiB,CAAoB;QAG3E,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACtC,CAAC;KACD,CAAA;IAdgB,2BAAE,GAAG,8BAA8B,CAAC;IACpC,8BAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAa,EAAE,IAAc,CAAC,CAAC;IAHpD,wBAAwB;QAQlC,WAAA,2BAAkB,CAAA;OARR,wBAAwB,CAgBpC;IAhBY,4DAAwB;IAkBrC,IAAsB,cAAc,GAApC,MAAsB,cAAe,SAAQ,gBAAM;QAOlD,YACC,EAAU,EACV,KAAa,EAC2B,oBAA2C;YAEnF,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAFuB,yBAAoB,GAApB,oBAAoB,CAAuB;QAGpF,CAAC;QAES,KAAK,CAAC,sBAAsB,CAAC,KAAa;YACnD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,8DAA8D;YAEzF,IAAI,KAAK,GAAG,cAAc,CAAC,cAAc,IAAI,KAAK,GAAG,cAAc,CAAC,cAAc,EAAE;gBACnF,OAAO,CAAC,mDAAmD;aAC3D;YAED,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAE/E,CAAA,GAAA,kBAAS,CAAA,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC;KACD,CAAA;IAxBwB,0BAAW,GAAG,kBAAkB,CAAC;IAEjC,6BAAc,GAAG,CAAC,CAAC;IACnB,6BAAc,GAAG,CAAC,CAAC,CAAC;IALvB,cAAc;QAUjC,WAAA,qCAAqB,CAAA;OAVF,cAAc,CA0BnC;IA1BqB,wCAAc;IA4BpC,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,cAAc;QAK/C,YACC,EAAU,EACV,KAAa,EACU,oBAA2C;YAElE,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;QACxC,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,sBAAsB,CAAC,CAAA,GAAA,sBAAY,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC;KACD,CAAA;IAdgB,eAAE,GAAG,yBAAyB,CAAC;IAC/B,kBAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAQ,EAAE,IAAS,CAAC,CAAC;IAH1C,YAAY;QAQtB,WAAA,qCAAqB,CAAA;OARX,YAAY,CAgBxB;IAhBY,oCAAY;IAkBzB,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,cAAc;QAKhD,YACC,EAAU,EACV,KAAa,EACU,oBAA2C;YAElE,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;QACxC,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,sBAAsB,CAAC,CAAA,GAAA,sBAAY,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC;KACD,CAAA;IAdgB,gBAAE,GAAG,0BAA0B,CAAC;IAChC,mBAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAS,EAAE,IAAU,CAAC,CAAC;IAH5C,aAAa;QAQvB,WAAA,qCAAqB,CAAA;OARX,aAAa,CAgBzB;IAhBY,sCAAa;IAkB1B,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,cAAc;QAKlD,YACC,EAAU,EACV,KAAa,EACU,oBAA2C;YAElE,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;QACxC,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC;KACD,CAAA;IAdgB,kBAAE,GAAG,4BAA4B,CAAC;IAClC,qBAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAW,EAAE,IAAY,CAAC,CAAC;IAHhD,eAAe;QAQzB,WAAA,qCAAqB,CAAA;OARX,eAAe,CAgB3B;IAhBY,0CAAe;IAkB5B,MAAsB,gBAAiB,SAAQ,gBAAM;QAapD,YACC,EAAU,EACV,KAAa,EACI,iBAAqC,EACrC,iBAAqC,EACrC,YAA2B,EAC3B,WAAyB,EACzB,iBAAqC;YAEtD,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YANA,sBAAiB,GAAjB,iBAAiB,CAAoB;YACrC,sBAAiB,GAAjB,iBAAiB,CAAoB;YACrC,iBAAY,GAAZ,YAAY,CAAe;YAC3B,gBAAW,GAAX,WAAW,CAAc;YACzB,sBAAiB,GAAjB,iBAAiB,CAAoB;YAlBtC,sBAAiB,GAAsB;gBACvD,SAAS,EAAE,kBAAO,CAAC,WAAW,CAAC,UAAU;gBACzC,OAAO,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAO,EAAE,IAAc,CAAC;aAC1C,CAAC;YAEe,2BAAsB,GAAsB;gBAC5D,SAAS,EAAE,eAAe,GAAG,kBAAO,CAAC,UAAU;gBAC/C,OAAO,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAO,EAAE,IAAc,CAAC;gBAC1C,aAAa,EAAE,IAAI;aACnB,CAAC;QAYF,CAAC;QAIQ,KAAK,CAAC,GAAG;YACjB,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;YAExD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;YAC1D,MAAM,WAAW,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAyB,EAAE,IAA8B,CAAC,CAAC;YACxF,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBAClC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,GAAA,8CAAiC,CAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAA,kCAAqB,CAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC9N,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,GAAA,8CAAiC,CAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,GAAA,kCAAqB,CAAA,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAQ,CAAC,IAAI,CAAC;gBAC1M,OAAO;oBACN,OAAO,EAAE,MAAM,CAAC,EAAE;oBAClB,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAsB,EAAE,IAAmB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;oBAC5G,WAAW,EAAE,CAAA,GAAA,+BAAc,CAAA,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC;oBACpF,WAAW,EAAE,CAAC,eAAe,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAS,EAAE,IAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;oBAChG,OAAO,EAAE,eAAe,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS;iBAC5H,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,cAAc,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;YAErH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE;gBACrD,UAAU,EAAE,iBAAiB;gBAC7B,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC;gBACjC,WAAW;gBACX,aAAa,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACtH,sBAAsB,EAAE,KAAK,EAAC,OAAO,EAAC,EAAE;oBACvC,MAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACnE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC;aACD,CAAC,CAAC;YAEH,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aAC/D;QACF,CAAC;KACD;IA7DD,4CA6DC;IAED,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,gBAAgB;QAKjD,YACC,EAAU,EACV,KAAa,EACO,iBAAqC,EACrC,iBAAqC,EAC1C,YAA2B,EAC5B,WAAyB,EACnB,iBAAqC;YAEzD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;QACtG,CAAC;QAES,eAAe;YACxB,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAA;IAlBgB,eAAE,GAAG,+BAA+B,CAAC;IACrC,kBAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAc,EAAE,IAAkB,CAAC,CAAC;IAHzD,YAAY;QAQtB,WAAA,+BAAkB,CAAA;QAClB,WAAA,+BAAkB,CAAA;QAClB,WAAA,4BAAa,CAAA;QACb,WAAA,0BAAY,CAAA;QACZ,WAAA,2BAAkB,CAAA;OAZR,YAAY,CAoBxB;IApBY,oCAAY;IAsBzB,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,gBAAgB;QAKtD,YACC,EAAU,EACV,KAAa,EACO,iBAAqC,EACrC,iBAAqC,EAC1C,YAA2B,EAC5B,WAAyB,EACnB,iBAAqC;YAEzD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;QACtG,CAAC;QAES,eAAe;YACxB,OAAO,IAAI,CAAC;QACb,CAAC;KACD,CAAA;IAlBgB,oBAAE,GAAG,oCAAoC,CAAC;IAC1C,uBAAK,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAmB,EAAE,IAAwB,CAAC,CAAC;IAHpE,iBAAiB;QAQ3B,WAAA,+BAAkB,CAAA;QAClB,WAAA,+BAAkB,CAAA;QAClB,WAAA,4BAAa,CAAA;QACb,WAAA,0BAAY,CAAA;QACZ,WAAA,2BAAkB,CAAA;OAZR,iBAAiB,CAoB7B;IApBY,8CAAiB;IAsBvB,MAAM,mBAAmB,GAAoB,UAAU,QAA0B;QACvF,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,YAAY,EAAE,CAAC;IACxD,CAAC,CAAC;IAFW,QAAA,mBAAmB,uBAE9B;IAEK,MAAM,4BAA4B,GAAoB,UAAU,QAA0B;QAChG,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,qBAAqB,EAAE,CAAC;IACjE,CAAC,CAAC;IAFW,QAAA,4BAA4B,gCAEvC;IAEK,MAAM,wBAAwB,GAAoB,UAAU,QAA0B;QAC5F,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC7D,CAAC,CAAC;IAFW,QAAA,wBAAwB,4BAEnC;IAEK,MAAM,+BAA+B,GAAoB,UAAU,QAA0B;QACnG,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,wBAAwB,EAAE,CAAC;IACpE,CAAC,CAAC;IAFW,QAAA,+BAA+B,mCAE1C;IAEK,MAAM,6BAA6B,GAAoB,UAAU,QAA0B;QACjG,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,kBAAkB,EAAE,CAAC;IAC9D,CAAC,CAAC;IAFW,QAAA,6BAA6B,iCAExC;IAEK,MAAM,0BAA0B,GAAoB,UAAU,QAA0B;QAC9F,OAAO,QAAQ,CAAC,GAAG,CAAC,2BAAkB,CAAC,CAAC,mBAAmB,EAAE,CAAC;IAC/D,CAAC,CAAC;IAFW,QAAA,0BAA0B,8BAErC","file":"windowActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/actions';\nimport { URI } from 'vs/base/common/uri';\nimport { Action } from 'vs/base/common/actions';\nimport { localize } from 'vs/nls';\nimport { applyZoom } from 'vs/platform/windows/electron-sandbox/window';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { getZoomLevel } from 'vs/base/browser/browser';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IQuickInputService, IQuickInputButton } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport class CloseCurrentWindowAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeWindow';\n\tstatic readonly LABEL = localize('closeWindow', \"Close Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.nativeHostService.closeWindow();\n\t}\n}\n\nexport abstract class BaseZoomAction extends Action {\n\n\tprivate static readonly SETTING_KEY = 'window.zoomLevel';\n\n\tprivate static readonly MAX_ZOOM_LEVEL = 9;\n\tprivate static readonly MIN_ZOOM_LEVEL = -8;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprotected async setConfiguredZoomLevel(level: number): Promise<void> {\n\t\tlevel = Math.round(level); // when reaching smallest zoom, prevent fractional zoom levels\n\n\t\tif (level > BaseZoomAction.MAX_ZOOM_LEVEL || level < BaseZoomAction.MIN_ZOOM_LEVEL) {\n\t\t\treturn; // https://github.com/microsoft/vscode/issues/48357\n\t\t}\n\n\t\tawait this.configurationService.updateValue(BaseZoomAction.SETTING_KEY, level);\n\n\t\tapplyZoom(level);\n\t}\n}\n\nexport class ZoomInAction extends BaseZoomAction {\n\n\tstatic readonly ID = 'workbench.action.zoomIn';\n\tstatic readonly LABEL = localize('zoomIn', \"Zoom In\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, configurationService);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.setConfiguredZoomLevel(getZoomLevel() + 1);\n\t}\n}\n\nexport class ZoomOutAction extends BaseZoomAction {\n\n\tstatic readonly ID = 'workbench.action.zoomOut';\n\tstatic readonly LABEL = localize('zoomOut', \"Zoom Out\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, configurationService);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.setConfiguredZoomLevel(getZoomLevel() - 1);\n\t}\n}\n\nexport class ZoomResetAction extends BaseZoomAction {\n\n\tstatic readonly ID = 'workbench.action.zoomReset';\n\tstatic readonly LABEL = localize('zoomReset', \"Reset Zoom\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, configurationService);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.setConfiguredZoomLevel(0);\n\t}\n}\n\nexport abstract class BaseSwitchWindow extends Action {\n\n\tprivate readonly closeWindowAction: IQuickInputButton = {\n\t\ticonClass: Codicon.removeClose.classNames,\n\t\ttooltip: localize('close', \"Close Window\")\n\t};\n\n\tprivate readonly closeDirtyWindowAction: IQuickInputButton = {\n\t\ticonClass: 'dirty-window ' + Codicon.closeDirty,\n\t\ttooltip: localize('close', \"Close Window\"),\n\t\talwaysVisible: true\n\t};\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\tprivate readonly modelService: IModelService,\n\t\tprivate readonly modeService: IModeService,\n\t\tprivate readonly nativeHostService: INativeHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(): Promise<void> {\n\t\tconst currentWindowId = this.nativeHostService.windowId;\n\n\t\tconst windows = await this.nativeHostService.getWindows();\n\t\tconst placeHolder = localize('switchWindowPlaceHolder', \"Select a window to switch to\");\n\t\tconst picks = windows.map(window => {\n\t\t\tconst resource = window.filename ? URI.file(window.filename) : isSingleFolderWorkspaceIdentifier(window.workspace) ? window.workspace.uri : isWorkspaceIdentifier(window.workspace) ? window.workspace.configPath : undefined;\n\t\t\tconst fileKind = window.filename ? FileKind.FILE : isSingleFolderWorkspaceIdentifier(window.workspace) ? FileKind.FOLDER : isWorkspaceIdentifier(window.workspace) ? FileKind.ROOT_FOLDER : FileKind.FILE;\n\t\t\treturn {\n\t\t\t\tpayload: window.id,\n\t\t\t\tlabel: window.title,\n\t\t\t\tariaLabel: window.dirty ? localize('windowDirtyAriaLabel', \"{0}, dirty window\", window.title) : window.title,\n\t\t\t\ticonClasses: getIconClasses(this.modelService, this.modeService, resource, fileKind),\n\t\t\t\tdescription: (currentWindowId === window.id) ? localize('current', \"Current Window\") : undefined,\n\t\t\t\tbuttons: currentWindowId !== window.id ? window.dirty ? [this.closeDirtyWindowAction] : [this.closeWindowAction] : undefined\n\t\t\t};\n\t\t});\n\t\tconst autoFocusIndex = (picks.indexOf(picks.filter(pick => pick.payload === currentWindowId)[0]) + 1) % picks.length;\n\n\t\tconst pick = await this.quickInputService.pick(picks, {\n\t\t\tcontextKey: 'inWindowsPicker',\n\t\t\tactiveItem: picks[autoFocusIndex],\n\t\t\tplaceHolder,\n\t\t\tquickNavigate: this.isQuickNavigate() ? { keybindings: this.keybindingService.lookupKeybindings(this.id) } : undefined,\n\t\t\tonDidTriggerItemButton: async context => {\n\t\t\t\tawait this.nativeHostService.closeWindowById(context.item.payload);\n\t\t\t\tcontext.removeItem();\n\t\t\t}\n\t\t});\n\n\t\tif (pick) {\n\t\t\tthis.nativeHostService.focusWindow({ windowId: pick.payload });\n\t\t}\n\t}\n}\n\nexport class SwitchWindow extends BaseSwitchWindow {\n\n\tstatic readonly ID = 'workbench.action.switchWindow';\n\tstatic readonly LABEL = localize('switchWindow', \"Switch Window...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\tsuper(id, label, quickInputService, keybindingService, modelService, modeService, nativeHostService);\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class QuickSwitchWindow extends BaseSwitchWindow {\n\n\tstatic readonly ID = 'workbench.action.quickSwitchWindow';\n\tstatic readonly LABEL = localize('quickSwitchWindow', \"Quick Switch Window...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\tsuper(id, label, quickInputService, keybindingService, modelService, modeService, nativeHostService);\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport const NewWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).newWindowTab();\n};\n\nexport const ShowPreviousWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).showPreviousWindowTab();\n};\n\nexport const ShowNextWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).showNextWindowTab();\n};\n\nexport const MoveWindowTabToNewWindowHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).moveWindowTabToNewWindow();\n};\n\nexport const MergeWindowTabsHandlerHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).mergeAllWindowTabs();\n};\n\nexport const ToggleWindowTabsBarHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\treturn accessor.get(INativeHostService).toggleWindowTabsBar();\n};\n"]}