{"version":3,"sources":["vs/workbench/electron-sandbox/actions/developerActions.ts"],"names":[],"mappings":"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","file":"developerActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Action2, MenuId } from 'vs/platform/actions/common/actions';\nimport { CATEGORIES } from 'vs/workbench/common/actions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IsDevelopmentContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\n\nexport class ToggleDevToolsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleDevTools',\n\t\t\ttitle: { value: localize('toggleDevTools', \"Toggle Developer Tools\"), original: 'Toggle Developer Tools' },\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: IsDevelopmentContext,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_I,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_I }\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\tgroup: '5_tools',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\treturn nativeHostService.toggleDevTools();\n\t}\n}\n\nexport class ConfigureRuntimeArgumentsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.configureRuntimeArguments',\n\t\t\ttitle: { value: localize('configureRuntimeArguments', \"Configure Runtime Arguments\"), original: 'Configure Runtime Arguments' },\n\t\t\tcategory: CATEGORIES.Preferences,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: environmentService.argvResource,\n\t\t\toptions: { pinned: true }\n\t\t});\n\t}\n}\n\n\nexport class ToggleSharedProcessAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleSharedProcess',\n\t\t\ttitle: { value: localize('toggleSharedProcess', \"Toggle Shared Process\"), original: 'Toggle Shared Process' },\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(INativeHostService).toggleSharedProcessWindow();\n\t}\n}\n\nexport class ReloadWindowWithExtensionsDisabledAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.reloadWindowWithExtensionsDisabled',\n\t\t\ttitle: { value: localize('reloadWindowWithExtensionsDisabled', \"Reload With Extensions Disabled\"), original: 'Reload With Extensions Disabled' },\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(INativeHostService).reload({ disableExtensions: true });\n\t}\n}\n"]}