{"version":3,"sources":["vs/workbench/electron-sandbox/window.ts"],"names":[],"mappings":"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","file":"window.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { equals } from 'vs/base/common/objects';\nimport { EventType, EventHelper, addDisposableListener, scheduleAtNextAnimationFrame } from 'vs/base/browser/dom';\nimport { Separator } from 'vs/base/common/actions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { EditorResourceAccessor, IUntitledTextResourceEditorInput, SideBySideEditor, pathsToEditors } from 'vs/workbench/common/editor';\nimport { IEditorService, IResourceEditorInputType } from 'vs/workbench/services/editor/common/editorService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { WindowMinimumSize, IOpenFileRequest, IWindowsConfiguration, getTitleBarStyle, IAddFoldersRequest, INativeRunActionInWindowRequest, INativeRunKeybindingInWindowRequest, INativeOpenFileRequest } from 'vs/platform/windows/common/windows';\nimport { ITitleService } from 'vs/workbench/services/title/common/titleService';\nimport { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { applyZoom } from 'vs/platform/windows/electron-sandbox/window';\nimport { setFullscreen, getZoomLevel } from 'vs/base/browser/browser';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { env } from 'vs/base/common/process';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { IMenuService, MenuId, IMenu, MenuItemAction, ICommandAction, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LifecyclePhase, ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IWorkspaceFolderCreationData } from 'vs/platform/workspaces/common/workspaces';\nimport { IIntegrityService } from 'vs/workbench/services/integrity/common/integrity';\nimport { isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { INotificationService, IPromptChoice, NeverShowAgainScope, Severity } from 'vs/platform/notification/common/notification';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IAccessibilityService, AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { WorkbenchState, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IOpenerService, OpenOptions } from 'vs/platform/opener/common/opener';\nimport { Schemas } from 'vs/base/common/network';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { posix, dirname } from 'vs/base/common/path';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ITunnelService, extractLocalHostUriMetaDataForPortMapping } from 'vs/platform/remote/common/tunnel';\nimport { IWorkbenchLayoutService, Parts, positionFromString, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { AutoSaveMode, IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { Event } from 'vs/base/common/event';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IAddressProvider, IAddress } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { AuthInfo } from 'vs/base/parts/sandbox/electron-sandbox/electronTypes';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { whenEditorClosed } from 'vs/workbench/browser/editor';\n\nexport class NativeWindow extends Disposable {\n\n\tprivate static REMEMBER_PROXY_CREDENTIALS_KEY = 'window.rememberProxyCredentials';\n\n\tprivate touchBarMenu: IMenu | undefined;\n\tprivate readonly touchBarDisposables = this._register(new DisposableStore());\n\tprivate lastInstalledTouchedBar: ICommandAction[][] | undefined;\n\n\tprivate readonly customTitleContextMenuDisposable = this._register(new DisposableStore());\n\n\tprivate previousConfiguredZoomLevel: number | undefined;\n\n\tprivate readonly addFoldersScheduler = this._register(new RunOnceScheduler(() => this.doAddFolders(), 100));\n\tprivate pendingFoldersToAdd: URI[] = [];\n\n\tprivate readonly closeEmptyWindowScheduler = this._register(new RunOnceScheduler(() => this.onDidAllEditorsClose(), 50));\n\n\tprivate isDocumentedEdited = false;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITitleService private readonly titleService: ITitleService,\n\t\t@IWorkbenchThemeService protected themeService: IWorkbenchThemeService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IIntegrityService private readonly integrityService: IIntegrityService,\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t\tthis.create();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Layout\n\t\tthis._register(addDisposableListener(window, EventType.RESIZE, e => this.onWindowResize(e, true)));\n\n\t\t// React to editor input changes\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateTouchbarMenu()));\n\n\t\t// prevent opening a real URL inside the window\n\t\t[EventType.DRAG_OVER, EventType.DROP].forEach(event => {\n\t\t\twindow.document.body.addEventListener(event, (e: DragEvent) => {\n\t\t\t\tEventHelper.stop(e);\n\t\t\t});\n\t\t});\n\n\t\t// Support runAction event\n\t\tipcRenderer.on('vscode:runAction', async (event: unknown, request: INativeRunActionInWindowRequest) => {\n\t\t\tconst args: unknown[] = request.args || [];\n\n\t\t\t// If we run an action from the touchbar, we fill in the currently active resource\n\t\t\t// as payload because the touch bar items are context aware depending on the editor\n\t\t\tif (request.from === 'touchbar') {\n\t\t\t\tconst activeEditor = this.editorService.activeEditor;\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\t\tif (resource) {\n\t\t\t\t\t\targs.push(resource);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\targs.push({ from: request.from });\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait this.commandService.executeCommand(request.id, ...args);\n\n\t\t\t\ttype CommandExecutedClassifcation = {\n\t\t\t\t\tid: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\tfrom: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<{ id: String, from: String }, CommandExecutedClassifcation>('commandExecuted', { id: request.id, from: request.from });\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(error);\n\t\t\t}\n\t\t});\n\n\t\t// Support runKeybinding event\n\t\tipcRenderer.on('vscode:runKeybinding', (event: unknown, request: INativeRunKeybindingInWindowRequest) => {\n\t\t\tif (document.activeElement) {\n\t\t\t\tthis.keybindingService.dispatchByUserSettingsLabel(request.userSettingsLabel, document.activeElement);\n\t\t\t}\n\t\t});\n\n\t\t// Error reporting from main\n\t\tipcRenderer.on('vscode:reportError', (event: unknown, error: string) => {\n\t\t\tif (error) {\n\t\t\t\tonUnexpectedError(JSON.parse(error));\n\t\t\t}\n\t\t});\n\n\t\t// Support openFiles event for existing and new files\n\t\tipcRenderer.on('vscode:openFiles', (event: unknown, request: IOpenFileRequest) => this.onOpenFiles(request));\n\n\t\t// Support addFolders event if we have a workspace opened\n\t\tipcRenderer.on('vscode:addFolders', (event: unknown, request: IAddFoldersRequest) => this.onAddFoldersRequest(request));\n\n\t\t// Message support\n\t\tipcRenderer.on('vscode:showInfoMessage', (event: unknown, message: string) => this.notificationService.info(message));\n\n\t\t// Shell Environment Issue Notifications\n\t\tconst choices: IPromptChoice[] = [{\n\t\t\tlabel: localize('learnMore', \"Learn More\"),\n\t\t\trun: () => this.openerService.open('https://go.microsoft.com/fwlink/?linkid=2149667')\n\t\t}];\n\n\t\tipcRenderer.on('vscode:showShellEnvSlowWarning', () => this.notificationService.prompt(\n\t\t\tSeverity.Warning,\n\t\t\tlocalize('shellEnvSlowWarning', \"Resolving your shell environment is taking very long. Please review your shell configuration.\"),\n\t\t\tchoices,\n\t\t\t{\n\t\t\t\tsticky: true,\n\t\t\t\tneverShowAgain: { id: 'ignoreShellEnvSlowWarning', scope: NeverShowAgainScope.GLOBAL }\n\t\t\t}\n\t\t));\n\n\t\tipcRenderer.on('vscode:showShellEnvTimeoutError', () => this.notificationService.prompt(\n\t\t\tSeverity.Error,\n\t\t\tlocalize('shellEnvTimeoutError', \"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration.\"),\n\t\t\tchoices\n\t\t));\n\n\t\t// Fullscreen Events\n\t\tipcRenderer.on('vscode:enterFullScreen', async () => {\n\t\t\tawait this.lifecycleService.when(LifecyclePhase.Ready);\n\t\t\tsetFullscreen(true);\n\t\t});\n\n\t\tipcRenderer.on('vscode:leaveFullScreen', async () => {\n\t\t\tawait this.lifecycleService.when(LifecyclePhase.Ready);\n\t\t\tsetFullscreen(false);\n\t\t});\n\n\t\t// Proxy Login Dialog\n\t\tipcRenderer.on('vscode:openProxyAuthenticationDialog', async (event: unknown, payload: { authInfo: AuthInfo, username?: string, password?: string, replyChannel: string }) => {\n\t\t\tconst rememberCredentials = this.storageService.getBoolean(NativeWindow.REMEMBER_PROXY_CREDENTIALS_KEY, StorageScope.GLOBAL);\n\t\t\tconst result = await this.dialogService.input(Severity.Warning, localize('proxyAuthRequired', \"Proxy Authentication Required\"),\n\t\t\t\t[\n\t\t\t\t\tlocalize({ key: 'loginButton', comment: ['&& denotes a mnemonic'] }, \"&&Log In\"),\n\t\t\t\t\tlocalize({ key: 'cancelButton', comment: ['&& denotes a mnemonic'] }, \"&&Cancel\")\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t{ placeholder: localize('username', \"Username\"), value: payload.username },\n\t\t\t\t\t{ placeholder: localize('password', \"Password\"), type: 'password', value: payload.password }\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tcancelId: 1,\n\t\t\t\t\tdetail: localize('proxyDetail', \"The proxy {0} requires a username and password.\", `${payload.authInfo.host}:${payload.authInfo.port}`),\n\t\t\t\t\tcheckbox: {\n\t\t\t\t\t\tlabel: localize('rememberCredentials', \"Remember my credentials\"),\n\t\t\t\t\t\tchecked: rememberCredentials\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// Reply back to the channel without result to indicate\n\t\t\t// that the login dialog was cancelled\n\t\t\tif (result.choice !== 0 || !result.values) {\n\t\t\t\tipcRenderer.send(payload.replyChannel);\n\t\t\t}\n\n\t\t\t// Other reply back with the picked credentials\n\t\t\telse {\n\n\t\t\t\t// Update state based on checkbox\n\t\t\t\tif (result.checkboxChecked) {\n\t\t\t\t\tthis.storageService.store(NativeWindow.REMEMBER_PROXY_CREDENTIALS_KEY, true, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t} else {\n\t\t\t\t\tthis.storageService.remove(NativeWindow.REMEMBER_PROXY_CREDENTIALS_KEY, StorageScope.GLOBAL);\n\t\t\t\t}\n\n\t\t\t\t// Reply back to main side with credentials\n\t\t\t\tconst [username, password] = result.values;\n\t\t\t\tipcRenderer.send(payload.replyChannel, { username, password, remember: !!result.checkboxChecked });\n\t\t\t}\n\t\t});\n\n\t\t// Accessibility support changed event\n\t\tipcRenderer.on('vscode:accessibilitySupportChanged', (event: unknown, accessibilitySupportEnabled: boolean) => {\n\t\t\tthis.accessibilityService.setAccessibilitySupport(accessibilitySupportEnabled ? AccessibilitySupport.Enabled : AccessibilitySupport.Disabled);\n\t\t});\n\n\t\t// Zoom level changes\n\t\tthis.updateWindowZoomLevel();\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('window.zoomLevel')) {\n\t\t\t\tthis.updateWindowZoomLevel();\n\t\t\t} else if (e.affectsConfiguration('keyboard.touchbar.enabled') || e.affectsConfiguration('keyboard.touchbar.ignored')) {\n\t\t\t\tthis.updateTouchbarMenu();\n\t\t\t}\n\t\t}));\n\n\t\t// Listen to visible editor changes\n\t\tthis._register(this.editorService.onDidVisibleEditorsChange(() => this.onDidChangeVisibleEditors()));\n\n\t\t// Listen to editor closing (if we run with --wait)\n\t\tconst filesToWait = this.environmentService.configuration.filesToWait;\n\t\tif (filesToWait) {\n\t\t\tthis.trackClosedWaitFiles(filesToWait.waitMarkerFileUri, coalesce(filesToWait.paths.map(path => path.fileUri)));\n\t\t}\n\n\t\t// macOS OS integration\n\t\tif (isMacintosh) {\n\t\t\tthis._register(this.editorService.onDidActiveEditorChange(() => {\n\t\t\t\tconst file = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file });\n\n\t\t\t\t// Represented Filename\n\t\t\t\tthis.updateRepresentedFilename(file?.fsPath);\n\n\t\t\t\t// Custom title menu\n\t\t\t\tthis.provideCustomTitleContextMenu(file?.fsPath);\n\t\t\t}));\n\t\t}\n\n\t\t// Maximize/Restore on doubleclick (for macOS custom title)\n\t\tif (isMacintosh && getTitleBarStyle(this.configurationService) === 'custom') {\n\t\t\tconst titlePart = assertIsDefined(this.layoutService.getContainer(Parts.TITLEBAR_PART));\n\n\t\t\tthis._register(addDisposableListener(titlePart, EventType.DBLCLICK, e => {\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\tthis.nativeHostService.handleTitleDoubleClick();\n\t\t\t}));\n\t\t}\n\n\t\t// Document edited: indicate for dirty working copies\n\t\tthis._register(this.workingCopyService.onDidChangeDirty(workingCopy => {\n\t\t\tconst gotDirty = workingCopy.isDirty();\n\t\t\tif (gotDirty && !(workingCopy.capabilities & WorkingCopyCapabilities.Untitled) && this.filesConfigurationService.getAutoSaveMode() === AutoSaveMode.AFTER_SHORT_DELAY) {\n\t\t\t\treturn; // do not indicate dirty of working copies that are auto saved after short delay\n\t\t\t}\n\n\t\t\tthis.updateDocumentEdited(gotDirty);\n\t\t}));\n\n\t\tthis.updateDocumentEdited();\n\n\t\t// Detect minimize / maximize\n\t\tthis._register(Event.any(\n\t\t\tEvent.map(Event.filter(this.nativeHostService.onDidMaximizeWindow, id => id === this.nativeHostService.windowId), () => true),\n\t\t\tEvent.map(Event.filter(this.nativeHostService.onDidUnmaximizeWindow, id => id === this.nativeHostService.windowId), () => false)\n\t\t)(e => this.onDidChangeWindowMaximized(e)));\n\n\t\tthis.onDidChangeWindowMaximized(this.environmentService.configuration.maximized ?? false);\n\n\t\t// Detect panel position to determine minimum width\n\t\tthis._register(this.layoutService.onDidChangePanelPosition(pos => this.onDidChangePanelPosition(positionFromString(pos))));\n\t\tthis.onDidChangePanelPosition(this.layoutService.getPanelPosition());\n\t}\n\n\tprivate onWindowResize(e: UIEvent, retry: boolean): void {\n\t\tif (e.target === window) {\n\t\t\tif (window.document && window.document.body && window.document.body.clientWidth === 0) {\n\t\t\t\t// TODO@electron this is an electron issue on macOS when simple fullscreen is enabled\n\t\t\t\t// where for some reason the window clientWidth is reported as 0 when switching\n\t\t\t\t// between simple fullscreen and normal screen. In that case we schedule the layout\n\t\t\t\t// call at the next animation frame once, in the hope that the dimensions are\n\t\t\t\t// proper then.\n\t\t\t\tif (retry) {\n\t\t\t\t\tscheduleAtNextAnimationFrame(() => this.onWindowResize(e, false));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.layoutService.layout();\n\t\t}\n\t}\n\n\tprivate updateDocumentEdited(isDirty = this.workingCopyService.hasDirty): void {\n\t\tif ((!this.isDocumentedEdited && isDirty) || (this.isDocumentedEdited && !isDirty)) {\n\t\t\tthis.isDocumentedEdited = isDirty;\n\n\t\t\tthis.nativeHostService.setDocumentEdited(isDirty);\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowMaximized(maximized: boolean): void {\n\t\tthis.layoutService.updateWindowMaximizedState(maximized);\n\t}\n\n\tprivate getWindowMinimumWidth(panelPosition: Position = this.layoutService.getPanelPosition()): number {\n\n\t\t// if panel is on the side, then return the larger minwidth\n\t\tconst panelOnSide = panelPosition === Position.LEFT || panelPosition === Position.RIGHT;\n\t\tif (panelOnSide) {\n\t\t\treturn WindowMinimumSize.WIDTH_WITH_VERTICAL_PANEL;\n\t\t}\n\n\t\treturn WindowMinimumSize.WIDTH;\n\t}\n\n\tprivate onDidChangePanelPosition(pos: Position): void {\n\t\tconst minWidth = this.getWindowMinimumWidth(pos);\n\n\t\tthis.nativeHostService.setMinimumSize(minWidth, undefined);\n\t}\n\n\tprivate onDidChangeVisibleEditors(): void {\n\n\t\t// Close when empty: check if we should close the window based on the setting\n\t\t// Overruled by: window has a workspace opened or this window is for extension development\n\t\t// or setting is disabled. Also enabled when running with --wait from the command line.\n\t\tconst visibleEditorPanes = this.editorService.visibleEditorPanes;\n\t\tif (visibleEditorPanes.length === 0 && this.contextService.getWorkbenchState() === WorkbenchState.EMPTY && !this.environmentService.isExtensionDevelopment) {\n\t\t\tconst closeWhenEmpty = this.configurationService.getValue<boolean>('window.closeWhenEmpty');\n\t\t\tif (closeWhenEmpty || this.environmentService.args.wait) {\n\t\t\t\tthis.closeEmptyWindowScheduler.schedule();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidAllEditorsClose(): void {\n\t\tconst visibleEditorPanes = this.editorService.visibleEditorPanes.length;\n\t\tif (visibleEditorPanes === 0) {\n\t\t\tthis.nativeHostService.closeWindow();\n\t\t}\n\t}\n\n\tprivate updateWindowZoomLevel(): void {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowsConfiguration>();\n\n\t\tlet configuredZoomLevel = 0;\n\t\tif (windowConfig.window && typeof windowConfig.window.zoomLevel === 'number') {\n\t\t\tconfiguredZoomLevel = windowConfig.window.zoomLevel;\n\n\t\t\t// Leave early if the configured zoom level did not change (https://github.com/microsoft/vscode/issues/1536)\n\t\t\tif (this.previousConfiguredZoomLevel === configuredZoomLevel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.previousConfiguredZoomLevel = configuredZoomLevel;\n\t\t}\n\n\t\tif (getZoomLevel() !== configuredZoomLevel) {\n\t\t\tapplyZoom(configuredZoomLevel);\n\t\t}\n\t}\n\n\tprivate updateRepresentedFilename(filePath: string | undefined): void {\n\t\tthis.nativeHostService.setRepresentedFilename(filePath ? filePath : '');\n\t}\n\n\tprivate provideCustomTitleContextMenu(filePath: string | undefined): void {\n\n\t\t// Clear old menu\n\t\tthis.customTitleContextMenuDisposable.clear();\n\n\t\t// Provide new menu if a file is opened and we are on a custom title\n\t\tif (!filePath || getTitleBarStyle(this.configurationService) !== 'custom') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Split up filepath into segments\n\t\tconst segments = filePath.split(posix.sep);\n\t\tfor (let i = segments.length; i > 0; i--) {\n\t\t\tconst isFile = (i === segments.length);\n\n\t\t\tlet pathOffset = i;\n\t\t\tif (!isFile) {\n\t\t\t\tpathOffset++; // for segments which are not the file name we want to open the folder\n\t\t\t}\n\n\t\t\tconst path = segments.slice(0, pathOffset).join(posix.sep);\n\n\t\t\tlet label: string;\n\t\t\tif (!isFile) {\n\t\t\t\tlabel = getBaseLabel(dirname(path));\n\t\t\t} else {\n\t\t\t\tlabel = getBaseLabel(path);\n\t\t\t}\n\n\t\t\tconst commandId = `workbench.action.revealPathInFinder${i}`;\n\t\t\tthis.customTitleContextMenuDisposable.add(CommandsRegistry.registerCommand(commandId, () => this.nativeHostService.showItemInFolder(path)));\n\t\t\tthis.customTitleContextMenuDisposable.add(MenuRegistry.appendMenuItem(MenuId.TitleBarContext, { command: { id: commandId, title: label || posix.sep }, order: -i }));\n\t\t}\n\t}\n\n\tprivate create(): void {\n\n\t\t// Handle open calls\n\t\tthis.setupOpenHandlers();\n\n\t\t// Notify main side when window ready\n\t\tthis.lifecycleService.when(LifecyclePhase.Ready).then(() => this.nativeHostService.notifyReady());\n\n\t\t// Integrity warning\n\t\tthis.integrityService.isPure().then(({ isPure }) => this.titleService.updateProperties({ isPure }));\n\n\t\t// Root warning\n\t\tthis.lifecycleService.when(LifecyclePhase.Restored).then(async () => {\n\t\t\tconst isAdmin = await this.nativeHostService.isAdmin();\n\n\t\t\t// Update title\n\t\t\tthis.titleService.updateProperties({ isAdmin });\n\n\t\t\t// Show warning message (unix only)\n\t\t\tif (isAdmin && !isWindows) {\n\t\t\t\tthis.notificationService.warn(localize('runningAsRoot', \"It is not recommended to run {0} as root user.\", this.productService.nameShort));\n\t\t\t}\n\t\t});\n\n\t\t// Touchbar menu (if enabled)\n\t\tthis.updateTouchbarMenu();\n\n\t\t// Check for cyclic dependencies\n\t\tif (require.hasDependencyCycle()) {\n\t\t\tif (env['CI'] || env['BUILD_ARTIFACTSTAGINGDIRECTORY']) {\n\t\t\t\tthis.logService.error('Error: There is a dependency cycle in the AMD modules that needs to be resolved!');\n\t\t\t\tthis.nativeHostService.exit(37); // running on a build machine, just exit without showing a dialog\n\t\t\t} else {\n\t\t\t\tthis.dialogService.show(Severity.Error, localize('loaderCycle', \"There is a dependency cycle in the AMD modules that needs to be resolved!\"), [localize('ok', \"OK\")]);\n\t\t\t\tthis.nativeHostService.openDevTools();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setupOpenHandlers(): void {\n\n\t\t// Block window.open() calls\n\t\twindow.open = function (): Window | null {\n\t\t\tthrow new Error('Prevented call to window.open(). Use IOpenerService instead!');\n\t\t};\n\n\t\t// Handle external open() calls\n\t\tthis.openerService.setDefaultExternalOpener({\n\t\t\topenExternal: async (href: string) => {\n\t\t\t\tconst success = await this.nativeHostService.openExternal(href);\n\t\t\t\tif (!success) {\n\t\t\t\t\tconst fileCandidate = URI.parse(href);\n\t\t\t\t\tif (fileCandidate.scheme === Schemas.file) {\n\t\t\t\t\t\t// if opening failed, and this is a file, we can still try to reveal it\n\t\t\t\t\t\tawait this.nativeHostService.showItemInFolder(fileCandidate.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\t// Register external URI resolver\n\t\tthis.openerService.registerExternalUriResolver({\n\t\t\tresolveExternalUri: async (uri: URI, options?: OpenOptions) => {\n\t\t\t\tif (options?.allowTunneling) {\n\t\t\t\t\tconst portMappingRequest = extractLocalHostUriMetaDataForPortMapping(uri);\n\t\t\t\t\tif (portMappingRequest) {\n\t\t\t\t\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\t\t\t\t\tconst addressProvider: IAddressProvider | undefined = remoteAuthority ? {\n\t\t\t\t\t\t\tgetAddress: async (): Promise<IAddress> => {\n\t\t\t\t\t\t\t\treturn (await this.remoteAuthorityResolverService.resolveAuthority(remoteAuthority)).authority;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} : undefined;\n\t\t\t\t\t\tconst tunnel = await this.tunnelService.openTunnel(addressProvider, portMappingRequest.address, portMappingRequest.port);\n\t\t\t\t\t\tif (tunnel) {\n\t\t\t\t\t\t\tconst addressAsUri = URI.parse(tunnel.localAddress);\n\t\t\t\t\t\t\tconst resolved = addressAsUri.scheme.startsWith(uri.scheme) ? addressAsUri : uri.with({ authority: tunnel.localAddress });\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\tdispose: () => tunnel.dispose(),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateTouchbarMenu(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // macOS only\n\t\t}\n\n\t\t// Dispose old\n\t\tthis.touchBarDisposables.clear();\n\t\tthis.touchBarMenu = undefined;\n\n\t\t// Create new (delayed)\n\t\tconst scheduler: RunOnceScheduler = this.touchBarDisposables.add(new RunOnceScheduler(() => this.doUpdateTouchbarMenu(scheduler), 300));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate doUpdateTouchbarMenu(scheduler: RunOnceScheduler): void {\n\t\tif (!this.touchBarMenu) {\n\t\t\tconst scopedContextKeyService = this.editorService.activeEditorPane?.scopedContextKeyService || this.editorGroupService.activeGroup.scopedContextKeyService;\n\t\t\tthis.touchBarMenu = this.menuService.createMenu(MenuId.TouchBarContext, scopedContextKeyService);\n\t\t\tthis.touchBarDisposables.add(this.touchBarMenu);\n\t\t\tthis.touchBarDisposables.add(this.touchBarMenu.onDidChange(() => scheduler.schedule()));\n\t\t}\n\n\t\tconst actions: Array<MenuItemAction | Separator> = [];\n\n\t\tconst disabled = this.configurationService.getValue<boolean>('keyboard.touchbar.enabled') === false;\n\t\tconst ignoredItems = this.configurationService.getValue<string[]>('keyboard.touchbar.ignored') || [];\n\n\t\t// Fill actions into groups respecting order\n\t\tthis.touchBarDisposables.add(createAndFillInActionBarActions(this.touchBarMenu, undefined, actions));\n\n\t\t// Convert into command action multi array\n\t\tconst items: ICommandAction[][] = [];\n\t\tlet group: ICommandAction[] = [];\n\t\tif (!disabled) {\n\t\t\tfor (const action of actions) {\n\n\t\t\t\t// Command\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tif (ignoredItems.indexOf(action.item.id) >= 0) {\n\t\t\t\t\t\tcontinue; // ignored\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup.push(action.item);\n\t\t\t\t}\n\n\t\t\t\t// Separator\n\t\t\t\telse if (action instanceof Separator) {\n\t\t\t\t\tif (group.length) {\n\t\t\t\t\t\titems.push(group);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (group.length) {\n\t\t\t\titems.push(group);\n\t\t\t}\n\t\t}\n\n\t\t// Only update if the actions have changed\n\t\tif (!equals(this.lastInstalledTouchedBar, items)) {\n\t\t\tthis.lastInstalledTouchedBar = items;\n\t\t\tthis.nativeHostService.updateTouchBar(items);\n\t\t}\n\t}\n\n\tprivate onAddFoldersRequest(request: IAddFoldersRequest): void {\n\n\t\t// Buffer all pending requests\n\t\tthis.pendingFoldersToAdd.push(...request.foldersToAdd.map(folder => URI.revive(folder)));\n\n\t\t// Delay the adding of folders a bit to buffer in case more requests are coming\n\t\tif (!this.addFoldersScheduler.isScheduled()) {\n\t\t\tthis.addFoldersScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate doAddFolders(): void {\n\t\tconst foldersToAdd: IWorkspaceFolderCreationData[] = [];\n\n\t\tthis.pendingFoldersToAdd.forEach(folder => {\n\t\t\tfoldersToAdd.push(({ uri: folder }));\n\t\t});\n\n\t\tthis.pendingFoldersToAdd = [];\n\n\t\tthis.workspaceEditingService.addFolders(foldersToAdd);\n\t}\n\n\tprivate async onOpenFiles(request: INativeOpenFileRequest): Promise<void> {\n\t\tconst inputs: IResourceEditorInputType[] = [];\n\t\tconst diffMode = !!(request.filesToDiff && (request.filesToDiff.length === 2));\n\n\t\tif (!diffMode && request.filesToOpenOrCreate) {\n\t\t\tinputs.push(...(await pathsToEditors(request.filesToOpenOrCreate, this.fileService)));\n\t\t}\n\n\t\tif (diffMode && request.filesToDiff) {\n\t\t\tinputs.push(...(await pathsToEditors(request.filesToDiff, this.fileService)));\n\t\t}\n\n\t\tif (inputs.length) {\n\t\t\tthis.openResources(inputs, diffMode);\n\t\t}\n\n\t\tif (request.filesToWait && inputs.length) {\n\t\t\t// In wait mode, listen to changes to the editors and wait until the files\n\t\t\t// are closed that the user wants to wait for. When this happens we delete\n\t\t\t// the wait marker file to signal to the outside that editing is done.\n\t\t\tthis.trackClosedWaitFiles(URI.revive(request.filesToWait.waitMarkerFileUri), coalesce(request.filesToWait.paths.map(p => URI.revive(p.fileUri))));\n\t\t}\n\t}\n\n\tprivate async trackClosedWaitFiles(waitMarkerFile: URI, resourcesToWaitFor: URI[]): Promise<void> {\n\n\t\t// Wait for the resources to be closed in the text editor...\n\t\tawait this.instantiationService.invokeFunction(accessor => whenEditorClosed(accessor, resourcesToWaitFor));\n\n\t\t// ...before deleting the wait marker file\n\t\tawait this.fileService.del(waitMarkerFile);\n\t}\n\n\tprivate async openResources(resources: Array<IResourceEditorInput | IUntitledTextResourceEditorInput>, diffMode: boolean): Promise<unknown> {\n\t\tawait this.lifecycleService.when(LifecyclePhase.Ready);\n\n\t\t// In diffMode we open 2 resources as diff\n\t\tif (diffMode && resources.length === 2 && resources[0].resource && resources[1].resource) {\n\t\t\treturn this.editorService.openEditor({ leftResource: resources[0].resource, rightResource: resources[1].resource, options: { pinned: true } });\n\t\t}\n\n\t\t// For one file, just put it into the current active editor\n\t\tif (resources.length === 1) {\n\t\t\treturn this.editorService.openEditor(resources[0]);\n\t\t}\n\n\t\t// Otherwise open all\n\t\treturn this.editorService.openEditors(resources);\n\t}\n}\n"]}