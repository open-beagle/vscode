{"version":3,"file":"desktop.main.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/electron-sandbox/desktop.main.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAM,WAAY,SAAQ,uCAAiB;QAE1C,YAAY,aAA4C;;YACvD,KAAK,iCAAM,aAAa,KAAE,SAAS,EAAE,EAAE,EAAE,EAAE,MAAA,MAAA,aAAa,CAAC,SAAS,0CAAE,EAAE,mCAAI,sCAAsC,EAAE,GAAG,EAAE,2CAAkB,EAAE,IAAG,CAAC;QAChJ,CAAC;QAES,2BAA2B,CAAC,kBAAsD,EAAE,WAAyB,EAAE,UAAuB;YAE/I,cAAc;YACd,WAAW,CAAC,gBAAgB,CAAC,iBAAO,CAAC,IAAI,EAAE,iDAAwB,CAAC,CAAC;YAErE,qBAAqB;YACrB,WAAW,CAAC,gBAAgB,CAAC,iBAAO,CAAC,QAAQ,EAAE,IAAI,2CAAoB,CAAC,iBAAO,CAAC,IAAI,EAAE,iDAAwB,EAAE,iBAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;YAE/I,iCAAiC;YACjC,OAAO,CAAA,GAAA,uCAAc,CAAA,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;QACxD,CAAC;KACD;IAED,SAAgB,IAAI,CAAC,aAA4C;QAChE,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC;QAEjD,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAJD,oBAIC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INativeWorkbenchConfiguration, INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Schemas } from 'vs/base/common/network';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileUserDataProvider } from 'vs/workbench/services/userData/common/fileUserDataProvider';\nimport { initFileSystem, simpleFileSystemProvider, simpleWorkspaceDir } from 'vs/workbench/electron-sandbox/sandbox.simpleservices';\nimport { SharedDesktopMain } from 'vs/workbench/electron-sandbox/shared.desktop.main';\n\nclass DesktopMain extends SharedDesktopMain {\n\n\tconstructor(configuration: INativeWorkbenchConfiguration) {\n\t\tsuper({ ...configuration, workspace: { id: configuration.workspace?.id ?? '4064f6ec-cb38-4ad0-af64-ee6467e63c82', uri: simpleWorkspaceDir } });\n\t}\n\n\tprotected registerFileSystemProviders(environmentService: INativeWorkbenchEnvironmentService, fileService: IFileService, logService: ILogService): Promise<void> {\n\n\t\t// Local Files\n\t\tfileService.registerProvider(Schemas.file, simpleFileSystemProvider);\n\n\t\t// User Data Provider\n\t\tfileService.registerProvider(Schemas.userData, new FileUserDataProvider(Schemas.file, simpleFileSystemProvider, Schemas.userData, logService));\n\n\t\t// Init our in-memory file system\n\t\treturn initFileSystem(environmentService, fileService);\n\t}\n}\n\nexport function main(configuration: INativeWorkbenchConfiguration): Promise<void> {\n\tconst workbench = new DesktopMain(configuration);\n\n\treturn workbench.open();\n}\n"]}