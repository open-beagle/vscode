{"version":3,"sources":["vs/workbench/electron-sandbox/parts/titlebar/menubarControl.ts"],"names":[],"mappings":"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","file":"menubarControl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Separator } from 'vs/base/common/actions';\nimport { IMenuService, MenuId, IMenu, SubmenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport { IOpenRecentAction, MenubarControl } from 'vs/workbench/browser/parts/titlebar/menubarControl';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IMenubarData, IMenubarMenu, IMenubarKeybinding, IMenubarMenuItemSubmenu, IMenubarMenuItemAction, MenubarMenuItem } from 'vs/platform/menubar/common/menubar';\nimport { IMenubarService } from 'vs/platform/menubar/electron-sandbox/menubar';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\n\nexport class NativeMenubarControl extends MenubarControl {\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IMenubarService private readonly menubarService: IMenubarService,\n\t\t@IHostService hostService: IHostService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@ICommandService commandService: ICommandService,\n\t) {\n\t\tsuper(menuService, workspacesService, contextKeyService, keybindingService, configurationService, labelService, updateService, storageService, notificationService, preferencesService, environmentService, accessibilityService, hostService, commandService);\n\n\t\tif (isMacintosh) {\n\t\t\tthis.menus['Preferences'] = this._register(this.menuService.createMenu(MenuId.MenubarPreferencesMenu, this.contextKeyService));\n\t\t\tthis.topLevelTitles['Preferences'] = localize('mPreferences', \"Preferences\");\n\t\t}\n\n\t\tfor (const topLevelMenuName of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[topLevelMenuName];\n\t\t\tif (menu) {\n\t\t\t\tthis._register(menu.onDidChange(() => this.updateMenubar()));\n\t\t\t}\n\t\t}\n\n\t\t(async () => {\n\t\t\tthis.recentlyOpened = await this.workspacesService.getRecentlyOpened();\n\n\t\t\tthis.doUpdateMenubar();\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected doUpdateMenubar(): void {\n\t\t// Since the native menubar is shared between windows (main process)\n\t\t// only allow the focused window to update the menubar\n\t\tif (!this.hostService.hasFocus) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Send menus to main process to be rendered by Electron\n\t\tconst menubarData = { menus: {}, keybindings: {} };\n\t\tif (this.getMenubarMenus(menubarData)) {\n\t\t\tthis.menubarService.updateMenubar(this.nativeHostService.windowId, menubarData);\n\t\t}\n\t}\n\n\tprivate getMenubarMenus(menubarData: IMenubarData): boolean {\n\t\tif (!menubarData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmenubarData.keybindings = this.getAdditionalKeybindings();\n\t\tfor (const topLevelMenuName of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[topLevelMenuName];\n\t\t\tif (menu) {\n\t\t\t\tconst menubarMenu: IMenubarMenu = { items: [] };\n\t\t\t\tthis.populateMenuItems(menu, menubarMenu, menubarData.keybindings);\n\t\t\t\tif (menubarMenu.items.length === 0) {\n\t\t\t\t\treturn false; // Menus are incomplete\n\t\t\t\t}\n\t\t\t\tmenubarData.menus[topLevelMenuName] = menubarMenu;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate populateMenuItems(menu: IMenu, menuToPopulate: IMenubarMenu, keybindings: { [id: string]: IMenubarKeybinding | undefined }) {\n\t\tlet groups = menu.getActions();\n\n\t\tfor (let group of groups) {\n\t\t\tconst [, actions] = group;\n\n\t\t\tactions.forEach(menuItem => {\n\n\t\t\t\t// use mnemonicTitle whenever possible\n\t\t\t\tconst title = typeof menuItem.item.title === 'string'\n\t\t\t\t\t? menuItem.item.title\n\t\t\t\t\t: menuItem.item.title.mnemonicTitle ?? menuItem.item.title.value;\n\n\t\t\t\tif (menuItem instanceof SubmenuItemAction) {\n\t\t\t\t\tconst submenu = { items: [] };\n\n\t\t\t\t\tif (!this.menus[menuItem.item.submenu.id]) {\n\t\t\t\t\t\tconst menu = this.menus[menuItem.item.submenu.id] = this.menuService.createMenu(menuItem.item.submenu, this.contextKeyService);\n\t\t\t\t\t\tthis._register(menu.onDidChange(() => this.updateMenubar()));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst menuToDispose = this.menuService.createMenu(menuItem.item.submenu, this.contextKeyService);\n\t\t\t\t\tthis.populateMenuItems(menuToDispose, submenu, keybindings);\n\n\t\t\t\t\tif (submenu.items.length > 0) {\n\t\t\t\t\t\tlet menubarSubmenuItem: IMenubarMenuItemSubmenu = {\n\t\t\t\t\t\t\tid: menuItem.id,\n\t\t\t\t\t\t\tlabel: title,\n\t\t\t\t\t\t\tsubmenu: submenu\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmenuToPopulate.items.push(menubarSubmenuItem);\n\t\t\t\t\t}\n\n\t\t\t\t\tmenuToDispose.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tif (menuItem.id === 'workbench.action.openRecent') {\n\t\t\t\t\t\tconst actions = this.getOpenRecentActions().map(this.transformOpenRecentAction);\n\t\t\t\t\t\tmenuToPopulate.items.push(...actions);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet menubarMenuItem: IMenubarMenuItemAction = {\n\t\t\t\t\t\tid: menuItem.id,\n\t\t\t\t\t\tlabel: title\n\t\t\t\t\t};\n\n\t\t\t\t\tif (menuItem.checked) {\n\t\t\t\t\t\tmenubarMenuItem.checked = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!menuItem.enabled) {\n\t\t\t\t\t\tmenubarMenuItem.enabled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tkeybindings[menuItem.id] = this.getMenubarKeybinding(menuItem.id);\n\t\t\t\t\tmenuToPopulate.items.push(menubarMenuItem);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmenuToPopulate.items.push({ id: 'vscode.menubar.separator' });\n\t\t}\n\n\t\tif (menuToPopulate.items.length > 0) {\n\t\t\tmenuToPopulate.items.pop();\n\t\t}\n\t}\n\n\tprivate transformOpenRecentAction(action: Separator | IOpenRecentAction): MenubarMenuItem {\n\t\tif (action instanceof Separator) {\n\t\t\treturn { id: 'vscode.menubar.separator' };\n\t\t}\n\n\t\treturn {\n\t\t\tid: action.id,\n\t\t\turi: action.uri,\n\t\t\tremoteAuthority: action.remoteAuthority,\n\t\t\tenabled: action.enabled,\n\t\t\tlabel: action.label\n\t\t};\n\t}\n\n\tprivate getAdditionalKeybindings(): { [id: string]: IMenubarKeybinding } {\n\t\tconst keybindings: { [id: string]: IMenubarKeybinding } = {};\n\t\tif (isMacintosh) {\n\t\t\tconst keybinding = this.getMenubarKeybinding('workbench.action.quit');\n\t\t\tif (keybinding) {\n\t\t\t\tkeybindings['workbench.action.quit'] = keybinding;\n\t\t\t}\n\t\t}\n\n\t\treturn keybindings;\n\t}\n\n\tprivate getMenubarKeybinding(id: string): IMenubarKeybinding | undefined {\n\t\tconst binding = this.keybindingService.lookupKeybinding(id);\n\t\tif (!binding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// first try to resolve a native accelerator\n\t\tconst electronAccelerator = binding.getElectronAccelerator();\n\t\tif (electronAccelerator) {\n\t\t\treturn { label: electronAccelerator, userSettingsLabel: withNullAsUndefined(binding.getUserSettingsLabel()) };\n\t\t}\n\n\t\t// we need this fallback to support keybindings that cannot show in electron menus (e.g. chords)\n\t\tconst acceleratorLabel = binding.getLabel();\n\t\tif (acceleratorLabel) {\n\t\t\treturn { label: acceleratorLabel, isNative: false, userSettingsLabel: withNullAsUndefined(binding.getUserSettingsLabel()) };\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"]}