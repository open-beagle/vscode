{"version":3,"file":"extHostSearch.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/electron-browser/api/extHostSearch.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { MainContext, MainThreadSearchShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { NativeExtHostSearch } from 'vs/workbench/api/node/extHostSearch';\nimport { Range } from 'vs/workbench/api/common/extHostTypes';\nimport { IFileMatch, IFileQuery, IPatternInfo, IRawFileMatch2, ISearchCompleteStats, ISearchQuery, ITextQuery, QueryType, resultIsMatch } from 'vs/workbench/services/search/common/search';\nimport { TestRPCProtocol } from 'vs/workbench/test/browser/api/testRPCProtocol';\nimport type * as vscode from 'vscode';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { URITransformerService } from 'vs/workbench/api/common/extHostUriTransformerService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { TextSearchManager } from 'vs/workbench/services/search/common/textSearchManager';\nimport { NativeTextSearchManager } from 'vs/workbench/services/search/node/textSearchManager';\nimport { timeout } from 'vs/base/common/async';\n\nlet rpcProtocol: TestRPCProtocol;\nlet extHostSearch: NativeExtHostSearch;\nconst disposables = new DisposableStore();\n\nlet mockMainThreadSearch: MockMainThreadSearch;\nclass MockMainThreadSearch implements MainThreadSearchShape {\n\tlastHandle!: number;\n\n\tresults: Array<UriComponents | IRawFileMatch2> = [];\n\n\t$registerFileSearchProvider(handle: number, scheme: string): void {\n\t\tthis.lastHandle = handle;\n\t}\n\n\t$registerTextSearchProvider(handle: number, scheme: string): void {\n\t\tthis.lastHandle = handle;\n\t}\n\n\t$unregisterProvider(handle: number): void {\n\t}\n\n\t$handleFileMatch(handle: number, session: number, data: UriComponents[]): void {\n\t\tthis.results.push(...data);\n\t}\n\n\t$handleTextMatch(handle: number, session: number, data: IRawFileMatch2[]): void {\n\t\tthis.results.push(...data);\n\t}\n\n\t$handleTelemetry(eventName: string, data: any): void {\n\t}\n\n\tdispose() {\n\t}\n}\n\nlet mockPFS: Partial<typeof pfs>;\n\nexport function extensionResultIsMatch(data: vscode.TextSearchResult): data is vscode.TextSearchMatch {\n\treturn !!(<vscode.TextSearchMatch>data).preview;\n}\n\nsuite('ExtHostSearch', () => {\n\tasync function registerTestTextSearchProvider(provider: vscode.TextSearchProvider, scheme = 'file'): Promise<void> {\n\t\tdisposables.add(extHostSearch.registerTextSearchProvider(scheme, provider));\n\t\tawait rpcProtocol.sync();\n\t}\n\n\tasync function registerTestFileSearchProvider(provider: vscode.FileSearchProvider, scheme = 'file'): Promise<void> {\n\t\tdisposables.add(extHostSearch.registerFileSearchProvider(scheme, provider));\n\t\tawait rpcProtocol.sync();\n\t}\n\n\tasync function runFileSearch(query: IFileQuery, cancel = false): Promise<{ results: URI[]; stats: ISearchCompleteStats }> {\n\t\tlet stats: ISearchCompleteStats;\n\t\ttry {\n\t\t\tconst cancellation = new CancellationTokenSource();\n\t\t\tconst p = extHostSearch.$provideFileSearchResults(mockMainThreadSearch.lastHandle, 0, query, cancellation.token);\n\t\t\tif (cancel) {\n\t\t\t\tawait timeout(0);\n\t\t\t\tcancellation.cancel();\n\t\t\t}\n\n\t\t\tstats = await p;\n\t\t} catch (err) {\n\t\t\tif (!isPromiseCanceledError(err)) {\n\t\t\t\tawait rpcProtocol.sync();\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tawait rpcProtocol.sync();\n\t\treturn {\n\t\t\tresults: (<UriComponents[]>mockMainThreadSearch.results).map(r => URI.revive(r)),\n\t\t\tstats: stats!\n\t\t};\n\t}\n\n\tasync function runTextSearch(query: ITextQuery): Promise<{ results: IFileMatch[], stats: ISearchCompleteStats }> {\n\t\tlet stats: ISearchCompleteStats;\n\t\ttry {\n\t\t\tconst cancellation = new CancellationTokenSource();\n\t\t\tconst p = extHostSearch.$provideTextSearchResults(mockMainThreadSearch.lastHandle, 0, query, cancellation.token);\n\n\t\t\tstats = await p;\n\t\t} catch (err) {\n\t\t\tif (!isPromiseCanceledError(err)) {\n\t\t\t\tawait rpcProtocol.sync();\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tawait rpcProtocol.sync();\n\t\tconst results = (<IRawFileMatch2[]>mockMainThreadSearch.results).map(r => ({\n\t\t\t...r,\n\t\t\t...{\n\t\t\t\tresource: URI.revive(r.resource)\n\t\t\t}\n\t\t}));\n\n\t\treturn { results, stats: stats! };\n\t}\n\n\tsetup(() => {\n\t\trpcProtocol = new TestRPCProtocol();\n\n\t\tmockMainThreadSearch = new MockMainThreadSearch();\n\t\tconst logService = new NullLogService();\n\n\t\trpcProtocol.set(MainContext.MainThreadSearch, mockMainThreadSearch);\n\n\t\tmockPFS = {};\n\t\textHostSearch = new class extends NativeExtHostSearch {\n\t\t\tconstructor() {\n\t\t\t\tsuper(\n\t\t\t\t\trpcProtocol,\n\t\t\t\t\tnew class extends mock<IExtHostInitDataService>() { remote = { isRemote: false, authority: undefined, connectionData: null }; },\n\t\t\t\t\tnew URITransformerService(null),\n\t\t\t\t\tlogService\n\t\t\t\t);\n\t\t\t\tthis._pfs = mockPFS as any;\n\t\t\t}\n\n\t\t\tprotected override createTextSearchManager(query: ITextQuery, provider: vscode.TextSearchProvider): TextSearchManager {\n\t\t\t\treturn new NativeTextSearchManager(query, provider, this._pfs);\n\t\t\t}\n\t\t};\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t\treturn rpcProtocol.sync();\n\t});\n\n\tconst rootFolderA = URI.file('/foo/bar1');\n\tconst rootFolderB = URI.file('/foo/bar2');\n\tconst fancyScheme = 'fancy';\n\tconst fancySchemeFolderA = URI.from({ scheme: fancyScheme, path: '/project/folder1' });\n\n\tsuite('File:', () => {\n\n\t\tfunction getSimpleQuery(filePattern = ''): IFileQuery {\n\t\t\treturn {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern,\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\n\t\tfunction compareURIs(actual: URI[], expected: URI[]) {\n\t\t\tconst sortAndStringify = (arr: URI[]) => arr.sort().map(u => u.toString());\n\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tsortAndStringify(actual),\n\t\t\t\tsortAndStringify(expected));\n\t\t}\n\n\t\ttest('no results', async () => {\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { results, stats } = await runFileSearch(getSimpleQuery());\n\t\t\tassert(!stats.limitHit);\n\t\t\tassert(!results.length);\n\t\t});\n\n\t\ttest('simple results', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\tjoinPath(rootFolderA, 'file1.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file2.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'subfolder/file3.ts')\n\t\t\t];\n\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { results, stats } = await runFileSearch(getSimpleQuery());\n\t\t\tassert(!stats.limitHit);\n\t\t\tassert.strictEqual(results.length, 3);\n\t\t\tcompareURIs(results, reportedResults);\n\t\t});\n\n\t\ttest('Search canceled', async () => {\n\t\t\tlet cancelRequested = false;\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tfunction onCancel() {\n\t\t\t\t\t\t\tcancelRequested = true;\n\n\t\t\t\t\t\t\tresolve([joinPath(options.folder, 'file1.ts')]); // or reject or nothing?\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\tonCancel();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoken.onCancellationRequested(() => onCancel());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { results } = await runFileSearch(getSimpleQuery(), true);\n\t\t\tassert(cancelRequested);\n\t\t\tassert(!results.length);\n\t\t});\n\n\t\ttest('provider returns null', async () => {\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\treturn null!;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tawait runFileSearch(getSimpleQuery());\n\t\t\t\tassert(false, 'Expected to fail');\n\t\t\t} catch {\n\t\t\t\t// Expected to throw\n\t\t\t}\n\t\t});\n\n\t\ttest('all provider calls get global include/excludes', async () => {\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\tassert(options.excludes.length === 2 && options.includes.length === 2, 'Missing global include/excludes');\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'foo': true,\n\t\t\t\t\t'bar': true\n\t\t\t\t},\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'something': true,\n\t\t\t\t\t'else': true\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA },\n\t\t\t\t\t{ folder: rootFolderB }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runFileSearch(query);\n\t\t});\n\n\t\ttest('global/local include/excludes combined', async () => {\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\tif (options.folder.toString() === rootFolderA.toString()) {\n\t\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.ts', 'foo']);\n\t\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), ['*.js', 'bar']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.ts']);\n\t\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), ['*.js']);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true\n\t\t\t\t},\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': true\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\tincludePattern: {\n\t\t\t\t\t\t\t'foo': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'bar': true\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ folder: rootFolderB }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runFileSearch(query);\n\t\t});\n\n\t\ttest('include/excludes resolved correctly', async () => {\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.jsx', '*.ts']);\n\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), []);\n\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true,\n\t\t\t\t\t'*.jsx': false\n\t\t\t\t},\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': true,\n\t\t\t\t\t'*.tsx': false\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\tincludePattern: {\n\t\t\t\t\t\t\t'*.jsx': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'*.js': false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runFileSearch(query);\n\t\t});\n\n\t\ttest('basic sibling exclude clause', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\t'file1.ts',\n\t\t\t\t'file1.js',\n\t\t\t];\n\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\treturn Promise.resolve(reportedResults\n\t\t\t\t\t\t.map(relativePath => joinPath(options.folder, relativePath)));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': {\n\t\t\t\t\t\twhen: '$(basename).ts'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runFileSearch(query);\n\t\t\tcompareURIs(\n\t\t\t\tresults,\n\t\t\t\t[\n\t\t\t\t\tjoinPath(rootFolderA, 'file1.ts')\n\t\t\t\t]);\n\t\t});\n\n\t\ttest('multiroot sibling exclude clause', async () => {\n\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\tlet reportedResults: URI[];\n\t\t\t\t\tif (options.folder.fsPath === rootFolderA.fsPath) {\n\t\t\t\t\t\treportedResults = [\n\t\t\t\t\t\t\t'folder/fileA.scss',\n\t\t\t\t\t\t\t'folder/fileA.css',\n\t\t\t\t\t\t\t'folder/file2.css'\n\t\t\t\t\t\t].map(relativePath => joinPath(rootFolderA, relativePath));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treportedResults = [\n\t\t\t\t\t\t\t'fileB.ts',\n\t\t\t\t\t\t\t'fileB.js',\n\t\t\t\t\t\t\t'file3.js'\n\t\t\t\t\t\t].map(relativePath => joinPath(rootFolderB, relativePath));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': {\n\t\t\t\t\t\twhen: '$(basename).ts'\n\t\t\t\t\t},\n\t\t\t\t\t'*.css': true\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'folder/*.css': {\n\t\t\t\t\t\t\t\twhen: '$(basename).scss'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderB,\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'*.js': false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runFileSearch(query);\n\t\t\tcompareURIs(\n\t\t\t\tresults,\n\t\t\t\t[\n\t\t\t\t\tjoinPath(rootFolderA, 'folder/fileA.scss'),\n\t\t\t\t\tjoinPath(rootFolderA, 'folder/file2.css'),\n\n\t\t\t\t\tjoinPath(rootFolderB, 'fileB.ts'),\n\t\t\t\t\tjoinPath(rootFolderB, 'fileB.js'),\n\t\t\t\t\tjoinPath(rootFolderB, 'file3.js'),\n\t\t\t\t]);\n\t\t});\n\n\t\ttest('max results = 1', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\tjoinPath(rootFolderA, 'file1.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file2.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file3.ts'),\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tmaxResults: 1,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runFileSearch(query);\n\t\t\tassert(stats.limitHit, 'Expected to return limitHit');\n\t\t\tassert.strictEqual(results.length, 1);\n\t\t\tcompareURIs(results, reportedResults.slice(0, 1));\n\t\t\tassert(wasCanceled, 'Expected to be canceled when hitting limit');\n\t\t});\n\n\t\ttest('max results = 2', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\tjoinPath(rootFolderA, 'file1.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file2.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file3.ts'),\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runFileSearch(query);\n\t\t\tassert(stats.limitHit, 'Expected to return limitHit');\n\t\t\tassert.strictEqual(results.length, 2);\n\t\t\tcompareURIs(results, reportedResults.slice(0, 2));\n\t\t\tassert(wasCanceled, 'Expected to be canceled when hitting limit');\n\t\t});\n\n\t\ttest('provider returns maxResults exactly', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\tjoinPath(rootFolderA, 'file1.ts'),\n\t\t\t\tjoinPath(rootFolderA, 'file2.ts'),\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runFileSearch(query);\n\t\t\tassert(!stats.limitHit, 'Expected not to return limitHit');\n\t\t\tassert.strictEqual(results.length, 2);\n\t\t\tcompareURIs(results, reportedResults);\n\t\t\tassert(!wasCanceled, 'Expected not to be canceled when just reaching limit');\n\t\t});\n\n\t\ttest('multiroot max results', async () => {\n\t\t\tlet cancels = 0;\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tasync provideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\ttoken.onCancellationRequested(() => cancels++);\n\n\t\t\t\t\t// Provice results async so it has a chance to invoke every provider\n\t\t\t\t\tawait new Promise(r => process.nextTick(r));\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'file1.ts',\n\t\t\t\t\t\t'file2.ts',\n\t\t\t\t\t\t'file3.ts',\n\t\t\t\t\t].map(relativePath => joinPath(options.folder, relativePath));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\n\t\t\t\tfilePattern: '',\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderB\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runFileSearch(query);\n\t\t\tassert.strictEqual(results.length, 2); // Don't care which 2 we got\n\t\t\tassert.strictEqual(cancels, 2, 'Expected all invocations to be canceled when hitting limit');\n\t\t});\n\n\t\ttest('works with non-file schemes', async () => {\n\t\t\tconst reportedResults = [\n\t\t\t\tjoinPath(fancySchemeFolderA, 'file1.ts'),\n\t\t\t\tjoinPath(fancySchemeFolderA, 'file2.ts'),\n\t\t\t\tjoinPath(fancySchemeFolderA, 'subfolder/file3.ts'),\n\n\t\t\t];\n\n\t\t\tawait registerTestFileSearchProvider({\n\t\t\t\tprovideFileSearchResults(query: vscode.FileSearchQuery, options: vscode.FileSearchOptions, token: vscode.CancellationToken): Promise<URI[]> {\n\t\t\t\t\treturn Promise.resolve(reportedResults);\n\t\t\t\t}\n\t\t\t}, fancyScheme);\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.File,\n\t\t\t\tfilePattern: '',\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: fancySchemeFolderA\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runFileSearch(query);\n\t\t\tcompareURIs(results, reportedResults);\n\t\t});\n\t});\n\n\tsuite('Text:', () => {\n\n\t\tfunction makePreview(text: string): vscode.TextSearchMatch['preview'] {\n\t\t\treturn {\n\t\t\t\tmatches: [new Range(0, 0, 0, text.length)],\n\t\t\t\ttext\n\t\t\t};\n\t\t}\n\n\t\tfunction makeTextResult(baseFolder: URI, relativePath: string): vscode.TextSearchMatch {\n\t\t\treturn {\n\t\t\t\tpreview: makePreview('foo'),\n\t\t\t\tranges: [new Range(0, 0, 0, 3)],\n\t\t\t\turi: joinPath(baseFolder, relativePath)\n\t\t\t};\n\t\t}\n\n\t\tfunction getSimpleQuery(queryText: string): ITextQuery {\n\t\t\treturn {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern(queryText),\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\n\t\tfunction getPattern(queryText: string): IPatternInfo {\n\t\t\treturn {\n\t\t\t\tpattern: queryText\n\t\t\t};\n\t\t}\n\n\t\tfunction assertResults(actual: IFileMatch[], expected: vscode.TextSearchResult[]) {\n\t\t\tconst actualTextSearchResults: vscode.TextSearchResult[] = [];\n\t\t\tfor (let fileMatch of actual) {\n\t\t\t\t// Make relative\n\t\t\t\tfor (let lineResult of fileMatch.results!) {\n\t\t\t\t\tif (resultIsMatch(lineResult)) {\n\t\t\t\t\t\tactualTextSearchResults.push({\n\t\t\t\t\t\t\tpreview: {\n\t\t\t\t\t\t\t\ttext: lineResult.preview.text,\n\t\t\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\t\t\tlineResult.preview.matches,\n\t\t\t\t\t\t\t\t\tm => new Range(m.startLineNumber, m.startColumn, m.endLineNumber, m.endColumn))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\t\t\tlineResult.ranges,\n\t\t\t\t\t\t\t\tr => new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\turi: fileMatch.resource\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactualTextSearchResults.push(<vscode.TextSearchContext>{\n\t\t\t\t\t\t\ttext: lineResult.text,\n\t\t\t\t\t\t\tlineNumber: lineResult.lineNumber,\n\t\t\t\t\t\t\turi: fileMatch.resource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst rangeToString = (r: vscode.Range) => `(${r.start.line}, ${r.start.character}), (${r.end.line}, ${r.end.character})`;\n\n\t\t\tconst makeComparable = (results: vscode.TextSearchResult[]) => results\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\tconst compareKeyA = a.uri.toString() + ': ' + (extensionResultIsMatch(a) ? a.preview.text : a.text);\n\t\t\t\t\tconst compareKeyB = b.uri.toString() + ': ' + (extensionResultIsMatch(b) ? b.preview.text : b.text);\n\t\t\t\t\treturn compareKeyB.localeCompare(compareKeyA);\n\t\t\t\t})\n\t\t\t\t.map(r => extensionResultIsMatch(r) ? {\n\t\t\t\t\turi: r.uri.toString(),\n\t\t\t\t\trange: mapArrayOrNot(r.ranges, rangeToString),\n\t\t\t\t\tpreview: {\n\t\t\t\t\t\ttext: r.preview.text,\n\t\t\t\t\t\tmatch: null // Don't care about this right now\n\t\t\t\t\t}\n\t\t\t\t} : {\n\t\t\t\t\turi: r.uri.toString(),\n\t\t\t\t\ttext: r.text,\n\t\t\t\t\tlineNumber: r.lineNumber\n\t\t\t\t});\n\n\t\t\treturn assert.deepStrictEqual(\n\t\t\t\tmakeComparable(actualTextSearchResults),\n\t\t\t\tmakeComparable(expected));\n\t\t}\n\n\t\ttest('no results', async () => {\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { results, stats } = await runTextSearch(getSimpleQuery('foo'));\n\t\t\tassert(!stats.limitHit);\n\t\t\tassert(!results.length);\n\t\t});\n\n\t\ttest('basic results', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file2.ts')\n\t\t\t];\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { results, stats } = await runTextSearch(getSimpleQuery('foo'));\n\t\t\tassert(!stats.limitHit);\n\t\t\tassertResults(results, providedResults);\n\t\t});\n\n\t\ttest('all provider calls get global include/excludes', async () => {\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tassert.strictEqual(options.includes.length, 1);\n\t\t\t\t\tassert.strictEqual(options.excludes.length, 1);\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ITextQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true\n\t\t\t\t},\n\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': true\n\t\t\t\t},\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA },\n\t\t\t\t\t{ folder: rootFolderB }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runTextSearch(query);\n\t\t});\n\n\t\ttest('global/local include/excludes combined', async () => {\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tif (options.folder.toString() === rootFolderA.toString()) {\n\t\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.ts', 'foo']);\n\t\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), ['*.js', 'bar']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.ts']);\n\t\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), ['*.js']);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ITextQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true\n\t\t\t\t},\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': true\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\tincludePattern: {\n\t\t\t\t\t\t\t'foo': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'bar': true\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ folder: rootFolderB }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runTextSearch(query);\n\t\t});\n\n\t\ttest('include/excludes resolved correctly', async () => {\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tassert.deepStrictEqual(options.includes.sort(), ['*.jsx', '*.ts']);\n\t\t\t\t\tassert.deepStrictEqual(options.excludes.sort(), []);\n\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true,\n\t\t\t\t\t'*.jsx': false\n\t\t\t\t},\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': true,\n\t\t\t\t\t'*.tsx': false\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\tincludePattern: {\n\t\t\t\t\t\t\t'*.jsx': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'*.js': false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tawait runTextSearch(query);\n\t\t});\n\n\t\ttest('provider fail', async () => {\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tthrow new Error('Provider fail');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tawait runTextSearch(getSimpleQuery('foo'));\n\t\t\t\tassert(false, 'Expected to fail');\n\t\t\t} catch {\n\t\t\t\t// expected to fail\n\t\t\t}\n\t\t});\n\n\t\ttest('basic sibling clause', async () => {\n\t\t\tmockPFS.readdir = (_path: string): any => {\n\t\t\t\tif (_path === rootFolderA.fsPath) {\n\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t'file1.js',\n\t\t\t\t\t\t'file1.ts'\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error('Wrong path'));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.js'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts')\n\t\t\t];\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': {\n\t\t\t\t\t\twhen: '$(basename).ts'\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runTextSearch(query);\n\t\t\tassertResults(results, providedResults.slice(1));\n\t\t});\n\n\t\ttest('multiroot sibling clause', async () => {\n\t\t\tmockPFS.readdir = (_path: string): any => {\n\t\t\t\tif (_path === joinPath(rootFolderA, 'folder').fsPath) {\n\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t'fileA.scss',\n\t\t\t\t\t\t'fileA.css',\n\t\t\t\t\t\t'file2.css'\n\t\t\t\t\t]);\n\t\t\t\t} else if (_path === rootFolderB.fsPath) {\n\t\t\t\t\treturn Promise.resolve([\n\t\t\t\t\t\t'fileB.ts',\n\t\t\t\t\t\t'fileB.js',\n\t\t\t\t\t\t'file3.js'\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error('Wrong path'));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tlet reportedResults;\n\t\t\t\t\tif (options.folder.fsPath === rootFolderA.fsPath) {\n\t\t\t\t\t\treportedResults = [\n\t\t\t\t\t\t\tmakeTextResult(rootFolderA, 'folder/fileA.scss'),\n\t\t\t\t\t\t\tmakeTextResult(rootFolderA, 'folder/fileA.css'),\n\t\t\t\t\t\t\tmakeTextResult(rootFolderA, 'folder/file2.css')\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treportedResults = [\n\t\t\t\t\t\t\tmakeTextResult(rootFolderB, 'fileB.ts'),\n\t\t\t\t\t\t\tmakeTextResult(rootFolderB, 'fileB.js'),\n\t\t\t\t\t\t\tmakeTextResult(rootFolderB, 'file3.js')\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\n\t\t\t\t\treportedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\texcludePattern: {\n\t\t\t\t\t'*.js': {\n\t\t\t\t\t\twhen: '$(basename).ts'\n\t\t\t\t\t},\n\t\t\t\t\t'*.css': true\n\t\t\t\t},\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderA,\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'folder/*.css': {\n\t\t\t\t\t\t\t\twhen: '$(basename).scss'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfolder: rootFolderB,\n\t\t\t\t\t\texcludePattern: {\n\t\t\t\t\t\t\t'*.js': false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runTextSearch(query);\n\t\t\tassertResults(results, [\n\t\t\t\tmakeTextResult(rootFolderA, 'folder/fileA.scss'),\n\t\t\t\tmakeTextResult(rootFolderA, 'folder/file2.css'),\n\t\t\t\tmakeTextResult(rootFolderB, 'fileB.ts'),\n\t\t\t\tmakeTextResult(rootFolderB, 'fileB.js'),\n\t\t\t\tmakeTextResult(rootFolderB, 'file3.js')]);\n\t\t});\n\n\t\ttest('include pattern applied', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.js'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts')\n\t\t\t];\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tincludePattern: {\n\t\t\t\t\t'*.ts': true\n\t\t\t\t},\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runTextSearch(query);\n\t\t\tassertResults(results, providedResults.slice(1));\n\t\t});\n\n\t\ttest('max results = 1', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file2.ts')\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tmaxResults: 1,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runTextSearch(query);\n\t\t\tassert(stats.limitHit, 'Expected to return limitHit');\n\t\t\tassertResults(results, providedResults.slice(0, 1));\n\t\t\tassert(wasCanceled, 'Expected to be canceled');\n\t\t});\n\n\t\ttest('max results = 2', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file2.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file3.ts')\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runTextSearch(query);\n\t\t\tassert(stats.limitHit, 'Expected to return limitHit');\n\t\t\tassertResults(results, providedResults.slice(0, 2));\n\t\t\tassert(wasCanceled, 'Expected to be canceled');\n\t\t});\n\n\t\ttest('provider returns maxResults exactly', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file2.ts')\n\t\t\t];\n\n\t\t\tlet wasCanceled = false;\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\ttoken.onCancellationRequested(() => wasCanceled = true);\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runTextSearch(query);\n\t\t\tassert(!stats.limitHit, 'Expected not to return limitHit');\n\t\t\tassertResults(results, providedResults);\n\t\t\tassert(!wasCanceled, 'Expected not to be canceled');\n\t\t});\n\n\t\ttest('provider returns early with limitHit', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(rootFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file2.ts'),\n\t\t\t\tmakeTextResult(rootFolderA, 'file3.ts')\n\t\t\t];\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve({ limitHit: true });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tmaxResults: 1000,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results, stats } = await runTextSearch(query);\n\t\t\tassert(stats.limitHit, 'Expected to return limitHit');\n\t\t\tassertResults(results, providedResults);\n\t\t});\n\n\t\ttest('multiroot max results', async () => {\n\t\t\tlet cancels = 0;\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tasync provideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\ttoken.onCancellationRequested(() => cancels++);\n\t\t\t\t\tawait new Promise(r => process.nextTick(r));\n\t\t\t\t\t[\n\t\t\t\t\t\t'file1.ts',\n\t\t\t\t\t\t'file2.ts',\n\t\t\t\t\t\t'file3.ts',\n\t\t\t\t\t].forEach(f => progress.report(makeTextResult(options.folder, f)));\n\t\t\t\t\treturn null!;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tmaxResults: 2,\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: rootFolderA },\n\t\t\t\t\t{ folder: rootFolderB }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runTextSearch(query);\n\t\t\tassert.strictEqual(results.length, 2);\n\t\t\tassert.strictEqual(cancels, 2);\n\t\t});\n\n\t\ttest('works with non-file schemes', async () => {\n\t\t\tconst providedResults: vscode.TextSearchResult[] = [\n\t\t\t\tmakeTextResult(fancySchemeFolderA, 'file1.ts'),\n\t\t\t\tmakeTextResult(fancySchemeFolderA, 'file2.ts'),\n\t\t\t\tmakeTextResult(fancySchemeFolderA, 'file3.ts')\n\t\t\t];\n\n\t\t\tawait registerTestTextSearchProvider({\n\t\t\t\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\t\t\t\tprovidedResults.forEach(r => progress.report(r));\n\t\t\t\t\treturn Promise.resolve(null!);\n\t\t\t\t}\n\t\t\t}, fancyScheme);\n\n\t\t\tconst query: ISearchQuery = {\n\t\t\t\ttype: QueryType.Text,\n\t\t\t\tcontentPattern: getPattern('foo'),\n\n\t\t\t\tfolderQueries: [\n\t\t\t\t\t{ folder: fancySchemeFolderA }\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst { results } = await runTextSearch(query);\n\t\t\tassertResults(results, providedResults);\n\t\t});\n\t});\n});\n"]}