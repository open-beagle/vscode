{"version":3,"file":"quickAccess.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/quickAccess.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions, IQuickAccessProvider, QuickAccessRegistry } from 'vs/platform/quickinput/common/quickAccess';\nimport { IQuickPick, IQuickPickItem, IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { DisposableStore, toDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { timeout } from 'vs/base/common/async';\nimport { PickerQuickAccessProvider, FastAndSlowPicks } from 'vs/platform/quickinput/browser/pickerQuickAccess';\n\nsuite('QuickAccess', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet providerDefaultCalled = false;\n\tlet providerDefaultCanceled = false;\n\tlet providerDefaultDisposed = false;\n\n\tlet provider1Called = false;\n\tlet provider1Canceled = false;\n\tlet provider1Disposed = false;\n\n\tlet provider2Called = false;\n\tlet provider2Canceled = false;\n\tlet provider2Disposed = false;\n\n\tlet provider3Called = false;\n\tlet provider3Canceled = false;\n\tlet provider3Disposed = false;\n\n\tclass TestProviderDefault implements IQuickAccessProvider {\n\n\t\tconstructor(@IQuickInputService private readonly quickInputService: IQuickInputService, disposables: DisposableStore) { }\n\n\t\tprovide(picker: IQuickPick<IQuickPickItem>, token: CancellationToken): IDisposable {\n\t\t\tassert.ok(picker);\n\t\t\tproviderDefaultCalled = true;\n\t\t\ttoken.onCancellationRequested(() => providerDefaultCanceled = true);\n\n\t\t\t// bring up provider #3\n\t\t\tsetTimeout(() => this.quickInputService.quickAccess.show(providerDescriptor3.prefix));\n\n\t\t\treturn toDisposable(() => providerDefaultDisposed = true);\n\t\t}\n\t}\n\n\tclass TestProvider1 implements IQuickAccessProvider {\n\t\tprovide(picker: IQuickPick<IQuickPickItem>, token: CancellationToken): IDisposable {\n\t\t\tassert.ok(picker);\n\t\t\tprovider1Called = true;\n\t\t\ttoken.onCancellationRequested(() => provider1Canceled = true);\n\n\t\t\treturn toDisposable(() => provider1Disposed = true);\n\t\t}\n\t}\n\n\tclass TestProvider2 implements IQuickAccessProvider {\n\t\tprovide(picker: IQuickPick<IQuickPickItem>, token: CancellationToken): IDisposable {\n\t\t\tassert.ok(picker);\n\t\t\tprovider2Called = true;\n\t\t\ttoken.onCancellationRequested(() => provider2Canceled = true);\n\n\t\t\treturn toDisposable(() => provider2Disposed = true);\n\t\t}\n\t}\n\n\tclass TestProvider3 implements IQuickAccessProvider {\n\t\tprovide(picker: IQuickPick<IQuickPickItem>, token: CancellationToken): IDisposable {\n\t\t\tassert.ok(picker);\n\t\t\tprovider3Called = true;\n\t\t\ttoken.onCancellationRequested(() => provider3Canceled = true);\n\n\t\t\t// hide without picking\n\t\t\tsetTimeout(() => picker.hide());\n\n\t\t\treturn toDisposable(() => provider3Disposed = true);\n\t\t}\n\t}\n\n\tconst providerDescriptorDefault = { ctor: TestProviderDefault, prefix: '', helpEntries: [] };\n\tconst providerDescriptor1 = { ctor: TestProvider1, prefix: 'test', helpEntries: [] };\n\tconst providerDescriptor2 = { ctor: TestProvider2, prefix: 'test something', helpEntries: [] };\n\tconst providerDescriptor3 = { ctor: TestProvider3, prefix: 'changed', helpEntries: [] };\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\ttest('registry', () => {\n\t\tconst registry = (Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess));\n\t\tconst restore = (registry as QuickAccessRegistry).clear();\n\n\t\tassert.ok(!registry.getQuickAccessProvider('test'));\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(registry.registerQuickAccessProvider(providerDescriptorDefault));\n\t\tassert(registry.getQuickAccessProvider('') === providerDescriptorDefault);\n\t\tassert(registry.getQuickAccessProvider('test') === providerDescriptorDefault);\n\n\t\tconst disposable = disposables.add(registry.registerQuickAccessProvider(providerDescriptor1));\n\t\tassert(registry.getQuickAccessProvider('test') === providerDescriptor1);\n\n\t\tconst providers = registry.getQuickAccessProviders();\n\t\tassert(providers.some(provider => provider.prefix === 'test'));\n\n\t\tdisposable.dispose();\n\t\tassert(registry.getQuickAccessProvider('test') === providerDescriptorDefault);\n\n\t\tdisposables.dispose();\n\t\tassert.ok(!registry.getQuickAccessProvider('test'));\n\n\t\trestore();\n\t});\n\n\ttest('provider', async () => {\n\t\tconst registry = (Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess));\n\t\tconst restore = (registry as QuickAccessRegistry).clear();\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(registry.registerQuickAccessProvider(providerDescriptorDefault));\n\t\tdisposables.add(registry.registerQuickAccessProvider(providerDescriptor1));\n\t\tdisposables.add(registry.registerQuickAccessProvider(providerDescriptor2));\n\t\tdisposables.add(registry.registerQuickAccessProvider(providerDescriptor3));\n\n\t\taccessor.quickInputService.quickAccess.show('test');\n\t\tassert.strictEqual(providerDefaultCalled, false);\n\t\tassert.strictEqual(provider1Called, true);\n\t\tassert.strictEqual(provider2Called, false);\n\t\tassert.strictEqual(provider3Called, false);\n\t\tassert.strictEqual(providerDefaultCanceled, false);\n\t\tassert.strictEqual(provider1Canceled, false);\n\t\tassert.strictEqual(provider2Canceled, false);\n\t\tassert.strictEqual(provider3Canceled, false);\n\t\tassert.strictEqual(providerDefaultDisposed, false);\n\t\tassert.strictEqual(provider1Disposed, false);\n\t\tassert.strictEqual(provider2Disposed, false);\n\t\tassert.strictEqual(provider3Disposed, false);\n\t\tprovider1Called = false;\n\n\t\taccessor.quickInputService.quickAccess.show('test something');\n\t\tassert.strictEqual(providerDefaultCalled, false);\n\t\tassert.strictEqual(provider1Called, false);\n\t\tassert.strictEqual(provider2Called, true);\n\t\tassert.strictEqual(provider3Called, false);\n\t\tassert.strictEqual(providerDefaultCanceled, false);\n\t\tassert.strictEqual(provider1Canceled, true);\n\t\tassert.strictEqual(provider2Canceled, false);\n\t\tassert.strictEqual(provider3Canceled, false);\n\t\tassert.strictEqual(providerDefaultDisposed, false);\n\t\tassert.strictEqual(provider1Disposed, true);\n\t\tassert.strictEqual(provider2Disposed, false);\n\t\tassert.strictEqual(provider3Disposed, false);\n\t\tprovider2Called = false;\n\t\tprovider1Canceled = false;\n\t\tprovider1Disposed = false;\n\n\t\taccessor.quickInputService.quickAccess.show('usedefault');\n\t\tassert.strictEqual(providerDefaultCalled, true);\n\t\tassert.strictEqual(provider1Called, false);\n\t\tassert.strictEqual(provider2Called, false);\n\t\tassert.strictEqual(provider3Called, false);\n\t\tassert.strictEqual(providerDefaultCanceled, false);\n\t\tassert.strictEqual(provider1Canceled, false);\n\t\tassert.strictEqual(provider2Canceled, true);\n\t\tassert.strictEqual(provider3Canceled, false);\n\t\tassert.strictEqual(providerDefaultDisposed, false);\n\t\tassert.strictEqual(provider1Disposed, false);\n\t\tassert.strictEqual(provider2Disposed, true);\n\t\tassert.strictEqual(provider3Disposed, false);\n\n\t\tawait timeout(1);\n\n\t\tassert.strictEqual(providerDefaultCanceled, true);\n\t\tassert.strictEqual(providerDefaultDisposed, true);\n\t\tassert.strictEqual(provider3Called, true);\n\n\t\tawait timeout(1);\n\n\t\tassert.strictEqual(provider3Canceled, true);\n\t\tassert.strictEqual(provider3Disposed, true);\n\n\t\tdisposables.dispose();\n\n\t\trestore();\n\t});\n\n\tlet fastProviderCalled = false;\n\tlet slowProviderCalled = false;\n\tlet fastAndSlowProviderCalled = false;\n\n\tlet slowProviderCanceled = false;\n\tlet fastAndSlowProviderCanceled = false;\n\n\tclass FastTestQuickPickProvider extends PickerQuickAccessProvider<IQuickPickItem> {\n\n\t\tconstructor() {\n\t\t\tsuper('fast');\n\t\t}\n\n\t\tprotected getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Array<IQuickPickItem> {\n\t\t\tfastProviderCalled = true;\n\n\t\t\treturn [{ label: 'Fast Pick' }];\n\t\t}\n\t}\n\n\tclass SlowTestQuickPickProvider extends PickerQuickAccessProvider<IQuickPickItem> {\n\n\t\tconstructor() {\n\t\t\tsuper('slow');\n\t\t}\n\n\t\tprotected async getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Promise<Array<IQuickPickItem>> {\n\t\t\tslowProviderCalled = true;\n\n\t\t\tawait timeout(1);\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tslowProviderCanceled = true;\n\t\t\t}\n\n\t\t\treturn [{ label: 'Slow Pick' }];\n\t\t}\n\t}\n\n\tclass FastAndSlowTestQuickPickProvider extends PickerQuickAccessProvider<IQuickPickItem> {\n\n\t\tconstructor() {\n\t\t\tsuper('bothFastAndSlow');\n\t\t}\n\n\t\tprotected getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): FastAndSlowPicks<IQuickPickItem> {\n\t\t\tfastAndSlowProviderCalled = true;\n\n\t\t\treturn {\n\t\t\t\tpicks: [{ label: 'Fast Pick' }],\n\t\t\t\tadditionalPicks: (async () => {\n\t\t\t\t\tawait timeout(1);\n\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tfastAndSlowProviderCanceled = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [{ label: 'Slow Pick' }];\n\t\t\t\t})()\n\t\t\t};\n\t\t}\n\t}\n\n\tconst fastProviderDescriptor = { ctor: FastTestQuickPickProvider, prefix: 'fast', helpEntries: [] };\n\tconst slowProviderDescriptor = { ctor: SlowTestQuickPickProvider, prefix: 'slow', helpEntries: [] };\n\tconst fastAndSlowProviderDescriptor = { ctor: FastAndSlowTestQuickPickProvider, prefix: 'bothFastAndSlow', helpEntries: [] };\n\n\ttest('quick pick access', async () => {\n\t\tconst registry = (Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess));\n\t\tconst restore = (registry as QuickAccessRegistry).clear();\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(registry.registerQuickAccessProvider(fastProviderDescriptor));\n\t\tdisposables.add(registry.registerQuickAccessProvider(slowProviderDescriptor));\n\t\tdisposables.add(registry.registerQuickAccessProvider(fastAndSlowProviderDescriptor));\n\n\t\taccessor.quickInputService.quickAccess.show('fast');\n\t\tassert.strictEqual(fastProviderCalled, true);\n\t\tassert.strictEqual(slowProviderCalled, false);\n\t\tassert.strictEqual(fastAndSlowProviderCalled, false);\n\t\tfastProviderCalled = false;\n\n\t\taccessor.quickInputService.quickAccess.show('slow');\n\t\tawait timeout(2);\n\n\t\tassert.strictEqual(fastProviderCalled, false);\n\t\tassert.strictEqual(slowProviderCalled, true);\n\t\tassert.strictEqual(slowProviderCanceled, false);\n\t\tassert.strictEqual(fastAndSlowProviderCalled, false);\n\t\tslowProviderCalled = false;\n\n\t\taccessor.quickInputService.quickAccess.show('bothFastAndSlow');\n\t\tawait timeout(2);\n\n\t\tassert.strictEqual(fastProviderCalled, false);\n\t\tassert.strictEqual(slowProviderCalled, false);\n\t\tassert.strictEqual(fastAndSlowProviderCalled, true);\n\t\tassert.strictEqual(fastAndSlowProviderCanceled, false);\n\t\tfastAndSlowProviderCalled = false;\n\n\t\taccessor.quickInputService.quickAccess.show('slow');\n\t\taccessor.quickInputService.quickAccess.show('bothFastAndSlow');\n\t\taccessor.quickInputService.quickAccess.show('fast');\n\n\t\tassert.strictEqual(fastProviderCalled, true);\n\t\tassert.strictEqual(slowProviderCalled, true);\n\t\tassert.strictEqual(fastAndSlowProviderCalled, true);\n\n\t\tawait timeout(2);\n\t\tassert.strictEqual(slowProviderCanceled, true);\n\t\tassert.strictEqual(fastAndSlowProviderCanceled, true);\n\n\t\tdisposables.dispose();\n\n\t\trestore();\n\t});\n});\n"]}