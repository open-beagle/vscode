{"version":3,"file":"testRPCProtocol.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/api/testRPCProtocol.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyIdentifier } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IExtHostContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { isThenable } from 'vs/base/common/async';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensions';\n\nexport function SingleProxyRPCProtocol(thing: any): IExtHostContext & IExtHostRpcService {\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tremoteAuthority: null!,\n\t\tgetProxy<T>(): T {\n\t\t\treturn thing;\n\t\t},\n\t\tset<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\t\treturn value;\n\t\t},\n\t\tassertRegistered: undefined!,\n\t\tdrain: undefined!,\n\t\textensionHostKind: ExtensionHostKind.LocalProcess\n\t};\n}\n\nexport class TestRPCProtocol implements IExtHostContext, IExtHostRpcService {\n\n\tpublic _serviceBrand: undefined;\n\tpublic remoteAuthority = null!;\n\tpublic extensionHostKind = ExtensionHostKind.LocalProcess;\n\n\tprivate _callCountValue: number = 0;\n\tprivate _idle?: Promise<any>;\n\tprivate _completeIdle?: Function;\n\n\tprivate readonly _locals: { [id: string]: any; };\n\tprivate readonly _proxies: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis._locals = Object.create(null);\n\t\tthis._proxies = Object.create(null);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate get _callCount(): number {\n\t\treturn this._callCountValue;\n\t}\n\n\tprivate set _callCount(value: number) {\n\t\tthis._callCountValue = value;\n\t\tif (this._callCountValue === 0) {\n\t\t\tif (this._completeIdle) {\n\t\t\t\tthis._completeIdle();\n\t\t\t}\n\t\t\tthis._idle = undefined;\n\t\t}\n\t}\n\n\tsync(): Promise<any> {\n\t\treturn new Promise<any>((c) => {\n\t\t\tsetTimeout(c, 0);\n\t\t}).then(() => {\n\t\t\tif (this._callCount === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!this._idle) {\n\t\t\t\tthis._idle = new Promise<any>((c, e) => {\n\t\t\t\t\tthis._completeIdle = c;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this._idle;\n\t\t});\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): T {\n\t\tif (!this._proxies[identifier.sid]) {\n\t\t\tthis._proxies[identifier.sid] = this._createProxy(identifier.sid);\n\t\t}\n\t\treturn this._proxies[identifier.sid];\n\t}\n\n\tprivate _createProxy<T>(proxyId: string): T {\n\t\tlet handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(proxyId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.sid] = value;\n\t\treturn value;\n\t}\n\n\tprotected _remoteCall(proxyId: string, path: string, args: any[]): Promise<any> {\n\t\tthis._callCount++;\n\n\t\treturn new Promise<any>((c) => {\n\t\t\tsetTimeout(c, 0);\n\t\t}).then(() => {\n\t\t\tconst instance = this._locals[proxyId];\n\t\t\t// pretend the args went over the wire... (invoke .toJSON on objects...)\n\t\t\tconst wireArgs = simulateWireTransfer(args);\n\t\t\tlet p: Promise<any>;\n\t\t\ttry {\n\t\t\t\tlet result = (<Function>instance[path]).apply(instance, wireArgs);\n\t\t\t\tp = isThenable(result) ? result : Promise.resolve(result);\n\t\t\t} catch (err) {\n\t\t\t\tp = Promise.reject(err);\n\t\t\t}\n\n\t\t\treturn p.then(result => {\n\t\t\t\tthis._callCount--;\n\t\t\t\t// pretend the result went over the wire... (invoke .toJSON on objects...)\n\t\t\t\tconst wireResult = simulateWireTransfer(result);\n\t\t\t\treturn wireResult;\n\t\t\t}, err => {\n\t\t\t\tthis._callCount--;\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tthrow new Error('Not implemented!');\n\t}\n}\n\nfunction simulateWireTransfer<T>(obj: T): T {\n\tif (!obj) {\n\t\treturn obj;\n\t}\n\treturn JSON.parse(JSON.stringify(obj));\n}\n"]}