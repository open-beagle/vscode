{"version":3,"file":"extHostWorkspace.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/api/extHostWorkspace.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { basename } from 'vs/base/common/path';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IWorkspaceFolderData } from 'vs/platform/workspace/common/workspace';\nimport { MainThreadWorkspace } from 'vs/workbench/api/browser/mainThreadWorkspace';\nimport { IMainContext, IWorkspaceData, MainContext, ITextSearchComplete } from 'vs/workbench/api/common/extHost.protocol';\nimport { RelativePattern } from 'vs/workbench/api/common/extHostTypes';\nimport { ExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { mock } from 'vs/base/test/common/mock';\nimport { TestRPCProtocol } from './testRPCProtocol';\nimport { ExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IPatternInfo } from 'vs/workbench/services/search/common/search';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\n\nfunction createExtHostWorkspace(mainContext: IMainContext, data: IWorkspaceData, logService: ILogService): ExtHostWorkspace {\n\tconst result = new ExtHostWorkspace(\n\t\tnew ExtHostRpcService(mainContext),\n\t\tnew class extends mock<IExtHostInitDataService>() { workspace = data; },\n\t\tnew class extends mock<IExtHostFileSystemInfo>() { override getCapabilities() { return isLinux ? FileSystemProviderCapabilities.PathCaseSensitive : undefined; } },\n\t\tlogService,\n\t);\n\tresult.$initializeWorkspace(data, true);\n\treturn result;\n}\n\nsuite('ExtHostWorkspace', function () {\n\n\tconst extensionDescriptor: IExtensionDescription = {\n\t\tidentifier: new ExtensionIdentifier('nullExtensionDescription'),\n\t\tname: 'ext',\n\t\tpublisher: 'vscode',\n\t\tenableProposedApi: false,\n\t\tengines: undefined!,\n\t\textensionLocation: undefined!,\n\t\tisBuiltin: false,\n\t\tisUserBuiltin: false,\n\t\tisUnderDevelopment: false,\n\t\tversion: undefined!\n\t};\n\n\tfunction assertAsRelativePath(workspace: ExtHostWorkspace, input: string, expected: string, includeWorkspace?: boolean) {\n\t\tconst actual = workspace.getRelativePath(input, includeWorkspace);\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\ttest('asRelativePath', () => {\n\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file('/Coding/Applications/NewsWoWBot'), 0)], name: 'Test' }, new NullLogService());\n\n\t\tassertAsRelativePath(ws, '/Coding/Applications/NewsWoWBot/bernd/das/brot', 'bernd/das/brot');\n\t\tassertAsRelativePath(ws, '/Apps/DartPubCache/hosted/pub.dartlang.org/convert-2.0.1/lib/src/hex.dart',\n\t\t\t'/Apps/DartPubCache/hosted/pub.dartlang.org/convert-2.0.1/lib/src/hex.dart');\n\n\t\tassertAsRelativePath(ws, '', '');\n\t\tassertAsRelativePath(ws, '/foo/bar', '/foo/bar');\n\t\tassertAsRelativePath(ws, 'in/out', 'in/out');\n\t});\n\n\ttest('asRelativePath, same paths, #11402', function () {\n\t\tconst root = '/home/aeschli/workspaces/samples/docker';\n\t\tconst input = '/home/aeschli/workspaces/samples/docker';\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\n\t\tassertAsRelativePath(ws, input, input);\n\n\t\tconst input2 = '/home/aeschli/workspaces/samples/docker/a.file';\n\t\tassertAsRelativePath(ws, input2, 'a.file');\n\t});\n\n\ttest('asRelativePath, no workspace', function () {\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), null!, new NullLogService());\n\t\tassertAsRelativePath(ws, '', '');\n\t\tassertAsRelativePath(ws, '/foo/bar', '/foo/bar');\n\t});\n\n\ttest('asRelativePath, multiple folders', function () {\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file('/Coding/One'), 0), aWorkspaceFolderData(URI.file('/Coding/Two'), 1)], name: 'Test' }, new NullLogService());\n\t\tassertAsRelativePath(ws, '/Coding/One/file.txt', 'One/file.txt');\n\t\tassertAsRelativePath(ws, '/Coding/Two/files/out.txt', 'Two/files/out.txt');\n\t\tassertAsRelativePath(ws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt');\n\t});\n\n\ttest('slightly inconsistent behaviour of asRelativePath and getWorkspaceFolder, #31553', function () {\n\t\tconst mrws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file('/Coding/One'), 0), aWorkspaceFolderData(URI.file('/Coding/Two'), 1)], name: 'Test' }, new NullLogService());\n\n\t\tassertAsRelativePath(mrws, '/Coding/One/file.txt', 'One/file.txt');\n\t\tassertAsRelativePath(mrws, '/Coding/One/file.txt', 'One/file.txt', true);\n\t\tassertAsRelativePath(mrws, '/Coding/One/file.txt', 'file.txt', false);\n\t\tassertAsRelativePath(mrws, '/Coding/Two/files/out.txt', 'Two/files/out.txt');\n\t\tassertAsRelativePath(mrws, '/Coding/Two/files/out.txt', 'Two/files/out.txt', true);\n\t\tassertAsRelativePath(mrws, '/Coding/Two/files/out.txt', 'files/out.txt', false);\n\t\tassertAsRelativePath(mrws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt');\n\t\tassertAsRelativePath(mrws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt', true);\n\t\tassertAsRelativePath(mrws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt', false);\n\n\t\tconst srws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file('/Coding/One'), 0)], name: 'Test' }, new NullLogService());\n\t\tassertAsRelativePath(srws, '/Coding/One/file.txt', 'file.txt');\n\t\tassertAsRelativePath(srws, '/Coding/One/file.txt', 'file.txt', false);\n\t\tassertAsRelativePath(srws, '/Coding/One/file.txt', 'One/file.txt', true);\n\t\tassertAsRelativePath(srws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt');\n\t\tassertAsRelativePath(srws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt', true);\n\t\tassertAsRelativePath(srws, '/Coding/Two2/files/out.txt', '/Coding/Two2/files/out.txt', false);\n\t});\n\n\ttest('getPath, legacy', function () {\n\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [] }, new NullLogService());\n\t\tassert.strictEqual(ws.getPath(), undefined);\n\n\t\tws = createExtHostWorkspace(new TestRPCProtocol(), null!, new NullLogService());\n\t\tassert.strictEqual(ws.getPath(), undefined);\n\n\t\tws = createExtHostWorkspace(new TestRPCProtocol(), undefined!, new NullLogService());\n\t\tassert.strictEqual(ws.getPath(), undefined);\n\n\t\tws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.file('Folder'), 0), aWorkspaceFolderData(URI.file('Another/Folder'), 1)] }, new NullLogService());\n\t\tassert.strictEqual(ws.getPath()!.replace(/\\\\/g, '/'), '/Folder');\n\n\t\tws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.file('/Folder'), 0)] }, new NullLogService());\n\t\tassert.strictEqual(ws.getPath()!.replace(/\\\\/g, '/'), '/Folder');\n\t});\n\n\ttest('WorkspaceFolder has name and index', function () {\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', folders: [aWorkspaceFolderData(URI.file('/Coding/One'), 0), aWorkspaceFolderData(URI.file('/Coding/Two'), 1)], name: 'Test' }, new NullLogService());\n\n\t\tconst [one, two] = ws.getWorkspaceFolders()!;\n\n\t\tassert.strictEqual(one.name, 'One');\n\t\tassert.strictEqual(one.index, 0);\n\t\tassert.strictEqual(two.name, 'Two');\n\t\tassert.strictEqual(two.index, 1);\n\t});\n\n\ttest('getContainingWorkspaceFolder', () => {\n\t\tconst ws = createExtHostWorkspace(new TestRPCProtocol(), {\n\t\t\tid: 'foo',\n\t\t\tname: 'Test',\n\t\t\tfolders: [\n\t\t\t\taWorkspaceFolderData(URI.file('/Coding/One'), 0),\n\t\t\t\taWorkspaceFolderData(URI.file('/Coding/Two'), 1),\n\t\t\t\taWorkspaceFolderData(URI.file('/Coding/Two/Nested'), 2)\n\t\t\t]\n\t\t}, new NullLogService());\n\n\t\tlet folder = ws.getWorkspaceFolder(URI.file('/foo/bar'));\n\t\tassert.strictEqual(folder, undefined);\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/One/file/path.txt'))!;\n\t\tassert.strictEqual(folder.name, 'One');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/file/path.txt'))!;\n\t\tassert.strictEqual(folder.name, 'Two');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nest'))!;\n\t\tassert.strictEqual(folder.name, 'Two');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested/file'))!;\n\t\tassert.strictEqual(folder.name, 'Nested');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested/f'))!;\n\t\tassert.strictEqual(folder.name, 'Nested');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested'), true)!;\n\t\tassert.strictEqual(folder.name, 'Two');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested/'), true)!;\n\t\tassert.strictEqual(folder.name, 'Two');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested'))!;\n\t\tassert.strictEqual(folder.name, 'Nested');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two/Nested/'))!;\n\t\tassert.strictEqual(folder.name, 'Nested');\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two'), true)!;\n\t\tassert.strictEqual(folder, undefined);\n\n\t\tfolder = ws.getWorkspaceFolder(URI.file('/Coding/Two'), false)!;\n\t\tassert.strictEqual(folder.name, 'Two');\n\t});\n\n\ttest('Multiroot change event should have a delta, #29641', function (done) {\n\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [] }, new NullLogService());\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: any) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t};\n\n\t\tlet sub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.added, []);\n\t\t\t\tassert.deepStrictEqual(e.removed, []);\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [] });\n\t\tsub.dispose();\n\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.removed, []);\n\t\t\t\tassert.strictEqual(e.added.length, 1);\n\t\t\t\tassert.strictEqual(e.added[0].uri.toString(), 'foo:bar');\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0)] });\n\t\tsub.dispose();\n\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.removed, []);\n\t\t\t\tassert.strictEqual(e.added.length, 1);\n\t\t\t\tassert.strictEqual(e.added[0].uri.toString(), 'foo:bar2');\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0), aWorkspaceFolderData(URI.parse('foo:bar2'), 1)] });\n\t\tsub.dispose();\n\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.strictEqual(e.removed.length, 2);\n\t\t\t\tassert.strictEqual(e.removed[0].uri.toString(), 'foo:bar');\n\t\t\t\tassert.strictEqual(e.removed[1].uri.toString(), 'foo:bar2');\n\n\t\t\t\tassert.strictEqual(e.added.length, 1);\n\t\t\t\tassert.strictEqual(e.added[0].uri.toString(), 'foo:bar3');\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar3'), 0)] });\n\t\tsub.dispose();\n\t\tfinish();\n\t});\n\n\ttest('Multiroot change keeps existing workspaces live', function () {\n\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0)] }, new NullLogService());\n\n\t\tlet firstFolder = ws.getWorkspaceFolders()![0];\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar2'), 0), aWorkspaceFolderData(URI.parse('foo:bar'), 1, 'renamed')] });\n\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], firstFolder);\n\t\tassert.strictEqual(firstFolder.index, 1);\n\t\tassert.strictEqual(firstFolder.name, 'renamed');\n\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar3'), 0), aWorkspaceFolderData(URI.parse('foo:bar2'), 1), aWorkspaceFolderData(URI.parse('foo:bar'), 2)] });\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![2], firstFolder);\n\t\tassert.strictEqual(firstFolder.index, 2);\n\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar3'), 0)] });\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar3'), 0), aWorkspaceFolderData(URI.parse('foo:bar'), 1)] });\n\n\t\tassert.notStrictEqual(firstFolder, ws.workspace!.folders[0]);\n\t});\n\n\ttest('updateWorkspaceFolders - invalid arguments', function () {\n\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [] }, new NullLogService());\n\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, null!, null!));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 0, 0));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 0, 1));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 1, 0));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, -1, 0));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, -1, -1));\n\n\t\tws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0)] }, new NullLogService());\n\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 1, 1));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 0, 2));\n\t\tassert.strictEqual(false, ws.updateWorkspaceFolders(extensionDescriptor, 0, 1, asUpdateWorkspaceFolderData(URI.parse('foo:bar'))));\n\t});\n\n\ttest('updateWorkspaceFolders - valid arguments', function (done) {\n\t\tlet finished = false;\n\t\tconst finish = (error?: any) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t};\n\n\t\tconst protocol: IMainContext = {\n\t\t\tgetProxy: () => { return undefined!; },\n\t\t\tset: () => { return undefined!; },\n\t\t\tassertRegistered: () => { },\n\t\t\tdrain: () => { return undefined!; },\n\t\t};\n\n\t\tconst ws = createExtHostWorkspace(protocol, { id: 'foo', name: 'Test', folders: [] }, new NullLogService());\n\n\t\t//\n\t\t// Add one folder\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 0, 0, asUpdateWorkspaceFolderData(URI.parse('foo:bar'))));\n\t\tassert.strictEqual(1, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar').toString());\n\n\t\tconst firstAddedFolder = ws.getWorkspaceFolders()![0];\n\n\t\tlet gotEvent = false;\n\t\tlet sub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.removed, []);\n\t\t\t\tassert.strictEqual(e.added.length, 1);\n\t\t\t\tassert.strictEqual(e.added[0].uri.toString(), 'foo:bar');\n\t\t\t\tassert.strictEqual(e.added[0], firstAddedFolder); // verify object is still live\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0)] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], firstAddedFolder); // verify object is still live\n\n\t\t//\n\t\t// Add two more folders\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 1, 0, asUpdateWorkspaceFolderData(URI.parse('foo:bar1')), asUpdateWorkspaceFolderData(URI.parse('foo:bar2'))));\n\t\tassert.strictEqual(3, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar1').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[2].uri.toString(), URI.parse('foo:bar2').toString());\n\n\t\tconst secondAddedFolder = ws.getWorkspaceFolders()![1];\n\t\tconst thirdAddedFolder = ws.getWorkspaceFolders()![2];\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.removed, []);\n\t\t\t\tassert.strictEqual(e.added.length, 2);\n\t\t\t\tassert.strictEqual(e.added[0].uri.toString(), 'foo:bar1');\n\t\t\t\tassert.strictEqual(e.added[1].uri.toString(), 'foo:bar2');\n\t\t\t\tassert.strictEqual(e.added[0], secondAddedFolder);\n\t\t\t\tassert.strictEqual(e.added[1], thirdAddedFolder);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0), aWorkspaceFolderData(URI.parse('foo:bar1'), 1), aWorkspaceFolderData(URI.parse('foo:bar2'), 2)] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], firstAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], secondAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![2], thirdAddedFolder); // verify object is still live\n\n\t\t//\n\t\t// Remove one folder\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 2, 1));\n\t\tassert.strictEqual(2, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar1').toString());\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.added, []);\n\t\t\t\tassert.strictEqual(e.removed.length, 1);\n\t\t\t\tassert.strictEqual(e.removed[0], thirdAddedFolder);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0), aWorkspaceFolderData(URI.parse('foo:bar1'), 1)] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], firstAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], secondAddedFolder); // verify object is still live\n\n\t\t//\n\t\t// Rename folder\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 0, 2, asUpdateWorkspaceFolderData(URI.parse('foo:bar'), 'renamed 1'), asUpdateWorkspaceFolderData(URI.parse('foo:bar1'), 'renamed 2')));\n\t\tassert.strictEqual(2, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar1').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[0].name, 'renamed 1');\n\t\tassert.strictEqual(ws.workspace!.folders[1].name, 'renamed 2');\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0].name, 'renamed 1');\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1].name, 'renamed 2');\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.deepStrictEqual(e.added, []);\n\t\t\t\tassert.strictEqual(e.removed.length, 0);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar'), 0, 'renamed 1'), aWorkspaceFolderData(URI.parse('foo:bar1'), 1, 'renamed 2')] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], firstAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], secondAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.workspace!.folders[0].name, 'renamed 1');\n\t\tassert.strictEqual(ws.workspace!.folders[1].name, 'renamed 2');\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0].name, 'renamed 1');\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1].name, 'renamed 2');\n\n\t\t//\n\t\t// Add and remove folders\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 0, 2, asUpdateWorkspaceFolderData(URI.parse('foo:bar3')), asUpdateWorkspaceFolderData(URI.parse('foo:bar4'))));\n\t\tassert.strictEqual(2, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar3').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar4').toString());\n\n\t\tconst fourthAddedFolder = ws.getWorkspaceFolders()![0];\n\t\tconst fifthAddedFolder = ws.getWorkspaceFolders()![1];\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.strictEqual(e.added.length, 2);\n\t\t\t\tassert.strictEqual(e.added[0], fourthAddedFolder);\n\t\t\t\tassert.strictEqual(e.added[1], fifthAddedFolder);\n\t\t\t\tassert.strictEqual(e.removed.length, 2);\n\t\t\t\tassert.strictEqual(e.removed[0], firstAddedFolder);\n\t\t\t\tassert.strictEqual(e.removed[1], secondAddedFolder);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar3'), 0), aWorkspaceFolderData(URI.parse('foo:bar4'), 1)] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], fourthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], fifthAddedFolder); // verify object is still live\n\n\t\t//\n\t\t// Swap folders\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 0, 2, asUpdateWorkspaceFolderData(URI.parse('foo:bar4')), asUpdateWorkspaceFolderData(URI.parse('foo:bar3'))));\n\t\tassert.strictEqual(2, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar4').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar3').toString());\n\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], fifthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], fourthAddedFolder); // verify object is still live\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.strictEqual(e.added.length, 0);\n\t\t\t\tassert.strictEqual(e.removed.length, 0);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [aWorkspaceFolderData(URI.parse('foo:bar4'), 0), aWorkspaceFolderData(URI.parse('foo:bar3'), 1)] }); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], fifthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], fourthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(fifthAddedFolder.index, 0);\n\t\tassert.strictEqual(fourthAddedFolder.index, 1);\n\n\t\t//\n\t\t// Add one folder after the other without waiting for confirmation (not supported currently)\n\t\t//\n\n\t\tassert.strictEqual(true, ws.updateWorkspaceFolders(extensionDescriptor, 2, 0, asUpdateWorkspaceFolderData(URI.parse('foo:bar5'))));\n\n\t\tassert.strictEqual(3, ws.workspace!.folders.length);\n\t\tassert.strictEqual(ws.workspace!.folders[0].uri.toString(), URI.parse('foo:bar4').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[1].uri.toString(), URI.parse('foo:bar3').toString());\n\t\tassert.strictEqual(ws.workspace!.folders[2].uri.toString(), URI.parse('foo:bar5').toString());\n\n\t\tconst sixthAddedFolder = ws.getWorkspaceFolders()![2];\n\n\t\tgotEvent = false;\n\t\tsub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.strictEqual(e.added.length, 1);\n\t\t\t\tassert.strictEqual(e.added[0], sixthAddedFolder);\n\t\t\t\tgotEvent = true;\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({\n\t\t\tid: 'foo', name: 'Test', folders: [\n\t\t\t\taWorkspaceFolderData(URI.parse('foo:bar4'), 0),\n\t\t\t\taWorkspaceFolderData(URI.parse('foo:bar3'), 1),\n\t\t\t\taWorkspaceFolderData(URI.parse('foo:bar5'), 2)\n\t\t\t]\n\t\t}); // simulate acknowledgement from main side\n\t\tassert.strictEqual(gotEvent, true);\n\t\tsub.dispose();\n\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![0], fifthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![1], fourthAddedFolder); // verify object is still live\n\t\tassert.strictEqual(ws.getWorkspaceFolders()![2], sixthAddedFolder); // verify object is still live\n\n\t\tfinish();\n\t});\n\n\ttest('Multiroot change event is immutable', function (done) {\n\t\tlet finished = false;\n\t\tconst finish = (error?: any) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t};\n\n\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), { id: 'foo', name: 'Test', folders: [] }, new NullLogService());\n\t\tlet sub = ws.onDidChangeWorkspace(e => {\n\t\t\ttry {\n\t\t\t\tassert.throws(() => {\n\t\t\t\t\t(<any>e).added = [];\n\t\t\t\t});\n\t\t\t\t// assert.throws(() => {\n\t\t\t\t// \t(<any>e.added)[0] = null;\n\t\t\t\t// });\n\t\t\t} catch (error) {\n\t\t\t\tfinish(error);\n\t\t\t}\n\t\t});\n\t\tws.$acceptWorkspaceData({ id: 'foo', name: 'Test', folders: [] });\n\t\tsub.dispose();\n\t\tfinish();\n\t});\n\n\ttest('`vscode.workspace.getWorkspaceFolder(file)` don\\'t return workspace folder when file open from command line. #36221', function () {\n\t\tif (isWindows) {\n\n\t\t\tlet ws = createExtHostWorkspace(new TestRPCProtocol(), {\n\t\t\t\tid: 'foo', name: 'Test', folders: [\n\t\t\t\t\taWorkspaceFolderData(URI.file('c:/Users/marek/Desktop/vsc_test/'), 0)\n\t\t\t\t]\n\t\t\t}, new NullLogService());\n\n\t\t\tassert.ok(ws.getWorkspaceFolder(URI.file('c:/Users/marek/Desktop/vsc_test/a.txt')));\n\t\t\tassert.ok(ws.getWorkspaceFolder(URI.file('C:/Users/marek/Desktop/vsc_test/b.txt')));\n\t\t}\n\t});\n\n\tfunction aWorkspaceFolderData(uri: URI, index: number, name: string = ''): IWorkspaceFolderData {\n\t\treturn {\n\t\t\turi,\n\t\t\tindex,\n\t\t\tname: name || basename(uri.path)\n\t\t};\n\t}\n\n\tfunction asUpdateWorkspaceFolderData(uri: URI, name?: string): { uri: URI, name?: string } {\n\t\treturn { uri, name };\n\t}\n\n\ttest('findFiles - string include', () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride $startFileSearch(includePattern: string, _includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false, maxResults: number, token: CancellationToken): Promise<URI[] | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(includePattern, 'foo');\n\t\t\t\tassert.strictEqual(_includeFolder, null);\n\t\t\t\tassert.strictEqual(excludePatternOrDisregardExcludes, null);\n\t\t\t\tassert.strictEqual(maxResults, 10);\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\treturn ws.findFiles('foo', undefined, 10, new ExtensionIdentifier('test')).then(() => {\n\t\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t\t});\n\t});\n\n\tfunction testFindFilesInclude(pattern: RelativePattern) {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride $startFileSearch(includePattern: string, _includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false, maxResults: number, token: CancellationToken): Promise<URI[] | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(includePattern, 'glob/**');\n\t\t\t\tassert.deepStrictEqual(_includeFolder ? URI.from(_includeFolder).toJSON() : null, URI.file('/other/folder').toJSON());\n\t\t\t\tassert.strictEqual(excludePatternOrDisregardExcludes, null);\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\treturn ws.findFiles(pattern, undefined, 10, new ExtensionIdentifier('test')).then(() => {\n\t\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t\t});\n\t}\n\n\ttest('findFiles - RelativePattern include (string)', () => {\n\t\treturn testFindFilesInclude(new RelativePattern('/other/folder', 'glob/**'));\n\t});\n\n\ttest('findFiles - RelativePattern include (URI)', () => {\n\t\treturn testFindFilesInclude(new RelativePattern(URI.file('/other/folder'), 'glob/**'));\n\t});\n\n\ttest('findFiles - no excludes', () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride $startFileSearch(includePattern: string, _includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false, maxResults: number, token: CancellationToken): Promise<URI[] | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(includePattern, 'glob/**');\n\t\t\t\tassert.deepStrictEqual(_includeFolder, URI.file('/other/folder').toJSON());\n\t\t\t\tassert.strictEqual(excludePatternOrDisregardExcludes, false);\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\treturn ws.findFiles(new RelativePattern('/other/folder', 'glob/**'), null!, 10, new ExtensionIdentifier('test')).then(() => {\n\t\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t\t});\n\t});\n\n\ttest('findFiles - with cancelled token', () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride $startFileSearch(includePattern: string, _includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false, maxResults: number, token: CancellationToken): Promise<URI[] | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\n\t\tconst token = CancellationToken.Cancelled;\n\t\treturn ws.findFiles(new RelativePattern('/other/folder', 'glob/**'), null!, 10, new ExtensionIdentifier('test'), token).then(() => {\n\t\t\tassert(!mainThreadCalled, '!mainThreadCalled');\n\t\t});\n\t});\n\n\ttest('findFiles - RelativePattern exclude', () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride $startFileSearch(includePattern: string, _includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false, maxResults: number, token: CancellationToken): Promise<URI[] | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert(excludePatternOrDisregardExcludes, 'glob/**'); // Note that the base portion is ignored, see #52651\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\treturn ws.findFiles('', new RelativePattern(root, 'glob/**'), 10, new ExtensionIdentifier('test')).then(() => {\n\t\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t\t});\n\t});\n\n\ttest('findTextInFiles - no include', async () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride async $startTextSearch(query: IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(query.pattern, 'foo');\n\t\t\t\tassert.strictEqual(folder, null);\n\t\t\t\tassert.strictEqual(options.includePattern, undefined);\n\t\t\t\tassert.strictEqual(options.excludePattern, undefined);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\tawait ws.findTextInFiles({ pattern: 'foo' }, {}, () => { }, new ExtensionIdentifier('test'));\n\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t});\n\n\ttest('findTextInFiles - string include', async () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride async $startTextSearch(query: IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(query.pattern, 'foo');\n\t\t\t\tassert.strictEqual(folder, null);\n\t\t\t\tassert.strictEqual(options.includePattern, '**/files');\n\t\t\t\tassert.strictEqual(options.excludePattern, undefined);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\tawait ws.findTextInFiles({ pattern: 'foo' }, { include: '**/files' }, () => { }, new ExtensionIdentifier('test'));\n\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t});\n\n\ttest('findTextInFiles - RelativePattern include', async () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride async $startTextSearch(query: IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(query.pattern, 'foo');\n\t\t\t\tassert.deepStrictEqual(folder, URI.file('/other/folder').toJSON());\n\t\t\t\tassert.strictEqual(options.includePattern, 'glob/**');\n\t\t\t\tassert.strictEqual(options.excludePattern, undefined);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\tawait ws.findTextInFiles({ pattern: 'foo' }, { include: new RelativePattern('/other/folder', 'glob/**') }, () => { }, new ExtensionIdentifier('test'));\n\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t});\n\n\ttest('findTextInFiles - with cancelled token', async () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride async $startTextSearch(query: IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\tconst token = CancellationToken.Cancelled;\n\t\tawait ws.findTextInFiles({ pattern: 'foo' }, {}, () => { }, new ExtensionIdentifier('test'), token);\n\t\tassert(!mainThreadCalled, '!mainThreadCalled');\n\t});\n\n\ttest('findTextInFiles - RelativePattern exclude', async () => {\n\t\tconst root = '/project/foo';\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\n\t\tlet mainThreadCalled = false;\n\t\trpcProtocol.set(MainContext.MainThreadWorkspace, new class extends mock<MainThreadWorkspace>() {\n\t\t\toverride async $startTextSearch(query: IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\t\t\tmainThreadCalled = true;\n\t\t\t\tassert.strictEqual(query.pattern, 'foo');\n\t\t\t\tassert.deepStrictEqual(folder, null);\n\t\t\t\tassert.strictEqual(options.includePattern, undefined);\n\t\t\t\tassert.strictEqual(options.excludePattern, 'glob/**'); // exclude folder is ignored...\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tconst ws = createExtHostWorkspace(rpcProtocol, { id: 'foo', folders: [aWorkspaceFolderData(URI.file(root), 0)], name: 'Test' }, new NullLogService());\n\t\tawait ws.findTextInFiles({ pattern: 'foo' }, { exclude: new RelativePattern('/other/folder', 'glob/**') }, () => { }, new ExtensionIdentifier('test'));\n\t\tassert(mainThreadCalled, 'mainThreadCalled');\n\t});\n});\n"]}