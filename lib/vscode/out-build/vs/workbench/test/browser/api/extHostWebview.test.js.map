{"version":3,"file":"extHostWebview.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/api/extHostWebview.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { MainThreadWebviewManager } from 'vs/workbench/api/browser/mainThreadWebviewManager';\nimport { IExtHostContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { NullApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtHostWebviews } from 'vs/workbench/api/common/extHostWebview';\nimport { ExtHostWebviewPanels } from 'vs/workbench/api/common/extHostWebviewPanels';\nimport { EditorGroupColumn } from 'vs/workbench/common/editor';\nimport type * as vscode from 'vscode';\nimport { SingleProxyRPCProtocol } from './testRPCProtocol';\n\nsuite('ExtHostWebview', () => {\n\n\tlet rpcProtocol: (IExtHostRpcService & IExtHostContext) | undefined;\n\n\tsetup(() => {\n\t\tconst shape = createNoopMainThreadWebviews();\n\t\trpcProtocol = SingleProxyRPCProtocol(shape);\n\t});\n\n\ttest('Cannot register multiple serializers for the same view type', async () => {\n\t\tconst viewType = 'view.type';\n\n\t\tconst extHostWebviews = new ExtHostWebviews(rpcProtocol!, {\n\t\t\twebviewCspSource: '',\n\t\t\twebviewResourceRoot: '',\n\t\t\tisExtensionDevelopmentDebug: false,\n\t\t}, undefined, new NullLogService(), NullApiDeprecationService);\n\n\t\tconst extHostWebviewPanels = new ExtHostWebviewPanels(rpcProtocol!, extHostWebviews, undefined);\n\n\t\tlet lastInvokedDeserializer: vscode.WebviewPanelSerializer | undefined = undefined;\n\n\t\tclass NoopSerializer implements vscode.WebviewPanelSerializer {\n\t\t\tasync deserializeWebviewPanel(_webview: vscode.WebviewPanel, _state: any): Promise<void> {\n\t\t\t\tlastInvokedDeserializer = this;\n\t\t\t}\n\t\t}\n\n\t\tconst extension = {} as IExtensionDescription;\n\n\t\tconst serializerA = new NoopSerializer();\n\t\tconst serializerB = new NoopSerializer();\n\n\t\tconst serializerARegistration = extHostWebviewPanels.registerWebviewPanelSerializer(extension, viewType, serializerA);\n\n\t\tawait extHostWebviewPanels.$deserializeWebviewPanel('x', viewType, {\n\t\t\ttitle: 'title',\n\t\t\tstate: {},\n\t\t\tpanelOptions: {},\n\t\t\twebviewOptions: {}\n\t\t}, 0 as EditorGroupColumn);\n\t\tassert.strictEqual(lastInvokedDeserializer, serializerA);\n\n\t\tassert.throws(\n\t\t\t() => extHostWebviewPanels.registerWebviewPanelSerializer(extension, viewType, serializerB),\n\t\t\t'Should throw when registering two serializers for the same view');\n\n\t\tserializerARegistration.dispose();\n\n\t\textHostWebviewPanels.registerWebviewPanelSerializer(extension, viewType, serializerB);\n\n\t\tawait extHostWebviewPanels.$deserializeWebviewPanel('x', viewType, {\n\t\t\ttitle: 'title',\n\t\t\tstate: {},\n\t\t\tpanelOptions: {},\n\t\t\twebviewOptions: {}\n\t\t}, 0 as EditorGroupColumn);\n\t\tassert.strictEqual(lastInvokedDeserializer, serializerB);\n\t});\n\n\ttest('asWebviewUri for desktop vscode-resource scheme', () => {\n\t\tconst extHostWebviews = new ExtHostWebviews(rpcProtocol!, {\n\t\t\twebviewCspSource: '',\n\t\t\twebviewResourceRoot: 'vscode-resource://{{resource}}',\n\t\t\tisExtensionDevelopmentDebug: false,\n\t\t}, undefined, new NullLogService(), NullApiDeprecationService);\n\n\t\tconst extHostWebviewPanels = new ExtHostWebviewPanels(rpcProtocol!, extHostWebviews, undefined);\n\n\t\tconst webview = extHostWebviewPanels.createWebviewPanel({} as any, 'type', 'title', 1, {});\n\n\t\tassert.strictEqual(\n\t\t\twebview.webview.asWebviewUri(URI.parse('file:///Users/codey/file.html')).toString(),\n\t\t\t'vscode-resource://file///Users/codey/file.html',\n\t\t\t'Unix basic'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\twebview.webview.asWebviewUri(URI.parse('file:///Users/codey/file.html#frag')).toString(),\n\t\t\t'vscode-resource://file///Users/codey/file.html#frag',\n\t\t\t'Unix should preserve fragment'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\twebview.webview.asWebviewUri(URI.parse('file:///Users/codey/f%20ile.html')).toString(),\n\t\t\t'vscode-resource://file///Users/codey/f%20ile.html',\n\t\t\t'Unix with encoding'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\twebview.webview.asWebviewUri(URI.parse('file://localhost/Users/codey/file.html')).toString(),\n\t\t\t'vscode-resource://file//localhost/Users/codey/file.html',\n\t\t\t'Unix should preserve authority'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\twebview.webview.asWebviewUri(URI.parse('file:///c:/codey/file.txt')).toString(),\n\t\t\t'vscode-resource://file///c%3A/codey/file.txt',\n\t\t\t'Windows C drive'\n\t\t);\n\t});\n\n\ttest('asWebviewUri for web endpoint', () => {\n\t\tconst extHostWebviews = new ExtHostWebviews(rpcProtocol!, {\n\t\t\twebviewCspSource: '',\n\t\t\twebviewResourceRoot: `https://{{uuid}}.webview.contoso.com/commit/{{resource}}`,\n\t\t\tisExtensionDevelopmentDebug: false,\n\t\t}, undefined, new NullLogService(), NullApiDeprecationService);\n\n\t\tconst extHostWebviewPanels = new ExtHostWebviewPanels(rpcProtocol!, extHostWebviews, undefined);\n\n\t\tconst webview = extHostWebviewPanels.createWebviewPanel({} as any, 'type', 'title', 1, {});\n\n\t\tfunction stripEndpointUuid(input: string) {\n\t\t\treturn input.replace(/^https:\\/\\/[^\\.]+?\\./, '');\n\t\t}\n\n\t\tassert.strictEqual(\n\t\t\tstripEndpointUuid(webview.webview.asWebviewUri(URI.parse('file:///Users/codey/file.html')).toString()),\n\t\t\t'webview.contoso.com/commit/file///Users/codey/file.html',\n\t\t\t'Unix basic'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\tstripEndpointUuid(webview.webview.asWebviewUri(URI.parse('file:///Users/codey/file.html#frag')).toString()),\n\t\t\t'webview.contoso.com/commit/file///Users/codey/file.html#frag',\n\t\t\t'Unix should preserve fragment'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\tstripEndpointUuid(webview.webview.asWebviewUri(URI.parse('file:///Users/codey/f%20ile.html')).toString()),\n\t\t\t'webview.contoso.com/commit/file///Users/codey/f%20ile.html',\n\t\t\t'Unix with encoding'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\tstripEndpointUuid(webview.webview.asWebviewUri(URI.parse('file://localhost/Users/codey/file.html')).toString()),\n\t\t\t'webview.contoso.com/commit/file//localhost/Users/codey/file.html',\n\t\t\t'Unix should preserve authority'\n\t\t);\n\n\t\tassert.strictEqual(\n\t\t\tstripEndpointUuid(webview.webview.asWebviewUri(URI.parse('file:///c:/codey/file.txt')).toString()),\n\t\t\t'webview.contoso.com/commit/file///c%3A/codey/file.txt',\n\t\t\t'Windows C drive'\n\t\t);\n\t});\n});\n\n\nfunction createNoopMainThreadWebviews() {\n\treturn new class extends mock<MainThreadWebviewManager>() {\n\t\t$createWebviewPanel() { /* noop */ }\n\t\t$registerSerializer() { /* noop */ }\n\t\t$unregisterSerializer() { /* noop */ }\n\t};\n}\n\n"]}