{"version":3,"file":"extHostDocumentsAndEditors.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/api/extHostDocumentsAndEditors.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAQhG,KAAK,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAExC,IAAI,OAAmC,CAAC;QAExC,KAAK,CAAC;YACL,OAAO,GAAG,IAAI,uDAA0B,CAAC,IAAI,iCAAe,EAAE,EAAE,IAAI,oBAAc,EAAE,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wFAAwF,EAAE,GAAG,EAAE;YAEnG,OAAO,CAAC,+BAA+B,CAAC;gBACvC,cAAc,EAAE,CAAC;wBAChB,GAAG,EAAE,IAAI;wBACT,OAAO,EAAE,IAAI;wBACb,MAAM,EAAE,SAAS;wBACjB,GAAG,EAAE,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC;wBACzB,SAAS,EAAE,CAAC;wBACZ,KAAK,EAAE;4BACN,OAAO;4BACP,QAAQ;yBACR;qBACD,CAAC;aACF,CAAC,CAAC;YAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAEtC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;oBAChC,IAAI;wBAEH,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE;4BACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;yBACjD;wBACD,OAAO,CAAC,SAAS,CAAC,CAAC;qBACnB;oBAAC,OAAO,CAAC,EAAE;wBACX,MAAM,CAAC,CAAC,CAAC,CAAC;qBACV;gBACF,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,+BAA+B,CAAC;oBACvC,gBAAgB,EAAE,CAAC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBACxC,CAAC,CAAC;YAEJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { TestRPCProtocol } from 'vs/workbench/test/browser/api/testRPCProtocol';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nsuite('ExtHostDocumentsAndEditors', () => {\n\n\tlet editors: ExtHostDocumentsAndEditors;\n\n\tsetup(function () {\n\t\teditors = new ExtHostDocumentsAndEditors(new TestRPCProtocol(), new NullLogService());\n\t});\n\n\ttest('The value of TextDocument.isClosed is incorrect when a text document is closed, #27949', () => {\n\n\t\teditors.$acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\tEOL: '\\n',\n\t\t\t\tisDirty: true,\n\t\t\t\tmodeId: 'fooLang',\n\t\t\t\turi: URI.parse('foo:bar'),\n\t\t\t\tversionId: 1,\n\t\t\t\tlines: [\n\t\t\t\t\t'first',\n\t\t\t\t\t'second'\n\t\t\t\t]\n\t\t\t}]\n\t\t});\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\teditors.onDidRemoveDocuments(e => {\n\t\t\t\ttry {\n\n\t\t\t\t\tfor (const data of e) {\n\t\t\t\t\t\tassert.strictEqual(data.document.isClosed, true);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\teditors.$acceptDocumentsAndEditorsDelta({\n\t\t\t\tremovedDocuments: [URI.parse('foo:bar')]\n\t\t\t});\n\n\t\t});\n\t});\n\n});\n"]}