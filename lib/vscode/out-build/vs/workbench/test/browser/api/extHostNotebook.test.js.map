{"version":3,"file":"extHostNotebook.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/api/extHostNotebook.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAsBhG,KAAK,CAAC,uBAAuB,EAAE;QAG9B,IAAI,WAA4B,CAAC;QACjC,IAAI,QAAiC,CAAC;QACtC,IAAI,0BAAsD,CAAC;QAC3D,IAAI,gBAAkC,CAAC;QACvC,IAAI,gBAA2C,CAAC;QAChD,MAAM,WAAW,GAAG,SAAG,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,QAAQ,CAAC;YACR,WAAW,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,KAAK;YACV,WAAW,GAAG,IAAI,iCAAe,EAAE,CAAC;YACpC,WAAW,CAAC,GAAG,CAAC,8BAAW,CAAC,kBAAkB,EAAE,IAAI,KAAM,SAAQ,CAAA,GAAA,WAAI,CAAA,EAA2B;gBACvF,gBAAgB,KAAK,CAAC;aAC/B,CAAC,CAAC;YACH,WAAW,CAAC,GAAG,CAAC,8BAAW,CAAC,kBAAkB,EAAE,IAAI,KAAM,SAAQ,CAAA,GAAA,WAAI,CAAA,EAA2B;gBACvF,KAAK,CAAC,yBAAyB,KAAK,CAAC;gBACrC,KAAK,CAAC,2BAA2B,KAAK,CAAC;aAChD,CAAC,CAAC;YACH,0BAA0B,GAAG,IAAI,uDAA0B,CAAC,WAAW,EAAE,IAAI,oBAAc,EAAE,CAAC,CAAC;YAC/F,gBAAgB,GAAG,IAAI,mCAAgB,CAAC,WAAW,EAAE,0BAA0B,CAAC,CAAC;YACjF,MAAM,mBAAmB,GAAG,IAAI,KAAM,SAAQ,CAAA,GAAA,WAAI,CAAA,EAA0B;gBAClE,cAAc;oBACtB,OAAO,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA,GAAA,mBAAY,CAAA,EAAE,EAAE,CAAC,CAAC;gBAC3D,CAAC;aACD,CAAC;YACF,gBAAgB,GAAG,IAAI,2CAAyB,CAAC,WAAW,EAAE,IAAI,iCAAe,CAAC,WAAW,EAAE,IAAI,oBAAc,EAAE,CAAC,EAAE,0BAA0B,EAAE,gBAAgB,EAAE,IAAI,oBAAc,EAAE,EAAE,mBAAmB,CAAC,CAAC;YAC/M,IAAI,GAAG,GAAG,gBAAgB,CAAC,+BAA+B,CAAC,qCAAwB,EAAE,MAAM,EAAE,IAAI,KAAM,SAAQ,CAAA,GAAA,WAAI,CAAA,EAAkC;aAEpJ,CAAC,CAAC;YACH,gBAAgB,CAAC,8BAA8B,CAAC;gBAC/C,cAAc,EAAE,CAAC;wBAChB,GAAG,EAAE,WAAW;wBAChB,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE,CAAC;wBACZ,KAAK,EAAE,CAAC;gCACP,MAAM,EAAE,CAAC;gCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;gCACrC,MAAM,EAAE,CAAC,aAAa,CAAC;gCACvB,GAAG,EAAE,IAAI;gCACT,QAAQ,EAAE,UAAU;gCACpB,QAAQ,EAAE,yBAAQ,CAAC,QAAQ;gCAC3B,OAAO,EAAE,EAAE;6BACX,EAAE;gCACF,MAAM,EAAE,CAAC;gCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;gCACrC,MAAM,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;gCACpD,GAAG,EAAE,IAAI;gCACT,QAAQ,EAAE,YAAY;gCACtB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;gCACvB,OAAO,EAAE,EAAE;6BACX,CAAC;qBACF,CAAC;gBACF,YAAY,EAAE,CAAC;wBACd,WAAW,EAAE,WAAW;wBACxB,EAAE,EAAE,oBAAoB;wBACxB,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;wBAClC,aAAa,EAAE,EAAE;qBACjB,CAAC;aACF,CAAC,CAAC;YACH,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,eAAe,EAAE,oBAAoB,EAAE,CAAC,CAAC;YAE3F,QAAQ,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAE,CAAC;YAElD,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1B,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,sCAAsC,EAAE,KAAK;YAEjD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAEtD,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YACjD,MAAM,EAAE,GAAG,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAEzD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,KAAK,QAAQ,CAAC,WAAW,CAAC,CAAC;YAEhD,MAAM,EAAE,GAAG,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACzD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,KAAK,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK;YACpD,MAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;gBACjD,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC5C;YAED,MAAM,eAAe,GAAa,EAAE,CAAC;YACrC,MAAM,GAAG,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE;gBACtD,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACtF,GAAG,CAAC,OAAO,EAAE,CAAC;YAEd,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE,KAAK;YAEnE,MAAM,CAAC,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC/C,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE;oBAC7C,IAAI;wBACH,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACxC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAEjD,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBAE3C,MAAM,IAAI,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;wBAChH,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;wBAChB,MAAM,CAAC,WAAW,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,MAAK,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;wBAE5D,MAAM,IAAI,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;wBACjH,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;wBAChB,MAAM,CAAC,WAAW,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,MAAK,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;wBAE7D,OAAO,EAAE,CAAC;qBAEV;oBAAC,OAAO,GAAG,EAAE;wBACb,MAAM,CAAC,GAAG,CAAC,CAAC;qBACZ;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,gBAAgB,CAAC,mBAAmB,CAAC,WAAW,EAAE;gBACjD,SAAS,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC;gBAC3C,SAAS,EAAE;oBACV;wBACC,IAAI,EAAE,wCAAuB,CAAC,WAAW;wBACzC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;wCACjB,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC;wCAC1C,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,MAAM;wCAChB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;wCACvB,OAAO,EAAE,EAAE;qCACX,EAAE;wCACF,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC;wCACxC,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,MAAM;wCAChB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;wCACvB,OAAO,EAAE,EAAE;qCACX,CAAC,CAAC,CAAC;qBACJ;iBACD;aACD,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sDAAsD,EAAE,KAAK;YAEjE,MAAM,IAAI,GAA0B,EAAE,CAAC;YACvC,MAAM,OAAO,GAAsB,EAAE,CAAC;YACtC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;gBACjD,MAAM,GAAG,GAAG,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC5D,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,OAAO,CAAC,IAAI,CAAC;oBACZ,GAAG,EAAE,IAAI;oBACT,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;oBAChC,MAAM,EAAE,GAAG,CAAC,UAAU;oBACtB,GAAG,EAAE,GAAG,CAAC,GAAG;oBACZ,SAAS,EAAE,GAAG,CAAC,OAAO;iBACtB,CAAC,CAAC;aACH;YAED,6DAA6D;YAC7D,0BAA0B,CAAC,+BAA+B,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC;YAExF,+DAA+D;YAC/D,0BAA0B,CAAC,+BAA+B,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAEvG,qDAAqD;YACrD,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;gBACjD,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3D,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aACpF;YAED,oCAAoC;YACpC,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACtF,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;gBACjD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;aACrE;YACD,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;gBACrB,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aACvC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK;YAEpD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAEvD,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClD,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE;oBACV;wBACC,IAAI,EAAE,wCAAuB,CAAC,WAAW;wBACzC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;qBACrB;iBACD;aACD,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,mBAAmB;YACtE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEnD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE;YACpC,KAAK,IAAI,KAAK,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;gBAClD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC3E;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE;YAElB,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEpC,oBAAoB;YACpB,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClD,SAAS,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC;gBAC3C,SAAS,EAAE,CAAC;wBACX,IAAI,EAAE,wCAAuB,CAAC,WAAW;wBACzC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;qBACrB,CAAC;aACF,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEpC,gBAAgB,CAAC,mBAAmB,CAAC,WAAW,EAAE;gBACjD,SAAS,EAAE,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC;gBAC3C,SAAS,EAAE,CAAC;wBACX,IAAI,EAAE,wCAAuB,CAAC,WAAW;wBACzC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;wCACjB,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC;wCAC1C,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,MAAM;wCAChB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;wCACvB,OAAO,EAAE,EAAE;qCACX,EAAE;wCACF,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC;wCACxC,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,MAAM;wCAChB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;wCACvB,OAAO,EAAE,EAAE;qCACX,CAAC,CAAC,CAAC;qBACJ,CAAC;aACF,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE,KAAK;YAEnE,MAAM,CAAC,GAAG,aAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;YAErE,0EAA0E;YAC1E,8DAA8D;YAE9D,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClD,SAAS,EAAE,GAAG;gBACd,SAAS,EAAE,CAAC;wBACX,IAAI,EAAE,wCAAuB,CAAC,WAAW;wBACzC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;wCACjB,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,aAAa,CAAC;wCACvB,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,UAAU;wCACpB,QAAQ,EAAE,yBAAQ,CAAC,QAAQ;wCAC3B,OAAO,EAAE,EAAE;qCACX,EAAE;wCACF,MAAM,EAAE,CAAC;wCACT,GAAG,EAAE,wBAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wCACrC,MAAM,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;wCACpD,GAAG,EAAE,IAAI;wCACT,QAAQ,EAAE,YAAY;wCACtB,QAAQ,EAAE,yBAAQ,CAAC,IAAI;wCACvB,OAAO,EAAE,EAAE;qCACX,CAAC,CAAC,CAAC;qBACJ,CAAC;aACF,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAEtD,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC;YAEtB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC7E,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC7E,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACvE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,sGAAsG,EAAE;YAC5G,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,gBAAgB,CAAC,+BAA+B,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAEnE,gBAAgB,CAAC,8BAA8B,CAAC;gBAC/C,YAAY,EAAE,CAAC;wBACd,WAAW,EAAE,WAAW;wBACxB,EAAE,EAAE,oBAAoB;wBACxB,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;wBAClC,aAAa,EAAE,EAAE;qBACjB,CAAC;aACF,CAAC,CAAC;YAEH,gBAAgB,CAAC,8BAA8B,CAAC;gBAC/C,eAAe,EAAE,oBAAoB;aACrC,CAAC,CAAC;YAEH,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE;YAEpC,MAAM,MAAM,GAAG,gBAAgB,CAAC,oBAAoB,CAAC;YACrD,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC;YAEhC,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC;YAChF,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,oBAAoB,KAAK,MAAM,CAAC,CAAC;YAE5D,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC;YACpD,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,oBAAoB,KAAK,MAAM,CAAC,CAAC;YAE5D,gBAAgB,CAAC,8BAA8B,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3E,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,oBAAoB,KAAK,SAAS,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,KAAK;YAE7D,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE7C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAE1D,MAAM,OAAO,GAAG,aAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;YACtE,MAAM,KAAK,GAAG,aAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;YAEjE,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClD,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;wBAC1B,IAAI,EAAE,wCAAuB,CAAC,cAAc;wBAC5C,KAAK,EAAE,CAAC;wBACR,QAAQ,EAAE,SAAS;qBACnB,CAAC;aACF,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC;YACjC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC;YAE7B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,EAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wEAAwE,EAAE,KAAK;;YACnF,IAAI,0BAA0B,GAAG,KAAK,CAAC;YACvC,IAAI,CAAC,GAAG,gBAAgB,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBACrD,0BAA0B,GAAG,IAAI,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,MAAM,cAAc,GAAG,aAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,qCAAqC,CAAC,CAAC;YAE/F,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAClD,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;wBAC1B,IAAI,EAAE,wCAAuB,CAAC,kBAAkB;wBAChD,KAAK,EAAE,CAAC;wBACR,QAAQ,kCACJ,MAAA,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,0CAAE,gBAAgB,GAC9C;4BACF,QAAQ,EAAE,2CAA0B,CAAC,SAAS;yBAC9C,CACD;qBACD,CAAC;aACF,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,cAAc,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACtD,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as vscode from 'vscode';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { TestRPCProtocol } from 'vs/workbench/test/browser/api/testRPCProtocol';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { mock } from 'vs/base/test/common/mock';\nimport { IModelAddedData, MainContext, MainThreadCommandsShape, MainThreadNotebookShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { ExtHostNotebookDocument } from 'vs/workbench/api/common/extHostNotebookDocument';\nimport { CellKind, CellUri, NotebookCellExecutionState, NotebookCellsChangeType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Event } from 'vs/base/common/event';\n\nsuite('NotebookCell#Document', function () {\n\n\n\tlet rpcProtocol: TestRPCProtocol;\n\tlet notebook: ExtHostNotebookDocument;\n\tlet extHostDocumentsAndEditors: ExtHostDocumentsAndEditors;\n\tlet extHostDocuments: ExtHostDocuments;\n\tlet extHostNotebooks: ExtHostNotebookController;\n\tconst notebookUri = URI.parse('test:///notebook.file');\n\tconst disposables = new DisposableStore();\n\n\tteardown(function () {\n\t\tdisposables.clear();\n\t});\n\n\tsetup(async function () {\n\t\trpcProtocol = new TestRPCProtocol();\n\t\trpcProtocol.set(MainContext.MainThreadCommands, new class extends mock<MainThreadCommandsShape>() {\n\t\t\toverride $registerCommand() { }\n\t\t});\n\t\trpcProtocol.set(MainContext.MainThreadNotebook, new class extends mock<MainThreadNotebookShape>() {\n\t\t\toverride async $registerNotebookProvider() { }\n\t\t\toverride async $unregisterNotebookProvider() { }\n\t\t});\n\t\textHostDocumentsAndEditors = new ExtHostDocumentsAndEditors(rpcProtocol, new NullLogService());\n\t\textHostDocuments = new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors);\n\t\tconst extHostStoragePaths = new class extends mock<IExtensionStoragePaths>() {\n\t\t\toverride workspaceValue() {\n\t\t\t\treturn URI.from({ scheme: 'test', path: generateUuid() });\n\t\t\t}\n\t\t};\n\t\textHostNotebooks = new ExtHostNotebookController(rpcProtocol, new ExtHostCommands(rpcProtocol, new NullLogService()), extHostDocumentsAndEditors, extHostDocuments, new NullLogService(), extHostStoragePaths);\n\t\tlet reg = extHostNotebooks.registerNotebookContentProvider(nullExtensionDescription, 'test', new class extends mock<vscode.NotebookContentProvider>() {\n\t\t\t// async openNotebook() { }\n\t\t});\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\turi: notebookUri,\n\t\t\t\tviewType: 'test',\n\t\t\t\tversionId: 0,\n\t\t\t\tcells: [{\n\t\t\t\t\thandle: 0,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 0),\n\t\t\t\t\tsource: ['### Heading'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'markdown',\n\t\t\t\t\tcellKind: CellKind.Markdown,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 1,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 1),\n\t\t\t\t\tsource: ['console.log(\"aaa\")', 'console.log(\"bbb\")'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'javascript',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}],\n\t\t\t}],\n\t\t\taddedEditors: [{\n\t\t\t\tdocumentUri: notebookUri,\n\t\t\t\tid: '_notebook_editor_0',\n\t\t\t\tselections: [{ start: 0, end: 1 }],\n\t\t\t\tvisibleRanges: []\n\t\t\t}]\n\t\t});\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({ newActiveEditor: '_notebook_editor_0' });\n\n\t\tnotebook = extHostNotebooks.notebookDocuments[0]!;\n\n\t\tdisposables.add(reg);\n\t\tdisposables.add(notebook);\n\t\tdisposables.add(extHostDocuments);\n\t});\n\n\n\ttest('cell document is vscode.TextDocument', async function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\n\t\tconst [c1, c2] = notebook.apiNotebook.getCells();\n\t\tconst d1 = extHostDocuments.getDocument(c1.document.uri);\n\n\t\tassert.ok(d1);\n\t\tassert.strictEqual(d1.languageId, c1.document.languageId);\n\t\tassert.strictEqual(d1.version, 1);\n\t\tassert.ok(d1.notebook === notebook.apiNotebook);\n\n\t\tconst d2 = extHostDocuments.getDocument(c2.document.uri);\n\t\tassert.ok(d2);\n\t\tassert.strictEqual(d2.languageId, c2.document.languageId);\n\t\tassert.strictEqual(d2.version, 1);\n\t\tassert.ok(d2.notebook === notebook.apiNotebook);\n\t});\n\n\ttest('cell document goes when notebook closes', async function () {\n\t\tconst cellUris: string[] = [];\n\t\tfor (let cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.ok(extHostDocuments.getDocument(cell.document.uri));\n\t\t\tcellUris.push(cell.document.uri.toString());\n\t\t}\n\n\t\tconst removedCellUris: string[] = [];\n\t\tconst reg = extHostDocuments.onDidRemoveDocument(doc => {\n\t\t\tremovedCellUris.push(doc.uri.toString());\n\t\t});\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({ removedDocuments: [notebook.uri] });\n\t\treg.dispose();\n\n\t\tassert.strictEqual(removedCellUris.length, 2);\n\t\tassert.deepStrictEqual(removedCellUris.sort(), cellUris.sort());\n\t});\n\n\ttest('cell document is vscode.TextDocument after changing it', async function () {\n\n\t\tconst p = new Promise<void>((resolve, reject) => {\n\t\t\textHostNotebooks.onDidChangeNotebookCells(e => {\n\t\t\t\ttry {\n\t\t\t\t\tassert.strictEqual(e.changes.length, 1);\n\t\t\t\t\tassert.strictEqual(e.changes[0].items.length, 2);\n\n\t\t\t\t\tconst [first, second] = e.changes[0].items;\n\n\t\t\t\t\tconst doc1 = extHostDocuments.getAllDocumentData().find(data => isEqual(data.document.uri, first.document.uri));\n\t\t\t\t\tassert.ok(doc1);\n\t\t\t\t\tassert.strictEqual(doc1?.document === first.document, true);\n\n\t\t\t\t\tconst doc2 = extHostDocuments.getAllDocumentData().find(data => isEqual(data.document.uri, second.document.uri));\n\t\t\t\t\tassert.ok(doc2);\n\t\t\t\t\tassert.strictEqual(doc2?.document === second.document, true);\n\n\t\t\t\t\tresolve();\n\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\textHostNotebooks.$acceptModelChanged(notebookUri, {\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges: [[0, 0, [{\n\t\t\t\t\t\thandle: 2,\n\t\t\t\t\t\turi: CellUri.generate(notebookUri, 2),\n\t\t\t\t\t\tsource: ['Hello', 'World', 'Hello World!'],\n\t\t\t\t\t\teol: '\\n',\n\t\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t}, {\n\t\t\t\t\t\thandle: 3,\n\t\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\t\tsource: ['Hallo', 'Welt', 'Hallo Welt!'],\n\t\t\t\t\t\teol: '\\n',\n\t\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t}]]]\n\t\t\t\t}\n\t\t\t]\n\t\t}, false);\n\n\t\tawait p;\n\n\t});\n\n\ttest('cell document stays open when notebook is still open', async function () {\n\n\t\tconst docs: vscode.TextDocument[] = [];\n\t\tconst addData: IModelAddedData[] = [];\n\t\tfor (let cell of notebook.apiNotebook.getCells()) {\n\t\t\tconst doc = extHostDocuments.getDocument(cell.document.uri);\n\t\t\tassert.ok(doc);\n\t\t\tassert.strictEqual(extHostDocuments.getDocument(cell.document.uri).isClosed, false);\n\t\t\tdocs.push(doc);\n\t\t\taddData.push({\n\t\t\t\tEOL: '\\n',\n\t\t\t\tisDirty: doc.isDirty,\n\t\t\t\tlines: doc.getText().split('\\n'),\n\t\t\t\tmodeId: doc.languageId,\n\t\t\t\turi: doc.uri,\n\t\t\t\tversionId: doc.version\n\t\t\t});\n\t\t}\n\n\t\t// this call happens when opening a document on the main side\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({ addedDocuments: addData });\n\n\t\t// this call happens when closing a document from the main side\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({ removedDocuments: docs.map(d => d.uri) });\n\n\t\t// notebook is still open -> cell documents stay open\n\t\tfor (let cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.ok(extHostDocuments.getDocument(cell.document.uri));\n\t\t\tassert.strictEqual(extHostDocuments.getDocument(cell.document.uri).isClosed, false);\n\t\t}\n\n\t\t// close notebook -> docs are closed\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({ removedDocuments: [notebook.uri] });\n\t\tfor (let cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.throws(() => extHostDocuments.getDocument(cell.document.uri));\n\t\t}\n\t\tfor (let doc of docs) {\n\t\t\tassert.strictEqual(doc.isClosed, true);\n\t\t}\n\t});\n\n\ttest('cell document goes when cell is removed', async function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\t\tconst [cell1, cell2] = notebook.apiNotebook.getCells();\n\n\t\textHostNotebooks.$acceptModelChanged(notebook.uri, {\n\t\t\tversionId: 2,\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges: [[0, 1, []]]\n\t\t\t\t}\n\t\t\t]\n\t\t}, false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 1);\n\t\tassert.strictEqual(cell1.document.isClosed, true); // ref still alive!\n\t\tassert.strictEqual(cell2.document.isClosed, false);\n\n\t\tassert.throws(() => extHostDocuments.getDocument(cell1.document.uri));\n\t});\n\n\ttest('cell document knows notebook', function () {\n\t\tfor (let cells of notebook.apiNotebook.getCells()) {\n\t\t\tassert.strictEqual(cells.document.notebook === notebook.apiNotebook, true);\n\t\t}\n\t});\n\n\ttest('cell#index', function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\t\tconst [first, second] = notebook.apiNotebook.getCells();\n\t\tassert.strictEqual(first.index, 0);\n\t\tassert.strictEqual(second.index, 1);\n\n\t\t// remove first cell\n\t\textHostNotebooks.$acceptModelChanged(notebook.uri, {\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 1, []]]\n\t\t\t}]\n\t\t}, false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 1);\n\t\tassert.strictEqual(second.index, 0);\n\n\t\textHostNotebooks.$acceptModelChanged(notebookUri, {\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 0, [{\n\t\t\t\t\thandle: 2,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 2),\n\t\t\t\t\tsource: ['Hello', 'World', 'Hello World!'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 3,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\tsource: ['Hallo', 'Welt', 'Hallo Welt!'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}]]]\n\t\t\t}]\n\t\t}, false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 3);\n\t\tassert.strictEqual(second.index, 2);\n\t});\n\n\ttest('ERR MISSING extHostDocument for notebook cell: #116711', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebooks.onDidChangeNotebookCells);\n\n\t\t// DON'T call this, make sure the cell-documents have not been created yet\n\t\t// assert.strictEqual(notebook.notebookDocument.cellCount, 2);\n\n\t\textHostNotebooks.$acceptModelChanged(notebook.uri, {\n\t\t\tversionId: 100,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 2, [{\n\t\t\t\t\thandle: 3,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\tsource: ['### Heading'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'markdown',\n\t\t\t\t\tcellKind: CellKind.Markdown,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 4,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 4),\n\t\t\t\t\tsource: ['console.log(\"aaa\")', 'console.log(\"bbb\")'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'javascript',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}]]]\n\t\t\t}]\n\t\t}, false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.document === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.changes.length, 1);\n\t\tassert.strictEqual(event.changes[0].deletedCount, 2);\n\t\tassert.strictEqual(event.changes[0].deletedItems[0].document.isClosed, true);\n\t\tassert.strictEqual(event.changes[0].deletedItems[1].document.isClosed, true);\n\t\tassert.strictEqual(event.changes[0].items.length, 2);\n\t\tassert.strictEqual(event.changes[0].items[0].document.isClosed, false);\n\t\tassert.strictEqual(event.changes[0].items[1].document.isClosed, false);\n\t});\n\n\n\ttest('Opening a notebook results in VS Code firing the event onDidChangeActiveNotebookEditor twice #118470', function () {\n\t\tlet count = 0;\n\t\textHostNotebooks.onDidChangeActiveNotebookEditor(() => count += 1);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({\n\t\t\taddedEditors: [{\n\t\t\t\tdocumentUri: notebookUri,\n\t\t\t\tid: '_notebook_editor_2',\n\t\t\t\tselections: [{ start: 0, end: 1 }],\n\t\t\t\tvisibleRanges: []\n\t\t\t}]\n\t\t});\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({\n\t\t\tnewActiveEditor: '_notebook_editor_2'\n\t\t});\n\n\t\tassert.strictEqual(count, 1);\n\t});\n\n\ttest('unset active notebook editor', function () {\n\n\t\tconst editor = extHostNotebooks.activeNotebookEditor;\n\t\tassert.ok(editor !== undefined);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({ newActiveEditor: undefined });\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === editor);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({});\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === editor);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta({ newActiveEditor: null });\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === undefined);\n\t});\n\n\ttest('change cell language triggers onDidChange events', async function () {\n\n\t\tconst first = notebook.apiNotebook.cellAt(0);\n\n\t\tassert.strictEqual(first.document.languageId, 'markdown');\n\n\t\tconst removed = Event.toPromise(extHostDocuments.onDidRemoveDocument);\n\t\tconst added = Event.toPromise(extHostDocuments.onDidAddDocument);\n\n\t\textHostNotebooks.$acceptModelChanged(notebook.uri, {\n\t\t\tversionId: 12, rawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeLanguage,\n\t\t\t\tindex: 0,\n\t\t\t\tlanguage: 'fooLang'\n\t\t\t}]\n\t\t}, false);\n\n\t\tconst removedDoc = await removed;\n\t\tconst addedDoc = await added;\n\n\t\tassert.strictEqual(first.document.languageId, 'fooLang');\n\t\tassert.ok(removedDoc === addedDoc);\n\t});\n\n\ttest('change cell execution state does not trigger onDidChangeMetadata event', async function () {\n\t\tlet didFireOnDidChangeMetadata = false;\n\t\tlet e = extHostNotebooks.onDidChangeCellMetadata(() => {\n\t\t\tdidFireOnDidChangeMetadata = true;\n\t\t});\n\n\t\tconst changeExeState = Event.toPromise(extHostNotebooks.onDidChangeNotebookCellExecutionState);\n\n\t\textHostNotebooks.$acceptModelChanged(notebook.uri, {\n\t\t\tversionId: 12, rawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellMetadata,\n\t\t\t\tindex: 0,\n\t\t\t\tmetadata: {\n\t\t\t\t\t...notebook.getCellFromIndex(0)?.internalMetadata,\n\t\t\t\t\t...{\n\t\t\t\t\t\trunState: NotebookCellExecutionState.Executing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}, false);\n\n\t\tawait changeExeState;\n\t\tassert.strictEqual(didFireOnDidChangeMetadata, false);\n\t\te.dispose();\n\t});\n});\n"]}