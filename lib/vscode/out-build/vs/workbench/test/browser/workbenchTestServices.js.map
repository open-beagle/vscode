{"version":3,"file":"workbenchTestServices.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/test/browser/workbenchTestServices.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IA4IhG,SAAgB,qBAAqB,CAAC,oBAA2C,EAAE,QAAa;QAC/F,OAAO,oBAAoB,CAAC,cAAc,CAAC,iCAAe,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAC9H,CAAC;IAFD,sDAEC;IAED,mBAAQ,CAAC,EAAE,CAA8B,yBAAgB,CAAC,oBAAoB,CAAC,CAAC,8BAA8B,CAAC;QAE9G,MAAM,EAAE,4BAAoB;QAE5B,qBAAqB,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAoB,EAAE;YACrK,OAAO,oBAAoB,CAAC,cAAc,CAAC,iCAAe,EAAE,QAAQ,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,aAAa,CAAC,CAAC;QACjK,CAAC;QAED,iBAAiB,EAAE,CAAC,GAAG,EAA2B,EAAE;YACnD,OAAO,GAAG,YAAY,iCAAe,CAAC;QACvC,CAAC;KACD,CAAC,CAAC;IAEH,MAAa,sBAAuB,SAAQ,uCAAkB;QAE1C,mBAAmB,CAAC,MAAmB,EAAE,aAAkB;YAC7E,OAAO,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,+BAAc,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;QAC5F,CAAC;KACD;IALD,wDAKC;IAED,MAAa,kBAAmB,SAAQ,+BAAc;QAElC,mBAAmB,CAAC,MAAmB,EAAE,aAAkB;YAC7E,OAAO,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,+BAAc,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;QAC5F,CAAC;KACD;IALD,gDAKC;IAMD,SAAgB,6BAA6B,CAC5C,SAKC,EACD,cAA+B,IAAI,2BAAe,EAAE;QAEpD,MAAM,oBAAoB,GAAG,IAAI,mDAAwB,CAAC,IAAI,qCAAiB,CAAC,CAAC,6BAAiB,EAAE,IAAI,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;QAElI,oBAAoB,CAAC,IAAI,CAAC,0CAAoB,EAAE,IAAI,uBAAuB,EAAE,CAAC,CAAC;QAC/E,oBAAoB,CAAC,IAAI,CAAC,wCAAmB,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,uCAAkB,EAAE,CAAC,CAAC,CAAC;QAC1F,oBAAoB,CAAC,IAAI,CAAC,iCAAmB,EAAE,8BAAsB,CAAC,CAAC;QACvE,oBAAoB,CAAC,IAAI,CAAC,iDAA4B,EAAE,8BAAsB,CAAC,CAAC;QAChF,MAAM,iBAAiB,GAAG,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,iBAAiB,EAAC,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,cAAc,CAAC,6CAAqB,CAAC,CAAC;QACxK,oBAAoB,CAAC,IAAI,CAAC,+BAAkB,EAAE,iBAAiB,CAAC,CAAC;QACjE,oBAAoB,CAAC,IAAI,CAAC,2BAAgB,EAAE,IAAI,mBAAmB,EAAE,CAAC,CAAC;QACvE,MAAM,uBAAuB,GAAG,IAAI,0CAAkB,CAAC,6BAAa,CAAC,CAAC;QACtE,oBAAoB,CAAC,IAAI,CAAC,oCAAwB,EAAE,uBAAuB,CAAC,CAAC;QAC7E,MAAM,aAAa,GAAG,IAAI,mDAAwB,EAAE,CAAC;QACrD,oBAAoB,CAAC,IAAI,CAAC,qCAAqB,EAAE,aAAa,CAAC,CAAC;QAChE,oBAAoB,CAAC,IAAI,CAAC,sDAA0B,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,6BAA6B,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;QAC5I,oBAAoB,CAAC,IAAI,CAAC,oEAAiC,EAAE,IAAI,oCAAoC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtH,oBAAoB,CAAC,IAAI,CAAC,sDAA0B,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,qDAAyB,CAAC,CAAC,CAAC,CAAC;QACvI,oBAAoB,CAAC,IAAI,CAAC,yBAAe,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,0CAAkB,EAAE,CAAC,CAAC,CAAC;QACtF,oBAAoB,CAAC,IAAI,CAAC,0BAAY,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,EAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;QACtI,MAAM,aAAa,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAC9C,oBAAoB,CAAC,IAAI,CAAC,uCAAuB,EAAE,aAAa,CAAC,CAAC;QAClE,oBAAoB,CAAC,IAAI,CAAC,wBAAc,EAAE,IAAI,qCAAiB,EAAE,CAAC,CAAC;QACnE,MAAM,oBAAoB,GAAG,IAAI,wBAAwB,EAAE,CAAC;QAC5D,oBAAoB,CAAC,IAAI,CAAC,qCAAqB,EAAE,oBAAoB,CAAC,CAAC;QACvE,oBAAoB,CAAC,IAAI,CAAC,4BAAkB,EAAE,oBAAoB,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAC1G,oBAAoB,CAAC,IAAI,CAAC,0BAAY,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,iCAAe,CAAC,CAAC,CAAC,CAAC;QAC/G,oBAAoB,CAAC,IAAI,CAAC,yBAAe,EAAE,IAAI,kBAAkB,EAAE,CAAC,CAAC;QACrE,oBAAoB,CAAC,IAAI,CAAC,iEAA8B,EAAE,IAAI,yDAAiC,CAAC,aAAa,CAAC,CAAC,CAAC;QAChH,oBAAoB,CAAC,IAAI,CAAC,2BAAgB,EAAE,oBAAoB,CAAC,cAAc,CAAC,iCAAe,CAAC,CAAC,CAAC;QAClG,MAAM,YAAY,GAAG,IAAI,mCAAgB,EAAE,CAAC;QAC5C,oBAAoB,CAAC,IAAI,CAAC,4BAAa,EAAE,YAAY,CAAC,CAAC;QACvD,oBAAoB,CAAC,IAAI,CAAC,4BAAa,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,mCAAgB,CAAC,CAAC,CAAC,CAAC;QACjH,MAAM,WAAW,GAAG,IAAI,eAAe,EAAE,CAAC;QAC1C,oBAAoB,CAAC,IAAI,CAAC,oBAAY,EAAE,WAAW,CAAC,CAAC;QACrD,oBAAoB,CAAC,IAAI,CAAC,iCAAmB,EAAE,IAAI,uCAAkB,CAAC,WAAW,CAAC,CAAC,CAAC;QACpF,oBAAoB,CAAC,IAAI,CAAC,6CAAyB,EAAE,IAAI,4BAA4B,EAAE,CAAC,CAAC;QACzF,oBAAoB,CAAC,IAAI,CAAC,6BAAiB,EAAE,qCAAoB,CAAC,CAAC;QACnE,oBAAoB,CAAC,IAAI,CAAC,mCAAoB,EAAE,IAAI,iDAAuB,EAAE,CAAC,CAAC;QAC/E,oBAAoB,CAAC,IAAI,CAAC,sDAA0B,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,qDAAyB,CAAC,CAAC,CAAC,CAAC;QACvI,oBAAoB,CAAC,IAAI,CAAC,sBAAY,EAAE,IAAI,eAAe,EAAE,CAAC,CAAC;QAC/D,MAAM,iBAAiB,GAAG,IAAI,6CAAqB,EAAE,CAAC;QACtD,oBAAoB,CAAC,IAAI,CAAC,+BAAkB,EAAE,iBAAiB,CAAC,CAAC;QACjE,oBAAoB,CAAC,IAAI,CAAC,iCAAmB,EAAE,IAAI,sBAAsB,EAAE,CAAC,CAAC;QAC7E,oBAAoB,CAAC,IAAI,CAAC,8BAAiB,EAAE,IAAI,4CAAoB,EAAE,CAAC,CAAC;QACzE,oBAAoB,CAAC,IAAI,CAAC,oDAAyB,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,mDAAwB,CAAC,CAAC,CAAC,CAAC;QACrI,oBAAoB,CAAC,IAAI,CAAC,gDAAuB,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,+CAAsB,CAAC,CAAC,CAAC,CAAC;QACjI,oBAAoB,CAAC,IAAI,CAAC,4BAAgB,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,eAAe,EAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAmB,oBAAoB,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;QACxN,oBAAoB,CAAC,IAAI,CAAC,mBAAY,EAAgB,oBAAoB,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;QAC5G,oBAAoB,CAAC,IAAI,CAAC,mCAAiB,EAAqB,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,mDAAwB,CAAC,CAAC,CAAC,CAAC;QAChJ,oBAAoB,CAAC,IAAI,CAAC,iBAAW,EAAE,IAAI,oBAAc,EAAE,CAAC,CAAC;QAC7D,MAAM,kBAAkB,GAAG,IAAI,uBAAuB,CAAC,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,oBAAoB,CAAC,IAAI,CAAC,0CAAoB,EAAE,kBAAkB,CAAC,CAAC;QACpE,oBAAoB,CAAC,IAAI,CAAC,qBAAa,EAAiB,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,2BAAY,CAAC,CAAC,CAAC,CAAC;QAC5H,MAAM,aAAa,GAAG,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,aAAa,EAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAC3I,oBAAoB,CAAC,IAAI,CAAC,8BAAc,EAAE,aAAa,CAAC,CAAC;QACzD,oBAAoB,CAAC,IAAI,CAAC,8CAAsB,EAAE,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,6CAAqB,CAAC,CAAC,CAAC,CAAC;QAC/H,oBAAoB,CAAC,IAAI,CAAC,sCAAkB,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,qCAAiB,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;QAClI,oBAAoB,CAAC,IAAI,CAAC,yBAAe,EAAE,IAAI,kBAAkB,EAAE,CAAC,CAAC;QACrE,oBAAoB,CAAC,IAAI,CAAC,0BAAY,EAAE,IAAI,eAAe,EAAE,CAAC,CAAC;QAC/D,oBAAoB,CAAC,IAAI,CAAC,+BAAkB,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,qCAAiB,CAAC,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,oBAAoB,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;QACpN,oBAAoB,CAAC,IAAI,CAAC,+BAAkB,EAAE,IAAI,qBAAqB,EAAE,CAAC,CAAC;QAC3E,oBAAoB,CAAC,IAAI,CAAC,iDAAgC,EAAE,IAAI,+DAAmC,EAAE,CAAC,CAAC;QACvG,oBAAoB,CAAC,IAAI,CAAC,mCAAwB,EAAE,IAAI,2BAA2B,EAAE,CAAC,CAAC;QACvF,oBAAoB,CAAC,IAAI,CAAC,gCAAqB,EAAE,IAAI,wBAAwB,EAAE,CAAC,CAAC;QACjF,oBAAoB,CAAC,IAAI,CAAC,0CAAoB,EAAE,IAAI,gDAA0B,EAAE,CAAC,CAAC;QAElF,OAAO,oBAAoB,CAAC;IAC7B,CAAC;IA3ED,sEA2EC;IAED,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;QAC/B,YAC2B,gBAAsC,EACvC,eAAoC,EAC7B,sBAA+C,EAC5C,yBAAwD,EAC1D,cAAkC,EAC7C,YAA8B,EAC/B,WAA4B,EACtB,iBAAwC,EACvC,kBAAuC,EAC5C,aAAgC,EAC1B,kBAAwC,EAChD,WAAyB,EACpB,wBAA2C,EAClC,yBAAoD,EACzD,wBAAkD,EAC9C,wBAAsD,EACnE,WAA4B,EACtB,iBAAqC,EAC1C,YAA2B,EAC7B,UAAuB,EACf,kBAAuC,EACrC,mBAA0C,EAC3C,mBAAyC,EACpC,wBAAmD,EACvD,oBAA2C,EAC5C,mBAAyC;YAzB5C,qBAAgB,GAAhB,gBAAgB,CAAsB;YACvC,oBAAe,GAAf,eAAe,CAAqB;YAC7B,2BAAsB,GAAtB,sBAAsB,CAAyB;YAC5C,8BAAyB,GAAzB,yBAAyB,CAA+B;YAC1D,mBAAc,GAAd,cAAc,CAAoB;YAC7C,iBAAY,GAAZ,YAAY,CAAkB;YAC/B,gBAAW,GAAX,WAAW,CAAiB;YACtB,sBAAiB,GAAjB,iBAAiB,CAAuB;YACvC,uBAAkB,GAAlB,kBAAkB,CAAqB;YAC5C,kBAAa,GAAb,aAAa,CAAmB;YAC1B,uBAAkB,GAAlB,kBAAkB,CAAsB;YAChD,gBAAW,GAAX,WAAW,CAAc;YACpB,6BAAwB,GAAxB,wBAAwB,CAAmB;YAClC,8BAAyB,GAAzB,yBAAyB,CAA2B;YACzD,6BAAwB,GAAxB,wBAAwB,CAA0B;YAC9C,6BAAwB,GAAxB,wBAAwB,CAA8B;YACnE,gBAAW,GAAX,WAAW,CAAiB;YACtB,sBAAiB,GAAjB,iBAAiB,CAAoB;YAC1C,iBAAY,GAAZ,YAAY,CAAe;YAC7B,eAAU,GAAV,UAAU,CAAa;YACf,uBAAkB,GAAlB,kBAAkB,CAAqB;YACrC,wBAAmB,GAAnB,mBAAmB,CAAuB;YAC3C,wBAAmB,GAAnB,mBAAmB,CAAsB;YACpC,6BAAwB,GAAxB,wBAAwB,CAA2B;YACvD,yBAAoB,GAApB,oBAAoB,CAAuB;YAC5C,wBAAmB,GAAnB,mBAAmB,CAAsB;QACnE,CAAC;KACL,CAAA;IA7BY,mBAAmB;QAE7B,WAAA,6BAAiB,CAAA;QACjB,WAAA,4BAAgB,CAAA;QAChB,WAAA,gDAAuB,CAAA;QACvB,WAAA,sDAA0B,CAAA;QAC1B,WAAA,oCAAwB,CAAA;QACxB,WAAA,4BAAa,CAAA;QACb,WAAA,oBAAY,CAAA;QACZ,WAAA,4BAAkB,CAAA;QAClB,WAAA,wCAAmB,CAAA;QACnB,WAAA,8BAAc,CAAA;QACd,YAAA,0CAAoB,CAAA;QACpB,YAAA,0BAAY,CAAA;QACZ,YAAA,mCAAiB,CAAA;QACjB,YAAA,sDAA0B,CAAA;QAC1B,YAAA,qCAAqB,CAAA;QACrB,YAAA,6CAAyB,CAAA;QACzB,YAAA,mBAAY,CAAA;QACZ,YAAA,+BAAkB,CAAA;QAClB,YAAA,qBAAa,CAAA;QACb,YAAA,iBAAW,CAAA;QACX,YAAA,iCAAmB,CAAA;QACnB,YAAA,qCAAqB,CAAA;QACrB,YAAA,mCAAoB,CAAA;QACpB,YAAA,oDAAyB,CAAA;QACzB,YAAA,qCAAqB,CAAA;QACrB,YAAA,0CAAoB,CAAA;OA3BV,mBAAmB,CA6B/B;IA7BY,kDAAmB;IA+BhC,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,+CAAsB;QAI9D,YACe,WAAyB,EACX,yBAAqD,EAC9D,gBAAmC,EAC/B,oBAA2C,EACnD,YAA2B,EACZ,kBAAgD,EAC9D,aAA6B,EACzB,iBAAqC,EACtB,gCAAmE,EACrF,cAA+B,EACpB,yBAAqD,EAC9D,gBAAmC,EAClC,iBAAqC,EAC3C,WAAyB,EACd,sBAA+C,EACnD,kBAAuC,EAC9C,WAAyB,EAC1B,UAAuB,EACd,mBAAyC;YAE/D,KAAK,CACJ,WAAW,EACX,yBAAyB,EACzB,gBAAgB,EAChB,oBAAoB,EACpB,YAAY,EACZ,kBAAkB,EAClB,aAAa,EACb,iBAAiB,EACjB,gCAAgC,EAChC,yBAAyB,EACzB,gBAAgB,EAChB,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,kBAAkB,EAClB,WAAW,EACX,UAAU,EACV,mBAAmB,CACnB,CAAC;YA3CK,oBAAe,GAAmC,SAAS,CAAC;YAC5D,eAAU,GAAmC,SAAS,CAAC;QA2C/D,CAAC;QAED,sBAAsB,CAAC,KAAyB;YAC/C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,CAAC;QAEQ,KAAK,CAAC,UAAU,CAAC,QAAa,EAAE,OAA8B;YACtE,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;gBACnC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;gBAEjC,MAAM,KAAK,CAAC;aACZ;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACzE,OAAO;gBACN,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,MAAM,CAAA,GAAA,6CAAiC,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC7D,IAAI,EAAE,EAAE;aACR,CAAC;QACH,CAAC;QAED,iBAAiB,CAAC,KAAyB;YAC1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;QAEQ,KAAK,CAAC,KAAK,CAAC,QAAa,EAAE,KAA6B,EAAE,OAA+B;YACjG,IAAI,IAAI,CAAC,UAAU,EAAE;gBACpB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAE5B,MAAM,KAAK,CAAC;aACZ;YAED,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC9C,CAAC;KACD,CAAA;IAtFY,mBAAmB;QAK7B,WAAA,oBAAY,CAAA;QACZ,WAAA,sDAA0B,CAAA;QAC1B,WAAA,6BAAiB,CAAA;QACjB,WAAA,qCAAqB,CAAA;QACrB,WAAA,4BAAa,CAAA;QACb,WAAA,iDAA4B,CAAA;QAC5B,WAAA,wBAAc,CAAA;QACd,WAAA,4BAAkB,CAAA;QAClB,WAAA,oEAAiC,CAAA;QACjC,WAAA,gCAAe,CAAA;QACf,YAAA,sDAA0B,CAAA;QAC1B,YAAA,mCAAiB,CAAA;QACjB,YAAA,sCAAkB,CAAA;QAClB,YAAA,0BAAY,CAAA;QACZ,YAAA,gDAAuB,CAAA;QACvB,YAAA,iCAAmB,CAAA;QACnB,YAAA,0BAAY,CAAA;QACZ,YAAA,iBAAW,CAAA;QACX,YAAA,0CAAoB,CAAA;OAvBV,mBAAmB,CAsF/B;IAtFY,kDAAmB;IAwFhC,MAAa,+CAAgD,SAAQ,+CAAsB;QAG1F,IAAa,QAAQ;YACpB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAClG;YAED,OAAO,IAAI,CAAC,aAAa,CAAC;QAC3B,CAAC;KACD;IAVD,0GAUC;IAED,MAAa,kBAAmB,SAAQ,gCAAc;QAErD,IAAuB,iBAAiB;YACvC,OAAO;gBACN,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,kBAAO,EAAE;gBAC3C,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,kBAAO,EAAE;gBAC3C,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,wBAAa,EAAE;aACjD,CAAC;QACH,CAAC;QAED,IAAuB,iBAAiB,CAAC,SAA8B,IAAI,CAAC;KAC5E;IAXD,gDAWC;IAED,MAAM,8BAA+B,SAAQ,uDAAkC;QAA/E;;YACC,SAAI,GAAG,EAAE,CAAC;QACX,CAAC;KAAA;IAEY,QAAA,kBAAkB,mBAAK,aAAa,EAAE,SAAS,IAAK,iBAAO,EAAG;IAE9D,QAAA,sBAAsB,GAAG,IAAI,8BAA8B,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,0BAAkB,CAAC,CAAC;IAElH,MAAa,mBAAmB;QAI/B,YAAY,CACX,OAA6G,EAC7G,IAA0D,EAC1D,WAAiE;YAEjE,OAAO,IAAI,CAAC,mBAAQ,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;KACD;IAXD,kDAWC;IAED,MAAa,wBAAwB;QAArC;YAIC,qCAAgC,GAAG,aAAK,CAAC,IAAI,CAAC;QAM/C,CAAC;QAJA,uBAAuB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QACpD,yBAAyB,KAAuB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChF,uBAAuB,CAAC,oBAA0C,IAAU,CAAC;QAC7E,uBAAuB,KAA2B,uBAAoC,CAAC,CAAC;KACxF;IAVD,4DAUC;IAED,MAAa,sBAAsB;QAAnC;YAIC,2BAAsB,GAA0C,aAAK,CAAC,IAAI,CAAC;QAI5E,CAAC;QAFA,2BAA2B,CAAC,SAA+B,IAAiB,OAAO,sBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QACrG,aAAa,CAAC,IAAS,EAAE,gBAAyB,EAAE,UAA4B,IAA6B,OAAO,SAAS,CAAC,CAAC,CAAC;KAChI;IARD,wDAQC;IAED,MAAa,eAAe;QAI3B,UAAU,CAAC,GAAW,EAAE,wBAA4C;YACnE,OAAO;gBACN,WAAW,EAAE,aAAK,CAAC,IAAI;gBACvB,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS;gBACxB,UAAU,EAAE,GAAG,EAAE,CAAC,EAAE;aACpB,CAAC;QACH,CAAC;KACD;IAXD,0CAWC;IAED,MAAa,kBAAkB;QAI9B,YAAoB,IAAU;YAAV,SAAI,GAAJ,IAAI,CAAM;QAAI,CAAC;QAEnC,sBAAsB,KAAW,CAAC;QAClC,OAAO,KAAW,CAAC;QACnB,IAAI,KAAW,CAAC;QAChB,IAAI,KAAW,CAAC;QAChB,iBAAiB,CAAC,MAA2C,IAAU,CAAC;QACxE,KAAK,KAAW,CAAC;QACjB,mBAAmB,KAAW,CAAC;QAC/B,UAAU,KAAuD,OAAO,EAAE,CAAC,CAAC,CAAC;QAC7E,0BAA0B,CAAC,KAAuB,IAAU,CAAC;QAC7D,wBAAwB,CAAC,KAAuB,IAAU,CAAC;QAC3D,0BAA0B,CAAC,aAAqB,IAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxF,iBAAiB,CAAC,aAAqB,IAAqB,OAAO,SAAS,CAAC,CAAC,CAAC;QAC/E,oBAAoB,KAAW,CAAC;KAChC;IAnBD,gDAmBC;IAED,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;QAMjC,YACgC,WAAyB;YAAzB,gBAAW,GAAX,WAAW,CAAc;QACrD,CAAC;QACL,KAAK,CAAC,eAAe,CAAC,aAAsB,IAAkB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACnG,KAAK,CAAC,iBAAiB,CAAC,aAAsB,IAAkB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACrG,KAAK,CAAC,oBAAoB,CAAC,aAAsB,IAAkB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxG,qBAAqB,CAAC,QAA6B,IAAkB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,eAAe,CAAC,QAA6B,IAAkB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,iBAAiB,CAAC,QAA6B,IAAkB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,oBAAoB,CAAC,QAA6B,IAAkB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGhG,iBAAiB,CAAC,IAAS,IAAU,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;QAC9D,cAAc,CAAC,UAAe,EAAE,oBAA+B,IAA8B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAEvI,cAAc,CAAC,QAA4B,IAA8B,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC7G,cAAc,CAAC,QAA4B,IAAgC,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE/G,gBAAgB,CAAC,MAAqB,IAAU,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC;QAC9E,eAAe,CAAC,oBAAsC,IAA4B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;KAC/H,CAAA;IA1BY,qBAAqB;QAO/B,WAAA,0BAAY,CAAA;OAPF,qBAAqB,CA0BjC;IA1BY,sDAAqB;IA4BlC,MAAa,iBAAiB;QAA9B;YAIC,yBAAoB,GAAG,KAAK,CAAC;YAE7B,cAAS,GAAe,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;YAEpD,cAAS,GAAgB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAE9C,uBAAkB,GAAmB,aAAK,CAAC,IAAI,CAAC;YAChD,8BAAyB,GAAmB,aAAK,CAAC,IAAI,CAAC;YACvD,0BAAqB,GAAmB,aAAK,CAAC,IAAI,CAAC;YACnD,+BAA0B,GAAmB,aAAK,CAAC,IAAI,CAAC;YACxD,6BAAwB,GAAkB,aAAK,CAAC,IAAI,CAAC;YACrD,8BAAyB,GAAgB,aAAK,CAAC,IAAI,CAAC;YACpD,gBAAW,GAAG,aAAK,CAAC,IAAI,CAAC;YACzB,uCAAkC,GAAG,aAAK,CAAC,IAAI,CAAC;YAIhD,cAAS,GAAkB,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,iBAAY,GAAkB,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAqC1D,CAAC;QAxCA,MAAM,KAAW,CAAC;QAClB,UAAU,KAAc,OAAO,IAAI,CAAC,CAAC,CAAC;QAGtC,QAAQ,CAAC,KAAY,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QACjD,SAAS,CAAC,KAAY,IAAU,CAAC;QACjC,eAAe,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC5C,oBAAoB,KAAa,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5C,qBAAqB,KAAyB,OAAO,SAAS,CAAC,CAAC,CAAC;QACjE,SAAS,CAAC,KAAY,IAAa,OAAO,IAAI,CAAC,CAAC,CAAC;QACjD,YAAY,CAAC,KAAY,IAAe,OAAO,IAAI,eAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,YAAY,CAAC,KAAY,IAAiB,OAAO,IAAK,CAAC,CAAC,CAAC;QACzD,gBAAgB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC7C,iBAAiB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC9C,mBAAmB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAChD,oBAAoB,CAAC,OAAgB,IAAU,CAAC;QAChD,eAAe,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC5C,KAAK,CAAC,eAAe,CAAC,OAAgB,IAAmB,CAAC;QAC1D,KAAK,CAAC,gBAAgB,CAAC,OAAgB,IAAmB,CAAC;QAC3D,aAAa,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC1C,KAAK,CAAC,cAAc,CAAC,OAAgB,IAAmB,CAAC;QACzD,oBAAoB,KAAW,CAAC;QAChC,gBAAgB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC7C,oBAAoB,KAAwB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjF,aAAa,KAAW,CAAC;QACzB,kBAAkB,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;QAClC,gBAAgB,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,KAAK,CAAC,gBAAgB,CAAC,SAAuB,IAAmB,CAAC;QAClE,QAAQ,CAAC,MAAc,IAAU,CAAC;QAClC,WAAW,CAAC,MAAc,IAAU,CAAC;QACrC,0BAA0B,KAAgB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC/E,aAAa,KAAW,CAAC;QACzB,sBAAsB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QACnD,kBAAkB,CAAC,OAAgB,IAAU,CAAC;QAC9C,UAAU,CAAC,KAAY,EAAE,gBAAwB,EAAE,iBAAyB,IAAU,CAAC;QACvF,YAAY,CAAC,IAAU,IAAU,CAAC;QAClC,iBAAiB,KAAK,OAAO,KAAK,CAAC,CAAC,CAAC;QACrC,0BAA0B,CAAC,SAAkB,IAAU,CAAC;QACxD,sBAAsB,CAAC,IAAW,EAAE,SAAoB,IAAuB,OAAO,SAAS,CAAC,CAAC,CAAC;QAClG,KAAK,KAAK,CAAC;KACX;IA3DD,8CA2DC;IAED,IAAI,aAAa,GAAY,EAAS,CAAC;IAEvC,MAAa,kBAAkB;QAA/B;YAGC,gCAA2B,GAAG,IAAI,eAAO,EAAqB,CAAC;YAC/D,kCAA6B,GAAG,IAAI,eAAO,EAAqB,CAAC;YACjE,4BAAuB,GAAG,IAAI,eAAO,EAAY,CAAC;YAClD,6BAAwB,GAAG,IAAI,eAAO,EAAY,CAAC;YAEnD,yBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;YAC9D,2BAAsB,GAAG,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;YAClE,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;YACtD,sBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAYzD,CAAC;QAVA,WAAW,CAAC,EAAU,EAAE,KAAe,IAAmC,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9G,WAAW,KAA0B,OAAO,EAAE,CAAC,CAAC,CAAC;QACjD,cAAc,KAA0B,OAAO,EAAE,CAAC,CAAC,CAAC;QACpD,gBAAgB,KAAe,OAAO,aAAa,CAAC,CAAC,CAAC;QACtD,mBAAmB,KAAa,OAAO,yBAAyB,CAAC,CAAC,CAAC;QACnE,UAAU,CAAC,EAAU,IAAmC,OAAO,SAAS,CAAC,CAAC,CAAC;QAC3E,oBAAoB,CAAC,EAAU,IAAI,OAAO,SAAS,CAAC,CAAC,CAAC;QACtD,iBAAiB,KAAW,CAAC;QAC7B,sBAAsB,KAAa,OAAO,SAAU,CAAC,CAAC,CAAC;QACvD,OAAO,KAAK,CAAC;KACb;IAvBD,gDAuBC;IAED,MAAa,gBAAgB;QAA7B;YAGC,mBAAc,GAAG,IAAI,eAAO,EAAsC,CAAC,KAAK,CAAC;YACzE,oBAAe,GAAG,IAAI,eAAO,EAAU,CAAC,KAAK,CAAC;QAa/C,CAAC;QAXA,KAAK,CAAC,SAAS,CAAC,EAAW,EAAE,KAAe,IAAwB,OAAO,SAAS,CAAC,CAAC,CAAC;QACvF,QAAQ,CAAC,EAAU,IAAS,OAAO,aAAa,CAAC,CAAC,CAAC;QACnD,SAAS,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC;QAC1B,eAAe,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC;QAChC,cAAc,KAAa,OAAO,aAAa,CAAC,CAAC,CAAC;QAClD,kBAAkB,CAAC,EAAU,EAAE,OAAgB,IAAU,CAAC;QAC1D,OAAO,KAAK,CAAC;QACb,YAAY,CAAC,OAAe,EAAE,KAAa,EAAE,KAAc,IAAiB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACzH,oBAAoB,CAAC,EAAU,IAAI,OAAO,IAAK,CAAC,CAAC,CAAC;QAClD,eAAe,KAAW,CAAC;QAC3B,oBAAoB,KAAa,OAAO,SAAU,CAAC,CAAC,CAAC;KACrD;IAjBD,4CAiBC;IAED,MAAa,gBAAgB;QAA7B;YAIC,uCAAkC,GAAG,IAAI,eAAO,EAAsE,CAAC,KAAK,CAAC;YAM7H,qCAAgC,GAAG,IAAI,eAAO,EAAqC,CAAC;YACpF,8BAAyB,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC;QAQzE,CAAC;QAdA,sBAAsB,CAAC,EAAU,IAAa,OAAO,IAAI,CAAC,CAAC,CAAC;QAC5D,uBAAuB,KAA2B,OAAO,IAAI,CAAC,CAAC,CAAC;QAChE,iBAAiB,CAAC,EAAU,EAAE,KAAe,IAAoC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChH,kBAAkB,CAAC,EAAU,IAAU,CAAC;QAIxC,aAAa,CAAC,EAAU,IAAa,OAAO,IAAI,CAAC,CAAC,CAAC;QACnD,mBAAmB,CAAkB,EAAU,IAAc,OAAO,IAAI,CAAC,CAAC,CAAC;QAC3E,aAAa,CAAkB,EAAU,IAAc,OAAO,IAAI,CAAC,CAAC,CAAC;QACrE,QAAQ,CAAkB,EAAU,EAAE,KAA2B,IAAuB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvH,SAAS,CAAC,EAAU,IAAU,CAAC;QAC/B,wBAAwB,CAAC,EAAU,IAAI,OAAO,IAAK,CAAC,CAAC,CAAC;QACtD,gCAAgC,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC;KAC7D;IAnBD,4CAmBC;IAED,MAAa,uBAAuB;QAInC,YAAmB,SAAgC,EAAE;YAAlC,WAAM,GAAN,MAAM,CAA4B;YAErD,2BAAsB,GAAwB,aAAK,CAAC,IAAI,CAAC;YACzD,uBAAkB,GAAwB,aAAK,CAAC,IAAI,CAAC;YACrD,kBAAa,GAAwB,aAAK,CAAC,IAAI,CAAC;YAChD,qBAAgB,GAAwB,aAAK,CAAC,IAAI,CAAC;YACnD,mBAAc,GAAwB,aAAK,CAAC,IAAI,CAAC;YACjD,0BAAqB,GAAwB,aAAK,CAAC,IAAI,CAAC;YACxD,gBAAW,GAAsB,aAAK,CAAC,IAAI,CAAC;YAC5C,iCAA4B,GAAG,aAAK,CAAC,IAAI,CAAC;YAE1C,gBAAW,sBAA+B;YAC1C,cAAS,GAAkB,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,iBAAY,GAAkB,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACzD,uBAAkB,GAAG,KAAK,CAAC;YAE3B,qBAAgB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;QAhBU,CAAC;QAkB1D,IAAI,WAAW,KAAmB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAElD,UAAU,KAAc,OAAO,IAAI,CAAC,CAAC,CAAC;QACtC,SAAS,CAAC,MAAoB,IAA6B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAChF,QAAQ,CAAC,UAAkB,IAA8B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;QACrH,QAAQ,CAAC,WAAmB,IAAY,OAAO,SAAS,CAAC,CAAC,CAAC;QAC3D,SAAS,CAAC,MAAuB,EAAE,OAA+B,EAAE,KAAe,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1I,aAAa,CAAC,MAA6B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAClG,YAAY,CAAC,MAA6B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjG,OAAO,CAAC,MAA6B,IAAwC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAClH,OAAO,CAAC,MAA6B,EAAE,KAAyC,IAAU,CAAC;QAC3F,aAAa,CAAC,YAA+B,IAAU,CAAC;QACxD,WAAW,CAAC,OAA0B,IAAU,CAAC;QACjD,mBAAmB,CAAC,YAA8B,IAAU,CAAC;QAC7D,QAAQ,CAAC,SAAgC,EAAE,UAA0B,EAAE,QAA2B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACzJ,WAAW,CAAC,MAA6B,IAAU,CAAC;QACpD,SAAS,CAAC,MAA6B,EAAE,SAAgC,EAAE,UAA0B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC5J,UAAU,CAAC,MAA6B,EAAE,OAA8B,EAAE,QAA6B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC9J,cAAc,KAAmB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACtE,SAAS,CAAC,MAA6B,EAAE,SAAgC,EAAE,UAA0B,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC5J,YAAY,CAAC,MAAe,IAAU,CAAC;QACvC,gBAAgB,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAG7C,kBAAkB,CAAC,OAA2B,IAAiB,OAAO,sBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;KACxF;IAhDD,0DAgDC;IAED,MAAa,mBAAmB;QAE/B,YAAmB,EAAU;YAAV,OAAE,GAAF,EAAE,CAAQ;YAQ7B,YAAO,GAA4B,EAAE,CAAC;YAItC,iBAAY,GAAkB,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YASzD,YAAO,GAAG,IAAI,CAAC;YACf,gBAAW,GAAG,KAAK,CAAC;YAEpB,kBAAa,GAAgB,aAAK,CAAC,IAAI,CAAC;YACxC,qBAAgB,GAA6B,aAAK,CAAC,IAAI,CAAC;YACxD,sBAAiB,GAA6B,aAAK,CAAC,IAAI,CAAC;YACzD,qBAAgB,GAA6B,aAAK,CAAC,IAAI,CAAC;YACxD,wBAAmB,GAAwB,aAAK,CAAC,IAAI,CAAC;YACtD,eAAU,GAAgB,aAAK,CAAC,IAAI,CAAC;YACrC,gBAAW,GAA8C,aAAK,CAAC,IAAI,CAAC;YACpE,qBAAgB,GAA4B,aAAK,CAAC,IAAI,CAAC;QA/BtB,CAAC;QAiClC,UAAU,CAAC,MAAqB,IAA6B,OAAO,EAAE,CAAC,CAAC,CAAC;QACzE,WAAW,CAAC,SAAc,IAA6B,OAAO,EAAE,CAAC,CAAC,CAAC;QACnE,gBAAgB,CAAC,MAAc,IAAkB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACtF,gBAAgB,CAAC,OAAqB,IAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,UAAU,CAAC,OAAqB,EAAE,QAAyB,IAA0B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC1H,WAAW,CAAC,QAAmC,IAA0B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC9G,QAAQ,CAAC,OAAqB,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC1D,QAAQ,CAAC,OAAqB,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC1D,QAAQ,CAAC,OAAqB,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC1D,QAAQ,CAAC,SAAuB,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC5D,UAAU,CAAC,OAAqB,EAAE,OAAqB,EAAE,QAA8C,IAAU,CAAC;QAClH,UAAU,CAAC,OAAqB,EAAE,OAAqB,EAAE,QAA8C,IAAU,CAAC;QAClH,KAAK,CAAC,WAAW,CAAC,OAAsB,EAAE,OAA6B,IAAmB,CAAC;QAC3F,KAAK,CAAC,YAAY,CAAC,QAA8C,EAAE,OAA6B,IAAmB,CAAC;QACpH,KAAK,CAAC,eAAe,CAAC,OAAiC,IAAmB,CAAC;QAC3E,KAAK,CAAC,cAAc,CAAC,QAA8B,IAAmB,CAAC;QACvE,SAAS,CAAC,OAAsB,IAAU,CAAC;QAC3C,WAAW,CAAC,MAAiC,IAAU,CAAC;QACxD,aAAa,CAAC,MAAiC,IAAU,CAAC;QAC1D,KAAK,KAAW,CAAC;QACjB,IAAI,uBAAuB,KAAyB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACzF,SAAS,CAAC,SAAkB,IAAU,CAAC;QACvC,kBAAkB,CAAC,MAAc,IAAU,CAAC;QAC5C,OAAO,KAAW,CAAC;QACnB,MAAM,KAAa,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAc,EAAE,OAAe,IAAU,CAAC;QACjD,QAAQ,KAAK,CAAC;KACd;IA9DD,kDA8DC;IAED,MAAa,uBAAuB;QAApC;YAEC,WAAM,GAAuB,EAAE,CAAC;YAGhC,gBAAW,GAAuB,EAAE,CAAC;YAErC,iCAA4B,GAAG,aAAK,CAAC,IAAI,CAAC;YAC1C,0BAAqB,GAAG,aAAK,CAAC,IAAI,CAAC;QAYpC,CAAC;QAVA,QAAQ,CAAC,UAAkB,IAAkC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC1G,SAAS,CAAC,KAAkB,IAAwB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACjG,aAAa,CAAC,UAAqC,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACtH,YAAY,CAAC,UAAqC,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACrH,QAAQ,CAAC,QAAmC,EAAE,SAAyB,EAAE,OAAsC,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAClL,UAAU,CAAC,KAAgC,EAAE,MAAiC,EAAE,OAAwC,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC3L,SAAS,CAAC,KAAgC,EAAE,QAAmC,EAAE,SAAyB,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC7K,SAAS,CAAC,KAAgC,EAAE,QAAmC,EAAE,SAAyB,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC7K,WAAW,CAAC,KAAgC,IAAU,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACnG,aAAa,CAAC,WAA8B,EAAE,MAA8C,IAAU,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;KACnJ;IApBD,0DAoBC;IAED,MAAa,iBAAiB;QA4B7B,YAAoB,kBAAyC;YAAzC,uBAAkB,GAAlB,kBAAkB,CAAuB;YAxB7D,4BAAuB,GAAgB,aAAK,CAAC,IAAI,CAAC;YAClD,8BAAyB,GAAgB,aAAK,CAAC,IAAI,CAAC;YACpD,qBAAgB,GAA6B,aAAK,CAAC,IAAI,CAAC;YACxD,wBAAmB,GAA6B,aAAK,CAAC,IAAI,CAAC;YAC3D,yCAAoC,GAAgB,aAAK,CAAC,IAAI,CAAC;YAa/D,YAAO,GAA4B,EAAE,CAAC;YACtC,8BAAyB,GAAiC,EAAE,CAAC;YAC7D,uBAAkB,GAAkC,EAAE,CAAC;YACvD,8BAAyB,GAAG,EAAE,CAAC;YAC/B,mBAAc,GAA4B,EAAE,CAAC;YAC7C,UAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAEqC,CAAC;QAjBlE,IAAW,uBAAuB,KAA4C,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACrH,IAAW,uBAAuB,CAAC,KAA4C,IAAI,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC,CAAC,CAAC;QAM3H,IAAW,YAAY,KAA+B,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAClF,IAAW,YAAY,CAAC,KAA+B,IAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC;QAUxF,UAAU,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3B,WAAW,KAAK,OAAO,EAAS,CAAC,CAAC,CAAC;QACnC,kBAAkB,CAAC,QAAa,EAAE,OAAmC,EAAE,KAA+B,IAA8D,OAAO,EAAE,CAAC,CAAC,CAAC;QAChL,kBAAkB,CAAC,QAAoC,IAAiB,OAAO,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAI/G,KAAK,CAAC,UAAU,CAAC,MAA+C,EAAE,cAA2H,EAAE,KAA4E;YAC1Q,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QACD,0BAA0B,CAAC,MAA+C;YACzE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,MAAqB,EAAE,SAAS,CAAC,CAAC;QAChF,CAAC;QACD,WAAW,CAAC,QAAa,EAAE,MAAY,IAA4B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACxG,QAAQ,CAAC,OAAuC,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC5E,cAAc,CAAC,QAAa,EAAE,MAAW,IAAI,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACjF,iBAAiB,CAAC,MAA0F,IAAiB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAClK,IAAI,CAAC,OAA4B,EAAE,OAA6B,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACnI,OAAO,CAAC,OAA6B,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACxG,MAAM,CAAC,OAA4B,EAAE,OAAwB,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChI,SAAS,CAAC,OAAkC,IAAsB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;KAC/G;IAtDD,8CAsDC;IAED,MAAa,eAAe;QAA5B;YAIkB,sBAAiB,GAAG,IAAI,eAAO,EAAoB,CAAC;YACpD,uBAAkB,GAAG,IAAI,eAAO,EAAsB,CAAC;YAE/D,qCAAgC,GAAG,aAAK,CAAC,IAAI,CAAC;YAC9C,8CAAyC,GAAG,aAAK,CAAC,IAAI,CAAC;YACvD,YAAO,GAAiB,aAAK,CAAC,IAAI,CAAC;YAEpC,YAAO,GAAG,YAAY,CAAC;YAgCtB,iBAAY,GAAG,IAAI,GAAG,EAAO,CAAC;YAIvC,yBAAoB,GAAsB,SAAS,CAAC;YAwCpD,0BAAqB,GAAsB,SAAS,CAAC;YA2BrD,+CAA0C,GAAG,aAAK,CAAC,IAAI,CAAC;YAEhD,cAAS,GAAG,IAAI,GAAG,EAA+B,CAAC;YA8BlD,YAAO,GAAU,EAAE,CAAC;QAc9B,CAAC;QAlJA,UAAU,CAAC,OAAe,IAAU,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;QAC7D,UAAU,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7C,kBAAkB,KAAU,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAC1D,IAAI,gBAAgB,KAA8B,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QACxF,eAAe,CAAC,KAAuB,IAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtF,IAAI,iBAAiB,KAAgC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5F,kBAAkB,CAAC,KAAyB,IAAU,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAG5F,OAAO,CAAC,QAAa,EAAE,QAA8B;YACpD,OAAO,OAAO,CAAC,OAAO,CAAC;gBACtB,QAAQ;gBACR,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;gBAC3B,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,IAAI;gBACZ,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC;aACxB,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,UAAU,CAAC,SAA8D;YAC9E,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEzI,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC;QAID,KAAK,CAAC,MAAM,CAAC,SAAc,IAAsB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAI5F,QAAQ,CAAC,QAAa,EAAE,OAAsC;YAC7D,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,MAAM,IAAI,CAAC,oBAAoB,CAAC;aAChC;YAED,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAEhC,OAAO,OAAO,CAAC,OAAO,CAAC;gBACtB,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxC,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,EAAE,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC;gBACxB,IAAI,EAAE,CAAC;aACP,CAAC,CAAC;QACJ,CAAC;QAED,cAAc,CAAC,QAAa,EAAE,OAA4C;YACzE,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,MAAM,IAAI,CAAC,oBAAoB,CAAC;aAChC;YAED,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAEhC,OAAO,OAAO,CAAC,OAAO,CAAC;gBACtB,QAAQ;gBACR,KAAK,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxD,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC;aACxB,CAAC,CAAC;QACJ,CAAC;QAID,KAAK,CAAC,SAAS,CAAC,QAAa,EAAE,gBAA6C,EAAE,OAA2B;YACxG,MAAM,CAAA,GAAA,eAAO,CAAA,CAAC,CAAC,CAAC,CAAC;YAEjB,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC/B,MAAM,IAAI,CAAC,qBAAqB,CAAC;aACjC;YAED,OAAO,CAAC;gBACP,QAAQ;gBACR,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,IAAI;gBACZ,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC;aACxB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,OAAY,EAAE,OAAY,EAAE,UAAoB,IAAoC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;QACzH,IAAI,CAAC,OAAY,EAAE,OAAY,EAAE,UAAoB,IAAoC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;QACzH,UAAU,CAAC,SAAc,EAAE,QAAsC,EAAE,QAA6B,IAAoC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;QACpK,YAAY,CAAC,SAAc,IAAoC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;QAM/F,gBAAgB,CAAC,MAAc,EAAE,QAA6B;YAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAErC,OAAO,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1D,CAAC;QAED,WAAW,CAAC,MAAc;YACzB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;QAED,gBAAgB,CAAC,OAAe,IAAmB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACxF,iBAAiB,CAAC,QAAa,IAAa,OAAO,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7H,gBAAgB;YACf,OAAO;gBACN,EAAE,MAAM,EAAE,iBAAO,CAAC,IAAI,EAAE,YAAY,gCAAuD,EAAE;gBAC7F,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;aACtG,CAAC;QACH,CAAC;QACD,aAAa,CAAC,QAAa,EAAE,UAA0C;YACtE,IAAI,UAAU,iCAAqD,IAAI,kBAAO,EAAE;gBAC/E,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,SAAc,EAAE,QAAuD,IAAmB,CAAC;QAGrG,KAAK,CAAC,SAAc;YACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE7B,OAAO,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpF,CAAC;QAED,gBAAgB,CAAC,SAAc,IAAuB,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACnG,OAAO,KAAW,CAAC;QAEnB,KAAK,CAAC,aAAa,CAAC,MAAW,EAAE,OAA4B,IAA2B,OAAO,IAAI,CAAC,CAAC,CAAC;QACtG,KAAK,CAAC,OAAO,CAAC,MAAW,EAAE,MAAW,EAAE,SAA+B,IAA2B,OAAO,IAAI,CAAC,CAAC,CAAC;QAChH,KAAK,CAAC,OAAO,CAAC,MAAW,EAAE,MAAW,EAAE,SAA+B,IAA2B,OAAO,IAAI,CAAC,CAAC,CAAC;QAChH,KAAK,CAAC,SAAS,CAAC,QAAa,EAAE,OAA0F,IAA2B,OAAO,IAAI,CAAC,CAAC,CAAC;KAClK;IAhKD,0CAgKC;IAED,MAAa,4BAA6B,SAAQ,2DAAgC;QAEjF;YACC,KAAK,EAAE,CAAC;QACT,CAAC;QAED,kBAAkB,CAAC,iBAAqC;YACvD,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,YAAqB,CAAC,UAAU,CAAC;YAC5E,MAAM,SAAS,GAAG,UAAU,CAAC,YAAY,EAAE,CAAC;YAC5C,MAAM,KAAK,GAAG,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAElF,OAAO,UAAU,CAAC,eAAe,CAAC,KAAK,sBAAkC,CAAC;QAC3E,CAAC;KACD;IAbD,oEAaC;IAED,SAAgB,sBAAsB,CAAC,QAAa;QACnD,OAAO,oBAAoB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAFD,wDAEC;IAED,SAAgB,oBAAoB,CAAC,QAAa,EAAE,MAAM,GAAG,kBAAkB;QAC9E,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAFD,oDAEC;IAED,MAAa,oCAAqC,SAAQ,0DAA+B;QASxF;YACC,MAAM,kBAAkB,GAAG,8BAAsB,CAAC;YAClD,MAAM,UAAU,GAAG,IAAI,oBAAc,EAAE,CAAC;YACxC,MAAM,WAAW,GAAG,IAAI,yBAAW,CAAC,UAAU,CAAC,CAAC;YAChD,WAAW,CAAC,gBAAgB,CAAC,iBAAO,CAAC,IAAI,EAAE,IAAI,uDAA0B,EAAE,CAAC,CAAC;YAC7E,WAAW,CAAC,gBAAgB,CAAC,iBAAO,CAAC,QAAQ,EAAE,IAAI,uDAA0B,EAAE,CAAC,CAAC;YAEjF,KAAK,CAAC,IAAI,0CAAkB,CAAC,6BAAa,CAAC,EAAE,kBAAkB,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;YAE1F,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC5B,CAAC;QAED,kBAAkB;YACjB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACzE,CAAC;QAED,iBAAiB;YAChB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,CAAC;QAEQ,KAAK,CAAC,MAAM,CAAC,UAAkC,EAAE,OAAmD,EAAE,SAAkB,EAAE,IAAU,EAAE,KAAyB;YACvK,MAAM,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAEhE,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAG,EAAE,CAAC;aACpC;QACF,CAAC;QAEQ,KAAK,CAAC,aAAa,CAAC,UAAkC;YAC9D,MAAM,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAG,EAAE,CAAC;aACnC;QACF,CAAC;QAED,KAAK,CAAC,iBAAiB,CAAC,UAAkC;YACzD,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAEzD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAErE,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC;KACD;IAxDD,oFAwDC;IAED,MAAa,oBAAoB;QAAjC;YAOkB,sBAAiB,GAAG,IAAI,eAAO,EAAuB,CAAC;YAGvD,oBAAe,GAAG,IAAI,eAAO,EAAqB,CAAC;YAGnD,gBAAW,GAAG,IAAI,eAAO,EAAQ,CAAC;YAKnD,oBAAe,GAAoB,EAAE,CAAC;QAoBvC,CAAC;QA9BA,IAAI,gBAAgB,KAAiC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAG3F,IAAI,cAAc,KAA+B,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;QAGrF,IAAI,aAAa,KAAkB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAEnE,KAAK,CAAC,IAAI,KAAoB,CAAC;QAI/B,YAAY,CAAC,MAAM,eAAsB;YACxC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAE1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBACzB,IAAI,EAAE,CAAC,CAAC,EAAE;oBACT,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBACD,MAAM;aACN,CAAC,CAAC;QACJ,CAAC;QAED,kBAAkB,CAAC,KAA0B,IAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE5F,gBAAgB,CAAC,KAAwB,IAAU,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEtF,QAAQ;YACP,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC;KACD;IAtCD,oDAsCC;IAED,MAAa,uBAAuB;QAApC;YAGC,WAAM,iBAAwB;QAK/B,CAAC;QAHA,IAAI,CAAC,KAAiC;YACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;KACD;IARD,0DAQC;IAED,MAAa,qBAAqB;QAAlC;YAEC,UAAK,GAAoB,EAAE,CAAC;YAC5B,WAAM,iBAAwB;QAK/B,CAAC;QAHA,IAAI,CAAC,OAAsB,EAAE,EAAU;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;KACD;IARD,sDAQC;IAED,MAAa,oCAAoC;QAIhD,YAAoB,uBAAuB,IAAI,mDAAwB,EAAE;YAArD,yBAAoB,GAApB,oBAAoB,CAAiC;QAAI,CAAC;QAE9E,wBAAwB;YACvB,OAAO,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC;QAC1B,CAAC;QAED,QAAQ,CAAI,QAAa,EAAE,IAAU,EAAE,IAAU;YAChD,MAAM,QAAQ,GAAqB,mBAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YAClF,MAAM,OAAO,GAAuB,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC7I,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,WAAW,CAAC,QAAa,EAAE,GAAW,EAAE,KAAU,EAAE,mBAAyC;YAC5F,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;KACD;IAnBD,oFAmBC;IAED,MAAa,wBAAwB;QAEpC,YAA6B,sBAA2C,EAAmB,eAAuB;YAArF,2BAAsB,GAAtB,sBAAsB,CAAqB;YAAmB,oBAAe,GAAf,eAAe,CAAQ;YAEzG,iBAAY,GAAmC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC;YACxF,4BAAuB,GAAgB,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC;YAE3F,oBAAe,GAAkC,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAe,EAAE;gBAC1J,OAAO;oBACN,IAAI,EAAE,CAAC,CAAC,IAAI;oBACZ,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC5F,CAAC;YACH,CAAC,CAAC,CAAC,CAAC;QAVkH,CAAC;QAWvH,KAAK,CAAC,QAAa,EAAE,IAAmB,IAAiB,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzI,IAAI,CAAC,QAAa,IAAoB,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/G,KAAK,CAAC,QAAa,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAChH,OAAO,CAAC,QAAa,IAAmC,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACpI,MAAM,CAAC,QAAa,EAAE,IAAuB,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAEjJ,MAAM,CAAC,IAAS,EAAE,EAAO,EAAE,IAA0B,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9K,IAAI,CAAC,IAAS,EAAE,EAAO,EAAE,IAA0B,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3K,QAAQ,CAAC,QAAa,IAAyB,OAAO,IAAI,CAAC,sBAAsB,CAAC,QAAS,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7H,SAAS,CAAC,QAAa,EAAE,OAAmB,EAAE,IAAsB,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAU,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAErL,IAAI,CAAC,QAAa,EAAE,IAAqB,IAAqB,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9I,KAAK,CAAC,EAAU,IAAmB,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,EAAU,EAAE,GAAW,EAAE,IAAgB,EAAE,MAAc,EAAE,MAAc,IAAqB,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7K,KAAK,CAAC,EAAU,EAAE,GAAW,EAAE,IAAgB,EAAE,MAAc,EAAE,MAAc,IAAqB,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAM,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAE/K,cAAc,CAAC,QAAa,EAAE,IAA2B,EAAE,KAAwB,IAAsC,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAe,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAElN,cAAc,CAAC,QAAa,IAAS,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KAC7G;IAlCD,4DAkCC;IAED,MAAa,8BAA+B,SAAQ,uDAA0B;QAA9E;;YACmB,iBAAY,GAC7B;8CACkD;yCACH,CAAC;QA2BlD,CAAC;QAxBA,cAAc,CAAC,QAAa;YAC3B,MAAM,WAAW,GAAG,EAAE,GAAG,IAAI,CAAC;YAC9B,MAAM,MAAM,GAAG,CAAA,GAAA,2BAAkB,CAAA,CAAa,IAAI,CAAC,EAAE,CAAC,iBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,iBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAErH,CAAC,KAAK,IAAI,EAAE;gBACX,IAAI;oBACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE3C,IAAI,MAAM,GAAG,CAAC,CAAC;oBACf,OAAO,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;wBAC5B,MAAM,CAAA,GAAA,eAAO,CAAA,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC;wBAChE,MAAM,IAAI,WAAW,CAAC;qBACtB;oBAED,MAAM,CAAA,GAAA,eAAO,CAAA,CAAC,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,GAAG,EAAE,CAAC;iBACb;gBAAC,OAAO,KAAK,EAAE;oBACf,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAClB;YACF,CAAC,CAAC,EAAE,CAAC;YAEL,OAAO,MAAM,CAAC;QACf,CAAC;KACD;IA/BD,wEA+BC;IAEY,QAAA,cAAc,mBAAsB,aAAa,EAAE,SAAS,IAAK,iBAAO,EAAG;IAExF,MAAa,eAAe;QAA5B;YAIS,cAAS,GAAG,IAAI,CAAC;YAIjB,sBAAiB,GAAG,IAAI,eAAO,EAAW,CAAC;YAC1C,qBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAiBhD,gBAAW,GAAG,mBAAW,CAAC,IAAI,CAAC;YACxC,2BAAsB,GAAG,aAAK,CAAC,IAAI,CAAC;QACrC,CAAC;QAvBA,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,KAAK,CAAC,YAAY,KAAuB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAKjE,QAAQ,CAAC,KAAc;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC;QAED,KAAK,CAAC,OAAO,KAAoB,CAAC;QAClC,KAAK,CAAC,MAAM,KAAoB,CAAC;QACjC,KAAK,CAAC,KAAK,KAAoB,CAAC;QAEhC,KAAK,CAAC,KAAK,CAAC,OAA6B,IAAmB,CAAC;QAE7D,KAAK,CAAC,UAAU,CAAC,IAAkD,EAAE,IAAyB,IAAmB,CAAC;QAElH,KAAK,CAAC,gBAAgB,KAAoB,CAAC;KAI3C;IA5BD,0CA4BC;IAED,MAAa,6BAA8B,SAAQ,qDAAyB;QAElE,0BAA0B,CAAC,aAAkB;YACrD,KAAK,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC;QACjD,CAAC;KACD;IALD,sEAKC;IAED,MAAa,+BAAgC,SAAQ,yCAAmB;QAE9D,UAAU;YAClB,OAAO,IAAI,CAAC;QACb,CAAC;KACD;IALD,0EAKC;IAED,MAAa,eAAgB,SAAQ,oBAAW;QAE/C,YAAmB,QAAa,EAAmB,OAAe;YACjE,KAAK,EAAE,CAAC;YADU,aAAQ,GAAR,QAAQ,CAAK;YAAmB,YAAO,GAAP,OAAO,CAAQ;QAElE,CAAC;QAED,IAAa,MAAM;YAClB,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEQ,OAAO;YACf,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;KACD;IAbD,0CAaC;IAED,SAAgB,kBAAkB,CAAC,EAAU,EAAE,MAAqC,EAAE,iBAA0B;QAC/G,MAAM,UAAW,SAAQ,uBAAU;YAIlC;gBACC,KAAK,CAAC,EAAE,EAAE,qCAAoB,EAAE,IAAI,mCAAgB,EAAE,EAAE,IAAI,0CAAkB,EAAE,CAAC,CAAC;gBAClF,IAAI,CAAC,wBAAwB,GAAG,IAAI,6CAAqB,EAAE,CAAC;YAC7D,CAAC;YAEQ,KAAK,CAAC,QAAQ,CAAC,KAAkB,EAAE,OAAkC,EAAE,OAA2B,EAAE,KAAwB;gBACpI,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;gBAE/C,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC;YAEQ,KAAK,KAAa,OAAO,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,KAAW,CAAC;YAClB,YAAY,KAAW,CAAC;YAExB,IAAa,uBAAuB;gBACnC,OAAO,IAAI,CAAC,wBAAwB,CAAC;YACtC,CAAC;SACD;QAED,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAAkB,yBAAU,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,yBAAgB,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QAEzJ,IAAI,iBAAiB,EAAE;YAMtB,MAAM,wCAAwC;gBAE7C,YAAY,CAAC,WAAwB;oBACpC,OAAO,IAAI,CAAC;gBACb,CAAC;gBAED,SAAS,CAAC,WAAwB;oBACjC,IAAI,eAAe,GAAwB,WAAW,CAAC;oBACvD,IAAI,SAAS,GAAyB;wBACrC,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE;qBAC7C,CAAC;oBAEF,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC;gBAED,WAAW,CAAC,oBAA2C,EAAE,qBAA6B;oBACrF,IAAI,SAAS,GAAyB,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;oBAExE,OAAO,IAAI,mBAAmB,CAAC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,iBAAkB,CAAC,CAAC;gBACnF,CAAC;aACD;YAED,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAA8B,yBAAgB,CAAC,oBAAoB,CAAC,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,wCAAwC,CAAC,CAAC,CAAC;SAC5L;QAED,OAAO,WAAW,CAAC;IACpB,CAAC;IA7DD,gDA6DC;IAED,SAAgB,sBAAsB;QACrC,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAAkB,yBAAU,CAAC,OAAO,CAAC,CAAC,cAAc,CAC9E,yBAAgB,CAAC,MAAM,CACtB,kBAAkB,EAClB,kBAAkB,CAAC,EAAE,EACrB,kBAAkB,CAClB,EACD,CAAC,IAAI,4BAAc,CAAc,iCAAe,CAAC,CAAC,CAClD,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAbD,wDAaC;IAED,SAAgB,0BAA0B;QACzC,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAAkB,yBAAU,CAAC,OAAO,CAAC,CAAC,cAAc,CAC9E,yBAAgB,CAAC,MAAM,CACtB,sBAAsB,EACtB,sBAAsB,CAAC,EAAE,EACzB,aAAa,CACb,EACD;YACC,IAAI,4BAAc,CAAc,iDAAuB,CAAC;YACxD,IAAI,4BAAc,CAAc,yCAAmB,CAAC;SACpD,CACD,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAhBD,gEAgBC;IAED,SAAgB,4BAA4B;QAC3C,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAAkB,yBAAU,CAAC,OAAO,CAAC,CAAC,cAAc,CAC9E,yBAAgB,CAAC,MAAM,CACtB,mCAAgB,EAChB,mCAAgB,CAAC,EAAE,EACnB,aAAa,CACb,EACD;YACC,IAAI,4BAAc,CAAC,8BAAqB,CAAC;SACzC,CACD,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAfD,oEAeC;IAED,SAAgB,sBAAsB;QACrC,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE1C,WAAW,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,CAAkB,yBAAU,CAAC,OAAO,CAAC,CAAC,cAAc,CAC9E,yBAAgB,CAAC,MAAM,CACtB,+BAAc,EACd,+BAAc,CAAC,EAAE,EACjB,kBAAkB,CAClB,EACD;YACC,IAAI,4BAAc,CAAC,iCAAe,CAAC;SACnC,CACD,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAfD,wDAeC;IAED,MAAa,mBAAoB,SAAQ,oBAAW;QAWnD,YACQ,QAAa,EACZ,OAAe;YAEvB,KAAK,EAAE,CAAC;YAHD,aAAQ,GAAR,QAAQ,CAAK;YACZ,YAAO,GAAP,OAAO,CAAQ;YAXf,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE3C,gBAAW,GAAG,KAAK,CAAC;YACpB,aAAQ,GAAG,KAAK,CAAC;YACjB,eAAU,GAAG,KAAK,CAAC;YACnB,gBAAW,GAAG,KAAK,CAAC;YACpB,UAAK,GAAG,KAAK,CAAC;YACN,UAAK,GAAG,KAAK,CAAC;YAmDtB,gBAAW,GAA4B,SAAS,CAAC;QA5CjD,CAAC;QAED,IAAa,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACrC,OAAO,KAAmC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,OAAO,CAAC,KAAkB,IAAa,OAAO,CAAC,CAAC,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,KAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,KAAK,YAAY,mBAAmB,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/M,oBAAoB,CAAC,QAAa,IAAU,CAAC;QAC7C,KAAK,CAAC,WAAW,CAAC,QAAgB,IAAI,CAAC;QACvC,WAAW,KAAK,OAAO,SAAS,CAAC,CAAC,CAAC;QACnC,gBAAgB,CAAC,IAAY,IAAU,CAAC;QACxC,uBAAuB,CAAC,WAAmB,IAAU,CAAC;QACtD,oBAAoB,CAAC,QAAgB,IAAI,CAAC;QAC1C,OAAO,CAAC,IAAY,IAAI,CAAC;QACzB,gBAAgB,CAAC,IAAY,IAAI,CAAC;QAClC,oBAAoB,KAAW,CAAC;QAChC,aAAa;YACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC;QACQ,KAAK,CAAC,IAAI,CAAC,OAAwB,EAAE,OAAsB;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,IAAI,CAAC;QACb,CAAC;QACQ,KAAK,CAAC,MAAM,CAAC,OAAwB,EAAE,OAAsB;YACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,IAAI,CAAC;QACb,CAAC;QACQ,KAAK,CAAC,MAAM,CAAC,KAAsB,EAAE,OAAwB;YACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;QACD,QAAQ,KAAW,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QAC9B,OAAO;YACf,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QACQ,UAAU;YAClB,OAAO,KAAK,CAAC;QACd,CAAC;QACD,UAAU,KAAc,OAAO,KAAK,CAAC,CAAC,CAAC;QAC9B,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,CAAC;QAEQ,MAAM,KAA8B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;KACvE;IA9DD,kDA8DC;IAED,MAAa,cAAe,SAAQ,uBAAU;QAEpC,SAAS;YACjB,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1B,CAAC;QAED,UAAU;YACT,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,oCAA+C,CAAC;YACxF,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;gBAChD,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC;aAC7B;YAED,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,iCAA4C,CAAC;YAClF,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBAC7C,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;aAC1B;QACF,CAAC;KACD;IAjBD,wCAiBC;IAEM,KAAK,UAAU,gBAAgB,CAAC,oBAA2C,EAAE,WAA4B;QAC/G,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAEvB,MAAM,IAAI,CAAC,SAAS,CAAC;QAErB,OAAO,IAAI,CAAC;IACb,CAAC;IARD,4CAQC;IAED,MAAa,eAAe;QAA5B;YAGC,oBAAe,GAAoB,SAAS,CAAC;QAK9C,CAAC;QAHA,QAAQ;YACP,OAAO,sBAAU,CAAC,IAAI,CAAC;QACxB,CAAC;KACD;IARD,0CAQC;IAED,MAAa,eAAe;QAI3B,YAA6B,mBAAwB,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;YAA7E,qBAAgB,GAAhB,gBAAgB,CAA6D;YAWjG,qBAAgB,GAAG,iBAAO,CAAC,YAAY,CAAC;QAX6D,CAAC;QAE/G,IAAI,IAAI,KAAK,OAAO,OAAO,CAAC,OAAO,CAAC,oBAAS,CAAC,CAAC,CAAC,YAAK,CAAC,CAAC,CAAC,YAAK,CAAC,CAAC,CAAC,CAAC;QAEjE,KAAK,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAClD,IAAI,gBAAgB,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAExD,KAAK,CAAC,OAAO,CAAC,IAAY;YACzB,OAAO,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;KAGD;IAhBD,0CAgBC;IAED,MAAa,8BAA+B,SAAQ,uDAA0B;QAEpE,GAAG,CAAC,QAAa,EAAE,KAA0B;YACrD,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACnC,CAAC;QAEQ,MAAM,CAAC,QAAa;YAC5B,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;KACD;IATD,wEASC;IAMD,SAAgB,uBAAuB,CAAC,KAAc;QACrD,MAAM,SAAS,GAAG,KAA6C,CAAC;QAEhE,OAAO,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,oBAAoB,CAAC;IACxC,CAAC;IAJD,0DAIC;IAED,MAAa,qBAAqB;QAAlC;YAGC,8BAAyB,GAAG,aAAK,CAAC,IAAI,CAAC;QAWxC,CAAC;QATA,KAAK,CAAC,uBAAuB,CAAC,OAAwC,EAAE,eAAwB,IAAmC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChL,KAAK,CAAC,uBAAuB,CAAC,SAA+B,IAAmB,CAAC;QACjF,KAAK,CAAC,iBAAiB,CAAC,OAAkB,IAAmB,CAAC;QAC9D,KAAK,CAAC,oBAAoB,CAAC,UAAiB,IAAmB,CAAC;QAChE,KAAK,CAAC,mBAAmB,KAAoB,CAAC;QAC9C,KAAK,CAAC,iBAAiB,KAA+B,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC7F,KAAK,CAAC,kBAAkB,KAA8C,OAAO,EAAE,CAAC,CAAC,CAAC;QAClF,KAAK,CAAC,cAAc,CAAC,IAAS,IAA2C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACtH,KAAK,CAAC,sBAAsB,CAAC,aAAkB,IAAmC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;KAC/H;IAdD,sDAcC;IAED,MAAa,2BAA2B;QAGvC,KAAK,CAAC,sBAAsB;YAC3B,OAAO;gBACN,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,SAAS;aACf,CAAC;QACH,CAAC;QACD,KAAK,CAAC,uBAAuB;YAC5B,OAAO,EAAE,CAAC;QACX,CAAC;QAED,KAAK,CAAC,mBAAmB,KAAmB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACzF,KAAK,CAAC,yBAAyB,KAAmB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC/F,KAAK,CAAC,4BAA4B,KAAmB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAClG,KAAK,CAAC,wBAAwB,KAAmB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC9F,wBAAwB,CAAC,cAAsB,EAAE,KAAU,IAAS,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;KACjH;IAlBD,kEAkBC;IAED,MAAa,kCAAkC;QAE9C,WAAW,CAAC,iBAAqC,IAAU,CAAC;QAC5D,KAAK,CAAC,wBAAwB,CAAC,iBAAqC,EAAE,OAAyC,IAAmB,CAAC;QACnI,KAAK,CAAC,iBAAiB,CAAC,OAAyC,IAA+B,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QACtJ,KAAK,CAAC,eAAe,CAAC,OAAyC,IAAqB,OAAO,UAAU,CAAC,CAAC,CAAC;QACxG,KAAK,CAAC,mBAAmB,CAAC,OAAyC,IAAgC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC/G,KAAK,CAAC,mBAAmB,KAAmC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACjF,kBAAkB,CAAC,GAAW,EAAE,EAAmB,IAAyB,OAAO,SAAS,CAAC,CAAC,CAAC;QAC/F,yBAAyB,CAAC,GAAW,IAAyB,OAAO,SAAS,CAAC,CAAC,CAAC;KACjF;IAVD,gFAUC;IAED,MAAa,wBAAwB;QAArC;YAGC,kBAAa,GAAG,aAAK,CAAC,IAAI,CAAC;YAC3B,0BAAqB,GAAG,aAAK,CAAC,IAAI,CAAC;YACnC,wBAAmB,GAAG,aAAK,CAAC,IAAI,CAAC;YACjC,qBAAgB,GAAG,aAAK,CAAC,IAAI,CAAC;QAa/B,CAAC;QAXA,KAAK,CAAC,aAAa,CAAC,iBAAqC,EAAE,GAAW,EAAE,IAAY,EAAE,IAAY,EAAE,GAAwB,EAAE,mBAA4B,EAAE,aAAsB;YACjL,OAAO,IAAI,wBAAwB,CAAC,aAAa,CAAC,CAAC;QACpD,CAAC;QACD,KAAK,CAAC,eAAe,CAAC,EAAU,IAAgD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAC7H,KAAK,CAAC,aAAa,KAAiC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACjG,qBAAqB,CAAC,UAA4B,IAAqB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACpH,mBAAmB,KAAmC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACnG,KAAK,CAAC,qBAAqB,CAAC,YAAoE,IAAI,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACjJ,KAAK,CAAC,qBAAqB,KAAgD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QACxH,KAAK,CAAC,yBAAyB,KAAoB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChG,aAAa,CAAC,EAAU,EAAE,IAAY,IAAmB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;KACtG;IAnBD,4DAmBC;IAED,MAAM,wBAAwB;QAG7B,YACU,aAAsB;YAAtB,kBAAa,GAAb,aAAa,CAAS;YAHhC,OAAE,GAAW,CAAC,CAAC;YAOf,kBAAa,GAAG,aAAK,CAAC,IAAI,CAAC;YAC3B,kBAAa,GAAG,aAAK,CAAC,IAAI,CAAC;YAC3B,mBAAc,GAAG,aAAK,CAAC,IAAI,CAAC;YAC5B,0BAAqB,GAAG,aAAK,CAAC,IAAI,CAAC;YACnC,8BAAyB,GAAG,aAAK,CAAC,IAAI,CAAC;QANvC,CAAC;QAOD,KAAK,CAAC,KAAK,KAAyB,OAAO,SAAS,CAAC,CAAC,CAAC;QACvD,QAAQ,CAAC,SAAkB,IAAU,CAAC;QACtC,KAAK,CAAC,IAAY,IAAU,CAAC;QAC7B,MAAM,CAAC,IAAY,EAAE,IAAY,IAAU,CAAC;QAC5C,oBAAoB,CAAC,SAAiB,IAAU,CAAC;QACjD,KAAK,CAAC,aAAa,KAAsB,OAAO,EAAE,CAAC,CAAC,CAAC;QACrD,KAAK,CAAC,MAAM,KAAsB,OAAO,EAAE,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,KAAsB,OAAO,CAAC,CAAC,CAAC,CAAC;QACjD,KAAK,CAAC,aAAa,CAAC,IAAY,IAAmB,CAAC;KACpD;IAED,MAAa,qBAAqB;QAAlC;YAIU,WAAM,GAAG,aAAK,CAAC,IAAI,CAAC;YACpB,WAAM,GAAG,aAAK,CAAC,IAAI,CAAC;YAEpB,gBAAW,GAAG,SAAU,CAAC;QAuBnC,CAAC;QAlBA,KAAK,CAAC,IAAI,CAA2B,KAAyD,EAAE,OAA8C,EAAE,KAAyB;YACxK,IAAI,CAAA,GAAA,eAAO,CAAA,CAAC,KAAK,CAAC,EAAE;gBACnB,OAAY,EAAE,KAAK,EAAE,cAAc,EAAE,WAAW,EAAE,kBAAkB,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC;aAC9F;iBAAM;gBACN,OAAO,SAAS,CAAC;aACjB;QACF,CAAC;QAED,KAAK,CAAC,KAAK,CAAC,OAAuB,EAAE,KAAyB,IAAqB,OAAO,OAAO,CAAC,CAAC,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAE/I,eAAe,KAA8C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACnG,cAAc,KAAgB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACpE,KAAK,KAAW,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,KAAW,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACvD,QAAQ,CAAC,IAAa,EAAE,aAA2C,IAAU,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACnH,MAAM,KAAoB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,KAAoB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,KAAoB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChE;IA9BD,sDA8BC;IAED,MAAa,uBAAuB;QAInC,cAAc,CAAC,QAAa,EAAE,QAAa,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QACvE,KAAK,CAAC,WAAW,CAAC,QAAa,EAAE,QAAa,EAAE,oBAA6B,EAAE,kBAA0B,IAA4C,OAAO,IAAI,CAAC,CAAC,CAAC;QACnK,mBAAmB,CAAC,QAAa,EAAE,QAAa,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC5E,KAAK,CAAC,gBAAgB,CAAC,QAAa,EAAE,QAAa,EAAE,oBAA6B,IAA+B,OAAO,IAAI,CAAC,CAAC,CAAC;QAC/H,KAAK,CAAC,uBAAuB,CAAC,QAAa,EAAE,KAAoC,IAAqC,OAAO,SAAS,CAAC,CAAC,CAAC;QACzI,oBAAoB,CAAC,QAAa,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC9D,KAAK,CAAC,iBAAiB,CAAC,QAAa,EAAE,KAAa,IAAmD,OAAO,IAAI,CAAC,CAAC,CAAC;QACrH,mBAAmB,CAAC,QAAa,IAAa,OAAO,KAAK,CAAC,CAAC,CAAC;QAC7D,KAAK,CAAC,gBAAgB,CAAC,QAAa,EAAE,KAAa,EAAE,EAAW,IAAkD,OAAO,IAAI,CAAC,CAAC,CAAC;KAChI;IAbD,0DAaC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileEditorInput } from 'vs/workbench/contrib/files/common/editors/fileEditorInput';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IEditorInputWithOptions, IEditorIdentifier, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, IEditorInput, IEditorPane, IEditorCloseEvent, IEditorPartOptions, IRevertOptions, GroupIdentifier, EditorInput, EditorOptions, EditorsOrder, IFileEditorInput, IEditorInputFactoryRegistry, IEditorInputSerializer, EditorExtensions, ISaveOptions, IMoveResult, ITextEditorPane, ITextDiffEditorPane, IVisibleEditorPane, IEditorOpenContext, SideBySideEditorInput, IEditorMoveEvent, EditorExtensions as Extensions } from 'vs/workbench/common/editor';\nimport { EditorServiceImpl, IEditorGroupView, IEditorGroupsAccessor, IEditorGroupTitleHeight } from 'vs/workbench/browser/parts/editor/editor';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchLayoutService, Parts, Position as PartPosition } from 'vs/workbench/services/layout/browser/layoutService';\nimport { TextModelResolverService } from 'vs/workbench/services/textmodelResolver/common/textModelResolverService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IEditorOptions, IResourceEditorInput, IEditorModel, ITextEditorOptions, IResourceEditorInputIdentifier } from 'vs/platform/editor/common/editor';\nimport { IUntitledTextEditorService, UntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ILifecycleService, BeforeShutdownEvent, ShutdownReason, StartupKind, LifecyclePhase, WillShutdownEvent } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { FileOperationEvent, IFileService, IFileStat, IResolveFileResult, FileChangesEvent, IResolveFileOptions, ICreateFileOptions, IFileSystemProvider, FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, IFileStatWithMetadata, IResolveMetadataFileOptions, IWriteFileOptions, IReadFileOptions, IFileContent, IFileStreamContent, FileOperationError, IFileSystemProviderWithFileReadStreamCapability, FileReadStreamOptions, IReadFileStreamOptions } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ModeServiceImpl } from 'vs/editor/common/services/modeServiceImpl';\nimport { ModelServiceImpl } from 'vs/editor/common/services/modelServiceImpl';\nimport { IResourceEncoding, ITextFileService, IReadTextFileOptions, ITextFileStreamContent, IWriteTextFileOptions, ITextFileEditorModel } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IInstantiationService, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { MenuBarVisibility, IWindowOpenable, IOpenWindowOptions, IOpenEmptyWindowOptions } from 'vs/platform/windows/common/windows';\nimport { TestWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { IPosition, Position as EditorPosition } from 'vs/editor/common/core/position';\nimport { IMenuService, MenuId, IMenu } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService, MockKeybindingService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ITextBufferFactory, DefaultEndOfLine, EndOfLinePreference, ITextSnapshot } from 'vs/editor/common/model';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IDialogService, IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, IFileDialogService, ConfirmResult } from 'vs/platform/dialogs/common/dialogs';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IDecorationsService, IResourceDecorationChangeEvent, IDecoration, IDecorationData, IDecorationsProvider } from 'vs/workbench/services/decorations/browser/decorations';\nimport { IDisposable, toDisposable, Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IEditorGroupsService, IEditorGroup, GroupsOrder, GroupsArrangement, GroupDirection, IAddGroupOptions, IMergeGroupOptions, IEditorReplacement, IGroupChangeEvent, IFindGroupScope, EditorGroupLayout, ICloseEditorOptions, GroupOrientation, ICloseAllEditorsOptions, ICloseEditorsFilter } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService, IOpenEditorOverrideHandler, ISaveEditorsOptions, IRevertAllEditorsOptions, IResourceEditorInputType, SIDE_GROUP_TYPE, ACTIVE_GROUP_TYPE, IOpenEditorOverrideEntry } from 'vs/workbench/services/editor/common/editorService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorRegistry, EditorDescriptor } from 'vs/workbench/browser/editor';\nimport { Dimension, IDimension } from 'vs/base/browser/dom';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { timeout } from 'vs/base/common/async';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { ViewletDescriptor, Viewlet } from 'vs/workbench/browser/viewlet';\nimport { IViewlet } from 'vs/workbench/common/viewlet';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IProcessEnvironment, isLinux, isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { Part } from 'vs/workbench/browser/part';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IPanel } from 'vs/workbench/common/panel';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { bufferToStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Schemas } from 'vs/base/common/network';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport product from 'vs/platform/product/common/product';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IWorkingCopyService, WorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IWorkingCopyIdentifier } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IFilesConfigurationService, FilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IAccessibilityService, AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { BrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { BrowserTextFileService } from 'vs/workbench/services/textfile/browser/browserTextFileService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { createTextBufferFactoryFromStream } from 'vs/editor/common/model/textModel';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { Direction } from 'vs/base/browser/ui/grid/grid';\nimport { IProgressService, IProgressOptions, IProgressWindowOptions, IProgressNotificationOptions, IProgressCompositeOptions, IProgress, IProgressStep, Progress } from 'vs/platform/progress/common/progress';\nimport { IWorkingCopyFileService, WorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { CodeEditorService } from 'vs/workbench/services/editor/browser/codeEditorService';\nimport { EditorPart } from 'vs/workbench/browser/parts/editor/editorPart';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IChange, IDiffEditor, IEditor } from 'vs/editor/common/editorCommon';\nimport { IInputBox, IInputOptions, IPickOptions, IQuickInputButton, IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { QuickInputService } from 'vs/workbench/services/quickinput/browser/quickInputService';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { win32, posix } from 'vs/base/common/path';\nimport { TestContextService, TestStorageService, TestTextResourcePropertiesService, TestExtensionService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { IViewsService, IView, ViewContainer, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentityService';\nimport { TextFileEditorModelManager } from 'vs/workbench/services/textfile/common/textFileEditorModelManager';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { EncodingOracle, IEncodingOverride } from 'vs/workbench/services/textfile/browser/textFileService';\nimport { UTF16le, UTF16be, UTF8_with_bom } from 'vs/workbench/services/textfile/common/encoding';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { InMemoryWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackupService';\nimport { BrowserWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/browser/workingCopyBackupService';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { TextResourceEditor } from 'vs/workbench/browser/parts/editor/textResourceEditor';\nimport { TestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { TextFileEditor } from 'vs/workbench/contrib/files/browser/editors/textFileEditor';\nimport { ResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { SideBySideEditor } from 'vs/workbench/browser/parts/editor/sideBySideEditor';\nimport { IEnterWorkspaceResult, IRecent, IRecentlyOpened, IWorkspaceFolderCreationData, IWorkspaceIdentifier, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { TestWorkspaceTrustManagementService } from 'vs/workbench/services/workspaces/test/common/testWorkspaceTrustService';\nimport { ILocalTerminalService, IShellLaunchConfig, ITerminalChildProcess, ITerminalsLayoutInfo, ITerminalsLayoutInfoById } from 'vs/platform/terminal/common/terminal';\nimport { IProcessDetails, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { isArray } from 'vs/base/common/types';\nimport { IShellLaunchConfigResolveOptions, ITerminalProfile, ITerminalProfileResolverService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { EditorOverrideService } from 'vs/workbench/services/editor/browser/editorOverrideService';\nimport { FILE_EDITOR_INPUT_ID } from 'vs/workbench/contrib/files/common/files';\nimport { IEditorOverrideService } from 'vs/workbench/services/editor/common/editorOverrideService';\nimport { IWorkingCopyEditorService, WorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\nimport { IElevatedFileService } from 'vs/workbench/services/files/common/elevatedFileService';\nimport { BrowserElevatedFileService } from 'vs/workbench/services/files/browser/elevatedFileService';\nimport { TextDiffEditor } from 'vs/workbench/browser/parts/editor/textDiffEditor';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { IDiffComputationResult, IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { TextEdit, IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport function createFileEditorInput(instantiationService: IInstantiationService, resource: URI): FileEditorInput {\n\treturn instantiationService.createInstance(FileEditorInput, resource, undefined, undefined, undefined, undefined, undefined);\n}\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerFileEditorInputFactory({\n\n\ttypeId: FILE_EDITOR_INPUT_ID,\n\n\tcreateFileEditorInput: (resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredMode, instantiationService): IFileEditorInput => {\n\t\treturn instantiationService.createInstance(FileEditorInput, resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredMode);\n\t},\n\n\tisFileEditorInput: (obj): obj is IFileEditorInput => {\n\t\treturn obj instanceof FileEditorInput;\n\t}\n});\n\nexport class TestTextResourceEditor extends TextResourceEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): IEditor {\n\t\treturn this.instantiationService.createInstance(TestCodeEditor, parent, configuration, {});\n\t}\n}\n\nexport class TestTextFileEditor extends TextFileEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): IEditor {\n\t\treturn this.instantiationService.createInstance(TestCodeEditor, parent, configuration, {});\n\t}\n}\n\nexport interface ITestInstantiationService extends IInstantiationService {\n\tstub<T>(service: ServiceIdentifier<T>, ctor: any): T;\n}\n\nexport function workbenchInstantiationService(\n\toverrides?: {\n\t\ttextFileService?: (instantiationService: IInstantiationService) => ITextFileService;\n\t\tpathService?: (instantiationService: IInstantiationService) => IPathService,\n\t\teditorService?: (instantiationService: IInstantiationService) => IEditorService,\n\t\tcontextKeyService?: (instantiationService: IInstantiationService) => IContextKeyService,\n\t},\n\tdisposables: DisposableStore = new DisposableStore()\n): ITestInstantiationService {\n\tconst instantiationService = new TestInstantiationService(new ServiceCollection([ILifecycleService, new TestLifecycleService()]));\n\n\tinstantiationService.stub(IEditorWorkerService, new TestEditorWorkerService());\n\tinstantiationService.stub(IWorkingCopyService, disposables.add(new WorkingCopyService()));\n\tinstantiationService.stub(IEnvironmentService, TestEnvironmentService);\n\tinstantiationService.stub(IWorkbenchEnvironmentService, TestEnvironmentService);\n\tconst contextKeyService = overrides?.contextKeyService ? overrides.contextKeyService(instantiationService) : instantiationService.createInstance(MockContextKeyService);\n\tinstantiationService.stub(IContextKeyService, contextKeyService);\n\tinstantiationService.stub(IProgressService, new TestProgressService());\n\tconst workspaceContextService = new TestContextService(TestWorkspace);\n\tinstantiationService.stub(IWorkspaceContextService, workspaceContextService);\n\tconst configService = new TestConfigurationService();\n\tinstantiationService.stub(IConfigurationService, configService);\n\tinstantiationService.stub(IFilesConfigurationService, disposables.add(new TestFilesConfigurationService(contextKeyService, configService)));\n\tinstantiationService.stub(ITextResourceConfigurationService, new TestTextResourceConfigurationService(configService));\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\tinstantiationService.stub(IPathService, overrides?.pathService ? overrides.pathService(instantiationService) : new TestPathService());\n\tconst layoutService = new TestLayoutService();\n\tinstantiationService.stub(IWorkbenchLayoutService, layoutService);\n\tinstantiationService.stub(IDialogService, new TestDialogService());\n\tconst accessibilityService = new TestAccessibilityService();\n\tinstantiationService.stub(IAccessibilityService, accessibilityService);\n\tinstantiationService.stub(IFileDialogService, instantiationService.createInstance(TestFileDialogService));\n\tinstantiationService.stub(IModeService, disposables.add(instantiationService.createInstance(ModeServiceImpl)));\n\tinstantiationService.stub(IHistoryService, new TestHistoryService());\n\tinstantiationService.stub(ITextResourcePropertiesService, new TestTextResourcePropertiesService(configService));\n\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\tconst themeService = new TestThemeService();\n\tinstantiationService.stub(IThemeService, themeService);\n\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelServiceImpl)));\n\tconst fileService = new TestFileService();\n\tinstantiationService.stub(IFileService, fileService);\n\tinstantiationService.stub(IUriIdentityService, new UriIdentityService(fileService));\n\tinstantiationService.stub(IWorkingCopyBackupService, new TestWorkingCopyBackupService());\n\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\tinstantiationService.stub(INotificationService, new TestNotificationService());\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IMenuService, new TestMenuService());\n\tconst keybindingService = new MockKeybindingService();\n\tinstantiationService.stub(IKeybindingService, keybindingService);\n\tinstantiationService.stub(IDecorationsService, new TestDecorationsService());\n\tinstantiationService.stub(IExtensionService, new TestExtensionService());\n\tinstantiationService.stub(IWorkingCopyEditorService, disposables.add(instantiationService.createInstance(WorkingCopyEditorService)));\n\tinstantiationService.stub(IWorkingCopyFileService, disposables.add(instantiationService.createInstance(WorkingCopyFileService)));\n\tinstantiationService.stub(ITextFileService, overrides?.textFileService ? overrides.textFileService(instantiationService) : disposables.add(<ITextFileService>instantiationService.createInstance(TestTextFileService)));\n\tinstantiationService.stub(IHostService, <IHostService>instantiationService.createInstance(TestHostService));\n\tinstantiationService.stub(ITextModelService, <ITextModelService>disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\tinstantiationService.stub(ILogService, new NullLogService());\n\tconst editorGroupService = new TestEditorGroupsService([new TestEditorGroupView(0)]);\n\tinstantiationService.stub(IEditorGroupsService, editorGroupService);\n\tinstantiationService.stub(ILabelService, <ILabelService>disposables.add(instantiationService.createInstance(LabelService)));\n\tconst editorService = overrides?.editorService ? overrides.editorService(instantiationService) : new TestEditorService(editorGroupService);\n\tinstantiationService.stub(IEditorService, editorService);\n\tinstantiationService.stub(IEditorOverrideService, disposables.add(instantiationService.createInstance(EditorOverrideService)));\n\tinstantiationService.stub(ICodeEditorService, disposables.add(new CodeEditorService(editorService, themeService, configService)));\n\tinstantiationService.stub(IViewletService, new TestViewletService());\n\tinstantiationService.stub(IListService, new TestListService());\n\tinstantiationService.stub(IQuickInputService, disposables.add(new QuickInputService(configService, instantiationService, keybindingService, contextKeyService, themeService, accessibilityService, layoutService)));\n\tinstantiationService.stub(IWorkspacesService, new TestWorkspacesService());\n\tinstantiationService.stub(IWorkspaceTrustManagementService, new TestWorkspaceTrustManagementService());\n\tinstantiationService.stub(ITerminalInstanceService, new TestTerminalInstanceService());\n\tinstantiationService.stub(ILocalTerminalService, new TestLocalTerminalService());\n\tinstantiationService.stub(IElevatedFileService, new BrowserElevatedFileService());\n\n\treturn instantiationService;\n}\n\nexport class TestServiceAccessor {\n\tconstructor(\n\t\t@ILifecycleService public lifecycleService: TestLifecycleService,\n\t\t@ITextFileService public textFileService: TestTextFileService,\n\t\t@IWorkingCopyFileService public workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFilesConfigurationService public filesConfigurationService: TestFilesConfigurationService,\n\t\t@IWorkspaceContextService public contextService: TestContextService,\n\t\t@IModelService public modelService: ModelServiceImpl,\n\t\t@IFileService public fileService: TestFileService,\n\t\t@IFileDialogService public fileDialogService: TestFileDialogService,\n\t\t@IWorkingCopyService public workingCopyService: IWorkingCopyService,\n\t\t@IEditorService public editorService: TestEditorService,\n\t\t@IEditorGroupsService public editorGroupService: IEditorGroupsService,\n\t\t@IModeService public modeService: IModeService,\n\t\t@ITextModelService public textModelResolverService: ITextModelService,\n\t\t@IUntitledTextEditorService public untitledTextEditorService: UntitledTextEditorService,\n\t\t@IConfigurationService public testConfigurationService: TestConfigurationService,\n\t\t@IWorkingCopyBackupService public workingCopyBackupService: TestWorkingCopyBackupService,\n\t\t@IHostService public hostService: TestHostService,\n\t\t@IQuickInputService public quickInputService: IQuickInputService,\n\t\t@ILabelService public labelService: ILabelService,\n\t\t@ILogService public logService: ILogService,\n\t\t@IUriIdentityService public uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService public instantitionService: IInstantiationService,\n\t\t@INotificationService public notificationService: INotificationService,\n\t\t@IWorkingCopyEditorService public workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IInstantiationService public instantiationService: IInstantiationService,\n\t\t@IElevatedFileService public elevatedFileService: IElevatedFileService\n\t) { }\n}\n\nexport class TestTextFileService extends BrowserTextFileService {\n\tprivate readStreamError: FileOperationError | undefined = undefined;\n\tprivate writeError: FileOperationError | undefined = undefined;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUntitledTextEditorService untitledTextEditorService: IUntitledTextEditorService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IProductService productService: IProductService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IPathService pathService: IPathService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IModeService modeService: IModeService,\n\t\t@ILogService logService: ILogService,\n\t\t@IElevatedFileService elevatedFileService: IElevatedFileService\n\t) {\n\t\tsuper(\n\t\t\tfileService,\n\t\t\tuntitledTextEditorService,\n\t\t\tlifecycleService,\n\t\t\tinstantiationService,\n\t\t\tmodelService,\n\t\t\tenvironmentService,\n\t\t\tdialogService,\n\t\t\tfileDialogService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tfilesConfigurationService,\n\t\t\ttextModelService,\n\t\t\tcodeEditorService,\n\t\t\tpathService,\n\t\t\tworkingCopyFileService,\n\t\t\turiIdentityService,\n\t\t\tmodeService,\n\t\t\tlogService,\n\t\t\televatedFileService\n\t\t);\n\t}\n\n\tsetReadStreamErrorOnce(error: FileOperationError): void {\n\t\tthis.readStreamError = error;\n\t}\n\n\toverride async readStream(resource: URI, options?: IReadTextFileOptions): Promise<ITextFileStreamContent> {\n\t\tif (this.readStreamError) {\n\t\t\tconst error = this.readStreamError;\n\t\t\tthis.readStreamError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst content = await this.fileService.readFileStream(resource, options);\n\t\treturn {\n\t\t\tresource: content.resource,\n\t\t\tname: content.name,\n\t\t\tmtime: content.mtime,\n\t\t\tctime: content.ctime,\n\t\t\tetag: content.etag,\n\t\t\tencoding: 'utf8',\n\t\t\tvalue: await createTextBufferFactoryFromStream(content.value),\n\t\t\tsize: 10\n\t\t};\n\t}\n\n\tsetWriteErrorOnce(error: FileOperationError): void {\n\t\tthis.writeError = error;\n\t}\n\n\toverride async write(resource: URI, value: string | ITextSnapshot, options?: IWriteTextFileOptions): Promise<IFileStatWithMetadata> {\n\t\tif (this.writeError) {\n\t\t\tconst error = this.writeError;\n\t\t\tthis.writeError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn super.write(resource, value, options);\n\t}\n}\n\nexport class TestBrowserTextFileServiceWithEncodingOverrides extends BrowserTextFileService {\n\n\tprivate _testEncoding: TestEncodingOracle | undefined;\n\toverride get encoding(): TestEncodingOracle {\n\t\tif (!this._testEncoding) {\n\t\t\tthis._testEncoding = this._register(this.instantiationService.createInstance(TestEncodingOracle));\n\t\t}\n\n\t\treturn this._testEncoding;\n\t}\n}\n\nexport class TestEncodingOracle extends EncodingOracle {\n\n\tprotected override get encodingOverrides(): IEncodingOverride[] {\n\t\treturn [\n\t\t\t{ extension: 'utf16le', encoding: UTF16le },\n\t\t\t{ extension: 'utf16be', encoding: UTF16be },\n\t\t\t{ extension: 'utf8bom', encoding: UTF8_with_bom }\n\t\t];\n\t}\n\n\tprotected override set encodingOverrides(overrides: IEncodingOverride[]) { }\n}\n\nclass TestEnvironmentServiceWithArgs extends BrowserWorkbenchEnvironmentService {\n\targs = [];\n}\n\nexport const TestProductService = { _serviceBrand: undefined, ...product };\n\nexport const TestEnvironmentService = new TestEnvironmentServiceWithArgs(Object.create(null), TestProductService);\n\nexport class TestProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress(\n\t\toptions: IProgressOptions | IProgressWindowOptions | IProgressNotificationOptions | IProgressCompositeOptions,\n\t\ttask: (progress: IProgress<IProgressStep>) => Promise<any>,\n\t\tonDidCancel?: ((choice?: number | undefined) => void) | undefined\n\t): Promise<any> {\n\t\treturn task(Progress.None);\n\t}\n}\n\nexport class TestAccessibilityService implements IAccessibilityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidChangeScreenReaderOptimized = Event.None;\n\n\tisScreenReaderOptimized(): boolean { return false; }\n\talwaysUnderlineAccessKeys(): Promise<boolean> { return Promise.resolve(false); }\n\tsetAccessibilitySupport(accessibilitySupport: AccessibilitySupport): void { }\n\tgetAccessibilitySupport(): AccessibilitySupport { return AccessibilitySupport.Unknown; }\n}\n\nexport class TestDecorationsService implements IDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidChangeDecorations: Event<IResourceDecorationChangeEvent> = Event.None;\n\n\tregisterDecorationsProvider(_provider: IDecorationsProvider): IDisposable { return Disposable.None; }\n\tgetDecoration(_uri: URI, _includeChildren: boolean, _overwrite?: IDecorationData): IDecoration | undefined { return undefined; }\n}\n\nexport class TestMenuService implements IMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcreateMenu(_id: MenuId, _scopedKeybindingService: IContextKeyService): IMenu {\n\t\treturn {\n\t\t\tonDidChange: Event.None,\n\t\t\tdispose: () => undefined,\n\t\t\tgetActions: () => []\n\t\t};\n\t}\n}\n\nexport class TestHistoryService implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private root?: URI) { }\n\n\treopenLastClosedEditor(): void { }\n\tforward(): void { }\n\tback(): void { }\n\tlast(): void { }\n\tremoveFromHistory(_input: IEditorInput | IResourceEditorInput): void { }\n\tclear(): void { }\n\tclearRecentlyOpened(): void { }\n\tgetHistory(): readonly (IEditorInput | IResourceEditorInput)[] { return []; }\n\topenNextRecentlyUsedEditor(group?: GroupIdentifier): void { }\n\topenPreviouslyUsedEditor(group?: GroupIdentifier): void { }\n\tgetLastActiveWorkspaceRoot(_schemeFilter: string): URI | undefined { return this.root; }\n\tgetLastActiveFile(_schemeFilter: string): URI | undefined { return undefined; }\n\topenLastEditLocation(): void { }\n}\n\nexport class TestFileDialogService implements IFileDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate confirmResult!: ConfirmResult;\n\n\tconstructor(\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\tasync defaultFilePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultFolderPath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultWorkspacePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tpickFileFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFileAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickWorkspaceAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\n\tprivate fileToSave!: URI;\n\tsetPickFileToSave(path: URI): void { this.fileToSave = path; }\n\tpickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined> { return Promise.resolve(this.fileToSave); }\n\n\tshowSaveDialog(_options: ISaveDialogOptions): Promise<URI | undefined> { return Promise.resolve(undefined); }\n\tshowOpenDialog(_options: IOpenDialogOptions): Promise<URI[] | undefined> { return Promise.resolve(undefined); }\n\n\tsetConfirmResult(result: ConfirmResult): void { this.confirmResult = result; }\n\tshowSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> { return Promise.resolve(this.confirmResult); }\n}\n\nexport class TestLayoutService implements IWorkbenchLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\topenedDefaultEditors = false;\n\n\tdimension: IDimension = { width: 800, height: 600 };\n\n\tcontainer: HTMLElement = window.document.body;\n\n\tonDidChangeZenMode: Event<boolean> = Event.None;\n\tonDidChangeCenteredLayout: Event<boolean> = Event.None;\n\tonDidChangeFullscreen: Event<boolean> = Event.None;\n\tonDidChangeWindowMaximized: Event<boolean> = Event.None;\n\tonDidChangePanelPosition: Event<string> = Event.None;\n\tonDidChangePartVisibility: Event<void> = Event.None;\n\tonDidLayout = Event.None;\n\tonDidChangeNotificationsVisibility = Event.None;\n\n\tlayout(): void { }\n\tisRestored(): boolean { return true; }\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasFocus(_part: Parts): boolean { return false; }\n\tfocusPart(_part: Parts): void { }\n\thasWindowBorder(): boolean { return false; }\n\tgetWindowBorderWidth(): number { return 0; }\n\tgetWindowBorderRadius(): string | undefined { return undefined; }\n\tisVisible(_part: Parts): boolean { return true; }\n\tgetDimension(_part: Parts): Dimension { return new Dimension(0, 0); }\n\tgetContainer(_part: Parts): HTMLElement { return null!; }\n\tisTitleBarHidden(): boolean { return false; }\n\tisStatusBarHidden(): boolean { return false; }\n\tisActivityBarHidden(): boolean { return false; }\n\tsetActivityBarHidden(_hidden: boolean): void { }\n\tisSideBarHidden(): boolean { return false; }\n\tasync setEditorHidden(_hidden: boolean): Promise<void> { }\n\tasync setSideBarHidden(_hidden: boolean): Promise<void> { }\n\tisPanelHidden(): boolean { return false; }\n\tasync setPanelHidden(_hidden: boolean): Promise<void> { }\n\ttoggleMaximizedPanel(): void { }\n\tisPanelMaximized(): boolean { return false; }\n\tgetMenubarVisibility(): MenuBarVisibility { throw new Error('not implemented'); }\n\ttoggleMenuBar(): void { }\n\tgetSideBarPosition() { return 0; }\n\tgetPanelPosition() { return 0; }\n\tasync setPanelPosition(_position: PartPosition): Promise<void> { }\n\taddClass(_clazz: string): void { }\n\tremoveClass(_clazz: string): void { }\n\tgetMaximumEditorDimensions(): Dimension { throw new Error('not implemented'); }\n\ttoggleZenMode(): void { }\n\tisEditorLayoutCentered(): boolean { return false; }\n\tcenterEditorLayout(_active: boolean): void { }\n\tresizePart(_part: Parts, _sizeChangeWidth: number, _sizeChangeHeight: number): void { }\n\tregisterPart(part: Part): void { }\n\tisWindowMaximized() { return false; }\n\tupdateWindowMaximizedState(maximized: boolean): void { }\n\tgetVisibleNeighborPart(part: Parts, direction: Direction): Parts | undefined { return undefined; }\n\tfocus() { }\n}\n\nlet activeViewlet: Viewlet = {} as any;\n\nexport class TestViewletService implements IViewletService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidViewletRegisterEmitter = new Emitter<ViewletDescriptor>();\n\tonDidViewletDeregisterEmitter = new Emitter<ViewletDescriptor>();\n\tonDidViewletOpenEmitter = new Emitter<IViewlet>();\n\tonDidViewletCloseEmitter = new Emitter<IViewlet>();\n\n\tonDidViewletRegister = this.onDidViewletRegisterEmitter.event;\n\tonDidViewletDeregister = this.onDidViewletDeregisterEmitter.event;\n\tonDidViewletOpen = this.onDidViewletOpenEmitter.event;\n\tonDidViewletClose = this.onDidViewletCloseEmitter.event;\n\n\topenViewlet(id: string, focus?: boolean): Promise<IViewlet | undefined> { return Promise.resolve(undefined); }\n\tgetViewlets(): ViewletDescriptor[] { return []; }\n\tgetAllViewlets(): ViewletDescriptor[] { return []; }\n\tgetActiveViewlet(): IViewlet { return activeViewlet; }\n\tgetDefaultViewletId(): string { return 'workbench.view.explorer'; }\n\tgetViewlet(id: string): ViewletDescriptor | undefined { return undefined; }\n\tgetProgressIndicator(id: string) { return undefined; }\n\thideActiveViewlet(): void { }\n\tgetLastActiveViewletId(): string { return undefined!; }\n\tdispose() { }\n}\n\nexport class TestPanelService implements IPanelService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidPanelOpen = new Emitter<{ panel: IPanel, focus: boolean; }>().event;\n\tonDidPanelClose = new Emitter<IPanel>().event;\n\n\tasync openPanel(id?: string, focus?: boolean): Promise<undefined> { return undefined; }\n\tgetPanel(id: string): any { return activeViewlet; }\n\tgetPanels() { return []; }\n\tgetPinnedPanels() { return []; }\n\tgetActivePanel(): IPanel { return activeViewlet; }\n\tsetPanelEnablement(id: string, enabled: boolean): void { }\n\tdispose() { }\n\tshowActivity(panelId: string, badge: IBadge, clazz?: string): IDisposable { throw new Error('Method not implemented.'); }\n\tgetProgressIndicator(id: string) { return null!; }\n\thideActivePanel(): void { }\n\tgetLastActivePanelId(): string { return undefined!; }\n}\n\nexport class TestViewsService implements IViewsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\n\tonDidChangeViewContainerVisibility = new Emitter<{ id: string; visible: boolean; location: ViewContainerLocation; }>().event;\n\tisViewContainerVisible(id: string): boolean { return true; }\n\tgetVisibleViewContainer(): ViewContainer | null { return null; }\n\topenViewContainer(id: string, focus?: boolean): Promise<IPaneComposite | null> { return Promise.resolve(null); }\n\tcloseViewContainer(id: string): void { }\n\n\tonDidChangeViewVisibilityEmitter = new Emitter<{ id: string; visible: boolean; }>();\n\tonDidChangeViewVisibility = this.onDidChangeViewVisibilityEmitter.event;\n\tisViewVisible(id: string): boolean { return true; }\n\tgetActiveViewWithId<T extends IView>(id: string): T | null { return null; }\n\tgetViewWithId<T extends IView>(id: string): T | null { return null; }\n\topenView<T extends IView>(id: string, focus?: boolean | undefined): Promise<T | null> { return Promise.resolve(null); }\n\tcloseView(id: string): void { }\n\tgetViewProgressIndicator(id: string) { return null!; }\n\tgetActiveViewPaneContainerWithId(id: string) { return null; }\n}\n\nexport class TestEditorGroupsService implements IEditorGroupsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(public groups: TestEditorGroupView[] = []) { }\n\n\tonDidChangeActiveGroup: Event<IEditorGroup> = Event.None;\n\tonDidActivateGroup: Event<IEditorGroup> = Event.None;\n\tonDidAddGroup: Event<IEditorGroup> = Event.None;\n\tonDidRemoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidMoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupIndex: Event<IEditorGroup> = Event.None;\n\tonDidLayout: Event<IDimension> = Event.None;\n\tonDidChangeEditorPartOptions = Event.None;\n\n\torientation = GroupOrientation.HORIZONTAL;\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasRestorableState = false;\n\n\tcontentDimension = { width: 800, height: 600 };\n\n\tget activeGroup(): IEditorGroup { return this.groups[0]; }\n\tget count(): number { return this.groups.length; }\n\n\tisRestored(): boolean { return true; }\n\tgetGroups(_order?: GroupsOrder): readonly IEditorGroup[] { return this.groups; }\n\tgetGroup(identifier: number): IEditorGroup | undefined { return this.groups.find(group => group.id === identifier); }\n\tgetLabel(_identifier: number): string { return 'Group 1'; }\n\tfindGroup(_scope: IFindGroupScope, _source?: number | IEditorGroup, _wrap?: boolean): IEditorGroup { throw new Error('not implemented'); }\n\tactivateGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\trestoreGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\tgetSize(_group: number | IEditorGroup): { width: number, height: number; } { return { width: 100, height: 100 }; }\n\tsetSize(_group: number | IEditorGroup, _size: { width: number, height: number; }): void { }\n\tarrangeGroups(_arrangement: GroupsArrangement): void { }\n\tapplyLayout(_layout: EditorGroupLayout): void { }\n\tsetGroupOrientation(_orientation: GroupOrientation): void { }\n\taddGroup(_location: number | IEditorGroup, _direction: GroupDirection, _options?: IAddGroupOptions): IEditorGroup { throw new Error('not implemented'); }\n\tremoveGroup(_group: number | IEditorGroup): void { }\n\tmoveGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tmergeGroup(_group: number | IEditorGroup, _target: number | IEditorGroup, _options?: IMergeGroupOptions): IEditorGroup { throw new Error('not implemented'); }\n\tmergeAllGroups(): IEditorGroup { throw new Error('not implemented'); }\n\tcopyGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tcenterLayout(active: boolean): void { }\n\tisLayoutCentered(): boolean { return false; }\n\n\tpartOptions!: IEditorPartOptions;\n\tenforcePartOptions(options: IEditorPartOptions): IDisposable { return Disposable.None; }\n}\n\nexport class TestEditorGroupView implements IEditorGroupView {\n\n\tconstructor(public id: number) { }\n\n\tactiveEditorPane!: IVisibleEditorPane;\n\tactiveEditor!: IEditorInput;\n\tpreviewEditor!: IEditorInput;\n\tcount!: number;\n\tstickyCount!: number;\n\tdisposed!: boolean;\n\teditors: readonly IEditorInput[] = [];\n\tlabel!: string;\n\tariaLabel!: string;\n\tindex!: number;\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\telement!: HTMLElement;\n\tminimumWidth!: number;\n\tmaximumWidth!: number;\n\tminimumHeight!: number;\n\tmaximumHeight!: number;\n\n\ttitleHeight!: IEditorGroupTitleHeight;\n\n\tisEmpty = true;\n\tisMinimized = false;\n\n\tonWillDispose: Event<void> = Event.None;\n\tonDidGroupChange: Event<IGroupChangeEvent> = Event.None;\n\tonWillCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<IEditorInput> = Event.None;\n\tonDidFocus: Event<void> = Event.None;\n\tonDidChange: Event<{ width: number; height: number; }> = Event.None;\n\tonWillMoveEditor: Event<IEditorMoveEvent> = Event.None;\n\n\tgetEditors(_order?: EditorsOrder): readonly IEditorInput[] { return []; }\n\tfindEditors(_resource: URI): readonly IEditorInput[] { return []; }\n\tgetEditorByIndex(_index: number): IEditorInput { throw new Error('not implemented'); }\n\tgetIndexOfEditor(_editor: IEditorInput): number { return -1; }\n\topenEditor(_editor: IEditorInput, _options?: IEditorOptions): Promise<IEditorPane> { throw new Error('not implemented'); }\n\topenEditors(_editors: IEditorInputWithOptions[]): Promise<IEditorPane> { throw new Error('not implemented'); }\n\tisPinned(_editor: IEditorInput): boolean { return false; }\n\tisSticky(_editor: IEditorInput): boolean { return false; }\n\tisActive(_editor: IEditorInput): boolean { return false; }\n\tcontains(candidate: IEditorInput): boolean { return false; }\n\tmoveEditor(_editor: IEditorInput, _target: IEditorGroup, _options?: IEditorOptions | ITextEditorOptions): void { }\n\tcopyEditor(_editor: IEditorInput, _target: IEditorGroup, _options?: IEditorOptions | ITextEditorOptions): void { }\n\tasync closeEditor(_editor?: IEditorInput, options?: ICloseEditorOptions): Promise<void> { }\n\tasync closeEditors(_editors: IEditorInput[] | ICloseEditorsFilter, options?: ICloseEditorOptions): Promise<void> { }\n\tasync closeAllEditors(options?: ICloseAllEditorsOptions): Promise<void> { }\n\tasync replaceEditors(_editors: IEditorReplacement[]): Promise<void> { }\n\tpinEditor(_editor?: IEditorInput): void { }\n\tstickEditor(editor?: IEditorInput | undefined): void { }\n\tunstickEditor(editor?: IEditorInput | undefined): void { }\n\tfocus(): void { }\n\tget scopedContextKeyService(): IContextKeyService { throw new Error('not implemented'); }\n\tsetActive(_isActive: boolean): void { }\n\tnotifyIndexChanged(_index: number): void { }\n\tdispose(): void { }\n\ttoJSON(): object { return Object.create(null); }\n\tlayout(_width: number, _height: number): void { }\n\trelayout() { }\n}\n\nexport class TestEditorGroupAccessor implements IEditorGroupsAccessor {\n\n\tgroups: IEditorGroupView[] = [];\n\tactiveGroup!: IEditorGroupView;\n\n\tpartOptions: IEditorPartOptions = {};\n\n\tonDidChangeEditorPartOptions = Event.None;\n\tonDidVisibilityChange = Event.None;\n\n\tgetGroup(identifier: number): IEditorGroupView | undefined { throw new Error('Method not implemented.'); }\n\tgetGroups(order: GroupsOrder): IEditorGroupView[] { throw new Error('Method not implemented.'); }\n\tactivateGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\trestoreGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\taddGroup(location: number | IEditorGroupView, direction: GroupDirection, options?: IAddGroupOptions | undefined): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tmergeGroup(group: number | IEditorGroupView, target: number | IEditorGroupView, options?: IMergeGroupOptions | undefined): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tmoveGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tcopyGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tremoveGroup(group: number | IEditorGroupView): void { throw new Error('Method not implemented.'); }\n\tarrangeGroups(arrangement: GroupsArrangement, target?: number | IEditorGroupView | undefined): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestEditorService implements EditorServiceImpl {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidActiveEditorChange: Event<void> = Event.None;\n\tonDidVisibleEditorsChange: Event<void> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<IEditorIdentifier> = Event.None;\n\tonDidMostRecentlyActiveEditorsChange: Event<void> = Event.None;\n\n\tprivate _activeTextEditorControl: ICodeEditor | IDiffEditor | undefined;\n\tpublic get activeTextEditorControl(): ICodeEditor | IDiffEditor | undefined { return this._activeTextEditorControl; }\n\tpublic set activeTextEditorControl(value: ICodeEditor | IDiffEditor | undefined) { this._activeTextEditorControl = value; }\n\n\tactiveEditorPane: IVisibleEditorPane | undefined;\n\tactiveTextEditorMode: string | undefined;\n\n\tprivate _activeEditor: IEditorInput | undefined;\n\tpublic get activeEditor(): IEditorInput | undefined { return this._activeEditor; }\n\tpublic set activeEditor(value: IEditorInput | undefined) { this._activeEditor = value; }\n\n\teditors: readonly IEditorInput[] = [];\n\tmostRecentlyActiveEditors: readonly IEditorIdentifier[] = [];\n\tvisibleEditorPanes: readonly IVisibleEditorPane[] = [];\n\tvisibleTextEditorControls = [];\n\tvisibleEditors: readonly IEditorInput[] = [];\n\tcount = this.editors.length;\n\n\tconstructor(private editorGroupService?: IEditorGroupsService) { }\n\tgetEditors() { return []; }\n\tfindEditors() { return [] as any; }\n\tgetEditorOverrides(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): [IOpenEditorOverrideHandler, IOpenEditorOverrideEntry][] { return []; }\n\toverrideOpenEditor(_handler: IOpenEditorOverrideHandler): IDisposable { return toDisposable(() => undefined); }\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\tasync openEditor(editor: IEditorInput | IResourceEditorInputType, optionsOrGroup?: IEditorOptions | ITextEditorOptions | IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined> {\n\t\tthrow new Error('not implemented');\n\t}\n\tdoResolveEditorOpenRequest(editor: IEditorInput | IResourceEditorInputType): [IEditorGroup, EditorInput, EditorOptions | undefined] | undefined {\n\t\tif (!this.editorGroupService) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn [this.editorGroupService.activeGroup, editor as EditorInput, undefined];\n\t}\n\topenEditors(_editors: any, _group?: any): Promise<IEditorPane[]> { throw new Error('not implemented'); }\n\tisOpened(_editor: IResourceEditorInputIdentifier): boolean { return false; }\n\treplaceEditors(_editors: any, _group: any) { return Promise.resolve(undefined); }\n\tcreateEditorInput(_input: IResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput): EditorInput { throw new Error('not implemented'); }\n\tsave(editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\tsaveAll(options?: ISaveEditorsOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\trevert(editors: IEditorIdentifier[], options?: IRevertOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestFileService implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidFilesChange = new Emitter<FileChangesEvent>();\n\tprivate readonly _onDidRunOperation = new Emitter<FileOperationEvent>();\n\n\treadonly onWillActivateFileSystemProvider = Event.None;\n\treadonly onDidChangeFileSystemProviderCapabilities = Event.None;\n\treadonly onError: Event<Error> = Event.None;\n\n\tprivate content = 'Hello Html';\n\tprivate lastReadFileUri!: URI;\n\n\tsetContent(content: string): void { this.content = content; }\n\tgetContent(): string { return this.content; }\n\tgetLastReadFileUri(): URI { return this.lastReadFileUri; }\n\tget onDidFilesChange(): Event<FileChangesEvent> { return this._onDidFilesChange.event; }\n\tfireFileChanges(event: FileChangesEvent): void { this._onDidFilesChange.fire(event); }\n\tget onDidRunOperation(): Event<FileOperationEvent> { return this._onDidRunOperation.event; }\n\tfireAfterOperation(event: FileOperationEvent): void { this._onDidRunOperation.fire(event); }\n\tresolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat>;\n\tresolve(resource: URI, _options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat> {\n\t\treturn Promise.resolve({\n\t\t\tresource,\n\t\t\tetag: Date.now().toString(),\n\t\t\tencoding: 'utf8',\n\t\t\tmtime: Date.now(),\n\t\t\tsize: 42,\n\t\t\tisFile: true,\n\t\t\tisDirectory: false,\n\t\t\tisSymbolicLink: false,\n\t\t\tname: basename(resource)\n\t\t});\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\tconst stats = await Promise.all(toResolve.map(resourceAndOption => this.resolve(resourceAndOption.resource, resourceAndOption.options)));\n\n\t\treturn stats.map(stat => ({ stat, success: true }));\n\t}\n\n\treadonly notExistsSet = new Set<URI>();\n\n\tasync exists(_resource: URI): Promise<boolean> { return !this.notExistsSet.has(_resource); }\n\n\treadShouldThrowError: Error | undefined = undefined;\n\n\treadFile(resource: URI, options?: IReadFileOptions | undefined): Promise<IFileContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn Promise.resolve({\n\t\t\tresource: resource,\n\t\t\tvalue: VSBuffer.fromString(this.content),\n\t\t\tetag: 'index.txt',\n\t\t\tencoding: 'utf8',\n\t\t\tmtime: Date.now(),\n\t\t\tctime: Date.now(),\n\t\t\tname: basename(resource),\n\t\t\tsize: 1\n\t\t});\n\t}\n\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions | undefined): Promise<IFileStreamContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn Promise.resolve({\n\t\t\tresource,\n\t\t\tvalue: bufferToStream(VSBuffer.fromString(this.content)),\n\t\t\tetag: 'index.txt',\n\t\t\tencoding: 'utf8',\n\t\t\tmtime: Date.now(),\n\t\t\tctime: Date.now(),\n\t\t\tsize: 1,\n\t\t\tname: basename(resource)\n\t\t});\n\t}\n\n\twriteShouldThrowError: Error | undefined = undefined;\n\n\tasync writeFile(resource: URI, bufferOrReadable: VSBuffer | VSBufferReadable, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tawait timeout(0);\n\n\t\tif (this.writeShouldThrowError) {\n\t\t\tthrow this.writeShouldThrowError;\n\t\t}\n\n\t\treturn ({\n\t\t\tresource,\n\t\t\tetag: 'index.txt',\n\t\t\tmtime: Date.now(),\n\t\t\tctime: Date.now(),\n\t\t\tsize: 42,\n\t\t\tisFile: true,\n\t\t\tisDirectory: false,\n\t\t\tisSymbolicLink: false,\n\t\t\tname: basename(resource)\n\t\t});\n\t}\n\n\tmove(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcopy(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcreateFile(_resource: URI, _content?: VSBuffer | VSBufferReadable, _options?: ICreateFileOptions): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcreateFolder(_resource: URI): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\n\tonDidChangeFileSystemProviderRegistrations = Event.None;\n\n\tprivate providers = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider) {\n\t\tthis.providers.set(scheme, provider);\n\n\t\treturn toDisposable(() => this.providers.delete(scheme));\n\t}\n\n\tgetProvider(scheme: string) {\n\t\treturn this.providers.get(scheme);\n\t}\n\n\tactivateProvider(_scheme: string): Promise<void> { throw new Error('not implemented'); }\n\tcanHandleResource(resource: URI): boolean { return resource.scheme === Schemas.file || this.providers.has(resource.scheme); }\n\tlistCapabilities() {\n\t\treturn [\n\t\t\t{ scheme: Schemas.file, capabilities: FileSystemProviderCapabilities.FileOpenReadWriteClose },\n\t\t\t...Iterable.map(this.providers, ([scheme, p]) => { return { scheme, capabilities: p.capabilities }; })\n\t\t];\n\t}\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tif (capability === FileSystemProviderCapabilities.PathCaseSensitive && isLinux) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync del(_resource: URI, _options?: { useTrash?: boolean, recursive?: boolean; }): Promise<void> { }\n\n\treadonly watches: URI[] = [];\n\twatch(_resource: URI): IDisposable {\n\t\tthis.watches.push(_resource);\n\n\t\treturn toDisposable(() => this.watches.splice(this.watches.indexOf(_resource), 1));\n\t}\n\n\tgetWriteEncoding(_resource: URI): IResourceEncoding { return { encoding: 'utf8', hasBOM: false }; }\n\tdispose(): void { }\n\n\tasync canCreateFile(source: URI, options?: ICreateFileOptions): Promise<Error | true> { return true; }\n\tasync canMove(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean | undefined; recursive?: boolean | undefined; } | undefined): Promise<Error | true> { return true; }\n}\n\nexport class TestWorkingCopyBackupService extends InMemoryWorkingCopyBackupService {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tparseBackupContent(textBufferFactory: ITextBufferFactory): string {\n\t\tconst textBuffer = textBufferFactory.create(DefaultEndOfLine.LF).textBuffer;\n\t\tconst lineCount = textBuffer.getLineCount();\n\t\tconst range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n\n\t\treturn textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t}\n}\n\nexport function toUntypedWorkingCopyId(resource: URI): IWorkingCopyIdentifier {\n\treturn toTypedWorkingCopyId(resource, '');\n}\n\nexport function toTypedWorkingCopyId(resource: URI, typeId = 'testBackupTypeId'): IWorkingCopyIdentifier {\n\treturn { typeId, resource };\n}\n\nexport class InMemoryTestWorkingCopyBackupService extends BrowserWorkingCopyBackupService {\n\n\toverride readonly fileService: IFileService;\n\n\tprivate backupResourceJoiners: Function[];\n\tprivate discardBackupJoiners: Function[];\n\n\tdiscardedBackups: IWorkingCopyIdentifier[];\n\n\tconstructor() {\n\t\tconst environmentService = TestEnvironmentService;\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new InMemoryFileSystemProvider());\n\t\tfileService.registerProvider(Schemas.userData, new InMemoryFileSystemProvider());\n\n\t\tsuper(new TestContextService(TestWorkspace), environmentService, fileService, logService);\n\n\t\tthis.fileService = fileService;\n\t\tthis.backupResourceJoiners = [];\n\t\tthis.discardBackupJoiners = [];\n\t\tthis.discardedBackups = [];\n\t}\n\n\tjoinBackupResource(): Promise<void> {\n\t\treturn new Promise(resolve => this.backupResourceJoiners.push(resolve));\n\t}\n\n\tjoinDiscardBackup(): Promise<void> {\n\t\treturn new Promise(resolve => this.discardBackupJoiners.push(resolve));\n\t}\n\n\toverride async backup(identifier: IWorkingCopyIdentifier, content?: VSBufferReadableStream | VSBufferReadable, versionId?: number, meta?: any, token?: CancellationToken): Promise<void> {\n\t\tawait super.backup(identifier, content, versionId, meta, token);\n\n\t\twhile (this.backupResourceJoiners.length) {\n\t\t\tthis.backupResourceJoiners.pop()!();\n\t\t}\n\t}\n\n\toverride async discardBackup(identifier: IWorkingCopyIdentifier): Promise<void> {\n\t\tawait super.discardBackup(identifier);\n\t\tthis.discardedBackups.push(identifier);\n\n\t\twhile (this.discardBackupJoiners.length) {\n\t\t\tthis.discardBackupJoiners.pop()!();\n\t\t}\n\t}\n\n\tasync getBackupContents(identifier: IWorkingCopyIdentifier): Promise<string> {\n\t\tconst backupResource = this.toBackupResource(identifier);\n\n\t\tconst fileContents = await this.fileService.readFile(backupResource);\n\n\t\treturn fileContents.value.toString();\n\t}\n}\n\nexport class TestLifecycleService implements ILifecycleService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tphase!: LifecyclePhase;\n\tstartupKind!: StartupKind;\n\n\tprivate readonly _onBeforeShutdown = new Emitter<BeforeShutdownEvent>();\n\tget onBeforeShutdown(): Event<BeforeShutdownEvent> { return this._onBeforeShutdown.event; }\n\n\tprivate readonly _onWillShutdown = new Emitter<WillShutdownEvent>();\n\tget onWillShutdown(): Event<WillShutdownEvent> { return this._onWillShutdown.event; }\n\n\tprivate readonly _onShutdown = new Emitter<void>();\n\tget onDidShutdown(): Event<void> { return this._onShutdown.event; }\n\n\tasync when(): Promise<void> { }\n\n\tshutdownJoiners: Promise<void>[] = [];\n\n\tfireShutdown(reason = ShutdownReason.QUIT): void {\n\t\tthis.shutdownJoiners = [];\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin: p => {\n\t\t\t\tthis.shutdownJoiners.push(p);\n\t\t\t},\n\t\t\treason\n\t\t});\n\t}\n\n\tfireBeforeShutdown(event: BeforeShutdownEvent): void { this._onBeforeShutdown.fire(event); }\n\n\tfireWillShutdown(event: WillShutdownEvent): void { this._onWillShutdown.fire(event); }\n\n\tshutdown(): void {\n\t\tthis.fireShutdown();\n\t}\n}\n\nexport class TestBeforeShutdownEvent implements BeforeShutdownEvent {\n\n\tvalue: boolean | Promise<boolean> | undefined;\n\treason = ShutdownReason.CLOSE;\n\n\tveto(value: boolean | Promise<boolean>): void {\n\t\tthis.value = value;\n\t}\n}\n\nexport class TestWillShutdownEvent implements WillShutdownEvent {\n\n\tvalue: Promise<void>[] = [];\n\treason = ShutdownReason.CLOSE;\n\n\tjoin(promise: Promise<void>, id: string): void {\n\t\tthis.value.push(promise);\n\t}\n}\n\nexport class TestTextResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private configurationService = new TestConfigurationService()) { }\n\n\tonDidChangeConfiguration() {\n\t\treturn { dispose() { } };\n\t}\n\n\tgetValue<T>(resource: URI, arg2?: any, arg3?: any): T {\n\t\tconst position: IPosition | null = EditorPosition.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\treturn this.configurationService.getValue(section, { resource });\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value);\n\t}\n}\n\nexport class RemoteFileSystemProvider implements IFileSystemProvider {\n\n\tconstructor(private readonly diskFileSystemProvider: IFileSystemProvider, private readonly remoteAuthority: string) { }\n\n\treadonly capabilities: FileSystemProviderCapabilities = this.diskFileSystemProvider.capabilities;\n\treadonly onDidChangeCapabilities: Event<void> = this.diskFileSystemProvider.onDidChangeCapabilities;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = Event.map(this.diskFileSystemProvider.onDidChangeFile, changes => changes.map((c): IFileChange => {\n\t\treturn {\n\t\t\ttype: c.type,\n\t\t\tresource: c.resource.with({ scheme: Schemas.vscodeRemote, authority: this.remoteAuthority }),\n\t\t};\n\t}));\n\twatch(resource: URI, opts: IWatchOptions): IDisposable { return this.diskFileSystemProvider.watch(this.toFileResource(resource), opts); }\n\n\tstat(resource: URI): Promise<IStat> { return this.diskFileSystemProvider.stat(this.toFileResource(resource)); }\n\tmkdir(resource: URI): Promise<void> { return this.diskFileSystemProvider.mkdir(this.toFileResource(resource)); }\n\treaddir(resource: URI): Promise<[string, FileType][]> { return this.diskFileSystemProvider.readdir(this.toFileResource(resource)); }\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> { return this.diskFileSystemProvider.delete(this.toFileResource(resource), opts); }\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> { return this.diskFileSystemProvider.rename(this.toFileResource(from), this.toFileResource(to), opts); }\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> { return this.diskFileSystemProvider.copy!(this.toFileResource(from), this.toFileResource(to), opts); }\n\n\treadFile(resource: URI): Promise<Uint8Array> { return this.diskFileSystemProvider.readFile!(this.toFileResource(resource)); }\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> { return this.diskFileSystemProvider.writeFile!(this.toFileResource(resource), content, opts); }\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> { return this.diskFileSystemProvider.open!(this.toFileResource(resource), opts); }\n\tclose(fd: number): Promise<void> { return this.diskFileSystemProvider.close!(fd); }\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.diskFileSystemProvider.read!(fd, pos, data, offset, length); }\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.diskFileSystemProvider.write!(fd, pos, data, offset, length); }\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> { return this.diskFileSystemProvider.readFileStream!(this.toFileResource(resource), opts, token); }\n\n\tprivate toFileResource(resource: URI): URI { return resource.with({ scheme: Schemas.file, authority: '' }); }\n}\n\nexport class TestInMemoryFileSystemProvider extends InMemoryFileSystemProvider implements IFileSystemProviderWithFileReadStreamCapability {\n\toverride readonly capabilities: FileSystemProviderCapabilities =\n\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t| FileSystemProviderCapabilities.PathCaseSensitive\n\t\t| FileSystemProviderCapabilities.FileReadStream;\n\n\n\treadFileStream(resource: URI): ReadableStreamEvents<Uint8Array> {\n\t\tconst BUFFER_SIZE = 64 * 1024;\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await this.readFile(resource);\n\n\t\t\t\tlet offset = 0;\n\t\t\t\twhile (offset < data.length) {\n\t\t\t\t\tawait timeout(0);\n\t\t\t\t\tawait stream.write(data.subarray(offset, offset + BUFFER_SIZE));\n\t\t\t\t\toffset += BUFFER_SIZE;\n\t\t\t\t}\n\n\t\t\t\tawait timeout(0);\n\t\t\t\tstream.end();\n\t\t\t} catch (error) {\n\t\t\t\tstream.end(error);\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n}\n\nexport const productService: IProductService = { _serviceBrand: undefined, ...product };\n\nexport class TestHostService implements IHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _hasFocus = true;\n\tget hasFocus() { return this._hasFocus; }\n\tasync hadLastFocus(): Promise<boolean> { return this._hasFocus; }\n\n\tprivate _onDidChangeFocus = new Emitter<boolean>();\n\treadonly onDidChangeFocus = this._onDidChangeFocus.event;\n\n\tsetFocus(focus: boolean) {\n\t\tthis._hasFocus = focus;\n\t\tthis._onDidChangeFocus.fire(this._hasFocus);\n\t}\n\n\tasync restart(): Promise<void> { }\n\tasync reload(): Promise<void> { }\n\tasync close(): Promise<void> { }\n\n\tasync focus(options?: { force: boolean; }): Promise<void> { }\n\n\tasync openWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> { }\n\n\tasync toggleFullScreen(): Promise<void> { }\n\n\treadonly colorScheme = ColorScheme.DARK;\n\tonDidChangeColorScheme = Event.None;\n}\n\nexport class TestFilesConfigurationService extends FilesConfigurationService {\n\n\toverride onFilesConfigurationChange(configuration: any): void {\n\t\tsuper.onFilesConfigurationChange(configuration);\n\t}\n}\n\nexport class TestReadonlyTextFileEditorModel extends TextFileEditorModel {\n\n\toverride isReadonly(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class TestEditorInput extends EditorInput {\n\n\tconstructor(public resource: URI, private readonly _typeId: string) {\n\t\tsuper();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn this._typeId;\n\t}\n\n\toverride resolve(): Promise<IEditorModel | null> {\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport function registerTestEditor(id: string, inputs: SyncDescriptor<EditorInput>[], serializerInputId?: string): IDisposable {\n\tclass TestEditor extends EditorPane {\n\n\t\tprivate _scopedContextKeyService: IContextKeyService;\n\n\t\tconstructor() {\n\t\t\tsuper(id, NullTelemetryService, new TestThemeService(), new TestStorageService());\n\t\t\tthis._scopedContextKeyService = new MockContextKeyService();\n\t\t}\n\n\t\toverride async setInput(input: EditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\t\tsuper.setInput(input, options, context, token);\n\n\t\t\tawait input.resolve();\n\t\t}\n\n\t\toverride getId(): string { return id; }\n\t\tlayout(): void { }\n\t\tcreateEditor(): void { }\n\n\t\toverride get scopedContextKeyService() {\n\t\t\treturn this._scopedContextKeyService;\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorRegistry>(Extensions.Editors).registerEditor(EditorDescriptor.create(TestEditor, id, 'Test Editor Control'), inputs));\n\n\tif (serializerInputId) {\n\n\t\tinterface ISerializedTestInput {\n\t\t\tresource: string;\n\t\t}\n\n\t\tclass EditorsObserverTestEditorInputSerializer implements IEditorInputSerializer {\n\n\t\t\tcanSerialize(editorInput: EditorInput): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tserialize(editorInput: EditorInput): string {\n\t\t\t\tlet testEditorInput = <TestFileEditorInput>editorInput;\n\t\t\t\tlet testInput: ISerializedTestInput = {\n\t\t\t\t\tresource: testEditorInput.resource.toString()\n\t\t\t\t};\n\n\t\t\t\treturn JSON.stringify(testInput);\n\t\t\t}\n\n\t\t\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput {\n\t\t\t\tlet testInput: ISerializedTestInput = JSON.parse(serializedEditorInput);\n\n\t\t\t\treturn new TestFileEditorInput(URI.parse(testInput.resource), serializerInputId!);\n\t\t\t}\n\t\t}\n\n\t\tdisposables.add(Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputSerializer(serializerInputId, EditorsObserverTestEditorInputSerializer));\n\t}\n\n\treturn disposables;\n}\n\nexport function registerTestFileEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorRegistry>(Extensions.Editors).registerEditor(\n\t\tEditorDescriptor.create(\n\t\t\tTestTextFileEditor,\n\t\t\tTestTextFileEditor.ID,\n\t\t\t'Text File Editor'\n\t\t),\n\t\t[new SyncDescriptor<EditorInput>(FileEditorInput)]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestResourceEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorRegistry>(Extensions.Editors).registerEditor(\n\t\tEditorDescriptor.create(\n\t\t\tTestTextResourceEditor,\n\t\t\tTestTextResourceEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor<EditorInput>(UntitledTextEditorInput),\n\t\t\tnew SyncDescriptor<EditorInput>(ResourceEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestSideBySideEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorRegistry>(Extensions.Editors).registerEditor(\n\t\tEditorDescriptor.create(\n\t\t\tSideBySideEditor,\n\t\t\tSideBySideEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(SideBySideEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestDiffEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorRegistry>(Extensions.Editors).registerEditor(\n\t\tEditorDescriptor.create(\n\t\t\tTextDiffEditor,\n\t\t\tTextDiffEditor.ID,\n\t\t\t'Text Diff Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(DiffEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport class TestFileEditorInput extends EditorInput implements IFileEditorInput {\n\n\treadonly preferredResource = this.resource;\n\n\tgotDisposed = false;\n\tgotSaved = false;\n\tgotSavedAs = false;\n\tgotReverted = false;\n\tdirty = false;\n\tprivate fails = false;\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate _typeId: string\n\t) {\n\t\tsuper();\n\t}\n\n\toverride get typeId() { return this._typeId; }\n\toverride resolve(): Promise<IEditorModel | null> { return !this.fails ? Promise.resolve(null) : Promise.reject(new Error('fails')); }\n\toverride matches(other: EditorInput): boolean { return !!(other?.resource && this.resource.toString() === other.resource.toString() && other instanceof TestFileEditorInput && other.typeId === this.typeId); }\n\tsetPreferredResource(resource: URI): void { }\n\tasync setEncoding(encoding: string) { }\n\tgetEncoding() { return undefined; }\n\tsetPreferredName(name: string): void { }\n\tsetPreferredDescription(description: string): void { }\n\tsetPreferredEncoding(encoding: string) { }\n\tsetMode(mode: string) { }\n\tsetPreferredMode(mode: string) { }\n\tsetForceOpenAsBinary(): void { }\n\tsetFailToOpen(): void {\n\t\tthis.fails = true;\n\t}\n\toverride async save(groupId: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tthis.gotSaved = true;\n\t\tthis.dirty = false;\n\t\treturn this;\n\t}\n\toverride async saveAs(groupId: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\tthis.gotSavedAs = true;\n\t\treturn this;\n\t}\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tthis.gotReverted = true;\n\t\tthis.gotSaved = false;\n\t\tthis.gotSavedAs = false;\n\t\tthis.dirty = false;\n\t}\n\tsetDirty(): void { this.dirty = true; }\n\toverride isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\toverride isReadonly(): boolean {\n\t\treturn false;\n\t}\n\tisResolved(): boolean { return false; }\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.gotDisposed = true;\n\t}\n\tmovedEditor: IMoveResult | undefined = undefined;\n\toverride rename(): IMoveResult | undefined { return this.movedEditor; }\n}\n\nexport class TestEditorPart extends EditorPart {\n\n\toverride saveState(): void {\n\t\treturn super.saveState();\n\t}\n\n\tclearState(): void {\n\t\tconst workspaceMemento = this.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(workspaceMemento)) {\n\t\t\tdelete workspaceMemento[key];\n\t\t}\n\n\t\tconst globalMemento = this.getMemento(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(globalMemento)) {\n\t\t\tdelete globalMemento[key];\n\t\t}\n\t}\n}\n\nexport async function createEditorPart(instantiationService: IInstantiationService, disposables: DisposableStore): Promise<TestEditorPart> {\n\tconst part = disposables.add(instantiationService.createInstance(TestEditorPart));\n\tpart.create(document.createElement('div'));\n\tpart.layout(1080, 800);\n\n\tawait part.whenReady;\n\n\treturn part;\n}\n\nexport class TestListService implements IListService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tlastFocusedList: any | undefined = undefined;\n\n\tregister(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n}\n\nexport class TestPathService implements IPathService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly fallbackUserHome: URI = URI.from({ scheme: Schemas.vscodeRemote, path: '/' })) { }\n\n\tget path() { return Promise.resolve(isWindows ? win32 : posix); }\n\n\tasync userHome() { return this.fallbackUserHome; }\n\tget resolvedUserHome() { return this.fallbackUserHome; }\n\n\tasync fileURI(path: string): Promise<URI> {\n\t\treturn URI.file(path);\n\t}\n\n\treadonly defaultUriScheme = Schemas.vscodeRemote;\n}\n\nexport class TestTextFileEditorModelManager extends TextFileEditorModelManager {\n\n\toverride add(resource: URI, model: TextFileEditorModel): void {\n\t\treturn super.add(resource, model);\n\t}\n\n\toverride remove(resource: URI): void {\n\t\treturn super.remove(resource);\n\t}\n}\n\ninterface ITestTextFileEditorModel extends ITextFileEditorModel {\n\treadonly lastResolvedFileStat: IFileStatWithMetadata | undefined;\n}\n\nexport function getLastResolvedFileStat(model: unknown): IFileStatWithMetadata | undefined {\n\tconst candidate = model as ITestTextFileEditorModel | undefined;\n\n\treturn candidate?.lastResolvedFileStat;\n}\n\nexport class TestWorkspacesService implements IWorkspacesService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeRecentlyOpened = Event.None;\n\n\tasync createUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n\tasync deleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void> { }\n\tasync addRecentlyOpened(recents: IRecent[]): Promise<void> { }\n\tasync removeRecentlyOpened(workspaces: URI[]): Promise<void> { }\n\tasync clearRecentlyOpened(): Promise<void> { }\n\tasync getRecentlyOpened(): Promise<IRecentlyOpened> { return { files: [], workspaces: [] }; }\n\tasync getDirtyWorkspaces(): Promise<(URI | IWorkspaceIdentifier)[]> { return []; }\n\tasync enterWorkspace(path: URI): Promise<IEnterWorkspaceResult | null> { throw new Error('Method not implemented.'); }\n\tasync getWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalInstanceService implements ITerminalInstanceService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tasync getDefaultShellAndArgs(): Promise<{ shell: string, args: string[] | string | undefined }> {\n\t\treturn {\n\t\t\tshell: 'bash',\n\t\t\targs: undefined\n\t\t};\n\t}\n\tasync getMainProcessParentEnv(): Promise<IProcessEnvironment> {\n\t\treturn {};\n\t}\n\n\tasync getXtermConstructor(): Promise<any> { throw new Error('Method not implemented.'); }\n\tasync getXtermSearchConstructor(): Promise<any> { throw new Error('Method not implemented.'); }\n\tasync getXtermUnicode11Constructor(): Promise<any> { throw new Error('Method not implemented.'); }\n\tasync getXtermWebglConstructor(): Promise<any> { throw new Error('Method not implemented.'); }\n\tcreateWindowsShellHelper(shellProcessId: number, xterm: any): any { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalProfileResolverService implements ITerminalProfileResolverService {\n\t_serviceBrand: undefined;\n\tresolveIcon(shellLaunchConfig: IShellLaunchConfig): void { }\n\tasync resolveShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig, options: IShellLaunchConfigResolveOptions): Promise<void> { }\n\tasync getDefaultProfile(options: IShellLaunchConfigResolveOptions): Promise<ITerminalProfile> { return { path: '/default', profileName: 'Default' }; }\n\tasync getDefaultShell(options: IShellLaunchConfigResolveOptions): Promise<string> { return '/default'; }\n\tasync getDefaultShellArgs(options: IShellLaunchConfigResolveOptions): Promise<string | string[]> { return []; }\n\tasync getShellEnvironment(): Promise<IProcessEnvironment> { return process.env; }\n\tgetSafeConfigValue(key: string, os: OperatingSystem): unknown | undefined { return undefined; }\n\tgetSafeConfigValueFullKey(key: string): unknown | undefined { return undefined; }\n}\n\nexport class TestLocalTerminalService implements ILocalTerminalService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonPtyHostExit = Event.None;\n\tonPtyHostUnresponsive = Event.None;\n\tonPtyHostResponsive = Event.None;\n\tonPtyHostRestart = Event.None;\n\n\tasync createProcess(shellLaunchConfig: IShellLaunchConfig, cwd: string, cols: number, rows: number, env: IProcessEnvironment, windowsEnableConpty: boolean, shouldPersist: boolean): Promise<ITerminalChildProcess> {\n\t\treturn new TestTerminalChildProcess(shouldPersist);\n\t}\n\tasync attachToProcess(id: number): Promise<ITerminalChildProcess | undefined> { throw new Error('Method not implemented.'); }\n\tasync listProcesses(): Promise<IProcessDetails[]> { throw new Error('Method not implemented.'); }\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> { throw new Error('Method not implemented.'); }\n\tgetShellEnvironment(): Promise<IProcessEnvironment> { throw new Error('Method not implemented.'); }\n\tasync setTerminalLayoutInfo(argsOrLayout?: ISetTerminalLayoutInfoArgs | ITerminalsLayoutInfoById) { throw new Error('Method not implemented.'); }\n\tasync getTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> { throw new Error('Method not implemented.'); }\n\tasync reduceConnectionGraceTime(): Promise<void> { throw new Error('Method not implemented.'); }\n\tprocessBinary(id: number, data: string): Promise<void> { throw new Error('Method not implemented.'); }\n}\n\nclass TestTerminalChildProcess implements ITerminalChildProcess {\n\tid: number = 0;\n\n\tconstructor(\n\t\treadonly shouldPersist: boolean\n\t) {\n\t}\n\n\tonProcessData = Event.None;\n\tonProcessExit = Event.None;\n\tonProcessReady = Event.None;\n\tonProcessTitleChanged = Event.None;\n\tonProcessShellTypeChanged = Event.None;\n\tasync start(): Promise<undefined> { return undefined; }\n\tshutdown(immediate: boolean): void { }\n\tinput(data: string): void { }\n\tresize(cols: number, rows: number): void { }\n\tacknowledgeDataEvent(charCount: number): void { }\n\tasync getInitialCwd(): Promise<string> { return ''; }\n\tasync getCwd(): Promise<string> { return ''; }\n\tasync getLatency(): Promise<number> { return 0; }\n\tasync processBinary(data: string): Promise<void> { }\n}\n\nexport class TestQuickInputService implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onShow = Event.None;\n\treadonly onHide = Event.None;\n\n\treadonly quickAccess = undefined!;\n\tbackButton!: IQuickInputButton;\n\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[]>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T>;\n\tasync pick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: Omit<IPickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined> {\n\t\tif (isArray(picks)) {\n\t\t\treturn <any>{ label: 'selectedPick', description: 'pick description', value: 'selectedPick' };\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tasync input(options?: IInputOptions, token?: CancellationToken): Promise<string> { return options ? 'resolved' + options.prompt : 'resolved'; }\n\n\tcreateQuickPick<T extends IQuickPickItem>(): IQuickPick<T> { throw new Error('not implemented.'); }\n\tcreateInputBox(): IInputBox { throw new Error('not implemented.'); }\n\tfocus(): void { throw new Error('not implemented.'); }\n\ttoggle(): void { throw new Error('not implemented.'); }\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration): void { throw new Error('not implemented.'); }\n\taccept(): Promise<void> { throw new Error('not implemented.'); }\n\tback(): Promise<void> { throw new Error('not implemented.'); }\n\tcancel(): Promise<void> { throw new Error('not implemented.'); }\n}\n\nexport class TestEditorWorkerService implements IEditorWorkerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcanComputeDiff(original: URI, modified: URI): boolean { return false; }\n\tasync computeDiff(original: URI, modified: URI, ignoreTrimWhitespace: boolean, maxComputationTime: number): Promise<IDiffComputationResult | null> { return null; }\n\tcanComputeDirtyDiff(original: URI, modified: URI): boolean { return false; }\n\tasync computeDirtyDiff(original: URI, modified: URI, ignoreTrimWhitespace: boolean): Promise<IChange[] | null> { return null; }\n\tasync computeMoreMinimalEdits(resource: URI, edits: TextEdit[] | null | undefined): Promise<TextEdit[] | undefined> { return undefined; }\n\tcanComputeWordRanges(resource: URI): boolean { return false; }\n\tasync computeWordRanges(resource: URI, range: IRange): Promise<{ [word: string]: IRange[]; } | null> { return null; }\n\tcanNavigateValueSet(resource: URI): boolean { return false; }\n\tasync navigateValueSet(resource: URI, range: IRange, up: boolean): Promise<IInplaceReplaceSupportResult | null> { return null; }\n}\n"]}