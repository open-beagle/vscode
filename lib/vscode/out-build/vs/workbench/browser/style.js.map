{"version":3,"file":"style.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/style.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/style';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { iconForeground, foreground, selectionBackground, focusBorder, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listHighlightForeground, inputPlaceholderForeground, toolbarHoverBackground, toolbarActiveBackground, toolbarHoverOutline } from 'vs/platform/theme/common/colorRegistry';\nimport { WORKBENCH_BACKGROUND, TITLE_BAR_ACTIVE_BACKGROUND } from 'vs/workbench/common/theme';\nimport { isWeb, isIOS, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { createMetaElement } from 'vs/base/browser/dom';\nimport { isSafari, isStandalone } from 'vs/base/browser/browser';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nregisterThemingParticipant((theme, collector) => {\n\n\t// Foreground\n\tconst windowForeground = theme.getColor(foreground);\n\tif (windowForeground) {\n\t\tcollector.addRule(`.monaco-workbench { color: ${windowForeground}; }`);\n\t}\n\n\t// Background (We need to set the workbench background color so that on Windows we get subpixel-antialiasing)\n\tconst workbenchBackground = WORKBENCH_BACKGROUND(theme);\n\tcollector.addRule(`.monaco-workbench { background-color: ${workbenchBackground}; }`);\n\n\t// Icon defaults\n\tconst iconForegroundColor = theme.getColor(iconForeground);\n\tif (iconForegroundColor) {\n\t\tcollector.addRule(`.codicon { color: ${iconForegroundColor}; }`);\n\t}\n\n\t// Selection\n\tconst windowSelectionBackground = theme.getColor(selectionBackground);\n\tif (windowSelectionBackground) {\n\t\tcollector.addRule(`.monaco-workbench ::selection { background-color: ${windowSelectionBackground}; }`);\n\t}\n\n\t// Input placeholder\n\tconst placeholderForeground = theme.getColor(inputPlaceholderForeground);\n\tif (placeholderForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench input::placeholder { color: ${placeholderForeground}; }\n\t\t\t.monaco-workbench input::-webkit-input-placeholder  { color: ${placeholderForeground}; }\n\t\t\t.monaco-workbench input::-moz-placeholder { color: ${placeholderForeground}; }\n\t\t`);\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench textarea::placeholder { color: ${placeholderForeground}; }\n\t\t\t.monaco-workbench textarea::-webkit-input-placeholder { color: ${placeholderForeground}; }\n\t\t\t.monaco-workbench textarea::-moz-placeholder { color: ${placeholderForeground}; }\n\t\t`);\n\t}\n\n\t// List highlight\n\tconst listHighlightForegroundColor = theme.getColor(listHighlightForeground);\n\tif (listHighlightForegroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\n\t\t\t\tcolor: ${listHighlightForegroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Scrollbars\n\tconst scrollbarShadowColor = theme.getColor(scrollbarShadow);\n\tif (scrollbarShadowColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.top {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 0 6px 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 0 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.top.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 6px 6px -6px inset;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n\tif (scrollbarSliderBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n\tif (scrollbarSliderHoverBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n\tif (scrollbarSliderActiveBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider.active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Focus outline\n\tconst focusOutline = theme.getColor(focusBorder);\n\tif (focusOutline) {\n\t\tcollector.addRule(`\n\t\t.monaco-workbench [tabindex=\"0\"]:focus,\n\t\t.monaco-workbench [tabindex=\"-1\"]:focus,\n\t\t.monaco-workbench .synthetic-focus,\n\t\t.monaco-workbench select:focus,\n\t\t.monaco-workbench .monaco-list:not(.element-focused):focus:before,\n\t\t.monaco-workbench input[type=\"button\"]:focus,\n\t\t.monaco-workbench input[type=\"text\"]:focus,\n\t\t.monaco-workbench button:focus,\n\t\t.monaco-workbench textarea:focus,\n\t\t.monaco-workbench input[type=\"search\"]:focus,\n\t\t.monaco-workbench input[type=\"checkbox\"]:focus {\n\t\t\toutline-color: ${focusOutline};\n\t\t}\n\t\t`);\n\t}\n\n\t// High Contrast theme overwrites for outline\n\tif (theme.type === ColorScheme.HIGH_CONTRAST) {\n\t\tcollector.addRule(`\n\t\t.hc-black [tabindex=\"0\"]:focus,\n\t\t.hc-black [tabindex=\"-1\"]:focus,\n\t\t.hc-black .synthetic-focus,\n\t\t.hc-black select:focus,\n\t\t.hc-black input[type=\"button\"]:focus,\n\t\t.hc-black input[type=\"text\"]:focus,\n\t\t.hc-black textarea:focus,\n\t\t.hc-black input[type=\"checkbox\"]:focus {\n\t\t\toutline-style: solid;\n\t\t\toutline-width: 1px;\n\t\t}\n\n\t\t.hc-black .synthetic-focus input {\n\t\t\tbackground: transparent; /* Search input focus fix when in high contrast */\n\t\t}\n\t\t`);\n\t}\n\n\t// Update <meta name=\"theme-color\" content=\"\"> based on selected theme\n\tif (isWeb) {\n\t\tconst titleBackground = theme.getColor(TITLE_BAR_ACTIVE_BACKGROUND);\n\t\tif (titleBackground) {\n\t\t\tconst metaElementId = 'monaco-workbench-meta-theme-color';\n\t\t\tlet metaElement = document.getElementById(metaElementId) as HTMLMetaElement | null;\n\t\t\tif (!metaElement) {\n\t\t\t\tmetaElement = createMetaElement();\n\t\t\t\tmetaElement.name = 'theme-color';\n\t\t\t\tmetaElement.id = metaElementId;\n\t\t\t}\n\n\t\t\tmetaElement.content = titleBackground.toString();\n\t\t}\n\t}\n\n\t// We disable user select on the root element, however on Safari this seems\n\t// to prevent any text selection in the monaco editor. As a workaround we\n\t// allow to select text in monaco editor instances.\n\tif (isSafari) {\n\t\tcollector.addRule(`\n\t\t\tbody.web {\n\t\t\t\ttouch-action: none;\n\t\t\t}\n\t\t\t.monaco-workbench .monaco-editor .view-lines {\n\t\t\t\tuser-select: text;\n\t\t\t\t-webkit-user-select: text;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Update body background color to ensure the home indicator area looks similar to the workbench\n\tif (isIOS && isStandalone) {\n\t\tcollector.addRule(`body { background-color: ${workbenchBackground}; }`);\n\t}\n\n\t// Action bars\n\tconst toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n\tif (toolbarHoverBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t.monaco-action-bar:not(.vertical) .action-label:not(.disabled):hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor};\n\t\t}\n\t\t.monaco-action-bar:not(.vertical) .monaco-dropdown-with-primary:not(.disabled):hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor};\n\t\t}\n\t`);\n\t}\n\n\tconst toolbarActiveBackgroundColor = theme.getColor(toolbarActiveBackground);\n\tif (toolbarActiveBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t.monaco-action-bar:not(.vertical) .action-item.active .action-label:not(.disabled),\n\t\t.monaco-action-bar:not(.vertical) .monaco-dropdown.active .action-label:not(.disabled) {\n\t\t\tbackground-color: ${toolbarActiveBackgroundColor};\n\t\t}\n\t`);\n\t}\n\n\tconst toolbarHoverOutlineColor = theme.getColor(toolbarHoverOutline);\n\tif (toolbarHoverOutlineColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-action-bar:not(.vertical) .action-item .action-label:hover:not(.disabled) {\n\t\t\t\toutline: 1px dashed ${toolbarHoverOutlineColor};\n\t\t\t\toutline-offset: -1px;\n\t\t\t}\n\t\t`);\n\t}\n});\n\n/**\n * The best font-family to be used in CSS based on the platform:\n * - Windows: Segoe preferred, fallback to sans-serif\n * - macOS: standard system font, fallback to sans-serif\n * - Linux: standard system font preferred, fallback to Ubuntu fonts\n *\n * Note: this currently does not adjust for different locales.\n */\nexport const DEFAULT_FONT_FAMILY = isWindows ? '\"Segoe WPC\", \"Segoe UI\", sans-serif' : isMacintosh ? '-apple-system, BlinkMacSystemFont, sans-serif' : 'system-ui, \"Ubuntu\", \"Droid Sans\", sans-serif';\n"]}