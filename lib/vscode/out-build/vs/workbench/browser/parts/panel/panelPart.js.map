{"version":3,"sources":["vs/workbench/browser/parts/panel/panelPart.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAoDhG,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,6BAAoB;QAqDlD,YACuB,mBAAyC,EAC9C,cAA+B,EAC7B,gBAAmC,EACjC,kBAAuC,EACnC,aAAsC,EAC3C,iBAAqC,EAClC,oBAA2C,EACnD,YAA2B,EACD,qBAA6C,EACjD,iBAAqC,EACtC,gBAAmC;YAEvE,KAAK,CACJ,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,aAAa,EACb,iBAAiB,EACjB,oBAAoB,EACpB,YAAY,EACZ,mBAAQ,CAAC,EAAE,CAAgB,kBAAe,CAAC,MAAM,CAAC,EAClD,SAAS,CAAC,sBAAsB,EAChC,mBAAQ,CAAC,EAAE,CAAgB,kBAAe,CAAC,MAAM,CAAC,CAAC,iBAAiB,EAAE,EACtE,OAAO,EACP,OAAO,EACP,SAAS,4CAET,EAAE,QAAQ,EAAE,IAAI,EAAE,CAClB,CAAC;YArBuC,0BAAqB,GAArB,qBAAqB,CAAwB;YACjD,sBAAiB,GAAjB,iBAAiB,CAAoB;YACtC,qBAAgB,GAAhB,gBAAgB,CAAmB;YAtDxE,eAAe;YAEN,iBAAY,GAAW,GAAG,CAAC;YAC3B,iBAAY,GAAW,MAAM,CAAC,iBAAiB,CAAC;YAChD,kBAAa,GAAW,EAAE,CAAC;YAC3B,kBAAa,GAAW,MAAM,CAAC,iBAAiB,CAAC;YAEjD,SAAI,GAAG,IAAI,CAAC;YAeZ,oBAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAMzC,qBAAgB,GAAG,IAAI,GAAG,EAA+F,CAAC;YAE1H,qBAAgB,GAA6B,IAAI,GAAG,EAAuB,CAAC;YAErF,sBAAiB,GAAG,KAAK,CAAC;YAG1B,yBAAoB,GAAG,KAAK,CAAC;YAMpB,qCAAgC,GAAsC,IAAI,GAAG,EAAgC,CAAC;YAkC9H,IAAI,CAAC,aAAa,GAAG,mBAAQ,CAAC,EAAE,CAAgB,kBAAe,CAAC,MAAM,CAAC,CAAC;YAExE,IAAI,CAAC,UAAU,GAAG,IAAI,mCAAoB,CAAC,IAAI,CAAC,qBAAqB,iBACpE,CAAC,EAAU,EAAE,KAAe,EAAE,EAAE,CAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAyC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,EAChI,CAAC,IAAY,EAAE,EAAU,EAAE,MAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,kBAAkB,CAAC,EAC7G,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAC9C,CAAC;YAEF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,2BAAY,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE;gBACjH,IAAI,EAAE,KAAK;gBACX,WAAW,oBAA+B;gBAC1C,oBAAoB,EAAE;oBACrB,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,mBAAoB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,eAAqB,CAAC,cAAoB;oBAC/J,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;iBACd;gBACD,aAAa,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC;gBAC5F,iBAAiB,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,cAAc;gBACtF,wBAAwB,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,YAAY;gBAC3F,yBAAyB,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,kCAAmB,EAAE,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpJ,2BAA2B,EAAE,OAAO,CAAC,EAAE;oBACtC,OAAO,CAAC,IAAI,CAAC,GAAG;wBACf,IAAI,mBAAS,EAAE;wBACf,GAAG,yCAA0B;4BAC5B,8DAA8D;6BAC7D,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;6BACjE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,qCAAsB,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;wBACrG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,gCAAiB,EAAE,gCAAiB,CAAC,EAAE,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAW,EAAE,IAAY,CAAC,CAAC;qBACtH,CAAC,CAAC;gBACJ,CAAC;gBACD,iCAAiC,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC;gBACrG,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;gBACnE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC;gBACvD,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,aAAa,EAAE,CAAC;gBAChB,kBAAkB,EAAE,EAAE;gBACtB,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;oBACjB,qBAAqB,EAAE,KAAK,CAAC,QAAQ,CAAC,wBAAgB,CAAC;oBACvD,uBAAuB,EAAE,KAAK,CAAC,QAAQ,CAAC,wBAAgB,CAAC;oBACzD,uBAAuB,EAAE,KAAK,CAAC,QAAQ,CAAC,iCAAyB,CAAC;oBAClE,qBAAqB,EAAE,KAAK,CAAC,QAAQ,CAAC,qCAA6B,CAAC;oBACpE,uBAAuB,EAAE,KAAK,CAAC,QAAQ,CAAC,uCAA+B,CAAC;oBACxE,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC,+BAAe,CAAC;oBAChD,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC,+BAAe,CAAC;oBAChD,iBAAiB,EAAE,KAAK,CAAC,QAAQ,CAAC,kCAA0B,CAAC;iBAC7D,CAAC;aACF,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,qBAAqB,GAAG,0BAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC1E,IAAI,CAAC,oBAAoB,GAAG,yBAAiB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAExE,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC;QAtHD,IAAI,eAAe;YAClB,qDAAqD;YACrD,0DAA0D;YAC1D,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;QAClD,CAAC;QAED,IAAI,cAAc;YACjB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC;QACjD,CAAC;QAED,YAAY;QAEZ,IAAI,cAAc,KAAgD,OAAO,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QA4G/L,iCAAiC,CAAC,WAAmB;YAC5D,MAAM,MAAM,GAAc,EAAE,CAAC;YAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,WAAW,CAAE,CAAC;YACpF,MAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,aAAa,CAAE,CAAC;YACnG,IAAI,eAAe,KAAK,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,aAAa,CAAC,EAAE;gBAC3F,MAAM,CAAC,IAAI,CAAC,CAAA,GAAA,kBAAQ,CAAA,CAAC,EAAE,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAe,EAAE,IAAgB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,2BAA2B,CAAC,aAAa,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5M;iBAAM;gBACN,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;gBAC3F,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvD,MAAM,WAAW,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oBAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,CAAE,CAAC;oBAC7F,IAAI,gBAAgB,KAAK,aAAa,EAAE;wBACvC,MAAM,CAAC,IAAI,CAAC,CAAA,GAAA,kBAAQ,CAAA,CAAC,EAAE,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAe,EAAE,IAAgB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,EAAE,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;qBACtM;iBACD;aACD;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,mBAAmB,CAAC,MAAyB;YACpD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1C,MAAM,QAAQ,GACb,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,EAAE,MAAK,KAAK,CAAC,EAAE;oBACjC,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,oBAAoB,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC;oBAC1D,CAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;gBAEtF,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE;oBAE5D,iBAAiB;oBACjB,MAAM,QAAQ,GAAG;wBAChB,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,KAAK,EAAE,KAAK,CAAC,KAAK;wBAClB,cAAc,EAAE,KAAK,CAAC,cAAc;qBACpC,CAAC;oBAEF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBAEzC,iCAAiC;oBACjC,IAAI,CAAC,WAAW,EAAE;wBACjB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBAChC;oBAED,IAAI,QAAQ,EAAE;wBACb,gEAAgE;wBAChE,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,0CAAkB,EAAE;4BACnF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;yBAC3B;wBAED,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBAC9C;iBACD;aACD;YAED,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAE,CAAC;gBACvD,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;gBAC3F,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;gBACvD,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;gBAEhE,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;gBAC1C,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,gCAAgC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC5I,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAE3H,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;aACjD;QACF,CAAC;QAEO,KAAK,CAAC,oBAAoB,CAAC,OAAe;;YACjD,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACtD,IAAI,UAAU,EAAE;gBACf,UAAU,CAAC,OAAO,EAAE,CAAC;aACrB;YACD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAEtC,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,2BAA2B,eAA6B;iBAC1G,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEpH,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAA,MAAA,IAAI,CAAC,cAAc,EAAE,0CAAE,KAAK,EAAE,MAAK,OAAO,EAAE;oBAC/C,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;oBAC9D,MAAM,eAAe,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACxG,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;iBACzC;aACD;iBAAM;gBACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QAEO,cAAc,CAAC,aAA4B,EAAE,kBAAuC;;YAC3F,MAAM,WAAW,GAAG,MAAA,IAAI,CAAC,4BAA4B,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,0CAAE,IAAI,CAAC;YAEhH,MAAM,QAAQ,GAAc;gBAC3B,EAAE,EAAE,aAAa,CAAC,EAAE;gBACpB,IAAI,EAAE,IAAI,CAAC,oBAAoB,IAAI,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW;gBACrG,YAAY,EAAE,kBAAkB,CAAC,YAAY;aAC7C,CAAC;YAEF,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YACpF,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAErC,IAAI,YAAY,YAAY,qDAAsC,EAAE;gBACnE,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACnC;YAED,0EAA0E;YAC1E,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxB;QACF,CAAC;QAEO,uBAAuB,CAAC,aAA4B,EAAE,kBAAuC;YACpG,IAAI,UAAU,GAAG,IAAI,CAAC,gCAAgC,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,UAAU,EAAE;gBAChB,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA,GAAA,yCAAiC,CAAA,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC1G,IAAI,CAAC,gCAAgC,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;aACxE;YACD,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,MAAM,EAAE;gBACpD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,cAAc,EAAE,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;aAC9J;iBAAM,IAAI,aAAa,CAAC,WAAW,EAAE;gBACrC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aACrC;QACF,CAAC;QAEO,cAAc,CAAC,OAAe,EAAE,WAA0B;YACjE,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;gBACjD,OAAO,KAAK,CAAC;aACb;YAED,OAAO,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,KAAI,WAAW,CAAC,KAAK,CAAC,MAAM;gBACpD,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,2BAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChI,CAAC,CAAC,KAAK,CAAC;QACV,CAAC;QAEO,iBAAiB;YAExB,qBAAqB;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAE5F,yBAAyB;YACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5E,4BAA4B;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;YAE9D,yBAAyB;YACzB,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,2BAAe,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBACjE,WAAW,CAAC,KAAK,EAAE,CAAC;gBACpB,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;gBAChF,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;QAEL,CAAC;QAEO,uBAAuB;YAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAEnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC;QAEO,2BAA2B;YAClC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,KAAK,MAAM,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,iDAAiD;gBAC/F,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;oBAC3C,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;iBACvB;aACD;QACF,CAAC;QAEO,aAAa,CAAC,WAAmB;YACxC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAE7C,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChE,IAAI,gBAAgB,EAAE;gBACrB,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC1C,gBAAgB,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC1C;QACF,CAAC;QAEO,WAAW,CAAC,KAAa;YAChC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAE9C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAC9D,IAAI,UAAU,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;aAC3C;YAED,iCAAiC;YACjC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAEnD,MAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YACnE,IAAI,eAAe,EAAE;gBACpB,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBAChE,IAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,WAAW,EAAE;oBAC/B,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;oBAC3F,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;wBAChH,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,qCAAqC;qBAC7E;iBACD;aACD;YAED,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,wFAAwF;YACnH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC;QAEO,YAAY,CAAC,KAAa;YACjC,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAEzB,IAAI,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBAC5C,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;aACnC;YAED,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC;QAEQ,MAAM,CAAC,MAAmB;YAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAEtB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAErB,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAE/B,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,gBAAU,CAAA,CAAC,MAAM,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpF,CAAC;QAEO,uBAAuB;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAG,CAAC;YAC3C,IAAI,CAAC,wBAAwB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9D,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAExE,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACpD,cAAc,CAAC,SAAS,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAoB,EAAE,IAAwC,CAAC,CAAC;YAEpG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YAC1D,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAEvD,IAAI,CAAC,SAAS,CAAC,kCAA4B,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,wBAAwB,EAAE;gBAClG,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE;oBACjB,iBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACpC,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC/F,CAAA,GAAA,sBAAgB,CAAA,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;gBACrE,CAAC;gBACD,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;;oBAClB,iBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBAEpC,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC/F,IAAI,CAAC,wBAAyB,CAAC,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uCAA+B,CAAC,0CAAE,QAAQ,EAAE,KAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtJ,CAAC;gBACD,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;oBAClB,iBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACpC,IAAI,CAAC,wBAAyB,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC3D,CAAC;gBACD,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;oBAChB,iBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACpC,IAAI,CAAC,wBAAyB,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC3D,CAAC;gBACD,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;oBACb,iBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACpC,IAAI,CAAC,wBAAyB,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;oBAE1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;gBACjE,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAEQ,YAAY;YACpB,KAAK,CAAC,YAAY,EAAE,CAAC;YAErB,MAAM,SAAS,GAAG,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YACvD,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,wBAAgB,CAAC,IAAI,EAAE,CAAC;YACxE,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAY,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,8BAAc,CAAC,IAAI,EAAE,CAAC;YACvF,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,CAAC;YAC9C,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAE/C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClC,IAAI,KAAK,EAAE;gBACV,KAAK,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAY,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,8BAAc,CAAC,IAAI,EAAE,CAAC;aAChG;QACF,CAAC;QAED,WAAW,CAAC,EAAU,EAAE,KAAe;YACtC,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,OAAO,SAAS,CAAC,CAAC,gDAAgD;aAClE;YAED,gDAAgD;YAChD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,0CAAkB,EAAE;gBACpD,IAAI;oBACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBACzC;wBAAS;oBACT,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAC/B;aACD;YAED,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAU,CAAC;QAC/C,CAAC;QAED,KAAK,CAAC,SAAS,CAAC,EAAW,EAAE,KAAe;YAC3C,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBAChD,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aACnC;YAED,MAAM,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,EAAE,CAAC;YAEhE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBAChD,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aACnC;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,YAAY,CAAC,OAAe,EAAE,KAAa,EAAE,KAAc;YAC1D,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9D,CAAC;QAED,QAAQ,CAAC,OAAe;YACvB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;QAED,SAAS;YACR,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;iBACnC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;gBAChB,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,QAAQ,EAAE;oBACjC,OAAO,CAAC,CAAC;iBACT;gBAED,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,QAAQ,EAAE;oBACjC,OAAO,CAAC,CAAC,CAAC;iBACV;gBAED,OAAO,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAe;YACd,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClF,OAAO,IAAI,CAAC,SAAS,EAAE;iBACrB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBAC9C,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3F,CAAC;QAED,cAAc;YACb,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAClC,CAAC;QAED,oBAAoB;YACnB,OAAO,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACzC,CAAC;QAED,eAAe;YACd,iDAAiD;YACjD,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,0CAAkB,EAAE;gBACnD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC5B,CAAC;QAEkB,gBAAgB,CAAC,MAAmB;YACtD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACnD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAEpD,OAAO;gBACN,WAAW,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;oBACtC,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBAC/C,IAAI,MAAM,EAAE;wBACX,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;qBACrB;gBACF,CAAC;gBACD,YAAY,EAAE,GAAG,EAAE;oBAClB,kCAAkC;gBACnC,CAAC;aACD,CAAC;QACH,CAAC;QAEQ,MAAM,CAAC,KAAa,EAAE,MAAc;YAC5C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,0CAAkB,EAAE;gBACpD,OAAO;aACP;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,kBAAmB,EAAE;gBAC7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAS,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,kDAAkD;aAC5G;iBAAM;gBACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aACrD;YAED,kBAAkB;YAClB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAExE,uBAAuB;YACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,0BAA0B;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC;QAEO,kBAAkB;YACzB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC5C,IAAI,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,4BAA4B;gBACnF,IAAI,IAAI,CAAC,OAAO,EAAE;oBACjB,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,cAAc,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,2CAA2C;iBAClJ;gBAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,eAAS,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;aAC/E;QACF,CAAC;QAGO,kBAAkB;YACzB,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAClC,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;aACjH;QACF,CAAC;QAEO,mBAAmB,CAAC,WAAmB;YAC9C,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC9D,IAAI,CAAC,gBAAgB,EAAE;gBACtB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACzC,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEhF,IAAI,KAAK,KAAI,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,CAAA,EAAE;oBAC/B,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;iBAC9B;gBAED,IAAI,KAAK,EAAE;oBACV,gBAAgB,GAAG;wBAClB,cAAc,EAAE,IAAI,kCAAmB,CAAC,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC;wBAC1F,YAAY,EAAE,IAAI,iDAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC;qBAC5F,CAAC;iBACF;qBAAM;oBACN,gBAAgB,GAAG;wBAClB,cAAc,EAAE,IAAI,6CAA8B,CAAC,WAAW,EAAE,IAAI,CAAC;wBACrE,YAAY,EAAE,IAAI,qDAAsC,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;qBACxF,CAAC;iBACF;gBAED,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;aACzD;YAED,OAAO,gBAAgB,CAAC;QACzB,CAAC;QAEkB,eAAe,CAAC,WAAmB;YACrD,IAAI,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;gBACvC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;gBAC/C,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAChE,IAAI,gBAAgB,EAAE;oBACrB,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;oBAC1C,gBAAgB,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC1C;gBAED,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,eAAe;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClC,OAAO,CAAC,CAAC;aACT;YAED,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACrC,CAAC;QAEO,uBAAuB,CAAC,CAA2B;YAC1D,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,aAAa,IAAI,CAAC,CAAC,KAAK,mBAAwB;mBACpE,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,0BAA0B,EAAE,CAAC,4DAA4D,EAAE;gBAC9H,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;gBACpC,MAAM,iBAAiB,GAAwB,EAAE,CAAC;gBAClD,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;gBAChE,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;gBAE5C,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;oBACvC,kCAAkC;oBAClC,iBAAiB,CAAC,IAAI,CAAC;wBACtB,EAAE,EAAE,WAAW,CAAC,EAAE;wBAClB,IAAI,EAAE,WAAW,CAAC,IAAI;wBACtB,KAAK,EAAE,WAAW,CAAC,KAAK;wBACxB,MAAM,EAAE,WAAW,CAAC,MAAM;wBAC1B,OAAO,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,CAAC;qBACjE,CAAC,CAAC;iBACH;gBAED,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;oBAC3D,wDAAwD;oBACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;wBACzE,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;qBAC1D;iBACD;gBAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;aAC1D;QACF,CAAC;QAEO,gBAAgB;YACvB,MAAM,KAAK,GAAmB,EAAE,CAAC;YACjC,MAAM,YAAY,GAAgC,EAAE,CAAC;YAErD,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;YAChE,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;gBAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBAC9D,IAAI,aAAa,EAAE;oBAClB,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;oBAC3F,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC/J,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC;iBACnH;aACD;YAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/C,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,CAAC;QACjD,CAAC;QAEO,eAAe;YACtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAE1C,MAAM,YAAY,GAAiC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACtF,MAAM,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACzC,MAAM,UAAU,GAAiB,OAAO,CAAC,KAAK,QAAQ,CAAC,uDAAuD,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9K,MAAM,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;gBACtE,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA,GAAA,yBAAiB,CAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC5G,OAAO,UAAU,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,KAAK,MAAM,wBAAwB,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;gBAC3E,MAAM,mBAAmB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxG,IAAI,mBAAmB,EAAE;oBACxB,mBAAmB,CAAC,IAAI,GAAG,wBAAwB,CAAC,IAAI,CAAC;iBACzD;aACD;YAED,OAAO,YAAY,CAAC;QACrB,CAAC;QAGD,IAAY,iBAAiB;YAC5B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;aAC5D;YAED,OAAO,IAAI,CAAC,kBAAkB,CAAC;QAChC,CAAC;QAED,IAAY,iBAAiB,CAAC,mBAA2B;YACxD,IAAI,IAAI,CAAC,iBAAiB,KAAK,mBAAmB,EAAE;gBACnD,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;gBAC9C,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,CAAC;aACvD;QACF,CAAC;QAEO,0BAA0B;YACjC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,kBAAuB,IAAI,CAAC,CAAC;QACpF,CAAC;QAEO,4BAA4B,CAAC,KAAa;YACjD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,+BAA0C,CAAC;QACpG,CAAC;QAEO,4BAA4B;YACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QACxD,CAAC;QAEO,4BAA4B,CAAC,yBAAsD;YAC1F,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;QACjF,CAAC;QAGD,IAAY,8BAA8B;YACzC,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;gBAC1C,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,uCAAuC,EAAE,CAAC;aACtF;YAED,OAAO,IAAI,CAAC,+BAA+B,CAAC;QAC7C,CAAC;QAED,IAAY,8BAA8B,CAAC,6BAAqC;YAC/E,IAAI,IAAI,CAAC,8BAA8B,KAAK,6BAA6B,EAAE;gBAC1E,IAAI,CAAC,+BAA+B,GAAG,6BAA6B,CAAC;gBACrE,IAAI,CAAC,uCAAuC,CAAC,6BAA6B,CAAC,CAAC;aAC5E;QACF,CAAC;QAEO,uCAAuC;YAC9C,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,2BAA2B,qBAA0B,IAAI,CAAC,CAAC;QACrG,CAAC;QAEO,uCAAuC,CAAC,KAAa;YAC5D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAK,qCAAgD,CAAC;QACxH,CAAC;QAEO,gBAAgB,CAAC,OAAe;YACvC,OAAO,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC;QAC9E,CAAC;QAED,MAAM;YACL,OAAO;gBACN,IAAI,0CAAkB;aACtB,CAAC;QACH,CAAC;KACD,CAAA;IAnvBgB,gCAAsB,GAAG,mCAAmC,CAAC;IAE7D,uBAAa,GAAG,8BAA8B,CAAC;IAC/C,qCAA2B,GAAG,mCAAmC,CAAC;IAC1D,iCAAuB,GAAG,EAAE,CAAC;IANzC,SAAS;QAsDnB,WAAA,mCAAoB,CAAA;QACpB,WAAA,yBAAe,CAAA;QACf,WAAA,6BAAiB,CAAA;QACjB,WAAA,iCAAmB,CAAA;QACnB,WAAA,uCAAuB,CAAA;QACvB,WAAA,+BAAkB,CAAA;QAClB,WAAA,qCAAqB,CAAA;QACrB,WAAA,4BAAa,CAAA;QACb,WAAA,8BAAsB,CAAA;QACtB,WAAA,+BAAkB,CAAA;QAClB,YAAA,8BAAiB,CAAA;OAhEP,SAAS,CAqvBrB;IArvBY,8BAAS;IAuvBtB,CAAA,GAAA,yCAA0B,CAAA,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;QAE/C,sGAAsG;QACtG,sGAAsG;QACtG,8FAA8F;QAC9F,MAAM,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,wBAAgB,CAAC,CAAC;QACzD,IAAI,eAAe,IAAI,eAAe,KAAK,KAAK,CAAC,QAAQ,CAAC,gCAAgB,CAAC,EAAE;YAC5E,SAAS,CAAC,OAAO,CAAC;;;;wBAII,eAAe;;GAEpC,CAAC,CAAC;SACH;QAED,eAAe;QACf,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,qCAA6B,CAAC,CAAC;QAClE,MAAM,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,iCAAyB,CAAC,CAAC;QACpE,IAAI,WAAW,IAAI,iBAAiB,EAAE;YACrC,SAAS,CAAC,OAAO,CAAC;;aAEP,WAAW;2BACG,iBAAiB;;GAEzC,CAAC,CAAC;SACH;QAED,cAAc;QACd,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,2BAAW,CAAC,CAAC;QACrD,IAAI,gBAAgB,EAAE;YACrB,SAAS,CAAC,OAAO,CAAC;;aAEP,WAAW;2BACG,gBAAgB;;;IAGvC,CAAC,CAAC;YACJ,SAAS,CAAC,OAAO,CAAC;;;;IAIhB,CAAC,CAAC;SACJ;QAED,wDAAwD;QACxD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,oCAAoB,CAAC,CAAC;QACrD,IAAI,OAAO,EAAE;YACZ,SAAS,CAAC,OAAO,CAAC;;;qBAGC,OAAO;;;;;;;;;;GAUzB,CAAC,CAAC;SACH;QAED,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,0BAAkB,CAAC,CAAC;QACvD,IAAI,WAAW,EAAE;YAChB,SAAS,CAAC,OAAO,CAAC;;oBAEA,WAAW;;GAE5B,CAAC,CAAC;SACH;IACF,CAAC,CAAC,CAAC;IAEH,CAAA,GAAA,8BAAiB,CAAA,CAAC,4BAAa,EAAE,SAAS,CAAC,CAAC","file":"panelPart.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/panelpart';\nimport { localize } from 'vs/nls';\nimport { IAction, Separator, toAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ActionsOrientation } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IPanel, ActivePanelContext, PanelFocusContext } from 'vs/workbench/common/panel';\nimport { CompositePart, ICompositeTitleLabel } from 'vs/workbench/browser/parts/compositePart';\nimport { Panel, PanelRegistry, Extensions as PanelExtensions, PanelDescriptor } from 'vs/workbench/browser/panel';\nimport { IPanelService, IPanelIdentifier } from 'vs/workbench/services/panel/common/panelService';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IStorageService, StorageScope, IStorageValueChangeEvent, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { PanelActivityAction, TogglePanelAction, PlaceHolderPanelActivityAction, PlaceHolderToggleCompositePinnedAction, PositionPanelActionConfigs, SetPanelPositionAction } from 'vs/workbench/browser/parts/panel/panelActions';\nimport { IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { PANEL_BACKGROUND, PANEL_BORDER, PANEL_ACTIVE_TITLE_FOREGROUND, PANEL_INACTIVE_TITLE_FOREGROUND, PANEL_ACTIVE_TITLE_BORDER, PANEL_INPUT_BORDER, EDITOR_DRAG_AND_DROP_BACKGROUND, PANEL_DRAG_AND_DROP_BORDER } from 'vs/workbench/common/theme';\nimport { activeContrastBorder, focusBorder, contrastBorder, editorBackground, badgeBackground, badgeForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { CompositeBar, ICompositeBarItem, CompositeDragAndDrop } from 'vs/workbench/browser/parts/compositeBar';\nimport { ToggleCompositePinnedAction } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Dimension, trackFocus, EventHelper } from 'vs/base/browser/dom';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IContextKey, IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { isUndefinedOrNull, assertIsDefined } from 'vs/base/common/types';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ViewContainer, IViewDescriptorService, IViewContainerModel, ViewContainerLocation, getEnabledViewContainerContextKey } from 'vs/workbench/common/views';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { Before2D, CompositeDragAndDropObserver, ICompositeDragAndDrop, toggleDropEffect } from 'vs/workbench/browser/dnd';\nimport { IActivity } from 'vs/workbench/common/activity';\nimport { HoverPosition } from 'vs/base/browser/ui/hover/hoverWidget';\n\ninterface ICachedPanel {\n\tid: string;\n\tname?: string;\n\tpinned: boolean;\n\torder?: number;\n\tvisible: boolean;\n\tviews?: { when?: string; }[];\n}\n\ninterface IPlaceholderViewContainer {\n\tid: string;\n\tname?: string;\n}\n\nexport class PanelPart extends CompositePart<Panel> implements IPanelService {\n\n\tstatic readonly activePanelSettingsKey = 'workbench.panelpart.activepanelid';\n\n\tstatic readonly PINNED_PANELS = 'workbench.panel.pinnedPanels';\n\tstatic readonly PLACEHOLDER_VIEW_CONTAINERS = 'workbench.panel.placeholderPanels';\n\tprivate static readonly MIN_COMPOSITE_BAR_WIDTH = 50;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 300;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 77;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\treadonly snap = true;\n\n\tget preferredHeight(): number | undefined {\n\t\t// Don't worry about titlebar or statusbar visibility\n\t\t// The difference is minimal and keeps this function clean\n\t\treturn this.layoutService.dimension.height * 0.4;\n\t}\n\n\tget preferredWidth(): number | undefined {\n\t\treturn this.layoutService.dimension.width * 0.4;\n\t}\n\n\t//#endregion\n\n\tget onDidPanelOpen(): Event<{ panel: IPanel, focus: boolean; }> { return Event.map(this.onDidCompositeOpen.event, compositeOpen => ({ panel: compositeOpen.composite, focus: compositeOpen.focus })); }\n\treadonly onDidPanelClose = this.onDidCompositeClose.event;\n\n\tprivate activePanelContextKey: IContextKey<string>;\n\tprivate panelFocusContextKey: IContextKey<boolean>;\n\n\tprivate compositeBar: CompositeBar;\n\tprivate readonly compositeActions = new Map<string, { activityAction: PanelActivityAction, pinnedAction: ToggleCompositePinnedAction; }>();\n\n\tprivate readonly panelDisposables: Map<string, IDisposable> = new Map<string, IDisposable>();\n\n\tprivate blockOpeningPanel = false;\n\tprivate contentDimension: Dimension | undefined;\n\n\tprivate extensionsRegistered = false;\n\n\tprivate panelRegistry: PanelRegistry;\n\n\tprivate dndHandler: ICompositeDragAndDrop;\n\n\tprivate readonly enabledViewContainersContextKeys: Map<string, IContextKey<boolean>> = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\ttelemetryService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels),\n\t\t\tPanelPart.activePanelSettingsKey,\n\t\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels).getDefaultPanelId(),\n\t\t\t'panel',\n\t\t\t'panel',\n\t\t\tundefined,\n\t\t\tParts.PANEL_PART,\n\t\t\t{ hasTitle: true }\n\t\t);\n\n\t\tthis.panelRegistry = Registry.as<PanelRegistry>(PanelExtensions.Panels);\n\n\t\tthis.dndHandler = new CompositeDragAndDrop(this.viewDescriptorService, ViewContainerLocation.Panel,\n\t\t\t(id: string, focus?: boolean) => (this.openPanel(id, focus) as Promise<IPaneComposite | undefined>).then(panel => panel || null),\n\t\t\t(from: string, to: string, before?: Before2D) => this.compositeBar.move(from, to, before?.horizontallyBefore),\n\t\t\t() => this.compositeBar.getCompositeBarItems()\n\t\t);\n\n\t\tthis.compositeBar = this._register(this.instantiationService.createInstance(CompositeBar, this.getCachedPanels(), {\n\t\t\ticon: false,\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactivityHoverOptions: {\n\t\t\t\tposition: () => this.layoutService.getPanelPosition() === Position.BOTTOM && !this.layoutService.isPanelMaximized() ? HoverPosition.ABOVE : HoverPosition.BELOW,\n\t\t\t\tdelay: () => 0\n\t\t\t},\n\t\t\topenComposite: compositeId => this.openPanel(compositeId, true).then(panel => panel || null),\n\t\t\tgetActivityAction: compositeId => this.getCompositeActions(compositeId).activityAction,\n\t\t\tgetCompositePinnedAction: compositeId => this.getCompositeActions(compositeId).pinnedAction,\n\t\t\tgetOnCompositeClickAction: compositeId => this.instantiationService.createInstance(PanelActivityAction, assertIsDefined(this.getPanel(compositeId))),\n\t\t\tfillExtraContextMenuActions: actions => {\n\t\t\t\tactions.push(...[\n\t\t\t\t\tnew Separator(),\n\t\t\t\t\t...PositionPanelActionConfigs\n\t\t\t\t\t\t// show the contextual menu item if it is not in that position\n\t\t\t\t\t\t.filter(({ when }) => contextKeyService.contextMatchesRules(when))\n\t\t\t\t\t\t.map(({ id, label }) => this.instantiationService.createInstance(SetPanelPositionAction, id, label)),\n\t\t\t\t\tthis.instantiationService.createInstance(TogglePanelAction, TogglePanelAction.ID, localize('hidePanel', \"Hide Panel\"))\n\t\t\t\t]);\n\t\t\t},\n\t\t\tgetContextMenuActionsForComposite: compositeId => this.getContextMenuActionsForComposite(compositeId),\n\t\t\tgetDefaultCompositeId: () => this.panelRegistry.getDefaultPanelId(),\n\t\t\thidePart: () => this.layoutService.setPanelHidden(true),\n\t\t\tdndHandler: this.dndHandler,\n\t\t\tcompositeSize: 0,\n\t\t\toverflowActionSize: 44,\n\t\t\tcolors: theme => ({\n\t\t\t\tactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tinactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tactiveBorderBottomColor: theme.getColor(PANEL_ACTIVE_TITLE_BORDER),\n\t\t\t\tactiveForegroundColor: theme.getColor(PANEL_ACTIVE_TITLE_FOREGROUND),\n\t\t\t\tinactiveForegroundColor: theme.getColor(PANEL_INACTIVE_TITLE_FOREGROUND),\n\t\t\t\tbadgeBackground: theme.getColor(badgeBackground),\n\t\t\t\tbadgeForeground: theme.getColor(badgeForeground),\n\t\t\t\tdragAndDropBorder: theme.getColor(PANEL_DRAG_AND_DROP_BORDER)\n\t\t\t})\n\t\t}));\n\n\t\tthis.activePanelContextKey = ActivePanelContext.bindTo(contextKeyService);\n\t\tthis.panelFocusContextKey = PanelFocusContext.bindTo(contextKeyService);\n\n\t\tthis.registerListeners();\n\t\tthis.onDidRegisterPanels([...this.getPanels()]);\n\t}\n\n\tprivate getContextMenuActionsForComposite(compositeId: string): IAction[] {\n\t\tconst result: IAction[] = [];\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(compositeId)!;\n\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(viewContainer)!;\n\t\tif (defaultLocation !== this.viewDescriptorService.getViewContainerLocation(viewContainer)) {\n\t\t\tresult.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewContainerToLocation(viewContainer, defaultLocation) }));\n\t\t} else {\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (viewContainerModel.allViewDescriptors.length === 1) {\n\t\t\t\tconst viewToReset = viewContainerModel.allViewDescriptors[0];\n\t\t\t\tconst defaultContainer = this.viewDescriptorService.getDefaultContainerById(viewToReset.id)!;\n\t\t\t\tif (defaultContainer !== viewContainer) {\n\t\t\t\t\tresult.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewsToContainer([viewToReset], defaultContainer) }));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate onDidRegisterPanels(panels: PanelDescriptor[]): void {\n\t\tfor (const panel of panels) {\n\t\t\tconst cachedPanel = this.getCachedPanels().filter(({ id }) => id === panel.id)[0];\n\t\t\tconst activePanel = this.getActivePanel();\n\t\t\tconst isActive =\n\t\t\t\tactivePanel?.getId() === panel.id ||\n\t\t\t\t(!activePanel && this.getLastActivePanelId() === panel.id) ||\n\t\t\t\t(this.extensionsRegistered && this.compositeBar.getVisibleComposites().length === 0);\n\n\t\t\tif (isActive || !this.shouldBeHidden(panel.id, cachedPanel)) {\n\n\t\t\t\t// Override order\n\t\t\t\tconst newPanel = {\n\t\t\t\t\tid: panel.id,\n\t\t\t\t\tname: panel.name,\n\t\t\t\t\torder: panel.order,\n\t\t\t\t\trequestedIndex: panel.requestedIndex\n\t\t\t\t};\n\n\t\t\t\tthis.compositeBar.addComposite(newPanel);\n\n\t\t\t\t// Pin it by default if it is new\n\t\t\t\tif (!cachedPanel) {\n\t\t\t\t\tthis.compositeBar.pin(panel.id);\n\t\t\t\t}\n\n\t\t\t\tif (isActive) {\n\t\t\t\t\t// Only try to open the panel if it has been created and visible\n\t\t\t\t\tif (!activePanel && this.element && this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\t\t\t\tthis.doOpenPanel(panel.id);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.compositeBar.activateComposite(panel.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const panel of panels) {\n\t\t\tconst viewContainer = this.getViewContainer(panel.id)!;\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tthis.updateActivity(viewContainer, viewContainerModel);\n\t\t\tthis.showOrHideViewContainer(viewContainer, viewContainerModel);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(viewContainerModel.onDidChangeActiveViewDescriptors(() => this.showOrHideViewContainer(viewContainer, viewContainerModel)));\n\t\t\tdisposables.add(viewContainerModel.onDidChangeContainerInfo(() => this.updateActivity(viewContainer, viewContainerModel)));\n\n\t\t\tthis.panelDisposables.set(panel.id, disposables);\n\t\t}\n\t}\n\n\tprivate async onDidDeregisterPanel(panelId: string): Promise<void> {\n\t\tconst disposable = this.panelDisposables.get(panelId);\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.panelDisposables.delete(panelId);\n\n\t\tconst activeContainers = this.viewDescriptorService.getViewContainersByLocation(ViewContainerLocation.Panel)\n\t\t\t.filter(container => this.viewDescriptorService.getViewContainerModel(container).activeViewDescriptors.length > 0);\n\n\t\tif (activeContainers.length) {\n\t\t\tif (this.getActivePanel()?.getId() === panelId) {\n\t\t\t\tconst defaultPanelId = this.panelRegistry.getDefaultPanelId();\n\t\t\t\tconst containerToOpen = activeContainers.filter(c => c.id === defaultPanelId)[0] || activeContainers[0];\n\t\t\t\tawait this.openPanel(containerToOpen.id);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.layoutService.setPanelHidden(true);\n\t\t}\n\n\t\tthis.removeComposite(panelId);\n\t}\n\n\tprivate updateActivity(viewContainer: ViewContainer, viewContainerModel: IViewContainerModel): void {\n\t\tconst cachedTitle = this.getPlaceholderViewContainers().filter(panel => panel.id === viewContainer.id)[0]?.name;\n\n\t\tconst activity: IActivity = {\n\t\t\tid: viewContainer.id,\n\t\t\tname: this.extensionsRegistered || cachedTitle === undefined ? viewContainerModel.title : cachedTitle,\n\t\t\tkeybindingId: viewContainerModel.keybindingId\n\t\t};\n\n\t\tconst { activityAction, pinnedAction } = this.getCompositeActions(viewContainer.id);\n\t\tactivityAction.setActivity(activity);\n\n\t\tif (pinnedAction instanceof PlaceHolderToggleCompositePinnedAction) {\n\t\t\tpinnedAction.setActivity(activity);\n\t\t}\n\n\t\t// only update our cached panel info after extensions are done registering\n\t\tif (this.extensionsRegistered) {\n\t\t\tthis.saveCachedPanels();\n\t\t}\n\t}\n\n\tprivate showOrHideViewContainer(viewContainer: ViewContainer, viewContainerModel: IViewContainerModel): void {\n\t\tlet contextKey = this.enabledViewContainersContextKeys.get(viewContainer.id);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = this.contextKeyService.createKey(getEnabledViewContainerContextKey(viewContainer.id), false);\n\t\t\tthis.enabledViewContainersContextKeys.set(viewContainer.id, contextKey);\n\t\t}\n\t\tif (viewContainerModel.activeViewDescriptors.length) {\n\t\t\tcontextKey.set(true);\n\t\t\tthis.compositeBar.addComposite({ id: viewContainer.id, name: viewContainer.title, order: viewContainer.order, requestedIndex: viewContainer.requestedIndex });\n\t\t} else if (viewContainer.hideIfEmpty) {\n\t\t\tcontextKey.set(false);\n\t\t\tthis.hideComposite(viewContainer.id);\n\t\t}\n\t}\n\n\tprivate shouldBeHidden(panelId: string, cachedPanel?: ICachedPanel): boolean {\n\t\tconst viewContainer = this.getViewContainer(panelId);\n\t\tif (!viewContainer || !viewContainer.hideIfEmpty) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn cachedPanel?.views && cachedPanel.views.length\n\t\t\t? cachedPanel.views.every(({ when }) => !!when && !this.contextKeyService.contextMatchesRules(ContextKeyExpr.deserialize(when)))\n\t\t\t: false;\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Panel registration\n\t\tthis._register(this.registry.onDidRegister(panel => this.onDidRegisterPanels([panel])));\n\t\tthis._register(this.registry.onDidDeregister(panel => this.onDidDeregisterPanel(panel.id)));\n\n\t\t// Activate on panel open\n\t\tthis._register(this.onDidPanelOpen(({ panel }) => this.onPanelOpen(panel)));\n\n\t\t// Deactivate on panel close\n\t\tthis._register(this.onDidPanelClose(this.onPanelClose, this));\n\n\t\t// Extension registration\n\t\tlet disposables = this._register(new DisposableStore());\n\t\tthis._register(this.extensionService.onDidRegisterExtensions(() => {\n\t\t\tdisposables.clear();\n\t\t\tthis.onDidRegisterExtensions();\n\t\t\tthis.compositeBar.onDidChange(() => this.saveCachedPanels(), this, disposables);\n\t\t\tthis.storageService.onDidChangeValue(e => this.onDidStorageValueChange(e), this, disposables);\n\t\t}));\n\n\t}\n\n\tprivate onDidRegisterExtensions(): void {\n\t\tthis.extensionsRegistered = true;\n\t\tthis.removeNotExistingComposites();\n\n\t\tthis.saveCachedPanels();\n\t}\n\n\tprivate removeNotExistingComposites(): void {\n\t\tconst panels = this.getPanels();\n\t\tfor (const { id } of this.getCachedPanels()) { // should this value match viewlet (load on ctor)\n\t\t\tif (panels.every(panel => panel.id !== id)) {\n\t\t\t\tthis.hideComposite(id);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hideComposite(compositeId: string): void {\n\t\tthis.compositeBar.hideComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate onPanelOpen(panel: IPanel): void {\n\t\tthis.activePanelContextKey.set(panel.getId());\n\n\t\tconst foundPanel = this.panelRegistry.getPanel(panel.getId());\n\t\tif (foundPanel) {\n\t\t\tthis.compositeBar.addComposite(foundPanel);\n\t\t}\n\n\t\t// Activate composite when opened\n\t\tthis.compositeBar.activateComposite(panel.getId());\n\n\t\tconst panelDescriptor = this.panelRegistry.getPanel(panel.getId());\n\t\tif (panelDescriptor) {\n\t\t\tconst viewContainer = this.getViewContainer(panelDescriptor.id);\n\t\t\tif (viewContainer?.hideIfEmpty) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tif (viewContainerModel.activeViewDescriptors.length === 0 && this.compositeBar.getPinnedComposites().length > 1) {\n\t\t\t\t\tthis.hideComposite(panelDescriptor.id); // Update the composite bar by hiding\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.layoutCompositeBar(); // Need to relayout composite bar since different panels have different action bar width\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprivate onPanelClose(panel: IPanel): void {\n\t\tconst id = panel.getId();\n\n\t\tif (this.activePanelContextKey.get() === id) {\n\t\t\tthis.activePanelContextKey.reset();\n\t\t}\n\n\t\tthis.compositeBar.deactivateComposite(panel.getId());\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tthis.element = parent;\n\n\t\tsuper.create(parent);\n\n\t\tthis.createEmptyPanelMessage();\n\n\t\tconst focusTracker = this._register(trackFocus(parent));\n\t\tthis._register(focusTracker.onDidFocus(() => this.panelFocusContextKey.set(true)));\n\t\tthis._register(focusTracker.onDidBlur(() => this.panelFocusContextKey.set(false)));\n\t}\n\n\tprivate createEmptyPanelMessage(): void {\n\t\tconst contentArea = this.getContentArea()!;\n\t\tthis.emptyPanelMessageElement = document.createElement('div');\n\t\tthis.emptyPanelMessageElement.classList.add('empty-panel-message-area');\n\n\t\tconst messageElement = document.createElement('div');\n\t\tmessageElement.classList.add('empty-panel-message');\n\t\tmessageElement.innerText = localize('panel.emptyMessage', \"Drag a view into the panel to display.\");\n\n\t\tthis.emptyPanelMessageElement.appendChild(messageElement);\n\t\tcontentArea.appendChild(this.emptyPanelMessageElement);\n\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(this.emptyPanelMessageElement, {\n\t\t\tonDragOver: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tconst validDropTarget = this.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', validDropTarget);\n\t\t\t},\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\n\t\t\t\tconst validDropTarget = this.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = validDropTarget ? this.theme.getColor(EDITOR_DRAG_AND_DROP_BACKGROUND)?.toString() || '' : '';\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragEnd: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\n\t\t\t\tthis.dndHandler.drop(e.dragAndDropData, undefined, e.eventData);\n\t\t\t},\n\t\t}));\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tcontainer.style.backgroundColor = this.getColor(PANEL_BACKGROUND) || '';\n\t\tconst borderColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\tcontainer.style.borderLeftColor = borderColor;\n\t\tcontainer.style.borderRightColor = borderColor;\n\n\t\tconst title = this.getTitleArea();\n\t\tif (title) {\n\t\t\ttitle.style.borderTopColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\t}\n\t}\n\n\tdoOpenPanel(id: string, focus?: boolean): Panel | undefined {\n\t\tif (this.blockOpeningPanel) {\n\t\t\treturn undefined; // Workaround against a potential race condition\n\t\t}\n\n\t\t// First check if panel is hidden and show if so\n\t\tif (!this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\ttry {\n\t\t\t\tthis.blockOpeningPanel = true;\n\t\t\t\tthis.layoutService.setPanelHidden(false);\n\t\t\t} finally {\n\t\t\t\tthis.blockOpeningPanel = false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.openComposite(id, focus) as Panel;\n\t}\n\n\tasync openPanel(id?: string, focus?: boolean): Promise<Panel | undefined> {\n\t\tif (typeof id === 'string' && this.getPanel(id)) {\n\t\t\treturn this.doOpenPanel(id, focus);\n\t\t}\n\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\tif (typeof id === 'string' && this.getPanel(id)) {\n\t\t\treturn this.doOpenPanel(id, focus);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tshowActivity(panelId: string, badge: IBadge, clazz?: string): IDisposable {\n\t\treturn this.compositeBar.showActivity(panelId, badge, clazz);\n\t}\n\n\tgetPanel(panelId: string): IPanelIdentifier | undefined {\n\t\treturn this.panelRegistry.getPanel(panelId);\n\t}\n\n\tgetPanels(): readonly PanelDescriptor[] {\n\t\treturn this.panelRegistry.getPanels()\n\t\t\t.sort((v1, v2) => {\n\t\t\t\tif (typeof v1.order !== 'number') {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (typeof v2.order !== 'number') {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\treturn v1.order - v2.order;\n\t\t\t});\n\t}\n\n\tgetPinnedPanels(): readonly PanelDescriptor[] {\n\t\tconst pinnedCompositeIds = this.compositeBar.getPinnedComposites().map(c => c.id);\n\t\treturn this.getPanels()\n\t\t\t.filter(p => pinnedCompositeIds.includes(p.id))\n\t\t\t.sort((p1, p2) => pinnedCompositeIds.indexOf(p1.id) - pinnedCompositeIds.indexOf(p2.id));\n\t}\n\n\tgetActivePanel(): IPanel | undefined {\n\t\treturn this.getActiveComposite();\n\t}\n\n\tgetLastActivePanelId(): string {\n\t\treturn this.getLastActiveCompositetId();\n\t}\n\n\thideActivePanel(): void {\n\t\t// First check if panel is visible and hide if so\n\t\tif (this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\tthis.layoutService.setPanelHidden(true);\n\t\t}\n\n\t\tthis.hideActiveComposite();\n\t}\n\n\tprotected override createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tconst titleArea = this.compositeBar.create(parent);\n\t\ttitleArea.classList.add('panel-switcher-container');\n\n\t\treturn {\n\t\t\tupdateTitle: (id, title, keybinding) => {\n\t\t\t\tconst action = this.compositeBar.getAction(id);\n\t\t\t\tif (action) {\n\t\t\t\t\taction.label = title;\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateStyles: () => {\n\t\t\t\t// Handled via theming participant\n\t\t\t}\n\t\t};\n\t}\n\n\toverride layout(width: number, height: number): void {\n\t\tif (!this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.layoutService.getPanelPosition() === Position.RIGHT) {\n\t\t\tthis.contentDimension = new Dimension(width - 1, height); // Take into account the 1px border when layouting\n\t\t} else {\n\t\t\tthis.contentDimension = new Dimension(width, height);\n\t\t}\n\n\t\t// Layout contents\n\t\tsuper.layout(this.contentDimension.width, this.contentDimension.height);\n\n\t\t// Layout composite bar\n\t\tthis.layoutCompositeBar();\n\n\t\t// Add empty panel message\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprivate layoutCompositeBar(): void {\n\t\tif (this.contentDimension && this.dimension) {\n\t\t\tlet availableWidth = this.contentDimension.width - 40; // take padding into account\n\t\t\tif (this.toolBar) {\n\t\t\t\tavailableWidth = Math.max(PanelPart.MIN_COMPOSITE_BAR_WIDTH, availableWidth - this.getToolbarWidth()); // adjust height for global actions showing\n\t\t\t}\n\n\t\t\tthis.compositeBar.layout(new Dimension(availableWidth, this.dimension.height));\n\t\t}\n\t}\n\n\tprivate emptyPanelMessageElement: HTMLElement | undefined;\n\tprivate layoutEmptyMessage(): void {\n\t\tif (this.emptyPanelMessageElement) {\n\t\t\tthis.emptyPanelMessageElement.classList.toggle('visible', this.compositeBar.getVisibleComposites().length === 0);\n\t\t}\n\t}\n\n\tprivate getCompositeActions(compositeId: string): { activityAction: PanelActivityAction, pinnedAction: ToggleCompositePinnedAction; } {\n\t\tlet compositeActions = this.compositeActions.get(compositeId);\n\t\tif (!compositeActions) {\n\t\t\tconst panel = this.getPanel(compositeId);\n\t\t\tconst cachedPanel = this.getCachedPanels().filter(p => p.id === compositeId)[0];\n\n\t\t\tif (panel && cachedPanel?.name) {\n\t\t\t\tpanel.name = cachedPanel.name;\n\t\t\t}\n\n\t\t\tif (panel) {\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: new PanelActivityAction(assertIsDefined(this.getPanel(compositeId)), this),\n\t\t\t\t\tpinnedAction: new ToggleCompositePinnedAction(this.getPanel(compositeId), this.compositeBar)\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: new PlaceHolderPanelActivityAction(compositeId, this),\n\t\t\t\t\tpinnedAction: new PlaceHolderToggleCompositePinnedAction(compositeId, this.compositeBar)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.compositeActions.set(compositeId, compositeActions);\n\t\t}\n\n\t\treturn compositeActions;\n\t}\n\n\tprotected override removeComposite(compositeId: string): boolean {\n\t\tif (super.removeComposite(compositeId)) {\n\t\t\tthis.compositeBar.removeComposite(compositeId);\n\t\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\t\tif (compositeActions) {\n\t\t\t\tcompositeActions.activityAction.dispose();\n\t\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\t\tthis.compositeActions.delete(compositeId);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate getToolbarWidth(): number {\n\t\tconst activePanel = this.getActivePanel();\n\t\tif (!activePanel || !this.toolBar) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.toolBar.getItemsWidth();\n\t}\n\n\tprivate onDidStorageValueChange(e: IStorageValueChangeEvent): void {\n\t\tif (e.key === PanelPart.PINNED_PANELS && e.scope === StorageScope.GLOBAL\n\t\t\t&& this.cachedPanelsValue !== this.getStoredCachedPanelsValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._cachedPanelsValue = undefined;\n\t\t\tconst newCompositeItems: ICompositeBarItem[] = [];\n\t\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\t\tconst cachedPanels = this.getCachedPanels();\n\n\t\t\tfor (const cachedPanel of cachedPanels) {\n\t\t\t\t// copy behavior from activity bar\n\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\tid: cachedPanel.id,\n\t\t\t\t\tname: cachedPanel.name,\n\t\t\t\t\torder: cachedPanel.order,\n\t\t\t\t\tpinned: cachedPanel.pinned,\n\t\t\t\t\tvisible: !!compositeItems.find(({ id }) => id === cachedPanel.id)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (let index = 0; index < compositeItems.length; index++) {\n\t\t\t\t// Add items currently exists but does not exist in new.\n\t\t\t\tif (!newCompositeItems.some(({ id }) => id === compositeItems[index].id)) {\n\t\t\t\t\tnewCompositeItems.splice(index, 0, compositeItems[index]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.compositeBar.setCompositeBarItems(newCompositeItems);\n\t\t}\n\t}\n\n\tprivate saveCachedPanels(): void {\n\t\tconst state: ICachedPanel[] = [];\n\t\tconst placeholders: IPlaceholderViewContainer[] = [];\n\n\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\tfor (const compositeItem of compositeItems) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeItem.id);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tstate.push({ id: compositeItem.id, name: viewContainerModel.title, pinned: compositeItem.pinned, order: compositeItem.order, visible: compositeItem.visible });\n\t\t\t\tplaceholders.push({ id: compositeItem.id, name: this.getCompositeActions(compositeItem.id).activityAction.label });\n\t\t\t}\n\t\t}\n\n\t\tthis.cachedPanelsValue = JSON.stringify(state);\n\t\tthis.setPlaceholderViewContainers(placeholders);\n\t}\n\n\tprivate getCachedPanels(): ICachedPanel[] {\n\t\tconst registeredPanels = this.getPanels();\n\n\t\tconst storedStates: Array<string | ICachedPanel> = JSON.parse(this.cachedPanelsValue);\n\t\tconst cachedPanels = storedStates.map(c => {\n\t\t\tconst serialized: ICachedPanel = typeof c === 'string' /* migration from pinned states to composites states */ ? { id: c, pinned: true, order: undefined, visible: true } : c;\n\t\t\tconst registered = registeredPanels.some(p => p.id === serialized.id);\n\t\t\tserialized.visible = registered ? isUndefinedOrNull(serialized.visible) ? true : serialized.visible : false;\n\t\t\treturn serialized;\n\t\t});\n\n\t\tfor (const placeholderViewContainer of this.getPlaceholderViewContainers()) {\n\t\t\tconst cachedViewContainer = cachedPanels.filter(cached => cached.id === placeholderViewContainer.id)[0];\n\t\t\tif (cachedViewContainer) {\n\t\t\t\tcachedViewContainer.name = placeholderViewContainer.name;\n\t\t\t}\n\t\t}\n\n\t\treturn cachedPanels;\n\t}\n\n\tprivate _cachedPanelsValue: string | undefined;\n\tprivate get cachedPanelsValue(): string {\n\t\tif (!this._cachedPanelsValue) {\n\t\t\tthis._cachedPanelsValue = this.getStoredCachedPanelsValue();\n\t\t}\n\n\t\treturn this._cachedPanelsValue;\n\t}\n\n\tprivate set cachedPanelsValue(cachedViewletsValue: string) {\n\t\tif (this.cachedPanelsValue !== cachedViewletsValue) {\n\t\t\tthis._cachedPanelsValue = cachedViewletsValue;\n\t\t\tthis.setStoredCachedViewletsValue(cachedViewletsValue);\n\t\t}\n\t}\n\n\tprivate getStoredCachedPanelsValue(): string {\n\t\treturn this.storageService.get(PanelPart.PINNED_PANELS, StorageScope.GLOBAL, '[]');\n\t}\n\n\tprivate setStoredCachedViewletsValue(value: string): void {\n\t\tthis.storageService.store(PanelPart.PINNED_PANELS, value, StorageScope.GLOBAL, StorageTarget.USER);\n\t}\n\n\tprivate getPlaceholderViewContainers(): IPlaceholderViewContainer[] {\n\t\treturn JSON.parse(this.placeholderViewContainersValue);\n\t}\n\n\tprivate setPlaceholderViewContainers(placeholderViewContainers: IPlaceholderViewContainer[]): void {\n\t\tthis.placeholderViewContainersValue = JSON.stringify(placeholderViewContainers);\n\t}\n\n\tprivate _placeholderViewContainersValue: string | undefined;\n\tprivate get placeholderViewContainersValue(): string {\n\t\tif (!this._placeholderViewContainersValue) {\n\t\t\tthis._placeholderViewContainersValue = this.getStoredPlaceholderViewContainersValue();\n\t\t}\n\n\t\treturn this._placeholderViewContainersValue;\n\t}\n\n\tprivate set placeholderViewContainersValue(placeholderViewContainesValue: string) {\n\t\tif (this.placeholderViewContainersValue !== placeholderViewContainesValue) {\n\t\t\tthis._placeholderViewContainersValue = placeholderViewContainesValue;\n\t\t\tthis.setStoredPlaceholderViewContainersValue(placeholderViewContainesValue);\n\t\t}\n\t}\n\n\tprivate getStoredPlaceholderViewContainersValue(): string {\n\t\treturn this.storageService.get(PanelPart.PLACEHOLDER_VIEW_CONTAINERS, StorageScope.WORKSPACE, '[]');\n\t}\n\n\tprivate setStoredPlaceholderViewContainersValue(value: string): void {\n\t\tthis.storageService.store(PanelPart.PLACEHOLDER_VIEW_CONTAINERS, value, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\tprivate getViewContainer(panelId: string): ViewContainer | undefined {\n\t\treturn this.viewDescriptorService.getViewContainerById(panelId) || undefined;\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.PANEL_PART\n\t\t};\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\t// Panel Background: since panels can host editors, we apply a background rule if the panel background\n\t// color is different from the editor background color. This is a bit of a hack though. The better way\n\t// would be to have a way to push the background color onto each editor widget itself somehow.\n\tconst panelBackground = theme.getColor(PANEL_BACKGROUND);\n\tif (panelBackground && panelBackground !== theme.getColor(editorBackground)) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel > .content .monaco-editor,\n\t\t\t.monaco-workbench .part.panel > .content .monaco-editor .margin,\n\t\t\t.monaco-workbench .part.panel > .content .monaco-editor .monaco-editor-background {\n\t\t\t\tbackground-color: ${panelBackground};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Title Active\n\tconst titleActive = theme.getColor(PANEL_ACTIVE_TITLE_FOREGROUND);\n\tconst titleActiveBorder = theme.getColor(PANEL_ACTIVE_TITLE_BORDER);\n\tif (titleActive || titleActiveBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item:hover .action-label {\n\t\t\t\tcolor: ${titleActive} !important;\n\t\t\t\tborder-bottom-color: ${titleActiveBorder} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Title focus\n\tconst focusBorderColor = theme.getColor(focusBorder);\n\tif (focusBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item:focus .action-label {\n\t\t\t\tcolor: ${titleActive} !important;\n\t\t\t\tborder-bottom-color: ${focusBorderColor} !important;\n\t\t\t\tborder-bottom: 1px solid;\n\t\t\t}\n\t\t\t`);\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item:focus {\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t\t`);\n\t}\n\n\t// Styling with Outline color (e.g. high contrast theme)\n\tconst outline = theme.getColor(activeContrastBorder);\n\tif (outline) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item.checked .action-label,\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item:hover .action-label {\n\t\t\t\toutline-color: ${outline};\n\t\t\t\toutline-width: 1px;\n\t\t\t\toutline-style: solid;\n\t\t\t\tborder-bottom: none;\n\t\t\t\toutline-offset: -2px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.panel > .title > .panel-switcher-container > .monaco-action-bar .action-item:not(.checked):hover .action-label {\n\t\t\t\toutline-style: dashed;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst inputBorder = theme.getColor(PANEL_INPUT_BORDER);\n\tif (inputBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.panel .monaco-inputbox {\n\t\t\t\tborder-color: ${inputBorder}\n\t\t\t}\n\t\t`);\n\t}\n});\n\nregisterSingleton(IPanelService, PanelPart);\n"]}