{"version":3,"sources":["vs/workbench/browser/parts/views/viewsService.ts"],"names":[],"mappings":"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","file":"viewsService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IViewDescriptorService, ViewContainer, IViewDescriptor, IView, ViewContainerLocation, IViewsService, IViewPaneContainer, getVisbileViewContextKey, getEnabledViewContainerContextKey, FocusedViewContext } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { ContextKeyDefinedExpr, ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isString } from 'vs/base/common/types';\nimport { MenuId, registerAction2, Action2, MenuRegistry, ICommandActionTitle, ILocalizedString } from 'vs/platform/actions/common/actions';\nimport { localize } from 'vs/nls';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { PanelRegistry, PanelDescriptor, Extensions as PanelExtensions, Panel } from 'vs/workbench/browser/panel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { Viewlet, ViewletDescriptor, ViewletRegistry, Extensions as ViewletExtensions } from 'vs/workbench/browser/viewlet';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { URI } from 'vs/base/common/uri';\nimport { IProgressIndicator } from 'vs/platform/progress/common/progress';\nimport { CATEGORIES } from 'vs/workbench/common/actions';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { FilterViewPaneContainer } from 'vs/workbench/browser/parts/views/viewsViewlet';\n\nexport class ViewsService extends Disposable implements IViewsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly viewDisposable: Map<IViewDescriptor, IDisposable>;\n\tprivate readonly viewPaneContainers: Map<string, ViewPaneContainer>;\n\n\tprivate readonly _onDidChangeViewVisibility: Emitter<{ id: string, visible: boolean }> = this._register(new Emitter<{ id: string, visible: boolean }>());\n\treadonly onDidChangeViewVisibility: Event<{ id: string, visible: boolean }> = this._onDidChangeViewVisibility.event;\n\n\tprivate readonly _onDidChangeViewContainerVisibility = this._register(new Emitter<{ id: string, visible: boolean, location: ViewContainerLocation }>());\n\treadonly onDidChangeViewContainerVisibility = this._onDidChangeViewContainerVisibility.event;\n\n\tprivate readonly visibleViewContextKeys: Map<string, IContextKey<boolean>>;\n\tprivate readonly focusedViewContextKey: IContextKey<string>;\n\n\tconstructor(\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper();\n\n\t\tthis.viewDisposable = new Map<IViewDescriptor, IDisposable>();\n\t\tthis.visibleViewContextKeys = new Map<string, IContextKey<boolean>>();\n\t\tthis.viewPaneContainers = new Map<string, ViewPaneContainer>();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.viewDisposable.forEach(disposable => disposable.dispose());\n\t\t\tthis.viewDisposable.clear();\n\t\t}));\n\n\t\tthis.viewDescriptorService.viewContainers.forEach(viewContainer => this.onDidRegisterViewContainer(viewContainer, this.viewDescriptorService.getViewContainerLocation(viewContainer)!));\n\t\tthis._register(this.viewDescriptorService.onDidChangeViewContainers(({ added, removed }) => this.onDidChangeContainers(added, removed)));\n\t\tthis._register(this.viewDescriptorService.onDidChangeContainerLocation(({ viewContainer, from, to }) => this.onDidChangeContainerLocation(viewContainer, from, to)));\n\n\t\t// View Container Visibility\n\t\tthis._register(this.viewletService.onDidViewletOpen(viewlet => this._onDidChangeViewContainerVisibility.fire({ id: viewlet.getId(), visible: true, location: ViewContainerLocation.Sidebar })));\n\t\tthis._register(this.panelService.onDidPanelOpen(e => this._onDidChangeViewContainerVisibility.fire({ id: e.panel.getId(), visible: true, location: ViewContainerLocation.Panel })));\n\t\tthis._register(this.viewletService.onDidViewletClose(viewlet => this._onDidChangeViewContainerVisibility.fire({ id: viewlet.getId(), visible: false, location: ViewContainerLocation.Sidebar })));\n\t\tthis._register(this.panelService.onDidPanelClose(panel => this._onDidChangeViewContainerVisibility.fire({ id: panel.getId(), visible: false, location: ViewContainerLocation.Panel })));\n\n\t\tthis.focusedViewContextKey = FocusedViewContext.bindTo(contextKeyService);\n\t}\n\n\tprivate onViewsAdded(added: IView[]): void {\n\t\tfor (const view of added) {\n\t\t\tthis.onViewsVisibilityChanged(view, view.isBodyVisible());\n\t\t}\n\t}\n\n\tprivate onViewsVisibilityChanged(view: IView, visible: boolean): void {\n\t\tthis.getOrCreateActiveViewContextKey(view).set(visible);\n\t\tthis._onDidChangeViewVisibility.fire({ id: view.id, visible: visible });\n\t}\n\n\tprivate onViewsRemoved(removed: IView[]): void {\n\t\tfor (const view of removed) {\n\t\t\tthis.onViewsVisibilityChanged(view, false);\n\t\t}\n\t}\n\n\tprivate getOrCreateActiveViewContextKey(view: IView): IContextKey<boolean> {\n\t\tconst visibleContextKeyId = getVisbileViewContextKey(view.id);\n\t\tlet contextKey = this.visibleViewContextKeys.get(visibleContextKeyId);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = new RawContextKey(visibleContextKeyId, false).bindTo(this.contextKeyService);\n\t\t\tthis.visibleViewContextKeys.set(visibleContextKeyId, contextKey);\n\t\t}\n\t\treturn contextKey;\n\t}\n\n\tprivate onDidChangeContainers(added: ReadonlyArray<{ container: ViewContainer, location: ViewContainerLocation }>, removed: ReadonlyArray<{ container: ViewContainer, location: ViewContainerLocation }>): void {\n\t\tfor (const { container, location } of removed) {\n\t\t\tthis.deregisterViewletOrPanel(container, location);\n\t\t}\n\t\tfor (const { container, location } of added) {\n\t\t\tthis.onDidRegisterViewContainer(container, location);\n\t\t}\n\t}\n\n\tprivate onDidRegisterViewContainer(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tthis.registerViewletOrPanel(viewContainer, viewContainerLocation);\n\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tthis.onViewDescriptorsAdded(viewContainerModel.allViewDescriptors, viewContainer);\n\t\tthis._register(viewContainerModel.onDidChangeAllViewDescriptors(({ added, removed }) => {\n\t\t\tthis.onViewDescriptorsAdded(added, viewContainer);\n\t\t\tthis.onViewDescriptorsRemoved(removed);\n\t\t}));\n\t\tthis._register(this.registerOpenViewContainerAction(viewContainer));\n\t}\n\n\tprivate onDidChangeContainerLocation(viewContainer: ViewContainer, from: ViewContainerLocation, to: ViewContainerLocation): void {\n\t\tthis.deregisterViewletOrPanel(viewContainer, from);\n\t\tthis.registerViewletOrPanel(viewContainer, to);\n\t}\n\n\tprivate onViewDescriptorsAdded(views: ReadonlyArray<IViewDescriptor>, container: ViewContainer): void {\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(container);\n\t\tif (location === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst composite = this.getComposite(container.id, location);\n\t\tfor (const viewDescriptor of views) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(this.registerOpenViewAction(viewDescriptor));\n\t\t\tdisposables.add(this.registerFocusViewAction(viewDescriptor, composite?.name && composite.name !== composite.id ? composite.name : CATEGORIES.View));\n\t\t\tdisposables.add(this.registerResetViewLocationAction(viewDescriptor));\n\t\t\tthis.viewDisposable.set(viewDescriptor, disposables);\n\t\t}\n\t}\n\n\tprivate onViewDescriptorsRemoved(views: ReadonlyArray<IViewDescriptor>): void {\n\t\tfor (const view of views) {\n\t\t\tconst disposable = this.viewDisposable.get(view);\n\t\t\tif (disposable) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tthis.viewDisposable.delete(view);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async openComposite(compositeId: string, location: ViewContainerLocation, focus?: boolean): Promise<IPaneComposite | undefined> {\n\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\treturn this.viewletService.openViewlet(compositeId, focus);\n\t\t} else if (location === ViewContainerLocation.Panel) {\n\t\t\treturn this.panelService.openPanel(compositeId, focus) as Promise<IPaneComposite>;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getComposite(compositeId: string, location: ViewContainerLocation): { id: string, name: string } | undefined {\n\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\treturn this.viewletService.getViewlet(compositeId);\n\t\t} else if (location === ViewContainerLocation.Panel) {\n\t\t\treturn this.panelService.getPanel(compositeId);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tisViewContainerVisible(id: string): boolean {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tswitch (viewContainerLocation) {\n\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\treturn this.panelService.getActivePanel()?.getId() === id;\n\t\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\t\treturn this.viewletService.getActiveViewlet()?.getId() === id;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetVisibleViewContainer(location: ViewContainerLocation): ViewContainer | null {\n\t\tlet viewContainerId: string | undefined = undefined;\n\t\tswitch (location) {\n\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\tviewContainerId = this.panelService.getActivePanel()?.getId();\n\t\t\t\tbreak;\n\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\tviewContainerId = this.viewletService.getActiveViewlet()?.getId();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn viewContainerId ? this.viewDescriptorService.getViewContainerById(viewContainerId) : null;\n\t}\n\n\tgetActiveViewPaneContainerWithId(viewContainerId: string): IViewPaneContainer | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(viewContainerId);\n\t\treturn viewContainer ? this.getActiveViewPaneContainer(viewContainer) : null;\n\t}\n\n\tasync openViewContainer(id: string, focus?: boolean): Promise<IPaneComposite | null> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tswitch (viewContainerLocation) {\n\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\tconst panel = await this.panelService.openPanel(id, focus);\n\t\t\t\t\treturn panel as IPaneComposite;\n\t\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\t\tconst viewlet = await this.viewletService.openViewlet(id, focus);\n\t\t\t\t\treturn viewlet || null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync closeViewContainer(id: string): Promise<void> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tswitch (viewContainerLocation) {\n\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\treturn this.panelService.getActivePanel()?.getId() === id ? this.layoutService.setPanelHidden(true) : undefined;\n\t\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\t\treturn this.viewletService.getActiveViewlet()?.getId() === id ? this.layoutService.setSideBarHidden(true) : undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tisViewVisible(id: string): boolean {\n\t\tconst activeView = this.getActiveViewWithId(id);\n\t\treturn activeView?.isBodyVisible() || false;\n\t}\n\n\tgetActiveViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer = this.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\treturn activeViewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewPaneContainer: IViewPaneContainer | undefined = this.viewPaneContainers.get(viewContainer.id);\n\t\t\tif (viewPaneContainer) {\n\t\t\t\treturn viewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync openView<T extends IView>(id: string, focus?: boolean): Promise<T | null> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (!viewContainer) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.viewDescriptorService.getViewContainerModel(viewContainer).activeViewDescriptors.some(viewDescriptor => viewDescriptor.id === id)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tconst compositeDescriptor = this.getComposite(viewContainer.id, location!);\n\t\tif (compositeDescriptor) {\n\t\t\tconst paneComposite = await this.openComposite(compositeDescriptor.id, location!) as IPaneComposite | undefined;\n\t\t\tif (paneComposite && paneComposite.openView) {\n\t\t\t\treturn paneComposite.openView<T>(id, focus) || null;\n\t\t\t} else if (focus) {\n\t\t\t\tpaneComposite?.focus();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcloseView(id: string): void {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer = this.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\tconst view = activeViewPaneContainer.getView(id);\n\t\t\t\tif (view) {\n\t\t\t\t\tif (activeViewPaneContainer.views.length === 1) {\n\t\t\t\t\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\tthis.layoutService.setSideBarHidden(true);\n\t\t\t\t\t\t} else if (location === ViewContainerLocation.Panel) {\n\t\t\t\t\t\t\tthis.panelService.hideActivePanel();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getActiveViewPaneContainer(viewContainer: ViewContainer): IViewPaneContainer | null {\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\n\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\tconst activeViewlet = this.viewletService.getActiveViewlet();\n\t\t\tif (activeViewlet?.getId() === viewContainer.id) {\n\t\t\t\treturn activeViewlet.getViewPaneContainer() || null;\n\t\t\t}\n\t\t} else if (location === ViewContainerLocation.Panel) {\n\t\t\tconst activePanel = this.panelService.getActivePanel();\n\t\t\tif (activePanel?.getId() === viewContainer.id) {\n\t\t\t\treturn (activePanel as IPaneComposite).getViewPaneContainer() || null;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetViewProgressIndicator(viewId: string): IProgressIndicator | undefined {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(viewId);\n\t\tif (!viewContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst viewPaneContainer = this.viewPaneContainers.get(viewContainer.id);\n\t\tif (!viewPaneContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst view = viewPaneContainer.getView(viewId);\n\t\tif (!view) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\treturn this.getViewContainerProgressIndicator(viewContainer);\n\t\t}\n\n\t\treturn view.getProgressIndicator();\n\t}\n\n\tprivate getViewContainerProgressIndicator(viewContainer: ViewContainer): IProgressIndicator | undefined {\n\t\treturn this.viewDescriptorService.getViewContainerLocation(viewContainer) === ViewContainerLocation.Sidebar ? this.viewletService.getProgressIndicator(viewContainer.id) : this.panelService.getProgressIndicator(viewContainer.id);\n\t}\n\n\tprivate registerOpenViewContainerAction(viewContainer: ViewContainer): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewContainer.openCommandActionDescriptor) {\n\t\t\tlet { id, title, mnemonicTitle, keybindings, order } = viewContainer.openCommandActionDescriptor ?? { id: viewContainer.id };\n\t\t\ttitle = title ?? viewContainer.title;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(registerAction2(class OpenViewContainerAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\tconst viewContainerLocation = that.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\t\t\tif (viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\t\treturn { value: localize('show view', \"Show {0}\", title), original: `Show ${title}` };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { value: localize('toggle view', \"Toggle {0}\", title), original: `Toggle ${title}` };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcategory: CATEGORIES.View.value,\n\t\t\t\t\t\tprecondition: ContextKeyExpr.has(getEnabledViewContainerContextKey(viewContainer.id)),\n\t\t\t\t\t\tkeybinding: keybindings ? { ...keybindings, weight: KeybindingWeight.WorkbenchContrib } : undefined,\n\t\t\t\t\t\tf1: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpublic async run(serviceAccessor: ServicesAccessor): Promise<any> {\n\t\t\t\t\tconst editorGroupService = serviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(IViewDescriptorService);\n\t\t\t\t\tconst layoutService = serviceAccessor.get(IWorkbenchLayoutService);\n\t\t\t\t\tconst viewsService = serviceAccessor.get(IViewsService);\n\t\t\t\t\tconst viewContainerLocation = viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\tswitch (viewContainerLocation) {\n\t\t\t\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\t\t\t\tif (!viewsService.isViewContainerVisible(viewContainer.id) || !layoutService.hasFocus(Parts.SIDEBAR_PART)) {\n\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(viewContainer.id, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\t\t\tif (!viewsService.isViewContainerVisible(viewContainer.id) || !layoutService.hasFocus(Parts.PANEL_PART)) {\n\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(viewContainer.id, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tviewsService.closeViewContainer(viewContainer.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (mnemonicTitle) {\n\t\t\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(viewContainer);\n\t\t\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\ttitle: mnemonicTitle,\n\t\t\t\t\t},\n\t\t\t\t\tgroup: defaultLocation === ViewContainerLocation.Sidebar ? '3_views' : '4_panels',\n\t\t\t\t\twhen: ContextKeyExpr.has(getEnabledViewContainerContextKey(viewContainer.id)),\n\t\t\t\t\torder: order ?? Number.MAX_VALUE\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerOpenViewAction(viewDescriptor: IViewDescriptor): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewDescriptor.openCommandActionDescriptor) {\n\t\t\tconst title = viewDescriptor.openCommandActionDescriptor.title ?? viewDescriptor.name;\n\t\t\tconst commandId = viewDescriptor.openCommandActionDescriptor.id;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(registerAction2(class OpenViewAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\tconst viewContainerLocation = that.viewDescriptorService.getViewLocationById(viewDescriptor.id);\n\t\t\t\t\t\t\tif (viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\t\treturn { value: localize('show view', \"Show {0}\", title), original: `Show ${title}` };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { value: localize('toggle view', \"Toggle {0}\", title), original: `Toggle ${title}` };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcategory: CATEGORIES.View.value,\n\t\t\t\t\t\tprecondition: ContextKeyDefinedExpr.create(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\tkeybinding: viewDescriptor.openCommandActionDescriptor!.keybindings ? { ...viewDescriptor.openCommandActionDescriptor!.keybindings, weight: KeybindingWeight.WorkbenchContrib } : undefined,\n\t\t\t\t\t\tf1: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpublic async run(serviceAccessor: ServicesAccessor): Promise<any> {\n\t\t\t\t\tconst editorGroupService = serviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(IViewDescriptorService);\n\t\t\t\t\tconst layoutService = serviceAccessor.get(IWorkbenchLayoutService);\n\t\t\t\t\tconst viewsService = serviceAccessor.get(IViewsService);\n\t\t\t\t\tconst contextKeyService = serviceAccessor.get(IContextKeyService);\n\n\t\t\t\t\tconst focusedViewId = FocusedViewContext.getValue(contextKeyService);\n\t\t\t\t\tif (focusedViewId === viewDescriptor.id) {\n\t\t\t\t\t\tif (viewDescriptorService.getViewLocationById(viewDescriptor.id) === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlayoutService.setPanelHidden(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewsService.openView(viewDescriptor.id, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (viewDescriptor.openCommandActionDescriptor.mnemonicTitle) {\n\t\t\t\tconst defaultViewContainer = this.viewDescriptorService.getDefaultContainerById(viewDescriptor.id);\n\t\t\t\tif (defaultViewContainer) {\n\t\t\t\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(defaultViewContainer);\n\t\t\t\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\t\ttitle: viewDescriptor.openCommandActionDescriptor.mnemonicTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgroup: defaultLocation === ViewContainerLocation.Sidebar ? '3_views' : '4_panels',\n\t\t\t\t\t\twhen: ContextKeyDefinedExpr.create(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\torder: viewDescriptor.openCommandActionDescriptor.order ?? Number.MAX_VALUE\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn disposables;\n\t}\n\n\tprivate registerFocusViewAction(viewDescriptor: IViewDescriptor, category?: string | ILocalizedString): IDisposable {\n\t\treturn registerAction2(class FocusViewAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: viewDescriptor.focusCommand ? viewDescriptor.focusCommand.id : `${viewDescriptor.id}.focus`,\n\t\t\t\t\ttitle: { original: `Focus on ${viewDescriptor.name} View`, value: localize({ key: 'focus view', comment: ['{0} indicates the name of the view to be focused.'] }, \"Focus on {0} View\", viewDescriptor.name) },\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: viewDescriptor.when,\n\t\t\t\t\t}],\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\twhen: ContextKeyExpr.has(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\tprimary: viewDescriptor.focusCommand?.keybindings?.primary,\n\t\t\t\t\t\tsecondary: viewDescriptor.focusCommand?.keybindings?.secondary,\n\t\t\t\t\t\tlinux: viewDescriptor.focusCommand?.keybindings?.linux,\n\t\t\t\t\t\tmac: viewDescriptor.focusCommand?.keybindings?.mac,\n\t\t\t\t\t\twin: viewDescriptor.focusCommand?.keybindings?.win\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\taccessor.get(IViewsService).openView(viewDescriptor.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerResetViewLocationAction(viewDescriptor: IViewDescriptor): IDisposable {\n\t\treturn registerAction2(class ResetViewLocationAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `${viewDescriptor.id}.resetViewLocation`,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\toriginal: 'Reset Location',\n\t\t\t\t\t\tvalue: localize('resetViewLocation', \"Reset Location\")\n\t\t\t\t\t},\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitleContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tContextKeyExpr.equals('view', viewDescriptor.id),\n\t\t\t\t\t\t\t\tContextKeyExpr.equals(`${viewDescriptor.id}.defaultViewLocation`, false)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: '1_hide',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\t\t\tconst defaultContainer = viewDescriptorService.getDefaultContainerById(viewDescriptor.id)!;\n\t\t\t\tconst containerModel = viewDescriptorService.getViewContainerModel(defaultContainer)!;\n\n\t\t\t\t// The default container is hidden so we should try to reset its location first\n\t\t\t\tif (defaultContainer.hideIfEmpty && containerModel.visibleViewDescriptors.length === 0) {\n\t\t\t\t\tconst defaultLocation = viewDescriptorService.getDefaultViewContainerLocation(defaultContainer)!;\n\t\t\t\t\tviewDescriptorService.moveViewContainerToLocation(defaultContainer, defaultLocation);\n\t\t\t\t}\n\n\t\t\t\tviewDescriptorService.moveViewsToContainer([viewDescriptor], viewDescriptorService.getDefaultContainerById(viewDescriptor.id)!);\n\t\t\t\taccessor.get(IViewsService).openView(viewDescriptor.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerViewletOrPanel(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tswitch (viewContainerLocation) {\n\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\tthis.registerPanel(viewContainer);\n\t\t\t\tbreak;\n\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\tif (viewContainer.ctorDescriptor) {\n\t\t\t\t\tthis.registerViewlet(viewContainer);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate deregisterViewletOrPanel(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tswitch (viewContainerLocation) {\n\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\tthis.deregisterPanel(viewContainer);\n\t\t\t\tbreak;\n\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\tif (viewContainer.ctorDescriptor) {\n\t\t\t\t\tthis.deregisterViewlet(viewContainer);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate createViewPaneContainer(element: HTMLElement, viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation, disposables: DisposableStore, instantiationService: IInstantiationService): ViewPaneContainer {\n\t\tconst viewPaneContainer: ViewPaneContainer = (instantiationService as any).createInstance(viewContainer.ctorDescriptor!.ctor, ...(viewContainer.ctorDescriptor!.staticArguments || []));\n\n\t\tthis.viewPaneContainers.set(viewPaneContainer.getId(), viewPaneContainer);\n\t\tdisposables.add(toDisposable(() => this.viewPaneContainers.delete(viewPaneContainer.getId())));\n\t\tdisposables.add(viewPaneContainer.onDidAddViews(views => this.onViewsAdded(views)));\n\t\tdisposables.add(viewPaneContainer.onDidChangeViewVisibility(view => this.onViewsVisibilityChanged(view, view.isBodyVisible())));\n\t\tdisposables.add(viewPaneContainer.onDidRemoveViews(views => this.onViewsRemoved(views)));\n\t\tdisposables.add(viewPaneContainer.onDidFocusView(view => this.focusedViewContextKey.set(view.id)));\n\t\tdisposables.add(viewPaneContainer.onDidBlurView(view => {\n\t\t\tif (this.focusedViewContextKey.get() === view.id) {\n\t\t\t\tthis.focusedViewContextKey.reset();\n\t\t\t}\n\t\t}));\n\n\t\treturn viewPaneContainer;\n\t}\n\n\tprivate registerPanel(viewContainer: ViewContainer): void {\n\t\tconst that = this;\n\t\tclass PaneContainerPanel extends Panel {\n\t\t\tconstructor(\n\t\t\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t\t\t@IStorageService storageService: IStorageService,\n\t\t\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t\t\t@IThemeService themeService: IThemeService,\n\t\t\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t\t\t@IExtensionService extensionService: IExtensionService,\n\t\t\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t\t) {\n\t\t\t\tsuper(viewContainer.id, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService);\n\t\t\t}\n\n\t\t\tprotected createViewPaneContainer(element: HTMLElement): ViewPaneContainer {\n\t\t\t\tconst viewPaneContainerDisposables = this._register(new DisposableStore());\n\n\t\t\t\t// Use composite's instantiation service to get the editor progress service for any editors instantiated within the composite\n\t\t\t\treturn that.createViewPaneContainer(element, viewContainer, ViewContainerLocation.Panel, viewPaneContainerDisposables, this.instantiationService);\n\t\t\t}\n\t\t}\n\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels).registerPanel(PanelDescriptor.create(\n\t\t\tPaneContainerPanel,\n\t\t\tviewContainer.id,\n\t\t\tviewContainer.title,\n\t\t\tundefined,\n\t\t\tviewContainer.order,\n\t\t\tviewContainer.requestedIndex,\n\t\t));\n\t}\n\n\tprivate deregisterPanel(viewContainer: ViewContainer): void {\n\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels).deregisterPanel(viewContainer.id);\n\t}\n\n\tprivate registerViewlet(viewContainer: ViewContainer): void {\n\t\tconst that = this;\n\t\tclass PaneContainerViewlet extends Viewlet {\n\t\t\tconstructor(\n\t\t\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t\t\t@IStorageService storageService: IStorageService,\n\t\t\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t\t\t@IThemeService themeService: IThemeService,\n\t\t\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t\t\t@IExtensionService extensionService: IExtensionService,\n\t\t\t) {\n\t\t\t\tsuper(viewContainer.id, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService, layoutService, configurationService);\n\t\t\t}\n\n\t\t\tprotected createViewPaneContainer(element: HTMLElement): ViewPaneContainer {\n\t\t\t\tconst viewPaneContainerDisposables = this._register(new DisposableStore());\n\n\t\t\t\t// Use composite's instantiation service to get the editor progress service for any editors instantiated within the composite\n\t\t\t\tconst viewPaneContainer = that.createViewPaneContainer(element, viewContainer, ViewContainerLocation.Sidebar, viewPaneContainerDisposables, this.instantiationService);\n\n\t\t\t\t// Only updateTitleArea for non-filter views: microsoft/vscode-remote-release#3676\n\t\t\t\tif (!(viewPaneContainer instanceof FilterViewPaneContainer)) {\n\t\t\t\t\tviewPaneContainerDisposables.add(Event.any(viewPaneContainer.onDidAddViews, viewPaneContainer.onDidRemoveViews, viewPaneContainer.onTitleAreaUpdate)(() => {\n\t\t\t\t\t\t// Update title area since there is no better way to update secondary actions\n\t\t\t\t\t\tthis.updateTitleArea();\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn viewPaneContainer;\n\t\t\t}\n\t\t}\n\t\tRegistry.as<ViewletRegistry>(ViewletExtensions.Viewlets).registerViewlet(ViewletDescriptor.create(\n\t\t\tPaneContainerViewlet,\n\t\t\tviewContainer.id,\n\t\t\tviewContainer.title,\n\t\t\tisString(viewContainer.icon) ? viewContainer.icon : undefined,\n\t\t\tviewContainer.order,\n\t\t\tviewContainer.requestedIndex,\n\t\t\tviewContainer.icon instanceof URI ? viewContainer.icon : undefined\n\t\t));\n\t}\n\n\tprivate deregisterViewlet(viewContainer: ViewContainer): void {\n\t\tRegistry.as<ViewletRegistry>(ViewletExtensions.Viewlets).deregisterViewlet(viewContainer.id);\n\t}\n}\n\nregisterSingleton(IViewsService, ViewsService);\n"]}