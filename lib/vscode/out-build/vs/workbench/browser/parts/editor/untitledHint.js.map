{"version":3,"sources":["vs/workbench/browser/parts/editor/untitledHint.ts"],"names":[],"mappings":"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","file":"untitledHint.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { localize } from 'vs/nls';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { inputPlaceholderForeground, textLinkForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ChangeModeAction } from 'vs/workbench/browser/parts/editor/editorStatus';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { PLAINTEXT_MODE_ID } from 'vs/editor/common/modes/modesRegistry';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { Schemas } from 'vs/base/common/network';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITASExperimentService } from 'vs/workbench/services/experiment/common/experimentService';\nimport { ConfigurationChangedEvent, EditorOption } from 'vs/editor/common/config/editorOptions';\nconst $ = dom.$;\n\nconst untitledHintSetting = 'workbench.editor.untitled.hint';\nexport class UntitledHintContribution implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.untitledHint';\n\n\tprivate toDispose: IDisposable[];\n\tprivate untitledHintContentWidget: UntitledHintContentWidget | undefined;\n\tprivate experimentTreatment: 'text' | 'hidden' | undefined;\n\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITASExperimentService private readonly experimentService: ITASExperimentService\n\n\t) {\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.editor.onDidChangeModel(() => this.update()));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelLanguage(() => this.update()));\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(untitledHintSetting)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.experimentService.getTreatment<'text' | 'hidden'>('untitledhint').then(treatment => {\n\t\t\tthis.experimentTreatment = treatment;\n\t\t\tthis.update();\n\t\t});\n\t}\n\n\tprivate update(): void {\n\t\tthis.untitledHintContentWidget?.dispose();\n\t\tconst configValue = this.configurationService.getValue<'text' | 'hidden' | 'default'>(untitledHintSetting);\n\t\tconst untitledHintMode = configValue === 'default' ? (this.experimentTreatment || 'text') : configValue;\n\n\t\tconst model = this.editor.getModel();\n\n\t\tif (model && model.uri.scheme === Schemas.untitled && model.getModeId() === PLAINTEXT_MODE_ID && untitledHintMode === 'text') {\n\t\t\tthis.untitledHintContentWidget = new UntitledHintContentWidget(this.editor, this.commandService, this.configurationService);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t\tthis.untitledHintContentWidget?.dispose();\n\t}\n}\n\nclass UntitledHintContentWidget implements IContentWidget {\n\n\tprivate static readonly ID = 'editor.widget.untitledHint';\n\n\tprivate domNode: HTMLElement | undefined;\n\tprivate toDispose: IDisposable[];\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(editor.onDidChangeModelContent(() => this.onDidChangeModelContent()));\n\t\tthis.toDispose.push(this.editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (this.domNode && e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t}\n\t\t}));\n\t\tthis.onDidChangeModelContent();\n\t}\n\n\tprivate onDidChangeModelContent(): void {\n\t\tif (this.editor.getValue() === '') {\n\t\t\tthis.editor.addContentWidget(this);\n\t\t} else {\n\t\t\tthis.editor.removeContentWidget(this);\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn UntitledHintContentWidget.ID;\n\t}\n\n\t// Select a language to get started. Start typing to dismiss, or don't show this again.\n\tgetDomNode(): HTMLElement {\n\t\tif (!this.domNode) {\n\t\t\tthis.domNode = $('.untitled-hint');\n\t\t\tthis.domNode.style.width = 'max-content';\n\t\t\tconst language = $('a.language-mode');\n\t\t\tlanguage.style.cursor = 'pointer';\n\t\t\tlanguage.innerText = localize('selectAlanguage', \"Select a language\");\n\t\t\tthis.domNode.appendChild(language);\n\t\t\tconst toGetStarted = $('span');\n\t\t\ttoGetStarted.innerText = localize('toGetStarted', \" to get started. Start typing to dismiss, or \",);\n\t\t\tthis.domNode.appendChild(toGetStarted);\n\n\t\t\tconst dontShow = $('a');\n\t\t\tdontShow.style.cursor = 'pointer';\n\t\t\tdontShow.innerText = localize('dontshow', \"don't show\");\n\t\t\tthis.domNode.appendChild(dontShow);\n\n\t\t\tconst thisAgain = $('span');\n\t\t\tthisAgain.innerText = localize('thisAgain', \" this again.\");\n\t\t\tthis.domNode.appendChild(thisAgain);\n\n\t\t\tthis.toDispose.push(dom.addDisposableListener(language, 'click', async e => {\n\t\t\t\te.stopPropagation();\n\t\t\t\t// Need to focus editor before so current editor becomes active and the command is properly executed\n\t\t\t\tthis.editor.focus();\n\t\t\t\tawait this.commandService.executeCommand(ChangeModeAction.ID, { from: 'hint' });\n\t\t\t\tthis.editor.focus();\n\t\t\t}));\n\n\t\t\tthis.toDispose.push(dom.addDisposableListener(dontShow, 'click', () => {\n\t\t\t\tthis.configurationService.updateValue(untitledHintSetting, 'hidden');\n\t\t\t\tthis.dispose();\n\t\t\t\tthis.editor.focus();\n\t\t\t}));\n\n\t\t\tthis.toDispose.push(dom.addDisposableListener(this.domNode, 'click', () => {\n\t\t\t\tthis.editor.focus();\n\t\t\t}));\n\n\t\t\tthis.domNode.style.fontStyle = 'italic';\n\t\t\tthis.domNode.style.paddingLeft = '4px';\n\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t}\n\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: { lineNumber: 1, column: 1 },\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis.editor.removeContentWidget(this);\n\t\tdispose(this.toDispose);\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst inputPlaceholderForegroundColor = theme.getColor(inputPlaceholderForeground);\n\tif (inputPlaceholderForegroundColor) {\n\t\tcollector.addRule(`.monaco-editor .contentWidgets .untitled-hint { color: ${inputPlaceholderForegroundColor}; }`);\n\t}\n\tconst textLinkForegroundColor = theme.getColor(textLinkForeground);\n\tif (textLinkForegroundColor) {\n\t\tcollector.addRule(`.monaco-editor .contentWidgets .untitled-hint a { color: ${textLinkForegroundColor}; }`);\n\t}\n});\n"]}