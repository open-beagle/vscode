{"version":3,"sources":["vs/workbench/browser/parts/editor/binaryEditor.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBhG;;OAEG;IACH,IAAsB,wBAAwB,GAA9C,MAAsB,wBAAyB,SAAQ,uBAAU;QAchE,YACC,EAAU,EACV,SAAyB,EACzB,gBAAmC,EACnC,YAA2B,EACV,cAA+B;YAEhD,KAAK,CAAC,EAAE,EAAE,gBAAgB,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;YAnB1C,yBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAQ,CAAC,CAAC;YACnE,wBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAE9C,sBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAQ,CAAC,CAAC;YAChE,qBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAMjD,oBAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,6BAAiB,EAAE,CAAC,CAAC;YAWjE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,CAAC;QAEQ,QAAQ;YAChB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAc,EAAE,IAAe,CAAC,CAAC;QACtF,CAAC;QAES,YAAY,CAAC,MAAmB;YAEzC,uBAAuB;YACvB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,+BAA+B,CAAC;YACjE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,4DAA4D;YAE/F,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,wCAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,UAAU,cAA0B,EAAE,QAAQ,cAA0B,EAAE,CAAC,CAAC,CAAC;YAC9J,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;QACjD,CAAC;QAEQ,KAAK,CAAC,QAAQ,CAAC,KAAkB,EAAE,OAAkC,EAAE,OAA2B,EAAE,KAAwB;YACpI,MAAM,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEpC,yBAAyB;YACzB,IAAI,KAAK,CAAC,uBAAuB,EAAE;gBAClC,OAAO;aACP;YAED,wBAAwB;YACxB,IAAI,CAAC,CAAC,KAAK,YAAY,qCAAiB,CAAC,EAAE;gBAC1C,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACjD;YAED,eAAe;YACf,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC;QAEO,WAAW,CAAC,KAAkB,EAAE,OAAkC,EAAE,KAAwB;YACnG,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAA,GAAA,wBAAgB,CAAA,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAE5F,CAAA,GAAA,eAAS,CAAA,CAAC,eAAe,CAAC,CAAC;YAE3B,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;YAE1C,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC1C,KAAK,CAAC,WAAW,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAmB,EAAE,IAA2G,CAAC,CAAC;YAC/J,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAEnC,MAAM,IAAI,GAAG,CAAA,GAAA,YAAM,CAAA,CAAC,KAAK,EAAE,CAAA,GAAA,OAAC,CAAA,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAY,EAAE,IAAgC,CAAC,CAAC;YAE5E,WAAW,CAAC,GAAG,CAAC,CAAA,GAAA,2BAAqB,CAAA,CAAC,IAAI,EAAE,eAAS,CAAC,KAAK,EAAE,KAAK,IAAI,EAAE;gBACvE,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gBAElD,sEAAsE;gBACtE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC,CAAC;YAEJ,SAAS,CAAC,WAAW,EAAE,CAAC;YAExB,kBAAkB;YAClB,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,qBAAqB,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,gBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAEtF,OAAO,WAAW,CAAC;QACpB,CAAC;QAEO,qBAAqB,CAAC,IAAwB;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QAClC,CAAC;QAED,WAAW;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAEQ,UAAU;YAElB,aAAa;YACb,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;YAEtC,iBAAiB;YACjB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,CAAA,GAAA,eAAS,CAAA,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aAChC;YACD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAE7B,KAAK,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,SAAoB;YAE1B,8BAA8B;YAC9B,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAA,GAAA,wBAAgB,CAAA,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5F,CAAA,GAAA,UAAI,CAAA,CAAC,eAAe,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YACzD,SAAS,CAAC,WAAW,EAAE,CAAC;QACzB,CAAC;QAEQ,KAAK;YACb,MAAM,eAAe,GAAG,CAAA,GAAA,uBAAe,CAAA,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAE9D,eAAe,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC;QAEQ,OAAO;;YACf,MAAA,IAAI,CAAC,eAAe,0CAAE,MAAM,EAAE,CAAC;YAE/B,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IAvIqB,wBAAwB;QAmB3C,WAAA,yBAAe,CAAA;OAnBI,wBAAwB,CAuI7C;IAvIqB,4DAAwB","file":"binaryEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/binaryeditor';\nimport { localize } from 'vs/nls';\nimport { Emitter } from 'vs/base/common/event';\nimport { EditorInput, EditorOptions, IEditorOpenContext } from 'vs/workbench/common/editor';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { BinaryEditorModel } from 'vs/workbench/common/editor/binaryEditorModel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Dimension, size, clearNode, append, addDisposableListener, EventType, $ } from 'vs/base/browser/dom';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { assertIsDefined, assertAllDefined } from 'vs/base/common/types';\nimport { ByteSize } from 'vs/platform/files/common/files';\n\nexport interface IOpenCallbacks {\n\topenInternal: (input: EditorInput, options: EditorOptions | undefined) => Promise<void>;\n}\n\n/*\n * This class is only intended to be subclassed and not instantiated.\n */\nexport abstract class BaseBinaryResourceEditor extends EditorPane {\n\n\tprivate readonly _onDidChangeMetadata = this._register(new Emitter<void>());\n\treadonly onDidChangeMetadata = this._onDidChangeMetadata.event;\n\n\tprivate readonly _onDidOpenInPlace = this._register(new Emitter<void>());\n\treadonly onDidOpenInPlace = this._onDidOpenInPlace.event;\n\n\tprivate callbacks: IOpenCallbacks;\n\tprivate metadata: string | undefined;\n\tprivate binaryContainer: HTMLElement | undefined;\n\tprivate scrollbar: DomScrollableElement | undefined;\n\tprivate inputDisposable = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tid: string,\n\t\tcallbacks: IOpenCallbacks,\n\t\ttelemetryService: ITelemetryService,\n\t\tthemeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(id, telemetryService, themeService, storageService);\n\n\t\tthis.callbacks = callbacks;\n\t}\n\n\toverride getTitle(): string {\n\t\treturn this.input ? this.input.getName() : localize('binaryEditor', \"Binary Viewer\");\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\n\t\t// Container for Binary\n\t\tthis.binaryContainer = document.createElement('div');\n\t\tthis.binaryContainer.className = 'monaco-binary-resource-editor';\n\t\tthis.binaryContainer.style.outline = 'none';\n\t\tthis.binaryContainer.tabIndex = 0; // enable focus support from the editor part (do not remove)\n\n\t\t// Custom Scrollbars\n\t\tthis.scrollbar = this._register(new DomScrollableElement(this.binaryContainer, { horizontal: ScrollbarVisibility.Auto, vertical: ScrollbarVisibility.Auto }));\n\t\tparent.appendChild(this.scrollbar.getDomNode());\n\t}\n\n\toverride async setInput(input: EditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tawait super.setInput(input, options, context, token);\n\t\tconst model = await input.resolve();\n\n\t\t// Check for cancellation\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Assert Model instance\n\t\tif (!(model instanceof BinaryEditorModel)) {\n\t\t\tthrow new Error('Unable to open file as binary');\n\t\t}\n\n\t\t// Render Input\n\t\tthis.inputDisposable.value = this.renderInput(input, options, model);\n\t}\n\n\tprivate renderInput(input: EditorInput, options: EditorOptions | undefined, model: BinaryEditorModel): IDisposable {\n\t\tconst [binaryContainer, scrollbar] = assertAllDefined(this.binaryContainer, this.scrollbar);\n\n\t\tclearNode(binaryContainer);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst label = document.createElement('p');\n\t\tlabel.textContent = localize('nativeBinaryError', \"The file is not displayed in the editor because it is either binary or uses an unsupported text encoding.\");\n\t\tbinaryContainer.appendChild(label);\n\n\t\tconst link = append(label, $('a.embedded-link'));\n\t\tlink.setAttribute('role', 'button');\n\t\tlink.textContent = localize('openAsText', \"Do you want to open it anyway?\");\n\n\t\tdisposables.add(addDisposableListener(link, EventType.CLICK, async () => {\n\t\t\tawait this.callbacks.openInternal(input, options);\n\n\t\t\t// Signal to listeners that the binary editor has been opened in-place\n\t\t\tthis._onDidOpenInPlace.fire();\n\t\t}));\n\n\t\tscrollbar.scanDomNode();\n\n\t\t// Update metadata\n\t\tconst size = model.getSize();\n\t\tthis.handleMetadataChanged(typeof size === 'number' ? ByteSize.formatSize(size) : '');\n\n\t\treturn disposables;\n\t}\n\n\tprivate handleMetadataChanged(meta: string | undefined): void {\n\t\tthis.metadata = meta;\n\n\t\tthis._onDidChangeMetadata.fire();\n\t}\n\n\tgetMetadata(): string | undefined {\n\t\treturn this.metadata;\n\t}\n\n\toverride clearInput(): void {\n\n\t\t// Clear Meta\n\t\tthis.handleMetadataChanged(undefined);\n\n\t\t// Clear the rest\n\t\tif (this.binaryContainer) {\n\t\t\tclearNode(this.binaryContainer);\n\t\t}\n\t\tthis.inputDisposable.clear();\n\n\t\tsuper.clearInput();\n\t}\n\n\tlayout(dimension: Dimension): void {\n\n\t\t// Pass on to Binary Container\n\t\tconst [binaryContainer, scrollbar] = assertAllDefined(this.binaryContainer, this.scrollbar);\n\t\tsize(binaryContainer, dimension.width, dimension.height);\n\t\tscrollbar.scanDomNode();\n\t}\n\n\toverride focus(): void {\n\t\tconst binaryContainer = assertIsDefined(this.binaryContainer);\n\n\t\tbinaryContainer.focus();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.binaryContainer?.remove();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}