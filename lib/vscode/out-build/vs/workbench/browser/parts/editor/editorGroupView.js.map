{"version":3,"sources":["vs/workbench/browser/parts/editor/editorGroupView.ts"],"names":[],"mappings":"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","file":"editorGroupView.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editorgroupview';\nimport { EditorGroupModel, IEditorOpenOptions, EditorCloseEvent, ISerializedEditorGroupModel, isSerializedEditorGroupModel } from 'vs/workbench/common/editor/editorGroupModel';\nimport { EditorInput, EditorOptions, GroupIdentifier, SideBySideEditorInput, CloseDirection, IEditorCloseEvent, ActiveEditorDirtyContext, IEditorPane, EditorGroupEditorsCountContext, SaveReason, IEditorPartOptionsChangeEvent, EditorsOrder, IVisibleEditorPane, ActiveEditorStickyContext, ActiveEditorPinnedContext, EditorResourceAccessor, IEditorMoveEvent } from 'vs/workbench/common/editor';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Dimension, trackFocus, addDisposableListener, EventType, EventHelper, findParentWithClass, clearNode, isAncestor, asCSSUrl } from 'vs/base/browser/dom';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { attachProgressBarStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService, registerThemingParticipant, Themable } from 'vs/platform/theme/common/themeService';\nimport { editorBackground, contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { EDITOR_GROUP_HEADER_TABS_BACKGROUND, EDITOR_GROUP_HEADER_NO_TABS_BACKGROUND, EDITOR_GROUP_EMPTY_BACKGROUND, EDITOR_GROUP_FOCUSED_EMPTY_BORDER, EDITOR_GROUP_HEADER_BORDER } from 'vs/workbench/common/theme';\nimport { ICloseEditorsFilter, IGroupChangeEvent, GroupChangeKind, GroupsOrder, ICloseEditorOptions, ICloseAllEditorsOptions, IEditorReplacement } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { TabsTitleControl } from 'vs/workbench/browser/parts/editor/tabsTitleControl';\nimport { EditorControl } from 'vs/workbench/browser/parts/editor/editorControl';\nimport { IEditorProgressService } from 'vs/platform/progress/common/progress';\nimport { EditorProgressIndicator } from 'vs/workbench/services/progress/browser/progressIndicator';\nimport { localize } from 'vs/nls';\nimport { isErrorWithActions, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Severity, INotificationService } from 'vs/platform/notification/common/notification';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Promises, RunOnceWorker } from 'vs/base/common/async';\nimport { EventType as TouchEventType, GestureEvent } from 'vs/base/browser/touch';\nimport { TitleControl } from 'vs/workbench/browser/parts/editor/titleControl';\nimport { IEditorGroupsAccessor, IEditorGroupView, getActiveTextEditorOptions, EditorServiceImpl, IEditorGroupTitleHeight } from 'vs/workbench/browser/parts/editor/editor';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ActionRunner, IAction, Action } from 'vs/base/common/actions';\nimport { CLOSE_EDITOR_GROUP_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { NoTabsTitleControl } from 'vs/workbench/browser/parts/editor/noTabsTitleControl';\nimport { IMenuService, MenuId, IMenu } from 'vs/platform/actions/common/actions';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { hash } from 'vs/base/common/hash';\nimport { guessMimeTypes } from 'vs/base/common/mime';\nimport { extname, isEqual } from 'vs/base/common/resources';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { EditorActivation, EditorOpenContext } from 'vs/platform/editor/common/editor';\nimport { IDialogService, IFileDialogService, ConfirmResult } from 'vs/platform/dialogs/common/dialogs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IFilesConfigurationService, AutoSaveMode } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\n\nexport class EditorGroupView extends Themable implements IEditorGroupView {\n\n\t//#region factory\n\n\tstatic createNew(accessor: IEditorGroupsAccessor, index: number, instantiationService: IInstantiationService): IEditorGroupView {\n\t\treturn instantiationService.createInstance(EditorGroupView, accessor, null, index);\n\t}\n\n\tstatic createFromSerialized(serialized: ISerializedEditorGroupModel, accessor: IEditorGroupsAccessor, index: number, instantiationService: IInstantiationService): IEditorGroupView {\n\t\treturn instantiationService.createInstance(EditorGroupView, accessor, serialized, index);\n\t}\n\n\tstatic createCopy(copyFrom: IEditorGroupView, accessor: IEditorGroupsAccessor, index: number, instantiationService: IInstantiationService): IEditorGroupView {\n\t\treturn instantiationService.createInstance(EditorGroupView, accessor, copyFrom, index);\n\t}\n\n\t//#endregion\n\n\t/**\n\t * Access to the context key service scoped to this editor group.\n\t */\n\treadonly scopedContextKeyService: IContextKeyService;\n\n\t//#region events\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate readonly _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tprivate readonly _onDidGroupChange = this._register(new Emitter<IGroupChangeEvent>());\n\treadonly onDidGroupChange = this._onDidGroupChange.event;\n\n\tprivate readonly _onDidOpenEditorFail = this._register(new Emitter<EditorInput>());\n\treadonly onDidOpenEditorFail = this._onDidOpenEditorFail.event;\n\n\tprivate readonly _onWillCloseEditor = this._register(new Emitter<IEditorCloseEvent>());\n\treadonly onWillCloseEditor = this._onWillCloseEditor.event;\n\n\tprivate readonly _onDidCloseEditor = this._register(new Emitter<IEditorCloseEvent>());\n\treadonly onDidCloseEditor = this._onDidCloseEditor.event;\n\n\tprivate readonly _onWillMoveEditor = this._register(new Emitter<IEditorMoveEvent>());\n\treadonly onWillMoveEditor = this._onWillMoveEditor.event;\n\n\t//#endregion\n\n\tprivate readonly model: EditorGroupModel;\n\n\tprivate active: boolean | undefined;\n\tprivate dimension: Dimension | undefined;\n\n\tprivate readonly scopedInstantiationService: IInstantiationService;\n\n\tprivate readonly titleContainer: HTMLElement;\n\tprivate titleAreaControl: TitleControl;\n\n\tprivate readonly progressBar: ProgressBar;\n\n\tprivate readonly editorContainer: HTMLElement;\n\tprivate readonly editorControl: EditorControl;\n\n\tprivate readonly disposedEditorsWorker = this._register(new RunOnceWorker<EditorInput>(editors => this.handleDisposedEditors(editors), 0));\n\n\tprivate readonly mapEditorToPendingConfirmation = new Map<EditorInput, Promise<boolean>>();\n\n\tprivate whenRestoredResolve: (() => void) | undefined;\n\treadonly whenRestored = new Promise<void>(resolve => (this.whenRestoredResolve = resolve));\n\tprivate isRestored = false;\n\n\tconstructor(\n\t\tprivate accessor: IEditorGroupsAccessor,\n\t\tfrom: IEditorGroupView | ISerializedEditorGroupModel | null,\n\t\tprivate _index: number,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEditorService private readonly editorService: EditorServiceImpl,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(themeService);\n\n\t\tif (from instanceof EditorGroupView) {\n\t\t\tthis.model = this._register(from.model.clone());\n\t\t} else if (isSerializedEditorGroupModel(from)) {\n\t\t\tthis.model = this._register(instantiationService.createInstance(EditorGroupModel, from));\n\t\t} else {\n\t\t\tthis.model = this._register(instantiationService.createInstance(EditorGroupModel, undefined));\n\t\t}\n\n\t\t//#region create()\n\t\t{\n\t\t\t// Container\n\t\t\tthis.element.classList.add('editor-group-container');\n\n\t\t\t// Container listeners\n\t\t\tthis.registerContainerListeners();\n\n\t\t\t// Container toolbar\n\t\t\tthis.createContainerToolbar();\n\n\t\t\t// Container context menu\n\t\t\tthis.createContainerContextMenu();\n\n\t\t\t// Letterpress container\n\t\t\tconst letterpressContainer = document.createElement('div');\n\t\t\tletterpressContainer.classList.add('editor-group-letterpress');\n\t\t\tthis.element.appendChild(letterpressContainer);\n\n\t\t\t// Progress bar\n\t\t\tthis.progressBar = this._register(new ProgressBar(this.element));\n\t\t\tthis._register(attachProgressBarStyler(this.progressBar, this.themeService));\n\t\t\tthis.progressBar.hide();\n\n\t\t\t// Scoped services\n\t\t\tthis.scopedContextKeyService = this._register(this.contextKeyService.createScoped(this.element));\n\t\t\tthis.scopedInstantiationService = this.instantiationService.createChild(new ServiceCollection(\n\t\t\t\t[IContextKeyService, this.scopedContextKeyService],\n\t\t\t\t[IEditorProgressService, this._register(new EditorProgressIndicator(this.progressBar, this))]\n\t\t\t));\n\n\t\t\t// Context keys\n\t\t\tthis.handleGroupContextKeys();\n\n\t\t\t// Title container\n\t\t\tthis.titleContainer = document.createElement('div');\n\t\t\tthis.titleContainer.classList.add('title');\n\t\t\tthis.element.appendChild(this.titleContainer);\n\n\t\t\t// Title control\n\t\t\tthis.titleAreaControl = this.createTitleAreaControl();\n\n\t\t\t// Editor container\n\t\t\tthis.editorContainer = document.createElement('div');\n\t\t\tthis.editorContainer.classList.add('editor-container');\n\t\t\tthis.element.appendChild(this.editorContainer);\n\n\t\t\t// Editor control\n\t\t\tthis.editorControl = this._register(this.scopedInstantiationService.createInstance(EditorControl, this.editorContainer, this));\n\t\t\tthis._onDidChange.input = this.editorControl.onDidChangeSizeConstraints;\n\n\t\t\t// Track Focus\n\t\t\tthis.doTrackFocus();\n\n\t\t\t// Update containers\n\t\t\tthis.updateTitleContainer();\n\t\t\tthis.updateContainer();\n\n\t\t\t// Update styles\n\t\t\tthis.updateStyles();\n\t\t}\n\t\t//#endregion\n\n\t\t// Restore editors if provided\n\t\tconst restoreEditorsPromise = this.restoreEditors(from) ?? Promise.resolve();\n\n\t\t// Signal restored once editors have restored\n\t\trestoreEditorsPromise.finally(() => {\n\t\t\tthis.isRestored = true;\n\t\t\tthis.whenRestoredResolve?.();\n\t\t});\n\n\t\t// Register Listeners\n\t\tthis.registerListeners();\n\t}\n\n\tprivate handleGroupContextKeys(): void {\n\t\tconst groupActiveEditorDirtyContext = ActiveEditorDirtyContext.bindTo(this.scopedContextKeyService);\n\t\tconst groupActiveEditorPinnedContext = ActiveEditorPinnedContext.bindTo(this.scopedContextKeyService);\n\t\tconst groupActiveEditorStickyContext = ActiveEditorStickyContext.bindTo(this.scopedContextKeyService);\n\t\tconst groupEditorsCountContext = EditorGroupEditorsCountContext.bindTo(this.scopedContextKeyService);\n\n\t\tconst activeEditorListener = new MutableDisposable();\n\n\t\tconst observeActiveEditor = () => {\n\t\t\tactiveEditorListener.clear();\n\n\t\t\tconst activeEditor = this.model.activeEditor;\n\t\t\tif (activeEditor) {\n\t\t\t\tgroupActiveEditorDirtyContext.set(activeEditor.isDirty() && !activeEditor.isSaving());\n\t\t\t\tactiveEditorListener.value = activeEditor.onDidChangeDirty(() => {\n\t\t\t\t\tgroupActiveEditorDirtyContext.set(activeEditor.isDirty() && !activeEditor.isSaving());\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgroupActiveEditorDirtyContext.set(false);\n\t\t\t}\n\t\t};\n\n\t\t// Update group contexts based on group changes\n\t\tthis._register(this.onDidGroupChange(e => {\n\t\t\tswitch (e.kind) {\n\t\t\t\tcase GroupChangeKind.EDITOR_ACTIVE:\n\t\t\t\t\t// Track the active editor and update context key that reflects\n\t\t\t\t\t// the dirty state of this editor\n\t\t\t\t\tobserveActiveEditor();\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupChangeKind.EDITOR_PIN:\n\t\t\t\t\tif (e.editor && e.editor === this.model.activeEditor) {\n\t\t\t\t\t\tgroupActiveEditorPinnedContext.set(this.model.isPinned(this.model.activeEditor));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupChangeKind.EDITOR_STICKY:\n\t\t\t\t\tif (e.editor && e.editor === this.model.activeEditor) {\n\t\t\t\t\t\tgroupActiveEditorStickyContext.set(this.model.isSticky(this.model.activeEditor));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Group editors count context\n\t\t\tgroupEditorsCountContext.set(this.count);\n\t\t}));\n\n\t\tobserveActiveEditor();\n\t}\n\n\tprivate registerContainerListeners(): void {\n\n\t\t// Open new file via doubleclick on empty container\n\t\tthis._register(addDisposableListener(this.element, EventType.DBLCLICK, e => {\n\t\t\tif (this.isEmpty) {\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\tthis.openEditor(this.editorService.createEditorInput({ forceUntitled: true }), EditorOptions.create({ pinned: true }));\n\t\t\t}\n\t\t}));\n\n\t\t// Close empty editor group via middle mouse click\n\t\tthis._register(addDisposableListener(this.element, EventType.AUXCLICK, e => {\n\t\t\tif (this.isEmpty && e.button === 1 /* Middle Button */) {\n\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\tthis.accessor.removeGroup(this);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createContainerToolbar(): void {\n\n\t\t// Toolbar Container\n\t\tconst toolbarContainer = document.createElement('div');\n\t\ttoolbarContainer.classList.add('editor-group-container-toolbar');\n\t\tthis.element.appendChild(toolbarContainer);\n\n\t\t// Toolbar\n\t\tconst groupId = this.model.id;\n\t\tconst containerToolbar = this._register(new ActionBar(toolbarContainer, {\n\t\t\tariaLabel: localize('ariaLabelGroupActions', \"Editor group actions\"), actionRunner: this._register(new class extends ActionRunner {\n\t\t\t\toverride async run(action: IAction) {\n\t\t\t\t\tawait action.run(groupId);\n\t\t\t\t}\n\t\t\t})\n\t\t}));\n\n\t\t// Toolbar actions\n\t\tconst removeGroupAction = this._register(new Action(\n\t\t\tCLOSE_EDITOR_GROUP_COMMAND_ID,\n\t\t\tlocalize('closeGroupAction', \"Close\"),\n\t\t\tCodicon.close.classNames,\n\t\t\ttrue,\n\t\t\tasync () => this.accessor.removeGroup(this)));\n\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(removeGroupAction.id);\n\t\tcontainerToolbar.push(removeGroupAction, { icon: true, label: false, keybinding: keybinding ? keybinding.getLabel() : undefined });\n\t}\n\n\tprivate createContainerContextMenu(): void {\n\t\tconst menu = this._register(this.menuService.createMenu(MenuId.EmptyEditorGroupContext, this.contextKeyService));\n\n\t\tthis._register(addDisposableListener(this.element, EventType.CONTEXT_MENU, e => this.onShowContainerContextMenu(menu, e)));\n\t\tthis._register(addDisposableListener(this.element, TouchEventType.Contextmenu, () => this.onShowContainerContextMenu(menu)));\n\t}\n\n\tprivate onShowContainerContextMenu(menu: IMenu, e?: MouseEvent): void {\n\t\tif (!this.isEmpty) {\n\t\t\treturn; // only for empty editor groups\n\t\t}\n\n\t\t// Find target anchor\n\t\tlet anchor: HTMLElement | { x: number, y: number } = this.element;\n\t\tif (e instanceof MouseEvent) {\n\t\t\tconst event = new StandardMouseEvent(e);\n\t\t\tanchor = { x: event.posx, y: event.posy };\n\t\t}\n\n\t\t// Fill in contributed actions\n\t\tconst actions: IAction[] = [];\n\t\tconst actionsDisposable = createAndFillInContextMenuActions(menu, undefined, actions);\n\n\t\t// Show it\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tonHide: () => {\n\t\t\t\tthis.focus();\n\t\t\t\tdispose(actionsDisposable);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doTrackFocus(): void {\n\n\t\t// Container\n\t\tconst containerFocusTracker = this._register(trackFocus(this.element));\n\t\tthis._register(containerFocusTracker.onDidFocus(() => {\n\t\t\tif (this.isEmpty) {\n\t\t\t\tthis._onDidFocus.fire(); // only when empty to prevent accident focus\n\t\t\t}\n\t\t}));\n\n\t\t// Title Container\n\t\tconst handleTitleClickOrTouch = (e: MouseEvent | GestureEvent): void => {\n\t\t\tlet target: HTMLElement;\n\t\t\tif (e instanceof MouseEvent) {\n\t\t\t\tif (e.button !== 0) {\n\t\t\t\t\treturn undefined; // only for left mouse click\n\t\t\t\t}\n\n\t\t\t\ttarget = e.target as HTMLElement;\n\t\t\t} else {\n\t\t\t\ttarget = (e as GestureEvent).initialTarget as HTMLElement;\n\t\t\t}\n\n\t\t\tif (findParentWithClass(target, 'monaco-action-bar', this.titleContainer) ||\n\t\t\t\tfindParentWithClass(target, 'monaco-breadcrumb-item', this.titleContainer)\n\t\t\t) {\n\t\t\t\treturn; // not when clicking on actions or breadcrumbs\n\t\t\t}\n\n\t\t\t// timeout to keep focus in editor after mouse up\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.focus();\n\t\t\t});\n\t\t};\n\n\t\tthis._register(addDisposableListener(this.titleContainer, EventType.MOUSE_DOWN, e => handleTitleClickOrTouch(e)));\n\t\tthis._register(addDisposableListener(this.titleContainer, TouchEventType.Tap, e => handleTitleClickOrTouch(e)));\n\n\t\t// Editor Container\n\t\tthis._register(this.editorControl.onDidFocus(() => {\n\t\t\tthis._onDidFocus.fire();\n\t\t}));\n\t}\n\n\tprivate updateContainer(): void {\n\n\t\t// Empty Container: add some empty container attributes\n\t\tif (this.isEmpty) {\n\t\t\tthis.element.classList.add('empty');\n\t\t\tthis.element.tabIndex = 0;\n\t\t\tthis.element.setAttribute('aria-label', localize('emptyEditorGroup', \"{0} (empty)\", this.label));\n\t\t}\n\n\t\t// Non-Empty Container: revert empty container attributes\n\t\telse {\n\t\t\tthis.element.classList.remove('empty');\n\t\t\tthis.element.removeAttribute('tabIndex');\n\t\t\tthis.element.removeAttribute('aria-label');\n\t\t}\n\n\t\t// Update styles\n\t\tthis.updateStyles();\n\t}\n\n\tprivate updateTitleContainer(): void {\n\t\tthis.titleContainer.classList.toggle('tabs', this.accessor.partOptions.showTabs);\n\t\tthis.titleContainer.classList.toggle('show-file-icons', this.accessor.partOptions.showIcons);\n\t}\n\n\tprivate createTitleAreaControl(): TitleControl {\n\n\t\t// Clear old if existing\n\t\tif (this.titleAreaControl) {\n\t\t\tthis.titleAreaControl.dispose();\n\t\t\tclearNode(this.titleContainer);\n\t\t}\n\n\t\t// Create new based on options\n\t\tif (this.accessor.partOptions.showTabs) {\n\t\t\tthis.titleAreaControl = this.scopedInstantiationService.createInstance(TabsTitleControl, this.titleContainer, this.accessor, this);\n\t\t} else {\n\t\t\tthis.titleAreaControl = this.scopedInstantiationService.createInstance(NoTabsTitleControl, this.titleContainer, this.accessor, this);\n\t\t}\n\n\t\treturn this.titleAreaControl;\n\t}\n\n\tprivate restoreEditors(from: IEditorGroupView | ISerializedEditorGroupModel | null): Promise<void> | undefined {\n\t\tif (this.model.count === 0) {\n\t\t\treturn; // nothing to show\n\t\t}\n\n\t\t// Determine editor options\n\t\tlet options: EditorOptions;\n\t\tif (from instanceof EditorGroupView) {\n\t\t\toptions = getActiveTextEditorOptions(from); // if we copy from another group, ensure to copy its active editor viewstate\n\t\t} else {\n\t\t\toptions = new EditorOptions();\n\t\t}\n\n\t\tconst activeEditor = this.model.activeEditor;\n\t\tif (!activeEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\toptions.pinned = this.model.isPinned(activeEditor);\t// preserve pinned state\n\t\toptions.sticky = this.model.isSticky(activeEditor);\t// preserve sticky state\n\t\toptions.preserveFocus = true;\t\t\t\t\t\t\t// handle focus after editor is opened\n\n\t\tconst activeElement = document.activeElement;\n\n\t\t// Show active editor (intentionally not using async to keep\n\t\t// `restoreEditors` from executing in same stack)\n\t\treturn this.doShowEditor(activeEditor, { active: true, isNew: false /* restored */ }, options).then(() => {\n\n\t\t\t// Set focused now if this is the active group and focus has\n\t\t\t// not changed meanwhile. This prevents focus from being\n\t\t\t// stolen accidentally on startup when the user already\n\t\t\t// clicked somewhere.\n\t\t\tif (this.accessor.activeGroup === this && activeElement === document.activeElement) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\t//#region event handling\n\n\tprivate registerListeners(): void {\n\n\t\t// Model Events\n\t\tthis._register(this.model.onDidChangeEditorPinned(editor => this.onDidChangeEditorPinned(editor)));\n\t\tthis._register(this.model.onDidChangeEditorSticky(editor => this.onDidChangeEditorSticky(editor)));\n\t\tthis._register(this.model.onDidOpenEditor(editor => this.onDidOpenEditor(editor)));\n\t\tthis._register(this.model.onDidCloseEditor(editor => this.handleOnDidCloseEditor(editor)));\n\t\tthis._register(this.model.onWillDisposeEditor(editor => this.onWillDisposeEditor(editor)));\n\t\tthis._register(this.model.onDidChangeEditorDirty(editor => this.onDidChangeEditorDirty(editor)));\n\t\tthis._register(this.model.onDidEditorLabelChange(editor => this.onDidEditorLabelChange(editor)));\n\n\t\t// Option Changes\n\t\tthis._register(this.accessor.onDidChangeEditorPartOptions(e => this.onDidChangeEditorPartOptions(e)));\n\n\t\t// Visibility\n\t\tthis._register(this.accessor.onDidVisibilityChange(e => this.onDidVisibilityChange(e)));\n\t}\n\n\tprivate onDidChangeEditorPinned(editor: EditorInput): void {\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_PIN, editor });\n\t}\n\n\tprivate onDidChangeEditorSticky(editor: EditorInput): void {\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_STICKY, editor });\n\t}\n\n\tprivate onDidOpenEditor(editor: EditorInput): void {\n\n\t\t/* __GDPR__\n\t\t\t\"editorOpened\" : {\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${EditorTelemetryDescriptor}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('editorOpened', this.toEditorTelemetryDescriptor(editor));\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Event\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_OPEN, editor });\n\t}\n\n\tprivate handleOnDidCloseEditor(event: EditorCloseEvent): void {\n\n\t\t// Before close\n\t\tthis._onWillCloseEditor.fire(event);\n\n\t\t// Handle event\n\t\tconst editor = event.editor;\n\t\tconst editorsToClose = [editor];\n\n\t\t// Include both sides of side by side editors when being closed\n\t\tif (editor instanceof SideBySideEditorInput) {\n\t\t\teditorsToClose.push(editor.primary, editor.secondary);\n\t\t}\n\n\t\t// For each editor to close, we call dispose() to free up any resources.\n\t\t// However, certain editors might be shared across multiple editor groups\n\t\t// (including being visible in side by side / diff editors) and as such we\n\t\t// only dispose when they are not opened elsewhere.\n\t\tfor (const editor of editorsToClose) {\n\t\t\tif (this.canDispose(editor)) {\n\t\t\t\teditor.dispose();\n\t\t\t}\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\"editorClosed\" : {\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${EditorTelemetryDescriptor}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('editorClosed', this.toEditorTelemetryDescriptor(event.editor));\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Event\n\t\tthis._onDidCloseEditor.fire(event);\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_CLOSE, editor, editorIndex: event.index });\n\t}\n\n\tprivate canDispose(editor: EditorInput): boolean {\n\t\tfor (const groupView of this.accessor.groups) {\n\t\t\tif (groupView instanceof EditorGroupView && groupView.model.contains(editor, {\n\t\t\t\tstrictEquals: true,\t\t// only if this input is not shared across editor groups\n\t\t\t\tsupportSideBySide: true // include side by side editor primary & secondary\n\t\t\t})) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate toEditorTelemetryDescriptor(editor: EditorInput): object {\n\t\tconst descriptor = editor.getTelemetryDescriptor();\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor);\n\t\tconst path = resource ? resource.scheme === Schemas.file ? resource.fsPath : resource.path : undefined;\n\t\tif (resource && path) {\n\t\t\tdescriptor['resource'] = { mimeType: guessMimeTypes(resource).join(', '), scheme: resource.scheme, ext: extname(resource), path: hash(path) };\n\n\t\t\t/* __GDPR__FRAGMENT__\n\t\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\t\"resource\": { \"${inline}\": [ \"${URIDescriptor}\" ] }\n\t\t\t\t}\n\t\t\t*/\n\t\t\treturn descriptor;\n\t\t}\n\n\t\treturn descriptor;\n\t}\n\n\tprivate onWillDisposeEditor(editor: EditorInput): void {\n\n\t\t// To prevent race conditions, we handle disposed editors in our worker with a timeout\n\t\t// because it can happen that an input is being disposed with the intent to replace\n\t\t// it with some other input right after.\n\t\tthis.disposedEditorsWorker.work(editor);\n\t}\n\n\tprivate handleDisposedEditors(editors: EditorInput[]): void {\n\n\t\t// Split between visible and hidden editors\n\t\tlet activeEditor: EditorInput | undefined;\n\t\tconst inactiveEditors: EditorInput[] = [];\n\t\tfor (const editor of editors) {\n\t\t\tif (this.model.isActive(editor)) {\n\t\t\t\tactiveEditor = editor;\n\t\t\t} else if (this.model.contains(editor)) {\n\t\t\t\tinactiveEditors.push(editor);\n\t\t\t}\n\t\t}\n\n\t\t// Close all inactive editors first to prevent UI flicker\n\t\tfor (const inactiveEditor of inactiveEditors) {\n\t\t\tthis.doCloseEditor(inactiveEditor, false);\n\t\t}\n\n\t\t// Close active one last\n\t\tif (activeEditor) {\n\t\t\tthis.doCloseEditor(activeEditor, false);\n\t\t}\n\t}\n\n\tprivate onDidChangeEditorPartOptions(event: IEditorPartOptionsChangeEvent): void {\n\n\t\t// Title container\n\t\tthis.updateTitleContainer();\n\n\t\t// Title control Switch between showing tabs <=> not showing tabs\n\t\tif (event.oldPartOptions.showTabs !== event.newPartOptions.showTabs) {\n\n\t\t\t// Recreate title control\n\t\t\tthis.createTitleAreaControl();\n\n\t\t\t// Re-layout\n\t\t\tthis.relayout();\n\n\t\t\t// Ensure to show active editor if any\n\t\t\tif (this.model.activeEditor) {\n\t\t\t\tthis.titleAreaControl.openEditor(this.model.activeEditor);\n\t\t\t}\n\t\t}\n\n\t\t// Just update title control\n\t\telse {\n\t\t\tthis.titleAreaControl.updateOptions(event.oldPartOptions, event.newPartOptions);\n\t\t}\n\n\t\t// Styles\n\t\tthis.updateStyles();\n\n\t\t// Pin preview editor once user disables preview\n\t\tif (event.oldPartOptions.enablePreview && !event.newPartOptions.enablePreview) {\n\t\t\tif (this.model.previewEditor) {\n\t\t\t\tthis.pinEditor(this.model.previewEditor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidChangeEditorDirty(editor: EditorInput): void {\n\n\t\t// Always show dirty editors pinned\n\t\tthis.pinEditor(editor);\n\n\t\t// Forward to title control\n\t\tthis.titleAreaControl.updateEditorDirty(editor);\n\n\t\t// Event\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_DIRTY, editor });\n\t}\n\n\tprivate onDidEditorLabelChange(editor: EditorInput): void {\n\n\t\t// Forward to title control\n\t\tthis.titleAreaControl.updateEditorLabel(editor);\n\n\t\t// Event\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_LABEL, editor });\n\t}\n\n\tprivate onDidVisibilityChange(visible: boolean): void {\n\n\t\t// Forward to editor control\n\t\tthis.editorControl.setVisible(visible);\n\t}\n\n\t//#endregion\n\n\t//#region IEditorGroupView\n\n\tget index(): number {\n\t\treturn this._index;\n\t}\n\n\tget label(): string {\n\t\treturn localize('groupLabel', \"Group {0}\", this._index + 1);\n\t}\n\n\tget ariaLabel(): string {\n\t\treturn localize('groupAriaLabel', \"Editor Group {0}\", this._index + 1);\n\t}\n\n\tprivate _disposed = false;\n\tget disposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this.model.count === 0;\n\t}\n\n\tget titleHeight(): IEditorGroupTitleHeight {\n\t\treturn this.titleAreaControl.getHeight();\n\t}\n\n\tget isMinimized(): boolean {\n\t\tif (!this.dimension) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.dimension.width === this.minimumWidth || this.dimension.height === this.minimumHeight;\n\t}\n\n\tnotifyIndexChanged(newIndex: number): void {\n\t\tif (this._index !== newIndex) {\n\t\t\tthis._index = newIndex;\n\t\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.GROUP_INDEX });\n\t\t}\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.active = isActive;\n\n\t\t// Update container\n\t\tthis.element.classList.toggle('active', isActive);\n\t\tthis.element.classList.toggle('inactive', !isActive);\n\n\t\t// Update title control\n\t\tthis.titleAreaControl.setActive(isActive);\n\n\t\t// Update styles\n\t\tthis.updateStyles();\n\n\t\t// Event\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.GROUP_ACTIVE });\n\t}\n\n\t//#endregion\n\n\t//#region IEditorGroup\n\n\t//#region basics()\n\n\tget id(): GroupIdentifier {\n\t\treturn this.model.id;\n\t}\n\n\tget editors(): EditorInput[] {\n\t\treturn this.model.getEditors(EditorsOrder.SEQUENTIAL);\n\t}\n\n\tget count(): number {\n\t\treturn this.model.count;\n\t}\n\n\tget stickyCount(): number {\n\t\treturn this.model.stickyCount;\n\t}\n\n\tget activeEditorPane(): IVisibleEditorPane | undefined {\n\t\treturn this.editorControl ? withNullAsUndefined(this.editorControl.activeEditorPane) : undefined;\n\t}\n\n\tget activeEditor(): EditorInput | null {\n\t\treturn this.model.activeEditor;\n\t}\n\n\tget previewEditor(): EditorInput | null {\n\t\treturn this.model.previewEditor;\n\t}\n\n\tisPinned(editor: EditorInput): boolean {\n\t\treturn this.model.isPinned(editor);\n\t}\n\n\tisSticky(editorOrIndex: EditorInput | number): boolean {\n\t\treturn this.model.isSticky(editorOrIndex);\n\t}\n\n\tisActive(editor: EditorInput): boolean {\n\t\treturn this.model.isActive(editor);\n\t}\n\n\tcontains(candidate: EditorInput): boolean {\n\t\treturn this.model.contains(candidate);\n\t}\n\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): EditorInput[] {\n\t\treturn this.model.getEditors(order, options);\n\t}\n\n\tfindEditors(resource: URI): EditorInput[] {\n\t\tconst canonicalResource = this.uriIdentityService.asCanonicalUri(resource);\n\t\treturn this.getEditors(EditorsOrder.SEQUENTIAL).filter(editor => {\n\t\t\treturn editor.resource && isEqual(editor.resource, canonicalResource);\n\t\t});\n\t}\n\n\tgetEditorByIndex(index: number): EditorInput | undefined {\n\t\treturn this.model.getEditorByIndex(index);\n\t}\n\n\tgetIndexOfEditor(editor: EditorInput): number {\n\t\treturn this.model.indexOf(editor);\n\t}\n\n\tfocus(): void {\n\n\t\t// Pass focus to editor panes\n\t\tif (this.activeEditorPane) {\n\t\t\tthis.activeEditorPane.focus();\n\t\t} else {\n\t\t\tthis.element.focus();\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidFocus.fire();\n\t}\n\n\tpinEditor(candidate: EditorInput | undefined = this.activeEditor || undefined): void {\n\t\tif (candidate && !this.model.isPinned(candidate)) {\n\n\t\t\t// Update model\n\t\t\tconst editor = this.model.pin(candidate);\n\n\t\t\t// Forward to title control\n\t\t\tif (editor) {\n\t\t\t\tthis.titleAreaControl.pinEditor(editor);\n\t\t\t}\n\t\t}\n\t}\n\n\tstickEditor(candidate: EditorInput | undefined = this.activeEditor || undefined): void {\n\t\tthis.doStickEditor(candidate, true);\n\t}\n\n\tunstickEditor(candidate: EditorInput | undefined = this.activeEditor || undefined): void {\n\t\tthis.doStickEditor(candidate, false);\n\t}\n\n\tprivate doStickEditor(candidate: EditorInput | undefined, sticky: boolean): void {\n\t\tif (candidate && this.model.isSticky(candidate) !== sticky) {\n\t\t\tconst oldIndexOfEditor = this.getIndexOfEditor(candidate);\n\n\t\t\t// Update model\n\t\t\tconst editor = sticky ? this.model.stick(candidate) : this.model.unstick(candidate);\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the index of the editor changed, we need to forward this to\n\t\t\t// title control and also make sure to emit this as an event\n\t\t\tconst newIndexOfEditor = this.getIndexOfEditor(editor);\n\t\t\tif (newIndexOfEditor !== oldIndexOfEditor) {\n\t\t\t\tthis.titleAreaControl.moveEditor(editor, oldIndexOfEditor, newIndexOfEditor);\n\n\t\t\t\t// Event\n\t\t\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_MOVE, editor });\n\t\t\t}\n\n\t\t\t// Forward sticky state to title control\n\t\t\tif (sticky) {\n\t\t\t\tthis.titleAreaControl.stickEditor(editor);\n\t\t\t} else {\n\t\t\t\tthis.titleAreaControl.unstickEditor(editor);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region openEditor()\n\n\tasync openEditor(editor: EditorInput, options?: EditorOptions): Promise<IEditorPane | undefined> {\n\n\t\t// Guard against invalid inputs\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Proceed with opening\n\t\treturn this.doOpenEditor(editor, options);\n\t}\n\n\tprivate async doOpenEditor(editor: EditorInput, options?: EditorOptions): Promise<IEditorPane | undefined> {\n\n\t\t// Guard against invalid inputs. Disposed inputs\n\t\t// should never open because they emit no events\n\t\t// e.g. to indicate dirty changes.\n\t\tif (editor.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine options\n\t\tconst openEditorOptions: IEditorOpenOptions = {\n\t\t\tindex: options ? options.index : undefined,\n\t\t\tpinned: options?.sticky || !this.accessor.partOptions.enablePreview || editor.isDirty() || (options?.pinned ?? typeof options?.index === 'number' /* unless specified, prefer to pin when opening with index */) || (typeof options?.index === 'number' && this.model.isSticky(options.index)),\n\t\t\tsticky: options?.sticky || (typeof options?.index === 'number' && this.model.isSticky(options.index)),\n\t\t\tactive: this.model.count === 0 || !options || !options.inactive\n\t\t};\n\n\t\tif (options?.sticky && typeof options?.index === 'number' && !this.model.isSticky(options.index)) {\n\t\t\t// Special case: we are to open an editor sticky but at an index that is not sticky\n\t\t\t// In that case we prefer to open the editor at the index but not sticky. This enables\n\t\t\t// to drag a sticky editor to an index that is not sticky to unstick it.\n\t\t\topenEditorOptions.sticky = false;\n\t\t}\n\n\t\tif (!openEditorOptions.active && !openEditorOptions.pinned && this.model.activeEditor && !this.model.isPinned(this.model.activeEditor)) {\n\t\t\t// Special case: we are to open an editor inactive and not pinned, but the current active\n\t\t\t// editor is also not pinned, which means it will get replaced with this one. As such,\n\t\t\t// the editor can only be active.\n\t\t\topenEditorOptions.active = true;\n\t\t}\n\n\t\tlet activateGroup = false;\n\t\tlet restoreGroup = false;\n\n\t\tif (options?.activation === EditorActivation.ACTIVATE) {\n\t\t\t// Respect option to force activate an editor group.\n\t\t\tactivateGroup = true;\n\t\t} else if (options?.activation === EditorActivation.RESTORE) {\n\t\t\t// Respect option to force restore an editor group.\n\t\t\trestoreGroup = true;\n\t\t} else if (options?.activation === EditorActivation.PRESERVE) {\n\t\t\t// Respect option to preserve active editor group.\n\t\t\tactivateGroup = false;\n\t\t\trestoreGroup = false;\n\t\t} else if (openEditorOptions.active) {\n\t\t\t// Finally, we only activate/restore an editor which is\n\t\t\t// opening as active editor.\n\t\t\t// If preserveFocus is enabled, we only restore but never\n\t\t\t// activate the group.\n\t\t\tactivateGroup = !options || !options.preserveFocus;\n\t\t\trestoreGroup = !activateGroup;\n\t\t}\n\n\t\t// Actually move the editor if a specific index is provided and we figure\n\t\t// out that the editor is already opened at a different index. This\n\t\t// ensures the right set of events are fired to the outside.\n\t\tif (typeof openEditorOptions.index === 'number') {\n\t\t\tconst indexOfEditor = this.model.indexOf(editor);\n\t\t\tif (indexOfEditor !== -1 && indexOfEditor !== openEditorOptions.index) {\n\t\t\t\tthis.doMoveEditorInsideGroup(editor, openEditorOptions);\n\t\t\t}\n\t\t}\n\n\t\t// Update model and make sure to continue to use the editor we get from\n\t\t// the model. It is possible that the editor was already opened and we\n\t\t// want to ensure that we use the existing instance in that case.\n\t\tconst { editor: openedEditor, isNew } = this.model.openEditor(editor, openEditorOptions);\n\n\t\t// Show editor\n\t\tconst showEditorResult = this.doShowEditor(openedEditor, { active: !!openEditorOptions.active, isNew }, options);\n\n\t\t// Finally make sure the group is active or restored as instructed\n\t\tif (activateGroup) {\n\t\t\tthis.accessor.activateGroup(this);\n\t\t} else if (restoreGroup) {\n\t\t\tthis.accessor.restoreGroup(this);\n\t\t}\n\n\t\treturn showEditorResult;\n\t}\n\n\tprivate doShowEditor(editor: EditorInput, context: { active: boolean, isNew: boolean }, options?: EditorOptions): Promise<IEditorPane | undefined> {\n\n\t\t// Show in editor control if the active editor changed\n\t\tlet openEditorPromise: Promise<IEditorPane | undefined>;\n\t\tif (context.active) {\n\t\t\topenEditorPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await this.editorControl.openEditor(editor, options, { newInGroup: context.isNew });\n\n\t\t\t\t\t// Editor change event\n\t\t\t\t\tif (result.editorChanged) {\n\t\t\t\t\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_ACTIVE, editor });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result.editorPane;\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// Handle errors but do not bubble them up\n\t\t\t\t\tthis.doHandleOpenEditorError(error, editor, options);\n\n\t\t\t\t\treturn undefined; // error: return undefined as result to signal this\n\t\t\t\t}\n\t\t\t})();\n\t\t} else {\n\t\t\topenEditorPromise = Promise.resolve(undefined); // inactive: return undefined as result to signal this\n\t\t}\n\n\t\t// Show in title control after editor control because some actions depend on it\n\t\tthis.titleAreaControl.openEditor(editor);\n\n\t\treturn openEditorPromise;\n\t}\n\n\tprivate async doHandleOpenEditorError(error: Error, editor: EditorInput, options?: EditorOptions): Promise<void> {\n\n\t\t// Report error only if we are not told to ignore errors that occur from opening an editor\n\t\tif (!isPromiseCanceledError(error) && (!options || !options.ignoreError)) {\n\n\t\t\t// Since it is more likely that errors fail to open when restoring them e.g.\n\t\t\t// because files got deleted or moved meanwhile, we do not show any notifications\n\t\t\t// if we are still restoring editors.\n\t\t\tif (this.isRestored) {\n\n\t\t\t\t// Extract possible error actions from the error\n\t\t\t\tlet errorActions: readonly IAction[] | undefined = undefined;\n\t\t\t\tif (isErrorWithActions(error)) {\n\t\t\t\t\terrorActions = error.actions;\n\t\t\t\t}\n\n\t\t\t\t// If the context is USER, we try to show a modal dialog instead of a background notification\n\t\t\t\tif (options?.context === EditorOpenContext.USER) {\n\t\t\t\t\tconst buttons: string[] = [];\n\t\t\t\t\tif (Array.isArray(errorActions) && errorActions.length > 0) {\n\t\t\t\t\t\tfor (const errorAction of errorActions) {\n\t\t\t\t\t\t\tbuttons.push(errorAction.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuttons.push(localize('ok', 'OK'));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cancelId: number | undefined = undefined;\n\t\t\t\t\tif (buttons.length === 1) {\n\t\t\t\t\t\tbuttons.push(localize('cancel', \"Cancel\"));\n\t\t\t\t\t\tcancelId = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await this.dialogService.show(\n\t\t\t\t\t\tSeverity.Error,\n\t\t\t\t\t\tlocalize('editorOpenErrorDialog', \"Unable to open '{0}'\", editor.getName()),\n\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdetail: toErrorMessage(error),\n\t\t\t\t\t\t\tcancelId\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// Make sure to run any error action if present\n\t\t\t\t\tif (result.choice !== cancelId && Array.isArray(errorActions)) {\n\t\t\t\t\t\tconst errorAction = errorActions[result.choice];\n\t\t\t\t\t\tif (errorAction) {\n\t\t\t\t\t\t\terrorAction.run();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, show a background notification.\n\t\t\t\telse {\n\t\t\t\t\tconst actions = { primary: [] as readonly IAction[] };\n\t\t\t\t\tif (Array.isArray(errorActions)) {\n\t\t\t\t\t\tactions.primary = errorActions;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst handle = this.notificationService.notify({\n\t\t\t\t\t\tid: `${hash(editor.resource?.toString())}`, // unique per editor\n\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\tmessage: localize('editorOpenError', \"Unable to open '{0}': {1}.\", editor.getName(), toErrorMessage(error)),\n\t\t\t\t\t\tactions\n\t\t\t\t\t});\n\n\t\t\t\t\tEvent.once(handle.onDidClose)(() => actions.primary && dispose(actions.primary));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Restoring: just log errors to console\n\t\t\telse {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidOpenEditorFail.fire(editor);\n\n\t\t// Recover by closing the active editor (if the input is still the active one)\n\t\tif (this.activeEditor === editor) {\n\t\t\tconst focusNext = !options || !options.preserveFocus;\n\t\t\tthis.doCloseEditor(editor, focusNext, true /* from error */);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region openEditors()\n\n\tasync openEditors(editors: { editor: EditorInput, options?: EditorOptions }[]): Promise<IEditorPane | null> {\n\t\tif (!editors.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Do not modify original array\n\t\teditors = editors.slice(0);\n\n\t\t// Use the first editor as active editor\n\t\tconst { editor, options } = editors.shift()!;\n\t\tawait this.openEditor(editor, options);\n\n\t\t// Open the other ones inactive\n\t\tconst startingIndex = this.getIndexOfEditor(editor) + 1;\n\t\tawait Promises.settled(editors.map(async ({ editor, options }, index) => {\n\t\t\tconst adjustedEditorOptions = options || new EditorOptions();\n\t\t\tadjustedEditorOptions.inactive = true;\n\t\t\tadjustedEditorOptions.pinned = true;\n\t\t\tadjustedEditorOptions.index = startingIndex + index;\n\n\t\t\tawait this.openEditor(editor, adjustedEditorOptions);\n\t\t}));\n\n\t\t// Opening many editors at once can put any editor to be\n\t\t// the active one depending on options. As such, we simply\n\t\t// return the active control after this operation.\n\t\treturn this.editorControl.activeEditorPane;\n\t}\n\n\t//#endregion\n\n\t//#region moveEditor()\n\n\tmoveEditor(editor: EditorInput, target: IEditorGroupView, options?: EditorOptions): void {\n\n\t\t// Move within same group\n\t\tif (this === target) {\n\t\t\tthis.doMoveEditorInsideGroup(editor, options);\n\t\t}\n\n\t\t// Move across groups\n\t\telse {\n\t\t\tthis.doMoveOrCopyEditorAcrossGroups(editor, target, options, false);\n\t\t}\n\t}\n\n\tprivate doMoveEditorInsideGroup(candidate: EditorInput, options?: IEditorOpenOptions): void {\n\t\tconst moveToIndex = options ? options.index : undefined;\n\t\tif (typeof moveToIndex !== 'number') {\n\t\t\treturn; // do nothing if we move into same group without index\n\t\t}\n\n\t\tconst currentIndex = this.model.indexOf(candidate);\n\t\tif (currentIndex === -1 || currentIndex === moveToIndex) {\n\t\t\treturn; // do nothing if editor unknown in model or is already at the given index\n\t\t}\n\n\t\t// Update model and make sure to continue to use the editor we get from\n\t\t// the model. It is possible that the editor was already opened and we\n\t\t// want to ensure that we use the existing instance in that case.\n\t\tconst editor = this.model.getEditorByIndex(currentIndex);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update model\n\t\tthis.model.moveEditor(editor, moveToIndex);\n\t\tthis.model.pin(editor);\n\n\t\t// Forward to title area\n\t\tthis.titleAreaControl.moveEditor(editor, currentIndex, moveToIndex);\n\t\tthis.titleAreaControl.pinEditor(editor);\n\n\t\t// Event\n\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_MOVE, editor });\n\t}\n\n\tprivate doMoveOrCopyEditorAcrossGroups(editor: EditorInput, target: IEditorGroupView, openOptions?: IEditorOpenOptions, keepCopy?: boolean): void {\n\n\t\t// When moving/copying an editor, try to preserve as much view state as possible\n\t\t// by checking for the editor to be a text editor and creating the options accordingly\n\t\t// if so\n\t\tconst options = getActiveTextEditorOptions(this, editor, EditorOptions.create({\n\t\t\t...openOptions,\n\t\t\tpinned: true, \t\t\t\t\t\t\t\t\t\t// always pin moved editor\n\t\t\tsticky: !keepCopy && this.model.isSticky(editor)\t// preserve sticky state only if editor is moved (https://github.com/microsoft/vscode/issues/99035)\n\t\t}));\n\n\t\t// Indicate will move event\n\t\tif (!keepCopy) {\n\t\t\tthis._onWillMoveEditor.fire({\n\t\t\t\tgroupId: this.id,\n\t\t\t\teditor,\n\t\t\t\ttarget: target.id,\n\t\t\t});\n\t\t}\n\n\t\t// A move to another group is an open first...\n\t\ttarget.openEditor(keepCopy ? editor.copy() : editor, options);\n\n\t\t// ...and a close afterwards (unless we copy)\n\t\tif (!keepCopy) {\n\t\t\tthis.doCloseEditor(editor, false /* do not focus next one behind if any */);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region copyEditor()\n\n\tcopyEditor(editor: EditorInput, target: IEditorGroupView, options?: EditorOptions): void {\n\n\t\t// Move within same group because we do not support to show the same editor\n\t\t// multiple times in the same group\n\t\tif (this === target) {\n\t\t\tthis.doMoveEditorInsideGroup(editor, options);\n\t\t}\n\n\t\t// Copy across groups\n\t\telse {\n\t\t\tthis.doMoveOrCopyEditorAcrossGroups(editor, target, options, true);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region closeEditor()\n\n\tasync closeEditor(editor: EditorInput | undefined = this.activeEditor || undefined, options?: ICloseEditorOptions): Promise<void> {\n\t\tawait this.doCloseEditorWithDirtyHandling(editor, options);\n\t}\n\n\tprivate async doCloseEditorWithDirtyHandling(editor: EditorInput | undefined = this.activeEditor || undefined, options?: ICloseEditorOptions): Promise<boolean> {\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for dirty and veto\n\t\tconst veto = await this.handleDirtyClosing([editor]);\n\t\tif (veto) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Do close\n\t\tthis.doCloseEditor(editor, options?.preserveFocus ? false : undefined);\n\n\t\treturn true;\n\t}\n\n\tprivate doCloseEditor(editor: EditorInput, focusNext = (this.accessor.activeGroup === this), fromError?: boolean): void {\n\n\t\t// Closing the active editor of the group is a bit more work\n\t\tif (this.model.isActive(editor)) {\n\t\t\tthis.doCloseActiveEditor(focusNext, fromError);\n\t\t}\n\n\t\t// Closing inactive editor is just a model update\n\t\telse {\n\t\t\tthis.doCloseInactiveEditor(editor);\n\t\t}\n\n\t\t// Forward to title control\n\t\tthis.titleAreaControl.closeEditor(editor);\n\t}\n\n\tprivate doCloseActiveEditor(focusNext = (this.accessor.activeGroup === this), fromError?: boolean): void {\n\t\tconst editorToClose = this.activeEditor;\n\t\tconst restoreFocus = this.shouldRestoreFocus(this.element);\n\n\t\t// Optimization: if we are about to close the last editor in this group and settings\n\t\t// are configured to close the group since it will be empty, we first set the last\n\t\t// active group as empty before closing the editor. This reduces the amount of editor\n\t\t// change events that this operation emits and will reduce flicker. Without this\n\t\t// optimization, this group (if active) would first trigger a active editor change\n\t\t// event because it became empty, only to then trigger another one when the next\n\t\t// group gets active.\n\t\tconst closeEmptyGroup = this.accessor.partOptions.closeEmptyGroups;\n\t\tif (closeEmptyGroup && this.active && this.model.count === 1) {\n\t\t\tconst mostRecentlyActiveGroups = this.accessor.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tconst nextActiveGroup = mostRecentlyActiveGroups[1]; // [0] will be the current one, so take [1]\n\t\t\tif (nextActiveGroup) {\n\t\t\t\tif (restoreFocus) {\n\t\t\t\t\tnextActiveGroup.focus();\n\t\t\t\t} else {\n\t\t\t\t\tthis.accessor.activateGroup(nextActiveGroup);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update model\n\t\tif (editorToClose) {\n\t\t\tthis.model.closeEditor(editorToClose);\n\t\t}\n\n\t\t// Open next active if there are more to show\n\t\tconst nextActiveEditor = this.model.activeEditor;\n\t\tif (nextActiveEditor) {\n\t\t\tconst preserveFocus = !focusNext;\n\n\t\t\tlet activation: EditorActivation | undefined = undefined;\n\t\t\tif (preserveFocus && this.accessor.activeGroup !== this) {\n\t\t\t\t// If we are opening the next editor in an inactive group\n\t\t\t\t// without focussing it, ensure we preserve the editor\n\t\t\t\t// group sizes in case that group is minimized.\n\t\t\t\t// https://github.com/microsoft/vscode/issues/117686\n\t\t\t\tactivation = EditorActivation.PRESERVE;\n\t\t\t}\n\n\t\t\tconst options = EditorOptions.create({ preserveFocus, activation });\n\n\t\t\t// When closing an editor due to an error we can end up in a loop where we continue closing\n\t\t\t// editors that fail to open (e.g. when the file no longer exists). We do not want to show\n\t\t\t// repeated errors in this case to the user. As such, if we open the next editor and we are\n\t\t\t// in a scope of a previous editor failing, we silence the input errors until the editor is\n\t\t\t// opened by setting ignoreError: true.\n\t\t\tif (fromError) {\n\t\t\t\toptions.ignoreError = true;\n\t\t\t}\n\n\t\t\tthis.openEditor(nextActiveEditor, options);\n\t\t}\n\n\t\t// Otherwise we are empty, so clear from editor control and send event\n\t\telse {\n\n\t\t\t// Forward to editor control\n\t\t\tif (editorToClose) {\n\t\t\t\tthis.editorControl.closeEditor(editorToClose);\n\t\t\t}\n\n\t\t\t// Restore focus to group container as needed unless group gets closed\n\t\t\tif (restoreFocus && !closeEmptyGroup) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\t// Events\n\t\t\tthis._onDidGroupChange.fire({ kind: GroupChangeKind.EDITOR_ACTIVE });\n\n\t\t\t// Remove empty group if we should\n\t\t\tif (closeEmptyGroup) {\n\t\t\t\tthis.accessor.removeGroup(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate shouldRestoreFocus(target: Element): boolean {\n\t\tconst activeElement = document.activeElement;\n\n\t\tif (activeElement === document.body) {\n\t\t\treturn true; // always restore focus if nothing is focused currently\n\t\t}\n\n\t\t// otherwise check for the active element being an ancestor of the target\n\t\treturn isAncestor(activeElement, target);\n\t}\n\n\tprivate doCloseInactiveEditor(editor: EditorInput) {\n\n\t\t// Update model\n\t\tthis.model.closeEditor(editor);\n\t}\n\n\tprivate async handleDirtyClosing(editors: EditorInput[]): Promise<boolean /* veto */> {\n\t\tif (!editors.length) {\n\t\t\treturn false; // no veto\n\t\t}\n\n\t\tconst editor = editors.shift()!;\n\n\t\t// To prevent multiple confirmation dialogs from showing up one after the other\n\t\t// we check if a pending confirmation is currently showing and if so, join that\n\t\tlet handleDirtyClosingPromise = this.mapEditorToPendingConfirmation.get(editor);\n\t\tif (!handleDirtyClosingPromise) {\n\t\t\thandleDirtyClosingPromise = this.doHandleDirtyClosing(editor);\n\t\t\tthis.mapEditorToPendingConfirmation.set(editor, handleDirtyClosingPromise);\n\t\t}\n\n\t\tlet veto: boolean;\n\t\ttry {\n\t\t\tveto = await handleDirtyClosingPromise;\n\t\t} finally {\n\t\t\tthis.mapEditorToPendingConfirmation.delete(editor);\n\t\t}\n\n\t\t// Return for the first veto we got\n\t\tif (veto) {\n\t\t\treturn veto;\n\t\t}\n\n\t\t// Otherwise continue with the remainders\n\t\treturn this.handleDirtyClosing(editors);\n\t}\n\n\tprivate async doHandleDirtyClosing(editor: EditorInput, options?: { skipAutoSave: boolean }): Promise<boolean /* veto */> {\n\t\tif (!editor.isDirty() || editor.isSaving()) {\n\t\t\treturn false; // editor must be dirty and not saving\n\t\t}\n\n\t\tif (editor instanceof SideBySideEditorInput && this.model.contains(editor.primary)) {\n\t\t\treturn false; // primary-side of editor is still opened somewhere else\n\t\t}\n\n\t\t// Note: we explicitly decide to ask for confirm if closing a normal editor even\n\t\t// if it is opened in a side-by-side editor in the group. This decision is made\n\t\t// because it may be less obvious that one side of a side by side editor is dirty\n\t\t// and can still be changed.\n\n\t\tif (this.accessor.groups.some(groupView => {\n\t\t\tif (groupView === this) {\n\t\t\t\treturn false; // skip this group to avoid false assumptions about the editor being opened still\n\t\t\t}\n\n\t\t\tconst otherGroup = groupView;\n\t\t\tif (otherGroup.contains(editor)) {\n\t\t\t\treturn true; // exact editor still opened\n\t\t\t}\n\n\t\t\tif (editor instanceof SideBySideEditorInput && otherGroup.contains(editor.primary)) {\n\t\t\t\treturn true; // primary side of side by side editor still opened\n\t\t\t}\n\n\t\t\treturn false;\n\t\t})) {\n\t\t\treturn false; // editor is still editable somewhere else\n\t\t}\n\n\t\t// Auto-save on focus change: assume to Save unless the editor is untitled\n\t\t// because bringing up a dialog would save in this case anyway.\n\t\t// However, make sure to respect `skipAutoSave` option in case the automated\n\t\t// save fails which would result in the editor never closing\n\t\t// (see https://github.com/microsoft/vscode/issues/108752)\n\t\tlet confirmation: ConfirmResult;\n\t\tlet saveReason = SaveReason.EXPLICIT;\n\t\tlet autoSave = false;\n\t\tif (this.filesConfigurationService.getAutoSaveMode() === AutoSaveMode.ON_FOCUS_CHANGE && !editor.isUntitled() && !options?.skipAutoSave) {\n\t\t\tautoSave = true;\n\t\t\tconfirmation = ConfirmResult.SAVE;\n\t\t\tsaveReason = SaveReason.FOCUS_CHANGE;\n\t\t}\n\n\t\t// No auto-save on focus change: ask user\n\t\telse {\n\n\t\t\t// Switch to editor that we want to handle and confirm to save/revert\n\t\t\tawait this.openEditor(editor);\n\n\t\t\tlet name: string;\n\t\t\tif (editor instanceof SideBySideEditorInput) {\n\t\t\t\tname = editor.primary.getName(); // prefer shorter names by using primary's name in this case\n\t\t\t} else {\n\t\t\t\tname = editor.getName();\n\t\t\t}\n\n\t\t\tconfirmation = await this.fileDialogService.showSaveConfirm([name]);\n\t\t}\n\n\t\t// It could be that the editor saved meanwhile or is saving, so we check\n\t\t// again to see if anything needs to happen before closing for good.\n\t\t// This can happen for example if autoSave: onFocusChange is configured\n\t\t// so that the save happens when the dialog opens.\n\t\tif (!editor.isDirty() || editor.isSaving()) {\n\t\t\treturn confirmation === ConfirmResult.CANCEL ? true : false;\n\t\t}\n\n\t\t// Otherwise, handle accordingly\n\t\tswitch (confirmation) {\n\t\t\tcase ConfirmResult.SAVE:\n\t\t\t\tconst result = await editor.save(this.id, { reason: saveReason });\n\t\t\t\tif (!result && autoSave) {\n\t\t\t\t\t// Save failed and we need to signal this back to the user, so\n\t\t\t\t\t// we handle the dirty editor again but this time ensuring to\n\t\t\t\t\t// show the confirm dialog\n\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/108752)\n\t\t\t\t\treturn this.doHandleDirtyClosing(editor, { skipAutoSave: true });\n\t\t\t\t}\n\n\t\t\t\treturn editor.isDirty(); // veto if still dirty\n\t\t\tcase ConfirmResult.DONT_SAVE:\n\t\t\t\ttry {\n\n\t\t\t\t\t// first try a normal revert where the contents of the editor are restored\n\t\t\t\t\tawait editor.revert(this.id);\n\n\t\t\t\t\treturn editor.isDirty(); // veto if still dirty\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t\t\t// dirty editor even when reverting fails.\n\t\t\t\t\tawait editor.revert(this.id, { soft: true });\n\n\t\t\t\t\treturn editor.isDirty(); // veto if still dirty\n\t\t\t\t}\n\t\t\tcase ConfirmResult.CANCEL:\n\t\t\t\treturn true; // veto\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region closeEditors()\n\n\tasync closeEditors(args: EditorInput[] | ICloseEditorsFilter, options?: ICloseEditorOptions): Promise<void> {\n\t\tif (this.isEmpty) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editors = this.doGetEditorsToClose(args);\n\n\t\t// Check for dirty and veto\n\t\tconst veto = await this.handleDirtyClosing(editors.slice(0));\n\t\tif (veto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do close\n\t\tthis.doCloseEditors(editors, options);\n\t}\n\n\tprivate doGetEditorsToClose(args: EditorInput[] | ICloseEditorsFilter): EditorInput[] {\n\t\tif (Array.isArray(args)) {\n\t\t\treturn args;\n\t\t}\n\n\t\tconst filter = args;\n\t\tconst hasDirection = typeof filter.direction === 'number';\n\n\t\tlet editorsToClose = this.model.getEditors(hasDirection ? EditorsOrder.SEQUENTIAL : EditorsOrder.MOST_RECENTLY_ACTIVE, filter); // in MRU order only if direction is not specified\n\n\t\t// Filter: saved or saving only\n\t\tif (filter.savedOnly) {\n\t\t\teditorsToClose = editorsToClose.filter(editor => !editor.isDirty() || editor.isSaving());\n\t\t}\n\n\t\t// Filter: direction (left / right)\n\t\telse if (hasDirection && filter.except) {\n\t\t\teditorsToClose = (filter.direction === CloseDirection.LEFT) ?\n\t\t\t\teditorsToClose.slice(0, this.model.indexOf(filter.except, editorsToClose)) :\n\t\t\t\teditorsToClose.slice(this.model.indexOf(filter.except, editorsToClose) + 1);\n\t\t}\n\n\t\t// Filter: except\n\t\telse if (filter.except) {\n\t\t\teditorsToClose = editorsToClose.filter(editor => !editor.matches(filter.except));\n\t\t}\n\n\t\treturn editorsToClose;\n\t}\n\n\tprivate doCloseEditors(editors: EditorInput[], options?: ICloseEditorOptions): void {\n\n\t\t// Close all inactive editors first\n\t\tlet closeActiveEditor = false;\n\t\tfor (const editor of editors) {\n\t\t\tif (!this.isActive(editor)) {\n\t\t\t\tthis.doCloseInactiveEditor(editor);\n\t\t\t} else {\n\t\t\t\tcloseActiveEditor = true;\n\t\t\t}\n\t\t}\n\n\t\t// Close active editor last if contained in editors list to close\n\t\tif (closeActiveEditor) {\n\t\t\tthis.doCloseActiveEditor(options?.preserveFocus ? false : undefined);\n\t\t}\n\n\t\t// Forward to title control\n\t\tif (editors.length) {\n\t\t\tthis.titleAreaControl.closeEditors(editors);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region closeAllEditors()\n\n\tasync closeAllEditors(options?: ICloseAllEditorsOptions): Promise<void> {\n\t\tif (this.isEmpty) {\n\n\t\t\t// If the group is empty and the request is to close all editors, we still close\n\t\t\t// the editor group is the related setting to close empty groups is enabled for\n\t\t\t// a convenient way of removing empty editor groups for the user.\n\t\t\tif (this.accessor.partOptions.closeEmptyGroups) {\n\t\t\t\tthis.accessor.removeGroup(this);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for dirty and veto\n\t\tconst veto = await this.handleDirtyClosing(this.model.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, options));\n\t\tif (veto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do close\n\t\tthis.doCloseAllEditors(options);\n\t}\n\n\tprivate doCloseAllEditors(options?: ICloseAllEditorsOptions): void {\n\n\t\t// Close all inactive editors first\n\t\tconst editorsToClose: EditorInput[] = [];\n\t\tfor (const editor of this.model.getEditors(EditorsOrder.SEQUENTIAL, options)) {\n\t\t\tif (!this.isActive(editor)) {\n\t\t\t\tthis.doCloseInactiveEditor(editor);\n\t\t\t}\n\n\t\t\teditorsToClose.push(editor);\n\t\t}\n\n\t\t// Close active editor last (unless we skip it, e.g. because it is sticky)\n\t\tif (this.activeEditor && editorsToClose.includes(this.activeEditor)) {\n\t\t\tthis.doCloseActiveEditor();\n\t\t}\n\n\t\t// Forward to title control\n\t\tif (editorsToClose.length) {\n\t\t\tthis.titleAreaControl.closeEditors(editorsToClose);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region replaceEditors()\n\n\tasync replaceEditors(editors: EditorReplacement[]): Promise<void> {\n\n\t\t// Extract active vs. inactive replacements\n\t\tlet activeReplacement: EditorReplacement | undefined;\n\t\tconst inactiveReplacements: EditorReplacement[] = [];\n\t\tfor (let { editor, replacement, forceReplaceDirty, options } of editors) {\n\t\t\tconst index = this.getIndexOfEditor(editor);\n\t\t\tif (index >= 0) {\n\t\t\t\tconst isActiveEditor = this.isActive(editor);\n\n\t\t\t\t// make sure we respect the index of the editor to replace\n\t\t\t\tif (options) {\n\t\t\t\t\toptions.index = index;\n\t\t\t\t} else {\n\t\t\t\t\toptions = EditorOptions.create({ index });\n\t\t\t\t}\n\n\t\t\t\toptions.inactive = !isActiveEditor;\n\t\t\t\toptions.pinned = options.pinned ?? true; // unless specified, prefer to pin upon replace\n\n\t\t\t\tconst editorToReplace = { editor, replacement, forceReplaceDirty, options };\n\t\t\t\tif (isActiveEditor) {\n\t\t\t\t\tactiveReplacement = editorToReplace;\n\t\t\t\t} else {\n\t\t\t\t\tinactiveReplacements.push(editorToReplace);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle inactive first\n\t\tfor (const { editor, replacement, forceReplaceDirty, options } of inactiveReplacements) {\n\n\t\t\t// Open inactive editor\n\t\t\tawait this.doOpenEditor(replacement, options);\n\n\t\t\t// Close replaced inactive editor unless they match\n\t\t\tif (!editor.matches(replacement)) {\n\t\t\t\tlet closed = false;\n\t\t\t\tif (forceReplaceDirty) {\n\t\t\t\t\tthis.doCloseEditor(editor, false);\n\t\t\t\t\tclosed = true;\n\t\t\t\t} else {\n\t\t\t\t\tclosed = await this.doCloseEditorWithDirtyHandling(editor, { preserveFocus: true });\n\t\t\t\t}\n\t\t\t\tif (!closed) {\n\t\t\t\t\treturn; // canceled\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle active last\n\t\tif (activeReplacement) {\n\n\t\t\t// Open replacement as active editor\n\t\t\tconst openEditorResult = this.doOpenEditor(activeReplacement.replacement, activeReplacement.options);\n\n\t\t\t// Close replaced active editor unless they match\n\t\t\tif (!activeReplacement.editor.matches(activeReplacement.replacement)) {\n\t\t\t\tif (activeReplacement.forceReplaceDirty) {\n\t\t\t\t\tthis.doCloseEditor(activeReplacement.editor, false);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCloseEditorWithDirtyHandling(activeReplacement.editor, { preserveFocus: true });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait openEditorResult;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Themable\n\n\tprotected override updateStyles(): void {\n\t\tconst isEmpty = this.isEmpty;\n\n\t\t// Container\n\t\tif (isEmpty) {\n\t\t\tthis.element.style.backgroundColor = this.getColor(EDITOR_GROUP_EMPTY_BACKGROUND) || '';\n\t\t} else {\n\t\t\tthis.element.style.backgroundColor = '';\n\t\t}\n\n\t\t// Title control\n\t\tconst borderColor = this.getColor(EDITOR_GROUP_HEADER_BORDER) || this.getColor(contrastBorder);\n\t\tif (!isEmpty && borderColor) {\n\t\t\tthis.titleContainer.classList.add('title-border-bottom');\n\t\t\tthis.titleContainer.style.setProperty('--title-border-bottom-color', borderColor.toString());\n\t\t} else {\n\t\t\tthis.titleContainer.classList.remove('title-border-bottom');\n\t\t\tthis.titleContainer.style.removeProperty('--title-border-bottom-color');\n\t\t}\n\n\t\tconst { showTabs } = this.accessor.partOptions;\n\t\tthis.titleContainer.style.backgroundColor = this.getColor(showTabs ? EDITOR_GROUP_HEADER_TABS_BACKGROUND : EDITOR_GROUP_HEADER_NO_TABS_BACKGROUND) || '';\n\n\t\t// Editor container\n\t\tthis.editorContainer.style.backgroundColor = this.getColor(editorBackground) || '';\n\t}\n\n\t//#endregion\n\n\t//#region ISerializableView\n\n\treadonly element: HTMLElement = document.createElement('div');\n\n\tget minimumWidth(): number { return this.editorControl.minimumWidth; }\n\tget minimumHeight(): number { return this.editorControl.minimumHeight; }\n\tget maximumWidth(): number { return this.editorControl.maximumWidth; }\n\tget maximumHeight(): number { return this.editorControl.maximumHeight; }\n\n\tprivate _onDidChange = this._register(new Relay<{ width: number; height: number; } | undefined>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tlayout(width: number, height: number): void {\n\t\tthis.dimension = new Dimension(width, height);\n\n\t\t// Layout the title area first to receive the size it occupies\n\t\tconst titleAreaSize = this.titleAreaControl.layout({\n\t\t\tcontainer: this.dimension,\n\t\t\tavailable: new Dimension(width, height - this.editorControl.minimumHeight)\n\t\t});\n\n\t\t// Pass the container width and remaining height to the editor layout\n\t\tconst editorHeight = Math.max(0, height - titleAreaSize.height);\n\t\tthis.editorContainer.style.height = `${editorHeight}px`;\n\t\tthis.editorControl.layout(new Dimension(width, editorHeight));\n\t}\n\n\trelayout(): void {\n\t\tif (this.dimension) {\n\t\t\tconst { width, height } = this.dimension;\n\t\t\tthis.layout(width, height);\n\t\t}\n\t}\n\n\ttoJSON(): ISerializedEditorGroupModel {\n\t\treturn this.model.serialize();\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tthis._disposed = true;\n\n\t\tthis._onWillDispose.fire();\n\n\t\tthis.titleAreaControl.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface EditorReplacement extends IEditorReplacement {\n\treadonly editor: EditorInput;\n\treadonly replacement: EditorInput;\n\treadonly options?: EditorOptions;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\t// Letterpress\n\tconst letterpress = `./media/letterpress${theme.type === 'dark' ? '-dark' : theme.type === 'hc' ? '-hc' : ''}.svg`;\n\tcollector.addRule(`\n\t\t.monaco-workbench .part.editor > .content .editor-group-container.empty .editor-group-letterpress {\n\t\t\tbackground-image: ${asCSSUrl(FileAccess.asBrowserUri(letterpress, require))}\n\t\t}\n\t`);\n\n\t// Focused Empty Group Border\n\tconst focusedEmptyGroupBorder = theme.getColor(EDITOR_GROUP_FOCUSED_EMPTY_BORDER);\n\tif (focusedEmptyGroupBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content:not(.empty) .editor-group-container.empty.active:focus {\n\t\t\t\toutline-width: 1px;\n\t\t\t\toutline-color: ${focusedEmptyGroupBorder};\n\t\t\t\toutline-offset: -2px;\n\t\t\t\toutline-style: solid;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content.empty .editor-group-container.empty.active:focus {\n\t\t\t\toutline: none; /* never show outline for empty group if it is the last */\n\t\t\t}\n\t\t`);\n\t} else {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.empty.active:focus {\n\t\t\t\toutline: none; /* disable focus outline unless active empty group border is defined */\n\t\t\t}\n\t\t`);\n\t}\n});\n"]}