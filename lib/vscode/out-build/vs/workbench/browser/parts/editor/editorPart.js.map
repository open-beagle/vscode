{"version":3,"file":"editorPart.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/parts/editor/editorPart.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Part } from 'vs/workbench/browser/part';\nimport { Dimension, isAncestor, $, EventHelper, addDisposableGenericMouseDownListner } from 'vs/base/browser/dom';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { contrastBorder, editorBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { GroupDirection, IAddGroupOptions, GroupsArrangement, GroupOrientation, IMergeGroupOptions, MergeGroupMode, GroupsOrder, GroupChangeKind, GroupLocation, IFindGroupScope, EditorGroupLayout, GroupLayoutArgument, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IView, orthogonal, LayoutPriority, IViewSize, Direction, SerializableGrid, Sizing, ISerializedGrid, Orientation, GridBranchNode, isGridBranchNode, GridNode, createSerializedGrid, Grid } from 'vs/base/browser/ui/grid/grid';\nimport { GroupIdentifier, IEditorPartOptions, IEditorPartOptionsChangeEvent } from 'vs/workbench/common/editor';\nimport { EDITOR_GROUP_BORDER, EDITOR_PANE_BACKGROUND } from 'vs/workbench/common/theme';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport { IEditorGroupsAccessor, IEditorGroupView, getEditorPartOptions, impactsEditorPartOptions, IEditorPartCreationOptions } from 'vs/workbench/browser/parts/editor/editor';\nimport { EditorGroupView } from 'vs/workbench/browser/parts/editor/editorGroupView';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IDisposable, dispose, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ISerializedEditorGroupModel, isSerializedEditorGroupModel } from 'vs/workbench/common/editor/editorGroupModel';\nimport { EditorDropTarget, IEditorDropTargetDelegate } from 'vs/workbench/browser/parts/editor/editorDropTarget';\nimport { IEditorDropService } from 'vs/workbench/services/editor/browser/editorDropService';\nimport { Color } from 'vs/base/common/color';\nimport { CenteredViewLayout } from 'vs/base/browser/ui/centered/centeredViewLayout';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Parts, IWorkbenchLayoutService, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IBoundarySashes } from 'vs/base/browser/ui/grid/gridview';\nimport { CompositeDragAndDropObserver } from 'vs/workbench/browser/dnd';\nimport { Promises } from 'vs/base/common/async';\n\ninterface IEditorPartUIState {\n\tserializedGrid: ISerializedGrid;\n\tactiveGroup: GroupIdentifier;\n\tmostRecentActiveGroups: GroupIdentifier[];\n}\n\nclass GridWidgetView<T extends IView> implements IView {\n\n\treadonly element: HTMLElement = $('.grid-view-container');\n\n\tget minimumWidth(): number { return this.gridWidget ? this.gridWidget.minimumWidth : 0; }\n\tget maximumWidth(): number { return this.gridWidget ? this.gridWidget.maximumWidth : Number.POSITIVE_INFINITY; }\n\tget minimumHeight(): number { return this.gridWidget ? this.gridWidget.minimumHeight : 0; }\n\tget maximumHeight(): number { return this.gridWidget ? this.gridWidget.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\tprivate _onDidChange = new Relay<{ width: number; height: number; } | undefined>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _gridWidget: Grid<T> | undefined;\n\n\tget gridWidget(): Grid<T> | undefined {\n\t\treturn this._gridWidget;\n\t}\n\n\tset gridWidget(grid: Grid<T> | undefined) {\n\t\tthis.element.innerText = '';\n\n\t\tif (grid) {\n\t\t\tthis.element.appendChild(grid.element);\n\t\t\tthis._onDidChange.input = grid.onDidChange;\n\t\t} else {\n\t\t\tthis._onDidChange.input = Event.None;\n\t\t}\n\n\t\tthis._gridWidget = grid;\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tif (this.gridWidget) {\n\t\t\tthis.gridWidget.layout(width, height);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n}\n\nexport class EditorPart extends Part implements IEditorGroupsService, IEditorGroupsAccessor, IEditorDropService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly EDITOR_PART_UI_STATE_STORAGE_KEY = 'editorpart.state';\n\tprivate static readonly EDITOR_PART_CENTERED_VIEW_STORAGE_KEY = 'editorpart.centeredview';\n\n\t//#region Events\n\n\tprivate readonly _onDidLayout = this._register(new Emitter<Dimension>());\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\tprivate readonly _onDidChangeActiveGroup = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidChangeActiveGroup = this._onDidChangeActiveGroup.event;\n\n\tprivate readonly _onDidChangeGroupIndex = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidChangeGroupIndex = this._onDidChangeGroupIndex.event;\n\n\tprivate readonly _onDidActivateGroup = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidActivateGroup = this._onDidActivateGroup.event;\n\n\tprivate readonly _onDidAddGroup = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidAddGroup = this._onDidAddGroup.event;\n\n\tprivate readonly _onDidRemoveGroup = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidRemoveGroup = this._onDidRemoveGroup.event;\n\n\tprivate readonly _onDidMoveGroup = this._register(new Emitter<IEditorGroupView>());\n\treadonly onDidMoveGroup = this._onDidMoveGroup.event;\n\n\tprivate readonly onDidSetGridWidget = this._register(new Emitter<{ width: number; height: number; } | undefined>());\n\n\tprivate readonly _onDidChangeSizeConstraints = this._register(new Relay<{ width: number; height: number; } | undefined>());\n\treadonly onDidChangeSizeConstraints = Event.any(this.onDidSetGridWidget.event, this._onDidChangeSizeConstraints.event);\n\n\tprivate readonly _onDidChangeEditorPartOptions = this._register(new Emitter<IEditorPartOptionsChangeEvent>());\n\treadonly onDidChangeEditorPartOptions = this._onDidChangeEditorPartOptions.event;\n\n\t//#endregion\n\n\tprivate readonly workspaceMemento = this.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\tprivate readonly globalMemento = this.getMemento(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\n\tprivate readonly groupViews = new Map<GroupIdentifier, IEditorGroupView>();\n\tprivate mostRecentActiveGroups: GroupIdentifier[] = [];\n\n\tprivate container: HTMLElement | undefined;\n\n\tprivate centeredLayoutWidget!: CenteredViewLayout;\n\n\tprivate gridWidget!: SerializableGrid<IEditorGroupView>;\n\tprivate readonly gridWidgetView = this._register(new GridWidgetView<IEditorGroupView>());\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(Parts.EDITOR_PART, { hasTitle: false }, themeService, storageService, layoutService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t\tthis._register(this.themeService.onDidFileIconThemeChange(() => this.handleChangedPartOptions()));\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (impactsEditorPartOptions(event)) {\n\t\t\tthis.handleChangedPartOptions();\n\t\t}\n\t}\n\n\tprivate handleChangedPartOptions(): void {\n\t\tconst oldPartOptions = this._partOptions;\n\t\tconst newPartOptions = getEditorPartOptions(this.configurationService, this.themeService);\n\n\t\tthis.enforcedPartOptions.forEach(enforcedPartOptions => {\n\t\t\tObject.assign(newPartOptions, enforcedPartOptions); // check for overrides\n\t\t});\n\n\t\tthis._partOptions = newPartOptions;\n\n\t\tthis._onDidChangeEditorPartOptions.fire({ oldPartOptions, newPartOptions });\n\t}\n\n\t//#region IEditorGroupsService\n\n\tprivate enforcedPartOptions: IEditorPartOptions[] = [];\n\n\tprivate _partOptions = getEditorPartOptions(this.configurationService, this.themeService);\n\tget partOptions(): IEditorPartOptions { return this._partOptions; }\n\n\tenforcePartOptions(options: IEditorPartOptions): IDisposable {\n\t\tthis.enforcedPartOptions.push(options);\n\t\tthis.handleChangedPartOptions();\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.enforcedPartOptions.splice(this.enforcedPartOptions.indexOf(options), 1);\n\t\t\tthis.handleChangedPartOptions();\n\t\t});\n\t}\n\n\tprivate _contentDimension!: Dimension;\n\tget contentDimension(): Dimension { return this._contentDimension; }\n\n\tprivate _activeGroup!: IEditorGroupView;\n\tget activeGroup(): IEditorGroupView {\n\t\treturn this._activeGroup;\n\t}\n\n\tget groups(): IEditorGroupView[] {\n\t\treturn Array.from(this.groupViews.values());\n\t}\n\n\tget count(): number {\n\t\treturn this.groupViews.size;\n\t}\n\n\tget orientation(): GroupOrientation {\n\t\treturn (this.gridWidget && this.gridWidget.orientation === Orientation.VERTICAL) ? GroupOrientation.VERTICAL : GroupOrientation.HORIZONTAL;\n\t}\n\n\tprivate whenReadyResolve: (() => void) | undefined;\n\treadonly whenReady = new Promise<void>(resolve => (this.whenReadyResolve = resolve));\n\n\tprivate whenRestoredResolve: (() => void) | undefined;\n\treadonly whenRestored = new Promise<void>(resolve => (this.whenRestoredResolve = resolve));\n\tprivate restored = false;\n\n\tisRestored(): boolean {\n\t\treturn this.restored;\n\t}\n\n\tget hasRestorableState(): boolean {\n\t\treturn !!this.workspaceMemento[EditorPart.EDITOR_PART_UI_STATE_STORAGE_KEY];\n\t}\n\n\tgetGroups(order = GroupsOrder.CREATION_TIME): IEditorGroupView[] {\n\t\tswitch (order) {\n\t\t\tcase GroupsOrder.CREATION_TIME:\n\t\t\t\treturn this.groups;\n\n\t\t\tcase GroupsOrder.MOST_RECENTLY_ACTIVE:\n\t\t\t\tconst mostRecentActive = coalesce(this.mostRecentActiveGroups.map(groupId => this.getGroup(groupId)));\n\n\t\t\t\t// there can be groups that got never active, even though they exist. in this case\n\t\t\t\t// make sure to just append them at the end so that all groups are returned properly\n\t\t\t\treturn distinct([...mostRecentActive, ...this.groups]);\n\n\t\t\tcase GroupsOrder.GRID_APPEARANCE:\n\t\t\t\tconst views: IEditorGroupView[] = [];\n\t\t\t\tif (this.gridWidget) {\n\t\t\t\t\tthis.fillGridNodes(views, this.gridWidget.getViews());\n\t\t\t\t}\n\n\t\t\t\treturn views;\n\t\t}\n\t}\n\n\tprivate fillGridNodes(target: IEditorGroupView[], node: GridBranchNode<IEditorGroupView> | GridNode<IEditorGroupView>): void {\n\t\tif (isGridBranchNode(node)) {\n\t\t\tnode.children.forEach(child => this.fillGridNodes(target, child));\n\t\t} else {\n\t\t\ttarget.push(node.view);\n\t\t}\n\t}\n\n\tgetGroup(identifier: GroupIdentifier): IEditorGroupView | undefined {\n\t\treturn this.groupViews.get(identifier);\n\t}\n\n\tfindGroup(scope: IFindGroupScope, source: IEditorGroupView | GroupIdentifier = this.activeGroup, wrap?: boolean): IEditorGroupView {\n\n\t\t// by direction\n\t\tif (typeof scope.direction === 'number') {\n\t\t\treturn this.doFindGroupByDirection(scope.direction, source, wrap);\n\t\t}\n\n\t\t// by location\n\t\tif (typeof scope.location === 'number') {\n\t\t\treturn this.doFindGroupByLocation(scope.location, source, wrap);\n\t\t}\n\n\t\tthrow new Error('invalid arguments');\n\t}\n\n\tprivate doFindGroupByDirection(direction: GroupDirection, source: IEditorGroupView | GroupIdentifier, wrap?: boolean): IEditorGroupView {\n\t\tconst sourceGroupView = this.assertGroupView(source);\n\n\t\t// Find neighbours and sort by our MRU list\n\t\tconst neighbours = this.gridWidget.getNeighborViews(sourceGroupView, this.toGridViewDirection(direction), wrap);\n\t\tneighbours.sort(((n1, n2) => this.mostRecentActiveGroups.indexOf(n1.id) - this.mostRecentActiveGroups.indexOf(n2.id)));\n\n\t\treturn neighbours[0];\n\t}\n\n\tprivate doFindGroupByLocation(location: GroupLocation, source: IEditorGroupView | GroupIdentifier, wrap?: boolean): IEditorGroupView {\n\t\tconst sourceGroupView = this.assertGroupView(source);\n\t\tconst groups = this.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\tconst index = groups.indexOf(sourceGroupView);\n\n\t\tswitch (location) {\n\t\t\tcase GroupLocation.FIRST:\n\t\t\t\treturn groups[0];\n\t\t\tcase GroupLocation.LAST:\n\t\t\t\treturn groups[groups.length - 1];\n\t\t\tcase GroupLocation.NEXT:\n\t\t\t\tlet nextGroup = groups[index + 1];\n\t\t\t\tif (!nextGroup && wrap) {\n\t\t\t\t\tnextGroup = this.doFindGroupByLocation(GroupLocation.FIRST, source);\n\t\t\t\t}\n\n\t\t\t\treturn nextGroup;\n\t\t\tcase GroupLocation.PREVIOUS:\n\t\t\t\tlet previousGroup = groups[index - 1];\n\t\t\t\tif (!previousGroup && wrap) {\n\t\t\t\t\tpreviousGroup = this.doFindGroupByLocation(GroupLocation.LAST, source);\n\t\t\t\t}\n\n\t\t\t\treturn previousGroup;\n\t\t}\n\t}\n\n\tactivateGroup(group: IEditorGroupView | GroupIdentifier): IEditorGroupView {\n\t\tconst groupView = this.assertGroupView(group);\n\t\tthis.doSetGroupActive(groupView);\n\n\t\tthis._onDidActivateGroup.fire(groupView);\n\t\treturn groupView;\n\t}\n\n\trestoreGroup(group: IEditorGroupView | GroupIdentifier): IEditorGroupView {\n\t\tconst groupView = this.assertGroupView(group);\n\t\tthis.doRestoreGroup(groupView);\n\n\t\treturn groupView;\n\t}\n\n\tgetSize(group: IEditorGroupView | GroupIdentifier): { width: number, height: number } {\n\t\tconst groupView = this.assertGroupView(group);\n\n\t\treturn this.gridWidget.getViewSize(groupView);\n\t}\n\n\tsetSize(group: IEditorGroupView | GroupIdentifier, size: { width: number, height: number }): void {\n\t\tconst groupView = this.assertGroupView(group);\n\n\t\tthis.gridWidget.resizeView(groupView, size);\n\t}\n\n\tarrangeGroups(arrangement: GroupsArrangement, target = this.activeGroup): void {\n\t\tif (this.count < 2) {\n\t\t\treturn; // require at least 2 groups to show\n\t\t}\n\n\t\tif (!this.gridWidget) {\n\t\t\treturn; // we have not been created yet\n\t\t}\n\n\t\tswitch (arrangement) {\n\t\t\tcase GroupsArrangement.EVEN:\n\t\t\t\tthis.gridWidget.distributeViewSizes();\n\t\t\t\tbreak;\n\t\t\tcase GroupsArrangement.MINIMIZE_OTHERS:\n\t\t\t\tthis.gridWidget.maximizeViewSize(target);\n\t\t\t\tbreak;\n\t\t\tcase GroupsArrangement.TOGGLE:\n\t\t\t\tif (this.isGroupMaximized(target)) {\n\t\t\t\t\tthis.arrangeGroups(GroupsArrangement.EVEN);\n\t\t\t\t} else {\n\t\t\t\t\tthis.arrangeGroups(GroupsArrangement.MINIMIZE_OTHERS);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate isGroupMaximized(targetGroup: IEditorGroupView): boolean {\n\t\tfor (const group of this.groups) {\n\t\t\tif (group === targetGroup) {\n\t\t\t\tcontinue; // ignore target group\n\t\t\t}\n\n\t\t\tif (!group.isMinimized) {\n\t\t\t\treturn false; // target cannot be maximized if one group is not minimized\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetGroupOrientation(orientation: GroupOrientation): void {\n\t\tif (!this.gridWidget) {\n\t\t\treturn; // we have not been created yet\n\t\t}\n\n\t\tconst newOrientation = (orientation === GroupOrientation.HORIZONTAL) ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\tif (this.gridWidget.orientation !== newOrientation) {\n\t\t\tthis.gridWidget.orientation = newOrientation;\n\t\t}\n\t}\n\n\tapplyLayout(layout: EditorGroupLayout): void {\n\t\tconst restoreFocus = this.shouldRestoreFocus(this.container);\n\n\t\t// Determine how many groups we need overall\n\t\tlet layoutGroupsCount = 0;\n\t\tfunction countGroups(groups: GroupLayoutArgument[]): void {\n\t\t\tgroups.forEach(group => {\n\t\t\t\tif (Array.isArray(group.groups)) {\n\t\t\t\t\tcountGroups(group.groups);\n\t\t\t\t} else {\n\t\t\t\t\tlayoutGroupsCount++;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcountGroups(layout.groups);\n\n\t\t// If we currently have too many groups, merge them into the last one\n\t\tlet currentGroupViews = this.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\tif (layoutGroupsCount < currentGroupViews.length) {\n\t\t\tconst lastGroupInLayout = currentGroupViews[layoutGroupsCount - 1];\n\t\t\tcurrentGroupViews.forEach((group, index) => {\n\t\t\t\tif (index >= layoutGroupsCount) {\n\t\t\t\t\tthis.mergeGroup(group, lastGroupInLayout);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcurrentGroupViews = this.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\t}\n\n\t\tconst activeGroup = this.activeGroup;\n\n\t\t// Prepare grid descriptor to create new grid from\n\t\tconst gridDescriptor = createSerializedGrid({\n\t\t\torientation: this.toGridViewOrientation(\n\t\t\t\tlayout.orientation,\n\t\t\t\tthis.isTwoDimensionalGrid() ?\n\t\t\t\t\tthis.gridWidget.orientation :\t\t\t// preserve original orientation for 2-dimensional grids\n\t\t\t\t\torthogonal(this.gridWidget.orientation) // otherwise flip (fix https://github.com/microsoft/vscode/issues/52975)\n\t\t\t),\n\t\t\tgroups: layout.groups\n\t\t});\n\n\t\t// Recreate gridwidget with descriptor\n\t\tthis.doCreateGridControlWithState(gridDescriptor, activeGroup.id, currentGroupViews);\n\n\t\t// Layout\n\t\tthis.doLayout(this._contentDimension);\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Events for groups that got added\n\t\tthis.getGroups(GroupsOrder.GRID_APPEARANCE).forEach(groupView => {\n\t\t\tif (!currentGroupViews.includes(groupView)) {\n\t\t\t\tthis._onDidAddGroup.fire(groupView);\n\t\t\t}\n\t\t});\n\n\t\t// Notify group index change given layout has changed\n\t\tthis.notifyGroupIndexChange();\n\n\t\t// Restore focus as needed\n\t\tif (restoreFocus) {\n\t\t\tthis._activeGroup.focus();\n\t\t}\n\t}\n\n\tprivate shouldRestoreFocus(target: Element | undefined): boolean {\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst activeElement = document.activeElement;\n\n\t\tif (activeElement === document.body) {\n\t\t\treturn true; // always restore focus if nothing is focused currently\n\t\t}\n\n\t\t// otherwise check for the active element being an ancestor of the target\n\t\treturn isAncestor(activeElement, target);\n\t}\n\n\tprivate isTwoDimensionalGrid(): boolean {\n\t\tconst views = this.gridWidget.getViews();\n\t\tif (isGridBranchNode(views)) {\n\t\t\t// the grid is 2-dimensional if any children\n\t\t\t// of the grid is a branch node\n\t\t\treturn views.children.some(child => isGridBranchNode(child));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\taddGroup(location: IEditorGroupView | GroupIdentifier, direction: GroupDirection, options?: IAddGroupOptions): IEditorGroupView {\n\t\tconst locationView = this.assertGroupView(location);\n\n\t\tconst group = this.doAddGroup(locationView, direction);\n\n\t\tif (options?.activate) {\n\t\t\tthis.doSetGroupActive(group);\n\t\t}\n\n\t\treturn group;\n\t}\n\n\tprivate doAddGroup(locationView: IEditorGroupView, direction: GroupDirection, groupToCopy?: IEditorGroupView): IEditorGroupView {\n\t\tconst newGroupView = this.doCreateGroupView(groupToCopy);\n\n\t\t// Add to grid widget\n\t\tthis.gridWidget.addView(\n\t\t\tnewGroupView,\n\t\t\tthis.getSplitSizingStyle(),\n\t\t\tlocationView,\n\t\t\tthis.toGridViewDirection(direction),\n\t\t);\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Event\n\t\tthis._onDidAddGroup.fire(newGroupView);\n\n\t\t// Notify group index change given a new group was added\n\t\tthis.notifyGroupIndexChange();\n\n\t\treturn newGroupView;\n\t}\n\n\tprivate getSplitSizingStyle(): Sizing {\n\t\treturn this._partOptions.splitSizing === 'split' ? Sizing.Split : Sizing.Distribute;\n\t}\n\n\tprivate doCreateGroupView(from?: IEditorGroupView | ISerializedEditorGroupModel | null): IEditorGroupView {\n\n\t\t// Create group view\n\t\tlet groupView: IEditorGroupView;\n\t\tif (from instanceof EditorGroupView) {\n\t\t\tgroupView = EditorGroupView.createCopy(from, this, this.count, this.instantiationService);\n\t\t} else if (isSerializedEditorGroupModel(from)) {\n\t\t\tgroupView = EditorGroupView.createFromSerialized(from, this, this.count, this.instantiationService);\n\t\t} else {\n\t\t\tgroupView = EditorGroupView.createNew(this, this.count, this.instantiationService);\n\t\t}\n\n\t\t// Keep in map\n\t\tthis.groupViews.set(groupView.id, groupView);\n\n\t\t// Track focus\n\t\tconst groupDisposables = new DisposableStore();\n\t\tgroupDisposables.add(groupView.onDidFocus(() => {\n\t\t\tthis.doSetGroupActive(groupView);\n\t\t}));\n\n\t\t// Track editor change\n\t\tgroupDisposables.add(groupView.onDidGroupChange(e => {\n\t\t\tswitch (e.kind) {\n\t\t\t\tcase GroupChangeKind.EDITOR_ACTIVE:\n\t\t\t\t\tthis.updateContainer();\n\t\t\t\t\tbreak;\n\t\t\t\tcase GroupChangeKind.GROUP_INDEX:\n\t\t\t\t\tthis._onDidChangeGroupIndex.fire(groupView);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\t// Track dispose\n\t\tEvent.once(groupView.onWillDispose)(() => {\n\t\t\tdispose(groupDisposables);\n\t\t\tthis.groupViews.delete(groupView.id);\n\t\t\tthis.doUpdateMostRecentActive(groupView);\n\t\t});\n\n\t\treturn groupView;\n\t}\n\n\tprivate doSetGroupActive(group: IEditorGroupView): void {\n\t\tif (this._activeGroup === group) {\n\t\t\treturn; // return if this is already the active group\n\t\t}\n\n\t\tconst previousActiveGroup = this._activeGroup;\n\t\tthis._activeGroup = group;\n\n\t\t// Update list of most recently active groups\n\t\tthis.doUpdateMostRecentActive(group, true);\n\n\t\t// Mark previous one as inactive\n\t\tif (previousActiveGroup) {\n\t\t\tpreviousActiveGroup.setActive(false);\n\t\t}\n\n\t\t// Mark group as new active\n\t\tgroup.setActive(true);\n\n\t\t// Maximize the group if it is currently minimized\n\t\tthis.doRestoreGroup(group);\n\n\t\t// Event\n\t\tthis._onDidChangeActiveGroup.fire(group);\n\t}\n\n\tprivate doRestoreGroup(group: IEditorGroupView): void {\n\t\tif (this.gridWidget) {\n\t\t\tconst viewSize = this.gridWidget.getViewSize(group);\n\t\t\tif (viewSize.width === group.minimumWidth || viewSize.height === group.minimumHeight) {\n\t\t\t\tthis.arrangeGroups(GroupsArrangement.MINIMIZE_OTHERS, group);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate doUpdateMostRecentActive(group: IEditorGroupView, makeMostRecentlyActive?: boolean): void {\n\t\tconst index = this.mostRecentActiveGroups.indexOf(group.id);\n\n\t\t// Remove from MRU list\n\t\tif (index !== -1) {\n\t\t\tthis.mostRecentActiveGroups.splice(index, 1);\n\t\t}\n\n\t\t// Add to front as needed\n\t\tif (makeMostRecentlyActive) {\n\t\t\tthis.mostRecentActiveGroups.unshift(group.id);\n\t\t}\n\t}\n\n\tprivate toGridViewDirection(direction: GroupDirection): Direction {\n\t\tswitch (direction) {\n\t\t\tcase GroupDirection.UP: return Direction.Up;\n\t\t\tcase GroupDirection.DOWN: return Direction.Down;\n\t\t\tcase GroupDirection.LEFT: return Direction.Left;\n\t\t\tcase GroupDirection.RIGHT: return Direction.Right;\n\t\t}\n\t}\n\n\tprivate toGridViewOrientation(orientation: GroupOrientation, fallback: Orientation): Orientation {\n\t\tif (typeof orientation === 'number') {\n\t\t\treturn orientation === GroupOrientation.HORIZONTAL ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t}\n\n\t\treturn fallback;\n\t}\n\n\tremoveGroup(group: IEditorGroupView | GroupIdentifier): void {\n\t\tconst groupView = this.assertGroupView(group);\n\t\tif (this.groupViews.size === 1) {\n\t\t\treturn; // Cannot remove the last root group\n\t\t}\n\n\t\t// Remove empty group\n\t\tif (groupView.isEmpty) {\n\t\t\treturn this.doRemoveEmptyGroup(groupView);\n\t\t}\n\n\t\t// Remove group with editors\n\t\tthis.doRemoveGroupWithEditors(groupView);\n\t}\n\n\tprivate doRemoveGroupWithEditors(groupView: IEditorGroupView): void {\n\t\tconst mostRecentlyActiveGroups = this.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\n\t\tlet lastActiveGroup: IEditorGroupView;\n\t\tif (this._activeGroup === groupView) {\n\t\t\tlastActiveGroup = mostRecentlyActiveGroups[1];\n\t\t} else {\n\t\t\tlastActiveGroup = mostRecentlyActiveGroups[0];\n\t\t}\n\n\t\t// Removing a group with editors should merge these editors into the\n\t\t// last active group and then remove this group.\n\t\tthis.mergeGroup(groupView, lastActiveGroup);\n\t}\n\n\tprivate doRemoveEmptyGroup(groupView: IEditorGroupView): void {\n\t\tconst restoreFocus = this.shouldRestoreFocus(this.container);\n\n\t\t// Activate next group if the removed one was active\n\t\tif (this._activeGroup === groupView) {\n\t\t\tconst mostRecentlyActiveGroups = this.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tconst nextActiveGroup = mostRecentlyActiveGroups[1]; // [0] will be the current group we are about to dispose\n\t\t\tthis.activateGroup(nextActiveGroup);\n\t\t}\n\n\t\t// Remove from grid widget & dispose\n\t\tthis.gridWidget.removeView(groupView, this.getSplitSizingStyle());\n\t\tgroupView.dispose();\n\n\t\t// Restore focus if we had it previously (we run this after gridWidget.removeView() is called\n\t\t// because removing a view can mean to reparent it and thus focus would be removed otherwise)\n\t\tif (restoreFocus) {\n\t\t\tthis._activeGroup.focus();\n\t\t}\n\n\t\t// Notify group index change given a group was removed\n\t\tthis.notifyGroupIndexChange();\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Event\n\t\tthis._onDidRemoveGroup.fire(groupView);\n\t}\n\n\tmoveGroup(group: IEditorGroupView | GroupIdentifier, location: IEditorGroupView | GroupIdentifier, direction: GroupDirection): IEditorGroupView {\n\t\tconst sourceView = this.assertGroupView(group);\n\t\tconst targetView = this.assertGroupView(location);\n\n\t\tif (sourceView.id === targetView.id) {\n\t\t\tthrow new Error('Cannot move group into its own');\n\t\t}\n\n\t\tconst restoreFocus = this.shouldRestoreFocus(sourceView.element);\n\n\t\t// Move through grid widget API\n\t\tthis.gridWidget.moveView(sourceView, this.getSplitSizingStyle(), targetView, this.toGridViewDirection(direction));\n\n\t\t// Restore focus if we had it previously (we run this after gridWidget.removeView() is called\n\t\t// because removing a view can mean to reparent it and thus focus would be removed otherwise)\n\t\tif (restoreFocus) {\n\t\t\tsourceView.focus();\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidMoveGroup.fire(sourceView);\n\n\t\t// Notify group index change given a group was moved\n\t\tthis.notifyGroupIndexChange();\n\n\t\treturn sourceView;\n\t}\n\n\tcopyGroup(group: IEditorGroupView | GroupIdentifier, location: IEditorGroupView | GroupIdentifier, direction: GroupDirection): IEditorGroupView {\n\t\tconst groupView = this.assertGroupView(group);\n\t\tconst locationView = this.assertGroupView(location);\n\n\t\tconst restoreFocus = this.shouldRestoreFocus(groupView.element);\n\n\t\t// Copy the group view\n\t\tconst copiedGroupView = this.doAddGroup(locationView, direction, groupView);\n\n\t\t// Restore focus if we had it\n\t\tif (restoreFocus) {\n\t\t\tcopiedGroupView.focus();\n\t\t}\n\n\t\treturn copiedGroupView;\n\t}\n\n\tmergeGroup(group: IEditorGroupView | GroupIdentifier, target: IEditorGroupView | GroupIdentifier, options?: IMergeGroupOptions): IEditorGroupView {\n\t\tconst sourceView = this.assertGroupView(group);\n\t\tconst targetView = this.assertGroupView(target);\n\n\t\t// Move/Copy editors over into target\n\t\tlet index = (options && typeof options.index === 'number') ? options.index : targetView.count;\n\t\tsourceView.editors.forEach(editor => {\n\t\t\tconst inactive = !sourceView.isActive(editor) || this._activeGroup !== sourceView;\n\t\t\tconst sticky = sourceView.isSticky(editor);\n\t\t\tconst editorOptions = { index: !sticky ? index : undefined /* do not set index to preserve sticky flag */, inactive, preserveFocus: inactive };\n\n\t\t\tif (options?.mode === MergeGroupMode.COPY_EDITORS) {\n\t\t\t\tsourceView.copyEditor(editor, targetView, editorOptions);\n\t\t\t} else {\n\t\t\t\tsourceView.moveEditor(editor, targetView, editorOptions);\n\t\t\t}\n\n\t\t\tindex++;\n\t\t});\n\n\t\t// Remove source if the view is now empty and not already removed\n\t\tif (sourceView.isEmpty && !sourceView.disposed /* could have been disposed already via workbench.editor.closeEmptyGroups setting */) {\n\t\t\tthis.removeGroup(sourceView);\n\t\t}\n\n\t\treturn targetView;\n\t}\n\n\tmergeAllGroups(target = this.activeGroup): IEditorGroupView {\n\t\tfor (const group of this.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (group === target) {\n\t\t\t\tcontinue; // keep target\n\t\t\t}\n\n\t\t\tthis.mergeGroup(group, target);\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tprivate assertGroupView(group: IEditorGroupView | GroupIdentifier): IEditorGroupView {\n\t\tlet groupView: IEditorGroupView | undefined;\n\t\tif (typeof group === 'number') {\n\t\t\tgroupView = this.getGroup(group);\n\t\t} else {\n\t\t\tgroupView = group;\n\t\t}\n\n\t\tif (!groupView) {\n\t\t\tthrow new Error('Invalid editor group provided!');\n\t\t}\n\n\t\treturn groupView;\n\t}\n\n\t//#endregion\n\n\t//#region IEditorDropService\n\n\tcreateEditorDropTarget(container: HTMLElement, delegate: IEditorDropTargetDelegate): IDisposable {\n\t\treturn this.instantiationService.createInstance(EditorDropTarget, this, container, delegate);\n\t}\n\n\t//#endregion\n\n\t//#region Part\n\n\t// TODO @sbatten @joao find something better to prevent editor taking over #79897\n\tget minimumWidth(): number { return Math.min(this.centeredLayoutWidget.minimumWidth, this.layoutService.getMaximumEditorDimensions().width); }\n\tget maximumWidth(): number { return this.centeredLayoutWidget.maximumWidth; }\n\tget minimumHeight(): number { return Math.min(this.centeredLayoutWidget.minimumHeight, this.layoutService.getMaximumEditorDimensions().height); }\n\tget maximumHeight(): number { return this.centeredLayoutWidget.maximumHeight; }\n\n\treadonly snap = true;\n\n\toverride get onDidChange(): Event<IViewSize | undefined> { return Event.any(this.centeredLayoutWidget.onDidChange, this.onDidSetGridWidget.event); }\n\treadonly priority: LayoutPriority = LayoutPriority.High;\n\n\tprivate get gridSeparatorBorder(): Color {\n\t\treturn this.theme.getColor(EDITOR_GROUP_BORDER) || this.theme.getColor(contrastBorder) || Color.transparent;\n\t}\n\n\toverride updateStyles(): void {\n\t\tconst container = assertIsDefined(this.container);\n\t\tcontainer.style.backgroundColor = this.getColor(editorBackground) || '';\n\n\t\tconst separatorBorderStyle = { separatorBorder: this.gridSeparatorBorder, background: this.theme.getColor(EDITOR_PANE_BACKGROUND) || Color.transparent };\n\t\tthis.gridWidget.style(separatorBorderStyle);\n\t\tthis.centeredLayoutWidget.styles(separatorBorderStyle);\n\t}\n\n\toverride createContentArea(parent: HTMLElement, options?: IEditorPartCreationOptions): HTMLElement {\n\n\t\t// Container\n\t\tthis.element = parent;\n\t\tthis.container = document.createElement('div');\n\t\tthis.container.classList.add('content');\n\t\tparent.appendChild(this.container);\n\n\t\t// Grid control\n\t\tthis.doCreateGridControl(options);\n\n\t\t// Centered layout widget\n\t\tthis.centeredLayoutWidget = this._register(new CenteredViewLayout(this.container, this.gridWidgetView, this.globalMemento[EditorPart.EDITOR_PART_CENTERED_VIEW_STORAGE_KEY]));\n\n\t\t// Drag & Drop support\n\t\tthis.setupDragAndDropSupport(parent, this.container);\n\n\t\t// Signal ready\n\t\tthis.whenReadyResolve?.();\n\n\t\t// Signal restored\n\t\tPromises.settled(this.groups.map(group => group.whenRestored)).finally(() => {\n\t\t\tthis.restored = true;\n\t\t\tthis.whenRestoredResolve?.();\n\t\t});\n\n\t\treturn this.container;\n\t}\n\n\tprivate setupDragAndDropSupport(parent: HTMLElement, container: HTMLElement): void {\n\n\t\t// Editor drop target\n\t\tthis._register(this.createEditorDropTarget(container, Object.create(null)));\n\n\t\t// No drop in the editor\n\t\tconst overlay = document.createElement('div');\n\t\toverlay.classList.add('drop-block-overlay');\n\t\tparent.appendChild(overlay);\n\n\t\t// Hide the block if a mouse down event occurs #99065\n\t\tthis._register(addDisposableGenericMouseDownListner(overlay, () => overlay.classList.remove('visible')));\n\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(this.element, {\n\t\t\tonDragStart: e => overlay.classList.add('visible'),\n\t\t\tonDragEnd: e => overlay.classList.remove('visible')\n\t\t}));\n\n\t\tlet panelOpenerTimeout: any;\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(overlay, {\n\t\t\tonDragOver: e => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tif (e.eventData.dataTransfer) {\n\t\t\t\t\te.eventData.dataTransfer.dropEffect = 'none';\n\t\t\t\t}\n\n\t\t\t\tif (!this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\t\t\tconst boundingRect = overlay.getBoundingClientRect();\n\n\t\t\t\t\tlet openPanel = false;\n\t\t\t\t\tconst proximity = 100;\n\t\t\t\t\tswitch (this.layoutService.getPanelPosition()) {\n\t\t\t\t\t\tcase Position.BOTTOM:\n\t\t\t\t\t\t\tif (e.eventData.clientY > boundingRect.bottom - proximity) {\n\t\t\t\t\t\t\t\topenPanel = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Position.LEFT:\n\t\t\t\t\t\t\tif (e.eventData.clientX < boundingRect.left + proximity) {\n\t\t\t\t\t\t\t\topenPanel = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Position.RIGHT:\n\t\t\t\t\t\t\tif (e.eventData.clientX > boundingRect.right - proximity) {\n\t\t\t\t\t\t\t\topenPanel = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!panelOpenerTimeout && openPanel) {\n\t\t\t\t\t\tpanelOpenerTimeout = setTimeout(() => this.layoutService.setPanelHidden(false), 200);\n\t\t\t\t\t} else if (panelOpenerTimeout && !openPanel) {\n\t\t\t\t\t\tclearTimeout(panelOpenerTimeout);\n\t\t\t\t\t\tpanelOpenerTimeout = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: () => {\n\t\t\t\tif (panelOpenerTimeout) {\n\t\t\t\t\tclearTimeout(panelOpenerTimeout);\n\t\t\t\t\tpanelOpenerTimeout = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragEnd: () => {\n\t\t\t\tif (panelOpenerTimeout) {\n\t\t\t\t\tclearTimeout(panelOpenerTimeout);\n\t\t\t\t\tpanelOpenerTimeout = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDrop: () => {\n\t\t\t\tif (panelOpenerTimeout) {\n\t\t\t\t\tclearTimeout(panelOpenerTimeout);\n\t\t\t\t\tpanelOpenerTimeout = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tcenterLayout(active: boolean): void {\n\t\tthis.centeredLayoutWidget.activate(active);\n\n\t\tthis._activeGroup.focus();\n\t}\n\n\tisLayoutCentered(): boolean {\n\t\tif (this.centeredLayoutWidget) {\n\t\t\treturn this.centeredLayoutWidget.isActive();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate doCreateGridControl(options?: IEditorPartCreationOptions): void {\n\n\t\t// Grid Widget (with previous UI state)\n\t\tlet restoreError = false;\n\t\tif (!options || options.restorePreviousState) {\n\t\t\trestoreError = !this.doCreateGridControlWithPreviousState();\n\t\t}\n\n\t\t// Grid Widget (no previous UI state or failed to restore)\n\t\tif (!this.gridWidget || restoreError) {\n\t\t\tconst initialGroup = this.doCreateGroupView();\n\t\t\tthis.doSetGridWidget(new SerializableGrid(initialGroup));\n\n\t\t\t// Ensure a group is active\n\t\t\tthis.doSetGroupActive(initialGroup);\n\t\t}\n\n\t\t// Update container\n\t\tthis.updateContainer();\n\n\t\t// Notify group index change we created the entire grid\n\t\tthis.notifyGroupIndexChange();\n\t}\n\n\tprivate doCreateGridControlWithPreviousState(): boolean {\n\t\tconst uiState: IEditorPartUIState = this.workspaceMemento[EditorPart.EDITOR_PART_UI_STATE_STORAGE_KEY];\n\t\tif (uiState?.serializedGrid) {\n\t\t\ttry {\n\n\t\t\t\t// MRU\n\t\t\t\tthis.mostRecentActiveGroups = uiState.mostRecentActiveGroups;\n\n\t\t\t\t// Grid Widget\n\t\t\t\tthis.doCreateGridControlWithState(uiState.serializedGrid, uiState.activeGroup);\n\n\t\t\t\t// Ensure last active group has focus\n\t\t\t\tthis._activeGroup.focus();\n\t\t\t} catch (error) {\n\n\t\t\t\t// Log error\n\t\t\t\tonUnexpectedError(new Error(`Error restoring editor grid widget: ${error} (with state: ${JSON.stringify(uiState)})`));\n\n\t\t\t\t// Clear any state we have from the failing restore\n\t\t\t\tthis.groupViews.forEach(group => group.dispose());\n\t\t\t\tthis.groupViews.clear();\n\t\t\t\tthis.mostRecentActiveGroups = [];\n\n\t\t\t\treturn false; // failure\n\t\t\t}\n\t\t}\n\n\t\treturn true; // success\n\t}\n\n\tprivate doCreateGridControlWithState(serializedGrid: ISerializedGrid, activeGroupId: GroupIdentifier, editorGroupViewsToReuse?: IEditorGroupView[]): void {\n\n\t\t// Determine group views to reuse if any\n\t\tlet reuseGroupViews: IEditorGroupView[];\n\t\tif (editorGroupViewsToReuse) {\n\t\t\treuseGroupViews = editorGroupViewsToReuse.slice(0); // do not modify original array\n\t\t} else {\n\t\t\treuseGroupViews = [];\n\t\t}\n\n\t\t// Create new\n\t\tconst groupViews: IEditorGroupView[] = [];\n\t\tconst gridWidget = SerializableGrid.deserialize(serializedGrid, {\n\t\t\tfromJSON: (serializedEditorGroup: ISerializedEditorGroupModel | null) => {\n\t\t\t\tlet groupView: IEditorGroupView;\n\t\t\t\tif (reuseGroupViews.length > 0) {\n\t\t\t\t\tgroupView = reuseGroupViews.shift()!;\n\t\t\t\t} else {\n\t\t\t\t\tgroupView = this.doCreateGroupView(serializedEditorGroup);\n\t\t\t\t}\n\n\t\t\t\tgroupViews.push(groupView);\n\n\t\t\t\tif (groupView.id === activeGroupId) {\n\t\t\t\t\tthis.doSetGroupActive(groupView);\n\t\t\t\t}\n\n\t\t\t\treturn groupView;\n\t\t\t}\n\t\t}, { styles: { separatorBorder: this.gridSeparatorBorder } });\n\n\t\t// If the active group was not found when restoring the grid\n\t\t// make sure to make at least one group active. We always need\n\t\t// an active group.\n\t\tif (!this._activeGroup) {\n\t\t\tthis.doSetGroupActive(groupViews[0]);\n\t\t}\n\n\t\t// Validate MRU group views matches grid widget state\n\t\tif (this.mostRecentActiveGroups.some(groupId => !this.getGroup(groupId))) {\n\t\t\tthis.mostRecentActiveGroups = groupViews.map(group => group.id);\n\t\t}\n\n\t\t// Set it\n\t\tthis.doSetGridWidget(gridWidget);\n\t}\n\n\tprivate doSetGridWidget(gridWidget: SerializableGrid<IEditorGroupView>): void {\n\t\tlet boundarySashes: IBoundarySashes = {};\n\n\t\tif (this.gridWidget) {\n\t\t\tboundarySashes = this.gridWidget.boundarySashes;\n\t\t\tthis.gridWidget.dispose();\n\t\t}\n\n\t\tthis.gridWidget = gridWidget;\n\t\tthis.gridWidget.boundarySashes = boundarySashes;\n\t\tthis.gridWidgetView.gridWidget = gridWidget;\n\n\t\tthis._onDidChangeSizeConstraints.input = gridWidget.onDidChange;\n\n\t\tthis.onDidSetGridWidget.fire(undefined);\n\t}\n\n\tprivate updateContainer(): void {\n\t\tconst container = assertIsDefined(this.container);\n\t\tcontainer.classList.toggle('empty', this.isEmpty);\n\t}\n\n\tprivate notifyGroupIndexChange(): void {\n\t\tthis.getGroups(GroupsOrder.GRID_APPEARANCE).forEach((group, index) => group.notifyIndexChanged(index));\n\t}\n\n\tprivate get isEmpty(): boolean {\n\t\treturn this.groupViews.size === 1 && this._activeGroup.isEmpty;\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis.gridWidget.boundarySashes = sashes;\n\t\tthis.centeredLayoutWidget.boundarySashes = sashes;\n\t}\n\n\toverride layout(width: number, height: number): void {\n\n\t\t// Layout contents\n\t\tconst contentAreaSize = super.layoutContents(width, height).contentSize;\n\n\t\t// Layout editor container\n\t\tthis.doLayout(Dimension.lift(contentAreaSize));\n\t}\n\n\tprivate doLayout(dimension: Dimension): void {\n\t\tthis._contentDimension = dimension;\n\n\t\t// Layout Grid\n\t\tthis.centeredLayoutWidget.layout(this._contentDimension.width, this._contentDimension.height);\n\n\t\t// Event\n\t\tthis._onDidLayout.fire(dimension);\n\t}\n\n\tprotected override saveState(): void {\n\n\t\t// Persist grid UI state\n\t\tif (this.gridWidget) {\n\t\t\tconst uiState: IEditorPartUIState = {\n\t\t\t\tserializedGrid: this.gridWidget.serialize(),\n\t\t\t\tactiveGroup: this._activeGroup.id,\n\t\t\t\tmostRecentActiveGroups: this.mostRecentActiveGroups\n\t\t\t};\n\n\t\t\tif (this.isEmpty) {\n\t\t\t\tdelete this.workspaceMemento[EditorPart.EDITOR_PART_UI_STATE_STORAGE_KEY];\n\t\t\t} else {\n\t\t\t\tthis.workspaceMemento[EditorPart.EDITOR_PART_UI_STATE_STORAGE_KEY] = uiState;\n\t\t\t}\n\t\t}\n\n\t\t// Persist centered view state\n\t\tif (this.centeredLayoutWidget) {\n\t\t\tconst centeredLayoutState = this.centeredLayoutWidget.state;\n\t\t\tif (this.centeredLayoutWidget.isDefault(centeredLayoutState)) {\n\t\t\t\tdelete this.globalMemento[EditorPart.EDITOR_PART_CENTERED_VIEW_STORAGE_KEY];\n\t\t\t} else {\n\t\t\t\tthis.globalMemento[EditorPart.EDITOR_PART_CENTERED_VIEW_STORAGE_KEY] = centeredLayoutState;\n\t\t\t}\n\t\t}\n\n\t\tsuper.saveState();\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.EDITOR_PART\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Forward to all groups\n\t\tthis.groupViews.forEach(group => group.dispose());\n\t\tthis.groupViews.clear();\n\n\t\t// Grid widget\n\t\tthis.gridWidget?.dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\t//#endregion\n}\n\nclass EditorDropService implements IEditorDropService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(@IEditorGroupsService private readonly editorPart: EditorPart) { }\n\n\tcreateEditorDropTarget(container: HTMLElement, delegate: IEditorDropTargetDelegate): IDisposable {\n\t\treturn this.editorPart.createEditorDropTarget(container, delegate);\n\t}\n}\n\nregisterSingleton(IEditorGroupsService, EditorPart);\nregisterSingleton(IEditorDropService, EditorDropService);\n"]}