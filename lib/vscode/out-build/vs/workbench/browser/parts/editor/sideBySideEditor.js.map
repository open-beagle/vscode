{"version":3,"file":"sideBySideEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/parts/editor/sideBySideEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension, $, clearNode } from 'vs/base/browser/dom';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorInput, EditorOptions, SideBySideEditorInput, IEditorControl, IEditorPane, IEditorOpenContext, EditorExtensions } from 'vs/workbench/common/editor';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { scrollbarShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { IEditorRegistry } from 'vs/workbench/browser/editor';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { SplitView, Sizing, Orientation } from 'vs/base/browser/ui/splitview/splitview';\nimport { Event, Relay, Emitter } from 'vs/base/common/event';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { assertIsDefined } from 'vs/base/common/types';\n\nexport class SideBySideEditor extends EditorPane {\n\n\tstatic readonly ID: string = 'workbench.editor.sidebysideEditor';\n\n\tprivate get minimumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\tprivate get minimumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\t// these setters need to exist because this extends from EditorPane\n\toverride set minimumWidth(value: number) { /* noop */ }\n\toverride set maximumWidth(value: number) { /* noop */ }\n\toverride set minimumHeight(value: number) { /* noop */ }\n\toverride set maximumHeight(value: number) { /* noop */ }\n\n\toverride get minimumWidth() { return this.minimumPrimaryWidth + this.minimumSecondaryWidth; }\n\toverride get maximumWidth() { return this.maximumPrimaryWidth + this.maximumSecondaryWidth; }\n\toverride get minimumHeight() { return this.minimumPrimaryHeight + this.minimumSecondaryHeight; }\n\toverride get maximumHeight() { return this.maximumPrimaryHeight + this.maximumSecondaryHeight; }\n\n\tprotected primaryEditorPane?: EditorPane;\n\tprotected secondaryEditorPane?: EditorPane;\n\n\tprivate primaryEditorContainer: HTMLElement | undefined;\n\tprivate secondaryEditorContainer: HTMLElement | undefined;\n\n\tprivate splitview: SplitView | undefined;\n\tprivate dimension: Dimension = new Dimension(0, 0);\n\n\tprivate onDidCreateEditors = this._register(new Emitter<{ width: number; height: number; } | undefined>());\n\n\tprivate _onDidChangeSizeConstraints = this._register(new Relay<{ width: number; height: number; } | undefined>());\n\toverride readonly onDidChangeSizeConstraints = Event.any(this.onDidCreateEditors.event, this._onDidChangeSizeConstraints.event);\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(SideBySideEditor.ID, telemetryService, themeService, storageService);\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tparent.classList.add('side-by-side-editor');\n\n\t\tconst splitview = this.splitview = this._register(new SplitView(parent, { orientation: Orientation.HORIZONTAL }));\n\t\tthis._register(this.splitview.onDidSashReset(() => splitview.distributeViewSizes()));\n\n\t\tthis.secondaryEditorContainer = $('.secondary-editor-container');\n\t\tthis.splitview.addView({\n\t\t\telement: this.secondaryEditorContainer,\n\t\t\tlayout: size => this.secondaryEditorPane?.layout(new Dimension(size, this.dimension.height)),\n\t\t\tminimumSize: 220,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, Sizing.Distribute);\n\n\t\tthis.primaryEditorContainer = $('.primary-editor-container');\n\t\tthis.splitview.addView({\n\t\t\telement: this.primaryEditorContainer,\n\t\t\tlayout: size => this.primaryEditorPane?.layout(new Dimension(size, this.dimension.height)),\n\t\t\tminimumSize: 220,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, Sizing.Distribute);\n\n\t\tthis.updateStyles();\n\t}\n\n\toverride async setInput(newInput: EditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tconst oldInput = this.input as SideBySideEditorInput;\n\t\tawait super.setInput(newInput, options, context, token);\n\n\t\treturn this.updateInput(oldInput, (newInput as SideBySideEditorInput), options, context, token);\n\t}\n\n\toverride setOptions(options: EditorOptions | undefined): void {\n\t\tif (this.primaryEditorPane) {\n\t\t\tthis.primaryEditorPane.setOptions(options);\n\t\t}\n\t}\n\n\tprotected override setEditorVisible(visible: boolean, group: IEditorGroup | undefined): void {\n\t\tif (this.primaryEditorPane) {\n\t\t\tthis.primaryEditorPane.setVisible(visible, group);\n\t\t}\n\n\t\tif (this.secondaryEditorPane) {\n\t\t\tthis.secondaryEditorPane.setVisible(visible, group);\n\t\t}\n\n\t\tsuper.setEditorVisible(visible, group);\n\t}\n\n\toverride clearInput(): void {\n\t\tif (this.primaryEditorPane) {\n\t\t\tthis.primaryEditorPane.clearInput();\n\t\t}\n\n\t\tif (this.secondaryEditorPane) {\n\t\t\tthis.secondaryEditorPane.clearInput();\n\t\t}\n\n\t\tthis.disposeEditors();\n\n\t\tsuper.clearInput();\n\t}\n\n\toverride focus(): void {\n\t\tif (this.primaryEditorPane) {\n\t\t\tthis.primaryEditorPane.focus();\n\t\t}\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tconst splitview = assertIsDefined(this.splitview);\n\t\tsplitview.layout(dimension.width);\n\t}\n\n\toverride getControl(): IEditorControl | undefined {\n\t\tif (this.primaryEditorPane) {\n\t\t\treturn this.primaryEditorPane.getControl();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetPrimaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tgetSecondaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.secondaryEditorPane;\n\t}\n\n\tprivate async updateInput(oldInput: SideBySideEditorInput, newInput: SideBySideEditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tif (!newInput.matches(oldInput)) {\n\t\t\tif (oldInput) {\n\t\t\t\tthis.disposeEditors();\n\t\t\t}\n\n\t\t\treturn this.setNewInput(newInput, options, context, token);\n\t\t}\n\n\t\tif (!this.secondaryEditorPane || !this.primaryEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([\n\t\t\tthis.secondaryEditorPane.setInput(newInput.secondary, undefined, context, token),\n\t\t\tthis.primaryEditorPane.setInput(newInput.primary, options, context, token)\n\t\t]);\n\t}\n\n\tprivate setNewInput(newInput: SideBySideEditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tconst secondaryEditor = this.doCreateEditor(newInput.secondary, assertIsDefined(this.secondaryEditorContainer));\n\t\tconst primaryEditor = this.doCreateEditor(newInput.primary, assertIsDefined(this.primaryEditorContainer));\n\n\t\treturn this.onEditorsCreated(secondaryEditor, primaryEditor, newInput.secondary, newInput.primary, options, context, token);\n\t}\n\n\tprivate doCreateEditor(editorInput: EditorInput, container: HTMLElement): EditorPane {\n\t\tconst descriptor = Registry.as<IEditorRegistry>(EditorExtensions.Editors).getEditor(editorInput);\n\t\tif (!descriptor) {\n\t\t\tthrow new Error('No descriptor for editor found');\n\t\t}\n\n\t\tconst editor = descriptor.instantiate(this.instantiationService);\n\t\teditor.create(container);\n\t\teditor.setVisible(this.isVisible(), this.group);\n\n\t\treturn editor;\n\t}\n\n\tprivate async onEditorsCreated(secondary: EditorPane, primary: EditorPane, secondaryInput: EditorInput, primaryInput: EditorInput, options: EditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tthis.secondaryEditorPane = secondary;\n\t\tthis.primaryEditorPane = primary;\n\n\t\tthis._onDidChangeSizeConstraints.input = Event.any(\n\t\t\tEvent.map(secondary.onDidChangeSizeConstraints, () => undefined),\n\t\t\tEvent.map(primary.onDidChangeSizeConstraints, () => undefined)\n\t\t);\n\n\t\tthis.onDidCreateEditors.fire(undefined);\n\n\t\tawait Promise.all([\n\t\t\tthis.secondaryEditorPane.setInput(secondaryInput, undefined, context, token),\n\t\t\tthis.primaryEditorPane.setInput(primaryInput, options, context, token)]\n\t\t);\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tthis.primaryEditorContainer.style.boxShadow = `-6px 0 5px -5px ${this.getColor(scrollbarShadow)}`;\n\t\t}\n\t}\n\n\tprivate disposeEditors(): void {\n\t\tif (this.secondaryEditorPane) {\n\t\t\tthis.secondaryEditorPane.dispose();\n\t\t\tthis.secondaryEditorPane = undefined;\n\t\t}\n\n\t\tif (this.primaryEditorPane) {\n\t\t\tthis.primaryEditorPane.dispose();\n\t\t\tthis.primaryEditorPane = undefined;\n\t\t}\n\n\t\tif (this.secondaryEditorContainer) {\n\t\t\tclearNode(this.secondaryEditorContainer);\n\t\t}\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tclearNode(this.primaryEditorContainer);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeEditors();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}