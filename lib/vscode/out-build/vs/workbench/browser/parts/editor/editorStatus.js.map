{"version":3,"sources":["vs/workbench/browser/parts/editor/editorStatus.ts"],"names":[],"mappings":"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","file":"editorStatus.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editorstatus';\nimport { localize } from 'vs/nls';\nimport { runAtThisOrScheduleAtNextAnimationFrame } from 'vs/base/browser/dom';\nimport { format, compare, splitLines } from 'vs/base/common/strings';\nimport { extname, basename, isEqual } from 'vs/base/common/resources';\nimport { areFunctions, withNullAsUndefined, withUndefinedAsNull } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Action, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from 'vs/base/common/actions';\nimport { Language } from 'vs/base/common/platform';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { IFileEditorInput, EditorResourceAccessor, SideBySideEditorInput, IEditorPane, IEditorInput, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { Disposable, MutableDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IEditorAction } from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence } from 'vs/editor/common/model';\nimport { IModelLanguageChangedEvent, IModelOptionsChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { TrimTrailingWhitespaceAction } from 'vs/editor/contrib/linesOperations/linesOperations';\nimport { IndentUsingSpaces, IndentUsingTabs, DetectIndentation, IndentationToSpacesAction, IndentationToTabsAction } from 'vs/editor/contrib/indentation/indentation';\nimport { BaseBinaryResourceEditor } from 'vs/workbench/browser/parts/editor/binaryEditor';\nimport { BinaryResourceDiffEditor } from 'vs/workbench/browser/parts/editor/binaryDiffEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IFileService, FILES_ASSOCIATIONS_CONFIG } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IModeService, ILanguageSelection } from 'vs/editor/common/services/modeService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TabFocus } from 'vs/editor/common/config/commonEditorConfig';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { EncodingMode, IEncodingSupport, IModeSupport, ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { SUPPORTED_ENCODINGS } from 'vs/workbench/services/textfile/common/encoding';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { ConfigurationChangedEvent, IEditorOptions, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { deepClone } from 'vs/base/common/objects';\nimport { ICodeEditor, getCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Schemas } from 'vs/base/common/network';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClassesForModeId } from 'vs/editor/common/services/getIconClasses';\nimport { Promises, timeout } from 'vs/base/common/async';\nimport { INotificationHandle, INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { Event } from 'vs/base/common/event';\nimport { IAccessibilityService, AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment, IStatusbarEntry } from 'vs/workbench/services/statusbar/common/statusbar';\nimport { IMarker, IMarkerService, MarkerSeverity, IMarkerData } from 'vs/platform/markers/common/markers';\nimport { STATUS_BAR_PROMINENT_ITEM_BACKGROUND, STATUS_BAR_PROMINENT_ITEM_FOREGROUND } from 'vs/workbench/common/theme';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nclass SideBySideEditorEncodingSupport implements IEncodingSupport {\n\tconstructor(private primary: IEncodingSupport, private secondary: IEncodingSupport) { }\n\n\tgetEncoding(): string | undefined {\n\t\treturn this.primary.getEncoding(); // always report from modified (right hand) side\n\t}\n\n\tasync setEncoding(encoding: string, mode: EncodingMode): Promise<void> {\n\t\tawait Promises.settled([this.primary, this.secondary].map(editor => editor.setEncoding(encoding, mode)));\n\t}\n}\n\nclass SideBySideEditorModeSupport implements IModeSupport {\n\tconstructor(private primary: IModeSupport, private secondary: IModeSupport) { }\n\n\tsetMode(mode: string): void {\n\t\t[this.primary, this.secondary].forEach(editor => editor.setMode(mode));\n\t}\n}\n\nfunction toEditorWithEncodingSupport(input: IEditorInput): IEncodingSupport | null {\n\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryEncodingSupport = toEditorWithEncodingSupport(input.primary);\n\t\tconst secondaryEncodingSupport = toEditorWithEncodingSupport(input.secondary);\n\n\t\tif (primaryEncodingSupport && secondaryEncodingSupport) {\n\t\t\treturn new SideBySideEditorEncodingSupport(primaryEncodingSupport, secondaryEncodingSupport);\n\t\t}\n\n\t\treturn primaryEncodingSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst encodingSupport = input as IFileEditorInput;\n\tif (areFunctions(encodingSupport.setEncoding, encodingSupport.getEncoding)) {\n\t\treturn encodingSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\nfunction toEditorWithModeSupport(input: IEditorInput): IModeSupport | null {\n\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryModeSupport = toEditorWithModeSupport(input.primary);\n\t\tconst secondaryModeSupport = toEditorWithModeSupport(input.secondary);\n\n\t\tif (primaryModeSupport && secondaryModeSupport) {\n\t\t\treturn new SideBySideEditorModeSupport(primaryModeSupport, secondaryModeSupport);\n\t\t}\n\n\t\treturn primaryModeSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst modeSupport = input as IFileEditorInput;\n\tif (typeof modeSupport.setMode === 'function') {\n\t\treturn modeSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\ninterface IEditorSelectionStatus {\n\tselections?: Selection[];\n\tcharactersSelected?: number;\n}\n\nclass StateChange {\n\tindentation: boolean = false;\n\tselectionStatus: boolean = false;\n\tmode: boolean = false;\n\tencoding: boolean = false;\n\tEOL: boolean = false;\n\ttabFocusMode: boolean = false;\n\tcolumnSelectionMode: boolean = false;\n\tscreenReaderMode: boolean = false;\n\tmetadata: boolean = false;\n\n\tcombine(other: StateChange) {\n\t\tthis.indentation = this.indentation || other.indentation;\n\t\tthis.selectionStatus = this.selectionStatus || other.selectionStatus;\n\t\tthis.mode = this.mode || other.mode;\n\t\tthis.encoding = this.encoding || other.encoding;\n\t\tthis.EOL = this.EOL || other.EOL;\n\t\tthis.tabFocusMode = this.tabFocusMode || other.tabFocusMode;\n\t\tthis.columnSelectionMode = this.columnSelectionMode || other.columnSelectionMode;\n\t\tthis.screenReaderMode = this.screenReaderMode || other.screenReaderMode;\n\t\tthis.metadata = this.metadata || other.metadata;\n\t}\n\n\thasChanges(): boolean {\n\t\treturn this.indentation\n\t\t\t|| this.selectionStatus\n\t\t\t|| this.mode\n\t\t\t|| this.encoding\n\t\t\t|| this.EOL\n\t\t\t|| this.tabFocusMode\n\t\t\t|| this.columnSelectionMode\n\t\t\t|| this.screenReaderMode\n\t\t\t|| this.metadata;\n\t}\n}\n\ntype StateDelta = (\n\t{ type: 'selectionStatus'; selectionStatus: string | undefined; }\n\t| { type: 'mode'; mode: string | undefined; }\n\t| { type: 'encoding'; encoding: string | undefined; }\n\t| { type: 'EOL'; EOL: string | undefined; }\n\t| { type: 'indentation'; indentation: string | undefined; }\n\t| { type: 'tabFocusMode'; tabFocusMode: boolean; }\n\t| { type: 'columnSelectionMode'; columnSelectionMode: boolean; }\n\t| { type: 'screenReaderMode'; screenReaderMode: boolean; }\n\t| { type: 'metadata'; metadata: string | undefined; }\n);\n\nclass State {\n\n\tprivate _selectionStatus: string | undefined;\n\tget selectionStatus(): string | undefined { return this._selectionStatus; }\n\n\tprivate _mode: string | undefined;\n\tget mode(): string | undefined { return this._mode; }\n\n\tprivate _encoding: string | undefined;\n\tget encoding(): string | undefined { return this._encoding; }\n\n\tprivate _EOL: string | undefined;\n\tget EOL(): string | undefined { return this._EOL; }\n\n\tprivate _indentation: string | undefined;\n\tget indentation(): string | undefined { return this._indentation; }\n\n\tprivate _tabFocusMode: boolean | undefined;\n\tget tabFocusMode(): boolean | undefined { return this._tabFocusMode; }\n\n\tprivate _columnSelectionMode: boolean | undefined;\n\tget columnSelectionMode(): boolean | undefined { return this._columnSelectionMode; }\n\n\tprivate _screenReaderMode: boolean | undefined;\n\tget screenReaderMode(): boolean | undefined { return this._screenReaderMode; }\n\n\tprivate _metadata: string | undefined;\n\tget metadata(): string | undefined { return this._metadata; }\n\n\tupdate(update: StateDelta): StateChange {\n\t\tconst change = new StateChange();\n\n\t\tif (update.type === 'selectionStatus') {\n\t\t\tif (this._selectionStatus !== update.selectionStatus) {\n\t\t\t\tthis._selectionStatus = update.selectionStatus;\n\t\t\t\tchange.selectionStatus = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'indentation') {\n\t\t\tif (this._indentation !== update.indentation) {\n\t\t\t\tthis._indentation = update.indentation;\n\t\t\t\tchange.indentation = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'mode') {\n\t\t\tif (this._mode !== update.mode) {\n\t\t\t\tthis._mode = update.mode;\n\t\t\t\tchange.mode = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'encoding') {\n\t\t\tif (this._encoding !== update.encoding) {\n\t\t\t\tthis._encoding = update.encoding;\n\t\t\t\tchange.encoding = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'EOL') {\n\t\t\tif (this._EOL !== update.EOL) {\n\t\t\t\tthis._EOL = update.EOL;\n\t\t\t\tchange.EOL = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'tabFocusMode') {\n\t\t\tif (this._tabFocusMode !== update.tabFocusMode) {\n\t\t\t\tthis._tabFocusMode = update.tabFocusMode;\n\t\t\t\tchange.tabFocusMode = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'columnSelectionMode') {\n\t\t\tif (this._columnSelectionMode !== update.columnSelectionMode) {\n\t\t\t\tthis._columnSelectionMode = update.columnSelectionMode;\n\t\t\t\tchange.columnSelectionMode = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'screenReaderMode') {\n\t\t\tif (this._screenReaderMode !== update.screenReaderMode) {\n\t\t\t\tthis._screenReaderMode = update.screenReaderMode;\n\t\t\t\tchange.screenReaderMode = true;\n\t\t\t}\n\t\t}\n\n\t\tif (update.type === 'metadata') {\n\t\t\tif (this._metadata !== update.metadata) {\n\t\t\t\tthis._metadata = update.metadata;\n\t\t\t\tchange.metadata = true;\n\t\t\t}\n\t\t}\n\n\t\treturn change;\n\t}\n}\n\nconst nlsSingleSelectionRange = localize('singleSelectionRange', \"Ln {0}, Col {1} ({2} selected)\");\nconst nlsSingleSelection = localize('singleSelection', \"Ln {0}, Col {1}\");\nconst nlsMultiSelectionRange = localize('multiSelectionRange', \"{0} selections ({1} characters selected)\");\nconst nlsMultiSelection = localize('multiSelection', \"{0} selections\");\nconst nlsEOLLF = localize('endOfLineLineFeed', \"LF\");\nconst nlsEOLCRLF = localize('endOfLineCarriageReturnLineFeed', \"CRLF\");\n\nexport class EditorStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly tabFocusModeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly columnSelectionModeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly screenRedearModeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly indentationElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly selectionElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly encodingElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly eolElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly modeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly metadataElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly currentProblemStatus: ShowCurrentMarkerInStatusbarContribution = this._register(this.instantiationService.createInstance(ShowCurrentMarkerInStatusbarContribution));\n\n\tprivate readonly state = new State();\n\tprivate readonly activeEditorListeners = this._register(new DisposableStore());\n\tprivate readonly delayedRender = this._register(new MutableDisposable());\n\tprivate toRender: StateChange | null = null;\n\tprivate screenReaderNotification: INotificationHandle | null = null;\n\tprivate promptedScreenReader: boolean = false;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.registerCommands();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateStatusBar()));\n\t\tthis._register(this.textFileService.untitled.onDidChangeEncoding(model => this.onResourceEncodingChange(model.resource)));\n\t\tthis._register(this.textFileService.files.onDidChangeEncoding(model => this.onResourceEncodingChange((model.resource))));\n\t\tthis._register(TabFocus.onDidChangeTabFocus(e => this.onTabFocusModeChange()));\n\t}\n\n\tprivate registerCommands(): void {\n\t\tCommandsRegistry.registerCommand({ id: 'showEditorScreenReaderNotification', handler: () => this.showScreenReaderNotification() });\n\t\tCommandsRegistry.registerCommand({ id: 'changeEditorIndentation', handler: () => this.showIndentationPicker() });\n\t}\n\n\tprivate showScreenReaderNotification(): void {\n\t\tif (!this.screenReaderNotification) {\n\t\t\tthis.screenReaderNotification = this.notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tlocalize('screenReaderDetectedExplanation.question', \"Are you using a screen reader to operate VS Code? (word wrap is disabled when using a screen reader)\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('screenReaderDetectedExplanation.answerYes', \"Yes\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis.configurationService.updateValue('editor.accessibilitySupport', 'on');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tlabel: localize('screenReaderDetectedExplanation.answerNo', \"No\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis.configurationService.updateValue('editor.accessibilitySupport', 'off');\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t{ sticky: true }\n\t\t\t);\n\n\t\t\tEvent.once(this.screenReaderNotification.onDidClose)(() => this.screenReaderNotification = null);\n\t\t}\n\t}\n\n\tprivate async showIndentationPicker(): Promise<unknown> {\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\treturn this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t}\n\n\t\tif (this.editorService.activeEditor?.isReadonly()) {\n\t\t\treturn this.quickInputService.pick([{ label: localize('noWritableCodeEditor', \"The active code editor is read-only.\") }]);\n\t\t}\n\n\t\tconst picks: QuickPickInput<IQuickPickItem & { run(): void; }>[] = [\n\t\t\tactiveTextEditorControl.getAction(IndentUsingSpaces.ID),\n\t\t\tactiveTextEditorControl.getAction(IndentUsingTabs.ID),\n\t\t\tactiveTextEditorControl.getAction(DetectIndentation.ID),\n\t\t\tactiveTextEditorControl.getAction(IndentationToSpacesAction.ID),\n\t\t\tactiveTextEditorControl.getAction(IndentationToTabsAction.ID),\n\t\t\tactiveTextEditorControl.getAction(TrimTrailingWhitespaceAction.ID)\n\t\t].map((a: IEditorAction) => {\n\t\t\treturn {\n\t\t\t\tid: a.id,\n\t\t\t\tlabel: a.label,\n\t\t\t\tdetail: (Language.isDefaultVariant() || a.label === a.alias) ? undefined : a.alias,\n\t\t\t\trun: () => {\n\t\t\t\t\tactiveTextEditorControl.focus();\n\t\t\t\t\ta.run();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tpicks.splice(3, 0, { type: 'separator', label: localize('indentConvert', \"convert file\") });\n\t\tpicks.unshift({ type: 'separator', label: localize('indentView', \"change view\") });\n\n\t\tconst action = await this.quickInputService.pick(picks, { placeHolder: localize('pickAction', \"Select Action\"), matchOnDetail: true });\n\t\treturn action?.run();\n\t}\n\n\tprivate updateTabFocusModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.tabFocusModeElement.value) {\n\t\t\t\tconst text = localize('tabFocusModeEnabled', \"Tab Moves Focus\");\n\t\t\t\tthis.tabFocusModeElement.value = this.statusbarService.addEntry({\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\ttooltip: localize('disableTabMode', \"Disable Accessibility Mode\"),\n\t\t\t\t\tcommand: 'editor.action.toggleTabFocusMode',\n\t\t\t\t\tbackgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n\t\t\t\t\tcolor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n\t\t\t\t}, 'status.editor.tabFocusMode', localize('status.editor.tabFocusMode', \"Accessibility Mode\"), StatusbarAlignment.RIGHT, 100.7);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.tabFocusModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateColumnSelectionModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.columnSelectionModeElement.value) {\n\t\t\t\tconst text = localize('columnSelectionModeEnabled', \"Column Selection\");\n\t\t\t\tthis.columnSelectionModeElement.value = this.statusbarService.addEntry({\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\ttooltip: localize('disableColumnSelectionMode', \"Disable Column Selection Mode\"),\n\t\t\t\t\tcommand: 'editor.action.toggleColumnSelection',\n\t\t\t\t\tbackgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n\t\t\t\t\tcolor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n\t\t\t\t}, 'status.editor.columnSelectionMode', localize('status.editor.columnSelectionMode', \"Column Selection Mode\"), StatusbarAlignment.RIGHT, 100.8);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.columnSelectionModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateScreenReaderModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.screenRedearModeElement.value) {\n\t\t\t\tconst text = localize('screenReaderDetected', \"Screen Reader Optimized\");\n\t\t\t\tthis.screenRedearModeElement.value = this.statusbarService.addEntry({\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\tcommand: 'showEditorScreenReaderNotification',\n\t\t\t\t\tbackgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n\t\t\t\t\tcolor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n\t\t\t\t}, 'status.editor.screenReaderMode', localize('status.editor.screenReaderMode', \"Screen Reader Mode\"), StatusbarAlignment.RIGHT, 100.6);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.screenRedearModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateSelectionElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.selectionElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('gotoLine', \"Go to Line/Column\"),\n\t\t\tcommand: 'workbench.action.gotoLine'\n\t\t};\n\n\t\tthis.updateElement(this.selectionElement, props, 'status.editor.selection', localize('status.editor.selection', \"Editor Selection\"), StatusbarAlignment.RIGHT, 100.5);\n\t}\n\n\tprivate updateIndentationElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.indentationElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectIndentation', \"Select Indentation\"),\n\t\t\tcommand: 'changeEditorIndentation'\n\t\t};\n\n\t\tthis.updateElement(this.indentationElement, props, 'status.editor.indentation', localize('status.editor.indentation', \"Editor Indentation\"), StatusbarAlignment.RIGHT, 100.4);\n\t}\n\n\tprivate updateEncodingElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.encodingElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectEncoding', \"Select Encoding\"),\n\t\t\tcommand: 'workbench.action.editor.changeEncoding'\n\t\t};\n\n\t\tthis.updateElement(this.encodingElement, props, 'status.editor.encoding', localize('status.editor.encoding', \"Editor Encoding\"), StatusbarAlignment.RIGHT, 100.3);\n\t}\n\n\tprivate updateEOLElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.eolElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectEOL', \"Select End of Line Sequence\"),\n\t\t\tcommand: 'workbench.action.editor.changeEOL'\n\t\t};\n\n\t\tthis.updateElement(this.eolElement, props, 'status.editor.eol', localize('status.editor.eol', \"Editor End of Line\"), StatusbarAlignment.RIGHT, 100.2);\n\t}\n\n\tprivate updateModeElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.modeElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectLanguageMode', \"Select Language Mode\"),\n\t\t\tcommand: 'workbench.action.editor.changeLanguageMode'\n\t\t};\n\n\t\tthis.updateElement(this.modeElement, props, 'status.editor.mode', localize('status.editor.mode', \"Editor Language\"), StatusbarAlignment.RIGHT, 100.1);\n\t}\n\n\tprivate updateMetadataElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.metadataElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('fileInfo', \"File Information\")\n\t\t};\n\n\t\tthis.updateElement(this.metadataElement, props, 'status.editor.info', localize('status.editor.info', \"File Information\"), StatusbarAlignment.RIGHT, 100);\n\t}\n\n\tprivate updateElement(element: MutableDisposable<IStatusbarEntryAccessor>, props: IStatusbarEntry, id: string, name: string, alignment: StatusbarAlignment, priority: number) {\n\t\tif (!element.value) {\n\t\t\telement.value = this.statusbarService.addEntry(props, id, name, alignment, priority);\n\t\t} else {\n\t\t\telement.value.update(props);\n\t\t}\n\t}\n\n\tprivate updateState(update: StateDelta): void {\n\t\tconst changed = this.state.update(update);\n\t\tif (!changed.hasChanges()) {\n\t\t\treturn; // Nothing really changed\n\t\t}\n\n\t\tif (!this.toRender) {\n\t\t\tthis.toRender = changed;\n\n\t\t\tthis.delayedRender.value = runAtThisOrScheduleAtNextAnimationFrame(() => {\n\t\t\t\tthis.delayedRender.clear();\n\n\t\t\t\tconst toRender = this.toRender;\n\t\t\t\tthis.toRender = null;\n\t\t\t\tif (toRender) {\n\t\t\t\t\tthis.doRenderNow(toRender);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.toRender.combine(changed);\n\t\t}\n\t}\n\n\tprivate doRenderNow(changed: StateChange): void {\n\t\tthis.updateTabFocusModeElement(!!this.state.tabFocusMode);\n\t\tthis.updateColumnSelectionModeElement(!!this.state.columnSelectionMode);\n\t\tthis.updateScreenReaderModeElement(!!this.state.screenReaderMode);\n\t\tthis.updateIndentationElement(this.state.indentation);\n\t\tthis.updateSelectionElement(this.state.selectionStatus);\n\t\tthis.updateEncodingElement(this.state.encoding);\n\t\tthis.updateEOLElement(this.state.EOL ? this.state.EOL === '\\r\\n' ? nlsEOLCRLF : nlsEOLLF : undefined);\n\t\tthis.updateModeElement(this.state.mode);\n\t\tthis.updateMetadataElement(this.state.metadata);\n\t}\n\n\tprivate getSelectionLabel(info: IEditorSelectionStatus): string | undefined {\n\t\tif (!info || !info.selections) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (info.selections.length === 1) {\n\t\t\tif (info.charactersSelected) {\n\t\t\t\treturn format(nlsSingleSelectionRange, info.selections[0].positionLineNumber, info.selections[0].positionColumn, info.charactersSelected);\n\t\t\t}\n\n\t\t\treturn format(nlsSingleSelection, info.selections[0].positionLineNumber, info.selections[0].positionColumn);\n\t\t}\n\n\t\tif (info.charactersSelected) {\n\t\t\treturn format(nlsMultiSelectionRange, info.selections.length, info.charactersSelected);\n\t\t}\n\n\t\tif (info.selections.length > 0) {\n\t\t\treturn format(nlsMultiSelection, info.selections.length);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate updateStatusBar(): void {\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tconst activeCodeEditor = activeEditorPane ? withNullAsUndefined(getCodeEditor(activeEditorPane.getControl())) : undefined;\n\n\t\t// Update all states\n\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\tthis.onScreenReaderModeChange(activeCodeEditor);\n\t\tthis.onSelectionChange(activeCodeEditor);\n\t\tthis.onModeChange(activeCodeEditor, activeInput);\n\t\tthis.onEOLChange(activeCodeEditor);\n\t\tthis.onEncodingChange(activeEditorPane, activeCodeEditor);\n\t\tthis.onIndentationChange(activeCodeEditor);\n\t\tthis.onMetadataChange(activeEditorPane);\n\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\n\t\t// Dispose old active editor listeners\n\t\tthis.activeEditorListeners.clear();\n\n\t\t// Attach new listeners to active editor\n\t\tif (activeCodeEditor) {\n\n\t\t\t// Hook Listener for Configuration changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeConfiguration((event: ConfigurationChangedEvent) => {\n\t\t\t\tif (event.hasChanged(EditorOption.columnSelection)) {\n\t\t\t\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\t\t\t}\n\t\t\t\tif (event.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\t\t\tthis.onScreenReaderModeChange(activeCodeEditor);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// Hook Listener for Selection changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeCursorPosition((event: ICursorPositionChangedEvent) => {\n\t\t\t\tthis.onSelectionChange(activeCodeEditor);\n\t\t\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\t\t\t}));\n\n\t\t\t// Hook Listener for mode changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeModelLanguage((event: IModelLanguageChangedEvent) => {\n\t\t\t\tthis.onModeChange(activeCodeEditor, activeInput);\n\t\t\t}));\n\n\t\t\t// Hook Listener for content changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeModelContent((e) => {\n\t\t\t\tthis.onEOLChange(activeCodeEditor);\n\t\t\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\n\t\t\t\tconst selections = activeCodeEditor.getSelections();\n\t\t\t\tif (selections) {\n\t\t\t\t\tfor (const change of e.changes) {\n\t\t\t\t\t\tif (selections.some(selection => Range.areIntersecting(selection, change.range))) {\n\t\t\t\t\t\t\tthis.onSelectionChange(activeCodeEditor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// Hook Listener for content options changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeModelOptions((event: IModelOptionsChangedEvent) => {\n\t\t\t\tthis.onIndentationChange(activeCodeEditor);\n\t\t\t}));\n\t\t}\n\n\t\t// Handle binary editors\n\t\telse if (activeEditorPane instanceof BaseBinaryResourceEditor || activeEditorPane instanceof BinaryResourceDiffEditor) {\n\t\t\tconst binaryEditors: BaseBinaryResourceEditor[] = [];\n\t\t\tif (activeEditorPane instanceof BinaryResourceDiffEditor) {\n\t\t\t\tconst primary = activeEditorPane.getPrimaryEditorPane();\n\t\t\t\tif (primary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(primary);\n\t\t\t\t}\n\n\t\t\t\tconst secondary = activeEditorPane.getSecondaryEditorPane();\n\t\t\t\tif (secondary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(secondary);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbinaryEditors.push(activeEditorPane);\n\t\t\t}\n\n\t\t\tbinaryEditors.forEach(editor => {\n\t\t\t\tthis.activeEditorListeners.add(editor.onDidChangeMetadata(metadata => {\n\t\t\t\t\tthis.onMetadataChange(activeEditorPane);\n\t\t\t\t}));\n\n\t\t\t\tthis.activeEditorListeners.add(editor.onDidOpenInPlace(() => {\n\t\t\t\t\tthis.updateStatusBar();\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onModeChange(editorWidget: ICodeEditor | undefined, editorInput: IEditorInput | undefined): void {\n\t\tlet info: StateDelta = { type: 'mode', mode: undefined };\n\n\t\t// We only support text based editors\n\t\tif (editorWidget && editorInput && toEditorWithModeSupport(editorInput)) {\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tconst modeId = textModel.getLanguageIdentifier().language;\n\t\t\t\tinfo.mode = withNullAsUndefined(this.modeService.getLanguageName(modeId));\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onIndentationChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst update: StateDelta = { type: 'indentation', indentation: undefined };\n\n\t\tif (editorWidget) {\n\t\t\tconst model = editorWidget.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst modelOpts = model.getOptions();\n\t\t\t\tupdate.indentation = (\n\t\t\t\t\tmodelOpts.insertSpaces\n\t\t\t\t\t\t? localize('spacesSize', \"Spaces: {0}\", modelOpts.indentSize)\n\t\t\t\t\t\t: localize({ key: 'tabSize', comment: ['Tab corresponds to the tab key'] }, \"Tab Size: {0}\", modelOpts.tabSize)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onMetadataChange(editor: IEditorPane | undefined): void {\n\t\tconst update: StateDelta = { type: 'metadata', metadata: undefined };\n\n\t\tif (editor instanceof BaseBinaryResourceEditor || editor instanceof BinaryResourceDiffEditor) {\n\t\t\tupdate.metadata = editor.getMetadata();\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onColumnSelectionModeChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: StateDelta = { type: 'columnSelectionMode', columnSelectionMode: false };\n\n\t\tif (editorWidget?.getOption(EditorOption.columnSelection)) {\n\t\t\tinfo.columnSelectionMode = true;\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onScreenReaderModeChange(editorWidget: ICodeEditor | undefined): void {\n\t\tlet screenReaderMode = false;\n\n\t\t// We only support text based editors\n\t\tif (editorWidget) {\n\t\t\tconst screenReaderDetected = this.accessibilityService.isScreenReaderOptimized();\n\t\t\tif (screenReaderDetected) {\n\t\t\t\tconst screenReaderConfiguration = this.configurationService.getValue<IEditorOptions>('editor')?.accessibilitySupport;\n\t\t\t\tif (screenReaderConfiguration === 'auto') {\n\t\t\t\t\tif (!this.promptedScreenReader) {\n\t\t\t\t\t\tthis.promptedScreenReader = true;\n\t\t\t\t\t\tsetTimeout(() => this.showScreenReaderNotification(), 100);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscreenReaderMode = (editorWidget.getOption(EditorOption.accessibilitySupport) === AccessibilitySupport.Enabled);\n\t\t}\n\n\t\tif (screenReaderMode === false && this.screenReaderNotification) {\n\t\t\tthis.screenReaderNotification.close();\n\t\t}\n\n\t\tthis.updateState({ type: 'screenReaderMode', screenReaderMode: screenReaderMode });\n\t}\n\n\tprivate onSelectionChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: IEditorSelectionStatus = Object.create(null);\n\n\t\t// We only support text based editors\n\t\tif (editorWidget) {\n\n\t\t\t// Compute selection(s)\n\t\t\tinfo.selections = editorWidget.getSelections() || [];\n\n\t\t\t// Compute selection length\n\t\t\tinfo.charactersSelected = 0;\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tinfo.selections.forEach(selection => {\n\t\t\t\t\tif (typeof info.charactersSelected !== 'number') {\n\t\t\t\t\t\tinfo.charactersSelected = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tinfo.charactersSelected += textModel.getCharacterCountInRange(selection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Compute the visible column for one selection. This will properly handle tabs and their configured widths\n\t\t\tif (info.selections.length === 1) {\n\t\t\t\tconst editorPosition = editorWidget.getPosition();\n\n\t\t\t\tlet selectionClone = new Selection(\n\t\t\t\t\tinfo.selections[0].selectionStartLineNumber,\n\t\t\t\t\tinfo.selections[0].selectionStartColumn,\n\t\t\t\t\tinfo.selections[0].positionLineNumber,\n\t\t\t\t\teditorPosition ? editorWidget.getStatusbarColumn(editorPosition) : info.selections[0].positionColumn\n\t\t\t\t);\n\n\t\t\t\tinfo.selections[0] = selectionClone;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState({ type: 'selectionStatus', selectionStatus: this.getSelectionLabel(info) });\n\t}\n\n\tprivate onEOLChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: StateDelta = { type: 'EOL', EOL: undefined };\n\n\t\tif (editorWidget && !editorWidget.getOption(EditorOption.readOnly)) {\n\t\t\tconst codeEditorModel = editorWidget.getModel();\n\t\t\tif (codeEditorModel) {\n\t\t\t\tinfo.EOL = codeEditorModel.getEOL();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onEncodingChange(editor: IEditorPane | undefined, editorWidget: ICodeEditor | undefined): void {\n\t\tif (editor && !this.isActiveEditor(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst info: StateDelta = { type: 'encoding', encoding: undefined };\n\n\t\t// We only support text based editors that have a model associated\n\t\t// This ensures we do not show the encoding picker while an editor\n\t\t// is still loading.\n\t\tif (editor && editorWidget?.hasModel()) {\n\t\t\tconst encodingSupport: IEncodingSupport | null = editor.input ? toEditorWithEncodingSupport(editor.input) : null;\n\t\t\tif (encodingSupport) {\n\t\t\t\tconst rawEncoding = encodingSupport.getEncoding();\n\t\t\t\tconst encodingInfo = typeof rawEncoding === 'string' ? SUPPORTED_ENCODINGS[rawEncoding] : undefined;\n\t\t\t\tif (encodingInfo) {\n\t\t\t\t\tinfo.encoding = encodingInfo.labelShort; // if we have a label, take it from there\n\t\t\t\t} else {\n\t\t\t\t\tinfo.encoding = rawEncoding; // otherwise use it raw\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onResourceEncodingChange(resource: URI): void {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst activeResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\tif (activeResource && isEqual(activeResource, resource)) {\n\t\t\t\tconst activeCodeEditor = withNullAsUndefined(getCodeEditor(activeEditorPane.getControl()));\n\n\t\t\t\treturn this.onEncodingChange(activeEditorPane, activeCodeEditor); // only update if the encoding changed for the active resource\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTabFocusModeChange(): void {\n\t\tconst info: StateDelta = { type: 'tabFocusMode', tabFocusMode: TabFocus.getTabFocusMode() };\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate isActiveEditor(control: IEditorPane): boolean {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\n\t\treturn !!activeEditorPane && activeEditorPane === control;\n\t}\n}\n\nclass ShowCurrentMarkerInStatusbarContribution extends Disposable {\n\n\tprivate readonly statusBarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor>;\n\tprivate editor: ICodeEditor | undefined = undefined;\n\tprivate markers: IMarker[] = [];\n\tprivate currentMarker: IMarker | null = null;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.statusBarEntryAccessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\t\tthis._register(markerService.onMarkerChanged(changedResources => this.onMarkerChanged(changedResources)));\n\t\tthis._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('problems.showCurrentInStatus'))(() => this.updateStatus()));\n\t}\n\n\tupdate(editor: ICodeEditor | undefined): void {\n\t\tthis.editor = editor;\n\t\tthis.updateMarkers();\n\t\tthis.updateStatus();\n\t}\n\n\tprivate updateStatus(): void {\n\t\tconst previousMarker = this.currentMarker;\n\t\tthis.currentMarker = this.getMarker();\n\t\tif (this.hasToUpdateStatus(previousMarker, this.currentMarker)) {\n\t\t\tif (this.currentMarker) {\n\t\t\t\tconst line = splitLines(this.currentMarker.message)[0];\n\t\t\t\tconst text = `${this.getType(this.currentMarker)} ${line}`;\n\t\t\t\tif (!this.statusBarEntryAccessor.value) {\n\t\t\t\t\tthis.statusBarEntryAccessor.value = this.statusbarService.addEntry({ text: '', ariaLabel: '' }, 'statusbar.currentProblem', localize('currentProblem', \"Current Problem\"), StatusbarAlignment.LEFT);\n\t\t\t\t}\n\t\t\t\tthis.statusBarEntryAccessor.value.update({ text, ariaLabel: text });\n\t\t\t} else {\n\t\t\t\tthis.statusBarEntryAccessor.clear();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasToUpdateStatus(previousMarker: IMarker | null, currentMarker: IMarker | null): boolean {\n\t\tif (!currentMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!previousMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn IMarkerData.makeKey(previousMarker) !== IMarkerData.makeKey(currentMarker);\n\t}\n\n\tprivate getType(marker: IMarker): string {\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Error: return '$(error)';\n\t\t\tcase MarkerSeverity.Warning: return '$(warning)';\n\t\t\tcase MarkerSeverity.Info: return '$(info)';\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate getMarker(): IMarker | null {\n\t\tif (!this.configurationService.getValue<boolean>('problems.showCurrentInStatus')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.editor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst position = this.editor.getPosition();\n\t\tif (!position) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.markers.find(marker => Range.containsPosition(marker, position)) || null;\n\t}\n\n\tprivate onMarkerChanged(changedResources: readonly URI[]): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model && !changedResources.some(r => isEqual(model.uri, r))) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateMarkers();\n\t}\n\n\tprivate updateMarkers(): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model) {\n\t\t\tthis.markers = this.markerService.read({\n\t\t\t\tresource: model.uri,\n\t\t\t\tseverities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\n\t\t\t});\n\t\t\tthis.markers.sort(compareMarker);\n\t\t} else {\n\t\t\tthis.markers = [];\n\t\t}\n\n\t\tthis.updateStatus();\n\t}\n}\n\nfunction compareMarker(a: IMarker, b: IMarker): number {\n\tlet res = compare(a.resource.toString(), b.resource.toString());\n\tif (res === 0) {\n\t\tres = MarkerSeverity.compare(a.severity, b.severity);\n\t}\n\n\tif (res === 0) {\n\t\tres = Range.compareRangesUsingStarts(a, b);\n\t}\n\n\treturn res;\n}\n\nexport class ShowLanguageExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.showLanguageExtensions';\n\n\tconstructor(\n\t\tprivate fileExtension: string,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService\n\t) {\n\t\tsuper(ShowLanguageExtensionsAction.ID, localize('showLanguageExtensions', \"Search Marketplace Extensions for '{0}'...\", fileExtension));\n\n\t\tthis.enabled = galleryService.isEnabled();\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.commandService.executeCommand('workbench.extensions.action.showExtensionsForLanguage', this.fileExtension);\n\t}\n}\n\nexport class ChangeModeAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.editor.changeLanguageMode';\n\tstatic readonly LABEL = localize('changeMode', \"Change Language Mode\");\n\n\tconstructor(\n\t\tactionId: string,\n\t\tactionLabel: string,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper(actionId, actionLabel);\n\t}\n\n\toverride async run(event: unknown, data?: ITelemetryData): Promise<void> {\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = activeTextEditorControl.getModel();\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\n\t\tlet hasLanguageSupport = !!resource;\n\t\tif (resource?.scheme === Schemas.untitled && !this.textFileService.untitled.get(resource)?.hasAssociatedFilePath) {\n\t\t\thasLanguageSupport = false; // no configuration for untitled resources (e.g. \"Untitled-1\")\n\t\t}\n\n\t\t// Compute mode\n\t\tlet currentLanguageId: string | undefined;\n\t\tlet currentModeId: string | undefined;\n\t\tif (textModel) {\n\t\t\tcurrentModeId = textModel.getLanguageIdentifier().language;\n\t\t\tcurrentLanguageId = withNullAsUndefined(this.modeService.getLanguageName(currentModeId));\n\t\t}\n\n\t\t// All languages are valid picks\n\t\tconst languages = this.modeService.getRegisteredLanguageNames();\n\t\tconst picks: QuickPickInput[] = languages.sort().map(lang => {\n\t\t\tconst modeId = this.modeService.getModeIdForLanguageName(lang.toLowerCase()) || 'unknown';\n\t\t\tconst extensions = this.modeService.getExtensions(lang).join(' ');\n\t\t\tlet description: string;\n\t\t\tif (currentLanguageId === lang) {\n\t\t\t\tdescription = localize('languageDescription', \"({0}) - Configured Language\", modeId);\n\t\t\t} else {\n\t\t\t\tdescription = localize('languageDescriptionConfigured', \"({0})\", modeId);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlabel: lang,\n\t\t\t\tmeta: extensions,\n\t\t\t\ticonClasses: getIconClassesForModeId(modeId),\n\t\t\t\tdescription\n\t\t\t};\n\t\t});\n\n\t\tif (hasLanguageSupport) {\n\t\t\tpicks.unshift({ type: 'separator', label: localize('languagesPicks', \"languages (identifier)\") });\n\t\t}\n\n\t\t// Offer action to configure via settings\n\t\tlet configureModeAssociations: IQuickPickItem | undefined;\n\t\tlet configureModeSettings: IQuickPickItem | undefined;\n\t\tlet galleryAction: Action | undefined;\n\t\tif (hasLanguageSupport && resource) {\n\t\t\tconst ext = extname(resource) || basename(resource);\n\n\t\t\tgalleryAction = this.instantiationService.createInstance(ShowLanguageExtensionsAction, ext);\n\t\t\tif (galleryAction.enabled) {\n\t\t\t\tpicks.unshift(galleryAction);\n\t\t\t}\n\n\t\t\tconfigureModeSettings = { label: localize('configureModeSettings', \"Configure '{0}' language based settings...\", currentLanguageId) };\n\t\t\tpicks.unshift(configureModeSettings);\n\t\t\tconfigureModeAssociations = { label: localize('configureAssociationsExt', \"Configure File Association for '{0}'...\", ext) };\n\t\t\tpicks.unshift(configureModeAssociations);\n\t\t}\n\n\t\t// Offer to \"Auto Detect\"\n\t\tconst autoDetectMode: IQuickPickItem = {\n\t\t\tlabel: localize('autoDetect', \"Auto Detect\")\n\t\t};\n\n\t\tif (hasLanguageSupport) {\n\t\t\tpicks.unshift(autoDetectMode);\n\t\t}\n\n\t\tconst pick = await this.quickInputService.pick(picks, { placeHolder: localize('pickLanguage', \"Select Language Mode\"), matchOnDescription: true });\n\t\tif (!pick) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick === galleryAction) {\n\t\t\tgalleryAction.run();\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to permanently configure associations, return right after\n\t\tif (pick === configureModeAssociations) {\n\t\t\tif (resource) {\n\t\t\t\tthis.configureFileAssociation(resource);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to configure settings for current language\n\t\tif (pick === configureModeSettings) {\n\t\t\tthis.preferencesService.openGlobalSettings(true, { revealSetting: { key: `[${withUndefinedAsNull(currentModeId)}]`, edit: true } });\n\t\t\treturn;\n\t\t}\n\n\t\t// Change mode for active editor\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\tconst modeSupport = toEditorWithModeSupport(activeEditor);\n\t\t\tif (modeSupport) {\n\n\t\t\t\t// Find mode\n\t\t\t\tlet languageSelection: ILanguageSelection | undefined;\n\t\t\t\tif (pick === autoDetectMode) {\n\t\t\t\t\tif (textModel) {\n\t\t\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\tlanguageSelection = this.modeService.createByFilepathOrFirstLine(resource, textModel.getLineContent(1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlanguageSelection = this.modeService.createByLanguageName(pick.label);\n\t\t\t\t}\n\n\t\t\t\t// Change mode\n\t\t\t\tif (typeof languageSelection !== 'undefined') {\n\t\t\t\t\tmodeSupport.setMode(languageSelection.languageIdentifier.language);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tactiveTextEditorControl.focus();\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: ChangeModeAction.ID,\n\t\t\t\tfrom: data?.from || 'quick open'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate configureFileAssociation(resource: URI): void {\n\t\tconst extension = extname(resource);\n\t\tconst base = basename(resource);\n\t\tconst currentAssociation = this.modeService.getModeIdByFilepathOrFirstLine(URI.file(base));\n\n\t\tconst languages = this.modeService.getRegisteredLanguageNames();\n\t\tconst picks: IQuickPickItem[] = languages.sort().map((lang, index) => {\n\t\t\tconst id = withNullAsUndefined(this.modeService.getModeIdForLanguageName(lang.toLowerCase())) || 'unknown';\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tlabel: lang,\n\t\t\t\ticonClasses: getIconClassesForModeId(id),\n\t\t\t\tdescription: (id === currentAssociation) ? localize('currentAssociation', \"Current Association\") : undefined\n\t\t\t};\n\t\t});\n\n\t\tsetTimeout(async () => {\n\t\t\tconst language = await this.quickInputService.pick(picks, { placeHolder: localize('pickLanguageToConfigure', \"Select Language Mode to Associate with '{0}'\", extension || base) });\n\t\t\tif (language) {\n\t\t\t\tconst fileAssociationsConfig = this.configurationService.inspect<{}>(FILES_ASSOCIATIONS_CONFIG);\n\n\t\t\t\tlet associationKey: string;\n\t\t\t\tif (extension && base[0] !== '.') {\n\t\t\t\t\tassociationKey = `*${extension}`; // only use \"*.ext\" if the file path is in the form of <name>.<ext>\n\t\t\t\t} else {\n\t\t\t\t\tassociationKey = base; // otherwise use the basename (e.g. .gitignore, Dockerfile)\n\t\t\t\t}\n\n\t\t\t\t// If the association is already being made in the workspace, make sure to target workspace settings\n\t\t\t\tlet target = ConfigurationTarget.USER;\n\t\t\t\tif (fileAssociationsConfig.workspaceValue && !!(fileAssociationsConfig.workspaceValue as any)[associationKey]) {\n\t\t\t\t\ttarget = ConfigurationTarget.WORKSPACE;\n\t\t\t\t}\n\n\t\t\t\t// Make sure to write into the value of the target and not the merged value from USER and WORKSPACE config\n\t\t\t\tconst currentAssociations = deepClone((target === ConfigurationTarget.WORKSPACE) ? fileAssociationsConfig.workspaceValue : fileAssociationsConfig.userValue) || Object.create(null);\n\t\t\t\tcurrentAssociations[associationKey] = language.id;\n\n\t\t\t\tthis.configurationService.updateValue(FILES_ASSOCIATIONS_CONFIG, currentAssociations, target);\n\t\t\t}\n\t\t}, 50 /* quick input is sensitive to being opened so soon after another */);\n\t}\n}\n\nexport interface IChangeEOLEntry extends IQuickPickItem {\n\teol: EndOfLineSequence;\n}\n\nexport class ChangeEOLAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.editor.changeEOL';\n\tstatic readonly LABEL = localize('changeEndOfLine', \"Change End of Line Sequence\");\n\n\tconstructor(\n\t\tactionId: string,\n\t\tactionLabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService\n\t) {\n\t\tsuper(actionId, actionLabel);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.editorService.activeEditor?.isReadonly()) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noWritableCodeEditor', \"The active code editor is read-only.\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tlet textModel = activeTextEditorControl.getModel();\n\n\t\tconst EOLOptions: IChangeEOLEntry[] = [\n\t\t\t{ label: nlsEOLLF, eol: EndOfLineSequence.LF },\n\t\t\t{ label: nlsEOLCRLF, eol: EndOfLineSequence.CRLF },\n\t\t];\n\n\t\tconst selectedIndex = (textModel?.getEOL() === '\\n') ? 0 : 1;\n\n\t\tconst eol = await this.quickInputService.pick(EOLOptions, { placeHolder: localize('pickEndOfLine', \"Select End of Line Sequence\"), activeItem: EOLOptions[selectedIndex] });\n\t\tif (eol) {\n\t\t\tconst activeCodeEditor = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\t\tif (activeCodeEditor?.hasModel() && !this.editorService.activeEditor?.isReadonly()) {\n\t\t\t\ttextModel = activeCodeEditor.getModel();\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t\ttextModel.pushEOL(eol.eol);\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t}\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n\nexport class ChangeEncodingAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.editor.changeEncoding';\n\tstatic readonly LABEL = localize('changeEncoding', \"Change File Encoding\");\n\n\tconstructor(\n\t\tactionId: string,\n\t\tactionLabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ITextResourceConfigurationService private readonly textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService\n\t) {\n\t\tsuper(actionId, actionLabel);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst encodingSupport: IEncodingSupport | null = toEditorWithEncodingSupport(activeEditorPane.input);\n\t\tif (!encodingSupport) {\n\t\t\tawait this.quickInputService.pick([{ label: localize('noFileEditor', \"No file active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst saveWithEncodingPick: IQuickPickItem = { label: localize('saveWithEncoding', \"Save with Encoding\") };\n\t\tconst reopenWithEncodingPick: IQuickPickItem = { label: localize('reopenWithEncoding', \"Reopen with Encoding\") };\n\n\t\tif (!Language.isDefaultVariant()) {\n\t\t\tconst saveWithEncodingAlias = 'Save with Encoding';\n\t\t\tif (saveWithEncodingAlias !== saveWithEncodingPick.label) {\n\t\t\t\tsaveWithEncodingPick.detail = saveWithEncodingAlias;\n\t\t\t}\n\n\t\t\tconst reopenWithEncodingAlias = 'Reopen with Encoding';\n\t\t\tif (reopenWithEncodingAlias !== reopenWithEncodingPick.label) {\n\t\t\t\treopenWithEncodingPick.detail = reopenWithEncodingAlias;\n\t\t\t}\n\t\t}\n\n\t\tlet action: IQuickPickItem | undefined;\n\t\tif (encodingSupport instanceof UntitledTextEditorInput) {\n\t\t\taction = saveWithEncodingPick;\n\t\t} else if (activeEditorPane.input.isReadonly()) {\n\t\t\taction = reopenWithEncodingPick;\n\t\t} else {\n\t\t\taction = await this.quickInputService.pick([reopenWithEncodingPick, saveWithEncodingPick], { placeHolder: localize('pickAction', \"Select Action\"), matchOnDetail: true });\n\t\t}\n\n\t\tif (!action) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait timeout(50); // quick input is sensitive to being opened so soon after another\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (!resource || (!this.fileService.canHandleResource(resource) && resource.scheme !== Schemas.untitled)) {\n\t\t\treturn; // encoding detection only possible for resources the file service can handle or that are untitled\n\t\t}\n\n\t\tlet guessedEncoding: string | undefined = undefined;\n\t\tif (this.fileService.canHandleResource(resource)) {\n\t\t\tconst content = await this.textFileService.readStream(resource, { autoGuessEncoding: true });\n\t\t\tguessedEncoding = content.encoding;\n\t\t}\n\n\t\tconst isReopenWithEncoding = (action === reopenWithEncodingPick);\n\n\t\tconst configuredEncoding = this.textResourceConfigurationService.getValue(withNullAsUndefined(resource), 'files.encoding');\n\n\t\tlet directMatchIndex: number | undefined;\n\t\tlet aliasMatchIndex: number | undefined;\n\n\t\t// All encodings are valid picks\n\t\tconst picks: QuickPickInput[] = Object.keys(SUPPORTED_ENCODINGS)\n\t\t\t.sort((k1, k2) => {\n\t\t\t\tif (k1 === configuredEncoding) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (k2 === configuredEncoding) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n\t\t\t})\n\t\t\t.filter(k => {\n\t\t\t\tif (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n\t\t\t\t\treturn false; // do not show encoding if it is the guessed encoding that does not match the configured\n\t\t\t\t}\n\n\t\t\t\treturn !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly; // hide those that can only be used for encoding if we are about to decode\n\t\t\t})\n\t\t\t.map((key, index) => {\n\t\t\t\tif (key === encodingSupport.getEncoding()) {\n\t\t\t\t\tdirectMatchIndex = index;\n\t\t\t\t} else if (SUPPORTED_ENCODINGS[key].alias === encodingSupport.getEncoding()) {\n\t\t\t\t\taliasMatchIndex = index;\n\t\t\t\t}\n\n\t\t\t\treturn { id: key, label: SUPPORTED_ENCODINGS[key].labelLong, description: key };\n\t\t\t});\n\n\t\tconst items = picks.slice() as IQuickPickItem[];\n\n\t\t// If we have a guessed encoding, show it first unless it matches the configured encoding\n\t\tif (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n\t\t\tpicks.unshift({ type: 'separator' });\n\t\t\tpicks.unshift({ id: guessedEncoding, label: SUPPORTED_ENCODINGS[guessedEncoding].labelLong, description: localize('guessedEncoding', \"Guessed from content\") });\n\t\t}\n\n\t\tconst encoding = await this.quickInputService.pick(picks, {\n\t\t\tplaceHolder: isReopenWithEncoding ? localize('pickEncodingForReopen', \"Select File Encoding to Reopen File\") : localize('pickEncodingForSave', \"Select File Encoding to Save with\"),\n\t\t\tactiveItem: items[typeof directMatchIndex === 'number' ? directMatchIndex : typeof aliasMatchIndex === 'number' ? aliasMatchIndex : -1]\n\t\t});\n\n\t\tif (!encoding) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.editorService.activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEncodingSupport = toEditorWithEncodingSupport(this.editorService.activeEditorPane.input);\n\t\tif (typeof encoding.id !== 'undefined' && activeEncodingSupport && activeEncodingSupport.getEncoding() !== encoding.id) {\n\t\t\tawait activeEncodingSupport.setEncoding(encoding.id, isReopenWithEncoding ? EncodingMode.Decode : EncodingMode.Encode); // Set new encoding\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n"]}