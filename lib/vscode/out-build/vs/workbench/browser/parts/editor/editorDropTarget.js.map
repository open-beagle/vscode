{"version":3,"sources":["vs/workbench/browser/parts/editor/editorDropTarget.ts"],"names":[],"mappings":"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","file":"editorDropTarget.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editordroptarget';\nimport { LocalSelectionTransfer, DraggedEditorIdentifier, ResourcesDropHandler, DraggedEditorGroupIdentifier, DragAndDropObserver, containsDragType } from 'vs/workbench/browser/dnd';\nimport { addDisposableListener, EventType, EventHelper, isAncestor } from 'vs/base/browser/dom';\nimport { IEditorGroupsAccessor, IEditorGroupView, getActiveTextEditorOptions } from 'vs/workbench/browser/parts/editor/editor';\nimport { EDITOR_DRAG_AND_DROP_BACKGROUND } from 'vs/workbench/common/theme';\nimport { IThemeService, Themable } from 'vs/platform/theme/common/themeService';\nimport { activeContrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IEditorIdentifier, EditorInput, EditorOptions } from 'vs/workbench/common/editor';\nimport { isMacintosh, isWeb } from 'vs/base/common/platform';\nimport { GroupDirection, IEditorGroupsService, MergeGroupMode } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { DataTransfers } from 'vs/base/browser/dnd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { assertIsDefined, assertAllDefined } from 'vs/base/common/types';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { localize } from 'vs/nls';\nimport { ByteSize } from 'vs/platform/files/common/files';\n\ninterface IDropOperation {\n\tsplitDirection?: GroupDirection;\n}\n\nclass DropOverlay extends Themable {\n\n\tprivate static readonly OVERLAY_ID = 'monaco-workbench-editor-drop-overlay';\n\n\tprivate static readonly MAX_FILE_UPLOAD_SIZE = 100 * ByteSize.MB;\n\n\tprivate container: HTMLElement | undefined;\n\tprivate overlay: HTMLElement | undefined;\n\n\tprivate currentDropOperation: IDropOperation | undefined;\n\tprivate _disposed: boolean | undefined;\n\n\tprivate cleanupOverlayScheduler: RunOnceScheduler;\n\n\tprivate readonly editorTransfer = LocalSelectionTransfer.getInstance<DraggedEditorIdentifier>();\n\tprivate readonly groupTransfer = LocalSelectionTransfer.getInstance<DraggedEditorGroupIdentifier>();\n\n\tconstructor(\n\t\tprivate accessor: IEditorGroupsAccessor,\n\t\tprivate groupView: IEditorGroupView,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.cleanupOverlayScheduler = this._register(new RunOnceScheduler(() => this.dispose(), 300));\n\n\t\tthis.create();\n\t}\n\n\tget disposed(): boolean {\n\t\treturn !!this._disposed;\n\t}\n\n\tprivate create(): void {\n\t\tconst overlayOffsetHeight = this.getOverlayOffsetHeight();\n\n\t\t// Container\n\t\tconst container = this.container = document.createElement('div');\n\t\tcontainer.id = DropOverlay.OVERLAY_ID;\n\t\tcontainer.style.top = `${overlayOffsetHeight}px`;\n\n\t\t// Parent\n\t\tthis.groupView.element.appendChild(container);\n\t\tthis.groupView.element.classList.add('dragged-over');\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.groupView.element.removeChild(container);\n\t\t\tthis.groupView.element.classList.remove('dragged-over');\n\t\t}));\n\n\t\t// Overlay\n\t\tthis.overlay = document.createElement('div');\n\t\tthis.overlay.classList.add('editor-group-overlay-indicator');\n\t\tcontainer.appendChild(this.overlay);\n\n\t\t// Overlay Event Handling\n\t\tthis.registerListeners(container);\n\n\t\t// Styles\n\t\tthis.updateStyles();\n\t}\n\n\tprotected override updateStyles(): void {\n\t\tconst overlay = assertIsDefined(this.overlay);\n\n\t\t// Overlay drop background\n\t\toverlay.style.backgroundColor = this.getColor(EDITOR_DRAG_AND_DROP_BACKGROUND) || '';\n\n\t\t// Overlay contrast border (if any)\n\t\tconst activeContrastBorderColor = this.getColor(activeContrastBorder);\n\t\toverlay.style.outlineColor = activeContrastBorderColor || '';\n\t\toverlay.style.outlineOffset = activeContrastBorderColor ? '-2px' : '';\n\t\toverlay.style.outlineStyle = activeContrastBorderColor ? 'dashed' : '';\n\t\toverlay.style.outlineWidth = activeContrastBorderColor ? '2px' : '';\n\t}\n\n\tprivate registerListeners(container: HTMLElement): void {\n\t\tthis._register(new DragAndDropObserver(container, {\n\t\t\tonDragEnter: e => undefined,\n\t\t\tonDragOver: e => {\n\t\t\t\tconst isDraggingGroup = this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype);\n\t\t\t\tconst isDraggingEditor = this.editorTransfer.hasData(DraggedEditorIdentifier.prototype);\n\n\t\t\t\t// Update the dropEffect to \"copy\" if there is no local data to be dragged because\n\t\t\t\t// in that case we can only copy the data into and not move it from its source\n\t\t\t\tif (!isDraggingEditor && !isDraggingGroup && e.dataTransfer) {\n\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t\t}\n\n\t\t\t\t// Find out if operation is valid\n\t\t\t\tlet isCopy = true;\n\t\t\t\tif (isDraggingGroup) {\n\t\t\t\t\tisCopy = this.isCopyOperation(e);\n\t\t\t\t} else if (isDraggingEditor) {\n\t\t\t\t\tconst data = this.editorTransfer.getData(DraggedEditorIdentifier.prototype);\n\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\tisCopy = this.isCopyOperation(e, data[0].identifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!isCopy) {\n\t\t\t\t\tconst sourceGroupView = this.findSourceGroupView();\n\t\t\t\t\tif (sourceGroupView === this.groupView) {\n\t\t\t\t\t\tif (isDraggingGroup || (isDraggingEditor && sourceGroupView.count < 2)) {\n\t\t\t\t\t\t\tthis.hideOverlay();\n\t\t\t\t\t\t\treturn; // do not allow to drop group/editor on itself if this results in an empty group\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Position overlay and conditionally enable or disable\n\t\t\t\t// editor group splitting support based on setting and\n\t\t\t\t// keymodifiers used.\n\t\t\t\tlet splitOnDragAndDrop = !!this.editorGroupService.partOptions.splitOnDragAndDrop;\n\t\t\t\tif (this.isToggleSplitOperation(e)) {\n\t\t\t\t\tsplitOnDragAndDrop = !splitOnDragAndDrop;\n\t\t\t\t}\n\t\t\t\tthis.positionOverlay(e.offsetX, e.offsetY, isDraggingGroup, splitOnDragAndDrop);\n\n\t\t\t\t// Make sure to stop any running cleanup scheduler to remove the overlay\n\t\t\t\tif (this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\t\tthis.cleanupOverlayScheduler.cancel();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDragLeave: e => this.dispose(),\n\t\t\tonDragEnd: e => this.dispose(),\n\n\t\t\tonDrop: e => {\n\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\t// Dispose overlay\n\t\t\t\tthis.dispose();\n\n\t\t\t\t// Handle drop if we have a valid operation\n\t\t\t\tif (this.currentDropOperation) {\n\t\t\t\t\tthis.handleDrop(e, this.currentDropOperation.splitDirection);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(container, EventType.MOUSE_OVER, () => {\n\t\t\t// Under some circumstances we have seen reports where the drop overlay is not being\n\t\t\t// cleaned up and as such the editor area remains under the overlay so that you cannot\n\t\t\t// type into the editor anymore. This seems related to using VMs and DND via host and\n\t\t\t// guest OS, though some users also saw it without VMs.\n\t\t\t// To protect against this issue we always destroy the overlay as soon as we detect a\n\t\t\t// mouse event over it. The delay is used to guarantee we are not interfering with the\n\t\t\t// actual DROP event that can also trigger a mouse over event.\n\t\t\tif (!this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\tthis.cleanupOverlayScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate findSourceGroupView(): IEditorGroupView | undefined {\n\n\t\t// Check for group transfer\n\t\tif (this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)) {\n\t\t\tconst data = this.groupTransfer.getData(DraggedEditorGroupIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\treturn this.accessor.getGroup(data[0].identifier);\n\t\t\t}\n\t\t}\n\n\t\t// Check for editor transfer\n\t\telse if (this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\tconst data = this.editorTransfer.getData(DraggedEditorIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\treturn this.accessor.getGroup(data[0].identifier.groupId);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate handleDrop(event: DragEvent, splitDirection?: GroupDirection): void {\n\n\t\t// Determine target group\n\t\tconst ensureTargetGroup = () => {\n\t\t\tlet targetGroup: IEditorGroupView;\n\t\t\tif (typeof splitDirection === 'number') {\n\t\t\t\ttargetGroup = this.accessor.addGroup(this.groupView, splitDirection);\n\t\t\t} else {\n\t\t\t\ttargetGroup = this.groupView;\n\t\t\t}\n\n\t\t\treturn targetGroup;\n\t\t};\n\n\t\t// Check for group transfer\n\t\tif (this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)) {\n\t\t\tconst data = this.groupTransfer.getData(DraggedEditorGroupIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tconst draggedEditorGroup = data[0].identifier;\n\n\t\t\t\t// Return if the drop is a no-op\n\t\t\t\tconst sourceGroup = this.accessor.getGroup(draggedEditorGroup);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tif (typeof splitDirection !== 'number' && sourceGroup === this.groupView) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Split to new group\n\t\t\t\t\tlet targetGroup: IEditorGroupView | undefined;\n\t\t\t\t\tif (typeof splitDirection === 'number') {\n\t\t\t\t\t\tif (this.isCopyOperation(event)) {\n\t\t\t\t\t\t\ttargetGroup = this.accessor.copyGroup(sourceGroup, this.groupView, splitDirection);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetGroup = this.accessor.moveGroup(sourceGroup, this.groupView, splitDirection);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Merge into existing group\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (this.isCopyOperation(event)) {\n\t\t\t\t\t\t\ttargetGroup = this.accessor.mergeGroup(sourceGroup, this.groupView, { mode: MergeGroupMode.COPY_EDITORS });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetGroup = this.accessor.mergeGroup(sourceGroup, this.groupView);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetGroup) {\n\t\t\t\t\t\tthis.accessor.activateGroup(targetGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.groupTransfer.clearData(DraggedEditorGroupIdentifier.prototype);\n\t\t\t}\n\t\t}\n\n\t\t// Check for editor transfer\n\t\telse if (this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\tconst data = this.editorTransfer.getData(DraggedEditorIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tconst draggedEditor = data[0].identifier;\n\t\t\t\tconst targetGroup = ensureTargetGroup();\n\n\t\t\t\t// Return if the drop is a no-op\n\t\t\t\tconst sourceGroup = this.accessor.getGroup(draggedEditor.groupId);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tif (sourceGroup === targetGroup) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Open in target group\n\t\t\t\t\tconst options = getActiveTextEditorOptions(sourceGroup, draggedEditor.editor, EditorOptions.create({\n\t\t\t\t\t\tpinned: true,\t\t\t\t\t\t\t\t\t\t// always pin dropped editor\n\t\t\t\t\t\tsticky: sourceGroup.isSticky(draggedEditor.editor),\t// preserve sticky state\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst copyEditor = this.isCopyOperation(event, draggedEditor);\n\t\t\t\t\tif (!copyEditor) {\n\t\t\t\t\t\tsourceGroup.moveEditor(draggedEditor.editor, targetGroup, options);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsourceGroup.copyEditor(draggedEditor.editor, targetGroup, options);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ensure target has focus\n\t\t\t\t\ttargetGroup.focus();\n\t\t\t\t}\n\n\t\t\t\tthis.editorTransfer.clearData(DraggedEditorIdentifier.prototype);\n\t\t\t}\n\t\t}\n\n\t\t// Web: check for file transfer\n\t\telse if (isWeb && containsDragType(event, DataTransfers.FILES)) {\n\t\t\tlet targetGroup: IEditorGroupView | undefined = undefined;\n\n\t\t\tconst files = event.dataTransfer?.files;\n\t\t\tif (files) {\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tconst file = files.item(i);\n\t\t\t\t\tif (file) {\n\n\t\t\t\t\t\t// Skip for very large files because this operation is unbuffered\n\t\t\t\t\t\tif (file.size > DropOverlay.MAX_FILE_UPLOAD_SIZE) {\n\t\t\t\t\t\t\tthis.notificationService.warn(localize('fileTooLarge', \"File is too large to open as untitled editor. Please upload it first into the file explorer and then try again.\"));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Read file fully and open as untitled editor\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsArrayBuffer(file);\n\t\t\t\t\t\treader.onload = async event => {\n\t\t\t\t\t\t\tconst name = file.name;\n\t\t\t\t\t\t\tif (typeof name === 'string' && event.target?.result instanceof ArrayBuffer) {\n\n\t\t\t\t\t\t\t\t// Try to come up with a good file path for the untitled\n\t\t\t\t\t\t\t\t// editor by asking the file dialog service for the default\n\t\t\t\t\t\t\t\tlet proposedFilePath: URI | undefined = undefined;\n\t\t\t\t\t\t\t\tconst defaultFilePath = await this.fileDialogService.defaultFilePath();\n\t\t\t\t\t\t\t\tif (defaultFilePath) {\n\t\t\t\t\t\t\t\t\tproposedFilePath = joinPath(defaultFilePath, name);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Open as untitled file with the provided contents\n\t\t\t\t\t\t\t\tconst untitledEditor = this.editorService.createEditorInput({\n\t\t\t\t\t\t\t\t\tresource: proposedFilePath,\n\t\t\t\t\t\t\t\t\tforceUntitled: true,\n\t\t\t\t\t\t\t\t\tcontents: VSBuffer.wrap(new Uint8Array(event.target.result)).toString()\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (!targetGroup) {\n\t\t\t\t\t\t\t\t\ttargetGroup = ensureTargetGroup();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tawait targetGroup.openEditor(untitledEditor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for URI transfer\n\t\telse {\n\t\t\tconst dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: true /* open workspace instead of file if dropped */ });\n\t\t\tdropHandler.handleDrop(event, () => ensureTargetGroup(), targetGroup => {\n\t\t\t\tif (targetGroup) {\n\t\t\t\t\ttargetGroup.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate isCopyOperation(e: DragEvent, draggedEditor?: IEditorIdentifier): boolean {\n\t\tif (draggedEditor?.editor instanceof EditorInput && !draggedEditor.editor.canSplit()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (e.ctrlKey && !isMacintosh) || (e.altKey && isMacintosh);\n\t}\n\n\tprivate isToggleSplitOperation(e: DragEvent): boolean {\n\t\treturn (e.altKey && !isMacintosh) || (e.shiftKey && isMacintosh);\n\t}\n\n\tprivate positionOverlay(mousePosX: number, mousePosY: number, isDraggingGroup: boolean, enableSplitting: boolean): void {\n\t\tconst preferSplitVertically = this.accessor.partOptions.openSideBySideDirection === 'right';\n\n\t\tconst editorControlWidth = this.groupView.element.clientWidth;\n\t\tconst editorControlHeight = this.groupView.element.clientHeight - this.getOverlayOffsetHeight();\n\n\t\tlet edgeWidthThresholdFactor: number;\n\t\tlet edgeHeightThresholdFactor: number;\n\t\tif (enableSplitting) {\n\t\t\tif (isDraggingGroup) {\n\t\t\t\tedgeWidthThresholdFactor = preferSplitVertically ? 0.3 : 0.1; // give larger threshold when dragging group depending on preferred split direction\n\t\t\t} else {\n\t\t\t\tedgeWidthThresholdFactor = 0.1; // 10% threshold to split if dragging editors\n\t\t\t}\n\n\t\t\tif (isDraggingGroup) {\n\t\t\t\tedgeHeightThresholdFactor = preferSplitVertically ? 0.1 : 0.3; // give larger threshold when dragging group depending on preferred split direction\n\t\t\t} else {\n\t\t\t\tedgeHeightThresholdFactor = 0.1; // 10% threshold to split if dragging editors\n\t\t\t}\n\t\t} else {\n\t\t\tedgeWidthThresholdFactor = 0;\n\t\t\tedgeHeightThresholdFactor = 0;\n\t\t}\n\n\t\tconst edgeWidthThreshold = editorControlWidth * edgeWidthThresholdFactor;\n\t\tconst edgeHeightThreshold = editorControlHeight * edgeHeightThresholdFactor;\n\n\t\tconst splitWidthThreshold = editorControlWidth / 3;\t\t// offer to split left/right at 33%\n\t\tconst splitHeightThreshold = editorControlHeight / 3;\t// offer to split up/down at 33%\n\n\t\t// Enable to debug the drop threshold square\n\t\t// let child = this.overlay.children.item(0) as HTMLElement || this.overlay.appendChild(document.createElement('div'));\n\t\t// child.style.backgroundColor = 'red';\n\t\t// child.style.position = 'absolute';\n\t\t// child.style.width = (groupViewWidth - (2 * edgeWidthThreshold)) + 'px';\n\t\t// child.style.height = (groupViewHeight - (2 * edgeHeightThreshold)) + 'px';\n\t\t// child.style.left = edgeWidthThreshold + 'px';\n\t\t// child.style.top = edgeHeightThreshold + 'px';\n\n\t\t// No split if mouse is above certain threshold in the center of the view\n\t\tlet splitDirection: GroupDirection | undefined;\n\t\tif (\n\t\t\tmousePosX > edgeWidthThreshold && mousePosX < editorControlWidth - edgeWidthThreshold &&\n\t\t\tmousePosY > edgeHeightThreshold && mousePosY < editorControlHeight - edgeHeightThreshold\n\t\t) {\n\t\t\tsplitDirection = undefined;\n\t\t}\n\n\t\t// Offer to split otherwise\n\t\telse {\n\n\t\t\t// User prefers to split vertically: offer a larger hitzone\n\t\t\t// for this direction like so:\n\t\t\t// ----------------------------------------------\n\t\t\t// |\t\t|\t\tSPLIT UP\t\t|\t\t\t|\n\t\t\t// | SPLIT \t|-----------------------|\tSPLIT\t|\n\t\t\t// |\t\t|\t\t  MERGE\t\t\t|\t\t\t|\n\t\t\t// | LEFT\t|-----------------------|\tRIGHT\t|\n\t\t\t// |\t\t|\t\tSPLIT DOWN\t\t|\t\t\t|\n\t\t\t// ----------------------------------------------\n\t\t\tif (preferSplitVertically) {\n\t\t\t\tif (mousePosX < splitWidthThreshold) {\n\t\t\t\t\tsplitDirection = GroupDirection.LEFT;\n\t\t\t\t} else if (mousePosX > splitWidthThreshold * 2) {\n\t\t\t\t\tsplitDirection = GroupDirection.RIGHT;\n\t\t\t\t} else if (mousePosY < editorControlHeight / 2) {\n\t\t\t\t\tsplitDirection = GroupDirection.UP;\n\t\t\t\t} else {\n\t\t\t\t\tsplitDirection = GroupDirection.DOWN;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// User prefers to split horizontally: offer a larger hitzone\n\t\t\t// for this direction like so:\n\t\t\t// ----------------------------------------------\n\t\t\t// |\t\t\t\tSPLIT UP\t\t\t\t\t|\n\t\t\t// |--------------------------------------------|\n\t\t\t// |  SPLIT LEFT  |\t   MERGE\t|  SPLIT RIGHT  |\n\t\t\t// |--------------------------------------------|\n\t\t\t// |\t\t\t\tSPLIT DOWN\t\t\t\t\t|\n\t\t\t// ----------------------------------------------\n\t\t\telse {\n\t\t\t\tif (mousePosY < splitHeightThreshold) {\n\t\t\t\t\tsplitDirection = GroupDirection.UP;\n\t\t\t\t} else if (mousePosY > splitHeightThreshold * 2) {\n\t\t\t\t\tsplitDirection = GroupDirection.DOWN;\n\t\t\t\t} else if (mousePosX < editorControlWidth / 2) {\n\t\t\t\t\tsplitDirection = GroupDirection.LEFT;\n\t\t\t\t} else {\n\t\t\t\t\tsplitDirection = GroupDirection.RIGHT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Draw overlay based on split direction\n\t\tswitch (splitDirection) {\n\t\t\tcase GroupDirection.UP:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '100%', height: '50%' });\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.DOWN:\n\t\t\t\tthis.doPositionOverlay({ top: '50%', left: '0', width: '100%', height: '50%' });\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.LEFT:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '50%', height: '100%' });\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.RIGHT:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '50%', width: '50%', height: '100%' });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '100%', height: '100%' });\n\t\t}\n\n\t\t// Make sure the overlay is visible now\n\t\tconst overlay = assertIsDefined(this.overlay);\n\t\toverlay.style.opacity = '1';\n\n\t\t// Enable transition after a timeout to prevent initial animation\n\t\tsetTimeout(() => overlay.classList.add('overlay-move-transition'), 0);\n\n\t\t// Remember as current split direction\n\t\tthis.currentDropOperation = { splitDirection };\n\t}\n\n\tprivate doPositionOverlay(options: { top: string, left: string, width: string, height: string }): void {\n\t\tconst [container, overlay] = assertAllDefined(this.container, this.overlay);\n\n\t\t// Container\n\t\tconst offsetHeight = this.getOverlayOffsetHeight();\n\t\tif (offsetHeight) {\n\t\t\tcontainer.style.height = `calc(100% - ${offsetHeight}px)`;\n\t\t} else {\n\t\t\tcontainer.style.height = '100%';\n\t\t}\n\n\t\t// Overlay\n\t\toverlay.style.top = options.top;\n\t\toverlay.style.left = options.left;\n\t\toverlay.style.width = options.width;\n\t\toverlay.style.height = options.height;\n\t}\n\n\tprivate getOverlayOffsetHeight(): number {\n\n\t\t// With tabs and opened editors: use the area below tabs as drop target\n\t\tif (!this.groupView.isEmpty && this.accessor.partOptions.showTabs) {\n\t\t\treturn this.groupView.titleHeight.offset;\n\t\t}\n\n\t\t// Without tabs or empty group: use entire editor area as drop target\n\t\treturn 0;\n\t}\n\n\tprivate hideOverlay(): void {\n\t\tconst overlay = assertIsDefined(this.overlay);\n\n\t\t// Reset overlay\n\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '100%', height: '100%' });\n\t\toverlay.style.opacity = '0';\n\t\toverlay.classList.remove('overlay-move-transition');\n\n\t\t// Reset current operation\n\t\tthis.currentDropOperation = undefined;\n\t}\n\n\tcontains(element: HTMLElement): boolean {\n\t\treturn element === this.container || element === this.overlay;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._disposed = true;\n\t}\n}\n\nexport interface IEditorDropTargetDelegate {\n\n\t/**\n\t * A helper to figure out if the drop target contains the provided group.\n\t */\n\tcontainsGroup?(groupView: IEditorGroupView): boolean;\n}\n\nexport class EditorDropTarget extends Themable {\n\n\tprivate _overlay?: DropOverlay;\n\n\tprivate counter = 0;\n\n\tprivate readonly editorTransfer = LocalSelectionTransfer.getInstance<DraggedEditorIdentifier>();\n\tprivate readonly groupTransfer = LocalSelectionTransfer.getInstance<DraggedEditorGroupIdentifier>();\n\n\tconstructor(\n\t\tprivate accessor: IEditorGroupsAccessor,\n\t\tprivate container: HTMLElement,\n\t\tprivate readonly delegate: IEditorDropTargetDelegate,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate get overlay(): DropOverlay | undefined {\n\t\tif (this._overlay && !this._overlay.disposed) {\n\t\t\treturn this._overlay;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(addDisposableListener(this.container, EventType.DRAG_ENTER, e => this.onDragEnter(e)));\n\t\tthis._register(addDisposableListener(this.container, EventType.DRAG_LEAVE, () => this.onDragLeave()));\n\t\t[this.container, window].forEach(node => this._register(addDisposableListener(node as HTMLElement, EventType.DRAG_END, () => this.onDragEnd())));\n\t}\n\n\tprivate onDragEnter(event: DragEvent): void {\n\t\tthis.counter++;\n\n\t\t// Validate transfer\n\t\tif (\n\t\t\t!this.editorTransfer.hasData(DraggedEditorIdentifier.prototype) &&\n\t\t\t!this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype) &&\n\t\t\tevent.dataTransfer && !event.dataTransfer.types.length // see https://github.com/microsoft/vscode/issues/25789\n\t\t) {\n\t\t\tevent.dataTransfer.dropEffect = 'none';\n\t\t\treturn; // unsupported transfer\n\t\t}\n\n\t\t// Signal DND start\n\t\tthis.updateContainer(true);\n\n\t\tconst target = event.target as HTMLElement;\n\t\tif (target) {\n\n\t\t\t// Somehow we managed to move the mouse quickly out of the current overlay, so destroy it\n\t\t\tif (this.overlay && !this.overlay.contains(target)) {\n\t\t\t\tthis.disposeOverlay();\n\t\t\t}\n\n\t\t\t// Create overlay over target\n\t\t\tif (!this.overlay) {\n\t\t\t\tconst targetGroupView = this.findTargetGroupView(target);\n\t\t\t\tif (targetGroupView) {\n\t\t\t\t\tthis._overlay = this.instantiationService.createInstance(DropOverlay, this.accessor, targetGroupView);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDragLeave(): void {\n\t\tthis.counter--;\n\n\t\tif (this.counter === 0) {\n\t\t\tthis.updateContainer(false);\n\t\t}\n\t}\n\n\tprivate onDragEnd(): void {\n\t\tthis.counter = 0;\n\n\t\tthis.updateContainer(false);\n\t\tthis.disposeOverlay();\n\t}\n\n\tprivate findTargetGroupView(child: HTMLElement): IEditorGroupView | undefined {\n\t\tconst groups = this.accessor.groups;\n\n\t\treturn groups.find(groupView => isAncestor(child, groupView.element) || this.delegate.containsGroup?.(groupView));\n\t}\n\n\tprivate updateContainer(isDraggedOver: boolean): void {\n\t\tthis.container.classList.toggle('dragged-over', isDraggedOver);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposeOverlay();\n\t}\n\n\tprivate disposeOverlay(): void {\n\t\tif (this.overlay) {\n\t\t\tthis.overlay.dispose();\n\t\t\tthis._overlay = undefined;\n\t\t}\n\t}\n}\n"]}