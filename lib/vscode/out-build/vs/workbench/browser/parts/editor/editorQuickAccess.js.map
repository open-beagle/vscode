{"version":3,"sources":["vs/workbench/browser/parts/editor/editorQuickAccess.ts"],"names":[],"mappings":"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","file":"editorQuickAccess.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editorquickaccess';\nimport { localize } from 'vs/nls';\nimport { IQuickPickSeparator, quickPickItemScorerAccessor, IQuickPickItemWithResource, IQuickPick } from 'vs/platform/quickinput/common/quickInput';\nimport { PickerQuickAccessProvider, IPickerQuickAccessItem, TriggerAction } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { IEditorGroupsService, GroupsOrder } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { EditorsOrder, IEditorIdentifier, EditorResourceAccessor, SideBySideEditor, GroupIdentifier } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { prepareQuery, scoreItemFuzzy, compareItemsByFuzzyScore, FuzzyScorerCache } from 'vs/base/common/fuzzyScorer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Codicon } from 'vs/base/common/codicons';\n\ninterface IEditorQuickPickItem extends IQuickPickItemWithResource, IPickerQuickAccessItem {\n\tgroupId: GroupIdentifier;\n}\n\nexport abstract class BaseEditorQuickAccessProvider extends PickerQuickAccessProvider<IEditorQuickPickItem> {\n\n\tprivate readonly pickState = new class {\n\n\t\tscorerCache: FuzzyScorerCache = Object.create(null);\n\t\tisQuickNavigating: boolean | undefined = undefined;\n\n\t\treset(isQuickNavigating: boolean): void {\n\n\t\t\t// Caches\n\t\t\tif (!isQuickNavigating) {\n\t\t\t\tthis.scorerCache = Object.create(null);\n\t\t\t}\n\n\t\t\t// Other\n\t\t\tthis.isQuickNavigating = isQuickNavigating;\n\t\t}\n\t};\n\n\tconstructor(\n\t\tprefix: string,\n\t\t@IEditorGroupsService protected readonly editorGroupService: IEditorGroupsService,\n\t\t@IEditorService protected readonly editorService: IEditorService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService\n\t) {\n\t\tsuper(prefix,\n\t\t\t{\n\t\t\t\tcanAcceptInBackground: true,\n\t\t\t\tnoResultsPick: {\n\t\t\t\t\tlabel: localize('noViewResults', \"No matching editors\"),\n\t\t\t\t\tgroupId: -1\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\toverride provide(picker: IQuickPick<IEditorQuickPickItem>, token: CancellationToken): IDisposable {\n\n\t\t// Reset the pick state for this run\n\t\tthis.pickState.reset(!!picker.quickNavigate);\n\n\t\t// Start picker\n\t\treturn super.provide(picker, token);\n\t}\n\n\tprotected getPicks(filter: string): Array<IEditorQuickPickItem | IQuickPickSeparator> {\n\t\tconst query = prepareQuery(filter);\n\n\t\t// Filtering\n\t\tconst filteredEditorEntries = this.doGetEditorPickItems().filter(entry => {\n\t\t\tif (!query.normalized) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Score on label and description\n\t\t\tconst itemScore = scoreItemFuzzy(entry, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\tif (!itemScore.score) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Apply highlights\n\t\t\tentry.highlights = { label: itemScore.labelMatch, description: itemScore.descriptionMatch };\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Sorting\n\t\tif (query.normalized) {\n\t\t\tconst groups = this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE).map(group => group.id);\n\t\t\tfilteredEditorEntries.sort((entryA, entryB) => {\n\t\t\t\tif (entryA.groupId !== entryB.groupId) {\n\t\t\t\t\treturn groups.indexOf(entryA.groupId) - groups.indexOf(entryB.groupId); // older groups first\n\t\t\t\t}\n\n\t\t\t\treturn compareItemsByFuzzyScore(entryA, entryB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\t});\n\t\t}\n\n\t\t// Grouping (for more than one group)\n\t\tconst filteredEditorEntriesWithSeparators: Array<IEditorQuickPickItem | IQuickPickSeparator> = [];\n\t\tif (this.editorGroupService.count > 1) {\n\t\t\tlet lastGroupId: number | undefined = undefined;\n\t\t\tfor (const entry of filteredEditorEntries) {\n\t\t\t\tif (typeof lastGroupId !== 'number' || lastGroupId !== entry.groupId) {\n\t\t\t\t\tconst group = this.editorGroupService.getGroup(entry.groupId);\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tfilteredEditorEntriesWithSeparators.push({ type: 'separator', label: group.label });\n\t\t\t\t\t}\n\t\t\t\t\tlastGroupId = entry.groupId;\n\t\t\t\t}\n\n\t\t\t\tfilteredEditorEntriesWithSeparators.push(entry);\n\t\t\t}\n\t\t} else {\n\t\t\tfilteredEditorEntriesWithSeparators.push(...filteredEditorEntries);\n\t\t}\n\n\t\treturn filteredEditorEntriesWithSeparators;\n\t}\n\n\tprivate doGetEditorPickItems(): Array<IEditorQuickPickItem> {\n\t\tconst editors = this.doGetEditors();\n\n\t\tconst mapGroupIdToGroupAriaLabel = new Map<GroupIdentifier, string>();\n\t\tfor (const { groupId } of editors) {\n\t\t\tif (!mapGroupIdToGroupAriaLabel.has(groupId)) {\n\t\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\t\tif (group) {\n\t\t\t\t\tmapGroupIdToGroupAriaLabel.set(groupId, group.ariaLabel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.doGetEditors().map(({ editor, groupId }): IEditorQuickPickItem => {\n\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\tconst isDirty = editor.isDirty() && !editor.isSaving();\n\t\t\tconst description = editor.getDescription();\n\t\t\tconst nameAndDescription = description ? `${editor.getName()} ${description}` : editor.getName();\n\n\t\t\treturn {\n\t\t\t\tgroupId,\n\t\t\t\tresource,\n\t\t\t\tlabel: editor.getName(),\n\t\t\t\tariaLabel: (() => {\n\t\t\t\t\tif (mapGroupIdToGroupAriaLabel.size > 1) {\n\t\t\t\t\t\treturn isDirty ?\n\t\t\t\t\t\t\tlocalize('entryAriaLabelWithGroupDirty', \"{0}, dirty, {1}\", nameAndDescription, mapGroupIdToGroupAriaLabel.get(groupId)) :\n\t\t\t\t\t\t\tlocalize('entryAriaLabelWithGroup', \"{0}, {1}\", nameAndDescription, mapGroupIdToGroupAriaLabel.get(groupId));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn isDirty ? localize('entryAriaLabelDirty', \"{0}, dirty\", nameAndDescription) : nameAndDescription;\n\t\t\t\t})(),\n\t\t\t\tdescription: editor.getDescription(),\n\t\t\t\ticonClasses: getIconClasses(this.modelService, this.modeService, resource),\n\t\t\t\titalic: !this.editorGroupService.getGroup(groupId)?.isPinned(editor),\n\t\t\t\tbuttons: (() => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonClass: isDirty ? ('dirty-editor ' + Codicon.closeDirty.classNames) : Codicon.close.classNames,\n\t\t\t\t\t\t\ttooltip: localize('closeEditor', \"Close Editor\"),\n\t\t\t\t\t\t\talwaysVisible: isDirty\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t})(),\n\t\t\t\ttrigger: async () => {\n\t\t\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tawait group.closeEditor(editor, { preserveFocus: true });\n\n\t\t\t\t\t\tif (!group.contains(editor)) {\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t},\n\t\t\t\taccept: (keyMods, event) => this.editorGroupService.getGroup(groupId)?.openEditor(editor, { preserveFocus: event.inBackground }),\n\t\t\t};\n\t\t});\n\t}\n\n\tprotected abstract doGetEditors(): IEditorIdentifier[];\n}\n\n//#region Active Editor Group Editors by Most Recently Used\n\nexport class ActiveGroupEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt active ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tsuper(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, editorGroupService, editorService, modelService, modeService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst group = this.editorGroupService.activeGroup;\n\n\t\treturn group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).map(editor => ({ editor, groupId: group.id }));\n\t}\n}\n\n//#endregion\n\n\n//#region All Editors by Appearance\n\nexport class AllEditorsByAppearanceQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tsuper(AllEditorsByAppearanceQuickAccess.PREFIX, editorGroupService, editorService, modelService, modeService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst entries: IEditorIdentifier[] = [];\n\n\t\tfor (const group of this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)) {\n\t\t\tfor (const editor of group.getEditors(EditorsOrder.SEQUENTIAL)) {\n\t\t\t\tentries.push({ editor, groupId: group.id });\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n}\n\n//#endregion\n\n\n//#region All Editors by Most Recently Used\n\nexport class AllEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt mru ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tsuper(AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, editorGroupService, editorService, modelService, modeService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst entries: IEditorIdentifier[] = [];\n\n\t\tfor (const editor of this.editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tentries.push(editor);\n\t\t}\n\n\t\treturn entries;\n\t}\n}\n\n//#endregion\n"]}