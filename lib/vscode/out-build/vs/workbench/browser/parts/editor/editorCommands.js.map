{"version":3,"sources":["vs/workbench/browser/parts/editor/editorCommands.ts"],"names":[],"mappings":"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","file":"editorCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { isObject, isString, isUndefined, isNumber, withNullAsUndefined } from 'vs/base/common/types';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { TextCompareEditorVisibleContext, EditorInput, IEditorIdentifier, IEditorCommandsContext, ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext, CloseDirection, IEditorInput, IVisibleEditorPane, ActiveEditorStickyContext, EditorsOrder, viewColumnToEditorGroup, EditorGroupColumn } from 'vs/workbench/common/editor';\nimport { IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { TextDiffEditor } from 'vs/workbench/browser/parts/editor/textDiffEditor';\nimport { KeyMod, KeyCode, KeyChord } from 'vs/base/common/keyCodes';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IListService, IOpenEvent } from 'vs/platform/list/browser/listService';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport { IEditorGroupsService, IEditorGroup, GroupDirection, GroupLocation, GroupsOrder, preferredSideBySideGroupDirection, EditorGroupLayout } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CommandsRegistry, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess } from 'vs/workbench/browser/parts/editor/editorQuickAccess';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\n\nexport const CLOSE_SAVED_EDITORS_COMMAND_ID = 'workbench.action.closeUnmodifiedEditors';\nexport const CLOSE_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeEditorsInGroup';\nexport const CLOSE_EDITORS_AND_GROUP_COMMAND_ID = 'workbench.action.closeEditorsAndGroup';\nexport const CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID = 'workbench.action.closeEditorsToTheRight';\nexport const CLOSE_EDITOR_COMMAND_ID = 'workbench.action.closeActiveEditor';\nexport const CLOSE_PINNED_EDITOR_COMMAND_ID = 'workbench.action.closeActivePinnedEditor';\nexport const CLOSE_EDITOR_GROUP_COMMAND_ID = 'workbench.action.closeGroup';\nexport const CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeOtherEditors';\n\nexport const MOVE_ACTIVE_EDITOR_COMMAND_ID = 'moveActiveEditor';\nexport const LAYOUT_EDITOR_GROUPS_COMMAND_ID = 'layoutEditorGroups';\nexport const KEEP_EDITOR_COMMAND_ID = 'workbench.action.keepEditor';\nexport const TOGGLE_KEEP_EDITORS_COMMAND_ID = 'workbench.action.toggleKeepEditors';\nexport const SHOW_EDITORS_IN_GROUP = 'workbench.action.showEditorsInGroup';\n\nexport const PIN_EDITOR_COMMAND_ID = 'workbench.action.pinEditor';\nexport const UNPIN_EDITOR_COMMAND_ID = 'workbench.action.unpinEditor';\n\nexport const TOGGLE_DIFF_SIDE_BY_SIDE = 'toggle.diff.renderSideBySide';\nexport const GOTO_NEXT_CHANGE = 'workbench.action.compareEditor.nextChange';\nexport const GOTO_PREVIOUS_CHANGE = 'workbench.action.compareEditor.previousChange';\nexport const DIFF_FOCUS_PRIMARY_SIDE = 'workbench.action.compareEditor.focusPrimarySide';\nexport const DIFF_FOCUS_SECONDARY_SIDE = 'workbench.action.compareEditor.focusSecondarySide';\nexport const DIFF_FOCUS_OTHER_SIDE = 'workbench.action.compareEditor.focusOtherSide';\nexport const TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE = 'toggle.diff.ignoreTrimWhitespace';\n\nexport const SPLIT_EDITOR_UP = 'workbench.action.splitEditorUp';\nexport const SPLIT_EDITOR_DOWN = 'workbench.action.splitEditorDown';\nexport const SPLIT_EDITOR_LEFT = 'workbench.action.splitEditorLeft';\nexport const SPLIT_EDITOR_RIGHT = 'workbench.action.splitEditorRight';\n\nexport const FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusLeftGroupWithoutWrap';\nexport const FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusRightGroupWithoutWrap';\nexport const FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusAboveGroupWithoutWrap';\nexport const FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusBelowGroupWithoutWrap';\n\nexport const OPEN_EDITOR_AT_INDEX_COMMAND_ID = 'workbench.action.openEditorAtIndex';\n\nexport const API_OPEN_EDITOR_COMMAND_ID = '_workbench.open';\nexport const API_OPEN_DIFF_EDITOR_COMMAND_ID = '_workbench.diff';\nexport const API_OPEN_WITH_EDITOR_COMMAND_ID = '_workbench.openWith';\n\nexport interface ActiveEditorMoveArguments {\n\tto: 'first' | 'last' | 'left' | 'right' | 'up' | 'down' | 'center' | 'position' | 'previous' | 'next';\n\tby: 'tab' | 'group';\n\tvalue: number;\n}\n\nconst isActiveEditorMoveArg = function (arg: ActiveEditorMoveArguments): boolean {\n\tif (!isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tif (!isString(arg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.by) && !isString(arg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.value) && !isNumber(arg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nfunction registerActiveEditorMoveCommand(): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: MOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveActiveEditor(args, accessor),\n\t\tdescription: {\n\t\t\tdescription: localize('editorCommand.activeEditorMove.description', \"Move the active editor by tabs or groups\"),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize('editorCommand.activeEditorMove.arg.name', \"Active editor move argument\"),\n\t\t\t\t\tdescription: localize('editorCommand.activeEditorMove.arg.description', \"Argument Properties:\\n\\t* 'to': String value providing where to move.\\n\\t* 'by': String value providing the unit for move (by tab or by group).\\n\\t* 'value': Number value providing how many positions or an absolute position to move.\"),\n\t\t\t\t\tconstraint: isActiveEditorMoveArg,\n\t\t\t\t\tschema: {\n\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t'required': ['to'],\n\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t'to': {\n\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t'enum': ['left', 'right']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'by': {\n\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t'enum': ['tab', 'group']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n}\n\nfunction moveActiveEditor(args: ActiveEditorMoveArguments = Object.create(null), accessor: ServicesAccessor): void {\n\targs.to = args.to || 'right';\n\targs.by = args.by || 'tab';\n\targs.value = typeof args.value === 'number' ? args.value : 1;\n\n\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\tif (activeEditorPane) {\n\t\tswitch (args.by) {\n\t\t\tcase 'tab':\n\t\t\t\treturn moveActiveTab(args, activeEditorPane, accessor);\n\t\t\tcase 'group':\n\t\t\t\treturn moveActiveEditorToGroup(args, activeEditorPane, accessor);\n\t\t}\n\t}\n}\n\nfunction moveActiveTab(args: ActiveEditorMoveArguments, control: IVisibleEditorPane, accessor: ServicesAccessor): void {\n\tconst group = control.group;\n\tlet index = group.getIndexOfEditor(control.input);\n\tswitch (args.to) {\n\t\tcase 'first':\n\t\t\tindex = 0;\n\t\t\tbreak;\n\t\tcase 'last':\n\t\t\tindex = group.count - 1;\n\t\t\tbreak;\n\t\tcase 'left':\n\t\t\tindex = index - args.value;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tindex = index + args.value;\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\tindex = Math.round(group.count / 2) - 1;\n\t\t\tbreak;\n\t\tcase 'position':\n\t\t\tindex = args.value - 1;\n\t\t\tbreak;\n\t}\n\n\tindex = index < 0 ? 0 : index >= group.count ? group.count - 1 : index;\n\tgroup.moveEditor(control.input, group, { index });\n}\n\nfunction moveActiveEditorToGroup(args: ActiveEditorMoveArguments, control: IVisibleEditorPane, accessor: ServicesAccessor): void {\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst sourceGroup = control.group;\n\tlet targetGroup: IEditorGroup | undefined;\n\n\tswitch (args.to) {\n\t\tcase 'left':\n\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.LEFT }, sourceGroup);\n\t\t\tif (!targetGroup) {\n\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.LEFT);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.RIGHT }, sourceGroup);\n\t\t\tif (!targetGroup) {\n\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.RIGHT);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'up':\n\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.UP }, sourceGroup);\n\t\t\tif (!targetGroup) {\n\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.UP);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'down':\n\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.DOWN }, sourceGroup);\n\t\t\tif (!targetGroup) {\n\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.DOWN);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'first':\n\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.FIRST }, sourceGroup);\n\t\t\tbreak;\n\t\tcase 'last':\n\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.LAST }, sourceGroup);\n\t\t\tbreak;\n\t\tcase 'previous':\n\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.PREVIOUS }, sourceGroup);\n\t\t\tbreak;\n\t\tcase 'next':\n\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.NEXT }, sourceGroup);\n\t\t\tif (!targetGroup) {\n\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, preferredSideBySideGroupDirection(configurationService));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\ttargetGroup = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)[(editorGroupService.count / 2) - 1];\n\t\t\tbreak;\n\t\tcase 'position':\n\t\t\ttargetGroup = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)[args.value - 1];\n\t\t\tbreak;\n\t}\n\n\tif (targetGroup) {\n\t\tsourceGroup.moveEditor(control.input, targetGroup);\n\t\ttargetGroup.focus();\n\t}\n}\n\nfunction registerEditorGroupsLayoutCommand(): void {\n\n\tfunction applyEditorLayout(accessor: ServicesAccessor, layout: EditorGroupLayout): void {\n\t\tif (!layout || typeof layout !== 'object') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\teditorGroupService.applyLayout(layout);\n\t}\n\n\tCommandsRegistry.registerCommand(LAYOUT_EDITOR_GROUPS_COMMAND_ID, (accessor: ServicesAccessor, args: EditorGroupLayout) => {\n\t\tapplyEditorLayout(accessor, args);\n\t});\n\n\t// API Command\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.setEditorLayout',\n\t\thandler: (accessor: ServicesAccessor, args: EditorGroupLayout) => applyEditorLayout(accessor, args),\n\t\tdescription: {\n\t\t\tdescription: 'Set Editor Layout',\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['groups'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'orientation': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 0,\n\t\t\t\t\t\t\t'enum': [0, 1]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'groups': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema',\n\t\t\t\t\t\t\t'default': [{}, {}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t});\n}\n\nfunction registerDiffEditorCommands(): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: GOTO_NEXT_CHANGE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: TextCompareEditorVisibleContext,\n\t\tprimary: KeyMod.Alt | KeyCode.F5,\n\t\thandler: accessor => navigateInDiffEditor(accessor, true)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: GOTO_PREVIOUS_CHANGE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: TextCompareEditorVisibleContext,\n\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F5,\n\t\thandler: accessor => navigateInDiffEditor(accessor, false)\n\t});\n\n\tfunction getActiveTextDiffEditor(accessor: ServicesAccessor): TextDiffEditor | undefined {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tfor (const editor of [editorService.activeEditorPane, ...editorService.visibleEditorPanes]) {\n\t\t\tif (editor instanceof TextDiffEditor) {\n\t\t\t\treturn editor;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tfunction navigateInDiffEditor(accessor: ServicesAccessor, next: boolean): void {\n\t\tconst activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n\n\t\tif (activeTextDiffEditor) {\n\t\t\tconst navigator = activeTextDiffEditor.getDiffNavigator();\n\t\t\tif (navigator) {\n\t\t\t\tnext ? navigator.next() : navigator.previous();\n\t\t\t}\n\t\t}\n\t}\n\n\tenum FocusTextDiffEditorMode {\n\t\tOriginal,\n\t\tModified,\n\t\tToggle\n\t}\n\n\tfunction focusInDiffEditor(accessor: ServicesAccessor, mode: FocusTextDiffEditorMode): void {\n\t\tconst activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n\n\t\tif (activeTextDiffEditor) {\n\t\t\tswitch (mode) {\n\t\t\t\tcase FocusTextDiffEditorMode.Original:\n\t\t\t\t\tactiveTextDiffEditor.getControl()?.getOriginalEditor().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FocusTextDiffEditorMode.Modified:\n\t\t\t\t\tactiveTextDiffEditor.getControl()?.getModifiedEditor().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FocusTextDiffEditorMode.Toggle:\n\t\t\t\t\tif (activeTextDiffEditor.getControl()?.getModifiedEditor().hasWidgetFocus()) {\n\t\t\t\t\t\treturn focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction toggleDiffSideBySide(accessor: ServicesAccessor): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.renderSideBySide');\n\t\tconfigurationService.updateValue('diffEditor.renderSideBySide', newValue);\n\t}\n\n\tfunction toggleDiffIgnoreTrimWhitespace(accessor: ServicesAccessor): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.ignoreTrimWhitespace');\n\t\tconfigurationService.updateValue('diffEditor.ignoreTrimWhitespace', newValue);\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TOGGLE_DIFF_SIDE_BY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => toggleDiffSideBySide(accessor)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_PRIMARY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_SECONDARY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_OTHER_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Toggle)\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\tcommand: {\n\t\t\tid: TOGGLE_DIFF_SIDE_BY_SIDE,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleInlineView', \"Toggle Inline View\"),\n\t\t\t\toriginal: 'Compare: Toggle Inline View'\n\t\t\t},\n\t\t\tcategory: localize('compare', \"Compare\")\n\t\t},\n\t\twhen: ContextKeyExpr.has('textCompareEditorActive')\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => toggleDiffIgnoreTrimWhitespace(accessor)\n\t});\n}\n\nfunction registerOpenEditorAPICommands(): void {\n\n\tfunction mixinContext(context: IOpenEvent<unknown> | undefined, options: ITextEditorOptions | undefined, column: EditorGroupColumn | undefined): [ITextEditorOptions | undefined, EditorGroupColumn | undefined] {\n\t\tif (!context) {\n\t\t\treturn [options, column];\n\t\t}\n\n\t\treturn [\n\t\t\t{ ...context.editorOptions, ...(options ?? Object.create(null)) },\n\t\t\tcontext.sideBySide ? SIDE_GROUP : column\n\t\t];\n\t}\n\n\tCommandsRegistry.registerCommand(API_OPEN_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, resourceArg: UriComponents, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], label?: string, context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\n\t\tconst resource = URI.revive(resourceArg);\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\t// use editor options or editor view column as a hint to use the editor service for opening\n\t\tif (optionsArg || typeof columnArg === 'number') {\n\t\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\n\t\t\tawait editorService.openEditor({ resource, options, label }, viewColumnToEditorGroup(editorGroupService, column));\n\t\t}\n\n\t\t// do not allow to execute commands from here\n\t\telse if (resource.scheme === 'command') {\n\t\t\treturn;\n\t\t}\n\n\t\t// finally, delegate to opener service\n\t\telse {\n\t\t\tawait openerService.open(resource, { openToSide: context?.sideBySide, editorOptions: context?.editorOptions });\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, leftResource: UriComponents, rightResource: UriComponents, label?: string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\n\t\tawait editorService.openEditor({\n\t\t\tleftResource: URI.revive(leftResource),\n\t\t\trightResource: URI.revive(rightResource),\n\t\t\tlabel,\n\t\t\toptions\n\t\t}, viewColumnToEditorGroup(editorGroupService, column));\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_WITH_EDITOR_COMMAND_ID, (accessor: ServicesAccessor, resource: UriComponents, id: string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?]) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\t\tlet group: IEditorGroup | undefined = undefined;\n\n\t\tif (columnArg === SIDE_GROUP) {\n\t\t\tconst direction = preferredSideBySideGroupDirection(configurationService);\n\n\t\t\tlet neighbourGroup = editorGroupsService.findGroup({ direction });\n\t\t\tif (!neighbourGroup) {\n\t\t\t\tneighbourGroup = editorGroupsService.addGroup(editorGroupsService.activeGroup, direction);\n\t\t\t}\n\t\t\tgroup = neighbourGroup;\n\t\t} else {\n\t\t\tgroup = editorGroupsService.getGroup(viewColumnToEditorGroup(editorGroupsService, columnArg)) ?? editorGroupsService.activeGroup;\n\t\t}\n\n\t\treturn editorService.openEditor({ resource: URI.revive(resource), options: { ...optionsArg, override: id } }, group);\n\t});\n}\n\nfunction registerOpenEditorAtIndexCommands(): void {\n\tconst openEditorAtIndex: ICommandHandler = (accessor: ServicesAccessor, editorIndex: number): void => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.group.getEditorByIndex(editorIndex);\n\t\t\tif (editor) {\n\t\t\t\teditorService.openEditor(editor);\n\t\t\t}\n\t\t}\n\t};\n\n\t// This command takes in the editor index number to open as an argument\n\tCommandsRegistry.registerCommand({\n\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID,\n\t\thandler: openEditorAtIndex\n\t});\n\n\t// Keybindings to focus a specific index in the tab folder if tabs are enabled\n\tfor (let i = 0; i < 9; i++) {\n\t\tconst editorIndex = i;\n\t\tconst visibleIndex = i + 1;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID + visibleIndex,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.Alt | toKeyCode(visibleIndex),\n\t\t\tmac: { primary: KeyMod.WinCtrl | toKeyCode(visibleIndex) },\n\t\t\thandler: accessor => openEditorAtIndex(accessor, editorIndex)\n\t\t});\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 0: return KeyCode.KEY_0;\n\t\t\tcase 1: return KeyCode.KEY_1;\n\t\t\tcase 2: return KeyCode.KEY_2;\n\t\t\tcase 3: return KeyCode.KEY_3;\n\t\t\tcase 4: return KeyCode.KEY_4;\n\t\t\tcase 5: return KeyCode.KEY_5;\n\t\t\tcase 6: return KeyCode.KEY_6;\n\t\t\tcase 7: return KeyCode.KEY_7;\n\t\t\tcase 8: return KeyCode.KEY_8;\n\t\t\tcase 9: return KeyCode.KEY_9;\n\t\t}\n\n\t\tthrow new Error('invalid index');\n\t}\n}\n\nfunction registerFocusEditorGroupAtIndexCommands(): void {\n\n\t// Keybindings to focus a specific group (2-8) in the editor area\n\tfor (let groupIndex = 1; groupIndex < 8; groupIndex++) {\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: toCommandId(groupIndex),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.CtrlCmd | toKeyCode(groupIndex),\n\t\t\thandler: accessor => {\n\t\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\t\t// To keep backwards compatibility (pre-grid), allow to focus a group\n\t\t\t\t// that does not exist as long as it is the next group after the last\n\t\t\t\t// opened group. Otherwise we return.\n\t\t\t\tif (groupIndex > editorGroupService.count) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Group exists: just focus\n\t\t\t\tconst groups = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\t\t\tif (groups[groupIndex]) {\n\t\t\t\t\treturn groups[groupIndex].focus();\n\t\t\t\t}\n\n\t\t\t\t// Group does not exist: create new by splitting the active one of the last group\n\t\t\t\tconst direction = preferredSideBySideGroupDirection(configurationService);\n\t\t\t\tconst lastGroup = editorGroupService.findGroup({ location: GroupLocation.LAST });\n\t\t\t\tconst newGroup = editorGroupService.addGroup(lastGroup, direction);\n\n\t\t\t\t// Focus\n\t\t\t\tnewGroup.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction toCommandId(index: number): string {\n\t\tswitch (index) {\n\t\t\tcase 1: return 'workbench.action.focusSecondEditorGroup';\n\t\t\tcase 2: return 'workbench.action.focusThirdEditorGroup';\n\t\t\tcase 3: return 'workbench.action.focusFourthEditorGroup';\n\t\t\tcase 4: return 'workbench.action.focusFifthEditorGroup';\n\t\t\tcase 5: return 'workbench.action.focusSixthEditorGroup';\n\t\t\tcase 6: return 'workbench.action.focusSeventhEditorGroup';\n\t\t\tcase 7: return 'workbench.action.focusEighthEditorGroup';\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 1: return KeyCode.KEY_2;\n\t\t\tcase 2: return KeyCode.KEY_3;\n\t\t\tcase 3: return KeyCode.KEY_4;\n\t\t\tcase 4: return KeyCode.KEY_5;\n\t\t\tcase 5: return KeyCode.KEY_6;\n\t\t\tcase 6: return KeyCode.KEY_7;\n\t\t\tcase 7: return KeyCode.KEY_8;\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n}\n\nexport function splitEditor(editorGroupService: IEditorGroupsService, direction: GroupDirection, context?: IEditorCommandsContext): void {\n\tlet sourceGroup: IEditorGroup | undefined;\n\tif (context && typeof context.groupId === 'number') {\n\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t} else {\n\t\tsourceGroup = editorGroupService.activeGroup;\n\t}\n\n\tif (!sourceGroup) {\n\t\treturn;\n\t}\n\n\t// Add group\n\tconst newGroup = editorGroupService.addGroup(sourceGroup, direction);\n\n\t// Split editor (if it can be split)\n\tlet editorToCopy: IEditorInput | undefined;\n\tif (context && typeof context.editorIndex === 'number') {\n\t\teditorToCopy = sourceGroup.getEditorByIndex(context.editorIndex);\n\t} else {\n\t\teditorToCopy = withNullAsUndefined(sourceGroup.activeEditor);\n\t}\n\n\t// Copy the editor to the new group, else move the editor to the new group\n\tif (editorToCopy && (editorToCopy as EditorInput).canSplit()) {\n\t\tsourceGroup.copyEditor(editorToCopy, newGroup);\n\t\t// Focus\n\t\tnewGroup.focus();\n\t}\n\n}\n\nfunction registerSplitEditorCommands() {\n\t[\n\t\t{ id: SPLIT_EDITOR_UP, direction: GroupDirection.UP },\n\t\t{ id: SPLIT_EDITOR_DOWN, direction: GroupDirection.DOWN },\n\t\t{ id: SPLIT_EDITOR_LEFT, direction: GroupDirection.LEFT },\n\t\t{ id: SPLIT_EDITOR_RIGHT, direction: GroupDirection.RIGHT }\n\t].forEach(({ id, direction }) => {\n\t\tCommandsRegistry.registerCommand(id, function (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) {\n\t\t\tsplitEditor(accessor.get(IEditorGroupsService), direction, getCommandsContext(resourceOrContext, context));\n\t\t});\n\t});\n}\n\nfunction registerCloseEditorCommands() {\n\n\t// A special handler for \"Close Editor\" depending on context\n\t// - keybindining: do not close sticky editors, rather open the next non-sticky editor\n\t// - menu: always close editor, even sticky ones\n\tfunction closeEditorHandler(accessor: ServicesAccessor, forceCloseStickyEditors: boolean, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<unknown> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tlet keepStickyEditors = true;\n\t\tif (forceCloseStickyEditors) {\n\t\t\tkeepStickyEditors = false; // explicitly close sticky editors\n\t\t} else if (resourceOrContext || context) {\n\t\t\tkeepStickyEditors = false; // we have a context, as such this command was used e.g. from the tab context menu\n\t\t}\n\n\t\t// Without context: skip over sticky editor and select next if active editor is sticky\n\t\tif (keepStickyEditors && !resourceOrContext && !context) {\n\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\tconst activeEditor = activeGroup.activeEditor;\n\n\t\t\tif (activeEditor && activeGroup.isSticky(activeEditor)) {\n\n\t\t\t\t// Open next recently active in same group\n\t\t\t\tconst nextNonStickyEditorInGroup = activeGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInGroup) {\n\t\t\t\t\treturn activeGroup.openEditor(nextNonStickyEditorInGroup);\n\t\t\t\t}\n\n\t\t\t\t// Open next recently active across all groups\n\t\t\t\tconst nextNonStickyEditorInAllGroups = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInAllGroups) {\n\t\t\t\t\treturn Promise.resolve(editorGroupsService.getGroup(nextNonStickyEditorInAllGroups.groupId)?.openEditor(nextNonStickyEditorInAllGroups.editor));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// With context: proceed to close editors as instructed\n\t\tconst { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n\n\t\treturn Promise.all(groups.map(async group => {\n\t\t\tif (group) {\n\t\t\t\tconst editorsToClose = coalesce(editors\n\t\t\t\t\t.filter(editor => editor.groupId === group.id)\n\t\t\t\t\t.map(editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor))\n\t\t\t\t\t.filter(editor => !keepStickyEditors || !group.isSticky(editor));\n\n\t\t\t\treturn group.closeEditors(editorsToClose);\n\t\t\t}\n\t\t}));\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_W,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KEY_W] },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn closeEditorHandler(accessor, false, resourceOrContext, context);\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_PINNED_EDITOR_COMMAND_ID, (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\treturn closeEditorHandler(accessor, true /* force close pinned editors */, resourceOrContext, context);\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_W),\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn Promise.all(getEditorsContext(accessor, resourceOrContext, context).groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\treturn group.closeAllEditors({ excludeSticky: true });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_W,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KEY_W] },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst commandsContext = getCommandsContext(resourceOrContext, context);\n\n\t\t\tlet group: IEditorGroup | undefined;\n\t\t\tif (commandsContext && typeof commandsContext.groupId === 'number') {\n\t\t\t\tgroup = editorGroupService.getGroup(commandsContext.groupId);\n\t\t\t} else {\n\t\t\t\tgroup = editorGroupService.activeGroup;\n\t\t\t}\n\n\t\t\tif (group) {\n\t\t\t\teditorGroupService.removeGroup(group);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_SAVED_EDITORS_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_U),\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn Promise.all(getEditorsContext(accessor, resourceOrContext, context).groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\treturn group.closeEditors({ savedOnly: true, excludeSticky: true });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_T },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n\t\t\treturn Promise.all(groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\tconst editorsToKeep = editors\n\t\t\t\t\t\t.filter(editor => editor.groupId === group.id)\n\t\t\t\t\t\t.map(editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor);\n\n\t\t\t\t\tconst editorsToClose = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).filter(editor => !editorsToKeep.includes(editor));\n\n\t\t\t\t\tfor (const editorToKeep of editorsToKeep) {\n\t\t\t\t\t\tif (editorToKeep) {\n\t\t\t\t\t\t\tgroup.pinEditor(editorToKeep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn group.closeEditors(editorsToClose);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\tif (group.activeEditor) {\n\t\t\t\t\tgroup.pinEditor(group.activeEditor);\n\t\t\t\t}\n\n\t\t\t\treturn group.closeEditors({ direction: CloseDirection.RIGHT, except: editor, excludeSticky: true });\n\t\t\t}\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, async (accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\tif (group) {\n\t\t\tawait group.closeAllEditors();\n\n\t\t\tif (group.count === 0 && editorGroupService.getGroup(group.id) /* could be gone by now */) {\n\t\t\t\teditorGroupService.removeGroup(group); // only remove group if it is now empty\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction registerFocusEditorGroupWihoutWrapCommands(): void {\n\n\tconst commands = [\n\t\t{\n\t\t\tid: FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.LEFT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.RIGHT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.UP,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.DOWN\n\t\t}\n\t];\n\n\tfor (const command of commands) {\n\t\tCommandsRegistry.registerCommand(command.id, async (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst group = editorGroupService.findGroup({ direction: command.direction }, editorGroupService.activeGroup, false);\n\t\t\tif (group) {\n\t\t\t\tgroup.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerOtherEditorCommands(): void {\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: KEEP_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.pinEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: TOGGLE_KEEP_EDITORS_COMMAND_ID,\n\t\thandler: accessor => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst currentSetting = configurationService.getValue<boolean>('workbench.editor.enablePreview');\n\t\t\tconst newSetting = currentSetting === true ? false : true;\n\t\t\tconfigurationService.updateValue('workbench.editor.enablePreview', newSetting);\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: PIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext.toNegated(),\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.stickEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: UNPIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.unstickEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: SHOW_EDITORS_IN_GROUP,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst commandsContext = getCommandsContext(resourceOrContext, context);\n\t\t\tif (commandsContext && typeof commandsContext.groupId === 'number') {\n\t\t\t\tconst group = editorGroupService.getGroup(commandsContext.groupId);\n\t\t\t\tif (group) {\n\t\t\t\t\teditorGroupService.activateGroup(group); // we need the group to be active\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn quickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n\t\t}\n\t});\n}\n\nfunction getEditorsContext(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): { editors: IEditorCommandsContext[], groups: Array<IEditorGroup | undefined> } {\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst listService = accessor.get(IListService);\n\n\tconst editorContext = getMultiSelectedEditorContexts(getCommandsContext(resourceOrContext, context), listService, editorGroupService);\n\n\tconst activeGroup = editorGroupService.activeGroup;\n\tif (editorContext.length === 0 && activeGroup.activeEditor) {\n\t\t// add the active editor as fallback\n\t\teditorContext.push({\n\t\t\tgroupId: activeGroup.id,\n\t\t\teditorIndex: activeGroup.getIndexOfEditor(activeGroup.activeEditor)\n\t\t});\n\t}\n\n\treturn {\n\t\teditors: editorContext,\n\t\tgroups: distinct(editorContext.map(context => context.groupId)).map(groupId => editorGroupService.getGroup(groupId))\n\t};\n}\n\nfunction getCommandsContext(resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): IEditorCommandsContext | undefined {\n\tif (URI.isUri(resourceOrContext)) {\n\t\treturn context;\n\t}\n\n\tif (resourceOrContext && typeof resourceOrContext.groupId === 'number') {\n\t\treturn resourceOrContext;\n\t}\n\n\tif (context && typeof context.groupId === 'number') {\n\t\treturn context;\n\t}\n\n\treturn undefined;\n}\n\nfunction resolveCommandsContext(editorGroupService: IEditorGroupsService, context?: IEditorCommandsContext): { group: IEditorGroup, editor?: IEditorInput } {\n\n\t// Resolve from context\n\tlet group = context && typeof context.groupId === 'number' ? editorGroupService.getGroup(context.groupId) : undefined;\n\tlet editor = group && context && typeof context.editorIndex === 'number' ? withNullAsUndefined(group.getEditorByIndex(context.editorIndex)) : undefined;\n\n\t// Fallback to active group as needed\n\tif (!group) {\n\t\tgroup = editorGroupService.activeGroup;\n\t}\n\n\t// Fallback to active editor as needed\n\tif (!editor) {\n\t\teditor = withNullAsUndefined(group.activeEditor);\n\t}\n\n\treturn { group, editor };\n}\n\nexport function getMultiSelectedEditorContexts(editorContext: IEditorCommandsContext | undefined, listService: IListService, editorGroupService: IEditorGroupsService): IEditorCommandsContext[] {\n\n\t// First check for a focused list to return the selected items from\n\tconst list = listService.lastFocusedList;\n\tif (list instanceof List && list.getHTMLElement() === document.activeElement) {\n\t\tconst elementToContext = (element: IEditorIdentifier | IEditorGroup) => {\n\t\t\tif (isEditorGroup(element)) {\n\t\t\t\treturn { groupId: element.id, editorIndex: undefined };\n\t\t\t}\n\n\t\t\tconst group = editorGroupService.getGroup(element.groupId);\n\n\t\t\treturn { groupId: element.groupId, editorIndex: group ? group.getIndexOfEditor(element.editor) : -1 };\n\t\t};\n\n\t\tconst onlyEditorGroupAndEditor = (e: IEditorIdentifier | IEditorGroup) => isEditorGroup(e) || isEditorIdentifier(e);\n\n\t\tconst focusedElements: Array<IEditorIdentifier | IEditorGroup> = list.getFocusedElements().filter(onlyEditorGroupAndEditor);\n\t\tconst focus = editorContext ? editorContext : focusedElements.length ? focusedElements.map(elementToContext)[0] : undefined; // need to take into account when editor context is { group: group }\n\n\t\tif (focus) {\n\t\t\tconst selection: Array<IEditorIdentifier | IEditorGroup> = list.getSelectedElements().filter(onlyEditorGroupAndEditor);\n\n\t\t\t// Only respect selection if it contains focused element\n\t\t\tif (selection?.some(s => {\n\t\t\t\tif (isEditorGroup(s)) {\n\t\t\t\t\treturn s.id === focus.groupId;\n\t\t\t\t}\n\n\t\t\t\tconst group = editorGroupService.getGroup(s.groupId);\n\t\t\t\treturn s.groupId === focus.groupId && (group ? group.getIndexOfEditor(s.editor) : -1) === focus.editorIndex;\n\t\t\t})) {\n\t\t\t\treturn selection.map(elementToContext);\n\t\t\t}\n\n\t\t\treturn [focus];\n\t\t}\n\t}\n\n\t// Otherwise go with passed in context\n\treturn !!editorContext ? [editorContext] : [];\n}\n\nfunction isEditorGroup(thing: unknown): thing is IEditorGroup {\n\tconst group = thing as IEditorGroup;\n\n\treturn group && typeof group.id === 'number' && Array.isArray(group.editors);\n}\n\nfunction isEditorIdentifier(thing: unknown): thing is IEditorIdentifier {\n\tconst identifier = thing as IEditorIdentifier;\n\n\treturn identifier && typeof identifier.groupId === 'number';\n}\n\nexport function setup(): void {\n\tregisterActiveEditorMoveCommand();\n\tregisterEditorGroupsLayoutCommand();\n\tregisterDiffEditorCommands();\n\tregisterOpenEditorAPICommands();\n\tregisterOpenEditorAtIndexCommands();\n\tregisterCloseEditorCommands();\n\tregisterOtherEditorCommands();\n\tregisterFocusEditorGroupAtIndexCommands();\n\tregisterSplitEditorCommands();\n\tregisterFocusEditorGroupWihoutWrapCommands();\n}\n"]}