{"version":3,"file":"noTabsTitleControl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/parts/editor/noTabsTitleControl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/notabstitlecontrol';\nimport { EditorResourceAccessor, Verbosity, IEditorInput, IEditorPartOptions, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { TitleControl, IToolbarActions, ITitleControlDimensions } from 'vs/workbench/browser/parts/editor/titleControl';\nimport { ResourceLabel, IResourceLabel } from 'vs/workbench/browser/labels';\nimport { TAB_ACTIVE_FOREGROUND, TAB_UNFOCUSED_ACTIVE_FOREGROUND } from 'vs/workbench/common/theme';\nimport { EventType as TouchEventType, GestureEvent, Gesture } from 'vs/base/browser/touch';\nimport { addDisposableListener, EventType, EventHelper, Dimension, isAncestor } from 'vs/base/browser/dom';\nimport { IAction } from 'vs/base/common/actions';\nimport { CLOSE_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { Color } from 'vs/base/common/color';\nimport { withNullAsUndefined, assertIsDefined, assertAllDefined } from 'vs/base/common/types';\nimport { IEditorGroupTitleHeight } from 'vs/workbench/browser/parts/editor/editor';\nimport { equals } from 'vs/base/common/objects';\nimport { toDisposable } from 'vs/base/common/lifecycle';\n\ninterface IRenderedEditorLabel {\n\teditor?: IEditorInput;\n\tpinned: boolean;\n}\n\nexport class NoTabsTitleControl extends TitleControl {\n\n\tprivate static readonly HEIGHT = 35;\n\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate editorLabel: IResourceLabel | undefined;\n\tprivate activeLabel: IRenderedEditorLabel = Object.create(null);\n\n\tprotected create(parent: HTMLElement): void {\n\t\tconst titleContainer = this.titleContainer = parent;\n\t\ttitleContainer.draggable = true;\n\n\t\t//Container listeners\n\t\tthis.registerContainerListeners(titleContainer);\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(titleContainer));\n\n\t\tconst labelContainer = document.createElement('div');\n\t\tlabelContainer.classList.add('label-container');\n\t\ttitleContainer.appendChild(labelContainer);\n\n\t\t// Editor Label\n\t\tthis.editorLabel = this._register(this.instantiationService.createInstance(ResourceLabel, labelContainer, undefined)).element;\n\t\tthis._register(addDisposableListener(this.editorLabel.element, EventType.CLICK, e => this.onTitleLabelClick(e)));\n\n\t\t// Breadcrumbs\n\t\tthis.createBreadcrumbsControl(labelContainer, { showFileIcons: false, showSymbolIcons: true, showDecorationColors: false, breadcrumbsBackground: () => Color.transparent, showPlaceholder: false });\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\t\tthis._register(toDisposable(() => titleContainer.classList.remove('breadcrumbs'))); // important to remove because the container is a shared dom node\n\n\t\t// Right Actions Container\n\t\tconst actionsContainer = document.createElement('div');\n\t\tactionsContainer.classList.add('title-actions');\n\t\ttitleContainer.appendChild(actionsContainer);\n\n\t\t// Editor actions toolbar\n\t\tthis.createEditorActionsToolBar(actionsContainer);\n\t}\n\n\tprivate registerContainerListeners(titleContainer: HTMLElement): void {\n\n\t\t// Group dragging\n\t\tthis.enableGroupDragging(titleContainer);\n\n\t\t// Pin on double click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.DBLCLICK, e => this.onTitleDoubleClick(e)));\n\n\t\t// Detect mouse click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.AUXCLICK, e => this.onTitleAuxClick(e)));\n\n\t\t// Detect touch\n\t\tthis._register(addDisposableListener(titleContainer, TouchEventType.Tap, (e: GestureEvent) => this.onTitleTap(e)));\n\n\t\t// Context Menu\n\t\tthis._register(addDisposableListener(titleContainer, EventType.CONTEXT_MENU, e => {\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tthis.onContextMenu(this.group.activeEditor, e, titleContainer);\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(titleContainer, TouchEventType.Contextmenu, (e: Event) => {\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tthis.onContextMenu(this.group.activeEditor, e, titleContainer);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onTitleLabelClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e, false);\n\n\t\t// delayed to let the onTitleClick() come first which can cause a focus change which can close quick access\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show());\n\t}\n\n\tprivate onTitleDoubleClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e);\n\n\t\tthis.group.pinEditor();\n\t}\n\n\tprivate onTitleAuxClick(e: MouseEvent): void {\n\t\tif (e.button === 1 /* Middle Button */ && this.group.activeEditor) {\n\t\t\tEventHelper.stop(e, true /* for https://github.com/microsoft/vscode/issues/56715 */);\n\n\t\t\tthis.group.closeEditor(this.group.activeEditor);\n\t\t}\n\t}\n\n\tprivate onTitleTap(e: GestureEvent): void {\n\n\t\t// We only want to open the quick access picker when\n\t\t// the tap occured over the editor label, so we need\n\t\t// to check on the target\n\t\t// (https://github.com/microsoft/vscode/issues/107543)\n\t\tconst target = e.initialTarget;\n\t\tif (!(target instanceof HTMLElement) || !this.editorLabel || !isAncestor(target, this.editorLabel.element)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix gesture tap should open the quick access\n\t\t// editorGroupView will focus on the editor again when there are mouse/pointer/touch down events\n\t\t// we need to wait a bit as `GesureEvent.Tap` is generated from `touchstart` and then `touchend` evnets, which are not an atom event.\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show(), 50);\n\t}\n\n\topenEditor(editor: IEditorInput): void {\n\t\tconst activeEditorChanged = this.ifActiveEditorChanged(() => this.redraw());\n\t\tif (!activeEditorChanged) {\n\t\t\tthis.ifActiveEditorPropertiesChanged(() => this.redraw());\n\t\t}\n\t}\n\n\tcloseEditor(editor: IEditorInput): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseEditors(editors: IEditorInput[]): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tmoveEditor(editor: IEditorInput, fromIndex: number, targetIndex: number): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tpinEditor(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tstickEditor(editor: IEditorInput): void {\n\t\t// Sticky editors are not presented any different with tabs disabled\n\t}\n\n\tunstickEditor(editor: IEditorInput): void {\n\t\t// Sticky editors are not presented any different with tabs disabled\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.redraw();\n\t}\n\n\tupdateEditorLabel(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tupdateEditorLabels(): void {\n\t\tif (this.group.activeEditor) {\n\t\t\tthis.updateEditorLabel(this.group.activeEditor); // we only have the active one to update\n\t\t}\n\t}\n\n\tupdateEditorDirty(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => {\n\t\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\n\t\t\t// Signal dirty (unless saving)\n\t\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\t\ttitleContainer.classList.add('dirty');\n\t\t\t}\n\n\t\t\t// Otherwise, clear dirty\n\t\t\telse {\n\t\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat || !equals(oldOptions.decorations, newOptions.decorations)) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprotected handleBreadcrumbsEnablementChange(): void {\n\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\n\t\tthis.redraw();\n\t}\n\n\tprivate ifActiveEditorChanged(fn: () => void): boolean {\n\t\tif (\n\t\t\t!this.activeLabel.editor && this.group.activeEditor || \t// active editor changed from null => editor\n\t\t\tthis.activeLabel.editor && !this.group.activeEditor || \t// active editor changed from editor => null\n\t\t\t(!this.activeLabel.editor || !this.group.isActive(this.activeLabel.editor))\t\t\t// active editor changed from editorA => editorB\n\t\t) {\n\t\t\tfn();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate ifActiveEditorPropertiesChanged(fn: () => void): void {\n\t\tif (!this.activeLabel.editor || !this.group.activeEditor) {\n\t\t\treturn; // need an active editor to check for properties changed\n\t\t}\n\n\t\tif (this.activeLabel.pinned !== this.group.isPinned(this.group.activeEditor)) {\n\t\t\tfn(); // only run if pinned state has changed\n\t\t}\n\t}\n\n\tprivate ifEditorIsActive(editor: IEditorInput, fn: () => void): void {\n\t\tif (this.group.isActive(editor)) {\n\t\t\tfn();  // only run if editor is current active\n\t\t}\n\t}\n\n\tprivate redraw(): void {\n\t\tconst editor = withNullAsUndefined(this.group.activeEditor);\n\t\tconst options = this.accessor.partOptions;\n\n\t\tconst isEditorPinned = editor ? this.group.isPinned(editor) : false;\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\tthis.activeLabel = { editor, pinned: isEditorPinned };\n\n\t\t// Update Breadcrumbs\n\t\tif (this.breadcrumbsControl) {\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\tthis.breadcrumbsControl.domNode.classList.toggle('preview', !isEditorPinned);\n\t\t\t} else {\n\t\t\t\tthis.breadcrumbsControl.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Clear if there is no editor\n\t\tconst [titleContainer, editorLabel] = assertAllDefined(this.titleContainer, this.editorLabel);\n\t\tif (!editor) {\n\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\teditorLabel.clear();\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t}\n\n\t\t// Otherwise render it\n\t\telse {\n\n\t\t\t// Dirty state\n\t\t\tthis.updateEditorDirty(editor);\n\n\t\t\t// Editor Label\n\t\t\tconst { labelFormat } = this.accessor.partOptions;\n\t\t\tlet description: string;\n\t\t\tif (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden()) {\n\t\t\t\tdescription = ''; // hide description when showing breadcrumbs\n\t\t\t} else if (labelFormat === 'default' && !isGroupActive) {\n\t\t\t\tdescription = ''; // hide description when group is not active and style is 'default'\n\t\t\t} else {\n\t\t\t\tdescription = editor.getDescription(this.getVerbosity(labelFormat)) || '';\n\t\t\t}\n\n\t\t\tlet title = editor.getTitle(Verbosity.LONG);\n\t\t\tif (description === title) {\n\t\t\t\ttitle = ''; // dont repeat what is already shown\n\t\t\t}\n\n\t\t\teditorLabel.setResource(\n\t\t\t\t{\n\t\t\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH }),\n\t\t\t\t\tname: editor.getName(),\n\t\t\t\t\tdescription\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle,\n\t\t\t\t\titalic: !isEditorPinned,\n\t\t\t\t\textraClasses: ['no-tabs', 'title-label'],\n\t\t\t\t\tfileDecorations: {\n\t\t\t\t\t\tcolors: Boolean(options.decorations?.colors),\n\t\t\t\t\t\tbadges: Boolean(options.decorations?.badges)\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isGroupActive) {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_ACTIVE_FOREGROUND) || '';\n\t\t\t} else {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_UNFOCUSED_ACTIVE_FOREGROUND) || '';\n\t\t\t}\n\n\t\t\t// Update Editor Actions Toolbar\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\t}\n\n\tprivate getVerbosity(style: string | undefined): Verbosity {\n\t\tswitch (style) {\n\t\t\tcase 'short': return Verbosity.SHORT;\n\t\t\tcase 'long': return Verbosity.LONG;\n\t\t\tdefault: return Verbosity.MEDIUM;\n\t\t}\n\t}\n\n\tprotected override prepareEditorActions(editorActions: IToolbarActions): { primaryEditorActions: IAction[], secondaryEditorActions: IAction[] } {\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\t// Group active: show all actions\n\t\tif (isGroupActive) {\n\t\t\treturn super.prepareEditorActions(editorActions);\n\t\t}\n\n\t\t// Group inactive: only show close action\n\t\treturn { primaryEditorActions: editorActions.primary.filter(action => action.id === CLOSE_EDITOR_COMMAND_ID), secondaryEditorActions: [] };\n\t}\n\n\tgetHeight(): IEditorGroupTitleHeight {\n\t\treturn {\n\t\t\ttotal: NoTabsTitleControl.HEIGHT,\n\t\t\toffset: 0\n\t\t};\n\t}\n\n\tlayout(dimensions: ITitleControlDimensions): Dimension {\n\t\tthis.breadcrumbsControl?.layout(undefined);\n\n\t\treturn new Dimension(dimensions.container.width, this.getHeight().total);\n\t}\n}\n"]}