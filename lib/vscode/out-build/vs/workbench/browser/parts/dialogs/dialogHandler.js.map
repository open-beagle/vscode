{"version":3,"sources":["vs/workbench/browser/parts/dialogs/dialogHandler.ts"],"names":[],"mappings":"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","file":"dialogHandler.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IDialogOptions, IConfirmation, IConfirmationResult, DialogType, IShowResult, IInputResult, ICheckbox, IInput, IDialogHandler, ICustomDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport Severity from 'vs/base/common/severity';\nimport { Dialog, IDialogResult } from 'vs/base/browser/ui/dialog/dialog';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachDialogStyler } from 'vs/platform/theme/common/styler';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { EventHelper } from 'vs/base/browser/dom';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { fromNow } from 'vs/base/common/date';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { MarkdownRenderer } from 'vs/editor/browser/core/markdownRenderer';\n\nexport class BrowserDialogHandler implements IDialogHandler {\n\n\tprivate static readonly ALLOWABLE_COMMANDS = [\n\t\t'copy',\n\t\t'cut',\n\t\t'editor.action.selectAll',\n\t\t'editor.action.clipboardCopyAction',\n\t\t'editor.action.clipboardCutAction',\n\t\t'editor.action.clipboardPasteAction'\n\t];\n\n\tprivate readonly markdownRenderer: MarkdownRenderer;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tthis.markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n\t}\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tthis.logService.trace('DialogService#confirm', confirmation.message);\n\n\t\tconst buttons: string[] = [];\n\t\tif (confirmation.primaryButton) {\n\t\t\tbuttons.push(confirmation.primaryButton);\n\t\t} else {\n\t\t\tbuttons.push(localize({ key: 'yesButton', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"));\n\t\t}\n\n\t\tif (confirmation.secondaryButton) {\n\t\t\tbuttons.push(confirmation.secondaryButton);\n\t\t} else if (typeof confirmation.secondaryButton === 'undefined') {\n\t\t\tbuttons.push(localize('cancelButton', \"Cancel\"));\n\t\t}\n\n\t\tconst result = await this.doShow(confirmation.type, confirmation.message, buttons, confirmation.detail, 1, confirmation.checkbox);\n\n\t\treturn { confirmed: result.button === 0, checkboxChecked: result.checkboxChecked };\n\t}\n\n\tprivate getDialogType(severity: Severity): DialogType {\n\t\treturn (severity === Severity.Info) ? 'question' : (severity === Severity.Error) ? 'error' : (severity === Severity.Warning) ? 'warning' : 'none';\n\t}\n\n\tasync show(severity: Severity, message: string, buttons: string[], options?: IDialogOptions): Promise<IShowResult> {\n\t\tthis.logService.trace('DialogService#show', message);\n\n\t\tconst result = await this.doShow(this.getDialogType(severity), message, buttons, options?.detail, options?.cancelId, options?.checkbox, undefined, typeof options?.custom === 'object' ? options.custom : undefined);\n\n\t\treturn {\n\t\t\tchoice: result.button,\n\t\t\tcheckboxChecked: result.checkboxChecked\n\t\t};\n\t}\n\n\tprivate async doShow(type: 'none' | 'info' | 'error' | 'question' | 'warning' | 'pending' | undefined, message: string, buttons: string[], detail?: string, cancelId?: number, checkbox?: ICheckbox, inputs?: IInput[], customOptions?: ICustomDialogOptions): Promise<IDialogResult> {\n\t\tconst dialogDisposables = new DisposableStore();\n\n\t\tconst renderBody = customOptions ? (parent: HTMLElement) => {\n\t\t\tparent.classList.add(...(customOptions.classes || []));\n\t\t\t(customOptions.markdownDetails || []).forEach(markdownDetail => {\n\t\t\t\tconst result = this.markdownRenderer.render(markdownDetail.markdown);\n\t\t\t\tparent.appendChild(result.element);\n\t\t\t\tresult.element.classList.add(...(markdownDetail.classes || []));\n\t\t\t\tdialogDisposables.add(result);\n\t\t\t});\n\t\t} : undefined;\n\n\t\tconst dialog = new Dialog(\n\t\t\tthis.layoutService.container,\n\t\t\tmessage,\n\t\t\tbuttons,\n\t\t\t{\n\t\t\t\tdetail,\n\t\t\t\tcancelId,\n\t\t\t\ttype,\n\t\t\t\tkeyEventProcessor: (event: StandardKeyboardEvent) => {\n\t\t\t\t\tconst resolved = this.keybindingService.softDispatch(event, this.layoutService.container);\n\t\t\t\t\tif (resolved?.commandId) {\n\t\t\t\t\t\tif (BrowserDialogHandler.ALLOWABLE_COMMANDS.indexOf(resolved.commandId) === -1) {\n\t\t\t\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trenderBody,\n\t\t\t\ticon: customOptions?.icon,\n\t\t\t\tdisableCloseAction: customOptions?.disableCloseAction,\n\t\t\t\tbuttonDetails: customOptions?.buttonDetails,\n\t\t\t\tcheckboxLabel: checkbox?.label,\n\t\t\t\tcheckboxChecked: checkbox?.checked,\n\t\t\t\tinputs\n\t\t\t});\n\n\t\tdialogDisposables.add(dialog);\n\t\tdialogDisposables.add(attachDialogStyler(dialog, this.themeService));\n\n\t\tconst result = await dialog.show();\n\t\tdialogDisposables.dispose();\n\n\t\treturn result;\n\t}\n\n\tasync input(severity: Severity, message: string, buttons: string[], inputs: IInput[], options?: IDialogOptions): Promise<IInputResult> {\n\t\tthis.logService.trace('DialogService#input', message);\n\n\t\tconst result = await this.doShow(this.getDialogType(severity), message, buttons, options?.detail, options?.cancelId, options?.checkbox, inputs);\n\n\t\treturn {\n\t\t\tchoice: result.button,\n\t\t\tcheckboxChecked: result.checkboxChecked,\n\t\t\tvalues: result.values\n\t\t};\n\t}\n\n\tasync about(): Promise<void> {\n\t\tconst detailString = (useAgo: boolean): string => {\n\t\t\treturn localize('aboutDetail',\n\t\t\t\t\"code-server: v{4}\\n VS Code: v{0}\\nCommit: {1}\\nDate: {2}\\nBrowser: {3}\",\n\t\t\t\tthis.productService.version || 'Unknown',\n\t\t\t\tthis.productService.commit || 'Unknown',\n\t\t\t\tthis.productService.date ? `${this.productService.date}${useAgo ? ' (' + fromNow(new Date(this.productService.date), true) + ')' : ''}` : 'Unknown',\n\t\t\t\tnavigator.userAgent,\n\t\t\t\tthis.productService.codeServerVersion || 'Unknown',\n\t\t\t);\n\t\t};\n\n\t\tconst detail = detailString(true);\n\t\tconst detailToCopy = detailString(false);\n\n\n\t\tconst { choice } = await this.show(Severity.Info, this.productService.nameLong, [localize('copy', \"Copy\"), localize('ok', \"OK\")], { detail, cancelId: 1 });\n\n\t\tif (choice === 0) {\n\t\t\tthis.clipboardService.writeText(detailToCopy);\n\t\t}\n\t}\n}\n"]}