{"version":3,"file":"dialog.web.contribution.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/parts/dialogs/dialog.web.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IDialogHandler, IDialogResult, IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IDialogsModel, IDialogViewItem } from 'vs/workbench/common/dialogs';\nimport { BrowserDialogHandler } from 'vs/workbench/browser/parts/dialogs/dialogHandler';\nimport { DialogService } from 'vs/workbench/services/dialogs/common/dialogService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport class DialogHandlerContribution extends Disposable implements IWorkbenchContribution {\n\tprivate readonly model: IDialogsModel;\n\tprivate readonly impl: IDialogHandler;\n\n\tprivate currentDialog: IDialogViewItem | undefined;\n\n\tconstructor(\n\t\t@IDialogService private dialogService: IDialogService,\n\t\t@ILogService logService: ILogService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IProductService productService: IProductService,\n\t\t@IClipboardService clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\n\t\tthis.impl = new BrowserDialogHandler(logService, layoutService, themeService, keybindingService, instantiationService, productService, clipboardService);\n\n\t\tthis.model = (this.dialogService as DialogService).model;\n\n\t\tthis._register(this.model.onDidShowDialog(() => {\n\t\t\tif (!this.currentDialog) {\n\t\t\t\tthis.processDialogs();\n\t\t\t}\n\t\t}));\n\n\t\tthis.processDialogs();\n\t}\n\n\tprivate async processDialogs(): Promise<void> {\n\t\twhile (this.model.dialogs.length) {\n\t\t\tthis.currentDialog = this.model.dialogs[0];\n\n\t\t\tlet result: IDialogResult | undefined = undefined;\n\t\t\tif (this.currentDialog.args.confirmArgs) {\n\t\t\t\tconst args = this.currentDialog.args.confirmArgs;\n\t\t\t\tresult = await this.impl.confirm(args.confirmation);\n\t\t\t} else if (this.currentDialog.args.inputArgs) {\n\t\t\t\tconst args = this.currentDialog.args.inputArgs;\n\t\t\t\tresult = await this.impl.input(args.severity, args.message, args.buttons, args.inputs, args.options);\n\t\t\t} else if (this.currentDialog.args.showArgs) {\n\t\t\t\tconst args = this.currentDialog.args.showArgs;\n\t\t\t\tresult = await this.impl.show(args.severity, args.message, args.buttons, args.options);\n\t\t\t} else {\n\t\t\t\tawait this.impl.about();\n\t\t\t}\n\n\t\t\tthis.currentDialog.close(result);\n\t\t\tthis.currentDialog = undefined;\n\t\t}\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(DialogHandlerContribution, LifecyclePhase.Starting);\n"]}