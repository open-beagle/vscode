{"version":3,"file":"layout.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/layout.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { EventType, addDisposableListener, getClientArea, Dimension, position, size, IDimension, isAncestorUsingFlowTo } from 'vs/base/browser/dom';\nimport { onDidChangeFullscreen, isFullscreen } from 'vs/base/browser/browser';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { isWindows, isLinux, isMacintosh, isWeb, isNative } from 'vs/base/common/platform';\nimport { pathsToEditors, SideBySideEditorInput } from 'vs/workbench/common/editor';\nimport { SidebarPart } from 'vs/workbench/browser/parts/sidebar/sidebarPart';\nimport { PanelPart } from 'vs/workbench/browser/parts/panel/panelPart';\nimport { PanelRegistry, Extensions as PanelExtensions } from 'vs/workbench/browser/panel';\nimport { Position, Parts, PanelOpensMaximizedOptions, IWorkbenchLayoutService, positionFromString, positionToString, panelOpensMaximizedFromString } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IStorageService, StorageScope, StorageTarget, WillSaveStateReason } from 'vs/platform/storage/common/storage';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { ITitleService } from 'vs/workbench/services/title/common/titleService';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { StartupKind, ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { MenuBarVisibility, getTitleBarStyle, getMenuBarVisibility, IPath } from 'vs/platform/windows/common/windows';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IEditorService, IResourceEditorInputType } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { SerializableGrid, ISerializableView, ISerializedGrid, Orientation, ISerializedNode, ISerializedLeafNode, Direction, IViewSize } from 'vs/base/browser/ui/grid/grid';\nimport { Part } from 'vs/workbench/browser/part';\nimport { IStatusbarService } from 'vs/workbench/services/statusbar/common/statusbar';\nimport { IActivityBarService } from 'vs/workbench/services/activityBar/browser/activityBarService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { INotificationService, NotificationsFilter } from 'vs/platform/notification/common/notification';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { WINDOW_ACTIVE_BORDER, WINDOW_INACTIVE_BORDER } from 'vs/workbench/common/theme';\nimport { LineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { URI } from 'vs/base/common/uri';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { mark } from 'vs/base/common/performance';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Promises } from 'vs/base/common/async';\n\nexport enum Settings {\n\tACTIVITYBAR_VISIBLE = 'workbench.activityBar.visible',\n\tSTATUSBAR_VISIBLE = 'workbench.statusBar.visible',\n\n\tSIDEBAR_POSITION = 'workbench.sideBar.location',\n\tPANEL_POSITION = 'workbench.panel.defaultLocation',\n\tPANEL_OPENS_MAXIMIZED = 'workbench.panel.opensMaximized',\n\n\tZEN_MODE_RESTORE = 'zenMode.restore',\n}\n\nenum Storage {\n\tSIDEBAR_HIDDEN = 'workbench.sidebar.hidden',\n\tSIDEBAR_SIZE = 'workbench.sidebar.size',\n\n\tPANEL_HIDDEN = 'workbench.panel.hidden',\n\tPANEL_POSITION = 'workbench.panel.location',\n\tPANEL_SIZE = 'workbench.panel.size',\n\tPANEL_DIMENSION = 'workbench.panel.dimension',\n\tPANEL_LAST_NON_MAXIMIZED_WIDTH = 'workbench.panel.lastNonMaximizedWidth',\n\tPANEL_LAST_NON_MAXIMIZED_HEIGHT = 'workbench.panel.lastNonMaximizedHeight',\n\tPANEL_LAST_IS_MAXIMIZED = 'workbench.panel.lastIsMaximized',\n\n\tEDITOR_HIDDEN = 'workbench.editor.hidden',\n\n\tZEN_MODE_ENABLED = 'workbench.zenmode.active',\n\tCENTERED_LAYOUT_ENABLED = 'workbench.centerededitorlayout.active',\n\n\tGRID_LAYOUT = 'workbench.grid.layout',\n\tGRID_WIDTH = 'workbench.grid.width',\n\tGRID_HEIGHT = 'workbench.grid.height',\n\n\tMENU_VISIBILITY = 'window.menuBarVisibility'\n}\n\nenum Classes {\n\tSIDEBAR_HIDDEN = 'nosidebar',\n\tEDITOR_HIDDEN = 'noeditorarea',\n\tPANEL_HIDDEN = 'nopanel',\n\tSTATUSBAR_HIDDEN = 'nostatusbar',\n\tFULLSCREEN = 'fullscreen',\n\tWINDOW_BORDER = 'border'\n}\n\nexport abstract class Layout extends Disposable implements IWorkbenchLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region Events\n\n\tprivate readonly _onDidChangeZenMode = this._register(new Emitter<boolean>());\n\treadonly onDidChangeZenMode = this._onDidChangeZenMode.event;\n\n\tprivate readonly _onDidChangeFullscreen = this._register(new Emitter<boolean>());\n\treadonly onDidChangeFullscreen = this._onDidChangeFullscreen.event;\n\n\tprivate readonly _onDidChangeCenteredLayout = this._register(new Emitter<boolean>());\n\treadonly onDidChangeCenteredLayout = this._onDidChangeCenteredLayout.event;\n\n\tprivate readonly _onDidChangeWindowMaximized = this._register(new Emitter<boolean>());\n\treadonly onDidChangeWindowMaximized = this._onDidChangeWindowMaximized.event;\n\n\tprivate readonly _onDidChangePanelPosition = this._register(new Emitter<string>());\n\treadonly onDidChangePanelPosition = this._onDidChangePanelPosition.event;\n\n\tprivate readonly _onDidChangePartVisibility = this._register(new Emitter<void>());\n\treadonly onDidChangePartVisibility = this._onDidChangePartVisibility.event;\n\n\tprivate readonly _onDidChangeNotificationsVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeNotificationsVisibility = this._onDidChangeNotificationsVisibility.event;\n\n\tprivate readonly _onDidLayout = this._register(new Emitter<IDimension>());\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\t//#endregion\n\n\treadonly container: HTMLElement = document.createElement('div');\n\n\tprivate _dimension!: IDimension;\n\tget dimension(): IDimension { return this._dimension; }\n\n\tget offset() {\n\t\treturn {\n\t\t\ttop: (() => {\n\t\t\t\tlet offset = 0;\n\t\t\t\tif (this.isVisible(Parts.TITLEBAR_PART)) {\n\t\t\t\t\toffset = this.getPart(Parts.TITLEBAR_PART).maximumHeight;\n\t\t\t\t}\n\n\t\t\t\treturn offset;\n\t\t\t})()\n\t\t};\n\t}\n\n\tprivate readonly parts = new Map<string, Part>();\n\n\tprivate workbenchGrid!: SerializableGrid<ISerializableView>;\n\n\tprivate disposed: boolean | undefined;\n\n\tprivate titleBarPartView!: ISerializableView;\n\tprivate activityBarPartView!: ISerializableView;\n\tprivate sideBarPartView!: ISerializableView;\n\tprivate panelPartView!: ISerializableView;\n\tprivate editorPartView!: ISerializableView;\n\tprivate statusBarPartView!: ISerializableView;\n\n\tprivate environmentService!: IWorkbenchEnvironmentService;\n\tprivate extensionService!: IExtensionService;\n\tprivate configurationService!: IConfigurationService;\n\tprivate storageService!: IStorageService;\n\tprivate hostService!: IHostService;\n\tprivate editorService!: IEditorService;\n\tprivate editorGroupService!: IEditorGroupsService;\n\tprivate panelService!: IPanelService;\n\tprivate titleService!: ITitleService;\n\tprivate viewletService!: IViewletService;\n\tprivate viewDescriptorService!: IViewDescriptorService;\n\tprivate contextService!: IWorkspaceContextService;\n\tprivate workingCopyBackupService!: IWorkingCopyBackupService;\n\tprivate notificationService!: INotificationService;\n\tprivate themeService!: IThemeService;\n\tprivate activityBarService!: IActivityBarService;\n\tprivate statusBarService!: IStatusbarService;\n\tprivate logService!: ILogService;\n\n\tprotected readonly state = {\n\t\tfullscreen: false,\n\t\tmaximized: false,\n\t\thasFocus: false,\n\t\twindowBorder: false,\n\n\t\tmenuBar: {\n\t\t\tvisibility: 'classic' as MenuBarVisibility,\n\t\t\ttoggled: false\n\t\t},\n\n\t\tactivityBar: {\n\t\t\thidden: false\n\t\t},\n\n\t\tsideBar: {\n\t\t\thidden: false,\n\t\t\tposition: Position.LEFT,\n\t\t\twidth: 300,\n\t\t\tviewletToRestore: undefined as string | undefined\n\t\t},\n\n\t\teditor: {\n\t\t\thidden: false,\n\t\t\tcentered: false,\n\t\t\trestoreCentered: false,\n\t\t\trestoreEditors: false,\n\t\t\teditorsToOpen: [] as Promise<IResourceEditorInputType[]> | IResourceEditorInputType[]\n\t\t},\n\n\t\tpanel: {\n\t\t\thidden: false,\n\t\t\tposition: Position.BOTTOM,\n\t\t\tlastNonMaximizedWidth: 300,\n\t\t\tlastNonMaximizedHeight: 300,\n\t\t\twasLastMaximized: false,\n\t\t\tpanelToRestore: undefined as string | undefined\n\t\t},\n\n\t\tstatusBar: {\n\t\t\thidden: false\n\t\t},\n\n\t\tviews: {\n\t\t\tdefaults: undefined as (string[] | undefined)\n\t\t},\n\n\t\tzenMode: {\n\t\t\tactive: false,\n\t\t\trestore: false,\n\t\t\ttransitionedToFullScreen: false,\n\t\t\ttransitionedToCenteredEditorLayout: false,\n\t\t\twasSideBarVisible: false,\n\t\t\twasPanelVisible: false,\n\t\t\ttransitionDisposables: new DisposableStore(),\n\t\t\tsetNotificationsFilter: false,\n\t\t}\n\t};\n\n\tconstructor(\n\t\tprotected readonly parent: HTMLElement\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected initLayout(accessor: ServicesAccessor): void {\n\n\t\t// Services\n\t\tthis.environmentService = accessor.get(IWorkbenchEnvironmentService);\n\t\tthis.configurationService = accessor.get(IConfigurationService);\n\t\tthis.hostService = accessor.get(IHostService);\n\t\tthis.contextService = accessor.get(IWorkspaceContextService);\n\t\tthis.storageService = accessor.get(IStorageService);\n\t\tthis.workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n\t\tthis.themeService = accessor.get(IThemeService);\n\t\tthis.extensionService = accessor.get(IExtensionService);\n\t\tthis.logService = accessor.get(ILogService);\n\n\t\t// Parts\n\t\tthis.editorService = accessor.get(IEditorService);\n\t\tthis.editorGroupService = accessor.get(IEditorGroupsService);\n\t\tthis.panelService = accessor.get(IPanelService);\n\t\tthis.viewletService = accessor.get(IViewletService);\n\t\tthis.viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tthis.titleService = accessor.get(ITitleService);\n\t\tthis.notificationService = accessor.get(INotificationService);\n\t\tthis.activityBarService = accessor.get(IActivityBarService);\n\t\tthis.statusBarService = accessor.get(IStatusbarService);\n\n\t\t// Listeners\n\t\tthis.registerLayoutListeners();\n\n\t\t// State\n\t\tthis.initLayoutState(accessor.get(ILifecycleService), accessor.get(IFileService));\n\t}\n\n\tprivate registerLayoutListeners(): void {\n\n\t\t// Restore editor if hidden and it changes\n\t\t// The editor service will always trigger this\n\t\t// on startup so we can ignore the first one\n\t\tlet firstTimeEditorActivation = true;\n\t\tconst showEditorIfHidden = () => {\n\t\t\tif (!firstTimeEditorActivation && this.state.editor.hidden) {\n\t\t\t\tthis.toggleMaximizedPanel();\n\t\t\t}\n\n\t\t\tfirstTimeEditorActivation = false;\n\t\t};\n\n\t\t// Restore editor part on any editor change\n\t\tthis._register(this.editorService.onDidVisibleEditorsChange(showEditorIfHidden));\n\t\tthis._register(this.editorGroupService.onDidActivateGroup(showEditorIfHidden));\n\n\t\t// Revalidate center layout when active editor changes: diff editor quits centered mode.\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.centerEditorLayout(this.state.editor.centered)));\n\n\t\t// Configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(() => this.doUpdateLayoutConfiguration()));\n\n\t\t// Fullscreen changes\n\t\tthis._register(onDidChangeFullscreen(() => this.onFullscreenChanged()));\n\n\t\t// Group changes\n\t\tthis._register(this.editorGroupService.onDidAddGroup(() => this.centerEditorLayout(this.state.editor.centered)));\n\t\tthis._register(this.editorGroupService.onDidRemoveGroup(() => this.centerEditorLayout(this.state.editor.centered)));\n\n\t\t// Prevent workbench from scrolling #55456\n\t\tthis._register(addDisposableListener(this.container, EventType.SCROLL, () => this.container.scrollTop = 0));\n\n\t\t// Menubar visibility changes\n\t\tif ((isWindows || isLinux || isWeb) && getTitleBarStyle(this.configurationService) === 'custom') {\n\t\t\tthis._register(this.titleService.onMenubarVisibilityChange(visible => this.onMenubarToggled(visible)));\n\t\t}\n\n\t\t// Theme changes\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.updateStyles()));\n\n\t\t// Window focus changes\n\t\tthis._register(this.hostService.onDidChangeFocus(e => this.onWindowFocusChanged(e)));\n\t}\n\n\tprivate onMenubarToggled(visible: boolean) {\n\t\tif (visible !== this.state.menuBar.toggled) {\n\t\t\tthis.state.menuBar.toggled = visible;\n\n\n\t\t\t// The menu bar toggles the title bar in web because it does not need to be shown for window controls only\n\t\t\tif (isWeb && this.state.menuBar.visibility === 'toggle') {\n\t\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.isVisible(Parts.TITLEBAR_PART));\n\t\t\t}\n\t\t\t// The menu bar toggles the title bar in full screen for toggle and classic settings\n\t\t\telse if (this.state.fullscreen && (this.state.menuBar.visibility === 'toggle' || this.state.menuBar.visibility === 'classic')) {\n\t\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.isVisible(Parts.TITLEBAR_PART));\n\t\t\t}\n\n\t\t\t// Move layout call to any time the menubar\n\t\t\t// is toggled to update consumers of offset\n\t\t\t// see issue #115267\n\t\t\tthis.layout();\n\t\t}\n\t}\n\n\tprivate onFullscreenChanged(): void {\n\t\tthis.state.fullscreen = isFullscreen();\n\n\t\t// Apply as CSS class\n\t\tif (this.state.fullscreen) {\n\t\t\tthis.container.classList.add(Classes.FULLSCREEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(Classes.FULLSCREEN);\n\n\t\t\tif (this.state.zenMode.transitionedToFullScreen && this.state.zenMode.active) {\n\t\t\t\tthis.toggleZenMode();\n\t\t\t}\n\t\t}\n\n\t\t// Change edge snapping accordingly\n\t\tthis.workbenchGrid.edgeSnapping = this.state.fullscreen;\n\n\t\t// Changing fullscreen state of the window has an impact on custom title bar visibility, so we need to update\n\t\tif (getTitleBarStyle(this.configurationService) === 'custom') {\n\t\t\t// Propagate to grid\n\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.isVisible(Parts.TITLEBAR_PART));\n\n\t\t\tthis.updateWindowBorder(true);\n\n\t\t\tthis.layout(); // handle title bar when fullscreen changes\n\t\t}\n\n\t\tthis._onDidChangeFullscreen.fire(this.state.fullscreen);\n\t}\n\n\tprivate onWindowFocusChanged(hasFocus: boolean): void {\n\t\tif (this.state.hasFocus === hasFocus) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.hasFocus = hasFocus;\n\t\tthis.updateWindowBorder();\n\t}\n\n\tprivate doUpdateLayoutConfiguration(skipLayout?: boolean): void {\n\n\t\t// Sidebar position\n\t\tconst newSidebarPositionValue = this.configurationService.getValue<string>(Settings.SIDEBAR_POSITION);\n\t\tconst newSidebarPosition = (newSidebarPositionValue === 'right') ? Position.RIGHT : Position.LEFT;\n\t\tif (newSidebarPosition !== this.getSideBarPosition()) {\n\t\t\tthis.setSideBarPosition(newSidebarPosition);\n\t\t}\n\n\t\t// Panel position\n\t\tthis.updatePanelPosition();\n\n\t\tif (!this.state.zenMode.active) {\n\n\t\t\t// Statusbar visibility\n\t\t\tconst newStatusbarHiddenValue = !this.configurationService.getValue<boolean>(Settings.STATUSBAR_VISIBLE);\n\t\t\tif (newStatusbarHiddenValue !== this.state.statusBar.hidden) {\n\t\t\t\tthis.setStatusBarHidden(newStatusbarHiddenValue, skipLayout);\n\t\t\t}\n\n\t\t\t// Activitybar visibility\n\t\t\tconst newActivityBarHiddenValue = !this.configurationService.getValue<boolean>(Settings.ACTIVITYBAR_VISIBLE);\n\t\t\tif (newActivityBarHiddenValue !== this.state.activityBar.hidden) {\n\t\t\t\tthis.setActivityBarHidden(newActivityBarHiddenValue, skipLayout);\n\t\t\t}\n\t\t}\n\n\t\t// Menubar visibility\n\t\tconst newMenubarVisibility = getMenuBarVisibility(this.configurationService);\n\t\tthis.setMenubarVisibility(newMenubarVisibility, !!skipLayout);\n\n\t\t// Centered Layout\n\t\tthis.centerEditorLayout(this.state.editor.centered, skipLayout);\n\t}\n\n\tprivate setSideBarPosition(position: Position): void {\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst wasHidden = this.state.sideBar.hidden;\n\t\tconst newPositionValue = (position === Position.LEFT) ? 'left' : 'right';\n\t\tconst oldPositionValue = (this.state.sideBar.position === Position.LEFT) ? 'left' : 'right';\n\t\tthis.state.sideBar.position = position;\n\n\t\t// Adjust CSS\n\t\tconst activityBarContainer = assertIsDefined(activityBar.getContainer());\n\t\tconst sideBarContainer = assertIsDefined(sideBar.getContainer());\n\t\tactivityBarContainer.classList.remove(oldPositionValue);\n\t\tsideBarContainer.classList.remove(oldPositionValue);\n\t\tactivityBarContainer.classList.add(newPositionValue);\n\t\tsideBarContainer.classList.add(newPositionValue);\n\n\t\t// Update Styles\n\t\tactivityBar.updateStyles();\n\t\tsideBar.updateStyles();\n\n\t\t// Layout\n\t\tif (!wasHidden) {\n\t\t\tthis.state.sideBar.width = this.workbenchGrid.getViewSize(this.sideBarPartView).width;\n\t\t}\n\n\t\tif (position === Position.LEFT) {\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [1, 0]);\n\t\t\tthis.workbenchGrid.moveViewTo(this.sideBarPartView, [1, 1]);\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveViewTo(this.sideBarPartView, [1, 4]);\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [1, 4]);\n\t\t}\n\n\t\tthis.layout();\n\t}\n\n\tprivate updateWindowBorder(skipLayout: boolean = false) {\n\t\tif (isWeb || getTitleBarStyle(this.configurationService) !== 'custom') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst theme = this.themeService.getColorTheme();\n\n\t\tconst activeBorder = theme.getColor(WINDOW_ACTIVE_BORDER);\n\t\tconst inactiveBorder = theme.getColor(WINDOW_INACTIVE_BORDER);\n\n\t\tlet windowBorder = false;\n\t\tif (!this.state.fullscreen && !this.state.maximized && (activeBorder || inactiveBorder)) {\n\t\t\twindowBorder = true;\n\n\t\t\t// If the inactive color is missing, fallback to the active one\n\t\t\tconst borderColor = this.state.hasFocus ? activeBorder : inactiveBorder ?? activeBorder;\n\t\t\tthis.container.style.setProperty('--window-border-color', borderColor?.toString() ?? 'transparent');\n\t\t}\n\n\t\tif (windowBorder === this.state.windowBorder) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.windowBorder = windowBorder;\n\n\t\tthis.container.classList.toggle(Classes.WINDOW_BORDER, windowBorder);\n\n\t\tif (!skipLayout) {\n\t\t\tthis.layout();\n\t\t}\n\t}\n\n\tprivate updateStyles() {\n\t\tthis.updateWindowBorder();\n\t}\n\n\tprivate initLayoutState(lifecycleService: ILifecycleService, fileService: IFileService): void {\n\n\t\t// Default Layout\n\t\tthis.applyDefaultLayout(this.environmentService, this.storageService);\n\n\t\t// Fullscreen\n\t\tthis.state.fullscreen = isFullscreen();\n\n\t\t// Menubar visibility\n\t\tthis.state.menuBar.visibility = getMenuBarVisibility(this.configurationService);\n\n\t\t// Activity bar visibility\n\t\tthis.state.activityBar.hidden = !this.configurationService.getValue<string>(Settings.ACTIVITYBAR_VISIBLE);\n\n\t\t// Sidebar visibility\n\t\tthis.state.sideBar.hidden = this.storageService.getBoolean(Storage.SIDEBAR_HIDDEN, StorageScope.WORKSPACE, this.contextService.getWorkbenchState() === WorkbenchState.EMPTY);\n\n\t\t// Sidebar position\n\t\tthis.state.sideBar.position = (this.configurationService.getValue<string>(Settings.SIDEBAR_POSITION) === 'right') ? Position.RIGHT : Position.LEFT;\n\n\t\t// Sidebar viewlet\n\t\tif (!this.state.sideBar.hidden) {\n\n\t\t\t// Only restore last viewlet if window was reloaded or we are in development mode\n\t\t\tlet viewletToRestore: string | undefined;\n\t\t\tif (!this.environmentService.isBuilt || lifecycleService.startupKind === StartupKind.ReloadedWindow || isWeb) {\n\t\t\t\tviewletToRestore = this.storageService.get(SidebarPart.activeViewletSettingsKey, StorageScope.WORKSPACE, this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id);\n\t\t\t} else {\n\t\t\t\tviewletToRestore = this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id;\n\t\t\t}\n\n\t\t\tif (viewletToRestore) {\n\t\t\t\tthis.state.sideBar.viewletToRestore = viewletToRestore;\n\t\t\t} else {\n\t\t\t\tthis.state.sideBar.hidden = true; // we hide sidebar if there is no viewlet to restore\n\t\t\t}\n\t\t}\n\n\t\t// Editor visibility\n\t\tthis.state.editor.hidden = this.storageService.getBoolean(Storage.EDITOR_HIDDEN, StorageScope.WORKSPACE, false);\n\n\t\t// Editor centered layout\n\t\tthis.state.editor.restoreCentered = this.storageService.getBoolean(Storage.CENTERED_LAYOUT_ENABLED, StorageScope.WORKSPACE, false);\n\n\t\t// Editors to open\n\t\tthis.state.editor.editorsToOpen = this.resolveEditorsToOpen(fileService);\n\n\t\t// Panel visibility\n\t\tthis.state.panel.hidden = this.storageService.getBoolean(Storage.PANEL_HIDDEN, StorageScope.WORKSPACE, true);\n\n\t\t// Whether or not the panel was last maximized\n\t\tthis.state.panel.wasLastMaximized = this.storageService.getBoolean(Storage.PANEL_LAST_IS_MAXIMIZED, StorageScope.WORKSPACE, false);\n\n\t\t// Panel position\n\t\tthis.updatePanelPosition();\n\n\t\t// Panel to restore\n\t\tif (!this.state.panel.hidden) {\n\t\t\tlet panelToRestore = this.storageService.get(PanelPart.activePanelSettingsKey, StorageScope.WORKSPACE, Registry.as<PanelRegistry>(PanelExtensions.Panels).getDefaultPanelId());\n\n\t\t\tif (panelToRestore) {\n\t\t\t\tthis.state.panel.panelToRestore = panelToRestore;\n\t\t\t} else {\n\t\t\t\tthis.state.panel.hidden = true; // we hide panel if there is no panel to restore\n\t\t\t}\n\t\t}\n\n\t\t// Panel size before maximized\n\t\tthis.state.panel.lastNonMaximizedHeight = this.storageService.getNumber(Storage.PANEL_LAST_NON_MAXIMIZED_HEIGHT, StorageScope.GLOBAL, 300);\n\t\tthis.state.panel.lastNonMaximizedWidth = this.storageService.getNumber(Storage.PANEL_LAST_NON_MAXIMIZED_WIDTH, StorageScope.GLOBAL, 300);\n\n\t\t// Statusbar visibility\n\t\tthis.state.statusBar.hidden = !this.configurationService.getValue<string>(Settings.STATUSBAR_VISIBLE);\n\n\t\t// Zen mode enablement\n\t\tthis.state.zenMode.restore = this.storageService.getBoolean(Storage.ZEN_MODE_ENABLED, StorageScope.WORKSPACE, false) && this.configurationService.getValue(Settings.ZEN_MODE_RESTORE);\n\n\t\tthis.state.hasFocus = this.hostService.hasFocus;\n\n\t\t// Window border\n\t\tthis.updateWindowBorder(true);\n\t}\n\n\tprivate applyDefaultLayout(environmentService: IWorkbenchEnvironmentService, storageService: IStorageService) {\n\t\tconst defaultLayout = environmentService.options?.defaultLayout;\n\t\tif (!defaultLayout) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!defaultLayout.force && !storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { views } = defaultLayout;\n\t\tif (views?.length) {\n\t\t\tthis.state.views.defaults = views.map(view => view.id);\n\t\t}\n\t}\n\n\tprivate resolveEditorsToOpen(fileService: IFileService): Promise<IResourceEditorInputType[]> | IResourceEditorInputType[] {\n\t\tconst initialFilesToOpen = this.getInitialFilesToOpen();\n\n\t\t// Only restore editors if we are not instructed to open files initially\n\t\t// or when `window.restoreWindows` setting is explicitly set to `preserve`\n\t\tconst forceRestoreEditors = this.configurationService.getValue<string>('window.restoreWindows') === 'preserve';\n\t\tthis.state.editor.restoreEditors = !!forceRestoreEditors || initialFilesToOpen === undefined;\n\n\t\t// Files to open, diff or create\n\t\tif (initialFilesToOpen !== undefined) {\n\n\t\t\t// Files to diff is exclusive\n\t\t\treturn pathsToEditors(initialFilesToOpen.filesToDiff, fileService).then(filesToDiff => {\n\t\t\t\tif (filesToDiff.length === 2) {\n\t\t\t\t\treturn [{\n\t\t\t\t\t\tleftResource: filesToDiff[0].resource,\n\t\t\t\t\t\trightResource: filesToDiff[1].resource,\n\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\tforceFile: true\n\t\t\t\t\t}];\n\t\t\t\t}\n\n\t\t\t\t// Otherwise: Open/Create files\n\t\t\t\treturn pathsToEditors(initialFilesToOpen.filesToOpenOrCreate, fileService);\n\t\t\t});\n\t\t}\n\n\t\t// Empty workbench configured to open untitled file if empty\n\t\telse if (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY && this.configurationService.getValue('workbench.startupEditor') === 'newUntitledFile') {\n\t\t\tif (this.editorGroupService.hasRestorableState) {\n\t\t\t\treturn []; // do not open any empty untitled file if we restored groups/editors from previous session\n\t\t\t}\n\n\t\t\treturn this.workingCopyBackupService.hasBackups().then(hasBackups => {\n\t\t\t\tif (hasBackups) {\n\t\t\t\t\treturn []; // do not open any empty untitled file if we have backups to restore\n\t\t\t\t}\n\n\t\t\t\treturn [Object.create(null)]; // open empty untitled file\n\t\t\t});\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate _openedDefaultEditors: boolean = false;\n\tget openedDefaultEditors() { return this._openedDefaultEditors; }\n\n\tprivate getInitialFilesToOpen(): { filesToOpenOrCreate?: IPath[], filesToDiff?: IPath[]; } | undefined {\n\n\t\t// Check for editors from `defaultLayout` options first\n\t\tconst defaultLayout = this.environmentService.options?.defaultLayout;\n\t\tif (defaultLayout?.editors?.length && (defaultLayout.force || this.storageService.isNew(StorageScope.WORKSPACE))) {\n\t\t\tthis._openedDefaultEditors = true;\n\n\t\t\treturn {\n\t\t\t\tfilesToOpenOrCreate: defaultLayout.editors.map<IPath>(file => {\n\t\t\t\t\treturn { fileUri: URI.revive(file.uri), openOnlyIfExists: file.openOnlyIfExists, editorOverrideId: file.openWith };\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\n\t\t// Then check for files to open, create or diff from main side\n\t\tconst { filesToOpenOrCreate, filesToDiff } = this.environmentService.configuration;\n\t\tif (filesToOpenOrCreate || filesToDiff) {\n\t\t\treturn { filesToOpenOrCreate, filesToDiff };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate whenReadyResolve: (() => void) | undefined;\n\tprotected readonly whenReady = new Promise<void>(resolve => (this.whenReadyResolve = resolve));\n\n\tprivate whenRestoredResolve: (() => void) | undefined;\n\treadonly whenRestored = new Promise<void>(resolve => (this.whenRestoredResolve = resolve));\n\tprivate restored = false;\n\n\tisRestored(): boolean {\n\t\treturn this.restored;\n\t}\n\n\tprotected restoreParts(): void {\n\n\t\t// distinguish long running restore operations that\n\t\t// are required for the layout to be ready from those\n\t\t// that are needed to signal restoring is done\n\t\tconst layoutReadyPromises: Promise<unknown>[] = [];\n\t\tconst layoutRestoredPromises: Promise<unknown>[] = [];\n\n\t\t// Restore editors\n\t\tlayoutReadyPromises.push((async () => {\n\t\t\tmark('code/willRestoreEditors');\n\n\t\t\t// first ensure the editor part is ready\n\t\t\tawait this.editorGroupService.whenReady;\n\n\t\t\t// then see for editors to open as instructed\n\t\t\t// it is important that we trigger this from\n\t\t\t// the overall restore flow to reduce possible\n\t\t\t// flicker on startup: we want any editor to\n\t\t\t// open to get a chance to open first before\n\t\t\t// signaling that layout is restored, but we do\n\t\t\t// not need to await the editors from having\n\t\t\t// fully loaded.\n\t\t\tlet editors: IResourceEditorInputType[];\n\t\t\tif (Array.isArray(this.state.editor.editorsToOpen)) {\n\t\t\t\teditors = this.state.editor.editorsToOpen;\n\t\t\t} else {\n\t\t\t\teditors = await this.state.editor.editorsToOpen;\n\t\t\t}\n\n\t\t\tlet openEditorsPromise: Promise<unknown> | undefined = undefined;\n\t\t\tif (editors.length) {\n\t\t\t\topenEditorsPromise = this.editorService.openEditors(editors);\n\t\t\t}\n\n\t\t\t// do not block the overall layout ready flow from potentially\n\t\t\t// slow editors to resolve on startup\n\t\t\tlayoutRestoredPromises.push(\n\t\t\t\tPromise.all([\n\t\t\t\t\topenEditorsPromise,\n\t\t\t\t\tthis.editorGroupService.whenRestored\n\t\t\t\t]).finally(() => {\n\t\t\t\t\t// the `code/didRestoreEditors` perf mark is specifically\n\t\t\t\t\t// for when visible editors have resolved, so we only mark\n\t\t\t\t\t// if when editor group service has restored.\n\t\t\t\t\tmark('code/didRestoreEditors');\n\t\t\t\t})\n\t\t\t);\n\t\t})());\n\n\t\t// Restore default views (only when `IDefaultLayout` is provided)\n\t\tconst restoreDefaultViewsPromise = (async () => {\n\t\t\tif (this.state.views.defaults?.length) {\n\t\t\t\tmark('code/willOpenDefaultViews');\n\n\t\t\t\tconst locationsRestored: { id: string; order: number; }[] = [];\n\n\t\t\t\tconst tryOpenView = (view: { id: string; order: number; }): boolean => {\n\t\t\t\t\tconst location = this.viewDescriptorService.getViewLocationById(view.id);\n\t\t\t\t\tif (location !== null) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerByViewId(view.id);\n\t\t\t\t\t\tif (container) {\n\t\t\t\t\t\t\tif (view.order >= (locationsRestored?.[location]?.order ?? 0)) {\n\t\t\t\t\t\t\t\tlocationsRestored[location] = { id: container.id, order: view.order };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(container);\n\t\t\t\t\t\t\tcontainerModel.setCollapsed(view.id, false);\n\t\t\t\t\t\t\tcontainerModel.setVisible(view.id, true);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tconst defaultViews = [...this.state.views.defaults].reverse().map((v, index) => ({ id: v, order: index }));\n\n\t\t\t\tlet i = defaultViews.length;\n\t\t\t\twhile (i) {\n\t\t\t\t\ti--;\n\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we still have views left over, wait until all extensions have been registered and try again\n\t\t\t\tif (defaultViews.length) {\n\t\t\t\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\t\t\t\tlet i = defaultViews.length;\n\t\t\t\t\twhile (i) {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the sidebar, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Sidebar]) {\n\t\t\t\t\tthis.state.sideBar.viewletToRestore = locationsRestored[ViewContainerLocation.Sidebar].id;\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the panel, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Panel]) {\n\t\t\t\t\tthis.state.panel.panelToRestore = locationsRestored[ViewContainerLocation.Panel].id;\n\t\t\t\t}\n\n\t\t\t\tmark('code/didOpenDefaultViews');\n\t\t\t}\n\t\t})();\n\t\tlayoutReadyPromises.push(restoreDefaultViewsPromise);\n\n\t\t// Restore Sidebar\n\t\tlayoutReadyPromises.push((async () => {\n\n\t\t\t// Restoring views could mean that sidebar already\n\t\t\t// restored, as such we need to test again\n\t\t\tawait restoreDefaultViewsPromise;\n\t\t\tif (!this.state.sideBar.viewletToRestore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmark('code/willRestoreViewlet');\n\n\t\t\tconst viewlet = await this.viewletService.openViewlet(this.state.sideBar.viewletToRestore);\n\t\t\tif (!viewlet) {\n\t\t\t\tawait this.viewletService.openViewlet(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id); // fallback to default viewlet as needed\n\t\t\t}\n\n\t\t\tmark('code/didRestoreViewlet');\n\t\t})());\n\n\t\t// Restore Panel\n\t\tlayoutReadyPromises.push((async () => {\n\n\t\t\t// Restoring views could mean that panel already\n\t\t\t// restored, as such we need to test again\n\t\t\tawait restoreDefaultViewsPromise;\n\t\t\tif (!this.state.panel.panelToRestore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmark('code/willRestorePanel');\n\n\t\t\tconst panel = await this.panelService.openPanel(this.state.panel.panelToRestore);\n\t\t\tif (!panel) {\n\t\t\t\tawait this.panelService.openPanel(Registry.as<PanelRegistry>(PanelExtensions.Panels).getDefaultPanelId()); // fallback to default panel as needed\n\t\t\t}\n\n\t\t\tmark('code/didRestorePanel');\n\t\t})());\n\n\t\t// Restore Zen Mode\n\t\tif (this.state.zenMode.restore) {\n\t\t\tthis.toggleZenMode(false, true);\n\t\t}\n\n\t\t// Restore Editor Center Mode\n\t\tif (this.state.editor.restoreCentered) {\n\t\t\tthis.centerEditorLayout(true, true);\n\t\t}\n\n\t\t// Await for promises that we recorded to update\n\t\t// our ready and restored states properly.\n\t\tPromises.settled(layoutReadyPromises).finally(() => {\n\t\t\tthis.whenReadyResolve?.();\n\n\t\t\tPromises.settled(layoutRestoredPromises).finally(() => {\n\t\t\t\tthis.restored = true;\n\t\t\t\tthis.whenRestoredResolve?.();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate updatePanelPosition() {\n\t\tconst defaultPanelPosition = this.configurationService.getValue<string>(Settings.PANEL_POSITION);\n\t\tconst panelPosition = this.storageService.get(Storage.PANEL_POSITION, StorageScope.WORKSPACE, defaultPanelPosition);\n\n\t\tthis.state.panel.position = positionFromString(panelPosition || defaultPanelPosition);\n\t}\n\n\tregisterPart(part: Part): void {\n\t\tthis.parts.set(part.getId(), part);\n\t}\n\n\tprotected getPart(key: Parts): Part {\n\t\tconst part = this.parts.get(key);\n\t\tif (!part) {\n\t\t\tthrow new Error(`Unknown part ${key}`);\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tregisterNotifications(delegate: { onDidChangeNotificationsVisibility: Event<boolean> }): void {\n\t\tthis._register(delegate.onDidChangeNotificationsVisibility(visible => this._onDidChangeNotificationsVisibility.fire(visible)));\n\t}\n\n\thasFocus(part: Parts): boolean {\n\t\tconst activeElement = document.activeElement;\n\t\tif (!activeElement) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst container = this.getContainer(part);\n\n\t\treturn !!container && isAncestorUsingFlowTo(activeElement, container);\n\t}\n\n\tfocusPart(part: Parts): void {\n\t\tswitch (part) {\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tthis.editorGroupService.activeGroup.focus();\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\tconst activePanel = this.panelService.getActivePanel();\n\t\t\t\tif (activePanel) {\n\t\t\t\t\tactivePanel.focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\tconst activeViewlet = this.viewletService.getActiveViewlet();\n\t\t\t\tif (activeViewlet) {\n\t\t\t\t\tactiveViewlet.focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\tthis.activityBarService.focusActivityBar();\n\t\t\t\tbreak;\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\tthis.statusBarService.focus();\n\t\t\tdefault:\n\t\t\t\t// Title Bar simply pass focus to container\n\t\t\t\tconst container = this.getContainer(part);\n\t\t\t\tif (container) {\n\t\t\t\t\tcontainer.focus();\n\t\t\t\t}\n\t\t}\n\t}\n\n\tgetContainer(part: Parts): HTMLElement | undefined {\n\t\tswitch (part) {\n\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\treturn this.getPart(Parts.TITLEBAR_PART).getContainer();\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn this.getPart(Parts.ACTIVITYBAR_PART).getContainer();\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn this.getPart(Parts.SIDEBAR_PART).getContainer();\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn this.getPart(Parts.PANEL_PART).getContainer();\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn this.getPart(Parts.EDITOR_PART).getContainer();\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\treturn this.getPart(Parts.STATUSBAR_PART).getContainer();\n\t\t}\n\t}\n\n\tisVisible(part: Parts): boolean {\n\t\tswitch (part) {\n\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\t// Using the native title bar, don't ever show the custom one\n\t\t\t\tif (getTitleBarStyle(this.configurationService) === 'native') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// macOS desktop does not need a title bar when full screen\n\t\t\t\tif (isMacintosh && isNative) {\n\t\t\t\t\treturn !this.state.fullscreen;\n\t\t\t\t}\n\n\t\t\t\t// non-fullscreen native must show the title bar\n\t\t\t\tif (isNative && !this.state.fullscreen) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// remaining behavior is based on menubar visibility\n\t\t\t\tswitch (this.state.menuBar.visibility) {\n\t\t\t\t\tcase 'classic':\n\t\t\t\t\t\treturn !this.state.fullscreen || this.state.menuBar.toggled;\n\t\t\t\t\tcase 'compact':\n\t\t\t\t\tcase 'hidden':\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase 'toggle':\n\t\t\t\t\t\treturn this.state.menuBar.toggled;\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn isWeb ? false : !this.state.fullscreen || this.state.menuBar.toggled;\n\t\t\t\t}\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn !this.state.sideBar.hidden;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn !this.state.panel.hidden;\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\treturn !this.state.statusBar.hidden;\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn !this.state.activityBar.hidden;\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn !this.state.editor.hidden;\n\t\t\tdefault:\n\t\t\t\treturn true; // any other part cannot be hidden\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tthis.editorGroupService.activeGroup.focus();\n\t}\n\n\tgetDimension(part: Parts): Dimension | undefined {\n\t\treturn this.getPart(part).dimension;\n\t}\n\n\tgetMaximumEditorDimensions(): Dimension {\n\t\tconst isColumn = this.state.panel.position === Position.RIGHT || this.state.panel.position === Position.LEFT;\n\t\tconst takenWidth =\n\t\t\t(this.isVisible(Parts.ACTIVITYBAR_PART) ? this.activityBarPartView.minimumWidth : 0) +\n\t\t\t(this.isVisible(Parts.SIDEBAR_PART) ? this.sideBarPartView.minimumWidth : 0) +\n\t\t\t(this.isVisible(Parts.PANEL_PART) && isColumn ? this.panelPartView.minimumWidth : 0);\n\n\t\tconst takenHeight =\n\t\t\t(this.isVisible(Parts.TITLEBAR_PART) ? this.titleBarPartView.minimumHeight : 0) +\n\t\t\t(this.isVisible(Parts.STATUSBAR_PART) ? this.statusBarPartView.minimumHeight : 0) +\n\t\t\t(this.isVisible(Parts.PANEL_PART) && !isColumn ? this.panelPartView.minimumHeight : 0);\n\n\t\tconst availableWidth = this.dimension.width - takenWidth;\n\t\tconst availableHeight = this.dimension.height - takenHeight;\n\n\t\treturn new Dimension(availableWidth, availableHeight);\n\t}\n\n\ttoggleZenMode(skipLayout?: boolean, restoring = false): void {\n\t\tthis.state.zenMode.active = !this.state.zenMode.active;\n\t\tthis.state.zenMode.transitionDisposables.clear();\n\n\t\tconst setLineNumbers = (lineNumbers?: LineNumbersType) => {\n\t\t\tconst setEditorLineNumbers = (editor: IEditor) => {\n\t\t\t\t// To properly reset line numbers we need to read the configuration for each editor respecting it's uri.\n\t\t\t\tif (!lineNumbers && isCodeEditor(editor) && editor.hasModel()) {\n\t\t\t\t\tconst model = editor.getModel();\n\t\t\t\t\tlineNumbers = this.configurationService.getValue('editor.lineNumbers', { resource: model.uri, overrideIdentifier: model.getModeId() });\n\t\t\t\t}\n\t\t\t\tif (!lineNumbers) {\n\t\t\t\t\tlineNumbers = this.configurationService.getValue('editor.lineNumbers');\n\t\t\t\t}\n\n\t\t\t\teditor.updateOptions({ lineNumbers });\n\t\t\t};\n\n\t\t\tif (!lineNumbers) {\n\t\t\t\t// Reset line numbers on all editors visible and non-visible\n\t\t\t\tfor (const editorControl of this.editorService.visibleTextEditorControls) {\n\t\t\t\t\tsetEditorLineNumbers(editorControl);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const editorControl of this.editorService.visibleTextEditorControls) {\n\t\t\t\t\tsetEditorLineNumbers(editorControl);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Check if zen mode transitioned to full screen and if now we are out of zen mode\n\t\t// -> we need to go out of full screen (same goes for the centered editor layout)\n\t\tlet toggleFullScreen = false;\n\n\t\t// Zen Mode Active\n\t\tif (this.state.zenMode.active) {\n\t\t\tconst config: {\n\t\t\t\tfullScreen: boolean;\n\t\t\t\tcenterLayout: boolean;\n\t\t\t\thideTabs: boolean;\n\t\t\t\thideActivityBar: boolean;\n\t\t\t\thideStatusBar: boolean;\n\t\t\t\thideLineNumbers: boolean;\n\t\t\t\tsilentNotifications: boolean;\n\t\t\t} = this.configurationService.getValue('zenMode');\n\n\t\t\ttoggleFullScreen = !this.state.fullscreen && config.fullScreen;\n\n\t\t\tthis.state.zenMode.transitionedToFullScreen = restoring ? config.fullScreen : toggleFullScreen;\n\t\t\tthis.state.zenMode.transitionedToCenteredEditorLayout = !this.isEditorLayoutCentered() && config.centerLayout;\n\t\t\tthis.state.zenMode.wasSideBarVisible = this.isVisible(Parts.SIDEBAR_PART);\n\t\t\tthis.state.zenMode.wasPanelVisible = this.isVisible(Parts.PANEL_PART);\n\n\t\t\tthis.setPanelHidden(true, true);\n\t\t\tthis.setSideBarHidden(true, true);\n\n\t\t\tif (config.hideActivityBar) {\n\t\t\t\tthis.setActivityBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideStatusBar) {\n\t\t\t\tthis.setStatusBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideLineNumbers) {\n\t\t\t\tsetLineNumbers('off');\n\t\t\t\tthis.state.zenMode.transitionDisposables.add(this.editorService.onDidVisibleEditorsChange(() => setLineNumbers('off')));\n\t\t\t}\n\n\t\t\tif (config.hideTabs && this.editorGroupService.partOptions.showTabs) {\n\t\t\t\tthis.state.zenMode.transitionDisposables.add(this.editorGroupService.enforcePartOptions({ showTabs: false }));\n\t\t\t}\n\n\t\t\tthis.state.zenMode.setNotificationsFilter = config.silentNotifications;\n\t\t\tif (config.silentNotifications) {\n\t\t\t\tthis.notificationService.setFilter(NotificationsFilter.ERROR);\n\t\t\t}\n\t\t\tthis.state.zenMode.transitionDisposables.add(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tconst silentNotificationsKey = 'zenMode.silentNotifications';\n\t\t\t\tif (e.affectsConfiguration(silentNotificationsKey)) {\n\t\t\t\t\tconst filter = this.configurationService.getValue(silentNotificationsKey) ? NotificationsFilter.ERROR : NotificationsFilter.OFF;\n\t\t\t\t\tthis.notificationService.setFilter(filter);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (config.centerLayout) {\n\t\t\t\tthis.centerEditorLayout(true, true);\n\t\t\t}\n\t\t}\n\n\t\t// Zen Mode Inactive\n\t\telse {\n\t\t\tif (this.state.zenMode.wasPanelVisible) {\n\t\t\t\tthis.setPanelHidden(false, true);\n\t\t\t}\n\n\t\t\tif (this.state.zenMode.wasSideBarVisible) {\n\t\t\t\tthis.setSideBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (this.state.zenMode.transitionedToCenteredEditorLayout) {\n\t\t\t\tthis.centerEditorLayout(false, true);\n\t\t\t}\n\n\t\t\tsetLineNumbers();\n\n\t\t\t// Status bar and activity bar visibility come from settings -> update their visibility.\n\t\t\tthis.doUpdateLayoutConfiguration(true);\n\n\t\t\tthis.focus();\n\t\t\tif (this.state.zenMode.setNotificationsFilter) {\n\t\t\t\tthis.notificationService.setFilter(NotificationsFilter.OFF);\n\t\t\t}\n\n\t\t\ttoggleFullScreen = this.state.zenMode.transitionedToFullScreen && this.state.fullscreen;\n\t\t}\n\n\t\tif (!skipLayout) {\n\t\t\tthis.layout();\n\t\t}\n\n\t\tif (toggleFullScreen) {\n\t\t\tthis.hostService.toggleFullScreen();\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidChangeZenMode.fire(this.state.zenMode.active);\n\n\t\t// State\n\t\tif (this.state.zenMode.active) {\n\t\t\tthis.storageService.store(Storage.ZEN_MODE_ENABLED, true, StorageScope.WORKSPACE, StorageTarget.USER);\n\n\t\t\t// Exit zen mode on shutdown unless configured to keep\n\t\t\tthis.state.zenMode.transitionDisposables.add(this.storageService.onWillSaveState(e => {\n\t\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN && this.state.zenMode.active) {\n\t\t\t\t\tif (!this.configurationService.getValue(Settings.ZEN_MODE_RESTORE)) {\n\t\t\t\t\t\tthis.toggleZenMode(true); // We will not restore zen mode, need to clear all zen mode state changes\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.storageService.remove(Storage.ZEN_MODE_ENABLED, StorageScope.WORKSPACE);\n\t\t}\n\t}\n\n\tprivate setStatusBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.state.statusBar.hidden = hidden;\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(Classes.STATUSBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(Classes.STATUSBAR_HIDDEN);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.statusBarPartView, !hidden);\n\t}\n\n\tprotected createWorkbenchLayout(): void {\n\t\tconst titleBar = this.getPart(Parts.TITLEBAR_PART);\n\t\tconst editorPart = this.getPart(Parts.EDITOR_PART);\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst statusBar = this.getPart(Parts.STATUSBAR_PART);\n\n\t\t// View references for all parts\n\t\tthis.titleBarPartView = titleBar;\n\t\tthis.sideBarPartView = sideBar;\n\t\tthis.activityBarPartView = activityBar;\n\t\tthis.editorPartView = editorPart;\n\t\tthis.panelPartView = panelPart;\n\t\tthis.statusBarPartView = statusBar;\n\n\t\tconst viewMap = {\n\t\t\t[Parts.ACTIVITYBAR_PART]: this.activityBarPartView,\n\t\t\t[Parts.TITLEBAR_PART]: this.titleBarPartView,\n\t\t\t[Parts.EDITOR_PART]: this.editorPartView,\n\t\t\t[Parts.PANEL_PART]: this.panelPartView,\n\t\t\t[Parts.SIDEBAR_PART]: this.sideBarPartView,\n\t\t\t[Parts.STATUSBAR_PART]: this.statusBarPartView\n\t\t};\n\n\t\tconst fromJSON = ({ type }: { type: Parts; }) => viewMap[type];\n\t\tconst workbenchGrid = SerializableGrid.deserialize(\n\t\t\tthis.createGridDescriptor(),\n\t\t\t{ fromJSON },\n\t\t\t{ proportionalLayout: false }\n\t\t);\n\n\t\tthis.container.prepend(workbenchGrid.element);\n\t\tthis.container.setAttribute('role', 'application');\n\t\tthis.workbenchGrid = workbenchGrid;\n\t\tthis.workbenchGrid.edgeSnapping = this.state.fullscreen;\n\n\t\tfor (const part of [titleBar, editorPart, activityBar, panelPart, sideBar, statusBar]) {\n\t\t\tthis._register(part.onDidVisibilityChange((visible) => {\n\t\t\t\tif (part === sideBar) {\n\t\t\t\t\tthis.setSideBarHidden(!visible, true);\n\t\t\t\t} else if (part === panelPart) {\n\t\t\t\t\tthis.setPanelHidden(!visible, true);\n\t\t\t\t} else if (part === editorPart) {\n\t\t\t\t\tthis.setEditorHidden(!visible, true);\n\t\t\t\t}\n\t\t\t\tthis._onDidChangePartVisibility.fire();\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(this.storageService.onWillSaveState(() => {\n\t\t\tconst grid = this.workbenchGrid as SerializableGrid<ISerializableView>;\n\n\t\t\tconst sideBarSize = this.state.sideBar.hidden\n\t\t\t\t? grid.getViewCachedVisibleSize(this.sideBarPartView)\n\t\t\t\t: grid.getViewSize(this.sideBarPartView).width;\n\n\t\t\tthis.storageService.store(Storage.SIDEBAR_SIZE, sideBarSize, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\n\t\t\tconst panelSize = this.state.panel.hidden\n\t\t\t\t? grid.getViewCachedVisibleSize(this.panelPartView)\n\t\t\t\t: (this.state.panel.position === Position.BOTTOM ? grid.getViewSize(this.panelPartView).height : grid.getViewSize(this.panelPartView).width);\n\n\t\t\tthis.storageService.store(Storage.PANEL_SIZE, panelSize, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tthis.storageService.store(Storage.PANEL_DIMENSION, positionToString(this.state.panel.position), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\n\t\t\tconst gridSize = grid.getViewSize();\n\t\t\tthis.storageService.store(Storage.GRID_WIDTH, gridSize.width, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tthis.storageService.store(Storage.GRID_HEIGHT, gridSize.height, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}));\n\t}\n\n\tgetClientArea(): Dimension {\n\t\treturn getClientArea(this.parent);\n\t}\n\n\tlayout(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis._dimension = this.getClientArea();\n\t\t\tthis.logService.trace(`Layout#layout, height: ${this._dimension.height}, width: ${this._dimension.width}`);\n\n\t\t\tposition(this.container, 0, 0, 0, 0, 'relative');\n\t\t\tsize(this.container, this._dimension.width, this._dimension.height);\n\n\t\t\t// Layout the grid widget\n\t\t\tthis.workbenchGrid.layout(this._dimension.width, this._dimension.height);\n\n\t\t\t// Emit as event\n\t\t\tthis._onDidLayout.fire(this._dimension);\n\t\t}\n\t}\n\n\tisEditorLayoutCentered(): boolean {\n\t\treturn this.state.editor.centered;\n\t}\n\n\tcenterEditorLayout(active: boolean, skipLayout?: boolean): void {\n\t\tthis.state.editor.centered = active;\n\n\t\tthis.storageService.store(Storage.CENTERED_LAYOUT_ENABLED, active, StorageScope.WORKSPACE, StorageTarget.USER);\n\n\t\tlet smartActive = active;\n\t\tconst activeEditor = this.editorService.activeEditor;\n\n\t\tconst isSideBySideLayout = activeEditor\n\t\t\t&& activeEditor instanceof SideBySideEditorInput\n\t\t\t// DiffEditorInput inherits from SideBySideEditorInput but can still be functionally an inline editor.\n\t\t\t&& (!(activeEditor instanceof DiffEditorInput) || this.configurationService.getValue('diffEditor.renderSideBySide'));\n\n\t\tconst isCenteredLayoutAutoResizing = this.configurationService.getValue('workbench.editor.centeredLayoutAutoResize');\n\t\tif (\n\t\t\tisCenteredLayoutAutoResizing\n\t\t\t&& (this.editorGroupService.groups.length > 1 || isSideBySideLayout)\n\t\t) {\n\t\t\tsmartActive = false;\n\t\t}\n\n\t\t// Enter Centered Editor Layout\n\t\tif (this.editorGroupService.isLayoutCentered() !== smartActive) {\n\t\t\tthis.editorGroupService.centerLayout(smartActive);\n\n\t\t\tif (!skipLayout) {\n\t\t\t\tthis.layout();\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeCenteredLayout.fire(this.state.editor.centered);\n\t}\n\n\tresizePart(part: Parts, sizeChangeWidth: number, sizeChangeHeight: number): void {\n\t\tconst sizeChangePxWidth = this.workbenchGrid.width * sizeChangeWidth / 100;\n\t\tconst sizeChangePxHeight = this.workbenchGrid.height * sizeChangeHeight / 100;\n\n\t\tlet viewSize: IViewSize;\n\n\t\tswitch (part) {\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.sideBarPartView);\n\t\t\t\tthis.workbenchGrid.resizeView(this.sideBarPartView,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\theight: viewSize.height\n\t\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.panelPartView);\n\n\t\t\t\tthis.workbenchGrid.resizeView(this.panelPartView,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: viewSize.width + (this.getPanelPosition() !== Position.BOTTOM ? sizeChangePxWidth : 0),\n\t\t\t\t\t\theight: viewSize.height + (this.getPanelPosition() !== Position.BOTTOM ? 0 : sizeChangePxHeight)\n\t\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.editorPartView);\n\n\t\t\t\t// Single Editor Group\n\t\t\t\tif (this.editorGroupService.count === 1) {\n\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\t\theight: viewSize.height + sizeChangePxHeight\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\t\t\t\tconst { width, height } = this.editorGroupService.getSize(activeGroup);\n\t\t\t\t\tthis.editorGroupService.setSize(activeGroup, { width: width + sizeChangePxWidth, height: height + sizeChangePxHeight });\n\n\t\t\t\t\t// After resizing the editor group\n\t\t\t\t\t// if it does not change in either direction\n\t\t\t\t\t// try resizing the full editor part\n\t\t\t\t\tconst { width: newWidth, height: newHeight } = this.editorGroupService.getSize(activeGroup);\n\t\t\t\t\tif ((sizeChangePxHeight && height === newHeight) || (sizeChangePxWidth && width === newWidth)) {\n\t\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twidth: viewSize.width + (sizeChangePxWidth && width === newWidth ? sizeChangePxWidth : 0),\n\t\t\t\t\t\t\t\theight: viewSize.height + (sizeChangePxHeight && height === newHeight ? sizeChangePxHeight : 0)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn; // Cannot resize other parts\n\t\t}\n\t}\n\n\tsetActivityBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.state.activityBar.hidden = hidden;\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.activityBarPartView, !hidden);\n\t}\n\n\tsetEditorHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.state.editor.hidden = hidden;\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(Classes.EDITOR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(Classes.EDITOR_HIDDEN);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.editorPartView, !hidden);\n\n\t\t// Remember in settings\n\t\tif (hidden) {\n\t\t\tthis.storageService.store(Storage.EDITOR_HIDDEN, true, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(Storage.EDITOR_HIDDEN, StorageScope.WORKSPACE);\n\t\t}\n\n\t\t// The editor and panel cannot be hidden at the same time\n\t\tif (hidden && this.state.panel.hidden) {\n\t\t\tthis.setPanelHidden(false, true);\n\t\t}\n\t}\n\n\tgetLayoutClasses(): string[] {\n\t\treturn coalesce([\n\t\t\tthis.state.sideBar.hidden ? Classes.SIDEBAR_HIDDEN : undefined,\n\t\t\tthis.state.editor.hidden ? Classes.EDITOR_HIDDEN : undefined,\n\t\t\tthis.state.panel.hidden ? Classes.PANEL_HIDDEN : undefined,\n\t\t\tthis.state.statusBar.hidden ? Classes.STATUSBAR_HIDDEN : undefined,\n\t\t\tthis.state.fullscreen ? Classes.FULLSCREEN : undefined\n\t\t]);\n\t}\n\n\tsetSideBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.state.sideBar.hidden = hidden;\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(Classes.SIDEBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(Classes.SIDEBAR_HIDDEN);\n\t\t}\n\n\t\t// If sidebar becomes hidden, also hide the current active Viewlet if any\n\t\tif (hidden && this.viewletService.getActiveViewlet()) {\n\t\t\tthis.viewletService.hideActiveViewlet();\n\n\t\t\t// Pass Focus to Editor or Panel if Sidebar is now hidden\n\t\t\tconst activePanel = this.panelService.getActivePanel();\n\t\t\tif (this.hasFocus(Parts.PANEL_PART) && activePanel) {\n\t\t\t\tactivePanel.focus();\n\t\t\t} else {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}\n\n\t\t// If sidebar becomes visible, show last active Viewlet or default viewlet\n\t\telse if (!hidden && !this.viewletService.getActiveViewlet()) {\n\t\t\tconst viewletToOpen = this.viewletService.getLastActiveViewletId();\n\t\t\tif (viewletToOpen) {\n\t\t\t\tconst viewlet = this.viewletService.openViewlet(viewletToOpen, true);\n\t\t\t\tif (!viewlet) {\n\t\t\t\t\tthis.viewletService.openViewlet(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.sideBarPartView, !hidden);\n\n\t\t// Remember in settings\n\t\tconst defaultHidden = this.contextService.getWorkbenchState() === WorkbenchState.EMPTY;\n\t\tif (hidden !== defaultHidden) {\n\t\t\tthis.storageService.store(Storage.SIDEBAR_HIDDEN, hidden ? 'true' : 'false', StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t} else {\n\t\t\tthis.storageService.remove(Storage.SIDEBAR_HIDDEN, StorageScope.WORKSPACE);\n\t\t}\n\t}\n\n\tsetPanelHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tconst wasHidden = this.state.panel.hidden;\n\t\tthis.state.panel.hidden = hidden;\n\n\t\t// Return if not initialized fully #105480\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isPanelMaximized = this.isPanelMaximized();\n\t\tconst panelOpensMaximized = this.panelOpensMaximized();\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(Classes.PANEL_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(Classes.PANEL_HIDDEN);\n\t\t}\n\n\t\t// If panel part becomes hidden, also hide the current active panel if any\n\t\tlet focusEditor = false;\n\t\tif (hidden && this.panelService.getActivePanel()) {\n\t\t\tthis.panelService.hideActivePanel();\n\t\t\tfocusEditor = true;\n\t\t}\n\n\t\t// If panel part becomes visible, show last active panel or default panel\n\t\telse if (!hidden && !this.panelService.getActivePanel()) {\n\t\t\tlet panelToOpen: string | undefined = this.panelService.getLastActivePanelId();\n\t\t\tconst hasViews = (id: string): boolean => {\n\t\t\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\t\t\tif (!viewContainer) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tif (!viewContainerModel) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn viewContainerModel.activeViewDescriptors.length >= 1;\n\t\t\t};\n\n\t\t\t// verify that the panel we try to open has views before we default to it\n\t\t\t// otherwise fall back to any view that has views still refs #111463\n\t\t\tif (!panelToOpen || !hasViews(panelToOpen)) {\n\t\t\t\tpanelToOpen = this.viewDescriptorService\n\t\t\t\t\t.getViewContainersByLocation(ViewContainerLocation.Panel)\n\t\t\t\t\t.find(viewContainer => hasViews(viewContainer.id))?.id;\n\t\t\t}\n\n\t\t\tif (panelToOpen) {\n\t\t\t\tconst focus = !skipLayout;\n\t\t\t\tthis.panelService.openPanel(panelToOpen, focus);\n\t\t\t}\n\t\t}\n\n\t\t// If maximized and in process of hiding, unmaximize before hiding to allow caching of non-maximized size\n\t\tif (hidden && isPanelMaximized) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\t// Don't proceed if we have already done this before\n\t\tif (wasHidden === hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Propagate layout changes to grid\n\t\tthis.workbenchGrid.setViewVisible(this.panelPartView, !hidden);\n\t\t// If in process of showing, toggle whether or not panel is maximized\n\t\tif (!hidden) {\n\t\t\tif (isPanelMaximized !== panelOpensMaximized) {\n\t\t\t\tthis.toggleMaximizedPanel();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// If in process of hiding, remember whether the panel is maximized or not\n\t\t\tthis.state.panel.wasLastMaximized = isPanelMaximized;\n\t\t}\n\t\t// Remember in settings\n\t\tif (!hidden) {\n\t\t\tthis.storageService.store(Storage.PANEL_HIDDEN, 'false', StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t}\n\t\telse {\n\t\t\tthis.storageService.remove(Storage.PANEL_HIDDEN, StorageScope.WORKSPACE);\n\n\t\t\t// Remember this setting only when panel is hiding\n\t\t\tif (this.state.panel.wasLastMaximized) {\n\t\t\t\tthis.storageService.store(Storage.PANEL_LAST_IS_MAXIMIZED, true, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.storageService.remove(Storage.PANEL_LAST_IS_MAXIMIZED, StorageScope.WORKSPACE);\n\t\t\t}\n\t\t}\n\n\t\tif (focusEditor) {\n\t\t\tthis.editorGroupService.activeGroup.focus(); // Pass focus to editor group if panel part is now hidden\n\t\t}\n\t}\n\n\ttoggleMaximizedPanel(): void {\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tif (!this.isPanelMaximized()) {\n\t\t\tif (!this.state.panel.hidden) {\n\t\t\t\tif (this.state.panel.position === Position.BOTTOM) {\n\t\t\t\t\tthis.state.panel.lastNonMaximizedHeight = size.height;\n\t\t\t\t\tthis.storageService.store(Storage.PANEL_LAST_NON_MAXIMIZED_HEIGHT, this.state.panel.lastNonMaximizedHeight, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t} else {\n\t\t\t\t\tthis.state.panel.lastNonMaximizedWidth = size.width;\n\t\t\t\t\tthis.storageService.store(Storage.PANEL_LAST_NON_MAXIMIZED_WIDTH, this.state.panel.lastNonMaximizedWidth, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setEditorHidden(true);\n\t\t} else {\n\t\t\tthis.setEditorHidden(false);\n\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, { width: this.state.panel.position === Position.BOTTOM ? size.width : this.state.panel.lastNonMaximizedWidth, height: this.state.panel.position === Position.BOTTOM ? this.state.panel.lastNonMaximizedHeight : size.height });\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether or not the panel opens maximized\n\t */\n\tprivate panelOpensMaximized() {\n\t\tconst panelOpensMaximized = panelOpensMaximizedFromString(this.configurationService.getValue<string>(Settings.PANEL_OPENS_MAXIMIZED));\n\t\tconst panelLastIsMaximized = this.state.panel.wasLastMaximized;\n\n\t\treturn panelOpensMaximized === PanelOpensMaximizedOptions.ALWAYS || (panelOpensMaximized === PanelOpensMaximizedOptions.REMEMBER_LAST && panelLastIsMaximized);\n\t}\n\n\thasWindowBorder(): boolean {\n\t\treturn this.state.windowBorder;\n\t}\n\n\tgetWindowBorderWidth(): number {\n\t\treturn this.state.windowBorder ? 2 : 0;\n\t}\n\n\tgetWindowBorderRadius(): string | undefined {\n\t\treturn this.state.windowBorder && isMacintosh ? '5px' : undefined;\n\t}\n\n\tisPanelMaximized(): boolean {\n\t\treturn this.state.editor.hidden;\n\t}\n\n\tgetSideBarPosition(): Position {\n\t\treturn this.state.sideBar.position;\n\t}\n\n\tsetMenubarVisibility(visibility: MenuBarVisibility, skipLayout: boolean): void {\n\t\tif (this.state.menuBar.visibility !== visibility) {\n\t\t\tthis.state.menuBar.visibility = visibility;\n\n\t\t\t// Layout\n\t\t\tif (!skipLayout && this.workbenchGrid) {\n\t\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.isVisible(Parts.TITLEBAR_PART));\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMenubarVisibility(): MenuBarVisibility {\n\t\treturn this.state.menuBar.visibility;\n\t}\n\n\ttoggleMenuBar(): void {\n\t\tlet currentVisibilityValue = getMenuBarVisibility(this.configurationService);\n\t\tif (typeof currentVisibilityValue !== 'string') {\n\t\t\tcurrentVisibilityValue = 'classic';\n\t\t}\n\n\t\tlet newVisibilityValue: string;\n\t\tif (currentVisibilityValue === 'visible' || currentVisibilityValue === 'classic') {\n\t\t\tnewVisibilityValue = 'compact';\n\t\t} else {\n\t\t\tnewVisibilityValue = 'classic';\n\t\t}\n\n\t\tthis.configurationService.updateValue(Storage.MENU_VISIBILITY, newVisibilityValue);\n\t}\n\n\tgetPanelPosition(): Position {\n\t\treturn this.state.panel.position;\n\t}\n\n\tsetPanelPosition(position: Position): void {\n\t\tif (this.state.panel.hidden) {\n\t\t\tthis.setPanelHidden(false);\n\t\t}\n\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst oldPositionValue = positionToString(this.state.panel.position);\n\t\tconst newPositionValue = positionToString(position);\n\t\tthis.state.panel.position = position;\n\n\t\t// Save panel position\n\t\tthis.storageService.store(Storage.PANEL_POSITION, newPositionValue, StorageScope.WORKSPACE, StorageTarget.USER);\n\n\t\t// Adjust CSS\n\t\tconst panelContainer = assertIsDefined(panelPart.getContainer());\n\t\tpanelContainer.classList.remove(oldPositionValue);\n\t\tpanelContainer.classList.add(newPositionValue);\n\n\t\t// Update Styles\n\t\tpanelPart.updateStyles();\n\n\t\t// Layout\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tconst sideBarSize = this.workbenchGrid.getViewSize(this.sideBarPartView);\n\n\t\t// Save last non-maximized size for panel before move\n\t\tif (newPositionValue !== oldPositionValue && !this.state.editor.hidden) {\n\n\t\t\t// Save the current size of the panel for the new orthogonal direction\n\t\t\t// If moving down, save the width of the panel\n\t\t\t// Otherwise, save the height of the panel\n\t\t\tif (position === Position.BOTTOM) {\n\t\t\t\tthis.state.panel.lastNonMaximizedWidth = size.width;\n\t\t\t} else if (positionFromString(oldPositionValue) === Position.BOTTOM) {\n\t\t\t\tthis.state.panel.lastNonMaximizedHeight = size.height;\n\t\t\t}\n\t\t}\n\n\t\tif (position === Position.BOTTOM) {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, this.state.editor.hidden ? size.height : this.state.panel.lastNonMaximizedHeight, this.editorPartView, Direction.Down);\n\t\t} else if (position === Position.RIGHT) {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, this.state.editor.hidden ? size.width : this.state.panel.lastNonMaximizedWidth, this.editorPartView, Direction.Right);\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, this.state.editor.hidden ? size.width : this.state.panel.lastNonMaximizedWidth, this.editorPartView, Direction.Left);\n\t\t}\n\n\t\t// Reset sidebar to original size before shifting the panel\n\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, sideBarSize);\n\n\t\tthis._onDidChangePanelPosition.fire(newPositionValue);\n\t}\n\n\tisWindowMaximized() {\n\t\treturn this.state.maximized;\n\t}\n\n\tupdateWindowMaximizedState(maximized: boolean) {\n\t\tif (this.state.maximized === maximized) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.maximized = maximized;\n\n\t\tthis.updateWindowBorder();\n\t\tthis._onDidChangeWindowMaximized.fire(maximized);\n\t}\n\n\tgetVisibleNeighborPart(part: Parts, direction: Direction): Parts | undefined {\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.isVisible(part)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst neighborViews = this.workbenchGrid.getNeighborViews(this.getPart(part), direction, false);\n\n\t\tif (!neighborViews) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (const neighborView of neighborViews) {\n\t\t\tconst neighborPart =\n\t\t\t\t[Parts.ACTIVITYBAR_PART, Parts.EDITOR_PART, Parts.PANEL_PART, Parts.SIDEBAR_PART, Parts.STATUSBAR_PART, Parts.TITLEBAR_PART]\n\t\t\t\t\t.find(partId => this.getPart(partId) === neighborView && this.isVisible(partId));\n\n\t\t\tif (neighborPart !== undefined) {\n\t\t\t\treturn neighborPart;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\n\tprivate arrangeEditorNodes(editorNode: ISerializedNode, panelNode: ISerializedNode, editorSectionWidth: number): ISerializedNode[] {\n\t\tswitch (this.state.panel.position) {\n\t\t\tcase Position.BOTTOM:\n\t\t\t\treturn [{ type: 'branch', data: [editorNode, panelNode], size: editorSectionWidth }];\n\t\t\tcase Position.RIGHT:\n\t\t\t\treturn [editorNode, panelNode];\n\t\t\tcase Position.LEFT:\n\t\t\t\treturn [panelNode, editorNode];\n\t\t}\n\t}\n\n\tprivate createGridDescriptor(): ISerializedGrid {\n\t\tconst workbenchDimensions = this.getClientArea();\n\t\tconst width = this.storageService.getNumber(Storage.GRID_WIDTH, StorageScope.GLOBAL, workbenchDimensions.width);\n\t\tconst height = this.storageService.getNumber(Storage.GRID_HEIGHT, StorageScope.GLOBAL, workbenchDimensions.height);\n\t\tconst sideBarSize = this.storageService.getNumber(Storage.SIDEBAR_SIZE, StorageScope.GLOBAL, Math.min(workbenchDimensions.width / 4, 300));\n\t\tconst panelDimension = positionFromString(this.storageService.get(Storage.PANEL_DIMENSION, StorageScope.GLOBAL, 'bottom'));\n\t\tconst fallbackPanelSize = this.state.panel.position === Position.BOTTOM ? workbenchDimensions.height / 3 : workbenchDimensions.width / 4;\n\t\tconst panelSize = panelDimension === this.state.panel.position ? this.storageService.getNumber(Storage.PANEL_SIZE, StorageScope.GLOBAL, fallbackPanelSize) : fallbackPanelSize;\n\n\t\tconst titleBarHeight = this.titleBarPartView.minimumHeight;\n\t\tconst statusBarHeight = this.statusBarPartView.minimumHeight;\n\t\tconst activityBarWidth = this.activityBarPartView.minimumWidth;\n\t\tconst middleSectionHeight = height - titleBarHeight - statusBarHeight;\n\t\tconst editorSectionWidth = width - (this.state.activityBar.hidden ? 0 : activityBarWidth) - (this.state.sideBar.hidden ? 0 : sideBarSize);\n\n\t\tconst activityBarNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.ACTIVITYBAR_PART },\n\t\t\tsize: activityBarWidth,\n\t\t\tvisible: !this.state.activityBar.hidden\n\t\t};\n\n\t\tconst sideBarNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.SIDEBAR_PART },\n\t\t\tsize: sideBarSize,\n\t\t\tvisible: !this.state.sideBar.hidden\n\t\t};\n\n\t\tconst editorNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.EDITOR_PART },\n\t\t\tsize: this.state.panel.position === Position.BOTTOM ?\n\t\t\t\tmiddleSectionHeight - (this.state.panel.hidden ? 0 : panelSize) :\n\t\t\t\teditorSectionWidth - (this.state.panel.hidden ? 0 : panelSize),\n\t\t\tvisible: !this.state.editor.hidden\n\t\t};\n\n\t\tconst panelNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.PANEL_PART },\n\t\t\tsize: panelSize,\n\t\t\tvisible: !this.state.panel.hidden\n\t\t};\n\n\t\tconst editorSectionNode = this.arrangeEditorNodes(editorNode, panelNode, editorSectionWidth);\n\n\t\tconst middleSection: ISerializedNode[] = this.state.sideBar.position === Position.LEFT\n\t\t\t? [activityBarNode, sideBarNode, ...editorSectionNode]\n\t\t\t: [...editorSectionNode, sideBarNode, activityBarNode];\n\n\t\tconst result: ISerializedGrid = {\n\t\t\troot: {\n\t\t\t\ttype: 'branch',\n\t\t\t\tsize: width,\n\t\t\t\tdata: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'leaf',\n\t\t\t\t\t\tdata: { type: Parts.TITLEBAR_PART },\n\t\t\t\t\t\tsize: titleBarHeight,\n\t\t\t\t\t\tvisible: this.isVisible(Parts.TITLEBAR_PART)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'branch',\n\t\t\t\t\t\tdata: middleSection,\n\t\t\t\t\t\tsize: middleSectionHeight\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'leaf',\n\t\t\t\t\t\tdata: { type: Parts.STATUSBAR_PART },\n\t\t\t\t\t\tsize: statusBarHeight,\n\t\t\t\t\t\tvisible: !this.state.statusBar.hidden\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\torientation: Orientation.VERTICAL,\n\t\t\twidth,\n\t\t\theight\n\t\t};\n\n\t\treturn result;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n"]}