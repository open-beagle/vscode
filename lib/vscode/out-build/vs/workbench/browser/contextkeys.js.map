{"version":3,"sources":["vs/workbench/browser/contextkeys.ts"],"names":[],"mappings":"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","file":"contextkeys.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IContextKeyService, IContextKey, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { InputFocusedContext, IsMacContext, IsLinuxContext, IsWindowsContext, IsWebContext, IsMacNativeContext, IsDevelopmentContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { ActiveEditorContext, EditorsVisibleContext, TextCompareEditorVisibleContext, TextCompareEditorActiveContext, ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext, TEXT_DIFF_EDITOR_ID, SplitEditorsVertically, InEditorZenModeContext, IsCenteredLayoutContext, ActiveEditorGroupIndexContext, ActiveEditorGroupLastContext, ActiveEditorReadonlyContext, EditorAreaVisibleContext, ActiveEditorAvailableEditorIdsContext } from 'vs/workbench/common/editor';\nimport { trackFocus, addDisposableListener, EventType, WebFileSystemAccess } from 'vs/base/browser/dom';\nimport { preferredSideBySideGroupDirection, GroupDirection, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { WorkbenchState, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { SideBarVisibleContext } from 'vs/workbench/common/viewlet';\nimport { IWorkbenchLayoutService, Parts, positionToString } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { PanelMaximizedContext, PanelPositionContext, PanelVisibleContext } from 'vs/workbench/common/panel';\nimport { getRemoteName, getVirtualWorkspaceScheme } from 'vs/platform/remote/common/remoteHosts';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { isNative } from 'vs/base/common/platform';\n\nexport const WorkbenchStateContext = new RawContextKey<string>('workbenchState', undefined, { type: 'string', description: localize('workbenchState', \"The kind of workspace opened in the window, either 'empty' (no workspace), 'folder' (single folder) or 'workspace' (multi-root workspace)\") });\nexport const WorkspaceFolderCountContext = new RawContextKey<number>('workspaceFolderCount', 0, localize('workspaceFolderCount', \"The number of root folders in the workspace\"));\nexport const EmptyWorkspaceSupportContext = new RawContextKey<boolean>('emptyWorkspaceSupport', true, true);\n\nexport const DirtyWorkingCopiesContext = new RawContextKey<boolean>('dirtyWorkingCopies', false, localize('dirtyWorkingCopies', \"Whether there are any dirty working copies\"));\n\nexport const RemoteNameContext = new RawContextKey<string>('remoteName', '', localize('remoteName', \"The name of the remote the window is connected to or an empty string if not connected to any remote\"));\nexport const VirtualWorkspaceContext = new RawContextKey<string>('virtualWorkspace', '', localize('virtualWorkspace', \"The scheme of the current workspace if is from a virtual file system or an empty string.\"));\n\nexport const IsFullscreenContext = new RawContextKey<boolean>('isFullscreen', false, localize('isFullscreen', \"Whether the window is in fullscreen mode\"));\n\n// Support for FileSystemAccess web APIs (https://wicg.github.io/file-system-access)\nexport const HasWebFileSystemAccess = new RawContextKey<boolean>('hasWebFileSystemAccess', false, true);\n\nexport class WorkbenchContextKeysHandler extends Disposable {\n\tprivate inputFocusedContext: IContextKey<boolean>;\n\n\tprivate dirtyWorkingCopiesContext: IContextKey<boolean>;\n\n\tprivate activeEditorContext: IContextKey<string | null>;\n\tprivate activeEditorIsReadonly: IContextKey<boolean>;\n\tprivate activeEditorAvailableEditorIds: IContextKey<string>;\n\n\tprivate activeEditorGroupEmpty: IContextKey<boolean>;\n\tprivate activeEditorGroupIndex: IContextKey<number>;\n\tprivate activeEditorGroupLast: IContextKey<boolean>;\n\tprivate multipleEditorGroupsContext: IContextKey<boolean>;\n\n\tprivate editorsVisibleContext: IContextKey<boolean>;\n\tprivate textCompareEditorVisibleContext: IContextKey<boolean>;\n\tprivate textCompareEditorActiveContext: IContextKey<boolean>;\n\tprivate splitEditorsVerticallyContext: IContextKey<boolean>;\n\n\tprivate workbenchStateContext: IContextKey<string>;\n\tprivate workspaceFolderCountContext: IContextKey<number>;\n\tprivate emptyWorkspaceSupportContext: IContextKey<boolean>;\n\n\tprivate inZenModeContext: IContextKey<boolean>;\n\tprivate isFullscreenContext: IContextKey<boolean>;\n\tprivate isCenteredLayoutContext: IContextKey<boolean>;\n\tprivate sideBarVisibleContext: IContextKey<boolean>;\n\tprivate editorAreaVisibleContext: IContextKey<boolean>;\n\tprivate panelPositionContext: IContextKey<string>;\n\tprivate panelVisibleContext: IContextKey<boolean>;\n\tprivate panelMaximizedContext: IContextKey<boolean>;\n\n\tprivate vitualWorkspaceContext: IContextKey<string>;\n\n\tconstructor(\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService\n\t) {\n\t\tsuper();\n\n\t\t// Platform\n\t\tIsMacContext.bindTo(this.contextKeyService);\n\t\tIsLinuxContext.bindTo(this.contextKeyService);\n\t\tIsWindowsContext.bindTo(this.contextKeyService);\n\n\t\tIsWebContext.bindTo(this.contextKeyService);\n\t\tIsMacNativeContext.bindTo(this.contextKeyService);\n\n\t\tRemoteNameContext.bindTo(this.contextKeyService).set(getRemoteName(this.environmentService.remoteAuthority) || '');\n\n\t\tthis.vitualWorkspaceContext = VirtualWorkspaceContext.bindTo(this.contextKeyService);\n\t\tthis.updateVirtualWorkspaceContextKey();\n\n\t\t// Capabilities\n\t\tHasWebFileSystemAccess.bindTo(this.contextKeyService).set(WebFileSystemAccess.supported(window));\n\n\t\t// Development\n\t\tIsDevelopmentContext.bindTo(this.contextKeyService).set(!this.environmentService.isBuilt || this.environmentService.isExtensionDevelopment);\n\n\t\t// Editors\n\t\tthis.activeEditorContext = ActiveEditorContext.bindTo(this.contextKeyService);\n\t\tthis.activeEditorIsReadonly = ActiveEditorReadonlyContext.bindTo(this.contextKeyService);\n\t\tthis.activeEditorAvailableEditorIds = ActiveEditorAvailableEditorIdsContext.bindTo(this.contextKeyService);\n\t\tthis.editorsVisibleContext = EditorsVisibleContext.bindTo(this.contextKeyService);\n\t\tthis.textCompareEditorVisibleContext = TextCompareEditorVisibleContext.bindTo(this.contextKeyService);\n\t\tthis.textCompareEditorActiveContext = TextCompareEditorActiveContext.bindTo(this.contextKeyService);\n\t\tthis.activeEditorGroupEmpty = ActiveEditorGroupEmptyContext.bindTo(this.contextKeyService);\n\t\tthis.activeEditorGroupIndex = ActiveEditorGroupIndexContext.bindTo(this.contextKeyService);\n\t\tthis.activeEditorGroupLast = ActiveEditorGroupLastContext.bindTo(this.contextKeyService);\n\t\tthis.multipleEditorGroupsContext = MultipleEditorGroupsContext.bindTo(this.contextKeyService);\n\n\t\t// Working Copies\n\t\tthis.dirtyWorkingCopiesContext = DirtyWorkingCopiesContext.bindTo(this.contextKeyService);\n\t\tthis.dirtyWorkingCopiesContext.set(this.workingCopyService.hasDirty);\n\n\t\t// Inputs\n\t\tthis.inputFocusedContext = InputFocusedContext.bindTo(this.contextKeyService);\n\n\t\t// Workbench State\n\t\tthis.workbenchStateContext = WorkbenchStateContext.bindTo(this.contextKeyService);\n\t\tthis.updateWorkbenchStateContextKey();\n\n\t\t// Workspace Folder Count\n\t\tthis.workspaceFolderCountContext = WorkspaceFolderCountContext.bindTo(this.contextKeyService);\n\t\tthis.updateWorkspaceFolderCountContextKey();\n\n\t\t// Empty workspace support: empty workspaces require a default \"local\" file\n\t\t// system to operate with. We always have one when running natively or when\n\t\t// we have a remote connection.\n\t\tthis.emptyWorkspaceSupportContext = EmptyWorkspaceSupportContext.bindTo(this.contextKeyService);\n\t\tthis.emptyWorkspaceSupportContext.set(isNative || typeof this.environmentService.remoteAuthority === 'string');\n\n\t\t// Editor Layout\n\t\tthis.splitEditorsVerticallyContext = SplitEditorsVertically.bindTo(this.contextKeyService);\n\t\tthis.updateSplitEditorsVerticallyContext();\n\n\t\t// Fullscreen\n\t\tthis.isFullscreenContext = IsFullscreenContext.bindTo(this.contextKeyService);\n\n\t\t// Zen Mode\n\t\tthis.inZenModeContext = InEditorZenModeContext.bindTo(this.contextKeyService);\n\n\t\t// Centered Layout\n\t\tthis.isCenteredLayoutContext = IsCenteredLayoutContext.bindTo(this.contextKeyService);\n\n\t\t// Editor Area\n\t\tthis.editorAreaVisibleContext = EditorAreaVisibleContext.bindTo(this.contextKeyService);\n\n\t\t// Sidebar\n\t\tthis.sideBarVisibleContext = SideBarVisibleContext.bindTo(this.contextKeyService);\n\n\t\t// Panel\n\t\tthis.panelPositionContext = PanelPositionContext.bindTo(this.contextKeyService);\n\t\tthis.panelPositionContext.set(positionToString(this.layoutService.getPanelPosition()));\n\t\tthis.panelVisibleContext = PanelVisibleContext.bindTo(this.contextKeyService);\n\t\tthis.panelVisibleContext.set(this.layoutService.isVisible(Parts.PANEL_PART));\n\t\tthis.panelMaximizedContext = PanelMaximizedContext.bindTo(this.contextKeyService);\n\t\tthis.panelMaximizedContext.set(this.layoutService.isPanelMaximized());\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.editorGroupService.whenReady.then(() => this.updateEditorContextKeys());\n\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateEditorContextKeys()));\n\t\tthis._register(this.editorService.onDidVisibleEditorsChange(() => this.updateEditorContextKeys()));\n\n\t\tthis._register(this.editorGroupService.onDidAddGroup(() => this.updateEditorContextKeys()));\n\t\tthis._register(this.editorGroupService.onDidRemoveGroup(() => this.updateEditorContextKeys()));\n\t\tthis._register(this.editorGroupService.onDidChangeGroupIndex(() => this.updateEditorContextKeys()));\n\n\t\tthis._register(addDisposableListener(window, EventType.FOCUS_IN, () => this.updateInputContextKeys(), true));\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.updateWorkbenchStateContextKey()));\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => {\n\t\t\tthis.updateWorkspaceFolderCountContextKey();\n\t\t\tthis.updateVirtualWorkspaceContextKey();\n\t\t}));\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.editor.openSideBySideDirection')) {\n\t\t\t\tthis.updateSplitEditorsVerticallyContext();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.layoutService.onDidChangeZenMode(enabled => this.inZenModeContext.set(enabled)));\n\t\tthis._register(this.layoutService.onDidChangeFullscreen(fullscreen => this.isFullscreenContext.set(fullscreen)));\n\t\tthis._register(this.layoutService.onDidChangeCenteredLayout(centered => this.isCenteredLayoutContext.set(centered)));\n\t\tthis._register(this.layoutService.onDidChangePanelPosition(position => this.panelPositionContext.set(position)));\n\n\t\tthis._register(this.viewletService.onDidViewletClose(() => this.updateSideBarContextKeys()));\n\t\tthis._register(this.viewletService.onDidViewletOpen(() => this.updateSideBarContextKeys()));\n\n\t\tthis._register(this.layoutService.onDidChangePartVisibility(() => {\n\t\t\tthis.editorAreaVisibleContext.set(this.layoutService.isVisible(Parts.EDITOR_PART));\n\t\t\tthis.panelVisibleContext.set(this.layoutService.isVisible(Parts.PANEL_PART));\n\t\t\tthis.panelMaximizedContext.set(this.layoutService.isPanelMaximized());\n\t\t}));\n\n\t\tthis._register(this.workingCopyService.onDidChangeDirty(workingCopy => this.dirtyWorkingCopiesContext.set(workingCopy.isDirty() || this.workingCopyService.hasDirty)));\n\t}\n\n\tprivate updateEditorContextKeys(): void {\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tconst visibleEditorPanes = this.editorService.visibleEditorPanes;\n\n\t\tthis.textCompareEditorActiveContext.set(activeEditorPane?.getId() === TEXT_DIFF_EDITOR_ID);\n\t\tthis.textCompareEditorVisibleContext.set(visibleEditorPanes.some(editorPane => editorPane.getId() === TEXT_DIFF_EDITOR_ID));\n\n\t\tif (visibleEditorPanes.length > 0) {\n\t\t\tthis.editorsVisibleContext.set(true);\n\t\t} else {\n\t\t\tthis.editorsVisibleContext.reset();\n\t\t}\n\n\t\tif (!this.editorService.activeEditor) {\n\t\t\tthis.activeEditorGroupEmpty.set(true);\n\t\t} else {\n\t\t\tthis.activeEditorGroupEmpty.reset();\n\t\t}\n\n\t\tconst groupCount = this.editorGroupService.count;\n\t\tif (groupCount > 1) {\n\t\t\tthis.multipleEditorGroupsContext.set(true);\n\t\t} else {\n\t\t\tthis.multipleEditorGroupsContext.reset();\n\t\t}\n\n\t\tthis.activeEditorGroupIndex.set(activeGroup.index + 1); // not zero-indexed\n\t\tthis.activeEditorGroupLast.set(activeGroup.index === groupCount - 1);\n\n\t\tif (activeEditorPane) {\n\t\t\tthis.activeEditorContext.set(activeEditorPane.getId());\n\t\t\tthis.activeEditorIsReadonly.set(activeEditorPane.input.isReadonly());\n\n\t\t\tconst activeEditorResource = activeEditorPane.input.resource;\n\t\t\tconst editors = activeEditorResource ? this.editorService.getEditorOverrides(activeEditorResource, undefined, activeGroup) : [];\n\t\t\tthis.activeEditorAvailableEditorIds.set(editors.map(([_, entry]) => entry.id).join(','));\n\t\t} else {\n\t\t\tthis.activeEditorContext.reset();\n\t\t\tthis.activeEditorIsReadonly.reset();\n\t\t\tthis.activeEditorAvailableEditorIds.reset();\n\t\t}\n\t}\n\n\tprivate updateInputContextKeys(): void {\n\n\t\tfunction activeElementIsInput(): boolean {\n\t\t\treturn !!document.activeElement && (document.activeElement.tagName === 'INPUT' || document.activeElement.tagName === 'TEXTAREA');\n\t\t}\n\n\t\tconst isInputFocused = activeElementIsInput();\n\t\tthis.inputFocusedContext.set(isInputFocused);\n\n\t\tif (isInputFocused) {\n\t\t\tconst tracker = trackFocus(document.activeElement as HTMLElement);\n\t\t\tEvent.once(tracker.onDidBlur)(() => {\n\t\t\t\tthis.inputFocusedContext.set(activeElementIsInput());\n\n\t\t\t\ttracker.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateWorkbenchStateContextKey(): void {\n\t\tthis.workbenchStateContext.set(this.getWorkbenchStateString());\n\t}\n\n\tprivate updateWorkspaceFolderCountContextKey(): void {\n\t\tthis.workspaceFolderCountContext.set(this.contextService.getWorkspace().folders.length);\n\t}\n\n\tprivate updateSplitEditorsVerticallyContext(): void {\n\t\tconst direction = preferredSideBySideGroupDirection(this.configurationService);\n\t\tthis.splitEditorsVerticallyContext.set(direction === GroupDirection.DOWN);\n\t}\n\n\tprivate getWorkbenchStateString(): string {\n\t\tswitch (this.contextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY: return 'empty';\n\t\t\tcase WorkbenchState.FOLDER: return 'folder';\n\t\t\tcase WorkbenchState.WORKSPACE: return 'workspace';\n\t\t}\n\t}\n\n\tprivate updateSideBarContextKeys(): void {\n\t\tthis.sideBarVisibleContext.set(this.layoutService.isVisible(Parts.SIDEBAR_PART));\n\t}\n\n\tprivate updateVirtualWorkspaceContextKey(): void {\n\t\tthis.vitualWorkspaceContext.set(getVirtualWorkspaceScheme(this.contextService.getWorkspace()) || '');\n\t}\n}\n"]}