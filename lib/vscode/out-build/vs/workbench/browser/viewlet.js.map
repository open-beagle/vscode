{"version":3,"file":"viewlet.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/viewlet.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAiBhG,IAAsB,OAAO,GAA7B,MAAsB,OAAQ,SAAQ,6BAAa;QAElD,YAAY,EAAU,EACF,gBAAmC,EACrC,cAA+B,EACzB,oBAA2C,EACnD,YAA2B,EACrB,kBAAuC,EACzC,gBAAmC,EAC5B,cAAwC,EAC/B,aAAsC,EACxC,oBAA2C;YAE5E,KAAK,CAAC,EAAE,EAAE,gBAAgB,EAAE,cAAc,EAAE,oBAAoB,EAAE,YAAY,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YAHnG,kBAAa,GAAb,aAAa,CAAyB;YACxC,yBAAoB,GAApB,oBAAoB,CAAuB;QAG7E,CAAC;KACD,CAAA;IAfqB,OAAO;QAG1B,WAAA,6BAAiB,CAAA;QACjB,WAAA,yBAAe,CAAA;QACf,WAAA,qCAAqB,CAAA;QACrB,WAAA,4BAAa,CAAA;QACb,WAAA,iCAAmB,CAAA;QACnB,WAAA,8BAAiB,CAAA;QACjB,WAAA,oCAAwB,CAAA;QACxB,WAAA,uCAAuB,CAAA;QACvB,WAAA,qCAAqB,CAAA;OAXF,OAAO,CAe5B;IAfqB,0BAAO;IAiB7B;;OAEG;IACH,MAAa,iBAAkB,SAAQ,+BAA4B;QAelE,YACC,IAAqC,EACrC,EAAU,EACV,IAAY,EACZ,QAAiB,EACjB,KAAc,EACd,cAAuB,EACd,OAAa;YAEtB,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;YAF9C,YAAO,GAAP,OAAO,CAAM;QAGvB,CAAC;QAvBD,MAAM,CAAC,MAAM,CACZ,IAA6C,EAC7C,EAAU,EACV,IAAY,EACZ,QAAiB,EACjB,KAAc,EACd,cAAuB,EACvB,OAAa;YAGb,OAAO,IAAI,iBAAiB,CAAC,IAAuC,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;QAC3H,CAAC;KAaD;IA1BD,8CA0BC;IAEY,QAAA,UAAU,GAAG;QACzB,QAAQ,EAAE,kCAAkC;KAC5C,CAAC;IAEF,MAAa,eAAgB,SAAQ,6BAA0B;QAE9D;;WAEG;QACH,eAAe,CAAC,UAA6B;YAC5C,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACrC,CAAC;QAED;;WAEG;QACH,iBAAiB,CAAC,EAAU;YAC3B,KAAK,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC;QAED;;WAEG;QACH,UAAU,CAAC,EAAU;YACpB,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAsB,CAAC;QACnD,CAAC;QAED;;WAEG;QACH,WAAW;YACV,OAAO,IAAI,CAAC,aAAa,EAAyB,CAAC;QACpD,CAAC;KACD;IA7BD,0CA6BC;IAED,mBAAQ,CAAC,GAAG,CAAC,kBAAU,CAAC,QAAQ,EAAE,IAAI,eAAe,EAAE,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IViewlet } from 'vs/workbench/common/viewlet';\nimport { CompositeDescriptor, CompositeRegistry } from 'vs/workbench/browser/composite';\nimport { IConstructorSignature0, IInstantiationService, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { URI } from 'vs/base/common/uri';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { PaneComposite } from 'vs/workbench/browser/panecomposite';\n\nexport abstract class Viewlet extends PaneComposite implements IViewlet {\n\n\tconstructor(id: string,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IWorkbenchLayoutService protected layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService);\n\t}\n}\n\n/**\n * A viewlet descriptor is a leightweight descriptor of a viewlet in the workbench.\n */\nexport class ViewletDescriptor extends CompositeDescriptor<Viewlet> {\n\n\tstatic create<Services extends BrandedService[]>(\n\t\tctor: { new(...services: Services): Viewlet },\n\t\tid: string,\n\t\tname: string,\n\t\tcssClass?: string,\n\t\torder?: number,\n\t\trequestedIndex?: number,\n\t\ticonUrl?: URI\n\t): ViewletDescriptor {\n\n\t\treturn new ViewletDescriptor(ctor as IConstructorSignature0<Viewlet>, id, name, cssClass, order, requestedIndex, iconUrl);\n\t}\n\n\tprivate constructor(\n\t\tctor: IConstructorSignature0<Viewlet>,\n\t\tid: string,\n\t\tname: string,\n\t\tcssClass?: string,\n\t\torder?: number,\n\t\trequestedIndex?: number,\n\t\treadonly iconUrl?: URI\n\t) {\n\t\tsuper(ctor, id, name, cssClass, order, requestedIndex);\n\t}\n}\n\nexport const Extensions = {\n\tViewlets: 'workbench.contributions.viewlets'\n};\n\nexport class ViewletRegistry extends CompositeRegistry<Viewlet> {\n\n\t/**\n\t * Registers a viewlet to the platform.\n\t */\n\tregisterViewlet(descriptor: ViewletDescriptor): void {\n\t\tsuper.registerComposite(descriptor);\n\t}\n\n\t/**\n\t * Deregisters a viewlet to the platform.\n\t */\n\tderegisterViewlet(id: string): void {\n\t\tsuper.deregisterComposite(id);\n\t}\n\n\t/**\n\t * Returns the viewlet descriptor for the given id or null if none.\n\t */\n\tgetViewlet(id: string): ViewletDescriptor {\n\t\treturn this.getComposite(id) as ViewletDescriptor;\n\t}\n\n\t/**\n\t * Returns an array of registered viewlets known to the platform.\n\t */\n\tgetViewlets(): ViewletDescriptor[] {\n\t\treturn this.getComposites() as ViewletDescriptor[];\n\t}\n}\n\nRegistry.add(Extensions.Viewlets, new ViewletRegistry());\n"]}