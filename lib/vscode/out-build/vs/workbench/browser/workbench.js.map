{"version":3,"sources":["vs/workbench/browser/workbench.ts"],"names":[],"mappings":"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","file":"workbench.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/workbench/browser/style';\nimport { localize } from 'vs/nls';\nimport { Event, Emitter, setGlobalLeakWarningThreshold } from 'vs/base/common/event';\nimport { RunOnceScheduler, runWhenIdle, timeout } from 'vs/base/common/async';\nimport { getZoomLevel, isFirefox, isSafari, isChrome, getPixelRatio } from 'vs/base/browser/browser';\nimport { mark } from 'vs/base/common/performance';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { isWindows, isLinux, isWeb, isNative, isMacintosh } from 'vs/base/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IEditorInputFactoryRegistry, EditorExtensions } from 'vs/workbench/common/editor';\nimport { getSingletonServiceDescriptors } from 'vs/platform/instantiation/common/extensions';\nimport { Position, Parts, IWorkbenchLayoutService, positionToString } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IStorageService, WillSaveStateReason, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { LifecyclePhase, ILifecycleService, WillShutdownEvent, BeforeShutdownEvent } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { NotificationService } from 'vs/workbench/services/notification/common/notificationService';\nimport { NotificationsCenter } from 'vs/workbench/browser/parts/notifications/notificationsCenter';\nimport { NotificationsAlerts } from 'vs/workbench/browser/parts/notifications/notificationsAlerts';\nimport { NotificationsStatus } from 'vs/workbench/browser/parts/notifications/notificationsStatus';\nimport { NotificationsTelemetry } from 'vs/workbench/browser/parts/notifications/notificationsTelemetry';\nimport { registerNotificationCommands } from 'vs/workbench/browser/parts/notifications/notificationsCommands';\nimport { NotificationsToasts } from 'vs/workbench/browser/parts/notifications/notificationsToasts';\nimport { setARIAContainer } from 'vs/base/browser/ui/aria/aria';\nimport { readFontInfo, restoreFontInfo, serializeFontInfo } from 'vs/editor/browser/config/configuration';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { WorkbenchContextKeysHandler } from 'vs/workbench/browser/contextkeys';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { Layout } from 'vs/workbench/browser/layout';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\n\nexport class Workbench extends Layout {\n\n\tprivate readonly _onBeforeShutdown = this._register(new Emitter<BeforeShutdownEvent>());\n\treadonly onBeforeShutdown = this._onBeforeShutdown.event;\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<WillShutdownEvent>());\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tprivate readonly _onDidShutdown = this._register(new Emitter<void>());\n\treadonly onDidShutdown = this._onDidShutdown.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tprivate readonly serviceCollection: ServiceCollection,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper(parent);\n\n\t\t// Perf: measure workbench startup time\n\t\tmark('code/willStartWorkbench');\n\n\t\tthis.registerErrorHandler(logService);\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Listen on unhandled rejection events\n\t\twindow.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n\t\t\tonUnexpectedError(event.reason);\n\n\t\t\t// Prevent the printing of this event to the console\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => this.handleUnexpectedError(error, logService));\n\n\t\t// Inform user about loading issues from the loader\n\t\tinterface AnnotatedLoadingError extends Error {\n\t\t\tphase: 'loading';\n\t\t\tmoduleId: string;\n\t\t\tneededBy: string[];\n\t\t}\n\t\tinterface AnnotatedFactoryError extends Error {\n\t\t\tphase: 'factory';\n\t\t\tmoduleId: string;\n\t\t}\n\t\tinterface AnnotatedValidationError extends Error {\n\t\t\tphase: 'configuration';\n\t\t}\n\t\ttype AnnotatedError = AnnotatedLoadingError | AnnotatedFactoryError | AnnotatedValidationError;\n\t\t(<any>window).require.config({\n\t\t\tonError: (err: AnnotatedError) => {\n\t\t\t\tif (err.phase === 'loading') {\n\t\t\t\t\tonUnexpectedError(new Error(localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err))));\n\t\t\t\t}\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate previousUnexpectedError: { message: string | undefined, time: number } = { message: undefined, time: 0 };\n\tprivate handleUnexpectedError(error: unknown, logService: ILogService): void {\n\t\tconst message = toErrorMessage(error, true);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst now = Date.now();\n\t\tif (message === this.previousUnexpectedError.message && now - this.previousUnexpectedError.time <= 1000) {\n\t\t\treturn; // Return if error message identical to previous and shorter than 1 second\n\t\t}\n\n\t\tthis.previousUnexpectedError.time = now;\n\t\tthis.previousUnexpectedError.message = message;\n\n\t\t// Log it\n\t\tlogService.error(message);\n\t}\n\n\tstartup(): IInstantiationService {\n\t\ttry {\n\n\t\t\t// Configure emitter leak warning threshold\n\t\t\tsetGlobalLeakWarningThreshold(175);\n\n\t\t\t// Services\n\t\t\tconst instantiationService = this.initServices(this.serviceCollection);\n\n\t\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\t\t\t\tconst storageService = accessor.get(IStorageService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\n\t\t\t\t// Layout\n\t\t\t\tthis.initLayout(accessor);\n\n\t\t\t\t// Registries\n\t\t\t\tRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).start(accessor);\n\t\t\t\tRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).start(accessor);\n\n\t\t\t\t// Context Keys\n\t\t\t\tthis._register(instantiationService.createInstance(WorkbenchContextKeysHandler));\n\n\t\t\t\t// Register Listeners\n\t\t\t\tthis.registerListeners(lifecycleService, storageService, configurationService, hostService);\n\n\t\t\t\t// Render Workbench\n\t\t\t\tthis.renderWorkbench(instantiationService, accessor.get(INotificationService) as NotificationService, storageService, configurationService);\n\n\t\t\t\t// Workbench Layout\n\t\t\t\tthis.createWorkbenchLayout();\n\n\t\t\t\t// Layout\n\t\t\t\tthis.layout();\n\n\t\t\t\t// Restore\n\t\t\t\tthis.restore(lifecycleService);\n\t\t\t});\n\n\t\t\treturn instantiationService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\tthrow error; // rethrow because this is a critical issue we cannot handle properly here\n\t\t}\n\t}\n\n\tprivate initServices(serviceCollection: ServiceCollection): IInstantiationService {\n\n\t\t// Layout Service\n\t\tserviceCollection.set(IWorkbenchLayoutService, this);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       native and web or `workbench.sandbox.main.ts` if the service\n\t\t//       is native only.\n\t\t//\n\t\t//       DO NOT add services to `workbench.desktop.main.ts`, always add\n\t\t//       to `workbench.sandbox.main.ts` to support our Electron sandbox\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// All Contributed Services\n\t\tconst contributedServices = getSingletonServiceDescriptors();\n\t\tfor (let [id, descriptor] of contributedServices) {\n\t\t\tserviceCollection.set(id, descriptor);\n\t\t}\n\n\t\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\n\t\t// Wrap up\n\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\n\t\t\t// TODO@Sandeep debt around cyclic dependencies\n\t\t\tconst configurationService = accessor.get(IConfigurationService) as any;\n\t\t\tif (typeof configurationService.acquireInstantiationService === 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconfigurationService.acquireInstantiationService(instantiationService);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\t// Signal to lifecycle that services are set\n\t\t\tlifecycleService.phase = LifecyclePhase.Ready;\n\t\t});\n\n\t\treturn instantiationService;\n\t}\n\n\tprivate registerListeners(lifecycleService: ILifecycleService, storageService: IStorageService, configurationService: IConfigurationService, hostService: IHostService): void {\n\n\t\t// Configuration changes\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.setFontAliasing(configurationService)));\n\n\t\t// Font Info\n\t\tif (isNative) {\n\t\t\tthis._register(storageService.onWillSaveState(e => {\n\t\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\t\tthis.storeFontInfo(storageService);\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis._register(lifecycleService.onWillShutdown(() => this.storeFontInfo(storageService)));\n\t\t}\n\n\t\t// Lifecycle\n\t\tthis._register(lifecycleService.onBeforeShutdown(event => this._onBeforeShutdown.fire(event)));\n\t\tthis._register(lifecycleService.onWillShutdown(event => this._onWillShutdown.fire(event)));\n\t\tthis._register(lifecycleService.onDidShutdown(() => {\n\t\t\tthis._onDidShutdown.fire();\n\t\t\tthis.dispose();\n\t\t}));\n\n\t\t// In some environments we do not get enough time to persist state on shutdown.\n\t\t// In other cases, VSCode might crash, so we periodically save state to reduce\n\t\t// the chance of loosing any state.\n\t\t// The window loosing focus is a good indication that the user has stopped working\n\t\t// in that window so we pick that at a time to collect state.\n\t\tthis._register(hostService.onDidChangeFocus(focus => {\n\t\t\tif (!focus) {\n\t\t\t\tstorageService.flush();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate fontAliasing: 'default' | 'antialiased' | 'none' | 'auto' | undefined;\n\tprivate setFontAliasing(configurationService: IConfigurationService) {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // macOS only\n\t\t}\n\n\t\tconst aliasing = configurationService.getValue<'default' | 'antialiased' | 'none' | 'auto'>('workbench.fontAliasing');\n\t\tif (this.fontAliasing === aliasing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fontAliasing = aliasing;\n\n\t\t// Remove all\n\t\tconst fontAliasingValues: (typeof aliasing)[] = ['antialiased', 'none', 'auto'];\n\t\tthis.container.classList.remove(...fontAliasingValues.map(value => `monaco-font-aliasing-${value}`));\n\n\t\t// Add specific\n\t\tif (fontAliasingValues.some(option => option === aliasing)) {\n\t\t\tthis.container.classList.add(`monaco-font-aliasing-${aliasing}`);\n\t\t}\n\t}\n\n\tprivate restoreFontInfo(storageService: IStorageService, configurationService: IConfigurationService): void {\n\n\t\t// Restore (native: use storage service, web: use browser specific local storage)\n\t\tconst storedFontInfoRaw = isNative ? storageService.get('editorFontInfo', StorageScope.GLOBAL) : window.localStorage.getItem('vscode.editorFontInfo');\n\t\tif (storedFontInfoRaw) {\n\t\t\ttry {\n\t\t\t\tconst storedFontInfo = JSON.parse(storedFontInfoRaw);\n\t\t\t\tif (Array.isArray(storedFontInfo)) {\n\t\t\t\t\trestoreFontInfo(storedFontInfo);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t/* ignore */\n\t\t\t}\n\t\t}\n\n\t\treadFontInfo(BareFontInfo.createFromRawSettings(configurationService.getValue('editor'), getZoomLevel(), getPixelRatio()));\n\t}\n\n\tprivate storeFontInfo(storageService: IStorageService): void {\n\t\tconst serializedFontInfo = serializeFontInfo();\n\t\tif (serializedFontInfo) {\n\t\t\tconst serializedFontInfoRaw = JSON.stringify(serializedFontInfo);\n\n\t\t\t// Font info is very specific to the machine the workbench runs\n\t\t\t// on. As such, in the web, we prefer to store this info in\n\t\t\t// local storage and not global storage because it would not make\n\t\t\t// much sense to synchronize to other machines.\n\t\t\tif (isNative) {\n\t\t\t\tstorageService.store('editorFontInfo', serializedFontInfoRaw, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t} else {\n\t\t\t\twindow.localStorage.setItem('vscode.editorFontInfo', serializedFontInfoRaw);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderWorkbench(instantiationService: IInstantiationService, notificationService: NotificationService, storageService: IStorageService, configurationService: IConfigurationService): void {\n\n\t\t// ARIA\n\t\tsetARIAContainer(this.container);\n\n\t\t// State specific classes\n\t\tconst platformClass = isWindows ? 'windows' : isLinux ? 'linux' : 'mac';\n\t\tconst workbenchClasses = coalesce([\n\t\t\t'monaco-workbench',\n\t\t\tplatformClass,\n\t\t\tisWeb ? 'web' : undefined,\n\t\t\tisChrome ? 'chromium' : isFirefox ? 'firefox' : isSafari ? 'safari' : undefined,\n\t\t\t...this.getLayoutClasses()\n\t\t]);\n\n\t\tthis.container.classList.add(...workbenchClasses);\n\t\tdocument.body.classList.add(platformClass); // used by our fonts\n\n\t\tif (isWeb) {\n\t\t\tdocument.body.classList.add('web');\n\t\t}\n\n\t\t// Apply font aliasing\n\t\tthis.setFontAliasing(configurationService);\n\n\t\t// Warm up font cache information before building up too many dom elements\n\t\tthis.restoreFontInfo(storageService, configurationService);\n\n\t\t// Create Parts\n\t\t[\n\t\t\t{ id: Parts.TITLEBAR_PART, role: 'contentinfo', classes: ['titlebar'] },\n\t\t\t{ id: Parts.ACTIVITYBAR_PART, role: 'none', classes: ['activitybar', this.state.sideBar.position === Position.LEFT ? 'left' : 'right'] }, // Use role 'none' for some parts to make screen readers less chatty #114892\n\t\t\t{ id: Parts.SIDEBAR_PART, role: 'none', classes: ['sidebar', this.state.sideBar.position === Position.LEFT ? 'left' : 'right'] },\n\t\t\t{ id: Parts.EDITOR_PART, role: 'main', classes: ['editor'], options: { restorePreviousState: this.state.editor.restoreEditors } },\n\t\t\t{ id: Parts.PANEL_PART, role: 'none', classes: ['panel', positionToString(this.state.panel.position)] },\n\t\t\t{ id: Parts.STATUSBAR_PART, role: 'status', classes: ['statusbar'] }\n\t\t].forEach(({ id, role, classes, options }) => {\n\t\t\tconst partContainer = this.createPart(id, role, classes);\n\n\t\t\tthis.getPart(id).create(partContainer, options);\n\t\t});\n\n\t\t// Notification Handlers\n\t\tthis.createNotificationsHandlers(instantiationService, notificationService);\n\n\t\t// Add Workbench to DOM\n\t\tthis.parent.appendChild(this.container);\n\t}\n\n\tprivate createPart(id: string, role: string, classes: string[]): HTMLElement {\n\t\tconst part = document.createElement(role === 'status' ? 'footer' /* Use footer element for status bar #98376 */ : 'div');\n\t\tpart.classList.add('part', ...classes);\n\t\tpart.id = id;\n\t\tpart.setAttribute('role', role);\n\t\tif (role === 'status') {\n\t\t\tpart.setAttribute('aria-live', 'off');\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tprivate createNotificationsHandlers(instantiationService: IInstantiationService, notificationService: NotificationService): void {\n\n\t\t// Instantiate Notification components\n\t\tconst notificationsCenter = this._register(instantiationService.createInstance(NotificationsCenter, this.container, notificationService.model));\n\t\tconst notificationsToasts = this._register(instantiationService.createInstance(NotificationsToasts, this.container, notificationService.model));\n\t\tthis._register(instantiationService.createInstance(NotificationsAlerts, notificationService.model));\n\t\tconst notificationsStatus = instantiationService.createInstance(NotificationsStatus, notificationService.model);\n\t\tthis._register(instantiationService.createInstance(NotificationsTelemetry));\n\n\t\t// Visibility\n\t\tthis._register(notificationsCenter.onDidChangeVisibility(() => {\n\t\t\tnotificationsStatus.update(notificationsCenter.isVisible, notificationsToasts.isVisible);\n\t\t\tnotificationsToasts.update(notificationsCenter.isVisible);\n\t\t}));\n\n\t\tthis._register(notificationsToasts.onDidChangeVisibility(() => {\n\t\t\tnotificationsStatus.update(notificationsCenter.isVisible, notificationsToasts.isVisible);\n\t\t}));\n\n\t\t// Register Commands\n\t\tregisterNotificationCommands(notificationsCenter, notificationsToasts, notificationService.model);\n\n\t\t// Register with Layout\n\t\tthis.registerNotifications({\n\t\t\tonDidChangeNotificationsVisibility: Event.map(Event.any(notificationsToasts.onDidChangeVisibility, notificationsCenter.onDidChangeVisibility), () => notificationsToasts.isVisible || notificationsCenter.isVisible)\n\t\t});\n\t}\n\n\tprivate restore(lifecycleService: ILifecycleService): void {\n\n\t\t// Ask each part to restore\n\t\ttry {\n\t\t\tthis.restoreParts();\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\n\t\t// Transition into restored phase after layout has restored\n\t\t// but do not wait indefinitly on this to account for slow\n\t\t// editors restoring. Since the workbench is fully functional\n\t\t// even when the visible editors have not resolved, we still\n\t\t// want contributions on the `Restored` phase to work before\n\t\t// slow editors have resolved. But we also do not want fast\n\t\t// editors to resolve slow when too many contributions get\n\t\t// instantiated, so we find a middle ground solution via\n\t\t// `Promise.race`\n\t\tthis.whenReady.finally(() =>\n\t\t\tPromise.race([\n\t\t\t\tthis.whenRestored,\n\t\t\t\ttimeout(2000)\n\t\t\t]).finally(() => {\n\n\t\t\t\t// Set lifecycle phase to `Restored`\n\t\t\t\tlifecycleService.phase = LifecyclePhase.Restored;\n\n\t\t\t\t// Set lifecycle phase to `Eventually` after a short delay and when idle (min 2.5sec, max 5sec)\n\t\t\t\tconst eventuallyPhaseScheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\t\tthis._register(runWhenIdle(() => lifecycleService.phase = LifecyclePhase.Eventually, 2500));\n\t\t\t\t}, 2500));\n\t\t\t\teventuallyPhaseScheduler.schedule();\n\n\t\t\t\t// Update perf marks only when the layout is fully\n\t\t\t\t// restored. We want the time it takes to restore\n\t\t\t\t// editors to be included in these numbers\n\n\t\t\t\tfunction markDidStartWorkbench() {\n\t\t\t\t\tmark('code/didStartWorkbench');\n\t\t\t\t\tperformance.measure('perf: workbench create & restore', 'code/didLoadWorkbenchMain', 'code/didStartWorkbench');\n\t\t\t\t}\n\n\t\t\t\tif (this.isRestored()) {\n\t\t\t\t\tmarkDidStartWorkbench();\n\t\t\t\t} else {\n\t\t\t\t\tthis.whenRestored.finally(() => markDidStartWorkbench());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n"]}