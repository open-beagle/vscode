{"version":3,"file":"menuActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/menuActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { MenuId, IMenuService, IMenu, SubmenuItemAction, IMenuActionOptions } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\n\nclass MenuActions extends Disposable {\n\n\tprivate readonly menu: IMenu;\n\n\tprivate _primaryActions: IAction[] = [];\n\tget primaryActions() { return this._primaryActions; }\n\n\tprivate _secondaryActions: IAction[] = [];\n\tget secondaryActions() { return this._secondaryActions; }\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\tprivate readonly options: IMenuActionOptions | undefined,\n\t\tprivate readonly menuService: IMenuService,\n\t\tprivate readonly contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\t\tthis.menu = this._register(menuService.createMenu(menuId, contextKeyService));\n\t\tthis._register(this.menu.onDidChange(() => this.updateActions()));\n\t\tthis.updateActions();\n\t}\n\n\tprivate updateActions(): void {\n\t\tthis.disposables.clear();\n\t\tthis._primaryActions = [];\n\t\tthis._secondaryActions = [];\n\t\tthis.disposables.add(createAndFillInActionBarActions(this.menu, this.options, { primary: this._primaryActions, secondary: this._secondaryActions }));\n\t\tthis.disposables.add(this.updateSubmenus([...this._primaryActions, ...this._secondaryActions], {}));\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate updateSubmenus(actions: readonly IAction[], submenus: { [id: number]: IMenu }): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const action of actions) {\n\t\t\tif (action instanceof SubmenuItemAction && !submenus[action.item.submenu.id]) {\n\t\t\t\tconst menu = submenus[action.item.submenu.id] = disposables.add(this.menuService.createMenu(action.item.submenu, this.contextKeyService));\n\t\t\t\tdisposables.add(menu.onDidChange(() => this.updateActions()));\n\t\t\t\tdisposables.add(this.updateSubmenus(action.actions, submenus));\n\t\t\t}\n\t\t}\n\t\treturn disposables;\n\t}\n}\n\nexport class CompositeMenuActions extends Disposable {\n\n\tprivate readonly menuActions: MenuActions;\n\tprivate readonly contextMenuActionsDisposable = this._register(new MutableDisposable());\n\n\tprivate _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\tprivate readonly contextMenuId: MenuId | undefined,\n\t\tprivate readonly options: IMenuActionOptions | undefined,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) {\n\t\tsuper();\n\t\tthis.menuActions = this._register(new MenuActions(menuId, this.options, menuService, contextKeyService));\n\t\tthis._register(this.menuActions.onDidChange(() => this._onDidChange.fire()));\n\t}\n\n\tgetPrimaryActions(): IAction[] {\n\t\treturn this.menuActions.primaryActions;\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\treturn this.menuActions.secondaryActions;\n\t}\n\n\tgetContextMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tif (this.contextMenuId) {\n\t\t\tconst menu = this.menuService.createMenu(this.contextMenuId, this.contextKeyService);\n\t\t\tthis.contextMenuActionsDisposable.value = createAndFillInActionBarActions(menu, this.options, { primary: [], secondary: actions });\n\t\t\tmenu.dispose();\n\t\t}\n\t\treturn actions;\n\t}\n}\n"]}