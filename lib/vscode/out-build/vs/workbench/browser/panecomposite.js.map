{"version":3,"file":"panecomposite.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/panecomposite.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from 'vs/base/browser/dom';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IView } from 'vs/workbench/common/views';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { Composite } from 'vs/workbench/browser/composite';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ViewPaneContainer, ViewsSubMenu } from './parts/views/viewPaneContainer';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { IAction, Separator } from 'vs/base/common/actions';\nimport { SubmenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\n\nexport abstract class PaneComposite extends Composite implements IPaneComposite {\n\n\tprivate viewPaneContainer?: ViewPaneContainer;\n\n\tconstructor(\n\t\tid: string,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService protected storageService: IStorageService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IExtensionService protected extensionService: IExtensionService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(id, telemetryService, themeService, storageService);\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tthis.viewPaneContainer = this._register(this.createViewPaneContainer(parent));\n\t\tthis._register(this.viewPaneContainer.onTitleAreaUpdate(() => this.updateTitleArea()));\n\t\tthis.viewPaneContainer.create(parent);\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tsuper.setVisible(visible);\n\t\tthis.viewPaneContainer?.setVisible(visible);\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.viewPaneContainer?.layout(dimension);\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn this.viewPaneContainer?.getOptimalWidth() ?? 0;\n\t}\n\n\topenView<T extends IView>(id: string, focus?: boolean): T | undefined {\n\t\treturn this.viewPaneContainer?.openView(id, focus) as T;\n\t}\n\n\tgetViewPaneContainer(): ViewPaneContainer | undefined {\n\t\treturn this.viewPaneContainer;\n\t}\n\n\toverride getActionsContext(): unknown {\n\t\treturn this.getViewPaneContainer()?.getActionsContext();\n\t}\n\n\toverride getContextMenuActions(): readonly IAction[] {\n\t\treturn this.viewPaneContainer?.menuActions?.getContextMenuActions() ?? [];\n\t}\n\n\toverride getActions(): readonly IAction[] {\n\t\tconst result = [];\n\t\tif (this.viewPaneContainer?.menuActions) {\n\t\t\tresult.push(...this.viewPaneContainer.menuActions.getPrimaryActions());\n\t\t\tif (this.viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\t\tresult.push(...this.viewPaneContainer.panes[0].menuActions.getPrimaryActions());\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\toverride getSecondaryActions(): readonly IAction[] {\n\t\tif (!this.viewPaneContainer?.menuActions) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst viewPaneActions = this.viewPaneContainer.isViewMergedWithContainer() ? this.viewPaneContainer.panes[0].menuActions.getSecondaryActions() : [];\n\t\tlet menuActions = this.viewPaneContainer.menuActions.getSecondaryActions();\n\n\t\tconst viewsSubmenuActionIndex = menuActions.findIndex(action => action instanceof SubmenuItemAction && action.item.submenu === ViewsSubMenu);\n\t\tif (viewsSubmenuActionIndex !== -1) {\n\t\t\tconst viewsSubmenuAction = <SubmenuItemAction>menuActions[viewsSubmenuActionIndex];\n\t\t\tif (viewsSubmenuAction.actions.some(({ enabled }) => enabled)) {\n\t\t\t\tif (menuActions.length === 1 && viewPaneActions.length === 0) {\n\t\t\t\t\tmenuActions = viewsSubmenuAction.actions.slice();\n\t\t\t\t} else if (viewsSubmenuActionIndex !== 0) {\n\t\t\t\t\tmenuActions = [viewsSubmenuAction, ...menuActions.slice(0, viewsSubmenuActionIndex), ...menuActions.slice(viewsSubmenuActionIndex + 1)];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove views submenu if none of the actions are enabled\n\t\t\t\tmenuActions.splice(viewsSubmenuActionIndex, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (menuActions.length && viewPaneActions.length) {\n\t\t\treturn [\n\t\t\t\t...menuActions,\n\t\t\t\tnew Separator(),\n\t\t\t\t...viewPaneActions\n\t\t\t];\n\t\t}\n\n\t\treturn menuActions.length ? menuActions : viewPaneActions;\n\t}\n\n\toverride getActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\treturn this.viewPaneContainer?.getActionViewItem(action);\n\t}\n\n\toverride getTitle(): string {\n\t\treturn this.viewPaneContainer?.getTitle() ?? '';\n\t}\n\n\toverride saveState(): void {\n\t\tsuper.saveState();\n\t}\n\n\toverride focus(): void {\n\t\tthis.viewPaneContainer?.focus();\n\t}\n\n\tprotected abstract createViewPaneContainer(parent: HTMLElement): ViewPaneContainer;\n}\n"]}