{"version":3,"sources":["vs/workbench/browser/actions/workspaceActions.ts"],"names":[],"mappings":"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","file":"workspaceActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { localize } from 'vs/nls';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ADD_ROOT_FOLDER_COMMAND_ID, ADD_ROOT_FOLDER_LABEL, PICK_WORKSPACE_FOLDER_COMMAND_ID } from 'vs/workbench/browser/actions/workspaceCommands';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { MenuRegistry, MenuId, SyncActionDescriptor, Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { EmptyWorkspaceSupportContext, WorkbenchStateContext, WorkspaceFolderCountContext } from 'vs/workbench/browser/contextkeys';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchActionRegistry, Extensions } from 'vs/workbench/common/actions';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkspacesService, hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\nimport { WORKSPACE_TRUST_ENABLED } from 'vs/workbench/services/workspaces/common/workspaceTrust';\nimport { IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\n\nexport class OpenFileAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.files.openFile';\n\tstatic readonly LABEL = localize('openFile', \"Open File...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileDialogService private readonly dialogService: IFileDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(event?: unknown, data?: ITelemetryData): Promise<void> {\n\t\treturn this.dialogService.pickFileAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.files.openFolder';\n\tstatic readonly LABEL = localize('openFolder', \"Open Folder...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileDialogService private readonly dialogService: IFileDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(event?: unknown, data?: ITelemetryData): Promise<void> {\n\t\treturn this.dialogService.pickFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFileFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.files.openFileFolder';\n\tstatic readonly LABEL = localize('openFileFolder', \"Open...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileDialogService private readonly dialogService: IFileDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(event?: unknown, data?: ITelemetryData): Promise<void> {\n\t\treturn this.dialogService.pickFileFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenWorkspaceAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openWorkspace';\n\tstatic readonly LABEL = localize('openWorkspaceAction', \"Open Workspace...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileDialogService private readonly dialogService: IFileDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(event?: unknown, data?: ITelemetryData): Promise<void> {\n\t\treturn this.dialogService.pickWorkspaceAndOpen({ telemetryExtraData: data });\n\t}\n}\n\nexport class CloseWorkspaceAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeFolder';\n\tstatic readonly LABEL = localize('closeWorkspace', \"Close Workspace\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tthis.notificationService.info(localize('noWorkspaceOrFolderOpened', \"There is currently no workspace or folder opened in this instance to close.\"));\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.hostService.openWindow({ forceReuseWindow: true, remoteAuthority: this.environmentService.remoteAuthority });\n\t}\n}\n\nexport class OpenWorkspaceConfigFileAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openWorkspaceConfigFile';\n\tstatic readonly LABEL = localize('openWorkspaceConfigFile', \"Open Workspace Configuration File\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.enabled = !!this.workspaceContextService.getWorkspace().configuration;\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst configuration = this.workspaceContextService.getWorkspace().configuration;\n\t\tif (configuration) {\n\t\t\tawait this.editorService.openEditor({ resource: configuration, options: { pinned: true } });\n\t\t}\n\t}\n}\n\nexport class AddRootFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.addRootFolder';\n\tstatic readonly LABEL = ADD_ROOT_FOLDER_LABEL;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.commandService.executeCommand(ADD_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class GlobalRemoveRootFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.removeRootFolder';\n\tstatic readonly LABEL = localize('globalRemoveFolderFromWorkspace', \"Remove Folder from Workspace...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst state = this.contextService.getWorkbenchState();\n\n\t\t// Workspace / Folder\n\t\tif (state === WorkbenchState.WORKSPACE || state === WorkbenchState.FOLDER) {\n\t\t\tconst folder = await this.commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\t\tif (folder) {\n\t\t\t\tawait this.workspaceEditingService.removeFolders([folder.uri]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class SaveWorkspaceAsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.saveWorkspaceAs';\n\tstatic readonly LABEL = localize('saveWorkspaceAsAction', \"Save Workspace As...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService\n\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst configPathUri = await this.workspaceEditingService.pickNewWorkspacePath();\n\t\tif (configPathUri && hasWorkspaceFileExtension(configPathUri)) {\n\t\t\tswitch (this.contextService.getWorkbenchState()) {\n\t\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\t\tconst folders = this.contextService.getWorkspace().folders.map(folder => ({ uri: folder.uri }));\n\t\t\t\t\treturn this.workspaceEditingService.createAndEnterWorkspace(folders, configPathUri);\n\t\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\t\treturn this.workspaceEditingService.saveAndEnterWorkspace(configPathUri);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DuplicateWorkspaceInNewWindowAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.duplicateWorkspaceInNewWindow';\n\tstatic readonly LABEL = localize('duplicateWorkspaceInNewWindow', \"Duplicate As Workspace in New Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst folders = this.workspaceContextService.getWorkspace().folders;\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\n\t\tconst newWorkspace = await this.workspacesService.createUntitledWorkspace(folders, remoteAuthority);\n\t\tawait this.workspaceEditingService.copyWorkspaceSettings(newWorkspace);\n\n\t\treturn this.hostService.openWindow([{ workspaceUri: newWorkspace.configPath }], { forceNewWindow: true });\n\t}\n}\n\nclass WorkspaceTrustManageAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.manageTrust',\n\t\t\ttitle: { value: localize('manageTrustAction', \"Manage Workspace Trust\"), original: 'Manage Workspace Trust' },\n\t\t\tprecondition: ContextKeyExpr.and(IsWebContext.negate(), ContextKeyExpr.equals(`config.${WORKSPACE_TRUST_ENABLED}`, true)),\n\t\t\tcategory: localize('workspacesCategory', \"Workspaces\"),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand('workbench.trust.manage');\n\t}\n}\n\nregisterAction2(WorkspaceTrustManageAction);\n\n// --- Actions Registration\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\nconst workspacesCategory = localize('workspaces', \"Workspaces\");\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(AddRootFolderAction), 'Workspaces: Add Folder to Workspace...', workspacesCategory);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(GlobalRemoveRootFolderAction), 'Workspaces: Remove Folder from Workspace...', workspacesCategory);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(CloseWorkspaceAction, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_F) }), 'Workspaces: Close Workspace', workspacesCategory, EmptyWorkspaceSupportContext);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(SaveWorkspaceAsAction), 'Workspaces: Save Workspace As...', workspacesCategory, EmptyWorkspaceSupportContext);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(DuplicateWorkspaceInNewWindowAction), 'Workspaces: Duplicate As Workspace in New Window', workspacesCategory);\n\n// --- Menu Registration\n\nCommandsRegistry.registerCommand(OpenWorkspaceConfigFileAction.ID, serviceAccessor => {\n\tserviceAccessor.get(IInstantiationService).createInstance(OpenWorkspaceConfigFileAction, OpenWorkspaceConfigFileAction.ID, OpenWorkspaceConfigFileAction.LABEL).run();\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\t\ttitle: localize({ key: 'miAddFolderToWorkspace', comment: ['&& denotes a mnemonic'] }, \"A&&dd Folder to Workspace...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: SaveWorkspaceAsAction.ID,\n\t\ttitle: localize('miSaveWorkspaceAs', \"Save Workspace As...\")\n\t},\n\torder: 2,\n\twhen: EmptyWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: OpenWorkspaceConfigFileAction.ID,\n\t\ttitle: { value: `${workspacesCategory}: ${OpenWorkspaceConfigFileAction.LABEL}`, original: 'Workspaces: Open Workspace Configuration File' },\n\t},\n\twhen: WorkbenchStateContext.isEqualTo('workspace')\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseFolder', comment: ['&& denotes a mnemonic'] }, \"Close &&Folder\"),\n\t\tprecondition: WorkspaceFolderCountContext.notEqualsTo('0')\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('workspace'), EmptyWorkspaceSupportContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseWorkspace', comment: ['&& denotes a mnemonic'] }, \"Close &&Workspace\")\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('workspace'), EmptyWorkspaceSupportContext)\n});\n"]}