{"version":3,"sources":["vs/workbench/browser/actions/layoutActions.ts"],"names":[],"mappings":"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","file":"layoutActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Action } from 'vs/base/common/actions';\nimport { SyncActionDescriptor, MenuId, MenuRegistry, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchActionRegistry, Extensions as WorkbenchExtensions, CATEGORIES } from 'vs/workbench/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeyMod, KeyCode, KeyChord } from 'vs/base/common/keyCodes';\nimport { isWindows, isLinux, isWeb } from 'vs/base/common/platform';\nimport { IsMacNativeContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { InEditorZenModeContext, IsCenteredLayoutContext, EditorAreaVisibleContext } from 'vs/workbench/common/editor';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { SideBarVisibleContext } from 'vs/workbench/common/viewlet';\nimport { IViewDescriptorService, IViewsService, FocusedViewContext, ViewContainerLocation, IViewDescriptor, ViewContainerLocationToString } from 'vs/workbench/common/views';\nimport { IQuickInputService, IQuickPickItem, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IActivityBarService } from 'vs/workbench/services/activityBar/browser/activityBarService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(WorkbenchExtensions.WorkbenchActions);\n\n// --- Close Side Bar\n\nclass CloseSidebarAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeSidebar',\n\t\t\ttitle: { value: localize('closeSidebar', \"Close Side Bar\"), original: 'Close Side Bar' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IWorkbenchLayoutService).setSideBarHidden(true);\n\t}\n}\n\nregisterAction2(CloseSidebarAction);\n\n// --- Toggle Activity Bar\n\nexport class ToggleActivityBarVisibilityAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleActivityBarVisibility';\n\tstatic readonly LABEL = localize('toggleActivityBar', \"Toggle Activity Bar Visibility\");\n\n\tprivate static readonly activityBarVisibleKey = 'workbench.activityBar.visible';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleActivityBarVisibilityAction.ID,\n\t\t\ttitle: { value: ToggleActivityBarVisibilityAction.LABEL, original: 'Toggle Activity Bar Visibility' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst visibility = layoutService.isVisible(Parts.ACTIVITYBAR_PART);\n\t\tconst newVisibilityValue = !visibility;\n\n\t\tconfigurationService.updateValue(ToggleActivityBarVisibilityAction.activityBarVisibleKey, newVisibilityValue);\n\t}\n}\n\nregisterAction2(ToggleActivityBarVisibilityAction);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '2_workbench_layout',\n\tcommand: {\n\t\tid: ToggleActivityBarVisibilityAction.ID,\n\t\ttitle: localize({ key: 'miShowActivityBar', comment: ['&& denotes a mnemonic'] }, \"Show &&Activity Bar\"),\n\t\ttoggled: ContextKeyExpr.equals('config.workbench.activityBar.visible', true)\n\t},\n\torder: 4\n});\n\n// --- Toggle Centered Layout\n\nclass ToggleCenteredLayout extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleCenteredLayout';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleCenteredLayout.ID,\n\t\t\ttitle: { value: localize('toggleCenteredLayout', \"Toggle Centered Layout\"), original: 'Toggle Centered Layout' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.centerEditorLayout(!layoutService.isEditorLayoutCentered());\n\t}\n}\n\nregisterAction2(ToggleCenteredLayout);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '1_toggle_view',\n\tcommand: {\n\t\tid: ToggleCenteredLayout.ID,\n\t\ttitle: localize({ key: 'miToggleCenteredLayout', comment: ['&& denotes a mnemonic'] }, \"&&Centered Layout\"),\n\t\ttoggled: IsCenteredLayoutContext\n\t},\n\torder: 3\n});\n\n// --- Toggle Sidebar Position\n\nexport class ToggleSidebarPositionAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleSidebarPosition';\n\tstatic readonly LABEL = localize('toggleSidebarPosition', \"Toggle Side Bar Position\");\n\n\tprivate static readonly sidebarPositionConfigurationKey = 'workbench.sideBar.location';\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\tconst position = this.layoutService.getSideBarPosition();\n\t\tconst newPositionValue = (position === Position.LEFT) ? 'right' : 'left';\n\n\t\treturn this.configurationService.updateValue(ToggleSidebarPositionAction.sidebarPositionConfigurationKey, newPositionValue);\n\t}\n\n\tstatic getLabel(layoutService: IWorkbenchLayoutService): string {\n\t\treturn layoutService.getSideBarPosition() === Position.LEFT ? localize('moveSidebarRight', \"Move Side Bar Right\") : localize('moveSidebarLeft', \"Move Side Bar Left\");\n\t}\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: { value: localize('toggleSidebarPosition', \"Toggle Side Bar Position\"), original: 'Toggle Side Bar Position' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IInstantiationService).createInstance(ToggleSidebarPositionAction, ToggleSidebarPositionAction.ID, ToggleSidebarPositionAction.LABEL).run();\n\t}\n});\nMenuRegistry.appendMenuItems([{\n\tid: MenuId.ViewContainerTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar right', \"Move Side Bar Right\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar right', \"Move Side Bar Right\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewContainerTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar left', \"Move Side Bar Left\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar left', \"Move Side Bar Left\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}]);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '3_workbench_layout_move',\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize({ key: 'miMoveSidebarRight', comment: ['&& denotes a mnemonic'] }, \"&&Move Side Bar Right\")\n\t},\n\twhen: ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'),\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '3_workbench_layout_move',\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize({ key: 'miMoveSidebarLeft', comment: ['&& denotes a mnemonic'] }, \"&&Move Side Bar Left\")\n\t},\n\twhen: ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'),\n\torder: 2\n});\n\n// --- Toggle Sidebar Visibility\n\nexport class ToggleEditorVisibilityAction extends Action {\n\tstatic readonly ID = 'workbench.action.toggleEditorVisibility';\n\tstatic readonly LABEL = localize('toggleEditor', \"Toggle Editor Area Visibility\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.layoutService.toggleMaximizedPanel();\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleEditorVisibilityAction), 'View: Toggle Editor Area Visibility', CATEGORIES.View.value);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '2_workbench_layout',\n\tcommand: {\n\t\tid: ToggleEditorVisibilityAction.ID,\n\t\ttitle: localize({ key: 'miShowEditorArea', comment: ['&& denotes a mnemonic'] }, \"Show &&Editor Area\"),\n\t\ttoggled: EditorAreaVisibleContext\n\t},\n\torder: 5\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '2_appearance',\n\ttitle: localize({ key: 'miAppearance', comment: ['&& denotes a mnemonic'] }, \"&&Appearance\"),\n\tsubmenu: MenuId.MenubarAppearanceMenu,\n\torder: 1\n});\n\nexport const TOGGLE_SIDEBAR_VISIBILITY_ACTION_ID = 'workbench.action.toggleSidebarVisibility';\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_SIDEBAR_VISIBILITY_ACTION_ID,\n\t\t\ttitle: { value: localize('toggleSidebar', \"Toggle Side Bar Visibility\"), original: 'Toggle Side Bar Visibility' },\n\t\t\tcategory: CATEGORIES.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_B\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tlayoutService.setSideBarHidden(layoutService.isVisible(Parts.SIDEBAR_PART));\n\t}\n});\nMenuRegistry.appendMenuItems([{\n\tid: MenuId.ViewContainerTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: TOGGLE_SIDEBAR_VISIBILITY_ACTION_ID,\n\t\t\ttitle: localize('compositePart.hideSideBarLabel', \"Hide Side Bar\"),\n\t\t},\n\t\twhen: ContextKeyExpr.and(SideBarVisibleContext, ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 2\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: TOGGLE_SIDEBAR_VISIBILITY_ACTION_ID,\n\t\t\ttitle: localize('compositePart.hideSideBarLabel', \"Hide Side Bar\"),\n\t\t},\n\t\twhen: ContextKeyExpr.and(SideBarVisibleContext, ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 2\n\t}\n}]);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '2_workbench_layout',\n\tcommand: {\n\t\tid: TOGGLE_SIDEBAR_VISIBILITY_ACTION_ID,\n\t\ttitle: localize({ key: 'miShowSidebar', comment: ['&& denotes a mnemonic'] }, \"Show &&Side Bar\"),\n\t\ttoggled: SideBarVisibleContext\n\t},\n\torder: 1\n});\n\n// --- Toggle Statusbar Visibility\n\nexport class ToggleStatusbarVisibilityAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleStatusbarVisibility';\n\tstatic readonly LABEL = localize('toggleStatusbar', \"Toggle Status Bar Visibility\");\n\n\tprivate static readonly statusbarVisibleKey = 'workbench.statusBar.visible';\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\tconst visibility = this.layoutService.isVisible(Parts.STATUSBAR_PART);\n\t\tconst newVisibilityValue = !visibility;\n\n\t\treturn this.configurationService.updateValue(ToggleStatusbarVisibilityAction.statusbarVisibleKey, newVisibilityValue);\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleStatusbarVisibilityAction), 'View: Toggle Status Bar Visibility', CATEGORIES.View.value);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '2_workbench_layout',\n\tcommand: {\n\t\tid: ToggleStatusbarVisibilityAction.ID,\n\t\ttitle: localize({ key: 'miShowStatusbar', comment: ['&& denotes a mnemonic'] }, \"Show S&&tatus Bar\"),\n\t\ttoggled: ContextKeyExpr.equals('config.workbench.statusBar.visible', true)\n\t},\n\torder: 3\n});\n\n// --- Toggle Tabs Visibility\n\nclass ToggleTabsVisibilityAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleTabsVisibility';\n\tstatic readonly LABEL = localize('toggleTabs', \"Toggle Tab Visibility\");\n\n\tprivate static readonly tabsVisibleKey = 'workbench.editor.showTabs';\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\tconst visibility = this.configurationService.getValue<string>(ToggleTabsVisibilityAction.tabsVisibleKey);\n\t\tconst newVisibilityValue = !visibility;\n\n\t\treturn this.configurationService.updateValue(ToggleTabsVisibilityAction.tabsVisibleKey, newVisibilityValue);\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleTabsVisibilityAction, {\n\tprimary: undefined,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KEY_W, },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KEY_W, }\n}), 'View: Toggle Tab Visibility', CATEGORIES.View.value);\n\n// --- Toggle Zen Mode\n\nclass ToggleZenMode extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleZenMode';\n\tstatic readonly LABEL = localize('toggleZenMode', \"Toggle Zen Mode\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.layoutService.toggleZenMode();\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleZenMode, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_Z) }), 'View: Toggle Zen Mode', CATEGORIES.View.value);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '1_toggle_view',\n\tcommand: {\n\t\tid: ToggleZenMode.ID,\n\t\ttitle: localize('miToggleZenMode', \"Zen Mode\"),\n\t\ttoggled: InEditorZenModeContext\n\t},\n\torder: 2\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.exitZenMode',\n\tweight: KeybindingWeight.EditorContrib - 1000,\n\thandler(accessor: ServicesAccessor) {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tlayoutService.toggleZenMode();\n\t},\n\twhen: InEditorZenModeContext,\n\tprimary: KeyChord(KeyCode.Escape, KeyCode.Escape)\n});\n\n// --- Toggle Menu Bar\n\nexport class ToggleMenuBarAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleMenuBar';\n\tstatic readonly LABEL = localize('toggleMenuBar', \"Toggle Menu Bar\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.layoutService.toggleMenuBar();\n\t}\n}\n\nif (isWindows || isLinux || isWeb) {\n\tregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleMenuBarAction), 'View: Toggle Menu Bar', CATEGORIES.View.value);\n}\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '2_workbench_layout',\n\tcommand: {\n\t\tid: ToggleMenuBarAction.ID,\n\t\ttitle: localize({ key: 'miShowMenuBar', comment: ['&& denotes a mnemonic'] }, \"Show Menu &&Bar\"),\n\t\ttoggled: ContextKeyExpr.and(IsMacNativeContext.toNegated(), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'hidden'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'toggle'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'compact'))\n\t},\n\twhen: IsMacNativeContext.toNegated(),\n\torder: 0\n});\n\n// --- Reset View Positions\n\nexport class ResetViewLocationsAction extends Action {\n\tstatic readonly ID = 'workbench.action.resetViewLocations';\n\tstatic readonly LABEL = localize('resetViewLocations', \"Reset View Locations\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewDescriptorService private viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.viewDescriptorService.reset();\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ResetViewLocationsAction), 'View: Reset View Locations', CATEGORIES.View.value);\n\n// --- Move View with Command\nexport class MoveViewAction extends Action {\n\tstatic readonly ID = 'workbench.action.moveView';\n\tstatic readonly LABEL = localize('moveView', \"Move View\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewDescriptorService private viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IQuickInputService private quickInputService: IQuickInputService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@IActivityBarService private activityBarService: IActivityBarService,\n\t\t@IPanelService private panelService: IPanelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprivate getViewItems(): Array<IQuickPickItem | IQuickPickSeparator> {\n\t\tconst results: Array<IQuickPickItem | IQuickPickSeparator> = [];\n\n\t\tconst viewlets = this.activityBarService.getVisibleViewContainerIds();\n\t\tviewlets.forEach(viewletId => {\n\t\t\tconst container = this.viewDescriptorService.getViewContainerById(viewletId)!;\n\t\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(container);\n\n\t\t\tlet hasAddedView = false;\n\t\t\tcontainerModel.visibleViewDescriptors.forEach(viewDescriptor => {\n\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: localize('sidebarContainer', \"Side Bar / {0}\", containerModel.title)\n\t\t\t\t\t\t});\n\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\tlabel: viewDescriptor.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst panels = this.panelService.getPinnedPanels();\n\t\tpanels.forEach(panel => {\n\t\t\tconst container = this.viewDescriptorService.getViewContainerById(panel.id)!;\n\t\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(container);\n\n\t\t\tlet hasAddedView = false;\n\t\t\tcontainerModel.visibleViewDescriptors.forEach(viewDescriptor => {\n\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: localize('panelContainer', \"Panel / {0}\", containerModel.title)\n\t\t\t\t\t\t});\n\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\tlabel: viewDescriptor.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn results;\n\t}\n\n\tprivate async getView(viewId?: string): Promise<string> {\n\t\tconst quickPick = this.quickInputService.createQuickPick();\n\t\tquickPick.placeholder = localize('moveFocusedView.selectView', \"Select a View to Move\");\n\t\tquickPick.items = this.getViewItems();\n\t\tquickPick.selectedItems = quickPick.items.filter(item => (item as IQuickPickItem).id === viewId) as IQuickPickItem[];\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\tconst viewId = quickPick.selectedItems[0];\n\t\t\t\tif (viewId.id) {\n\t\t\t\t\tresolve(viewId.id);\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\n\t\t\t\tquickPick.hide();\n\t\t\t});\n\n\t\t\tquickPick.onDidHide(() => reject());\n\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst focusedViewId = FocusedViewContext.getValue(this.contextKeyService);\n\t\tlet viewId: string;\n\n\t\tif (focusedViewId && this.viewDescriptorService.getViewDescriptorById(focusedViewId)?.canMoveView) {\n\t\t\tviewId = focusedViewId;\n\t\t}\n\n\t\tviewId = await this.getView(viewId!);\n\n\t\tif (!viewId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.instantiationService.createInstance(MoveFocusedViewAction, MoveFocusedViewAction.ID, MoveFocusedViewAction.LABEL).run(viewId);\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(MoveViewAction), 'View: Move View', CATEGORIES.View.value);\n\n// --- Move Focused View with Command\nexport class MoveFocusedViewAction extends Action {\n\tstatic readonly ID = 'workbench.action.moveFocusedView';\n\tstatic readonly LABEL = localize('moveFocusedView', \"Move Focused View\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewDescriptorService private viewDescriptorService: IViewDescriptorService,\n\t\t@IViewsService private viewsService: IViewsService,\n\t\t@IQuickInputService private quickInputService: IQuickInputService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t\t@IActivityBarService private activityBarService: IActivityBarService,\n\t\t@IPanelService private panelService: IPanelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(viewId: string): Promise<void> {\n\t\tconst focusedViewId = viewId || FocusedViewContext.getValue(this.contextKeyService);\n\n\t\tif (focusedViewId === undefined || focusedViewId.trim() === '') {\n\t\t\tthis.notificationService.error(localize('moveFocusedView.error.noFocusedView', \"There is no view currently focused.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\tif (!viewDescriptor || !viewDescriptor.canMoveView) {\n\t\t\tthis.notificationService.error(localize('moveFocusedView.error.nonMovableView', \"The currently focused view is not movable.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst quickPick = this.quickInputService.createQuickPick();\n\t\tquickPick.placeholder = localize('moveFocusedView.selectDestination', \"Select a Destination for the View\");\n\t\tquickPick.title = localize({ key: 'moveFocusedView.title', comment: ['{0} indicates the title of the view the user has selected to move.'] }, \"View: Move {0}\", viewDescriptor.name);\n\n\t\tconst items: Array<IQuickPickItem | IQuickPickSeparator> = [];\n\t\tconst currentContainer = this.viewDescriptorService.getViewContainerByViewId(focusedViewId)!;\n\t\tconst currentLocation = this.viewDescriptorService.getViewLocationById(focusedViewId)!;\n\t\tconst isViewSolo = this.viewDescriptorService.getViewContainerModel(currentContainer).allViewDescriptors.length === 1;\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.Panel)) {\n\t\t\titems.push({\n\t\t\t\tid: '_.panel.newcontainer',\n\t\t\t\tlabel: localize({ key: 'moveFocusedView.newContainerInPanel', comment: ['Creates a new top-level tab in the panel.'] }, \"New Panel Entry\"),\n\t\t\t});\n\t\t}\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.Sidebar)) {\n\t\t\titems.push({\n\t\t\t\tid: '_.sidebar.newcontainer',\n\t\t\t\tlabel: localize('moveFocusedView.newContainerInSidebar', \"New Side Bar Entry\")\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\ttype: 'separator',\n\t\t\tlabel: localize('sidebar', \"Side Bar\")\n\t\t});\n\n\t\tconst pinnedViewlets = this.activityBarService.getVisibleViewContainerIds();\n\t\titems.push(...pinnedViewlets\n\t\t\t.filter(viewletId => {\n\t\t\t\tif (viewletId === this.viewDescriptorService.getViewContainerByViewId(focusedViewId)!.id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !this.viewDescriptorService.getViewContainerById(viewletId)!.rejectAddedViews;\n\t\t\t})\n\t\t\t.map(viewletId => {\n\t\t\t\treturn {\n\t\t\t\t\tid: viewletId,\n\t\t\t\t\tlabel: this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerById(viewletId)!)!.title\n\t\t\t\t};\n\t\t\t}));\n\n\t\titems.push({\n\t\t\ttype: 'separator',\n\t\t\tlabel: localize('panel', \"Panel\")\n\t\t});\n\n\t\tconst pinnedPanels = this.panelService.getPinnedPanels();\n\t\titems.push(...pinnedPanels\n\t\t\t.filter(panel => {\n\t\t\t\tif (panel.id === this.viewDescriptorService.getViewContainerByViewId(focusedViewId)!.id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !this.viewDescriptorService.getViewContainerById(panel.id)!.rejectAddedViews;\n\t\t\t})\n\t\t\t.map(panel => {\n\t\t\t\treturn {\n\t\t\t\t\tid: panel.id,\n\t\t\t\t\tlabel: this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerById(panel.id)!)!.title\n\t\t\t\t};\n\t\t\t}));\n\n\t\tquickPick.items = items;\n\n\t\tquickPick.onDidAccept(() => {\n\t\t\tconst destination = quickPick.selectedItems[0];\n\n\t\t\tif (destination.id === '_.panel.newcontainer') {\n\t\t\t\tthis.viewDescriptorService.moveViewToLocation(viewDescriptor!, ViewContainerLocation.Panel);\n\t\t\t\tthis.viewsService.openView(focusedViewId, true);\n\t\t\t} else if (destination.id === '_.sidebar.newcontainer') {\n\t\t\t\tthis.viewDescriptorService.moveViewToLocation(viewDescriptor!, ViewContainerLocation.Sidebar);\n\t\t\t\tthis.viewsService.openView(focusedViewId, true);\n\t\t\t} else if (destination.id) {\n\t\t\t\tthis.viewDescriptorService.moveViewsToContainer([viewDescriptor], this.viewDescriptorService.getViewContainerById(destination.id)!);\n\t\t\t\tthis.viewsService.openView(focusedViewId, true);\n\t\t\t}\n\n\t\t\tquickPick.hide();\n\t\t});\n\n\t\tquickPick.show();\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(MoveFocusedViewAction), 'View: Move Focused View', CATEGORIES.View.value, FocusedViewContext.notEqualsTo(''));\n\n// --- Reset View Location with Command\nexport class ResetFocusedViewLocationAction extends Action {\n\tstatic readonly ID = 'workbench.action.resetFocusedViewLocation';\n\tstatic readonly LABEL = localize('resetFocusedViewLocation', \"Reset Focused View Location\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewDescriptorService private viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t\t@IViewsService private viewsService: IViewsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst focusedViewId = FocusedViewContext.getValue(this.contextKeyService);\n\n\t\tlet viewDescriptor: IViewDescriptor | null = null;\n\t\tif (focusedViewId !== undefined && focusedViewId.trim() !== '') {\n\t\t\tviewDescriptor = this.viewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\t}\n\n\t\tif (!viewDescriptor) {\n\t\t\tthis.notificationService.error(localize('resetFocusedView.error.noFocusedView', \"There is no view currently focused.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultContainer = this.viewDescriptorService.getDefaultContainerById(viewDescriptor.id);\n\t\tif (!defaultContainer || defaultContainer === this.viewDescriptorService.getViewContainerByViewId(viewDescriptor.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewDescriptorService.moveViewsToContainer([viewDescriptor], defaultContainer);\n\t\tthis.viewsService.openView(viewDescriptor.id, true);\n\n\t}\n}\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ResetFocusedViewLocationAction), 'View: Reset Focused View Location', CATEGORIES.View.value, FocusedViewContext.notEqualsTo(''));\n\n\n// --- Resize View\n\nexport abstract class BaseResizeViewAction extends Action2 {\n\n\tprotected static readonly RESIZE_INCREMENT = 6.5; // This is a media-size percentage\n\n\tprotected resizePart(widthChange: number, heightChange: number, layoutService: IWorkbenchLayoutService, partToResize?: Parts): void {\n\n\t\tlet part: Parts | undefined;\n\t\tif (partToResize === undefined) {\n\t\t\tconst isEditorFocus = layoutService.hasFocus(Parts.EDITOR_PART);\n\t\t\tconst isSidebarFocus = layoutService.hasFocus(Parts.SIDEBAR_PART);\n\t\t\tconst isPanelFocus = layoutService.hasFocus(Parts.PANEL_PART);\n\n\t\t\tif (isSidebarFocus) {\n\t\t\t\tpart = Parts.SIDEBAR_PART;\n\t\t\t} else if (isPanelFocus) {\n\t\t\t\tpart = Parts.PANEL_PART;\n\t\t\t} else if (isEditorFocus) {\n\t\t\t\tpart = Parts.EDITOR_PART;\n\t\t\t}\n\t\t} else {\n\t\t\tpart = partToResize;\n\t\t}\n\n\t\tif (part) {\n\t\t\tlayoutService.resizePart(part, widthChange, heightChange);\n\t\t}\n\t}\n}\n\nexport class IncreaseViewSizeAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewSize',\n\t\t\ttitle: { value: localize('increaseViewSize', \"Increase Current View Size\"), original: 'Increase Current View Size' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(BaseResizeViewAction.RESIZE_INCREMENT, BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService));\n\t}\n}\n\nexport class IncreaseViewWidthAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewWidth',\n\t\t\ttitle: { value: localize('increaseEditorWidth', \"Increase Editor Width\"), original: 'Increase Editor Width' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(BaseResizeViewAction.RESIZE_INCREMENT, 0, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nexport class IncreaseViewHeightAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewHeight',\n\t\t\ttitle: { value: localize('increaseEditorHeight', \"Increase Editor Height\"), original: 'Increase Editor Height' },\n\t\t\tf1: true\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(0, BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nexport class DecreaseViewSizeAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewSize',\n\t\t\ttitle: { value: localize('decreaseViewSize', \"Decrease Current View Size\"), original: 'Decrease Current View Size' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(-BaseResizeViewAction.RESIZE_INCREMENT, -BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService));\n\t}\n}\n\nexport class DecreaseViewWidthAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewWidth',\n\t\t\ttitle: { value: localize('decreaseEditorWidth', \"Decrease Editor Width\"), original: 'Decrease Editor Width' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(-BaseResizeViewAction.RESIZE_INCREMENT, 0, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\n\nexport class DecreaseViewHeightAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewHeight',\n\t\t\ttitle: { value: localize('decreaseEditorHeight', \"Decrease Editor Height\"), original: 'Decrease Editor Height' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tthis.resizePart(0, -BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nregisterAction2(IncreaseViewSizeAction);\nregisterAction2(IncreaseViewWidthAction);\nregisterAction2(IncreaseViewHeightAction);\n\nregisterAction2(DecreaseViewSizeAction);\nregisterAction2(DecreaseViewWidthAction);\nregisterAction2(DecreaseViewHeightAction);\n"]}