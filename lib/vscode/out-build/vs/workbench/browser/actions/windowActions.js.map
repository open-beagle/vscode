{"version":3,"sources":["vs/workbench/browser/actions/windowActions.ts"],"names":[],"mappings":"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","file":"windowActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { IWindowOpenable } from 'vs/platform/windows/common/windows';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { SyncActionDescriptor, MenuRegistry, MenuId, Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IsFullscreenContext } from 'vs/workbench/browser/contextkeys';\nimport { IsMacNativeContext, IsDevelopmentContext, IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { IWorkbenchActionRegistry, Extensions, CATEGORIES } from 'vs/workbench/common/actions';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputButton, IQuickInputService, IQuickPickSeparator, IKeyMods, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IRecent, isRecentFolder, isRecentWorkspace, IWorkspacesService, IWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { splitName } from 'vs/base/common/labels';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { inQuickPickContext, getQuickNavigateHandler } from 'vs/workbench/browser/quickaccess';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { isHTMLElement } from 'vs/base/browser/dom';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport const inRecentFilesPickerContextKey = 'inRecentFilesPicker';\n\ninterface IRecentlyOpenedPick extends IQuickPickItem {\n\tresource: URI,\n\topenable: IWindowOpenable;\n}\n\nabstract class BaseOpenRecentAction extends Action {\n\n\tprivate readonly removeFromRecentlyOpened: IQuickInputButton = {\n\t\ticonClass: Codicon.removeClose.classNames,\n\t\ttooltip: localize('remove', \"Remove from Recently Opened\")\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedFolder: IQuickInputButton = {\n\t\ticonClass: 'dirty-workspace ' + Codicon.closeDirty.classNames,\n\t\ttooltip: localize('dirtyRecentlyOpenedFolder', \"Folder With Unsaved Files\"),\n\t\talwaysVisible: true\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedWorkspace: IQuickInputButton = {\n\t\t...this.dirtyRecentlyOpenedFolder,\n\t\ttooltip: localize('dirtyRecentlyOpenedWorkspace', \"Workspace With Unsaved Files\"),\n\t};\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate workspacesService: IWorkspacesService,\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate contextService: IWorkspaceContextService,\n\t\tprivate labelService: ILabelService,\n\t\tprivate keybindingService: IKeybindingService,\n\t\tprivate modelService: IModelService,\n\t\tprivate modeService: IModeService,\n\t\tprivate hostService: IHostService,\n\t\tprivate dialogService: IDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(): Promise<void> {\n\t\tconst recentlyOpened = await this.workspacesService.getRecentlyOpened();\n\t\tconst dirtyWorkspacesAndFolders = await this.workspacesService.getDirtyWorkspaces();\n\n\t\tlet hasWorkspaces = false;\n\n\t\t// Identify all folders and workspaces with unsaved files\n\t\tconst dirtyFolders = new ResourceMap<boolean>();\n\t\tconst dirtyWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const dirtyWorkspace of dirtyWorkspacesAndFolders) {\n\t\t\tif (URI.isUri(dirtyWorkspace)) {\n\t\t\t\tdirtyFolders.set(dirtyWorkspace, true);\n\t\t\t} else {\n\t\t\t\tdirtyWorkspaces.set(dirtyWorkspace.configPath, dirtyWorkspace);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Identify all recently opened folders and workspaces\n\t\tconst recentFolders = new ResourceMap<boolean>();\n\t\tconst recentWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tif (isRecentFolder(recent)) {\n\t\t\t\trecentFolders.set(recent.folderUri, true);\n\t\t\t} else {\n\t\t\t\trecentWorkspaces.set(recent.workspace.configPath, recent.workspace);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Fill in all known recently opened workspaces\n\t\tconst workspacePicks: IRecentlyOpenedPick[] = [];\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tconst isDirty = isRecentFolder(recent) ? dirtyFolders.has(recent.folderUri) : dirtyWorkspaces.has(recent.workspace.configPath);\n\n\t\t\tworkspacePicks.push(this.toQuickPick(recent, isDirty));\n\t\t}\n\n\t\t// Fill any backup workspace that is not yet shown at the end\n\t\tfor (const dirtyWorkspaceOrFolder of dirtyWorkspacesAndFolders) {\n\t\t\tif (URI.isUri(dirtyWorkspaceOrFolder) && !recentFolders.has(dirtyWorkspaceOrFolder)) {\n\t\t\t\tworkspacePicks.push(this.toQuickPick({ folderUri: dirtyWorkspaceOrFolder }, true));\n\t\t\t} else if (isWorkspaceIdentifier(dirtyWorkspaceOrFolder) && !recentWorkspaces.has(dirtyWorkspaceOrFolder.configPath)) {\n\t\t\t\tworkspacePicks.push(this.toQuickPick({ workspace: dirtyWorkspaceOrFolder }, true));\n\t\t\t}\n\t\t}\n\n\t\tconst filePicks = recentlyOpened.files.map(p => this.toQuickPick(p, false));\n\n\t\t// focus second entry if the first recent workspace is the current workspace\n\t\tconst firstEntry = recentlyOpened.workspaces[0];\n\t\tconst autoFocusSecondEntry: boolean = firstEntry && this.contextService.isCurrentWorkspace(isRecentWorkspace(firstEntry) ? firstEntry.workspace : firstEntry.folderUri);\n\n\t\tlet keyMods: IKeyMods | undefined;\n\n\t\tconst workspaceSeparator: IQuickPickSeparator = { type: 'separator', label: hasWorkspaces ? localize('workspacesAndFolders', \"folders & workspaces\") : localize('folders', \"folders\") };\n\t\tconst fileSeparator: IQuickPickSeparator = { type: 'separator', label: localize('files', \"files\") };\n\t\tconst picks = [workspaceSeparator, ...workspacePicks, fileSeparator, ...filePicks];\n\n\t\tconst pick = await this.quickInputService.pick(picks, {\n\t\t\tcontextKey: inRecentFilesPickerContextKey,\n\t\t\tactiveItem: [...workspacePicks, ...filePicks][autoFocusSecondEntry ? 1 : 0],\n\t\t\tplaceHolder: isMacintosh ? localize('openRecentPlaceholderMac', \"Select to open (hold Cmd-key to force new window or Alt-key for same window)\") : localize('openRecentPlaceholder', \"Select to open (hold Ctrl-key to force new window or Alt-key for same window)\"),\n\t\t\tmatchOnDescription: true,\n\t\t\tonKeyMods: mods => keyMods = mods,\n\t\t\tquickNavigate: this.isQuickNavigate() ? { keybindings: this.keybindingService.lookupKeybindings(this.id) } : undefined,\n\t\t\tonDidTriggerItemButton: async context => {\n\n\t\t\t\t// Remove\n\t\t\t\tif (context.button === this.removeFromRecentlyOpened) {\n\t\t\t\t\tawait this.workspacesService.removeRecentlyOpened([context.item.resource]);\n\t\t\t\t\tcontext.removeItem();\n\t\t\t\t}\n\n\t\t\t\t// Dirty Folder/Workspace\n\t\t\t\telse if (context.button === this.dirtyRecentlyOpenedFolder || context.button === this.dirtyRecentlyOpenedWorkspace) {\n\t\t\t\t\tconst isDirtyWorkspace = context.button === this.dirtyRecentlyOpenedWorkspace;\n\t\t\t\t\tconst result = await this.dialogService.confirm({\n\t\t\t\t\t\ttype: 'question',\n\t\t\t\t\t\ttitle: isDirtyWorkspace ? localize('dirtyWorkspace', \"Workspace with Unsaved Files\") : localize('dirtyFolder', \"Folder with Unsaved Files\"),\n\t\t\t\t\t\tmessage: isDirtyWorkspace ? localize('dirtyWorkspaceConfirm', \"Do you want to open the workspace to review the unsaved files?\") : localize('dirtyFolderConfirm', \"Do you want to open the folder to review the unsaved files?\"),\n\t\t\t\t\t\tdetail: isDirtyWorkspace ? localize('dirtyWorkspaceConfirmDetail', \"Workspaces with unsaved files cannot be removed until all unsaved files have been saved or reverted.\") : localize('dirtyFolderConfirmDetail', \"Folders with unsaved files cannot be removed until all unsaved files have been saved or reverted.\")\n\t\t\t\t\t});\n\n\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\tthis.hostService.openWindow([context.item.openable]);\n\t\t\t\t\t\tthis.quickInputService.cancel();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (pick) {\n\t\t\treturn this.hostService.openWindow([pick.openable], { forceNewWindow: keyMods?.ctrlCmd, forceReuseWindow: keyMods?.alt });\n\t\t}\n\t}\n\n\tprivate toQuickPick(recent: IRecent, isDirty: boolean): IRecentlyOpenedPick {\n\t\tlet openable: IWindowOpenable | undefined;\n\t\tlet iconClasses: string[];\n\t\tlet fullLabel: string | undefined;\n\t\tlet resource: URI | undefined;\n\t\tlet isWorkspace = false;\n\n\t\t// Folder\n\t\tif (isRecentFolder(recent)) {\n\t\t\tresource = recent.folderUri;\n\t\t\ticonClasses = getIconClasses(this.modelService, this.modeService, resource, FileKind.FOLDER);\n\t\t\topenable = { folderUri: resource };\n\t\t\tfullLabel = recent.label || this.labelService.getWorkspaceLabel(resource, { verbose: true });\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isRecentWorkspace(recent)) {\n\t\t\tresource = recent.workspace.configPath;\n\t\t\ticonClasses = getIconClasses(this.modelService, this.modeService, resource, FileKind.ROOT_FOLDER);\n\t\t\topenable = { workspaceUri: resource };\n\t\t\tfullLabel = recent.label || this.labelService.getWorkspaceLabel(recent.workspace, { verbose: true });\n\t\t\tisWorkspace = true;\n\t\t}\n\n\t\t// File\n\t\telse {\n\t\t\tresource = recent.fileUri;\n\t\t\ticonClasses = getIconClasses(this.modelService, this.modeService, resource, FileKind.FILE);\n\t\t\topenable = { fileUri: resource };\n\t\t\tfullLabel = recent.label || this.labelService.getUriLabel(resource);\n\t\t}\n\n\t\tconst { name, parentPath } = splitName(fullLabel);\n\n\t\treturn {\n\t\t\ticonClasses,\n\t\t\tlabel: name,\n\t\t\tariaLabel: isDirty ? isWorkspace ? localize('recentDirtyWorkspaceAriaLabel', \"{0}, workspace with unsaved changes\", name) : localize('recentDirtyFolderAriaLabel', \"{0}, folder with unsaved changes\", name) : name,\n\t\t\tdescription: parentPath,\n\t\t\tbuttons: isDirty ? [isWorkspace ? this.dirtyRecentlyOpenedWorkspace : this.dirtyRecentlyOpenedFolder] : [this.removeFromRecentlyOpened],\n\t\t\topenable,\n\t\t\tresource\n\t\t};\n\t}\n}\n\nexport class OpenRecentAction extends BaseOpenRecentAction {\n\n\tstatic readonly ID = 'workbench.action.openRecent';\n\tstatic readonly LABEL = localize('openRecent', \"Open Recent...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IDialogService dialogService: IDialogService\n\t) {\n\t\tsuper(id, label, workspacesService, quickInputService, contextService, labelService, keybindingService, modelService, modeService, hostService, dialogService);\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nclass QuickPickRecentAction extends BaseOpenRecentAction {\n\n\tstatic readonly ID = 'workbench.action.quickOpenRecent';\n\tstatic readonly LABEL = localize('quickOpenRecent', \"Quick Open Recent...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IDialogService dialogService: IDialogService\n\t) {\n\t\tsuper(id, label, workspacesService, quickInputService, contextService, labelService, keybindingService, modelService, modeService, hostService, dialogService);\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nclass ToggleFullScreenAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleFullScreen';\n\tstatic readonly LABEL = localize('toggleFullScreen', \"Toggle Full Screen\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.hostService.toggleFullScreen();\n\t}\n}\n\nexport class ReloadWindowAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.reloadWindow';\n\tstatic readonly LABEL = localize('reloadWindow', \"Reload Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.hostService.reload();\n\t}\n}\n\nclass ShowAboutDialogAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.showAboutDialog';\n\tstatic readonly LABEL = localize('about', \"About\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IDialogService private readonly dialogService: IDialogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.dialogService.about();\n\t}\n}\n\nexport class NewWindowAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.newWindow';\n\tstatic readonly LABEL = localize('newWindow', \"New Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.hostService.openWindow({ remoteAuthority: null });\n\t}\n}\n\nclass BlurAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.blur',\n\t\t\ttitle: localize('blur', \"Remove keyboard focus from focused element\")\n\t\t});\n\t}\n\n\trun(): void {\n\t\tconst el = document.activeElement;\n\n\t\tif (isHTMLElement(el)) {\n\t\t\tel.blur();\n\t\t}\n\t}\n}\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\n\n// --- Actions Registration\n\nconst fileCategory = localize('file', \"File\");\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(NewWindowAction, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_N }), 'New Window');\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(QuickPickRecentAction), 'File: Quick Open Recent...', fileCategory);\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(OpenRecentAction, { primary: KeyMod.CtrlCmd | KeyCode.KEY_R, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_R } }), 'File: Open Recent...', fileCategory);\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ToggleFullScreenAction, { primary: KeyCode.F11, mac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KEY_F } }), 'View: Toggle Full Screen', CATEGORIES.View.value);\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ReloadWindowAction), 'Developer: Reload Window', CATEGORIES.Developer.value, IsWebContext.toNegated());\n\nregistry.registerWorkbenchAction(SyncActionDescriptor.from(ShowAboutDialogAction), `Help: About`, CATEGORIES.Help.value);\n\nregisterAction2(BlurAction);\n\n// --- Commands/Keybindings Registration\n\nconst recentFilesPickerContext = ContextKeyExpr.and(inQuickPickContext, ContextKeyExpr.has(inRecentFilesPickerContextKey));\n\nconst quickPickNavigateNextInRecentFilesPickerId = 'workbench.action.quickOpenNavigateNextInRecentFilesPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigateNextInRecentFilesPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickPickNavigateNextInRecentFilesPickerId, true),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_R,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_R }\n});\n\nconst quickPickNavigatePreviousInRecentFilesPicker = 'workbench.action.quickOpenNavigatePreviousInRecentFilesPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigatePreviousInRecentFilesPicker,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickPickNavigatePreviousInRecentFilesPicker, false),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_R,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_R }\n});\n\nKeybindingsRegistry.registerKeybindingRule({\n\tid: ReloadWindowAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\twhen: IsDevelopmentContext,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_R\n});\n\nCommandsRegistry.registerCommand('workbench.action.toggleConfirmBeforeClose', accessor => {\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst setting = configurationService.inspect<'always' | 'keyboardOnly' | 'never'>('window.confirmBeforeClose').userValue;\n\n\treturn configurationService.updateValue('window.confirmBeforeClose', setting === 'never' ? 'keyboardOnly' : 'never');\n});\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: 'z_ConfirmClose',\n\tcommand: {\n\t\tid: 'workbench.action.toggleConfirmBeforeClose',\n\t\ttitle: localize('miConfirmClose', \"Confirm Before Close\"),\n\t\ttoggled: ContextKeyExpr.notEquals('config.window.confirmBeforeClose', 'never')\n\t},\n\torder: 1,\n\twhen: IsWebContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '1_new',\n\tcommand: {\n\t\tid: NewWindowAction.ID,\n\t\ttitle: localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\ttitle: localize({ key: 'miOpenRecent', comment: ['&& denotes a mnemonic'] }, \"Open &&Recent\"),\n\tsubmenu: MenuId.MenubarRecentMenu,\n\tgroup: '2_open',\n\torder: 4\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarRecentMenu, {\n\tgroup: 'y_more',\n\tcommand: {\n\t\tid: OpenRecentAction.ID,\n\t\ttitle: localize({ key: 'miMore', comment: ['&& denotes a mnemonic'] }, \"&&More...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '1_toggle_view',\n\tcommand: {\n\t\tid: ToggleFullScreenAction.ID,\n\t\ttitle: localize({ key: 'miToggleFullScreen', comment: ['&& denotes a mnemonic'] }, \"&&Full Screen\"),\n\t\ttoggled: IsFullscreenContext\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\tgroup: 'z_about',\n\tcommand: {\n\t\tid: ShowAboutDialogAction.ID,\n\t\ttitle: localize({ key: 'miAbout', comment: ['&& denotes a mnemonic'] }, \"&&About\")\n\t},\n\torder: 1,\n\twhen: IsMacNativeContext.toNegated()\n});\n"]}