{"version":3,"file":"listCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/browser/actions/listCommands.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAiBhG,SAAS,cAAc,CAAC,MAA8B;QACrD,2DAA2D;QAC3D,2DAA2D;QAC3D,qDAAqD;QACrD,uDAAuD;QACvD,IAAI,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,aAAa,EAAE;YACjE,MAAM,CAAC,QAAQ,EAAE,CAAC;SAClB;IACF,CAAC;IAED,KAAK,UAAU,WAAW,CAAC,MAA2B,EAAE,aAAoE;QAC3H,IAAI,CAAC,8CAAgC,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;YACzE,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;SAC7B;QAED,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAExC,MAAM,aAAa,CAAC,MAAM,CAAC,CAAC;QAE5B,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEnC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAA,GAAA,eAAM,CAAA,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAA,GAAA,eAAM,CAAA,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;YACjF,OAAO;SACP;QAED,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;QACvD,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,UAAU,QAAQ,CAAC,MAAuC,EAAE,aAAoE;QACpI,IAAI,CAAC,MAAM,EAAE;YACZ,OAAO;SACP;QAED,MAAM,WAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAEzC,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEpC,IAAI,SAAS,CAAC,MAAM,EAAE;YACrB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;QAED,cAAc,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAED,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,gBAAgB;QACpB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,oBAAmB;QAC1B,GAAG,EAAE;YACJ,OAAO,oBAAmB;YAC1B,SAAS,EAAE,CAAC,kCAA8B,CAAC;SAC3C;QACD,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YAC3B,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,SAAS,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,cAAc;QAClB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,kBAAiB;QACxB,GAAG,EAAE;YACJ,OAAO,kBAAiB;YACxB,SAAS,EAAE,CAAC,kCAA8B,CAAC;SAC3C;QACD,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YAC3B,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,aAAa,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,oBAAoB;QACxB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,mBAAkB;QACzB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,kBAAkB;QACtB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,iBAAgB;QACvB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,iBAAiB;QACrB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,eAAc;QACrB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,gBAAgB;QACpB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,cAAa;QACpB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;gBACnE,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,MAAM,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAC,CAAC;IAEH,SAAS,oBAAoB,CAAC,OAA4B,EAAE,aAAsB;QAEjF,OAAO;QACP,IAAI,OAAO,YAAY,iBAAI,IAAI,OAAO,YAAY,sBAAS,IAAI,OAAO,YAAY,mBAAK,EAAE;YACxF,MAAM,IAAI,GAAG,OAAO,CAAC;YAErB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC/D,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,IAAI,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC5E,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC;aAC9D;iBAAM;gBACN,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC3C;aACD;SACD;QAED,OAAO;aACF,IAAI,OAAO,YAAY,uBAAU,IAAI,OAAO,YAAY,mBAAQ,IAAI,OAAO,YAAY,6BAAa,EAAE;YAC1G,MAAM,IAAI,GAAG,OAAO,CAAC;YAErB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAE/D,IAAI,aAAa,KAAK,KAAK,EAAE;gBAC5B,OAAO;aACP;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAE3E,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC/C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,aAAa,CAAC,EAAE,iBAAiB,CAAC,CAAC;aACjF;iBAAM;gBACN,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC;aAC9D;SACD;IACF,CAAC;IAED,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,0BAA0B;QAC9B,MAAM,4BAAmC;QACzC,IAAI,EAAE,2BAAc,CAAC,GAAG,CAAC,0CAA4B,EAAE,wDAA0C,CAAC;QAClG,OAAO,EAAE,qCAAgC;QACzC,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,mBAAmB;YACnB,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3E,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,CAAC,SAAS,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC;YAEhF,wBAAwB;YACxB,oBAAoB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;YAE5C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAEhC,IAAI,KAAK,CAAC,MAAM,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB;YAED,cAAc,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,wBAAwB;QAC5B,MAAM,4BAAmC;QACzC,IAAI,EAAE,2BAAc,CAAC,GAAG,CAAC,0CAA4B,EAAE,wDAA0C,CAAC;QAClG,OAAO,EAAE,mCAA8B;QACvC,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,iBAAiB;YACjB,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3E,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,CAAC,aAAa,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAC;YAEpF,wBAAwB;YACxB,oBAAoB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;YAE5C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAEhC,IAAI,KAAK,CAAC,MAAM,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB;YAED,cAAc,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,eAAe;QACnB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,oBAAmB;QAC1B,GAAG,EAAE;YACJ,OAAO,oBAAmB;YAC1B,SAAS,EAAE,CAAC,qCAAgC,CAAC;SAC7C;QACD,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,YAAY,uBAAU,IAAI,MAAM,YAAY,mBAAQ,IAAI,MAAM,YAAY,6BAAa,CAAC,EAAE;gBAChH,OAAO;aACP;YAED,MAAM,IAAI,GAAG,MAAM,CAAC;YACpB,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAExC,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,OAAO;aACP;YAED,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAEjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAE5C,IAAI,MAAM,EAAE;oBACX,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;wBACzB,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;wBACvD,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;iBACH;aACD;QACF,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,kBAAkB;QACtB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,uCAAkC;QAC3C,GAAG,EAAE;YACJ,OAAO,EAAE,uCAAkC;YAC3C,SAAS,EAAE,CAAC,qCAA6B,mBAAkB,CAAC;SAC5D;QACD,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,IAAI,OAAO,IAAI,CAAC,CAAC,OAAO,YAAY,iBAAI,IAAI,OAAO,YAAY,sBAAS,IAAI,OAAO,YAAY,mBAAK,CAAC,EAAE;gBACtG,OAAO,CAAC,WAAW,EAAE,CAAC;aACtB;QACF,CAAC;KACD,CAAC,CAAC;IAGH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,kBAAkB;QACtB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,YAAY,uBAAU,IAAI,MAAM,YAAY,mBAAQ,IAAI,MAAM,YAAY,6BAAa,CAAC,EAAE;gBAChH,OAAO;aACP;YAED,MAAM,IAAI,GAAG,MAAM,CAAC;YACpB,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,OAAO;aACP;YACD,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,MAAM,EAAE;gBACX,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;oBACzB,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;oBACvD,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACH;QACF,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,aAAa;QACjB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,qBAAoB;QAC3B,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,IAAI,MAAM,YAAY,uBAAU,IAAI,MAAM,YAAY,mBAAQ,EAAE;gBAC/D,wEAAwE;gBACxE,MAAM,eAAe,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAE1C,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,OAAO;iBACP;gBAED,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBAEjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;oBAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;oBAEjD,IAAI,KAAK,EAAE;wBACV,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAEnC,IAAI,IAAI,CAAC,OAAO,EAAE;4BACjB,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gCACzB,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gCACvD,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC;4BAC7C,CAAC,CAAC,CAAC;yBACH;qBACD;iBACD;aACD;iBAAM,IAAI,MAAM,YAAY,6BAAa,EAAE;gBAC3C,wEAAwE;gBACxE,MAAM,eAAe,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAE1C,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,OAAO;iBACP;gBAED,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBACrC,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;wBACxB,MAAM,KAAK,GAAG,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;wBAEjD,IAAI,KAAK,EAAE;4BACV,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;4BAEnC,IAAI,IAAI,CAAC,OAAO,EAAE;gCACjB,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;oCACzB,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;oCACvD,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC;gCAC7C,CAAC,CAAC,CAAC;6BACH;yBACD;qBACD;gBACF,CAAC,CAAC,CAAC;aACH;QACF,CAAC;KACD,CAAC,CAAC;IAEH,SAAS,aAAa,CAAC,QAA0B,EAAE,kBAA2B;QAC7E,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;QAC3D,MAAM,iBAAiB,GAAG,CAAA,GAAA,uCAAyB,CAAA,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;QACnF,OAAO;QACP,IAAI,OAAO,YAAY,iBAAI,IAAI,OAAO,YAAY,sBAAS,IAAI,OAAO,YAAY,mBAAK,EAAE;YACxF,MAAM,IAAI,GAAG,OAAO,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,iBAAiB,CAAC,CAAC;SACtD;QAED,QAAQ;aACH,IAAI,OAAO,YAAY,uBAAU,IAAI,OAAO,YAAY,mBAAQ,IAAI,OAAO,YAAY,6BAAa,EAAE;YAC1G,MAAM,IAAI,GAAG,OAAO,CAAC;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAE9B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrB,IAAI,eAAe,GAAG,IAAI,CAAC;gBAE3B,IAAI,IAAI,CAAC,wBAAwB,KAAK,IAAI,EAAE;oBAC3C,eAAe,GAAG,KAAK,CAAC;iBACxB;qBAAM,IAAI,OAAO,IAAI,CAAC,wBAAwB,KAAK,SAAS,IAAI,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACzG,eAAe,GAAG,KAAK,CAAC;iBACxB;gBAED,IAAI,eAAe,EAAE;oBACpB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/B;aACD;YACD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;SAC5C;IACF,CAAC;IAED,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,aAAa;QACjB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,eAAe;QACtB,GAAG,EAAE;YACJ,OAAO,eAAe;YACtB,SAAS,EAAE,CAAC,uCAAkC,CAAC;SAC/C;QACD,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,6BAA6B;QACjC,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,QAAQ,CAAC,EAAE;YACnB,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,gBAAgB;QACpB,MAAM,4BAAmC;QACzC,IAAI,EAAE,2BAAc,CAAC,GAAG,CAAC,0CAA4B,EAAE,wDAA0C,CAAC;QAClG,OAAO,EAAE,mCAA8B;QACvC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,OAAO;YACP,IAAI,OAAO,YAAY,iBAAI,IAAI,OAAO,YAAY,sBAAS,IAAI,OAAO,YAAY,mBAAK,EAAE;gBACxF,MAAM,IAAI,GAAG,OAAO,CAAC;gBACrB,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,CAAC,CAAA,GAAA,cAAK,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;aACzD;YAED,QAAQ;iBACH,IAAI,OAAO,YAAY,uBAAU,IAAI,OAAO,YAAY,mBAAQ,IAAI,OAAO,YAAY,6BAAa,EAAE;gBAC1G,MAAM,IAAI,GAAG,OAAO,CAAC;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEtC,6DAA6D;gBAC7D,IAAI,KAAK,GAAwB,SAAS,CAAC;gBAE3C,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAClF,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACjB;gBAED,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;iBACrB;gBAED,mCAAmC;gBACnC,IAAI,KAAK,GAAwB,SAAS,CAAC;gBAE3C,IAAI,CAAC,KAAK,EAAE;oBACX,KAAK,GAAG,SAAS,CAAC;iBAClB;qBAAM;oBACN,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBACrC;gBAED,MAAM,YAAY,GAAc,EAAE,CAAC;gBACnC,MAAM,KAAK,GAAG,CAAC,IAAiC,EAAE,EAAE;oBACnD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;wBAClC,IAAI,KAAK,CAAC,OAAO,EAAE;4BAClB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;4BAEjC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gCACrB,KAAK,CAAC,KAAK,CAAC,CAAC;6BACb;yBACD;qBACD;gBACF,CAAC,CAAC;gBAEF,mDAAmD;gBACnD,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBAE3B,2EAA2E;gBAC3E,IAAI,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;oBACtD,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBAED,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;aACnD;QACF,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,sBAAsB;QAC1B,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,qCAA6B,gBAAgB;QACtD,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAEhC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,OAAO;aACP;YAED,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;YACxC,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACf,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACnF;iBAAM;gBACN,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C;QACF,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,mBAAmB;QACvB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,gBAAe;QACtB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,YAAY;YACZ,IAAI,OAAO,YAAY,uBAAU,IAAI,OAAO,YAAY,mBAAQ,IAAI,OAAO,YAAY,6BAAa,EAAE;gBACrG,MAAM,IAAI,GAAG,OAAO,CAAC;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAE9B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACrD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO;iBACP;aACD;YAED,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,YAAY;QAChB,MAAM,4BAAmC;QACzC,IAAI,EAAE,2BAAc,CAAC,GAAG,CAAC,0CAA4B,EAAE,8CAAgC,CAAC;QACxF,OAAO,gBAAgB;QACvB,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE1D,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO;aACP;YAED,MAAM,iBAAiB,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;YACvC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC;KACD,CAAC,CAAC;IAEH,2BAAgB,CAAC,eAAe,CAAC;QAChC,EAAE,EAAE,+BAA+B;QACnC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAC1D,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,wBAAwB,EAAE,CAAC;QACpC,CAAC;KACD,CAAC,CAAC;IAEH,2BAAgB,CAAC,eAAe,CAAC;QAChC,EAAE,EAAE,yBAAyB;QAC7B,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,OAAO;YACP,IAAI,OAAO,YAAY,iBAAI,IAAI,OAAO,YAAY,sBAAS,IAAI,OAAO,YAAY,mBAAK,EAAE;gBACxF,YAAY;aACZ;YAED,OAAO;iBACF,IAAI,OAAO,YAAY,uBAAU,IAAI,OAAO,YAAY,mBAAQ,IAAI,OAAO,YAAY,6BAAa,EAAE;gBAC1G,MAAM,IAAI,GAAG,OAAO,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,EAAE,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;aACzD;QACF,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,eAAe;QACnB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,qCAAgC;QACzC,OAAO,EAAE,QAAQ,CAAC,EAAE;YACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzB,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,iBAAiB;QACrB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,uCAAkC;QAC3C,OAAO,EAAE,QAAQ,CAAC,EAAE;YACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzB,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,iBAAiB;QACrB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,QAAQ,CAAC,EAAE;YACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QAC1B,CAAC;KACD,CAAC,CAAC;IAEH,yCAAmB,CAAC,gCAAgC,CAAC;QACpD,EAAE,EAAE,kBAAkB;QACtB,MAAM,4BAAmC;QACzC,IAAI,EAAE,0CAA4B;QAClC,OAAO,EAAE,QAAQ,CAAC,EAAE;YACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAAY,CAAC,CAAC,eAAe,CAAC;YAE3D,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QAC1B,CAAC;KACD,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { WorkbenchListFocusContextKey, IListService, WorkbenchListSupportsMultiSelectContextKey, ListWidget, WorkbenchListHasSelectionOrFocus, getSelectionKeyboardEvent, WorkbenchListWidget, WorkbenchListSelectionNavigation } from 'vs/platform/list/browser/listService';\nimport { PagedList } from 'vs/base/browser/ui/list/listPaging';\nimport { equals, range } from 'vs/base/common/arrays';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ObjectTree } from 'vs/base/browser/ui/tree/objectTree';\nimport { AsyncDataTree } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { DataTree } from 'vs/base/browser/ui/tree/dataTree';\nimport { ITreeNode } from 'vs/base/browser/ui/tree/tree';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { Table } from 'vs/base/browser/ui/table/tableWidget';\n\nfunction ensureDOMFocus(widget: ListWidget | undefined): void {\n\t// it can happen that one of the commands is executed while\n\t// DOM focus is within another focusable control within the\n\t// list/tree item. therefor we should ensure that the\n\t// list/tree has DOM focus again after the command ran.\n\tif (widget && widget.getHTMLElement() !== document.activeElement) {\n\t\twidget.domFocus();\n\t}\n}\n\nasync function updateFocus(widget: WorkbenchListWidget, updateFocusFn: (widget: WorkbenchListWidget) => void | Promise<void>): Promise<void> {\n\tif (!WorkbenchListSelectionNavigation.getValue(widget.contextKeyService)) {\n\t\treturn updateFocusFn(widget);\n\t}\n\n\tconst focus = widget.getFocus();\n\tconst selection = widget.getSelection();\n\n\tawait updateFocusFn(widget);\n\n\tconst newFocus = widget.getFocus();\n\n\tif (selection.length > 1 || !equals(focus, selection) || equals(focus, newFocus)) {\n\t\treturn;\n\t}\n\n\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\twidget.setSelection(newFocus, fakeKeyboardEvent);\n}\n\nasync function navigate(widget: WorkbenchListWidget | undefined, updateFocusFn: (widget: WorkbenchListWidget) => void | Promise<void>): Promise<void> {\n\tif (!widget) {\n\t\treturn;\n\t}\n\n\tawait updateFocus(widget, updateFocusFn);\n\n\tconst listFocus = widget.getFocus();\n\n\tif (listFocus.length) {\n\t\twidget.reveal(listFocus[0]);\n\t}\n\n\tensureDOMFocus(widget);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusDown',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.DownArrow,\n\tmac: {\n\t\tprimary: KeyCode.DownArrow,\n\t\tsecondary: [KeyMod.WinCtrl | KeyCode.KEY_N]\n\t},\n\thandler: (accessor, arg2) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusNext(typeof arg2 === 'number' ? arg2 : 1, false, fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusUp',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.UpArrow,\n\tmac: {\n\t\tprimary: KeyCode.UpArrow,\n\t\tsecondary: [KeyMod.WinCtrl | KeyCode.KEY_P]\n\t},\n\thandler: (accessor, arg2) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusPrevious(typeof arg2 === 'number' ? arg2 : 1, false, fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusPageDown',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.PageDown,\n\thandler: (accessor) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusNextPage(fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusPageUp',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.PageUp,\n\thandler: (accessor) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusPreviousPage(fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusFirst',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.Home,\n\thandler: (accessor) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusFirst(fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusLast',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.End,\n\thandler: (accessor) => {\n\t\tnavigate(accessor.get(IListService).lastFocusedList, async widget => {\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tawait widget.focusLast(fakeKeyboardEvent);\n\t\t});\n\t}\n});\n\nfunction expandMultiSelection(focused: WorkbenchListWidget, previousFocus: unknown): void {\n\n\t// List\n\tif (focused instanceof List || focused instanceof PagedList || focused instanceof Table) {\n\t\tconst list = focused;\n\n\t\tconst focus = list.getFocus() ? list.getFocus()[0] : undefined;\n\t\tconst selection = list.getSelection();\n\t\tif (selection && typeof focus === 'number' && selection.indexOf(focus) >= 0) {\n\t\t\tlist.setSelection(selection.filter(s => s !== previousFocus));\n\t\t} else {\n\t\t\tif (typeof focus === 'number') {\n\t\t\t\tlist.setSelection(selection.concat(focus));\n\t\t\t}\n\t\t}\n\t}\n\n\t// Tree\n\telse if (focused instanceof ObjectTree || focused instanceof DataTree || focused instanceof AsyncDataTree) {\n\t\tconst list = focused;\n\n\t\tconst focus = list.getFocus() ? list.getFocus()[0] : undefined;\n\n\t\tif (previousFocus === focus) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = list.getSelection();\n\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown', { shiftKey: true });\n\n\t\tif (selection && selection.indexOf(focus) >= 0) {\n\t\t\tlist.setSelection(selection.filter(s => s !== previousFocus), fakeKeyboardEvent);\n\t\t} else {\n\t\t\tlist.setSelection(selection.concat(focus), fakeKeyboardEvent);\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.expandSelectionDown',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(WorkbenchListFocusContextKey, WorkbenchListSupportsMultiSelectContextKey),\n\tprimary: KeyMod.Shift | KeyCode.DownArrow,\n\thandler: (accessor, arg2) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Focus down first\n\t\tconst previousFocus = widget.getFocus() ? widget.getFocus()[0] : undefined;\n\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\twidget.focusNext(typeof arg2 === 'number' ? arg2 : 1, false, fakeKeyboardEvent);\n\n\t\t// Then adjust selection\n\t\texpandMultiSelection(widget, previousFocus);\n\n\t\tconst focus = widget.getFocus();\n\n\t\tif (focus.length) {\n\t\t\twidget.reveal(focus[0]);\n\t\t}\n\n\t\tensureDOMFocus(widget);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.expandSelectionUp',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(WorkbenchListFocusContextKey, WorkbenchListSupportsMultiSelectContextKey),\n\tprimary: KeyMod.Shift | KeyCode.UpArrow,\n\thandler: (accessor, arg2) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Focus up first\n\t\tconst previousFocus = widget.getFocus() ? widget.getFocus()[0] : undefined;\n\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\twidget.focusPrevious(typeof arg2 === 'number' ? arg2 : 1, false, fakeKeyboardEvent);\n\n\t\t// Then adjust selection\n\t\texpandMultiSelection(widget, previousFocus);\n\n\t\tconst focus = widget.getFocus();\n\n\t\tif (focus.length) {\n\t\t\twidget.reveal(focus[0]);\n\t\t}\n\n\t\tensureDOMFocus(widget);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.collapse',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.LeftArrow,\n\tmac: {\n\t\tprimary: KeyCode.LeftArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow]\n\t},\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget || !(widget instanceof ObjectTree || widget instanceof DataTree || widget instanceof AsyncDataTree)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tree = widget;\n\t\tconst focusedElements = tree.getFocus();\n\n\t\tif (focusedElements.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focus = focusedElements[0];\n\n\t\tif (!tree.collapse(focus)) {\n\t\t\tconst parent = tree.getParentElement(focus);\n\n\t\t\tif (parent) {\n\t\t\t\tnavigate(widget, widget => {\n\t\t\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\t\t\twidget.setFocus([parent], fakeKeyboardEvent);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.collapseAll',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow]\n\t},\n\thandler: (accessor) => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\tif (focused && !(focused instanceof List || focused instanceof PagedList || focused instanceof Table)) {\n\t\t\tfocused.collapseAll();\n\t\t}\n\t}\n});\n\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.focusParent',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget || !(widget instanceof ObjectTree || widget instanceof DataTree || widget instanceof AsyncDataTree)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tree = widget;\n\t\tconst focusedElements = tree.getFocus();\n\t\tif (focusedElements.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst focus = focusedElements[0];\n\t\tconst parent = tree.getParentElement(focus);\n\t\tif (parent) {\n\t\t\tnavigate(widget, widget => {\n\t\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\t\twidget.setFocus([parent], fakeKeyboardEvent);\n\t\t\t});\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.expand',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.RightArrow,\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (widget instanceof ObjectTree || widget instanceof DataTree) {\n\t\t\t// TODO@Joao: instead of doing this here, just delegate to a tree method\n\t\t\tconst focusedElements = widget.getFocus();\n\n\t\t\tif (focusedElements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focus = focusedElements[0];\n\n\t\t\tif (!widget.expand(focus)) {\n\t\t\t\tconst child = widget.getFirstElementChild(focus);\n\n\t\t\t\tif (child) {\n\t\t\t\t\tconst node = widget.getNode(child);\n\n\t\t\t\t\tif (node.visible) {\n\t\t\t\t\t\tnavigate(widget, widget => {\n\t\t\t\t\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\t\t\t\t\twidget.setFocus([child], fakeKeyboardEvent);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (widget instanceof AsyncDataTree) {\n\t\t\t// TODO@Joao: instead of doing this here, just delegate to a tree method\n\t\t\tconst focusedElements = widget.getFocus();\n\n\t\t\tif (focusedElements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focus = focusedElements[0];\n\t\t\twidget.expand(focus).then(didExpand => {\n\t\t\t\tif (focus && !didExpand) {\n\t\t\t\t\tconst child = widget.getFirstElementChild(focus);\n\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tconst node = widget.getNode(child);\n\n\t\t\t\t\t\tif (node.visible) {\n\t\t\t\t\t\t\tnavigate(widget, widget => {\n\t\t\t\t\t\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\t\t\t\t\t\twidget.setFocus([child], fakeKeyboardEvent);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\nfunction selectElement(accessor: ServicesAccessor, retainCurrentFocus: boolean): void {\n\tconst focused = accessor.get(IListService).lastFocusedList;\n\tconst fakeKeyboardEvent = getSelectionKeyboardEvent('keydown', retainCurrentFocus);\n\t// List\n\tif (focused instanceof List || focused instanceof PagedList || focused instanceof Table) {\n\t\tconst list = focused;\n\t\tlist.setSelection(list.getFocus(), fakeKeyboardEvent);\n\t}\n\n\t// Trees\n\telse if (focused instanceof ObjectTree || focused instanceof DataTree || focused instanceof AsyncDataTree) {\n\t\tconst tree = focused;\n\t\tconst focus = tree.getFocus();\n\n\t\tif (focus.length > 0) {\n\t\t\tlet toggleCollapsed = true;\n\n\t\t\tif (tree.expandOnlyOnTwistieClick === true) {\n\t\t\t\ttoggleCollapsed = false;\n\t\t\t} else if (typeof tree.expandOnlyOnTwistieClick !== 'boolean' && tree.expandOnlyOnTwistieClick(focus[0])) {\n\t\t\t\ttoggleCollapsed = false;\n\t\t\t}\n\n\t\t\tif (toggleCollapsed) {\n\t\t\t\ttree.toggleCollapsed(focus[0]);\n\t\t\t}\n\t\t}\n\t\ttree.setSelection(focus, fakeKeyboardEvent);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.select',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t},\n\thandler: (accessor) => {\n\t\tselectElement(accessor, false);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.selectAndPreserveFocus',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\thandler: accessor => {\n\t\tselectElement(accessor, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.selectAll',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(WorkbenchListFocusContextKey, WorkbenchListSupportsMultiSelectContextKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_A,\n\thandler: (accessor) => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\t// List\n\t\tif (focused instanceof List || focused instanceof PagedList || focused instanceof Table) {\n\t\t\tconst list = focused;\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\tlist.setSelection(range(list.length), fakeKeyboardEvent);\n\t\t}\n\n\t\t// Trees\n\t\telse if (focused instanceof ObjectTree || focused instanceof DataTree || focused instanceof AsyncDataTree) {\n\t\t\tconst tree = focused;\n\t\t\tconst focus = tree.getFocus();\n\t\t\tconst selection = tree.getSelection();\n\n\t\t\t// Which element should be considered to start selecting all?\n\t\t\tlet start: unknown | undefined = undefined;\n\n\t\t\tif (focus.length > 0 && (selection.length === 0 || !selection.includes(focus[0]))) {\n\t\t\t\tstart = focus[0];\n\t\t\t}\n\n\t\t\tif (!start && selection.length > 0) {\n\t\t\t\tstart = selection[0];\n\t\t\t}\n\n\t\t\t// What is the scope of select all?\n\t\t\tlet scope: unknown | undefined = undefined;\n\n\t\t\tif (!start) {\n\t\t\t\tscope = undefined;\n\t\t\t} else {\n\t\t\t\tscope = tree.getParentElement(start);\n\t\t\t}\n\n\t\t\tconst newSelection: unknown[] = [];\n\t\t\tconst visit = (node: ITreeNode<unknown, unknown>) => {\n\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\tif (child.visible) {\n\t\t\t\t\t\tnewSelection.push(child.element);\n\n\t\t\t\t\t\tif (!child.collapsed) {\n\t\t\t\t\t\t\tvisit(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Add the whole scope subtree to the new selection\n\t\t\tvisit(tree.getNode(scope));\n\n\t\t\t// If the scope isn't the tree root, it should be part of the new selection\n\t\t\tif (scope && selection.length === newSelection.length) {\n\t\t\t\tnewSelection.unshift(scope);\n\t\t\t}\n\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\t\ttree.setSelection(newSelection, fakeKeyboardEvent);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.toggleSelection',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter,\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focus = widget.getFocus();\n\n\t\tif (focus.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = widget.getSelection();\n\t\tconst index = selection.indexOf(focus[0]);\n\n\t\tif (index > -1) {\n\t\t\twidget.setSelection([...selection.slice(0, index), ...selection.slice(index + 1)]);\n\t\t} else {\n\t\t\twidget.setSelection([...selection, focus[0]]);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.toggleExpand',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyCode.Space,\n\thandler: (accessor) => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\t// Tree only\n\t\tif (focused instanceof ObjectTree || focused instanceof DataTree || focused instanceof AsyncDataTree) {\n\t\t\tconst tree = focused;\n\t\t\tconst focus = tree.getFocus();\n\n\t\t\tif (focus.length > 0 && tree.isCollapsible(focus[0])) {\n\t\t\t\ttree.toggleCollapsed(focus[0]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tselectElement(accessor, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.clear',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(WorkbenchListFocusContextKey, WorkbenchListHasSelectionOrFocus),\n\tprimary: KeyCode.Escape,\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fakeKeyboardEvent = new KeyboardEvent('keydown');\n\t\twidget.setSelection([], fakeKeyboardEvent);\n\t\twidget.setFocus([], fakeKeyboardEvent);\n\t\twidget.setAnchor(undefined);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'list.toggleKeyboardNavigation',\n\thandler: (accessor) => {\n\t\tconst widget = accessor.get(IListService).lastFocusedList;\n\t\twidget?.toggleKeyboardNavigation();\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'list.toggleFilterOnType',\n\thandler: (accessor) => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\t// List\n\t\tif (focused instanceof List || focused instanceof PagedList || focused instanceof Table) {\n\t\t\t// TODO@joao\n\t\t}\n\n\t\t// Tree\n\t\telse if (focused instanceof ObjectTree || focused instanceof DataTree || focused instanceof AsyncDataTree) {\n\t\t\tconst tree = focused;\n\t\t\ttree.updateOptions({ filterOnType: !tree.filterOnType });\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.scrollUp',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\thandler: accessor => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocused.scrollTop -= 10;\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.scrollDown',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\thandler: accessor => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocused.scrollTop += 10;\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.scrollLeft',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\thandler: accessor => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocused.scrollLeft -= 10;\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'list.scrollRight',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchListFocusContextKey,\n\thandler: accessor => {\n\t\tconst focused = accessor.get(IListService).lastFocusedList;\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocused.scrollLeft += 10;\n\t}\n});\n"]}