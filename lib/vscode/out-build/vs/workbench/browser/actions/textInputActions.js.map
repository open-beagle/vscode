{"version":3,"sources":["vs/workbench/browser/actions/textInputActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAchG,IAAa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,sBAAU;QAIvD,YAC2C,aAAsC,EAC1C,kBAAuC,EACzC,gBAAmC;YAEvE,KAAK,EAAE,CAAC;YAJkC,kBAAa,GAAb,aAAa,CAAyB;YAC1C,uBAAkB,GAAlB,kBAAkB,CAAqB;YACzC,qBAAgB,GAAhB,gBAAgB,CAAmB;YALhE,qBAAgB,GAAc,EAAE,CAAC;YASxC,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC;QAEO,aAAa;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI;YAEzB,YAAY;YACZ,IAAI,gBAAM,CAAC,MAAM,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EACvG,IAAI,gBAAM,CAAC,MAAM,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EACvG,IAAI,mBAAS,EAAE;YAEf,qBAAqB;YACrB,IAAI,gBAAM,CAAC,kCAAkC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAK,EAAE,IAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAChI,IAAI,gBAAM,CAAC,mCAAmC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EACpI,IAAI,gBAAM,CAAC,oCAAoC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAO,EAAE,IAAO,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAC,OAAO,EAAC,EAAE;gBAE7G,6BAA6B;gBAC7B,IAAI,mBAAQ,EAAE;oBACb,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;iBAC9B;gBAED,sDAAsD;qBACjD;oBACJ,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;oBAC7D,IACC,OAAO,YAAY,mBAAmB;wBACtC,OAAO,YAAY,gBAAgB,EAClC;wBACD,MAAM,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,CAAC,CAAC;wBACnD,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;wBAE/C,OAAO,CAAC,KAAK,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;wBAC9I,OAAO,CAAC,cAAc,GAAG,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC;wBAC/D,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC;qBAC9C;iBACD;YACF,CAAC,CAAC,EACF,IAAI,mBAAS,EAAE;YAEf,aAAa;YACb,IAAI,gBAAM,CAAC,yBAAyB,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAW,EAAE,IAAY,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAC1I,CAAC;QACH,CAAC;QAEO,iBAAiB;YAExB,yCAAyC;YACzC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;QAEO,aAAa,CAAC,CAAa;YAClC,IAAI,CAAC,CAAC,gBAAgB,EAAE;gBACvB,OAAO,CAAC,oFAAoF;aAC5F;YAED,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,CAAC,MAAM,YAAY,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC,EAAE;gBACpI,OAAO,CAAC,+BAA+B;aACvC;YAED,iBAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAE1B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;gBACvC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;gBAClB,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB;gBACvC,iBAAiB,EAAE,GAAG,EAAE,CAAC,MAAM;gBAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,yDAAyD;aACtF,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAlFY,wBAAwB;QAKlC,WAAA,uCAAuB,CAAA;QACvB,WAAA,iCAAmB,CAAA;QACnB,WAAA,oCAAiB,CAAA;OAPP,wBAAwB,CAkFpC;IAlFY,4DAAwB;IAoFrC,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,wBAAwB,gBAAuB,CAAC","file":"textInputActions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, Action, Separator } from 'vs/base/common/actions';\nimport { localize } from 'vs/nls';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { EventHelper } from 'vs/base/browser/dom';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { isNative } from 'vs/base/common/platform';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\n\nexport class TextInputActionsProvider extends Disposable implements IWorkbenchContribution {\n\n\tprivate textInputActions: IAction[] = [];\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\n\t\tthis.createActions();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate createActions(): void {\n\t\tthis.textInputActions.push(\n\n\t\t\t// Undo/Redo\n\t\t\tnew Action('undo', localize('undo', \"Undo\"), undefined, true, async () => document.execCommand('undo')),\n\t\t\tnew Action('redo', localize('redo', \"Redo\"), undefined, true, async () => document.execCommand('redo')),\n\t\t\tnew Separator(),\n\n\t\t\t// Cut / Copy / Paste\n\t\t\tnew Action('editor.action.clipboardCutAction', localize('cut', \"Cut\"), undefined, true, async () => document.execCommand('cut')),\n\t\t\tnew Action('editor.action.clipboardCopyAction', localize('copy', \"Copy\"), undefined, true, async () => document.execCommand('copy')),\n\t\t\tnew Action('editor.action.clipboardPasteAction', localize('paste', \"Paste\"), undefined, true, async element => {\n\n\t\t\t\t// Native: paste is supported\n\t\t\t\tif (isNative) {\n\t\t\t\t\tdocument.execCommand('paste');\n\t\t\t\t}\n\n\t\t\t\t// Web: paste is not supported due to security reasons\n\t\t\t\telse {\n\t\t\t\t\tconst clipboardText = await this.clipboardService.readText();\n\t\t\t\t\tif (\n\t\t\t\t\t\telement instanceof HTMLTextAreaElement ||\n\t\t\t\t\t\telement instanceof HTMLInputElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst selectionStart = element.selectionStart || 0;\n\t\t\t\t\t\tconst selectionEnd = element.selectionEnd || 0;\n\n\t\t\t\t\t\telement.value = `${element.value.substring(0, selectionStart)}${clipboardText}${element.value.substring(selectionEnd, element.value.length)}`;\n\t\t\t\t\t\telement.selectionStart = selectionStart + clipboardText.length;\n\t\t\t\t\t\telement.selectionEnd = element.selectionStart;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tnew Separator(),\n\n\t\t\t// Select All\n\t\t\tnew Action('editor.action.selectAll', localize('selectAll', \"Select All\"), undefined, true, async () => document.execCommand('selectAll'))\n\t\t);\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Context menu support in input/textarea\n\t\tthis.layoutService.container.addEventListener('contextmenu', e => this.onContextMenu(e));\n\t}\n\n\tprivate onContextMenu(e: MouseEvent): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn; // make sure to not show these actions by accident if component indicated to prevent\n\t\t}\n\n\t\tconst target = e.target;\n\t\tif (!(target instanceof HTMLElement) || (target.nodeName.toLowerCase() !== 'input' && target.nodeName.toLowerCase() !== 'textarea')) {\n\t\t\treturn; // only for inputs or textareas\n\t\t}\n\n\t\tEventHelper.stop(e, true);\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e,\n\t\t\tgetActions: () => this.textInputActions,\n\t\t\tgetActionsContext: () => target,\n\t\t\tonHide: () => target.focus() // fixes https://github.com/microsoft/vscode/issues/52948\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(TextInputActionsProvider, LifecyclePhase.Ready);\n"]}