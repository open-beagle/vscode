{"version":3,"sources":["vs/workbench/services/mode/common/workbenchModeService.ts"],"names":[],"mappings":"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","file":"workbenchModeService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as mime from 'vs/base/common/mime';\nimport * as resources from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ModesRegistry } from 'vs/editor/common/modes/modesRegistry';\nimport { ILanguageExtensionPoint, IModeService } from 'vs/editor/common/services/modeService';\nimport { ModeServiceImpl } from 'vs/editor/common/services/modeServiceImpl';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FILES_ASSOCIATIONS_CONFIG, IFilesConfiguration } from 'vs/platform/files/common/files';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionMessageCollector, ExtensionsRegistry, IExtensionPoint, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport interface IRawLanguageExtensionPoint {\n\tid: string;\n\textensions: string[];\n\tfilenames: string[];\n\tfilenamePatterns: string[];\n\tfirstLine: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tconfiguration: string;\n}\n\nexport const languagesExtPoint: IExtensionPoint<IRawLanguageExtensionPoint[]> = ExtensionsRegistry.registerExtensionPoint<IRawLanguageExtensionPoint[]>({\n\textensionPoint: 'languages',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.languages', 'Contributes language declarations.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { id: '${1:languageId}', aliases: ['${2:label}'], extensions: ['${3:extension}'], configuration: './language-configuration.json' } }],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.id', 'ID of the language.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\taliases: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.aliases', 'Name aliases for the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\textensions: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.extensions', 'File extensions associated to the language.'),\n\t\t\t\t\tdefault: ['.foo'],\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilenames: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenames', 'File names associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilenamePatterns: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenamePatterns', 'File name glob patterns associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmimetypes: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.mimetypes', 'Mime types associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfirstLine: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.firstLine', 'A regular expression matching the first line of a file of the language.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tconfiguration: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.configuration', 'A relative path to a file containing configuration options for the language.'),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: './language-configuration.json'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport class WorkbenchModeServiceImpl extends ModeServiceImpl {\n\tprivate _configurationService: IConfigurationService;\n\tprivate _extensionService: IExtensionService;\n\tprivate _onReadyPromise: Promise<boolean> | undefined;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper(environmentService.verbose || environmentService.isExtensionDevelopment || !environmentService.isBuilt);\n\t\tthis._configurationService = configurationService;\n\t\tthis._extensionService = extensionService;\n\n\t\tlanguagesExtPoint.setHandler((extensions: readonly IExtensionPointUser<IRawLanguageExtensionPoint[]>[]) => {\n\t\t\tlet allValidLanguages: ILanguageExtensionPoint[] = [];\n\n\t\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\t\tlet extension = extensions[i];\n\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\textension.collector.error(nls.localize('invalid', \"Invalid `contributes.{0}`. Expected an array.\", languagesExtPoint.name));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n\t\t\t\t\tlet ext = extension.value[j];\n\t\t\t\t\tif (isValidLanguageExtensionPoint(ext, extension.collector)) {\n\t\t\t\t\t\tlet configuration: URI | undefined = undefined;\n\t\t\t\t\t\tif (ext.configuration) {\n\t\t\t\t\t\t\tconfiguration = resources.joinPath(extension.description.extensionLocation, ext.configuration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\t\tid: ext.id,\n\t\t\t\t\t\t\textensions: ext.extensions,\n\t\t\t\t\t\t\tfilenames: ext.filenames,\n\t\t\t\t\t\t\tfilenamePatterns: ext.filenamePatterns,\n\t\t\t\t\t\t\tfirstLine: ext.firstLine,\n\t\t\t\t\t\t\taliases: ext.aliases,\n\t\t\t\t\t\t\tmimetypes: ext.mimetypes,\n\t\t\t\t\t\t\tconfiguration: configuration\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tModesRegistry.setDynamicLanguages(allValidLanguages);\n\n\t\t});\n\n\t\tthis.updateMime();\n\t\tthis._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n\t\t\t\tthis.updateMime();\n\t\t\t}\n\t\t});\n\t\tthis._extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tthis.updateMime();\n\t\t});\n\n\t\tthis.onDidCreateMode((mode) => {\n\t\t\tthis._extensionService.activateByEvent(`onLanguage:${mode.getId()}`);\n\t\t});\n\t}\n\n\tprotected override _onReady(): Promise<boolean> {\n\t\tif (!this._onReadyPromise) {\n\t\t\tthis._onReadyPromise = Promise.resolve(\n\t\t\t\tthis._extensionService.whenInstalledExtensionsRegistered().then(() => true)\n\t\t\t);\n\t\t}\n\n\t\treturn this._onReadyPromise;\n\t}\n\n\tprivate updateMime(): void {\n\t\tconst configuration = this._configurationService.getValue<IFilesConfiguration>();\n\n\t\t// Clear user configured mime associations\n\t\tmime.clearTextMimes(true /* user configured */);\n\n\t\t// Register based on settings\n\t\tif (configuration.files?.associations) {\n\t\t\tObject.keys(configuration.files.associations).forEach(pattern => {\n\t\t\t\tconst langId = configuration.files.associations[pattern];\n\t\t\t\tconst mimetype = this.getMimeForMode(langId) || `text/x-${langId}`;\n\n\t\t\t\tmime.registerTextMime({ id: langId, mime: mimetype, filepattern: pattern, userConfigured: true });\n\t\t\t});\n\t\t}\n\n\t\tthis._onLanguagesMaybeChanged.fire();\n\t}\n}\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every(item => typeof item === 'string');\n}\n\nfunction isValidLanguageExtensionPoint(value: IRawLanguageExtensionPoint, collector: ExtensionMessageCollector): boolean {\n\tif (!value) {\n\t\tcollector.error(nls.localize('invalid.empty', \"Empty value for `contributes.{0}`\", languagesExtPoint.name));\n\t\treturn false;\n\t}\n\tif (typeof value.id !== 'string') {\n\t\tcollector.error(nls.localize('require.id', \"property `{0}` is mandatory and must be of type `string`\", 'id'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector.error(nls.localize('opt.extensions', \"property `{0}` can be omitted and must be of type `string[]`\", 'extensions'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector.error(nls.localize('opt.filenames', \"property `{0}` can be omitted and must be of type `string[]`\", 'filenames'));\n\t\treturn false;\n\t}\n\tif (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n\t\tcollector.error(nls.localize('opt.firstLine', \"property `{0}` can be omitted and must be of type `string`\", 'firstLine'));\n\t\treturn false;\n\t}\n\tif (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n\t\tcollector.error(nls.localize('opt.configuration', \"property `{0}` can be omitted and must be of type `string`\", 'configuration'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector.error(nls.localize('opt.aliases', \"property `{0}` can be omitted and must be of type `string[]`\", 'aliases'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector.error(nls.localize('opt.mimetypes', \"property `{0}` can be omitted and must be of type `string[]`\", 'mimetypes'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nregisterSingleton(IModeService, WorkbenchModeServiceImpl);\n"]}