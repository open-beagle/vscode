{"version":3,"file":"ripgrepFileSearch.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/search/test/node/ripgrepFileSearch.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACrC,SAAS,cAAc,CAAC,MAAgB;YACvC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,GAAG,MAAM,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,CAAA,GAAA,6BAAS,CAAA,CAAC,CAAA,GAAA,mCAAe,CAAA,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACtG,CAAC;QAED,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,GAAG,EAAE;YACpE;gBACC,CAAC,YAAY,EAAE,SAAS,EAAE,qBAAqB,CAAC;gBAChD,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC;gBAC/B,CAAC,cAAc,EAAE,UAAU,EAAE,qBAAqB,CAAC;gBACnD,CAAC,cAAc,EAAE,UAAU,EAAE,qBAAqB,CAAC;gBACnD,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;gBACjC,CAAC,6BAA6B,EAAE,SAAS,EAAE,uCAAuC,CAAC;gBAEnF,0CAA0C;gBAC1C,CAAC,YAAY,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;gBACpD,CAAC,YAAY,EAAE,qBAAqB,EAAE,kBAAkB,CAAC;aACzD,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,GAAG,EAAE;YACrE;gBACC,CAAC,UAAU,EAAE,SAAS,EAAE,kBAAkB,CAAC;gBAC3C,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,CAAC;gBAE5B,0CAA0C;gBAC1C,CAAC,GAAG,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;aAC3C,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as platform from 'vs/base/common/platform';\nimport { fixDriveC, getAbsoluteGlob } from 'vs/workbench/services/search/node/ripgrepFileSearch';\n\nsuite('RipgrepFileSearch - etc', () => {\n\tfunction testGetAbsGlob(params: string[]): void {\n\t\tconst [folder, glob, expectedResult] = params;\n\t\tassert.strictEqual(fixDriveC(getAbsoluteGlob(folder, glob)), expectedResult, JSON.stringify(params));\n\t}\n\n\t(!platform.isWindows ? test.skip : test)('getAbsoluteGlob_win', () => {\n\t\t[\n\t\t\t['C:/foo/bar', 'glob/**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:/', 'glob/**', '/glob\\\\**'],\n\t\t\t['C:\\\\foo\\\\bar', 'glob\\\\**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:\\\\foo\\\\bar', 'glob\\\\**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:\\\\', 'glob\\\\**', '/glob\\\\**'],\n\t\t\t['\\\\\\\\localhost\\\\c$\\\\foo\\\\bar', 'glob/**', '\\\\\\\\localhost\\\\c$\\\\foo\\\\bar\\\\glob\\\\**'],\n\n\t\t\t// absolute paths are not resolved further\n\t\t\t['c:/foo/bar', '/path/something', '/path/something'],\n\t\t\t['c:/foo/bar', 'c:\\\\project\\\\folder', '/project\\\\folder']\n\t\t].forEach(testGetAbsGlob);\n\t});\n\n\t(platform.isWindows ? test.skip : test)('getAbsoluteGlob_posix', () => {\n\t\t[\n\t\t\t['/foo/bar', 'glob/**', '/foo/bar/glob/**'],\n\t\t\t['/', 'glob/**', '/glob/**'],\n\n\t\t\t// absolute paths are not resolved further\n\t\t\t['/', '/project/folder', '/project/folder'],\n\t\t].forEach(testGetAbsGlob);\n\t});\n});\n"]}