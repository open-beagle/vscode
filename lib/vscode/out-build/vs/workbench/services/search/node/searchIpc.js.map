{"version":3,"file":"searchIpc.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/search/node/searchIpc.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,aAAa;QAEzB,YAAoB,OAA0B;YAA1B,YAAO,GAAP,OAAO,CAAmB;QAAI,CAAC;QAEnD,MAAM,CAAC,CAAU,EAAE,KAAa,EAAE,GAAS;YAC1C,QAAQ,KAAK,EAAE;gBACd,KAAK,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACvD,KAAK,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACvD;YACD,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,CAAU,EAAE,OAAe,EAAE,GAAS;YAC1C,QAAQ,OAAO,EAAE;gBAChB,KAAK,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACvD;YACD,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC;KACD;IAlBD,sCAkBC;IAED,MAAa,mBAAmB;QAE/B,YAAoB,OAAiB;YAAjB,YAAO,GAAP,OAAO,CAAU;QAAI,CAAC;QAE1C,UAAU,CAAC,MAAqB;YAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QAED,UAAU,CAAC,MAAqB;YAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QAED,UAAU,CAAC,QAAgB;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC;KACD;IAfD,kDAeC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IRawFileQuery, IRawTextQuery, IRawSearchService, ISerializedSearchComplete, ISerializedSearchProgressItem } from 'vs/workbench/services/search/common/search';\n\nexport class SearchChannel implements IServerChannel {\n\n\tconstructor(private service: IRawSearchService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'fileSearch': return this.service.fileSearch(arg);\n\t\t\tcase 'textSearch': return this.service.textSearch(arg);\n\t\t}\n\t\tthrow new Error('Event not found');\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'clearCache': return this.service.clearCache(arg);\n\t\t}\n\t\tthrow new Error('Call not found');\n\t}\n}\n\nexport class SearchChannelClient implements IRawSearchService {\n\n\tconstructor(private channel: IChannel) { }\n\n\tfileSearch(search: IRawFileQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete> {\n\t\treturn this.channel.listen('fileSearch', search);\n\t}\n\n\ttextSearch(search: IRawTextQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete> {\n\t\treturn this.channel.listen('textSearch', search);\n\t}\n\n\tclearCache(cacheKey: string): Promise<void> {\n\t\treturn this.channel.call('clearCache', cacheKey);\n\t}\n}"]}