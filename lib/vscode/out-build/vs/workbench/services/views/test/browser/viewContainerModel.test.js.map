{"version":3,"file":"viewContainerModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/views/test/browser/viewContainerModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { IViewsRegistry, IViewDescriptor, IViewContainersRegistry, Extensions as ViewContainerExtensions, ViewContainerLocation, IViewContainerModel, IViewDescriptorService, ViewContainer } from 'vs/workbench/common/views';\nimport { IDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { move } from 'vs/base/common/arrays';\nimport { workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ContextKeyService } from 'vs/platform/contextkey/browser/contextKeyService';\nimport { ViewDescriptorService } from 'vs/workbench/services/views/browser/viewDescriptorService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nconst ViewContainerRegistry = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry);\nconst ViewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\nclass ViewDescriptorSequence {\n\n\treadonly elements: IViewDescriptor[];\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(model: IViewContainerModel) {\n\t\tthis.elements = [...model.visibleViewDescriptors];\n\t\tmodel.onDidAddVisibleViewDescriptors(added => added.forEach(({ viewDescriptor, index }) => this.elements.splice(index, 0, viewDescriptor)), null, this.disposables);\n\t\tmodel.onDidRemoveVisibleViewDescriptors(removed => removed.sort((a, b) => b.index - a.index).forEach(({ index }) => this.elements.splice(index, 1)), null, this.disposables);\n\t\tmodel.onDidMoveVisibleViewDescriptors(({ from, to }) => move(this.elements, from.index, to.index), null, this.disposables);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nsuite('ViewContainerModel', () => {\n\n\tlet container: ViewContainer;\n\tlet disposableStore: DisposableStore;\n\tlet contextKeyService: IContextKeyService;\n\tlet viewDescriptorService: IViewDescriptorService;\n\tlet storageService: IStorageService;\n\n\tsetup(() => {\n\t\tdisposableStore = new DisposableStore();\n\t\tconst instantiationService: TestInstantiationService = <TestInstantiationService>workbenchInstantiationService();\n\t\tcontextKeyService = instantiationService.createInstance(ContextKeyService);\n\t\tinstantiationService.stub(IContextKeyService, contextKeyService);\n\t\tstorageService = instantiationService.get(IStorageService);\n\t\tviewDescriptorService = instantiationService.createInstance(ViewDescriptorService);\n\t});\n\n\tteardown(() => {\n\t\tdisposableStore.dispose();\n\t\tViewsRegistry.deregisterViews(ViewsRegistry.getViews(container), container);\n\t\tViewContainerRegistry.deregisterViewContainer(container);\n\t});\n\n\ttest('empty model', function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t});\n\n\ttest('register/unregister', () => {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1'\n\t\t};\n\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 1);\n\t\tassert.strictEqual(target.elements.length, 1);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors[0], viewDescriptor);\n\t\tassert.deepStrictEqual(target.elements[0], viewDescriptor);\n\n\t\tViewsRegistry.deregisterViews([viewDescriptor], container);\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('when contexts', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true)\n\t\t};\n\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should not appear since context isnt in');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst key = contextKeyService.createKey('showview1', false);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should still not appear since showview1 isnt true');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 1, 'view should appear');\n\t\tassert.strictEqual(target.elements.length, 1);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors[0], viewDescriptor);\n\t\tassert.strictEqual(target.elements[0], viewDescriptor);\n\n\t\tkey.set(false);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should disappear');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tViewsRegistry.deregisterViews([viewDescriptor], container);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should not be there anymore');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should not be there anymore');\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('when contexts - multiple', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst view1: IViewDescriptor = { id: 'view1', ctorDescriptor: null!, name: 'Test View 1' };\n\t\tconst view2: IViewDescriptor = { id: 'view2', ctorDescriptor: null!, name: 'Test View 2', when: ContextKeyExpr.equals('showview2', true) };\n\n\t\tViewsRegistry.registerViews([view1, view2], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1], 'only view1 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view1], 'only view1 should be visible');\n\n\t\tconst key = contextKeyService.createKey('showview2', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1], 'still only view1 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view1], 'still only view1 should be visible');\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2], 'both views should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2], 'both views should be visible');\n\n\t\tViewsRegistry.deregisterViews([view1, view2], container);\n\t});\n\n\ttest('when contexts - multiple 2', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst view1: IViewDescriptor = { id: 'view1', ctorDescriptor: null!, name: 'Test View 1', when: ContextKeyExpr.equals('showview1', true) };\n\t\tconst view2: IViewDescriptor = { id: 'view2', ctorDescriptor: null!, name: 'Test View 2' };\n\n\t\tViewsRegistry.registerViews([view1, view2], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2], 'only view2 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2], 'only view2 should be visible');\n\n\t\tconst key = contextKeyService.createKey('showview1', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2], 'still only view2 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2], 'still only view2 should be visible');\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2], 'both views should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2], 'both views should be visible');\n\n\t\tViewsRegistry.deregisterViews([view1, view2], container);\n\t});\n\n\ttest('setVisible', () => {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst view1: IViewDescriptor = { id: 'view1', ctorDescriptor: null!, name: 'Test View 1', canToggleVisibility: true };\n\t\tconst view2: IViewDescriptor = { id: 'view2', ctorDescriptor: null!, name: 'Test View 2', canToggleVisibility: true };\n\t\tconst view3: IViewDescriptor = { id: 'view3', ctorDescriptor: null!, name: 'Test View 3', canToggleVisibility: true };\n\n\t\tViewsRegistry.registerViews([view1, view2, view3], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2, view3]);\n\t\tassert.deepStrictEqual(target.elements, [view1, view2, view3]);\n\n\t\ttestObject.setVisible('view2', true);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2, view3], 'nothing should happen');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2, view3]);\n\n\t\ttestObject.setVisible('view2', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view3], 'view2 should hide');\n\t\tassert.deepStrictEqual(target.elements, [view1, view3]);\n\n\t\ttestObject.setVisible('view1', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view3], 'view1 should hide');\n\t\tassert.deepStrictEqual(target.elements, [view3]);\n\n\t\ttestObject.setVisible('view3', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [], 'view3 shoud hide');\n\t\tassert.deepStrictEqual(target.elements, []);\n\n\t\ttestObject.setVisible('view1', true);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1], 'view1 should show');\n\t\tassert.deepStrictEqual(target.elements, [view1]);\n\n\t\ttestObject.setVisible('view3', true);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view3], 'view3 should show');\n\t\tassert.deepStrictEqual(target.elements, [view1, view3]);\n\n\t\ttestObject.setVisible('view2', true);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2, view3], 'view2 should show');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2, view3]);\n\n\t\tViewsRegistry.deregisterViews([view1, view2, view3], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, []);\n\t\tassert.deepStrictEqual(target.elements, []);\n\t});\n\n\ttest('move', () => {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst view1: IViewDescriptor = { id: 'view1', ctorDescriptor: null!, name: 'Test View 1' };\n\t\tconst view2: IViewDescriptor = { id: 'view2', ctorDescriptor: null!, name: 'Test View 2' };\n\t\tconst view3: IViewDescriptor = { id: 'view3', ctorDescriptor: null!, name: 'Test View 3' };\n\n\t\tViewsRegistry.registerViews([view1, view2, view3], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2, view3], 'model views should be OK');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2, view3], 'sql views should be OK');\n\n\t\ttestObject.move('view3', 'view1');\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view3, view1, view2], 'view3 should go to the front');\n\t\tassert.deepStrictEqual(target.elements, [view3, view1, view2]);\n\n\t\ttestObject.move('view1', 'view2');\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view3, view2, view1], 'view1 should go to the end');\n\t\tassert.deepStrictEqual(target.elements, [view3, view2, view1]);\n\n\t\ttestObject.move('view1', 'view3');\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view3, view2], 'view1 should go to the front');\n\t\tassert.deepStrictEqual(target.elements, [view1, view3, view2]);\n\n\t\ttestObject.move('view2', 'view3');\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view1, view2, view3], 'view2 should go to the middle');\n\t\tassert.deepStrictEqual(target.elements, [view1, view2, view3]);\n\t});\n\n\ttest('view states', async function () {\n\t\tstorageService.store(`${container.id}.state.hidden`, JSON.stringify([{ id: 'view1', isHidden: true }]), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1'\n\t\t};\n\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should not appear since it was set not visible in view state');\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('view states and when contexts', async function () {\n\t\tstorageService.store(`${container.id}.state.hidden`, JSON.stringify([{ id: 'view1', isHidden: true }]), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true)\n\t\t};\n\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should not appear since context isnt in');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst key = contextKeyService.createKey('showview1', false);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should still not appear since showview1 isnt true');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should still not appear since it was set not visible in view state');\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('view states and when contexts multiple views', async function () {\n\t\tstorageService.store(`${container.id}.state.hidden`, JSON.stringify([{ id: 'view1', isHidden: true }]), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst view1: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview', true)\n\t\t};\n\t\tconst view2: IViewDescriptor = {\n\t\t\tid: 'view2',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 2',\n\t\t};\n\t\tconst view3: IViewDescriptor = {\n\t\t\tid: 'view3',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 3',\n\t\t\twhen: ContextKeyExpr.equals('showview', true)\n\t\t};\n\n\t\tViewsRegistry.registerViews([view1, view2, view3], container);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2], 'Only view2 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2]);\n\n\t\tconst key = contextKeyService.createKey('showview', false);\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2], 'Only view2 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2]);\n\n\t\tkey.set(true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2, view3], 'view3 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2, view3]);\n\n\t\tkey.set(false);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.deepStrictEqual(testObject.visibleViewDescriptors, [view2], 'Only view2 should be visible');\n\t\tassert.deepStrictEqual(target.elements, [view2]);\n\t});\n\n\ttest('remove event is not triggered if view was hidden and removed', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true),\n\t\t\tcanToggleVisibility: true\n\t\t};\n\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tconst key = contextKeyService.createKey('showview1', true);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 1, 'view should appear after context is set');\n\t\tassert.strictEqual(target.elements.length, 1);\n\n\t\ttestObject.setVisible('view1', false);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0, 'view should disappear after setting visibility to false');\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst targetEvent = sinon.spy(testObject.onDidRemoveVisibleViewDescriptors);\n\t\tkey.set(false);\n\t\tawait new Promise(c => setTimeout(c, 30));\n\t\tassert.ok(!targetEvent.called, 'remove event should not be called since it is already hidden');\n\t});\n\n\ttest('add event is not triggered if view was set visible (when visible) and not active', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true),\n\t\t\tcanToggleVisibility: true\n\t\t};\n\n\t\tconst key = contextKeyService.createKey('showview1', true);\n\t\tkey.set(false);\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst targetEvent = sinon.spy(testObject.onDidAddVisibleViewDescriptors);\n\t\ttestObject.setVisible('view1', true);\n\t\tassert.ok(!targetEvent.called, 'add event should not be called since it is already visible');\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('remove event is not triggered if view was hidden and not active', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true),\n\t\t\tcanToggleVisibility: true\n\t\t};\n\n\t\tconst key = contextKeyService.createKey('showview1', true);\n\t\tkey.set(false);\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst targetEvent = sinon.spy(testObject.onDidAddVisibleViewDescriptors);\n\t\ttestObject.setVisible('view1', false);\n\t\tassert.ok(!targetEvent.called, 'add event should not be called since it is disabled');\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('add event is not triggered if view was set visible (when not visible) and not active', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\t\tconst viewDescriptor: IViewDescriptor = {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\twhen: ContextKeyExpr.equals('showview1', true),\n\t\t\tcanToggleVisibility: true\n\t\t};\n\n\t\tconst key = contextKeyService.createKey('showview1', true);\n\t\tkey.set(false);\n\t\tViewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\ttestObject.setVisible('view1', false);\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\n\t\tconst targetEvent = sinon.spy(testObject.onDidAddVisibleViewDescriptors);\n\t\ttestObject.setVisible('view1', true);\n\t\tassert.ok(!targetEvent.called, 'add event should not be called since it is disabled');\n\t\tassert.strictEqual(testObject.visibleViewDescriptors.length, 0);\n\t\tassert.strictEqual(target.elements.length, 0);\n\t});\n\n\ttest('added view descriptors are in ascending order in the event', async function () {\n\t\tcontainer = ViewContainerRegistry.registerViewContainer({ id: 'test', title: 'test', ctorDescriptor: new SyncDescriptor(<any>{}) }, ViewContainerLocation.Sidebar);\n\t\tconst testObject = viewDescriptorService.getViewContainerModel(container);\n\t\tconst target = disposableStore.add(new ViewDescriptorSequence(testObject));\n\n\t\tViewsRegistry.registerViews([{\n\t\t\tid: 'view5',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 5',\n\t\t\tcanToggleVisibility: true,\n\t\t\torder: 5\n\t\t}, {\n\t\t\tid: 'view2',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 2',\n\t\t\tcanToggleVisibility: true,\n\t\t\torder: 2\n\t\t}], container);\n\n\t\tassert.strictEqual(target.elements.length, 2);\n\t\tassert.strictEqual(target.elements[0].id, 'view2');\n\t\tassert.strictEqual(target.elements[1].id, 'view5');\n\n\t\tViewsRegistry.registerViews([{\n\t\t\tid: 'view4',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 4',\n\t\t\tcanToggleVisibility: true,\n\t\t\torder: 4\n\t\t}, {\n\t\t\tid: 'view3',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 3',\n\t\t\tcanToggleVisibility: true,\n\t\t\torder: 3\n\t\t}, {\n\t\t\tid: 'view1',\n\t\t\tctorDescriptor: null!,\n\t\t\tname: 'Test View 1',\n\t\t\tcanToggleVisibility: true,\n\t\t\torder: 1\n\t\t}], container);\n\n\t\tassert.strictEqual(target.elements.length, 5);\n\t\tassert.strictEqual(target.elements[0].id, 'view1');\n\t\tassert.strictEqual(target.elements[1].id, 'view2');\n\t\tassert.strictEqual(target.elements[2].id, 'view3');\n\t\tassert.strictEqual(target.elements[3].id, 'view4');\n\t\tassert.strictEqual(target.elements[4].id, 'view5');\n\t});\n\n});\n"]}