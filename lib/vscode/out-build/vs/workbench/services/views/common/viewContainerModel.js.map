{"version":3,"file":"viewContainerModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/views/common/viewContainerModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ViewContainer, IViewsRegistry, IViewDescriptor, Extensions as ViewExtensions, IViewContainerModel, IAddedViewDescriptorRef, IViewDescriptorRef, IAddedViewDescriptorState, defaultViewIcon } from 'vs/workbench/common/views';\nimport { IContextKeyService, IReadableSet } from 'vs/platform/contextkey/common/contextkey';\nimport { IStorageService, StorageScope, IStorageValueChangeEvent, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { move } from 'vs/base/common/arrays';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { isEqual } from 'vs/base/common/resources';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport function getViewsStateStorageId(viewContainerStorageId: string): string { return `${viewContainerStorageId}.hidden`; }\n\nclass CounterSet<T> implements IReadableSet<T> {\n\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n\ninterface IStoredWorkspaceViewState {\n\tcollapsed: boolean;\n\tisHidden: boolean;\n\tsize?: number;\n\torder?: number;\n}\n\ninterface IStoredGlobalViewState {\n\tid: string;\n\tisHidden: boolean;\n\torder?: number;\n}\n\ninterface IViewDescriptorState {\n\tvisibleGlobal: boolean | undefined;\n\tvisibleWorkspace: boolean | undefined;\n\tcollapsed: boolean | undefined;\n\tactive: boolean\n\torder?: number;\n\tsize?: number;\n}\n\nclass ViewDescriptorsState extends Disposable {\n\n\tprivate readonly workspaceViewsStateStorageId: string;\n\tprivate readonly globalViewsStateStorageId: string;\n\tprivate readonly state: Map<string, IViewDescriptorState>;\n\n\tprivate _onDidChangeStoredState = this._register(new Emitter<{ id: string, visible: boolean }[]>());\n\treadonly onDidChangeStoredState = this._onDidChangeStoredState.event;\n\n\tconstructor(\n\t\tviewContainerStorageId: string,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis.globalViewsStateStorageId = getViewsStateStorageId(viewContainerStorageId);\n\t\tthis.workspaceViewsStateStorageId = viewContainerStorageId;\n\t\tthis._register(this.storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\n\t\tthis.state = this.initialize();\n\t}\n\n\tset(id: string, state: IViewDescriptorState): void {\n\t\tthis.state.set(id, state);\n\t}\n\n\tget(id: string): IViewDescriptorState | undefined {\n\t\treturn this.state.get(id);\n\t}\n\n\tupdateState(viewDescriptors: ReadonlyArray<IViewDescriptor>): void {\n\t\tthis.updateWorkspaceState(viewDescriptors);\n\t\tthis.updateGlobalState(viewDescriptors);\n\t}\n\n\tprivate updateWorkspaceState(viewDescriptors: ReadonlyArray<IViewDescriptor>): void {\n\t\tconst storedViewsStates: { [id: string]: IStoredWorkspaceViewState; } = JSON.parse(this.storageService.get(this.workspaceViewsStateStorageId, StorageScope.WORKSPACE, '{}'));\n\t\tfor (const viewDescriptor of viewDescriptors) {\n\t\t\tconst viewState = this.state.get(viewDescriptor.id);\n\t\t\tif (viewState) {\n\t\t\t\tstoredViewsStates[viewDescriptor.id] = {\n\t\t\t\t\tcollapsed: !!viewState.collapsed,\n\t\t\t\t\tisHidden: !viewState.visibleWorkspace,\n\t\t\t\t\tsize: viewState.size,\n\t\t\t\t\torder: viewDescriptor.workspace && viewState ? viewState.order : undefined\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(storedViewsStates).length > 0) {\n\t\t\tthis.storageService.store(this.workspaceViewsStateStorageId, JSON.stringify(storedViewsStates), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(this.workspaceViewsStateStorageId, StorageScope.WORKSPACE);\n\t\t}\n\t}\n\n\tprivate updateGlobalState(viewDescriptors: ReadonlyArray<IViewDescriptor>): void {\n\t\tconst storedGlobalState = this.getStoredGlobalState();\n\t\tfor (const viewDescriptor of viewDescriptors) {\n\t\t\tconst state = this.state.get(viewDescriptor.id);\n\t\t\tstoredGlobalState.set(viewDescriptor.id, {\n\t\t\t\tid: viewDescriptor.id,\n\t\t\t\tisHidden: state && viewDescriptor.canToggleVisibility ? !state.visibleGlobal : false,\n\t\t\t\torder: !viewDescriptor.workspace && state ? state.order : undefined\n\t\t\t});\n\t\t}\n\t\tthis.setStoredGlobalState(storedGlobalState);\n\t}\n\n\tprivate onDidStorageChange(e: IStorageValueChangeEvent): void {\n\t\tif (e.key === this.globalViewsStateStorageId && e.scope === StorageScope.GLOBAL\n\t\t\t&& this.globalViewsStatesValue !== this.getStoredGlobalViewsStatesValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._globalViewsStatesValue = undefined;\n\t\t\tconst storedViewsVisibilityStates = this.getStoredGlobalState();\n\t\t\tconst changedStates: { id: string, visible: boolean }[] = [];\n\t\t\tfor (const [id, storedState] of storedViewsVisibilityStates) {\n\t\t\t\tconst state = this.state.get(id);\n\t\t\t\tif (state) {\n\t\t\t\t\tif (state.visibleGlobal !== !storedState.isHidden) {\n\t\t\t\t\t\tchangedStates.push({ id, visible: !storedState.isHidden });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changedStates.length) {\n\t\t\t\tthis._onDidChangeStoredState.fire(changedStates);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate initialize(): Map<string, IViewDescriptorState> {\n\t\tconst viewStates = new Map<string, IViewDescriptorState>();\n\t\tconst workspaceViewsStates = <{ [id: string]: IStoredWorkspaceViewState; }>JSON.parse(this.storageService.get(this.workspaceViewsStateStorageId, StorageScope.WORKSPACE, '{}'));\n\t\tfor (const id of Object.keys(workspaceViewsStates)) {\n\t\t\tconst workspaceViewState = workspaceViewsStates[id];\n\t\t\tviewStates.set(id, {\n\t\t\t\tactive: false,\n\t\t\t\tvisibleGlobal: undefined,\n\t\t\t\tvisibleWorkspace: isUndefined(workspaceViewState.isHidden) ? undefined : !workspaceViewState.isHidden,\n\t\t\t\tcollapsed: workspaceViewState.collapsed,\n\t\t\t\torder: workspaceViewState.order,\n\t\t\t\tsize: workspaceViewState.size,\n\t\t\t});\n\t\t}\n\n\t\t// Migrate to `viewletStateStorageId`\n\t\tconst value = this.storageService.get(this.globalViewsStateStorageId, StorageScope.WORKSPACE, '[]');\n\t\tconst { state: workspaceVisibilityStates } = this.parseStoredGlobalState(value);\n\t\tif (workspaceVisibilityStates.size > 0) {\n\t\t\tfor (const { id, isHidden } of workspaceVisibilityStates.values()) {\n\t\t\t\tlet viewState = viewStates.get(id);\n\t\t\t\t// Not migrated to `viewletStateStorageId`\n\t\t\t\tif (viewState) {\n\t\t\t\t\tif (isUndefined(viewState.visibleWorkspace)) {\n\t\t\t\t\t\tviewState.visibleWorkspace = !isHidden;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tviewStates.set(id, {\n\t\t\t\t\t\tactive: false,\n\t\t\t\t\t\tcollapsed: undefined,\n\t\t\t\t\t\tvisibleGlobal: undefined,\n\t\t\t\t\t\tvisibleWorkspace: !isHidden,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.storageService.remove(this.globalViewsStateStorageId, StorageScope.WORKSPACE);\n\t\t}\n\n\t\tconst { state, hasDuplicates } = this.parseStoredGlobalState(this.globalViewsStatesValue);\n\t\tif (hasDuplicates) {\n\t\t\tthis.setStoredGlobalState(state);\n\t\t}\n\t\tfor (const { id, isHidden, order } of state.values()) {\n\t\t\tlet viewState = viewStates.get(id);\n\t\t\tif (viewState) {\n\t\t\t\tviewState.visibleGlobal = !isHidden;\n\t\t\t\tif (!isUndefined(order)) {\n\t\t\t\t\tviewState.order = order;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewStates.set(id, {\n\t\t\t\t\tactive: false,\n\t\t\t\t\tvisibleGlobal: !isHidden,\n\t\t\t\t\torder,\n\t\t\t\t\tcollapsed: undefined,\n\t\t\t\t\tvisibleWorkspace: undefined,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn viewStates;\n\t}\n\n\tprivate getStoredGlobalState(): Map<string, IStoredGlobalViewState> {\n\t\treturn this.parseStoredGlobalState(this.globalViewsStatesValue).state;\n\t}\n\n\tprivate setStoredGlobalState(storedGlobalState: Map<string, IStoredGlobalViewState>): void {\n\t\tthis.globalViewsStatesValue = JSON.stringify([...storedGlobalState.values()]);\n\t}\n\n\tprivate parseStoredGlobalState(value: string): { state: Map<string, IStoredGlobalViewState>, hasDuplicates: boolean } {\n\t\tconst storedValue = <Array<string | IStoredGlobalViewState>>JSON.parse(value);\n\t\tlet hasDuplicates = false;\n\t\tconst state = storedValue.reduce((result, storedState) => {\n\t\t\tif (typeof storedState === 'string' /* migration */) {\n\t\t\t\thasDuplicates = hasDuplicates || result.has(storedState);\n\t\t\t\tresult.set(storedState, { id: storedState, isHidden: true });\n\t\t\t} else {\n\t\t\t\thasDuplicates = hasDuplicates || result.has(storedState.id);\n\t\t\t\tresult.set(storedState.id, storedState);\n\t\t\t}\n\t\t\treturn result;\n\t\t}, new Map<string, IStoredGlobalViewState>());\n\t\treturn { state, hasDuplicates };\n\t}\n\n\tprivate _globalViewsStatesValue: string | undefined;\n\tprivate get globalViewsStatesValue(): string {\n\t\tif (!this._globalViewsStatesValue) {\n\t\t\tthis._globalViewsStatesValue = this.getStoredGlobalViewsStatesValue();\n\t\t}\n\n\t\treturn this._globalViewsStatesValue;\n\t}\n\n\tprivate set globalViewsStatesValue(globalViewsStatesValue: string) {\n\t\tif (this.globalViewsStatesValue !== globalViewsStatesValue) {\n\t\t\tthis._globalViewsStatesValue = globalViewsStatesValue;\n\t\t\tthis.setStoredGlobalViewsStatesValue(globalViewsStatesValue);\n\t\t}\n\t}\n\n\tprivate getStoredGlobalViewsStatesValue(): string {\n\t\treturn this.storageService.get(this.globalViewsStateStorageId, StorageScope.GLOBAL, '[]');\n\t}\n\n\tprivate setStoredGlobalViewsStatesValue(value: string): void {\n\t\tthis.storageService.store(this.globalViewsStateStorageId, value, StorageScope.GLOBAL, StorageTarget.USER);\n\t}\n\n}\n\ninterface IViewDescriptorItem {\n\tviewDescriptor: IViewDescriptor;\n\tstate: IViewDescriptorState;\n}\n\nexport class ViewContainerModel extends Disposable implements IViewContainerModel {\n\n\tprivate readonly contextKeys = new CounterSet<string>();\n\tprivate viewDescriptorItems: IViewDescriptorItem[] = [];\n\tprivate viewDescriptorsState: ViewDescriptorsState;\n\n\t// Container Info\n\tprivate _title!: string;\n\tget title(): string { return this._title; }\n\n\tprivate _icon: URI | ThemeIcon | undefined;\n\tget icon(): URI | ThemeIcon | undefined { return this._icon; }\n\n\tprivate _keybindingId: string | undefined;\n\tget keybindingId(): string | undefined { return this._keybindingId; }\n\n\tprivate _onDidChangeContainerInfo = this._register(new Emitter<{ title?: boolean, icon?: boolean, keybindingId?: boolean }>());\n\treadonly onDidChangeContainerInfo = this._onDidChangeContainerInfo.event;\n\n\t// All View Descriptors\n\tget allViewDescriptors(): ReadonlyArray<IViewDescriptor> { return this.viewDescriptorItems.map(item => item.viewDescriptor); }\n\tprivate _onDidChangeAllViewDescriptors = this._register(new Emitter<{ added: ReadonlyArray<IViewDescriptor>, removed: ReadonlyArray<IViewDescriptor> }>());\n\treadonly onDidChangeAllViewDescriptors = this._onDidChangeAllViewDescriptors.event;\n\n\t// Active View Descriptors\n\tget activeViewDescriptors(): ReadonlyArray<IViewDescriptor> { return this.viewDescriptorItems.filter(item => item.state.active).map(item => item.viewDescriptor); }\n\tprivate _onDidChangeActiveViewDescriptors = this._register(new Emitter<{ added: ReadonlyArray<IViewDescriptor>, removed: ReadonlyArray<IViewDescriptor> }>());\n\treadonly onDidChangeActiveViewDescriptors = this._onDidChangeActiveViewDescriptors.event;\n\n\t// Visible View Descriptors\n\tget visibleViewDescriptors(): ReadonlyArray<IViewDescriptor> { return this.viewDescriptorItems.filter(item => this.isViewDescriptorVisible(item)).map(item => item.viewDescriptor); }\n\n\tprivate _onDidAddVisibleViewDescriptors = this._register(new Emitter<IAddedViewDescriptorRef[]>());\n\treadonly onDidAddVisibleViewDescriptors: Event<IAddedViewDescriptorRef[]> = this._onDidAddVisibleViewDescriptors.event;\n\n\tprivate _onDidRemoveVisibleViewDescriptors = this._register(new Emitter<IViewDescriptorRef[]>());\n\treadonly onDidRemoveVisibleViewDescriptors: Event<IViewDescriptorRef[]> = this._onDidRemoveVisibleViewDescriptors.event;\n\n\tprivate _onDidMoveVisibleViewDescriptors = this._register(new Emitter<{ from: IViewDescriptorRef; to: IViewDescriptorRef; }>());\n\treadonly onDidMoveVisibleViewDescriptors: Event<{ from: IViewDescriptorRef; to: IViewDescriptorRef; }> = this._onDidMoveVisibleViewDescriptors.event;\n\n\tconstructor(\n\t\treadonly viewContainer: ViewContainer,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.filter(contextKeyService.onDidChangeContext, e => e.affectsSome(this.contextKeys))(() => this.onDidChangeContext()));\n\t\tthis.viewDescriptorsState = this._register(instantiationService.createInstance(ViewDescriptorsState, viewContainer.storageId || `${viewContainer.id}.state`));\n\t\tthis._register(this.viewDescriptorsState.onDidChangeStoredState(items => this.updateVisibility(items)));\n\n\t\tthis._register(Event.any(\n\t\t\tthis.onDidAddVisibleViewDescriptors,\n\t\t\tthis.onDidRemoveVisibleViewDescriptors,\n\t\t\tthis.onDidMoveVisibleViewDescriptors)\n\t\t\t(() => {\n\t\t\t\tthis.viewDescriptorsState.updateState(this.allViewDescriptors);\n\t\t\t\tthis.updateContainerInfo();\n\t\t\t}));\n\n\t\tthis.updateContainerInfo();\n\t}\n\n\tprivate updateContainerInfo(): void {\n\t\t/* Use default container info if one of the visible view descriptors belongs to the current container by default */\n\t\tconst useDefaultContainerInfo = this.viewContainer.alwaysUseContainerInfo || this.visibleViewDescriptors.length === 0 || this.visibleViewDescriptors.some(v => Registry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).getViewContainer(v.id) === this.viewContainer);\n\t\tconst title = useDefaultContainerInfo ? this.viewContainer.title : this.visibleViewDescriptors[0]?.containerTitle || this.visibleViewDescriptors[0]?.name || '';\n\t\tlet titleChanged: boolean = false;\n\t\tif (this._title !== title) {\n\t\t\tthis._title = title;\n\t\t\ttitleChanged = true;\n\t\t}\n\n\t\tconst icon = useDefaultContainerInfo ? this.viewContainer.icon : this.visibleViewDescriptors[0]?.containerIcon || defaultViewIcon;\n\t\tlet iconChanged: boolean = false;\n\t\tif (!this.isEqualIcon(icon)) {\n\t\t\tthis._icon = icon;\n\t\t\ticonChanged = true;\n\t\t}\n\n\t\tconst keybindingId = this.viewContainer.openCommandActionDescriptor?.id ?? this.activeViewDescriptors.find(v => v.openCommandActionDescriptor)?.openCommandActionDescriptor?.id;\n\t\tlet keybindingIdChanged: boolean = false;\n\t\tif (this._keybindingId !== keybindingId) {\n\t\t\tthis._keybindingId = keybindingId;\n\t\t\tkeybindingIdChanged = true;\n\t\t}\n\n\t\tif (titleChanged || iconChanged || keybindingIdChanged) {\n\t\t\tthis._onDidChangeContainerInfo.fire({ title: titleChanged, icon: iconChanged, keybindingId: keybindingIdChanged });\n\t\t}\n\t}\n\n\tprivate isEqualIcon(icon: URI | ThemeIcon | undefined): boolean {\n\t\tif (URI.isUri(icon)) {\n\t\t\treturn URI.isUri(this._icon) && isEqual(icon, this._icon);\n\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\treturn ThemeIcon.isThemeIcon(this._icon) && ThemeIcon.isEqual(icon, this._icon);\n\t\t}\n\t\treturn icon === this._icon;\n\t}\n\n\tisVisible(id: string): boolean {\n\t\tconst viewDescriptorItem = this.viewDescriptorItems.filter(v => v.viewDescriptor.id === id)[0];\n\t\tif (!viewDescriptorItem) {\n\t\t\tthrow new Error(`Unknown view ${id}`);\n\t\t}\n\t\treturn this.isViewDescriptorVisible(viewDescriptorItem);\n\t}\n\n\tsetVisible(id: string, visible: boolean, size?: number): void {\n\t\tthis.updateVisibility([{ id, visible, size }]);\n\t}\n\n\tprivate updateVisibility(viewDescriptors: { id: string, visible: boolean, size?: number }[]): void {\n\t\tconst added: IAddedViewDescriptorRef[] = [];\n\t\tconst removed: IViewDescriptorRef[] = [];\n\n\t\tfor (const { id, visible, size } of viewDescriptors) {\n\t\t\tconst foundViewDescriptor = this.findAndIgnoreIfNotFound(id);\n\t\t\tif (!foundViewDescriptor) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst { viewDescriptorItem, visibleIndex } = foundViewDescriptor;\n\t\t\tconst viewDescriptor = viewDescriptorItem.viewDescriptor;\n\n\t\t\tif (!viewDescriptor.canToggleVisibility) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.isViewDescriptorVisibleWhenActive(viewDescriptorItem) === visible) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (viewDescriptor.workspace) {\n\t\t\t\tviewDescriptorItem.state.visibleWorkspace = visible;\n\t\t\t} else {\n\t\t\t\tviewDescriptorItem.state.visibleGlobal = visible;\n\t\t\t}\n\n\t\t\tif (typeof viewDescriptorItem.state.size === 'number') {\n\t\t\t\tviewDescriptorItem.state.size = size;\n\t\t\t}\n\n\t\t\tif (this.isViewDescriptorVisible(viewDescriptorItem) !== visible) {\n\t\t\t\t// do not add events if visibility is not changed\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (visible) {\n\t\t\t\tadded.push({ index: visibleIndex, viewDescriptor, size: viewDescriptorItem.state.size, collapsed: !!viewDescriptorItem.state.collapsed });\n\t\t\t} else {\n\t\t\t\tremoved.push({ index: visibleIndex, viewDescriptor });\n\t\t\t}\n\t\t}\n\n\t\tif (added.length) {\n\t\t\tthis.triggerOnDidAddVisibleViewDescriptors(added);\n\t\t}\n\t\tif (removed.length) {\n\t\t\tthis._onDidRemoveVisibleViewDescriptors.fire(removed);\n\t\t}\n\t}\n\n\tprivate triggerOnDidAddVisibleViewDescriptors(added: IAddedViewDescriptorRef[]) {\n\t\tthis._onDidAddVisibleViewDescriptors.fire(added.sort((a, b) => a.index - b.index));\n\t}\n\n\tisCollapsed(id: string): boolean {\n\t\treturn !!this.find(id).viewDescriptorItem.state.collapsed;\n\t}\n\n\tsetCollapsed(id: string, collapsed: boolean): void {\n\t\tconst { viewDescriptorItem } = this.find(id);\n\t\tif (viewDescriptorItem.state.collapsed !== collapsed) {\n\t\t\tviewDescriptorItem.state.collapsed = collapsed;\n\t\t}\n\t\tthis.viewDescriptorsState.updateState(this.allViewDescriptors);\n\t}\n\n\tgetSize(id: string): number | undefined {\n\t\treturn this.find(id).viewDescriptorItem.state.size;\n\t}\n\n\tsetSize(id: string, size: number): void {\n\t\tconst { viewDescriptorItem } = this.find(id);\n\t\tif (viewDescriptorItem.state.size !== size) {\n\t\t\tviewDescriptorItem.state.size = size;\n\t\t}\n\t\tthis.viewDescriptorsState.updateState(this.allViewDescriptors);\n\t}\n\n\tmove(from: string, to: string): void {\n\t\tconst fromIndex = this.viewDescriptorItems.findIndex(v => v.viewDescriptor.id === from);\n\t\tconst toIndex = this.viewDescriptorItems.findIndex(v => v.viewDescriptor.id === to);\n\n\t\tconst fromViewDescriptor = this.viewDescriptorItems[fromIndex];\n\t\tconst toViewDescriptor = this.viewDescriptorItems[toIndex];\n\n\t\tmove(this.viewDescriptorItems, fromIndex, toIndex);\n\n\t\tfor (let index = 0; index < this.viewDescriptorItems.length; index++) {\n\t\t\tthis.viewDescriptorItems[index].state.order = index;\n\t\t}\n\n\t\tthis._onDidMoveVisibleViewDescriptors.fire({\n\t\t\tfrom: { index: fromIndex, viewDescriptor: fromViewDescriptor.viewDescriptor },\n\t\t\tto: { index: toIndex, viewDescriptor: toViewDescriptor.viewDescriptor }\n\t\t});\n\t}\n\n\tadd(addedViewDescriptorStates: IAddedViewDescriptorState[]): void {\n\t\tconst addedItems: IViewDescriptorItem[] = [];\n\t\tconst addedActiveDescriptors: IViewDescriptor[] = [];\n\t\tconst addedVisibleItems: { index: number, viewDescriptor: IViewDescriptor, size?: number, collapsed: boolean; }[] = [];\n\n\t\tfor (const addedViewDescriptorState of addedViewDescriptorStates) {\n\t\t\tconst viewDescriptor = addedViewDescriptorState.viewDescriptor;\n\n\t\t\tif (viewDescriptor.when) {\n\t\t\t\tfor (const key of viewDescriptor.when.keys()) {\n\t\t\t\t\tthis.contextKeys.add(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet state = this.viewDescriptorsState.get(viewDescriptor.id);\n\t\t\tif (state) {\n\t\t\t\t// set defaults if not set\n\t\t\t\tif (viewDescriptor.workspace) {\n\t\t\t\t\tstate.visibleWorkspace = isUndefinedOrNull(addedViewDescriptorState.visible) ? (isUndefinedOrNull(state.visibleWorkspace) ? !viewDescriptor.hideByDefault : state.visibleWorkspace) : addedViewDescriptorState.visible;\n\t\t\t\t} else {\n\t\t\t\t\tstate.visibleGlobal = isUndefinedOrNull(addedViewDescriptorState.visible) ? (isUndefinedOrNull(state.visibleGlobal) ? !viewDescriptor.hideByDefault : state.visibleGlobal) : addedViewDescriptorState.visible;\n\t\t\t\t}\n\t\t\t\tstate.collapsed = isUndefinedOrNull(addedViewDescriptorState.collapsed) ? (isUndefinedOrNull(state.collapsed) ? !!viewDescriptor.collapsed : state.collapsed) : addedViewDescriptorState.collapsed;\n\t\t\t} else {\n\t\t\t\tstate = {\n\t\t\t\t\tactive: false,\n\t\t\t\t\tvisibleGlobal: isUndefinedOrNull(addedViewDescriptorState.visible) ? !viewDescriptor.hideByDefault : addedViewDescriptorState.visible,\n\t\t\t\t\tvisibleWorkspace: isUndefinedOrNull(addedViewDescriptorState.visible) ? !viewDescriptor.hideByDefault : addedViewDescriptorState.visible,\n\t\t\t\t\tcollapsed: isUndefinedOrNull(addedViewDescriptorState.collapsed) ? !!viewDescriptor.collapsed : addedViewDescriptorState.collapsed,\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.viewDescriptorsState.set(viewDescriptor.id, state);\n\t\t\tstate.active = this.contextKeyService.contextMatchesRules(viewDescriptor.when);\n\t\t\taddedItems.push({ viewDescriptor, state });\n\n\t\t\tif (state.active) {\n\t\t\t\taddedActiveDescriptors.push(viewDescriptor);\n\t\t\t}\n\t\t}\n\n\t\tthis.viewDescriptorItems.push(...addedItems);\n\t\tthis.viewDescriptorItems.sort(this.compareViewDescriptors.bind(this));\n\n\t\tfor (const viewDescriptorItem of addedItems) {\n\t\t\tif (this.isViewDescriptorVisible(viewDescriptorItem)) {\n\t\t\t\tconst { visibleIndex } = this.find(viewDescriptorItem.viewDescriptor.id);\n\t\t\t\taddedVisibleItems.push({ index: visibleIndex, viewDescriptor: viewDescriptorItem.viewDescriptor, size: viewDescriptorItem.state.size, collapsed: !!viewDescriptorItem.state.collapsed });\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeAllViewDescriptors.fire({ added: addedItems.map(({ viewDescriptor }) => viewDescriptor), removed: [] });\n\t\tif (addedActiveDescriptors.length) {\n\t\t\tthis._onDidChangeActiveViewDescriptors.fire(({ added: addedActiveDescriptors, removed: [] }));\n\t\t}\n\t\tif (addedVisibleItems.length) {\n\t\t\tthis.triggerOnDidAddVisibleViewDescriptors(addedVisibleItems);\n\t\t}\n\t}\n\n\tremove(viewDescriptors: IViewDescriptor[]): void {\n\t\tconst removed: IViewDescriptor[] = [];\n\t\tconst removedItems: IViewDescriptorItem[] = [];\n\t\tconst removedActiveDescriptors: IViewDescriptor[] = [];\n\t\tconst removedVisibleItems: { index: number, viewDescriptor: IViewDescriptor; }[] = [];\n\n\t\tfor (const viewDescriptor of viewDescriptors) {\n\t\t\tif (viewDescriptor.when) {\n\t\t\t\tfor (const key of viewDescriptor.when.keys()) {\n\t\t\t\t\tthis.contextKeys.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst index = this.viewDescriptorItems.findIndex(i => i.viewDescriptor.id === viewDescriptor.id);\n\t\t\tif (index !== -1) {\n\t\t\t\tremoved.push(viewDescriptor);\n\t\t\t\tconst viewDescriptorItem = this.viewDescriptorItems[index];\n\t\t\t\tif (viewDescriptorItem.state.active) {\n\t\t\t\t\tremovedActiveDescriptors.push(viewDescriptorItem.viewDescriptor);\n\t\t\t\t}\n\t\t\t\tif (this.isViewDescriptorVisible(viewDescriptorItem)) {\n\t\t\t\t\tconst { visibleIndex } = this.find(viewDescriptorItem.viewDescriptor.id);\n\t\t\t\t\tremovedVisibleItems.push({ index: visibleIndex, viewDescriptor: viewDescriptorItem.viewDescriptor });\n\t\t\t\t}\n\t\t\t\tremovedItems.push(viewDescriptorItem);\n\t\t\t}\n\t\t}\n\n\t\tremovedItems.forEach(item => this.viewDescriptorItems.splice(this.viewDescriptorItems.indexOf(item), 1));\n\n\t\tthis._onDidChangeAllViewDescriptors.fire({ added: [], removed });\n\t\tif (removedActiveDescriptors.length) {\n\t\t\tthis._onDidChangeActiveViewDescriptors.fire(({ added: [], removed: removedActiveDescriptors }));\n\t\t}\n\t\tif (removedVisibleItems.length) {\n\t\t\tthis._onDidRemoveVisibleViewDescriptors.fire(removedVisibleItems);\n\t\t}\n\t}\n\n\tprivate onDidChangeContext(): void {\n\t\tconst addedActiveItems: { item: IViewDescriptorItem, wasVisible: boolean }[] = [];\n\t\tconst removedActiveItems: { item: IViewDescriptorItem, wasVisible: boolean }[] = [];\n\t\tconst removedVisibleItems: { index: number, viewDescriptor: IViewDescriptor; }[] = [];\n\t\tconst addedVisibleItems: { index: number, viewDescriptor: IViewDescriptor, size?: number, collapsed: boolean; }[] = [];\n\n\t\tfor (const item of this.viewDescriptorItems) {\n\t\t\tconst wasActive = item.state.active;\n\t\t\tconst wasVisible = this.isViewDescriptorVisible(item);\n\t\t\tconst isActive = this.contextKeyService.contextMatchesRules(item.viewDescriptor.when);\n\t\t\tif (wasActive !== isActive) {\n\t\t\t\tif (isActive) {\n\t\t\t\t\taddedActiveItems.push({ item, wasVisible });\n\t\t\t\t} else {\n\t\t\t\t\tremovedActiveItems.push({ item, wasVisible });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const { item, wasVisible } of removedActiveItems) {\n\t\t\tif (wasVisible) {\n\t\t\t\tconst { visibleIndex } = this.find(item.viewDescriptor.id);\n\t\t\t\tremovedVisibleItems.push({ index: visibleIndex, viewDescriptor: item.viewDescriptor });\n\t\t\t}\n\t\t}\n\n\t\t// Update the State\n\t\tremovedActiveItems.forEach(({ item }) => item.state.active = false);\n\t\taddedActiveItems.forEach(({ item }) => item.state.active = true);\n\n\t\tfor (const { item, wasVisible } of addedActiveItems) {\n\t\t\tif (wasVisible !== this.isViewDescriptorVisibleWhenActive(item)) {\n\t\t\t\tconst { visibleIndex } = this.find(item.viewDescriptor.id);\n\t\t\t\taddedVisibleItems.push({ index: visibleIndex, viewDescriptor: item.viewDescriptor, size: item.state.size, collapsed: !!item.state.collapsed });\n\t\t\t}\n\t\t}\n\n\t\tif (addedActiveItems.length || removedActiveItems.length) {\n\t\t\tthis._onDidChangeActiveViewDescriptors.fire(({ added: addedActiveItems.map(({ item }) => item.viewDescriptor), removed: removedActiveItems.map(({ item }) => item.viewDescriptor) }));\n\t\t}\n\t\tif (removedVisibleItems.length) {\n\t\t\tthis._onDidRemoveVisibleViewDescriptors.fire(removedVisibleItems);\n\t\t}\n\t\tif (addedVisibleItems.length) {\n\t\t\tthis.triggerOnDidAddVisibleViewDescriptors(addedVisibleItems);\n\t\t}\n\t}\n\n\tprivate isViewDescriptorVisible(viewDescriptorItem: IViewDescriptorItem): boolean {\n\t\tif (!viewDescriptorItem.state.active) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.isViewDescriptorVisibleWhenActive(viewDescriptorItem);\n\t}\n\n\tprivate isViewDescriptorVisibleWhenActive(viewDescriptorItem: IViewDescriptorItem): boolean {\n\t\tif (viewDescriptorItem.viewDescriptor.workspace) {\n\t\t\treturn !!viewDescriptorItem.state.visibleWorkspace;\n\t\t}\n\t\treturn !!viewDescriptorItem.state.visibleGlobal;\n\t}\n\n\tprivate find(id: string): { index: number, visibleIndex: number, viewDescriptorItem: IViewDescriptorItem; } {\n\t\tconst result = this.findAndIgnoreIfNotFound(id);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new Error(`view descriptor ${id} not found`);\n\t}\n\n\tprivate findAndIgnoreIfNotFound(id: string): { index: number, visibleIndex: number, viewDescriptorItem: IViewDescriptorItem; } | undefined {\n\t\tfor (let i = 0, visibleIndex = 0; i < this.viewDescriptorItems.length; i++) {\n\t\t\tconst viewDescriptorItem = this.viewDescriptorItems[i];\n\t\t\tif (viewDescriptorItem.viewDescriptor.id === id) {\n\t\t\t\treturn { index: i, visibleIndex, viewDescriptorItem: viewDescriptorItem };\n\t\t\t}\n\t\t\tif (this.isViewDescriptorVisible(viewDescriptorItem)) {\n\t\t\t\tvisibleIndex++;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate compareViewDescriptors(a: IViewDescriptorItem, b: IViewDescriptorItem): number {\n\t\tif (a.viewDescriptor.id === b.viewDescriptor.id) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn (this.getViewOrder(a) - this.getViewOrder(b)) || this.getGroupOrderResult(a.viewDescriptor, b.viewDescriptor);\n\t}\n\n\tprivate getViewOrder(viewDescriptorItem: IViewDescriptorItem): number {\n\t\tconst viewOrder = typeof viewDescriptorItem.state.order === 'number' ? viewDescriptorItem.state.order : viewDescriptorItem.viewDescriptor.order;\n\t\treturn typeof viewOrder === 'number' ? viewOrder : Number.MAX_VALUE;\n\t}\n\n\tprivate getGroupOrderResult(a: IViewDescriptor, b: IViewDescriptor) {\n\t\tif (!a.group || !b.group) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (a.group === b.group) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn a.group < b.group ? -1 : 1;\n\t}\n}\n"]}