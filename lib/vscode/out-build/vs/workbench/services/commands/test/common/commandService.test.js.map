{"version":3,"file":"commandService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/commands/test/common/commandService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { CommandService } from 'vs/workbench/services/commands/common/commandService';\nimport { NullExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nsuite('CommandService', function () {\n\n\tlet commandRegistration: IDisposable;\n\n\tsetup(function () {\n\t\tcommandRegistration = CommandsRegistry.registerCommand('foo', function () { });\n\t});\n\n\tteardown(function () {\n\t\tcommandRegistration.dispose();\n\t});\n\n\ttest('activateOnCommand', () => {\n\n\t\tlet lastEvent: string;\n\n\t\tlet service = new CommandService(new InstantiationService(), new class extends NullExtensionService {\n\t\t\toverride activateByEvent(activationEvent: string): Promise<void> {\n\t\t\t\tlastEvent = activationEvent;\n\t\t\t\treturn super.activateByEvent(activationEvent);\n\t\t\t}\n\t\t}, new NullLogService());\n\n\t\treturn service.executeCommand('foo').then(() => {\n\t\t\tassert.ok(lastEvent, 'onCommand:foo');\n\t\t\treturn service.executeCommand('unknownCommandId');\n\t\t}).then(() => {\n\t\t\tassert.ok(false);\n\t\t}, () => {\n\t\t\tassert.ok(lastEvent, 'onCommand:unknownCommandId');\n\t\t});\n\t});\n\n\ttest('fwd activation error', async function () {\n\n\t\tconst extensionService = new class extends NullExtensionService {\n\t\t\toverride activateByEvent(activationEvent: string): Promise<void> {\n\t\t\t\treturn Promise.reject(new Error('bad_activate'));\n\t\t\t}\n\t\t};\n\n\t\tlet service = new CommandService(new InstantiationService(), extensionService, new NullLogService());\n\n\t\tawait extensionService.whenInstalledExtensionsRegistered();\n\n\t\treturn service.executeCommand('foo').then(() => assert.ok(false), err => {\n\t\t\tassert.strictEqual(err.message, 'bad_activate');\n\t\t});\n\t});\n\n\ttest('!onReady, but executeCommand', function () {\n\n\t\tlet callCounter = 0;\n\t\tlet reg = CommandsRegistry.registerCommand('bar', () => callCounter += 1);\n\n\t\tlet service = new CommandService(new InstantiationService(), new class extends NullExtensionService {\n\t\t\toverride whenInstalledExtensionsRegistered() {\n\t\t\t\treturn new Promise<boolean>(_resolve => { /*ignore*/ });\n\t\t\t}\n\t\t}, new NullLogService());\n\n\t\tservice.executeCommand('bar');\n\t\tassert.strictEqual(callCounter, 1);\n\t\treg.dispose();\n\t});\n\n\ttest('issue #34913: !onReady, unknown command', function () {\n\n\t\tlet callCounter = 0;\n\t\tlet resolveFunc: Function;\n\t\tconst whenInstalledExtensionsRegistered = new Promise<boolean>(_resolve => { resolveFunc = _resolve; });\n\n\t\tlet service = new CommandService(new InstantiationService(), new class extends NullExtensionService {\n\t\t\toverride whenInstalledExtensionsRegistered() {\n\t\t\t\treturn whenInstalledExtensionsRegistered;\n\t\t\t}\n\t\t}, new NullLogService());\n\n\t\tlet r = service.executeCommand('bar');\n\t\tassert.strictEqual(callCounter, 0);\n\n\t\tlet reg = CommandsRegistry.registerCommand('bar', () => callCounter += 1);\n\t\tresolveFunc!(true);\n\n\t\treturn r.then(() => {\n\t\t\treg.dispose();\n\t\t\tassert.strictEqual(callCounter, 1);\n\t\t});\n\t});\n\n\ttest('Stop waiting for * extensions to activate when trigger is satisfied #62457', function () {\n\n\t\tlet callCounter = 0;\n\t\tconst disposable = new DisposableStore();\n\t\tlet events: string[] = [];\n\t\tlet service = new CommandService(new InstantiationService(), new class extends NullExtensionService {\n\n\t\t\toverride activateByEvent(event: string): Promise<void> {\n\t\t\t\tevents.push(event);\n\t\t\t\tif (event === '*') {\n\t\t\t\t\treturn new Promise(() => { }); //forever promise...\n\t\t\t\t}\n\t\t\t\tif (event.indexOf('onCommand:') === 0) {\n\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tlet reg = CommandsRegistry.registerCommand(event.substr('onCommand:'.length), () => {\n\t\t\t\t\t\t\t\tcallCounter += 1;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdisposable.add(reg);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t}, new NullLogService());\n\n\t\treturn service.executeCommand('farboo').then(() => {\n\t\t\tassert.strictEqual(callCounter, 1);\n\t\t\tassert.deepStrictEqual(events.sort(), ['*', 'onCommand:farboo'].sort());\n\t\t}).finally(() => {\n\t\t\tdisposable.dispose();\n\t\t});\n\t});\n\n\ttest('issue #71471: wait for onCommand activation even if a command is registered', () => {\n\t\tlet expectedOrder: string[] = ['registering command', 'resolving activation event', 'executing command'];\n\t\tlet actualOrder: string[] = [];\n\t\tconst disposables = new DisposableStore();\n\t\tlet service = new CommandService(new InstantiationService(), new class extends NullExtensionService {\n\n\t\t\toverride activateByEvent(event: string): Promise<void> {\n\t\t\t\tif (event === '*') {\n\t\t\t\t\treturn new Promise(() => { }); //forever promise...\n\t\t\t\t}\n\t\t\t\tif (event.indexOf('onCommand:') === 0) {\n\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t// Register the command after some time\n\t\t\t\t\t\t\tactualOrder.push('registering command');\n\t\t\t\t\t\t\tlet reg = CommandsRegistry.registerCommand(event.substr('onCommand:'.length), () => {\n\t\t\t\t\t\t\t\tactualOrder.push('executing command');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdisposables.add(reg);\n\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t// Resolve the activation event after some more time\n\t\t\t\t\t\t\t\tactualOrder.push('resolving activation event');\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t}, 10);\n\t\t\t\t\t\t}, 10);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t}, new NullLogService());\n\n\t\treturn service.executeCommand('farboo2').then(() => {\n\t\t\tassert.deepStrictEqual(actualOrder, expectedOrder);\n\t\t}).finally(() => {\n\t\t\tdisposables.dispose();\n\t\t});\n\t});\n});\n"]}