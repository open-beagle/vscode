{"version":3,"file":"tunnelServiceImpl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/remote/electron-browser/tunnelServiceImpl.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAahG,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,iCAAiB;QACnD,YACc,UAAuB,EACtB,WAAyB,EACtB,cAA+B,EAC3B,mBAAwC,EACvB,kBAAgD;YAEtF,KAAK,CAAC,qCAAiB,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;YAF5B,uBAAkB,GAAlB,kBAAkB,CAA8B;QAGvF,CAAC;QAEQ,SAAS,CAAC,GAAQ;YAC1B,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;QAC1E,CAAC;KACD,CAAA;IAdY,aAAa;QAEvB,WAAA,iBAAW,CAAA;QACX,WAAA,mBAAY,CAAA;QACZ,WAAA,gCAAe,CAAA;QACf,WAAA,wCAAmB,CAAA;QACnB,WAAA,iDAA4B,CAAA;OANlB,aAAa,CAczB;IAdY,sCAAa;IAgB1B,CAAA,GAAA,8BAAiB,CAAA,CAAC,uBAAc,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { BaseTunnelService } from 'vs/platform/remote/node/tunnelService';\nimport { nodeSocketFactory } from 'vs/platform/remote/node/nodeSocketFactory';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ITunnelService } from 'vs/platform/remote/common/tunnel';\n\nexport class TunnelService extends BaseTunnelService {\n\tpublic constructor(\n\t\t@ILogService logService: ILogService,\n\t\t@ISignService signService: ISignService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAgentService _remoteAgentService: IRemoteAgentService,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper(nodeSocketFactory, logService, signService, productService);\n\t}\n\n\toverride canTunnel(uri: URI): boolean {\n\t\treturn super.canTunnel(uri) && !!this.environmentService.remoteAuthority;\n\t}\n}\n\nregisterSingleton(ITunnelService, TunnelService);\n"]}