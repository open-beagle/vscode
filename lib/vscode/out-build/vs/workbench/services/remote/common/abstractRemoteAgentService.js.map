{"version":3,"file":"abstractRemoteAgentService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/remote/common/abstractRemoteAgentService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel, IServerChannel, getDelayedChannel, IPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/common/ipc.net';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { connectRemoteAgentManagement, IConnectionOptions, ISocketFactory, PersistentConnectionEvent } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IRemoteAgentConnection, IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { RemoteExtensionEnvironmentChannelClient } from 'vs/workbench/services/remote/common/remoteAgentEnvironmentChannel';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { URI } from 'vs/base/common/uri';\n\nexport abstract class AbstractRemoteAgentService extends Disposable implements IRemoteAgentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic readonly socketFactory: ISocketFactory;\n\tprivate readonly _connection: IRemoteAgentConnection | null;\n\tprivate _environment: Promise<IRemoteAgentEnvironment | null> | null;\n\n\tconstructor(\n\t\tsocketFactory: ISocketFactory,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ISignService signService: ISignService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.socketFactory = socketFactory;\n\t\tif (this._environmentService.remoteAuthority) {\n\t\t\tthis._connection = this._register(new RemoteAgentConnection(this._environmentService.remoteAuthority, productService.commit, this.socketFactory, this._remoteAuthorityResolverService, signService, logService));\n\t\t} else {\n\t\t\tthis._connection = null;\n\t\t}\n\t\tthis._environment = null;\n\t}\n\n\tgetConnection(): IRemoteAgentConnection | null {\n\t\treturn this._connection;\n\t}\n\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\treturn this.getRawEnvironment().then(undefined, () => null);\n\t}\n\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\tif (!this._environment) {\n\t\t\tthis._environment = this._withChannel(\n\t\t\t\tasync (channel, connection) => {\n\t\t\t\t\tconst env = await RemoteExtensionEnvironmentChannelClient.getEnvironmentData(channel, connection.remoteAuthority);\n\t\t\t\t\tthis._remoteAuthorityResolverService._setAuthorityConnectionToken(connection.remoteAuthority, env.connectionToken);\n\t\t\t\t\treturn env;\n\t\t\t\t},\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\t\treturn this._environment;\n\t}\n\n\twhenExtensionsReady(): Promise<void> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.whenExtensionsReady(channel),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tscanExtensions(skipExtensions: ExtensionIdentifier[] = []): Promise<IExtensionDescription[]> {\n\t\treturn this._withChannel(\n\t\t\t(channel, connection) => RemoteExtensionEnvironmentChannelClient.scanExtensions(channel, connection.remoteAuthority, this._environmentService.extensionDevelopmentLocationURI, skipExtensions),\n\t\t\t[]\n\t\t).then(undefined, () => []);\n\t}\n\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null> {\n\t\treturn this._withChannel(\n\t\t\t(channel, connection) => RemoteExtensionEnvironmentChannelClient.scanSingleExtension(channel, connection.remoteAuthority, isBuiltin, extensionLocation),\n\t\t\tnull\n\t\t).then(undefined, () => null);\n\t}\n\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.getDiagnosticInfo(channel, options),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tdisableTelemetry(): Promise<void> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.disableTelemetry(channel),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tlogTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.logTelemetry(channel, eventName, data),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tflushTelemetry(): Promise<void> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.flushTelemetry(channel),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tprivate _withChannel<R>(callback: (channel: IChannel, connection: IRemoteAgentConnection) => Promise<R>, fallback: R): Promise<R> {\n\t\tconst connection = this.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Promise.resolve(fallback);\n\t\t}\n\t\treturn connection.withChannel('remoteextensionsenvironment', (channel) => callback(channel, connection));\n\t}\n}\n\nexport class RemoteAgentConnection extends Disposable implements IRemoteAgentConnection {\n\n\tprivate readonly _onReconnecting = this._register(new Emitter<void>());\n\tpublic readonly onReconnecting = this._onReconnecting.event;\n\n\tprivate readonly _onDidStateChange = this._register(new Emitter<PersistentConnectionEvent>());\n\tpublic readonly onDidStateChange = this._onDidStateChange.event;\n\n\treadonly remoteAuthority: string;\n\tprivate _connection: Promise<Client<RemoteAgentConnectionContext>> | null;\n\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\tprivate readonly _commit: string | undefined,\n\t\tprivate readonly _socketFactory: ISocketFactory,\n\t\tprivate readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\tprivate readonly _signService: ISignService,\n\t\tprivate readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.remoteAuthority = remoteAuthority;\n\t\tthis._connection = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn <T>getDelayedChannel(this._getOrCreateConnection().then(c => c.getChannel(channelName)));\n\t}\n\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R> {\n\t\tconst channel = this.getChannel<T>(channelName);\n\t\tconst result = callback(channel);\n\t\treturn result;\n\t}\n\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void {\n\t\tthis._getOrCreateConnection().then(client => client.registerChannel(channelName, channel));\n\t}\n\n\tprivate _getOrCreateConnection(): Promise<Client<RemoteAgentConnectionContext>> {\n\t\tif (!this._connection) {\n\t\t\tthis._connection = this._createConnection();\n\t\t}\n\t\treturn this._connection;\n\t}\n\n\tprivate async _createConnection(): Promise<Client<RemoteAgentConnectionContext>> {\n\t\tlet firstCall = true;\n\t\tconst options: IConnectionOptions = {\n\t\t\tcommit: this._commit,\n\t\t\tsocketFactory: this._socketFactory,\n\t\t\taddressProvider: {\n\t\t\t\tgetAddress: async () => {\n\t\t\t\t\tif (firstCall) {\n\t\t\t\t\t\tfirstCall = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._onReconnecting.fire(undefined);\n\t\t\t\t\t}\n\t\t\t\t\tconst { authority } = await this._remoteAuthorityResolverService.resolveAuthority(this.remoteAuthority);\n\t\t\t\t\treturn { host: authority.host, port: authority.port, connectionToken: authority.connectionToken };\n\t\t\t\t}\n\t\t\t},\n\t\t\tsignService: this._signService,\n\t\t\tlogService: this._logService,\n\t\t\tipcLogger: false ? new IPCLogger(`Local \\u2192 Remote`, `Remote \\u2192 Local`) : null\n\t\t};\n\t\tconst connection = this._register(await connectRemoteAgentManagement(options, this.remoteAuthority, `renderer`));\n\t\tconnection.protocol.onDidDispose(() => {\n\t\t\tconnection.dispose();\n\t\t});\n\t\tthis._register(connection.onDidStateChange(e => this._onDidStateChange.fire(e)));\n\t\treturn connection.client;\n\t}\n}\n"]}