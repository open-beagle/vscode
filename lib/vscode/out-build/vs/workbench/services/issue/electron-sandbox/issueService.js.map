{"version":3,"file":"issueService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/issue/electron-sandbox/issueService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IssueReporterStyles, IssueReporterData, ProcessExplorerData, IssueReporterExtensionData } from 'vs/platform/issue/common/issue';\nimport { IIssueService } from 'vs/platform/issue/electron-sandbox/issue';\nimport { IColorTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { textLinkForeground, inputBackground, inputBorder, inputForeground, buttonBackground, buttonHoverBackground, buttonForeground, inputValidationErrorBorder, foreground, inputActiveOptionBorder, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, editorBackground, editorForeground, listHoverBackground, listHoverForeground, textLinkActiveForeground, inputValidationErrorBackground, inputValidationErrorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { getZoomLevel } from 'vs/base/browser/browser';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { platform } from 'vs/base/common/process';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITASExperimentService } from 'vs/workbench/services/experiment/common/experimentService';\nimport { IAuthenticationService } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { registerMainProcessRemoteService } from 'vs/platform/ipc/electron-sandbox/services';\n\nexport class WorkbenchIssueService implements IWorkbenchIssueService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IIssueService private readonly issueService: IIssueService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ITASExperimentService private readonly experimentService: ITASExperimentService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService\n\t) { }\n\n\tasync openReporter(dataOverrides: Partial<IssueReporterData> = {}): Promise<void> {\n\t\tconst extensionData: IssueReporterExtensionData[] = [];\n\t\ttry {\n\t\t\tconst extensions = await this.extensionManagementService.getInstalled();\n\t\t\tconst enabledExtensions = extensions.filter(extension => this.extensionEnablementService.isEnabled(extension) || (dataOverrides.extensionId && extension.identifier.id === dataOverrides.extensionId));\n\t\t\textensionData.push(...enabledExtensions.map((extension): IssueReporterExtensionData => {\n\t\t\t\tconst { manifest } = extension;\n\t\t\t\tconst manifestKeys = manifest.contributes ? Object.keys(manifest.contributes) : [];\n\t\t\t\tconst isTheme = !manifest.activationEvents && manifestKeys.length === 1 && manifestKeys[0] === 'themes';\n\t\t\t\tconst isBuiltin = extension.type === ExtensionType.System;\n\t\t\t\treturn {\n\t\t\t\t\tname: manifest.name,\n\t\t\t\t\tpublisher: manifest.publisher,\n\t\t\t\t\tversion: manifest.version,\n\t\t\t\t\trepositoryUrl: manifest.repository && manifest.repository.url,\n\t\t\t\t\tbugsUrl: manifest.bugs && manifest.bugs.url,\n\t\t\t\t\tdisplayName: manifest.displayName,\n\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\tisTheme,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t};\n\t\t\t}));\n\t\t} catch (e) {\n\t\t\textensionData.push({\n\t\t\t\tname: 'Workbench Issue Service',\n\t\t\t\tpublisher: 'Unknown',\n\t\t\t\tversion: '0.0.0',\n\t\t\t\trepositoryUrl: undefined,\n\t\t\t\tbugsUrl: undefined,\n\t\t\t\tdisplayName: `Extensions not loaded: ${e}`,\n\t\t\t\tid: 'workbench.issue',\n\t\t\t\tisTheme: false,\n\t\t\t\tisBuiltin: true\n\t\t\t});\n\t\t}\n\t\tconst experiments = await this.experimentService.getCurrentExperiments();\n\t\tconst githubSessions = await this.authenticationService.getSessions('github');\n\t\tconst potentialSessions = githubSessions.filter(session => session.scopes.includes('repo'));\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst issueReporterData: IssueReporterData = Object.assign({\n\t\t\tstyles: getIssueReporterStyles(theme),\n\t\t\tzoomLevel: getZoomLevel(),\n\t\t\tenabledExtensions: extensionData,\n\t\t\texperiments: experiments?.join('\\n'),\n\t\t\tgithubAccessToken: potentialSessions[0]?.accessToken\n\t\t}, dataOverrides);\n\t\treturn this.issueService.openReporter(issueReporterData);\n\t}\n\n\topenProcessExplorer(): Promise<void> {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst data: ProcessExplorerData = {\n\t\t\tpid: this.environmentService.configuration.mainPid,\n\t\t\tzoomLevel: getZoomLevel(),\n\t\t\tstyles: {\n\t\t\t\tbackgroundColor: getColor(theme, editorBackground),\n\t\t\t\tcolor: getColor(theme, editorForeground),\n\t\t\t\thoverBackground: getColor(theme, listHoverBackground),\n\t\t\t\thoverForeground: getColor(theme, listHoverForeground)\n\t\t\t},\n\t\t\tplatform: platform,\n\t\t\tapplicationName: this.productService.applicationName\n\t\t};\n\t\treturn this.issueService.openProcessExplorer(data);\n\t}\n}\n\nexport function getIssueReporterStyles(theme: IColorTheme): IssueReporterStyles {\n\treturn {\n\t\tbackgroundColor: getColor(theme, SIDE_BAR_BACKGROUND),\n\t\tcolor: getColor(theme, foreground),\n\t\ttextLinkColor: getColor(theme, textLinkForeground),\n\t\ttextLinkActiveForeground: getColor(theme, textLinkActiveForeground),\n\t\tinputBackground: getColor(theme, inputBackground),\n\t\tinputForeground: getColor(theme, inputForeground),\n\t\tinputBorder: getColor(theme, inputBorder),\n\t\tinputActiveBorder: getColor(theme, inputActiveOptionBorder),\n\t\tinputErrorBorder: getColor(theme, inputValidationErrorBorder),\n\t\tinputErrorBackground: getColor(theme, inputValidationErrorBackground),\n\t\tinputErrorForeground: getColor(theme, inputValidationErrorForeground),\n\t\tbuttonBackground: getColor(theme, buttonBackground),\n\t\tbuttonForeground: getColor(theme, buttonForeground),\n\t\tbuttonHoverBackground: getColor(theme, buttonHoverBackground),\n\t\tsliderActiveColor: getColor(theme, scrollbarSliderActiveBackground),\n\t\tsliderBackgroundColor: getColor(theme, scrollbarSliderBackground),\n\t\tsliderHoverColor: getColor(theme, scrollbarSliderHoverBackground),\n\t};\n}\n\nfunction getColor(theme: IColorTheme, key: string): string | undefined {\n\tconst color = theme.getColor(key);\n\treturn color ? color.toString() : undefined;\n}\n\nregisterMainProcessRemoteService(IIssueService, 'issue', { supportsDelayedInstantiation: true });\n"]}