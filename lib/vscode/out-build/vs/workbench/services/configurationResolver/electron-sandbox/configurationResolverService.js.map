{"version":3,"file":"configurationResolverService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/configurationResolver/electron-sandbox/configurationResolverService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAchG,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,+DAAgC;QAEjF,YACiB,aAA6B,EACT,kBAAsD,EACnE,oBAA2C,EACjD,cAA+B,EACtB,uBAAiD,EACvD,iBAAqC,EAC1C,YAA2B,EAChB,uBAAiD;YAE3E,KAAK,CAAC;gBACL,UAAU,EAAE,GAAuB,EAAE;oBACpC,OAAO,kBAAkB,CAAC,OAAO,CAAC;gBACnC,CAAC;gBACD,WAAW,EAAE,GAAuB,EAAE;oBACrC,OAAO,kBAAkB,CAAC,QAAQ,CAAC;gBACpC,CAAC;aACD,EAAE,uBAAuB,CAAC,WAAW,EAAE,EAAE,aAAa,EAAE,oBAAoB,EAAE,cAAc,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;QAC1J,CAAC;KACD,CAAA;IArBY,4BAA4B;QAGtC,WAAA,8BAAc,CAAA;QACd,WAAA,uDAAkC,CAAA;QAClC,WAAA,qCAAqB,CAAA;QACrB,WAAA,0BAAe,CAAA;QACf,WAAA,oCAAwB,CAAA;QACxB,WAAA,+BAAkB,CAAA;QAClB,WAAA,qBAAa,CAAA;QACb,WAAA,kDAAwB,CAAA;OAVd,4BAA4B,CAqBxC;IArBY,oEAA4B;IAuBzC,CAAA,GAAA,8BAAiB,CAAA,CAAC,qDAA6B,EAAE,4BAA4B,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { BaseConfigurationResolverService } from 'vs/workbench/services/configurationResolver/browser/configurationResolverService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IShellEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/shellEnvironmentService';\n\nexport class ConfigurationResolverService extends BaseConfigurationResolverService {\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IShellEnvironmentService shellEnvironmentService: IShellEnvironmentService\n\t) {\n\t\tsuper({\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn environmentService.appRoot;\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn environmentService.execPath;\n\t\t\t}\n\t\t}, shellEnvironmentService.getShellEnv(), editorService, configurationService, commandService, workspaceContextService, quickInputService, labelService);\n\t}\n}\n\nregisterSingleton(IConfigurationResolverService, ConfigurationResolverService, true);\n"]}