{"version":3,"sources":["vs/workbench/services/themes/browser/fileIconThemeData.ts"],"names":[],"mappings":"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","file":"fileIconThemeData.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport * as Paths from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport * as Json from 'vs/base/common/json';\nimport { ExtensionData, IThemeExtensionPoint, IWorkbenchFileIconTheme } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport { asCSSUrl } from 'vs/base/browser/dom';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport class FileIconThemeData implements IWorkbenchFileIconTheme {\n\n\tstatic readonly STORAGE_KEY = 'iconThemeData';\n\n\tid: string;\n\tlabel: string;\n\tsettingsId: string | null;\n\tdescription?: string;\n\thasFileIcons: boolean;\n\thasFolderIcons: boolean;\n\thidesExplorerArrows: boolean;\n\tisLoaded: boolean;\n\tlocation?: URI;\n\textensionData?: ExtensionData;\n\twatch?: boolean;\n\n\tstyleSheetContent?: string;\n\n\tprivate constructor(id: string, label: string, settingsId: string | null) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.settingsId = settingsId;\n\t\tthis.isLoaded = false;\n\t\tthis.hasFileIcons = false;\n\t\tthis.hasFolderIcons = false;\n\t\tthis.hidesExplorerArrows = false;\n\t}\n\n\tpublic ensureLoaded(fileService: IFileService): Promise<string | undefined> {\n\t\treturn !this.isLoaded ? this.load(fileService) : Promise.resolve(this.styleSheetContent);\n\t}\n\n\tpublic reload(fileService: IFileService): Promise<string | undefined> {\n\t\treturn this.load(fileService);\n\t}\n\n\tprivate load(fileService: IFileService): Promise<string | undefined> {\n\t\tif (!this.location) {\n\t\t\treturn Promise.resolve(this.styleSheetContent);\n\t\t}\n\t\treturn _loadIconThemeDocument(fileService, this.location).then(iconThemeDocument => {\n\t\t\tconst result = _processIconThemeDocument(this.id, this.location!, iconThemeDocument);\n\t\t\tthis.styleSheetContent = result.content;\n\t\t\tthis.hasFileIcons = result.hasFileIcons;\n\t\t\tthis.hasFolderIcons = result.hasFolderIcons;\n\t\t\tthis.hidesExplorerArrows = result.hidesExplorerArrows;\n\t\t\tthis.isLoaded = true;\n\t\t\treturn this.styleSheetContent;\n\t\t});\n\t}\n\n\tstatic fromExtensionTheme(iconTheme: IThemeExtensionPoint, iconThemeLocation: URI, extensionData: ExtensionData): FileIconThemeData {\n\t\tconst id = extensionData.extensionId + '-' + iconTheme.id;\n\t\tconst label = iconTheme.label || Paths.basename(iconTheme.path);\n\t\tconst settingsId = iconTheme.id;\n\n\t\tconst themeData = new FileIconThemeData(id, label, settingsId);\n\n\t\tthemeData.description = iconTheme.description;\n\t\tthemeData.location = iconThemeLocation;\n\t\tthemeData.extensionData = extensionData;\n\t\tthemeData.watch = iconTheme._watch;\n\t\tthemeData.isLoaded = false;\n\t\treturn themeData;\n\t}\n\n\tprivate static _noIconTheme: FileIconThemeData | null = null;\n\n\tstatic get noIconTheme(): FileIconThemeData {\n\t\tlet themeData = FileIconThemeData._noIconTheme;\n\t\tif (!themeData) {\n\t\t\tthemeData = FileIconThemeData._noIconTheme = new FileIconThemeData('', '', null);\n\t\t\tthemeData.hasFileIcons = false;\n\t\t\tthemeData.hasFolderIcons = false;\n\t\t\tthemeData.hidesExplorerArrows = false;\n\t\t\tthemeData.isLoaded = true;\n\t\t\tthemeData.extensionData = undefined;\n\t\t\tthemeData.watch = false;\n\t\t}\n\t\treturn themeData;\n\t}\n\n\tstatic createUnloadedTheme(id: string): FileIconThemeData {\n\t\tconst themeData = new FileIconThemeData(id, '', '__' + id);\n\t\tthemeData.isLoaded = false;\n\t\tthemeData.hasFileIcons = false;\n\t\tthemeData.hasFolderIcons = false;\n\t\tthemeData.hidesExplorerArrows = false;\n\t\tthemeData.extensionData = undefined;\n\t\tthemeData.watch = false;\n\t\treturn themeData;\n\t}\n\n\n\tstatic fromStorageData(storageService: IStorageService): FileIconThemeData | undefined {\n\t\tconst input = storageService.get(FileIconThemeData.STORAGE_KEY, StorageScope.GLOBAL);\n\t\tif (!input) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tlet data = JSON.parse(input);\n\t\t\tconst theme = new FileIconThemeData('', '', null);\n\t\t\tfor (let key in data) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'id':\n\t\t\t\t\tcase 'label':\n\t\t\t\t\tcase 'description':\n\t\t\t\t\tcase 'settingsId':\n\t\t\t\t\tcase 'styleSheetContent':\n\t\t\t\t\tcase 'hasFileIcons':\n\t\t\t\t\tcase 'hidesExplorerArrows':\n\t\t\t\t\tcase 'hasFolderIcons':\n\t\t\t\t\tcase 'watch':\n\t\t\t\t\t\t(theme as any)[key] = data[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'location':\n\t\t\t\t\t\t// ignore, no longer restore\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionData':\n\t\t\t\t\t\ttheme.extensionData = ExtensionData.fromJSONObject(data.extensionData);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn theme;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttoStorage(storageService: IStorageService) {\n\t\tconst data = JSON.stringify({\n\t\t\tid: this.id,\n\t\t\tlabel: this.label,\n\t\t\tdescription: this.description,\n\t\t\tsettingsId: this.settingsId,\n\t\t\tstyleSheetContent: this.styleSheetContent,\n\t\t\thasFileIcons: this.hasFileIcons,\n\t\t\thasFolderIcons: this.hasFolderIcons,\n\t\t\thidesExplorerArrows: this.hidesExplorerArrows,\n\t\t\textensionData: ExtensionData.toJSONObject(this.extensionData),\n\t\t\twatch: this.watch\n\t\t});\n\t\tstorageService.store(FileIconThemeData.STORAGE_KEY, data, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n}\n\ninterface IconDefinition {\n\ticonPath: string;\n\tfontColor: string;\n\tfontCharacter: string;\n\tfontSize: string;\n\tfontId: string;\n}\n\ninterface FontDefinition {\n\tid: string;\n\tweight: string;\n\tstyle: string;\n\tsize: string;\n\tsrc: { path: string; format: string; }[];\n}\n\ninterface IconsAssociation {\n\tfolder?: string;\n\tfile?: string;\n\tfolderExpanded?: string;\n\trootFolder?: string;\n\trootFolderExpanded?: string;\n\tfolderNames?: { [folderName: string]: string; };\n\tfolderNamesExpanded?: { [folderName: string]: string; };\n\tfileExtensions?: { [extension: string]: string; };\n\tfileNames?: { [fileName: string]: string; };\n\tlanguageIds?: { [languageId: string]: string; };\n}\n\ninterface IconThemeDocument extends IconsAssociation {\n\ticonDefinitions: { [key: string]: IconDefinition };\n\tfonts: FontDefinition[];\n\tlight?: IconsAssociation;\n\thighContrast?: IconsAssociation;\n\thidesExplorerArrows?: boolean;\n}\n\nfunction _loadIconThemeDocument(fileService: IFileService, location: URI): Promise<IconThemeDocument> {\n\treturn fileService.readFile(location).then((content) => {\n\t\tlet errors: Json.ParseError[] = [];\n\t\tlet contentValue = Json.parse(content.value.toString(), errors);\n\t\tif (errors.length > 0) {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.cannotparseicontheme', \"Problems parsing file icons file: {0}\", errors.map(e => getParseErrorMessage(e.error)).join(', '))));\n\t\t} else if (Json.getNodeType(contentValue) !== 'object') {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.invalidformat', \"Invalid format for file icons theme file: Object expected.\")));\n\t\t}\n\t\treturn Promise.resolve(contentValue);\n\t});\n}\n\nfunction _processIconThemeDocument(id: string, iconThemeDocumentLocation: URI, iconThemeDocument: IconThemeDocument): { content: string; hasFileIcons: boolean; hasFolderIcons: boolean; hidesExplorerArrows: boolean; } {\n\n\tconst result = { content: '', hasFileIcons: false, hasFolderIcons: false, hidesExplorerArrows: !!iconThemeDocument.hidesExplorerArrows };\n\n\tif (!iconThemeDocument.iconDefinitions) {\n\t\treturn result;\n\t}\n\tlet selectorByDefinitionId: { [def: string]: string[] } = {};\n\n\tconst iconThemeDocumentLocationDirname = resources.dirname(iconThemeDocumentLocation);\n\tfunction resolvePath(path: string) {\n\t\treturn resources.joinPath(iconThemeDocumentLocationDirname, path);\n\t}\n\n\tfunction collectSelectors(associations: IconsAssociation | undefined, baseThemeClassName?: string) {\n\t\tfunction addSelector(selector: string, defId: string) {\n\t\t\tif (defId) {\n\t\t\t\tlet list = selectorByDefinitionId[defId];\n\t\t\t\tif (!list) {\n\t\t\t\t\tlist = selectorByDefinitionId[defId] = [];\n\t\t\t\t}\n\t\t\t\tlist.push(selector);\n\t\t\t}\n\t\t}\n\t\tif (associations) {\n\t\t\tlet qualifier = '.show-file-icons';\n\t\t\tif (baseThemeClassName) {\n\t\t\t\tqualifier = baseThemeClassName + ' ' + qualifier;\n\t\t\t}\n\n\t\t\tconst expanded = '.monaco-tl-twistie.collapsible:not(.collapsed) + .monaco-tl-contents';\n\n\t\t\tif (associations.folder) {\n\t\t\t\taddSelector(`${qualifier} .folder-icon::before`, associations.folder);\n\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t}\n\n\t\t\tif (associations.folderExpanded) {\n\t\t\t\taddSelector(`${qualifier} ${expanded} .folder-icon::before`, associations.folderExpanded);\n\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t}\n\n\t\t\tlet rootFolder = associations.rootFolder || associations.folder;\n\t\t\tlet rootFolderExpanded = associations.rootFolderExpanded || associations.folderExpanded;\n\n\t\t\tif (rootFolder) {\n\t\t\t\taddSelector(`${qualifier} .rootfolder-icon::before`, rootFolder);\n\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t}\n\n\t\t\tif (rootFolderExpanded) {\n\t\t\t\taddSelector(`${qualifier} ${expanded} .rootfolder-icon::before`, rootFolderExpanded);\n\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t}\n\n\t\t\tif (associations.file) {\n\t\t\t\taddSelector(`${qualifier} .file-icon::before`, associations.file);\n\t\t\t\tresult.hasFileIcons = true;\n\t\t\t}\n\n\t\t\tlet folderNames = associations.folderNames;\n\t\t\tif (folderNames) {\n\t\t\t\tfor (let folderName in folderNames) {\n\t\t\t\t\taddSelector(`${qualifier} .${escapeCSS(folderName.toLowerCase())}-name-folder-icon.folder-icon::before`, folderNames[folderName]);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet folderNamesExpanded = associations.folderNamesExpanded;\n\t\t\tif (folderNamesExpanded) {\n\t\t\t\tfor (let folderName in folderNamesExpanded) {\n\t\t\t\t\taddSelector(`${qualifier} ${expanded} .${escapeCSS(folderName.toLowerCase())}-name-folder-icon.folder-icon::before`, folderNamesExpanded[folderName]);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet languageIds = associations.languageIds;\n\t\t\tif (languageIds) {\n\t\t\t\tif (!languageIds.jsonc && languageIds.json) {\n\t\t\t\t\tlanguageIds.jsonc = languageIds.json;\n\t\t\t\t}\n\t\t\t\tfor (let languageId in languageIds) {\n\t\t\t\t\taddSelector(`${qualifier} .${escapeCSS(languageId)}-lang-file-icon.file-icon::before`, languageIds[languageId]);\n\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet fileExtensions = associations.fileExtensions;\n\t\t\tif (fileExtensions) {\n\t\t\t\tfor (let fileExtension in fileExtensions) {\n\t\t\t\t\tlet selectors: string[] = [];\n\t\t\t\t\tlet segments = fileExtension.toLowerCase().split('.');\n\t\t\t\t\tif (segments.length) {\n\t\t\t\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\t\t\t\tselectors.push(`.${escapeCSS(segments.slice(i).join('.'))}-ext-file-icon`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectors.push('.ext-file-icon'); // extra segment to increase file-ext score\n\t\t\t\t\t}\n\t\t\t\t\taddSelector(`${qualifier} ${selectors.join('')}.file-icon::before`, fileExtensions[fileExtension]);\n\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet fileNames = associations.fileNames;\n\t\t\tif (fileNames) {\n\t\t\t\tfor (let fileName in fileNames) {\n\t\t\t\t\tlet selectors: string[] = [];\n\t\t\t\t\tfileName = fileName.toLowerCase();\n\t\t\t\t\tselectors.push(`.${escapeCSS(fileName)}-name-file-icon`);\n\t\t\t\t\tlet segments = fileName.split('.');\n\t\t\t\t\tif (segments.length) {\n\t\t\t\t\t\tfor (let i = 1; i < segments.length; i++) {\n\t\t\t\t\t\t\tselectors.push(`.${escapeCSS(segments.slice(i).join('.'))}-ext-file-icon`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectors.push('.ext-file-icon'); // extra segment to increase file-ext score\n\t\t\t\t\t}\n\t\t\t\t\taddSelector(`${qualifier} ${selectors.join('')}.file-icon::before`, fileNames[fileName]);\n\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcollectSelectors(iconThemeDocument);\n\tcollectSelectors(iconThemeDocument.light, '.vs');\n\tcollectSelectors(iconThemeDocument.highContrast, '.hc-black');\n\n\tif (!result.hasFileIcons && !result.hasFolderIcons) {\n\t\treturn result;\n\t}\n\n\tlet cssRules: string[] = [];\n\n\tlet fonts = iconThemeDocument.fonts;\n\tif (Array.isArray(fonts)) {\n\t\tfonts.forEach(font => {\n\t\t\tlet src = font.src.map(l => `${asCSSUrl(resolvePath(l.path))} format('${l.format}')`).join(', ');\n\t\t\tcssRules.push(`@font-face { src: ${src}; font-family: '${font.id}'; font-weight: ${font.weight}; font-style: ${font.style}; }`);\n\t\t});\n\t\tcssRules.push(`.show-file-icons .file-icon::before, .show-file-icons .folder-icon::before, .show-file-icons .rootfolder-icon::before { font-family: '${fonts[0].id}'; font-size: ${fonts[0].size || '150%'}}`);\n\t}\n\n\tfor (let defId in selectorByDefinitionId) {\n\t\tlet selectors = selectorByDefinitionId[defId];\n\t\tlet definition = iconThemeDocument.iconDefinitions[defId];\n\t\tif (definition) {\n\t\t\tif (definition.iconPath) {\n\t\t\t\tcssRules.push(`${selectors.join(', ')} { content: ' '; background-image: ${asCSSUrl(resolvePath(definition.iconPath))}; }`);\n\t\t\t}\n\t\t\tif (definition.fontCharacter || definition.fontColor) {\n\t\t\t\tlet body = '';\n\t\t\t\tif (definition.fontColor) {\n\t\t\t\t\tbody += ` color: ${definition.fontColor};`;\n\t\t\t\t}\n\t\t\t\tif (definition.fontCharacter) {\n\t\t\t\t\tbody += ` content: '${definition.fontCharacter}';`;\n\t\t\t\t}\n\t\t\t\tif (definition.fontSize) {\n\t\t\t\t\tbody += ` font-size: ${definition.fontSize};`;\n\t\t\t\t}\n\t\t\t\tif (definition.fontId) {\n\t\t\t\t\tbody += ` font-family: ${definition.fontId};`;\n\t\t\t\t}\n\t\t\t\tcssRules.push(`${selectors.join(', ')} { ${body} }`);\n\t\t\t}\n\t\t}\n\t}\n\tresult.content = cssRules.join('\\n');\n\treturn result;\n}\nfunction escapeCSS(str: string) {\n\tstr = str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\n\treturn window.CSS.escape(str);\n}\n"]}