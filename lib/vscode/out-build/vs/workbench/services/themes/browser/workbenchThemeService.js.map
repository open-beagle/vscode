{"version":3,"sources":["vs/workbench/services/themes/browser/workbenchThemeService.ts"],"names":[],"mappings":"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","file":"workbenchThemeService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchThemeService, IWorkbenchColorTheme, IWorkbenchFileIconTheme, ExtensionData, VS_LIGHT_THEME, VS_DARK_THEME, VS_HC_THEME, ThemeSettings, IWorkbenchProductIconTheme, ThemeSettingTarget } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as errors from 'vs/base/common/errors';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { ColorThemeData } from 'vs/workbench/services/themes/common/colorThemeData';\nimport { IColorTheme, Extensions as ThemingExtensions, IThemingRegistry } from 'vs/platform/theme/common/themeService';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { registerFileIconThemeSchemas } from 'vs/workbench/services/themes/common/fileIconThemeSchema';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { FileIconThemeData } from 'vs/workbench/services/themes/browser/fileIconThemeData';\nimport { createStyleSheet } from 'vs/base/browser/dom';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IFileService, FileChangeType } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { registerColorThemeSchemas } from 'vs/workbench/services/themes/common/colorThemeSchema';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IExtensionResourceLoaderService } from 'vs/workbench/services/extensionResourceLoader/common/extensionResourceLoader';\nimport { ThemeRegistry, registerColorThemeExtensionPoint, registerFileIconThemeExtensionPoint, registerProductIconThemeExtensionPoint } from 'vs/workbench/services/themes/common/themeExtensionPoints';\nimport { updateColorThemeConfigurationSchemas, updateFileIconThemeConfigurationSchemas, ThemeConfiguration, updateProductIconThemeConfigurationSchemas } from 'vs/workbench/services/themes/common/themeConfiguration';\nimport { ProductIconThemeData, DEFAULT_PRODUCT_ICON_THEME_ID } from 'vs/workbench/services/themes/browser/productIconThemeData';\nimport { registerProductIconThemeSchemas } from 'vs/workbench/services/themes/common/productIconThemeSchema';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { IHostColorSchemeService } from 'vs/workbench/services/themes/common/hostColorSchemeService';\nimport { RunOnceScheduler, Sequencer } from 'vs/base/common/async';\nimport { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit';\nimport { getIconsStyleSheet } from 'vs/platform/theme/browser/iconsStyleSheet';\n\n// implementation\n\nconst DEFAULT_COLOR_THEME_ID = 'vs-dark vscode-theme-defaults-themes-dark_plus-json';\nconst DEFAULT_LIGHT_COLOR_THEME_ID = 'vs vscode-theme-defaults-themes-light_plus-json';\n\nconst PERSISTED_OS_COLOR_SCHEME = 'osColorScheme';\n\nconst defaultThemeExtensionId = 'vscode-theme-defaults';\nconst oldDefaultThemeExtensionId = 'vscode-theme-colorful-defaults';\n\nconst DEFAULT_FILE_ICON_THEME_ID = 'vscode.vscode-theme-seti-vs-seti';\nconst fileIconsEnabledClass = 'file-icons-enabled';\n\nconst colorThemeRulesClassName = 'contributedColorTheme';\nconst fileIconThemeRulesClassName = 'contributedFileIconTheme';\nconst productIconThemeRulesClassName = 'contributedProductIconTheme';\n\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nfunction validateThemeId(theme: string): string {\n\t// migrations\n\tswitch (theme) {\n\t\tcase VS_LIGHT_THEME: return `vs ${defaultThemeExtensionId}-themes-light_vs-json`;\n\t\tcase VS_DARK_THEME: return `vs-dark ${defaultThemeExtensionId}-themes-dark_vs-json`;\n\t\tcase VS_HC_THEME: return `hc-black ${defaultThemeExtensionId}-themes-hc_black-json`;\n\t\tcase `vs ${oldDefaultThemeExtensionId}-themes-light_plus-tmTheme`: return `vs ${defaultThemeExtensionId}-themes-light_plus-json`;\n\t\tcase `vs-dark ${oldDefaultThemeExtensionId}-themes-dark_plus-tmTheme`: return `vs-dark ${defaultThemeExtensionId}-themes-dark_plus-json`;\n\t}\n\treturn theme;\n}\n\nconst colorThemesExtPoint = registerColorThemeExtensionPoint();\nconst fileIconThemesExtPoint = registerFileIconThemeExtensionPoint();\nconst productIconThemesExtPoint = registerProductIconThemeExtensionPoint();\n\nexport class WorkbenchThemeService implements IWorkbenchThemeService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly container: HTMLElement;\n\tprivate settings: ThemeConfiguration;\n\n\tprivate readonly colorThemeRegistry: ThemeRegistry<ColorThemeData>;\n\tprivate currentColorTheme: ColorThemeData;\n\tprivate readonly onColorThemeChange: Emitter<IWorkbenchColorTheme>;\n\tprivate readonly colorThemeWatcher: ThemeFileWatcher;\n\tprivate colorThemingParticipantChangeListener: IDisposable | undefined;\n\tprivate readonly colorThemeSequencer: Sequencer;\n\n\tprivate readonly fileIconThemeRegistry: ThemeRegistry<FileIconThemeData>;\n\tprivate currentFileIconTheme: FileIconThemeData;\n\tprivate readonly onFileIconThemeChange: Emitter<IWorkbenchFileIconTheme>;\n\tprivate readonly fileIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly fileIconThemeSequencer: Sequencer;\n\n\tprivate readonly productIconThemeRegistry: ThemeRegistry<ProductIconThemeData>;\n\tprivate currentProductIconTheme: ProductIconThemeData;\n\tprivate readonly onProductIconThemeChange: Emitter<IWorkbenchProductIconTheme>;\n\tprivate readonly productIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly productIconThemeSequencer: Sequencer;\n\n\tprivate themeSettingIdBeforeSchemeSwitch: string | undefined;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkbenchEnvironmentService readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionResourceLoaderService private readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IWorkbenchLayoutService readonly layoutService: IWorkbenchLayoutService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IHostColorSchemeService private readonly hostColorService: IHostColorSchemeService,\n\t\t@IUserDataInitializationService readonly userDataInitializationService: IUserDataInitializationService\n\t) {\n\t\tthis.container = layoutService.container;\n\t\tthis.settings = new ThemeConfiguration(configurationService);\n\n\t\tthis.colorThemeRegistry = new ThemeRegistry(colorThemesExtPoint, ColorThemeData.fromExtensionTheme);\n\t\tthis.colorThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentColorTheme.bind(this));\n\t\tthis.onColorThemeChange = new Emitter<IWorkbenchColorTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentColorTheme = ColorThemeData.createUnloadedTheme('');\n\t\tthis.colorThemeSequencer = new Sequencer();\n\n\t\tthis.fileIconThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentFileIconTheme.bind(this));\n\t\tthis.fileIconThemeRegistry = new ThemeRegistry(fileIconThemesExtPoint, FileIconThemeData.fromExtensionTheme, true, FileIconThemeData.noIconTheme);\n\t\tthis.onFileIconThemeChange = new Emitter<IWorkbenchFileIconTheme>();\n\t\tthis.currentFileIconTheme = FileIconThemeData.createUnloadedTheme('');\n\t\tthis.fileIconThemeSequencer = new Sequencer();\n\n\t\tthis.productIconThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentProductIconTheme.bind(this));\n\t\tthis.productIconThemeRegistry = new ThemeRegistry(productIconThemesExtPoint, ProductIconThemeData.fromExtensionTheme, true, ProductIconThemeData.defaultTheme);\n\t\tthis.onProductIconThemeChange = new Emitter<IWorkbenchProductIconTheme>();\n\t\tthis.currentProductIconTheme = ProductIconThemeData.createUnloadedTheme('');\n\t\tthis.productIconThemeSequencer = new Sequencer();\n\n\t\t// In order to avoid paint flashing for tokens, because\n\t\t// themes are loaded asynchronously, we need to initialize\n\t\t// a color theme document with good defaults until the theme is loaded\n\t\tlet themeData: ColorThemeData | undefined = ColorThemeData.fromStorageData(this.storageService);\n\t\tif (themeData && this.settings.colorTheme !== themeData.settingsId && this.settings.isDefaultColorTheme()) {\n\t\t\t// the web has different defaults than the desktop, therefore do not restore when the setting is the default theme and the storage doesn't match that.\n\t\t\tthemeData = undefined;\n\t\t}\n\n\t\t// the preferred color scheme (high contrast, light, dark) has changed since the last start\n\t\tconst preferredColorScheme = this.getPreferredColorScheme();\n\n\t\tif (preferredColorScheme && themeData?.type !== preferredColorScheme && this.storageService.get(PERSISTED_OS_COLOR_SCHEME, StorageScope.GLOBAL) !== preferredColorScheme) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(preferredColorScheme);\n\t\t}\n\t\tif (!themeData) {\n\t\t\tconst initialColorTheme = environmentService.options?.initialColorTheme;\n\t\t\tif (initialColorTheme) {\n\t\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(initialColorTheme.themeType, initialColorTheme.colors);\n\t\t\t}\n\t\t}\n\t\tif (!themeData) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(isWeb ? ColorScheme.LIGHT : ColorScheme.DARK);\n\t\t}\n\t\tthemeData.setCustomizations(this.settings);\n\t\tthis.applyTheme(themeData, undefined, true);\n\n\t\tconst fileIconData = FileIconThemeData.fromStorageData(this.storageService);\n\t\tif (fileIconData) {\n\t\t\tthis.applyAndSetFileIconTheme(fileIconData, true);\n\t\t}\n\n\t\tconst productIconData = ProductIconThemeData.fromStorageData(this.storageService);\n\t\tif (productIconData) {\n\t\t\tthis.applyAndSetProductIconTheme(productIconData, true);\n\t\t}\n\n\t\tPromise.all([extensionService.whenInstalledExtensionsRegistered(), userDataInitializationService.whenInitializationFinished()]).then(_ => {\n\t\t\tthis.installConfigurationListener();\n\t\t\tthis.installPreferredSchemeListener();\n\t\t\tthis.installRegistryListeners();\n\t\t\tthis.initialize().catch(errors.onUnexpectedError);\n\t\t});\n\n\t\tconst codiconStyleSheet = createStyleSheet();\n\t\tcodiconStyleSheet.id = 'codiconStyles';\n\n\t\tconst iconsStyleSheet = getIconsStyleSheet();\n\t\tfunction updateAll() {\n\t\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t\t}\n\n\t\tconst delayer = new RunOnceScheduler(updateAll, 0);\n\t\ticonsStyleSheet.onDidChange(() => delayer.schedule());\n\t\tdelayer.schedule();\n\t}\n\n\tprivate initialize(): Promise<[IWorkbenchColorTheme | null, IWorkbenchFileIconTheme | null, IWorkbenchProductIconTheme | null]> {\n\t\tconst extDevLocs = this.environmentService.extensionDevelopmentLocationURI;\n\t\tconst extDevLoc = extDevLocs && extDevLocs.length === 1 ? extDevLocs[0] : undefined; // in dev mode, switch to a theme provided by the extension under dev.\n\n\t\tconst initializeColorTheme = async () => {\n\t\t\tconst devThemes = this.colorThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setColorTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tconst fallbackTheme = this.currentColorTheme.type === ColorScheme.LIGHT ? DEFAULT_LIGHT_COLOR_THEME_ID : DEFAULT_COLOR_THEME_ID;\n\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(this.settings.colorTheme, fallbackTheme);\n\n\t\t\tconst preferredColorScheme = this.getPreferredColorScheme();\n\t\t\tconst prevScheme = this.storageService.get(PERSISTED_OS_COLOR_SCHEME, StorageScope.GLOBAL);\n\t\t\tif (preferredColorScheme !== prevScheme) {\n\t\t\t\tthis.storageService.store(PERSISTED_OS_COLOR_SCHEME, preferredColorScheme, StorageScope.GLOBAL, StorageTarget.USER);\n\t\t\t\tif (preferredColorScheme && theme?.type !== preferredColorScheme) {\n\t\t\t\t\treturn this.applyPreferredColorTheme(preferredColorScheme);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.setColorTheme(theme && theme.id, undefined);\n\t\t};\n\n\t\tconst initializeFileIconTheme = async () => {\n\t\t\tconst devThemes = this.fileIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setFileIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tconst theme = this.fileIconThemeRegistry.findThemeBySettingsId(this.settings.fileIconTheme);\n\t\t\treturn this.setFileIconTheme(theme ? theme.id : DEFAULT_FILE_ICON_THEME_ID, undefined);\n\t\t};\n\n\t\tconst initializeProductIconTheme = async () => {\n\t\t\tconst devThemes = this.productIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setProductIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tconst theme = this.productIconThemeRegistry.findThemeBySettingsId(this.settings.productIconTheme);\n\t\t\treturn this.setProductIconTheme(theme ? theme.id : DEFAULT_PRODUCT_ICON_THEME_ID, undefined);\n\t\t};\n\n\n\t\treturn Promise.all([initializeColorTheme(), initializeFileIconTheme(), initializeProductIconTheme()]);\n\t}\n\n\tprivate installConfigurationListener() {\n\t\tthis.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_THEME)) {\n\t\t\t\tthis.restoreColorTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.DETECT_COLOR_SCHEME) || e.affectsConfiguration(ThemeSettings.DETECT_HC)) {\n\t\t\t\tthis.handlePreferredSchemeUpdated();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_DARK_THEME) && this.getPreferredColorScheme() === ColorScheme.DARK) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.DARK);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_LIGHT_THEME) && this.getPreferredColorScheme() === ColorScheme.LIGHT) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.LIGHT);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_HC_THEME) && this.getPreferredColorScheme() === ColorScheme.HIGH_CONTRAST) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.HIGH_CONTRAST);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.FILE_ICON_THEME)) {\n\t\t\t\tthis.restoreFileIconTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PRODUCT_ICON_THEME)) {\n\t\t\t\tthis.restoreProductIconTheme();\n\t\t\t}\n\t\t\tif (this.currentColorTheme) {\n\t\t\t\tlet hasColorChanges = false;\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomColors(this.settings.colorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomTokenColors(this.settings.tokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS) || e.affectsConfiguration(ThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS_EXPERIMENTAL)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomSemanticTokenColors(this.settings.semanticTokenColorCustomizations, this.settings.experimentalSemanticTokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (hasColorChanges) {\n\t\t\t\t\tthis.updateDynamicCSSRules(this.currentColorTheme);\n\t\t\t\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate installRegistryListeners(): Promise<any> {\n\n\t\tlet prevColorId: string | undefined = undefined;\n\n\t\t// update settings schema setting for theme specific settings\n\t\tthis.colorThemeRegistry.onDidChange(async event => {\n\t\t\tupdateColorThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreColorTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentColorTheme.id === DEFAULT_COLOR_THEME_ID && !types.isUndefined(prevColorId) && await this.colorThemeRegistry.findThemeById(prevColorId)) {\n\t\t\t\t\t// restore theme\n\t\t\t\t\tthis.setColorTheme(prevColorId, 'auto');\n\t\t\t\t\tprevColorId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t\tthis.reloadCurrentColorTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevColorId = this.currentColorTheme.id;\n\t\t\t\tthis.setColorTheme(DEFAULT_COLOR_THEME_ID, 'auto');\n\t\t\t}\n\t\t});\n\n\t\tlet prevFileIconId: string | undefined = undefined;\n\t\tthis.fileIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateFileIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreFileIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentFileIconTheme.id === DEFAULT_FILE_ICON_THEME_ID && !types.isUndefined(prevFileIconId) && this.fileIconThemeRegistry.findThemeById(prevFileIconId)) {\n\t\t\t\t\tthis.setFileIconTheme(prevFileIconId, 'auto');\n\t\t\t\t\tprevFileIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t\tthis.reloadCurrentFileIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevFileIconId = this.currentFileIconTheme.id;\n\t\t\t\tthis.setFileIconTheme(DEFAULT_FILE_ICON_THEME_ID, 'auto');\n\t\t\t}\n\n\t\t});\n\n\t\tlet prevProductIconId: string | undefined = undefined;\n\t\tthis.productIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateProductIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreProductIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentProductIconTheme.id === DEFAULT_PRODUCT_ICON_THEME_ID && !types.isUndefined(prevProductIconId) && this.productIconThemeRegistry.findThemeById(prevProductIconId)) {\n\t\t\t\t\tthis.setProductIconTheme(prevProductIconId, 'auto');\n\t\t\t\t\tprevProductIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t\tthis.reloadCurrentProductIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevProductIconId = this.currentProductIconTheme.id;\n\t\t\t\tthis.setProductIconTheme(DEFAULT_PRODUCT_ICON_THEME_ID, 'auto');\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.all([this.getColorThemes(), this.getFileIconThemes(), this.getProductIconThemes()]).then(([ct, fit, pit]) => {\n\t\t\tupdateColorThemeConfigurationSchemas(ct);\n\t\t\tupdateFileIconThemeConfigurationSchemas(fit);\n\t\t\tupdateProductIconThemeConfigurationSchemas(pit);\n\t\t});\n\t}\n\n\n\t// preferred scheme handling\n\n\tprivate installPreferredSchemeListener() {\n\t\tthis.hostColorService.onDidChangeColorScheme(() => this.handlePreferredSchemeUpdated());\n\t}\n\n\tprivate async handlePreferredSchemeUpdated() {\n\t\tconst scheme = this.getPreferredColorScheme();\n\t\tconst prevScheme = this.storageService.get(PERSISTED_OS_COLOR_SCHEME, StorageScope.GLOBAL);\n\t\tif (scheme !== prevScheme) {\n\t\t\tthis.storageService.store(PERSISTED_OS_COLOR_SCHEME, scheme, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tif (scheme) {\n\t\t\t\tif (!prevScheme) {\n\t\t\t\t\t// remember the theme before scheme switching\n\t\t\t\t\tthis.themeSettingIdBeforeSchemeSwitch = this.settings.colorTheme;\n\t\t\t\t}\n\t\t\t\treturn this.applyPreferredColorTheme(scheme);\n\t\t\t} else if (prevScheme && this.themeSettingIdBeforeSchemeSwitch) {\n\t\t\t\t// reapply the theme before scheme switching\n\t\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(this.themeSettingIdBeforeSchemeSwitch, undefined);\n\t\t\t\tif (theme) {\n\t\t\t\t\tthis.setColorTheme(theme.id, 'auto');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getPreferredColorScheme(): ColorScheme | undefined {\n\t\tif (this.configurationService.getValue<boolean>(ThemeSettings.DETECT_HC) && this.hostColorService.highContrast) {\n\t\t\treturn ColorScheme.HIGH_CONTRAST;\n\t\t}\n\t\tif (this.configurationService.getValue<boolean>(ThemeSettings.DETECT_COLOR_SCHEME)) {\n\t\t\treturn this.hostColorService.dark ? ColorScheme.DARK : ColorScheme.LIGHT;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async applyPreferredColorTheme(type: ColorScheme): Promise<IWorkbenchColorTheme | null> {\n\t\tconst settingId = type === ColorScheme.DARK ? ThemeSettings.PREFERRED_DARK_THEME : type === ColorScheme.LIGHT ? ThemeSettings.PREFERRED_LIGHT_THEME : ThemeSettings.PREFERRED_HC_THEME;\n\t\tconst themeSettingId = this.configurationService.getValue<string>(settingId);\n\t\tif (themeSettingId) {\n\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(themeSettingId, undefined);\n\t\t\tif (theme) {\n\t\t\t\tconst configurationTarget = this.settings.findAutoConfigurationTarget(settingId);\n\t\t\t\treturn this.setColorTheme(theme.id, configurationTarget);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getColorTheme(): IWorkbenchColorTheme {\n\t\treturn this.currentColorTheme;\n\t}\n\n\tpublic async getColorThemes(): Promise<IWorkbenchColorTheme[]> {\n\t\treturn this.colorThemeRegistry.getThemes();\n\t}\n\n\tpublic get onDidColorThemeChange(): Event<IWorkbenchColorTheme> {\n\t\treturn this.onColorThemeChange.event;\n\t}\n\n\tpublic setColorTheme(themeId: string | undefined, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchColorTheme | null> {\n\t\treturn this.colorThemeSequencer.queue(() => {\n\t\t\tif (!themeId) {\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t\tif (themeId === this.currentColorTheme.id && this.currentColorTheme.isLoaded) {\n\t\t\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t\t\t}\n\n\t\t\tthemeId = validateThemeId(themeId); // migrate theme ids\n\n\t\t\tconst themeData = this.colorThemeRegistry.findThemeById(themeId, DEFAULT_COLOR_THEME_ID);\n\t\t\tif (!themeData) {\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t\treturn themeData.ensureLoaded(this.extensionResourceLoaderService).then(_ => {\n\t\t\t\tthemeData.setCustomizations(this.settings);\n\t\t\t\treturn this.applyTheme(themeData, settingsTarget);\n\t\t\t}, error => {\n\t\t\t\treturn Promise.reject(new Error(nls.localize('error.cannotloadtheme', \"Unable to load {0}: {1}\", themeData.location?.toString(), error.message)));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate reloadCurrentColorTheme() {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.currentColorTheme.reload(this.extensionResourceLoaderService);\n\t\t\t\tthis.currentColorTheme.setCustomizations(this.settings);\n\t\t\t\tawait this.applyTheme(this.currentColorTheme, undefined, false);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info('Unable to reload {0}: {1}', this.currentColorTheme.location?.toString());\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async restoreColorTheme(): Promise<boolean> {\n\t\tconst settingId = this.settings.colorTheme;\n\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(settingId);\n\t\tif (theme) {\n\t\t\tif (settingId !== this.currentColorTheme.settingsId) {\n\t\t\t\tawait this.setColorTheme(theme.id, undefined);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate updateDynamicCSSRules(themeData: IColorTheme) {\n\t\tconst cssRules = new Set<string>();\n\t\tconst ruleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!cssRules.has(rule)) {\n\t\t\t\t\tcssRules.add(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\truleCollector.addRule(`.monaco-workbench { forced-color-adjust: none; }`);\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(themeData, ruleCollector, this.environmentService));\n\t\t_applyRules([...cssRules].join('\\n'), colorThemeRulesClassName);\n\t}\n\n\tprivate applyTheme(newTheme: ColorThemeData, settingsTarget: ThemeSettingTarget, silent = false): Promise<IWorkbenchColorTheme | null> {\n\t\tthis.updateDynamicCSSRules(newTheme);\n\n\t\tif (this.currentColorTheme.id) {\n\t\t\tthis.container.classList.remove(...this.currentColorTheme.classNames);\n\t\t} else {\n\t\t\tthis.container.classList.remove(VS_DARK_THEME, VS_LIGHT_THEME, VS_HC_THEME);\n\t\t}\n\t\tthis.container.classList.add(...newTheme.classNames);\n\n\t\tthis.currentColorTheme.clearCaches();\n\t\tthis.currentColorTheme = newTheme;\n\t\tif (!this.colorThemingParticipantChangeListener) {\n\t\t\tthis.colorThemingParticipantChangeListener = themingRegistry.onThemingParticipantAdded(_ => this.updateDynamicCSSRules(this.currentColorTheme));\n\t\t}\n\n\t\tthis.colorThemeWatcher.update(newTheme);\n\n\t\tthis.sendTelemetry(newTheme.id, newTheme.extensionData, 'color');\n\n\t\tif (silent) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\n\t\t// remember theme data for a quick restore\n\t\tif (newTheme.isLoaded) {\n\t\t\tnewTheme.toStorage(this.storageService);\n\t\t}\n\n\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t}\n\n\n\tprivate themeExtensionsActivated = new Map<string, boolean>();\n\tprivate sendTelemetry(themeId: string, themeData: ExtensionData | undefined, themeType: string) {\n\t\tif (themeData) {\n\t\t\tconst key = themeType + themeData.extensionId;\n\t\t\tif (!this.themeExtensionsActivated.get(key)) {\n\t\t\t\ttype ActivatePluginClassification = {\n\t\t\t\t\tid: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\t\t\t\t\tname: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\t\t\t\t\tisBuiltin: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t\tpublisherDisplayName: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\tthemeId: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\t\t\t\t};\n\t\t\t\ttype ActivatePluginEvent = {\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\tisBuiltin: boolean;\n\t\t\t\t\tpublisherDisplayName: string;\n\t\t\t\t\tthemeId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<ActivatePluginEvent, ActivatePluginClassification>('activatePlugin', {\n\t\t\t\t\tid: themeData.extensionId,\n\t\t\t\t\tname: themeData.extensionName,\n\t\t\t\t\tisBuiltin: themeData.extensionIsBuiltin,\n\t\t\t\t\tpublisherDisplayName: themeData.extensionPublisher,\n\t\t\t\t\tthemeId: themeId\n\t\t\t\t});\n\t\t\t\tthis.themeExtensionsActivated.set(key, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getFileIconThemes(): Promise<IWorkbenchFileIconTheme[]> {\n\t\treturn this.fileIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getFileIconTheme() {\n\t\treturn this.currentFileIconTheme;\n\t}\n\n\tpublic get onDidFileIconThemeChange(): Event<IWorkbenchFileIconTheme> {\n\t\treturn this.onFileIconThemeChange.event;\n\t}\n\n\n\tpublic async setFileIconTheme(iconTheme: string | undefined, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchFileIconTheme> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\ticonTheme = iconTheme || '';\n\t\t\tif (iconTheme === this.currentFileIconTheme.id && this.currentFileIconTheme.isLoaded) {\n\t\t\t\tawait this.settings.setFileIconTheme(this.currentFileIconTheme, settingsTarget);\n\t\t\t\treturn this.currentFileIconTheme;\n\t\t\t}\n\n\t\t\tconst newThemeData = this.fileIconThemeRegistry.findThemeById(iconTheme) || FileIconThemeData.noIconTheme;\n\t\t\tawait newThemeData.ensureLoaded(this.fileService);\n\n\t\t\tthis.applyAndSetFileIconTheme(newThemeData);\n\n\t\t\t// remember theme data for a quick restore\n\t\t\tif (newThemeData.isLoaded && (!newThemeData.location || !getRemoteAuthority(newThemeData.location))) {\n\t\t\t\tnewThemeData.toStorage(this.storageService);\n\t\t\t}\n\t\t\tawait this.settings.setFileIconTheme(this.currentFileIconTheme, settingsTarget);\n\n\t\t\treturn newThemeData;\n\t\t});\n\t}\n\n\tprivate async reloadCurrentFileIconTheme() {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentFileIconTheme.reload(this.fileService);\n\t\t\tthis.applyAndSetFileIconTheme(this.currentFileIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreFileIconTheme(): Promise<boolean> {\n\t\tconst settingId = this.settings.fileIconTheme;\n\t\tconst theme = this.fileIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\tif (theme) {\n\t\t\tif (settingId !== this.currentFileIconTheme.settingsId) {\n\t\t\t\tawait this.setFileIconTheme(theme.id, undefined);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate applyAndSetFileIconTheme(iconThemeData: FileIconThemeData, silent = false): void {\n\t\tthis.currentFileIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, fileIconThemeRulesClassName);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.container.classList.add(fileIconsEnabledClass);\n\t\t} else {\n\t\t\tthis.container.classList.remove(fileIconsEnabledClass);\n\t\t}\n\n\t\tthis.fileIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'fileIcon');\n\t\t}\n\n\t\tif (!silent) {\n\t\t\tthis.onFileIconThemeChange.fire(this.currentFileIconTheme);\n\t\t}\n\t}\n\n\tpublic async getProductIconThemes(): Promise<IWorkbenchProductIconTheme[]> {\n\t\treturn this.productIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getProductIconTheme() {\n\t\treturn this.currentProductIconTheme;\n\t}\n\n\tpublic get onDidProductIconThemeChange(): Event<IWorkbenchProductIconTheme> {\n\t\treturn this.onProductIconThemeChange.event;\n\t}\n\n\tpublic async setProductIconTheme(iconTheme: string | undefined, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchProductIconTheme> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\ticonTheme = iconTheme || '';\n\t\t\tif (iconTheme === this.currentProductIconTheme.id && this.currentProductIconTheme.isLoaded) {\n\t\t\t\tawait this.settings.setProductIconTheme(this.currentProductIconTheme, settingsTarget);\n\t\t\t\treturn this.currentProductIconTheme;\n\t\t\t}\n\n\t\t\tconst newThemeData = this.productIconThemeRegistry.findThemeById(iconTheme) || ProductIconThemeData.defaultTheme;\n\t\t\tawait newThemeData.ensureLoaded(this.fileService, this.logService);\n\n\t\t\tthis.applyAndSetProductIconTheme(newThemeData);\n\n\t\t\t// remember theme data for a quick restore\n\t\t\tif (newThemeData.isLoaded && (!newThemeData.location || !getRemoteAuthority(newThemeData.location))) {\n\t\t\t\tnewThemeData.toStorage(this.storageService);\n\t\t\t}\n\t\t\tawait this.settings.setProductIconTheme(this.currentProductIconTheme, settingsTarget);\n\n\t\t\treturn newThemeData;\n\t\t});\n\t}\n\n\tprivate async reloadCurrentProductIconTheme() {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentProductIconTheme.reload(this.fileService, this.logService);\n\t\t\tthis.applyAndSetProductIconTheme(this.currentProductIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreProductIconTheme(): Promise<boolean> {\n\t\tconst settingId = this.settings.productIconTheme;\n\t\tconst theme = this.productIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\tif (theme) {\n\t\t\tif (settingId !== this.currentProductIconTheme.settingsId) {\n\t\t\t\tawait this.setProductIconTheme(theme.id, undefined);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate applyAndSetProductIconTheme(iconThemeData: ProductIconThemeData, silent = false): void {\n\n\t\tthis.currentProductIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, productIconThemeRulesClassName);\n\n\t\tthis.productIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'productIcon');\n\t\t}\n\t\tif (!silent) {\n\t\t\tthis.onProductIconThemeChange.fire(this.currentProductIconTheme);\n\t\t}\n\t}\n}\n\nclass ThemeFileWatcher {\n\n\tprivate watchedLocation: URI | undefined;\n\tprivate watcherDisposable: IDisposable | undefined;\n\tprivate fileChangeListener: IDisposable | undefined;\n\n\tconstructor(private fileService: IFileService, private environmentService: IWorkbenchEnvironmentService, private onUpdate: () => void) {\n\t}\n\n\tupdate(theme: { location?: URI, watch?: boolean; }) {\n\t\tif (!resources.isEqual(theme.location, this.watchedLocation)) {\n\t\t\tthis.dispose();\n\t\t\tif (theme.location && (theme.watch || this.environmentService.isExtensionDevelopment)) {\n\t\t\t\tthis.watchedLocation = theme.location;\n\t\t\t\tthis.watcherDisposable = this.fileService.watch(theme.location);\n\t\t\t\tthis.fileService.onDidFilesChange(e => {\n\t\t\t\t\tif (this.watchedLocation && e.contains(this.watchedLocation, FileChangeType.UPDATED)) {\n\t\t\t\t\t\tthis.onUpdate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.watcherDisposable = dispose(this.watcherDisposable);\n\t\tthis.fileChangeListener = dispose(this.fileChangeListener);\n\t\tthis.watchedLocation = undefined;\n\t}\n}\n\nfunction _applyRules(styleSheetContent: string, rulesClassName: string) {\n\tconst themeStyles = document.head.getElementsByClassName(rulesClassName);\n\tif (themeStyles.length === 0) {\n\t\tconst elStyle = document.createElement('style');\n\t\telStyle.type = 'text/css';\n\t\telStyle.className = rulesClassName;\n\t\telStyle.textContent = styleSheetContent;\n\t\tdocument.head.appendChild(elStyle);\n\t} else {\n\t\t(<HTMLStyleElement>themeStyles[0]).textContent = styleSheetContent;\n\t}\n}\n\nregisterColorThemeSchemas();\nregisterFileIconThemeSchemas();\nregisterProductIconThemeSchemas();\n\nregisterSingleton(IWorkbenchThemeService, WorkbenchThemeService);\n"]}