{"version":3,"file":"nativeHostColorSchemeService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/themes/electron-sandbox/nativeHostColorSchemeService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,sBAAU;QAI3D,YACsC,iBAAqC,EAC3B,kBAAgD;YAE/F,KAAK,EAAE,CAAC;YAH6B,sBAAiB,GAAjB,iBAAiB,CAAoB;YAC3B,uBAAkB,GAAlB,kBAAkB,CAA8B;YAiB/E,4BAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAQ,CAAC,CAAC;YACtE,2BAAsB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;YAE9D,SAAI,GAAY,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC;YACvE,iBAAY,GAAY,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC;YAjB7F,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC;QAEO,iBAAiB;YAExB,eAAe;YACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,EAAE;gBACvF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;gBACjC,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KAQD,CAAA;IA7BY,4BAA4B;QAKtC,WAAA,2BAAkB,CAAA;QAClB,WAAA,iDAA4B,CAAA;OANlB,4BAA4B,CA6BxC;IA7BY,oEAA4B;IA+BzC,CAAA,GAAA,8BAAiB,CAAA,CAAC,gDAAuB,EAAE,4BAA4B,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IHostColorSchemeService } from 'vs/workbench/services/themes/common/hostColorSchemeService';\n\nexport class NativeHostColorSchemeService extends Disposable implements IHostColorSchemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Color Scheme\n\t\tthis._register(this.nativeHostService.onDidChangeColorScheme(({ highContrast, dark }) => {\n\t\t\tthis.dark = dark;\n\t\t\tthis.highContrast = highContrast;\n\t\t\tthis._onDidChangeColorScheme.fire();\n\t\t}));\n\t}\n\n\tprivate readonly _onDidChangeColorScheme = this._register(new Emitter<void>());\n\treadonly onDidChangeColorScheme = this._onDidChangeColorScheme.event;\n\n\tpublic dark: boolean = this.environmentService.configuration.colorScheme.dark;\n\tpublic highContrast: boolean = this.environmentService.configuration.colorScheme.highContrast;\n\n}\n\nregisterSingleton(IHostColorSchemeService, NativeHostColorSchemeService, true);\n"]}