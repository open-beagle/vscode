{"version":3,"sources":["vs/workbench/services/themes/common/productIconThemeSchema.ts"],"names":[],"mappings":";;;;IAWa,QAAA,WAAW,GAAG,cAAc,CAAC;IAC7B,QAAA,cAAc,GAAG,wCAAwC,CAAC;IAC1D,QAAA,eAAe,GAAG,8CAA8C,CAAC;IACjE,QAAA,aAAa,GAAG,iBAAiB,CAAC;IAE/C,MAAM,QAAQ,GAAG,qCAAqC,CAAC;IACvD,MAAM,MAAM,GAAgB;QAC3B,IAAI,EAAE,QAAQ;QACd,aAAa,EAAE,IAAI;QACnB,mBAAmB,EAAE,IAAI;QACzB,UAAU,EAAE;YACX,KAAK,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACX,EAAE,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAW,EAAE,IAAqB,CAAC;4BAC7D,OAAO,EAAE,mBAAW;4BACpB,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuB,EAAE,IAAkE,CAAC;yBAC9H;wBACD,GAAG,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAA2B,CAAC;4BACpE,KAAK,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,UAAU,EAAE;oCACX,IAAI,EAAE;wCACL,IAAI,EAAE,QAAQ;wCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAiE,CAAC;qCAChH;oCACD,MAAM,EAAE;wCACP,IAAI,EAAE,QAAQ;wCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAyB,CAAC;wCAC1E,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAE,KAAK,CAAC;qCAC3E;iCACD;gCACD,QAAQ,EAAE;oCACT,MAAM;oCACN,QAAQ;iCACR;6BACD;yBACD;wBACD,MAAM,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAA4G,CAAC;4BAC7J,KAAK,EAAE;gCACN,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE;gCACjD,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,uBAAe,EAAE;6BAC5C;yBACD;wBACD,KAAK,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAA0G,CAAC;4BAC1J,KAAK,EAAE;gCACN,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE;gCACzC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,sBAAc,EAAE;6BAC3C;yBACD;qBACD;oBACD,QAAQ,EAAE;wBACT,IAAI;wBACJ,KAAK;qBACL;iBACD;aACD;YACD,eAAe,EAAE;gBAChB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAA+C,CAAC;gBACpG,IAAI,EAAE,4BAAa;gBACnB,oBAAoB,EAAE,KAAK;aAC3B;SACD;KACD,CAAC;IAEF,SAAgB,+BAA+B;QAC9C,IAAI,cAAc,GAAG,mBAAQ,CAAC,EAAE,CAA4B,qCAAc,CAAC,gBAAgB,CAAC,CAAC;QAC7F,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAHD,0EAGC","file":"productIconThemeSchema.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vs/nls';\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { iconsSchemaId } from 'vs/platform/theme/common/iconRegistry';\n\nexport const fontIdRegex = '^([\\\\w-_]+)$';\nexport const fontStyleRegex = '^(normal|italic|(oblique[ \\\\w\\\\s-]+))$';\nexport const fontWeightRegex = '^(normal|bold|lighter|bolder|(\\\\d{0-1000}))$';\nexport const fontSizeRegex = '^([\\\\w .%-_]+)$';\n\nconst schemaId = 'vscode://schemas/product-icon-theme';\nconst schema: IJSONSchema = {\n\ttype: 'object',\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tproperties: {\n\t\tfonts: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.id', 'The ID of the font.'),\n\t\t\t\t\t\tpattern: fontIdRegex,\n\t\t\t\t\t\tpatternErrorMessage: nls.localize('schema.id.formatError', 'The ID must only contain letters, numbers, underscore and minus.')\n\t\t\t\t\t},\n\t\t\t\t\tsrc: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tdescription: nls.localize('schema.src', 'The location of the font.'),\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('schema.font-path', 'The font path, relative to the current product icon theme file.'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tformat: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('schema.font-format', 'The format of the font.'),\n\t\t\t\t\t\t\t\t\tenum: ['woff', 'woff2', 'truetype', 'opentype', 'embedded-opentype', 'svg']\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trequired: [\n\t\t\t\t\t\t\t\t'path',\n\t\t\t\t\t\t\t\t'format'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tweight: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.font-weight', 'The weight of the font. See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight for valid values.'),\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{ enum: ['normal', 'bold', 'lighter', 'bolder'] },\n\t\t\t\t\t\t\t{ type: 'string', pattern: fontWeightRegex }\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.font-style', 'The style of the font. See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style for valid values.'),\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{ enum: ['normal', 'italic', 'oblique'] },\n\t\t\t\t\t\t\t{ type: 'string', pattern: fontStyleRegex }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trequired: [\n\t\t\t\t\t'id',\n\t\t\t\t\t'src'\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\ticonDefinitions: {\n\t\t\tdescription: nls.localize('schema.iconDefinitions', 'Association of icon name to a font character.'),\n\t\t\t$ref: iconsSchemaId,\n\t\t\tadditionalProperties: false\n\t\t}\n\t}\n};\n\nexport function registerProductIconThemeSchemas() {\n\tlet schemaRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tschemaRegistry.registerSchema(schemaId, schema);\n}\n"]}