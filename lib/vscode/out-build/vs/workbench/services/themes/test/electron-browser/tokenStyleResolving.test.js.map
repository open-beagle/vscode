{"version":3,"file":"tokenStyleResolving.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/themes/test/electron-browser/tokenStyleResolving.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorThemeData } from 'vs/workbench/services/themes/common/colorThemeData';\nimport * as assert from 'assert';\nimport { ITokenColorCustomizations } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { TokenStyle, getTokenClassificationRegistry } from 'vs/platform/theme/common/tokenClassificationRegistry';\nimport { Color } from 'vs/base/common/color';\nimport { isString } from 'vs/base/common/types';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { ExtensionResourceLoaderService } from 'vs/workbench/services/extensionResourceLoader/electron-sandbox/extensionResourceLoaderService';\nimport { ITokenStyle } from 'vs/platform/theme/common/themeService';\n\nconst undefinedStyle = { bold: undefined, underline: undefined, italic: undefined };\nconst unsetStyle = { bold: false, underline: false, italic: false };\n\nfunction ts(foreground: string | undefined, styleFlags: { bold?: boolean; underline?: boolean; italic?: boolean; } | undefined): TokenStyle {\n\tconst foregroundColor = isString(foreground) ? Color.fromHex(foreground) : undefined;\n\treturn new TokenStyle(foregroundColor, styleFlags && styleFlags.bold, styleFlags && styleFlags.underline, styleFlags && styleFlags.italic);\n}\n\nfunction tokenStyleAsString(ts: TokenStyle | undefined | null) {\n\tif (!ts) {\n\t\treturn 'tokenstyle-undefined';\n\t}\n\tlet str = ts.foreground ? ts.foreground.toString() : 'no-foreground';\n\tif (ts.bold !== undefined) {\n\t\tstr += ts.bold ? '+B' : '-B';\n\t}\n\tif (ts.underline !== undefined) {\n\t\tstr += ts.underline ? '+U' : '-U';\n\t}\n\tif (ts.italic !== undefined) {\n\t\tstr += ts.italic ? '+I' : '-I';\n\t}\n\treturn str;\n}\n\nfunction assertTokenStyle(actual: TokenStyle | undefined | null, expected: TokenStyle | undefined | null, message?: string) {\n\tassert.strictEqual(tokenStyleAsString(actual), tokenStyleAsString(expected), message);\n}\n\nfunction assertTokenStyleMetaData(colorIndex: string[], actual: ITokenStyle | undefined, expected: TokenStyle | undefined | null, message = '') {\n\tif (expected === undefined || expected === null || actual === undefined) {\n\t\tassert.strictEqual(actual, expected, message);\n\t\treturn;\n\t}\n\tassert.strictEqual(actual.bold, expected.bold, 'bold ' + message);\n\tassert.strictEqual(actual.italic, expected.italic, 'italic ' + message);\n\tassert.strictEqual(actual.underline, expected.underline, 'underline ' + message);\n\n\tconst actualForegroundIndex = actual.foreground;\n\tif (actualForegroundIndex && expected.foreground) {\n\t\tassert.strictEqual(colorIndex[actualForegroundIndex], Color.Format.CSS.formatHexA(expected.foreground, true).toUpperCase(), 'foreground ' + message);\n\t} else {\n\t\tassert.strictEqual(actualForegroundIndex, expected.foreground || 0, 'foreground ' + message);\n\t}\n}\n\n\nfunction assertTokenStyles(themeData: ColorThemeData, expected: { [qualifiedClassifier: string]: TokenStyle; }, language = 'typescript') {\n\tconst colorIndex = themeData.tokenColorMap;\n\n\tfor (let qualifiedClassifier in expected) {\n\t\tconst [type, ...modifiers] = qualifiedClassifier.split('.');\n\n\t\tconst expectedTokenStyle = expected[qualifiedClassifier];\n\n\t\tconst tokenStyleMetaData = themeData.getTokenStyleMetadata(type, modifiers, language);\n\t\tassertTokenStyleMetaData(colorIndex, tokenStyleMetaData, expectedTokenStyle, qualifiedClassifier);\n\t}\n}\n\nsuite('Themes - TokenStyleResolving', () => {\n\tconst fileService = new FileService(new NullLogService());\n\tconst extensionResourceLoaderService = new ExtensionResourceLoaderService(fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(new NullLogService());\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tteardown(() => {\n\t\tdiskFileSystemProvider.dispose();\n\t});\n\n\ttest('color defaults', async () => {\n\t\tconst themeData = ColorThemeData.createUnloadedTheme('foo');\n\t\tthemeData.location = FileAccess.asFileUri('./color-theme.json', require);\n\t\tawait themeData.ensureLoaded(extensionResourceLoaderService);\n\n\t\tassert.strictEqual(themeData.isLoaded, true);\n\n\t\tassertTokenStyles(themeData, {\n\t\t\t'comment': ts('#000000', undefinedStyle),\n\t\t\t'variable': ts('#111111', unsetStyle),\n\t\t\t'type': ts('#333333', { bold: false, underline: true, italic: false }),\n\t\t\t'function': ts('#333333', unsetStyle),\n\t\t\t'string': ts('#444444', undefinedStyle),\n\t\t\t'number': ts('#555555', undefinedStyle),\n\t\t\t'keyword': ts('#666666', undefinedStyle)\n\t\t});\n\t});\n\n\ttest('resolveScopes', async () => {\n\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\n\t\tconst customTokenColors: ITokenColorCustomizations = {\n\t\t\ttextMateRules: [\n\t\t\t\t{\n\t\t\t\t\tscope: 'variable',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tfontStyle: '',\n\t\t\t\t\t\tforeground: '#F8F8F2'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'keyword.operator',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tfontStyle: 'italic bold underline',\n\t\t\t\t\t\tforeground: '#F92672'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'storage',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tfontStyle: 'italic',\n\t\t\t\t\t\tforeground: '#F92672'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: ['storage.type', 'meta.structure.dictionary.json string.quoted.double.json'],\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tforeground: '#66D9EF'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'entity.name.type, entity.name.class, entity.name.namespace, entity.name.scope-resolution',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tfontStyle: 'underline',\n\t\t\t\t\t\tforeground: '#A6E22E'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\tthemeData.setCustomTokenColors(customTokenColors);\n\n\t\tlet tokenStyle;\n\t\tlet defaultTokenStyle = undefined;\n\n\t\ttokenStyle = themeData.resolveScopes([['variable']]);\n\t\tassertTokenStyle(tokenStyle, ts('#F8F8F2', unsetStyle), 'variable');\n\n\t\ttokenStyle = themeData.resolveScopes([['keyword.operator']]);\n\t\tassertTokenStyle(tokenStyle, ts('#F92672', { italic: true, bold: true, underline: true }), 'keyword');\n\n\t\ttokenStyle = themeData.resolveScopes([['keyword']]);\n\t\tassertTokenStyle(tokenStyle, defaultTokenStyle, 'keyword');\n\n\t\ttokenStyle = themeData.resolveScopes([['keyword.operator']]);\n\t\tassertTokenStyle(tokenStyle, ts('#F92672', { italic: true, bold: true, underline: true }), 'keyword.operator');\n\n\t\ttokenStyle = themeData.resolveScopes([['keyword.operators']]);\n\t\tassertTokenStyle(tokenStyle, defaultTokenStyle, 'keyword.operators');\n\n\t\ttokenStyle = themeData.resolveScopes([['storage']]);\n\t\tassertTokenStyle(tokenStyle, ts('#F92672', { italic: true, bold: false, underline: false }), 'storage');\n\n\t\ttokenStyle = themeData.resolveScopes([['storage.type']]);\n\t\tassertTokenStyle(tokenStyle, ts('#66D9EF', { italic: true, bold: false, underline: false }), 'storage.type');\n\n\t\ttokenStyle = themeData.resolveScopes([['entity.name.class']]);\n\t\tassertTokenStyle(tokenStyle, ts('#A6E22E', { italic: false, bold: false, underline: true }), 'entity.name.class');\n\n\t\ttokenStyle = themeData.resolveScopes([['meta.structure.dictionary.json', 'string.quoted.double.json']]);\n\t\tassertTokenStyle(tokenStyle, ts('#66D9EF', undefined), 'json property');\n\n\t\ttokenStyle = themeData.resolveScopes([['keyword'], ['storage.type'], ['entity.name.class']]);\n\t\tassertTokenStyle(tokenStyle, ts('#66D9EF', { italic: true, bold: false, underline: false }), 'storage.type');\n\n\t});\n\n\n\ttest('resolveScopes - match most specific', async () => {\n\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\n\t\tconst customTokenColors: ITokenColorCustomizations = {\n\t\t\ttextMateRules: [\n\t\t\t\t{\n\t\t\t\t\tscope: 'entity.name.type',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tfontStyle: 'underline',\n\t\t\t\t\t\tforeground: '#A6E22E'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'entity.name.type.class',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tforeground: '#FF00FF'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tscope: 'entity.name',\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tforeground: '#FFFFFF'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\tthemeData.setCustomTokenColors(customTokenColors);\n\n\t\tconst tokenStyle = themeData.resolveScopes([['entity.name.type.class']]);\n\t\tassertTokenStyle(tokenStyle, ts('#FF00FF', { italic: false, bold: false, underline: true }), 'entity.name.type.class');\n\n\t});\n\n\n\ttest('rule matching', async () => {\n\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\t\tthemeData.setCustomColors({ 'editor.foreground': '#000000' });\n\t\tthemeData.setCustomSemanticTokenColors({\n\t\t\tenabled: true,\n\t\t\trules: {\n\t\t\t\t'type': '#ff0000',\n\t\t\t\t'class': { foreground: '#0000ff', italic: true },\n\t\t\t\t'*.static': { bold: true },\n\t\t\t\t'*.declaration': { italic: true },\n\t\t\t\t'*.async.static': { italic: true, underline: true },\n\t\t\t\t'*.async': { foreground: '#000fff', underline: true }\n\t\t\t}\n\t\t});\n\n\t\tassertTokenStyles(themeData, {\n\t\t\t'type': ts('#ff0000', undefinedStyle),\n\t\t\t'type.static': ts('#ff0000', { bold: true }),\n\t\t\t'type.static.declaration': ts('#ff0000', { bold: true, italic: true }),\n\t\t\t'class': ts('#0000ff', { italic: true }),\n\t\t\t'class.static.declaration': ts('#0000ff', { bold: true, italic: true, }),\n\t\t\t'class.declaration': ts('#0000ff', { italic: true }),\n\t\t\t'class.declaration.async': ts('#000fff', { underline: true, italic: true }),\n\t\t\t'class.declaration.async.static': ts('#000fff', { italic: true, underline: true, bold: true }),\n\t\t});\n\n\t});\n\n\ttest('super type', async () => {\n\t\tconst registry = getTokenClassificationRegistry();\n\n\t\tregistry.registerTokenType('myTestInterface', 'A type just for testing', 'interface');\n\t\tregistry.registerTokenType('myTestSubInterface', 'A type just for testing', 'myTestInterface');\n\n\t\ttry {\n\t\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\t\t\tthemeData.setCustomColors({ 'editor.foreground': '#000000' });\n\t\t\tthemeData.setCustomSemanticTokenColors({\n\t\t\t\tenabled: true,\n\t\t\t\trules: {\n\t\t\t\t\t'interface': '#ff0000',\n\t\t\t\t\t'myTestInterface': { italic: true },\n\t\t\t\t\t'interface.static': { bold: true }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tassertTokenStyles(themeData, { 'myTestSubInterface': ts('#ff0000', { italic: true }) });\n\t\t\tassertTokenStyles(themeData, { 'myTestSubInterface.static': ts('#ff0000', { italic: true, bold: true }) });\n\n\t\t\tthemeData.setCustomSemanticTokenColors({\n\t\t\t\tenabled: true,\n\t\t\t\trules: {\n\t\t\t\t\t'interface': '#ff0000',\n\t\t\t\t\t'myTestInterface': { foreground: '#ff00ff', italic: true }\n\t\t\t\t}\n\t\t\t});\n\t\t\tassertTokenStyles(themeData, { 'myTestSubInterface': ts('#ff00ff', { italic: true }) });\n\t\t} finally {\n\t\t\tregistry.deregisterTokenType('myTestInterface');\n\t\t\tregistry.deregisterTokenType('myTestSubInterface');\n\t\t}\n\t});\n\n\ttest('language', async () => {\n\t\ttry {\n\t\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\t\t\tthemeData.setCustomColors({ 'editor.foreground': '#000000' });\n\t\t\tthemeData.setCustomSemanticTokenColors({\n\t\t\t\tenabled: true,\n\t\t\t\trules: {\n\t\t\t\t\t'interface': '#fff000',\n\t\t\t\t\t'interface:java': '#ff0000',\n\t\t\t\t\t'interface.static': { bold: true },\n\t\t\t\t\t'interface.static:typescript': { italic: true }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tassertTokenStyles(themeData, { 'interface': ts('#ff0000', undefined) }, 'java');\n\t\t\tassertTokenStyles(themeData, { 'interface': ts('#fff000', undefined) }, 'typescript');\n\t\t\tassertTokenStyles(themeData, { 'interface.static': ts('#ff0000', { bold: true }) }, 'java');\n\t\t\tassertTokenStyles(themeData, { 'interface.static': ts('#fff000', { bold: true, italic: true }) }, 'typescript');\n\t\t} finally {\n\t\t}\n\t});\n\n\ttest('language - scope resolving', async () => {\n\t\tconst registry = getTokenClassificationRegistry();\n\n\t\tconst numberOfDefaultRules = registry.getTokenStylingDefaultRules().length;\n\n\t\tregistry.registerTokenStyleDefault(registry.parseTokenSelector('type', 'typescript1'), { scopesToProbe: [['entity.name.type.ts1']] });\n\t\tregistry.registerTokenStyleDefault(registry.parseTokenSelector('type:javascript1'), { scopesToProbe: [['entity.name.type.js1']] });\n\n\t\ttry {\n\t\t\tconst themeData = ColorThemeData.createLoadedEmptyTheme('test', 'test');\n\t\t\tthemeData.setCustomColors({ 'editor.foreground': '#000000' });\n\t\t\tthemeData.setCustomTokenColors({\n\t\t\t\ttextMateRules: [\n\t\t\t\t\t{\n\t\t\t\t\t\tscope: 'entity.name.type',\n\t\t\t\t\t\tsettings: { foreground: '#aa0000' }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tscope: 'entity.name.type.ts1',\n\t\t\t\t\t\tsettings: { foreground: '#bb0000' }\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tassertTokenStyles(themeData, { 'type': ts('#aa0000', undefined) }, 'javascript1');\n\t\t\tassertTokenStyles(themeData, { 'type': ts('#bb0000', undefined) }, 'typescript1');\n\n\t\t} finally {\n\t\t\tregistry.deregisterTokenStyleDefault(registry.parseTokenSelector('type', 'typescript1'));\n\t\t\tregistry.deregisterTokenStyleDefault(registry.parseTokenSelector('type:javascript1'));\n\n\t\t\tassert.strictEqual(registry.getTokenStylingDefaultRules().length, numberOfDefaultRules);\n\t\t}\n\t});\n});\n"]}