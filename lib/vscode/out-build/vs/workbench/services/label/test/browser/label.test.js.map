{"version":3,"file":"label.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/label/test/browser/label.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as resources from 'vs/base/common/resources';\nimport * as assert from 'assert';\nimport { TestEnvironmentService, TestPathService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { URI } from 'vs/base/common/uri';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\n\nsuite('URI Label', () => {\n\tlet labelService: LabelService;\n\n\tsetup(() => {\n\t\tlabelService = new LabelService(TestEnvironmentService, new TestContextService(), new TestPathService());\n\t});\n\n\ttest('custom scheme', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL/${path}/${authority}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL//1/2/3/4/5/microsoft.com/END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('separator', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL\\\\${path}\\\\${authority}\\\\END',\n\t\t\t\tseparator: '\\\\',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL\\\\\\\\1\\\\2\\\\3\\\\4\\\\5\\\\microsoft.com\\\\END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('custom authority', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'micro*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL/${path}/${authority}/END',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL//1/2/3/4/5/microsoft.com/END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('mulitple authority', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'not_matching_but_long',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'first',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'microsof*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'second',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'mi*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'third',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\n\t\t// Make sure the most specific authority is picked\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'second');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'second');\n\t});\n\n\ttest('custom query', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse(`vscode://microsoft.com/1/2/3/4/5?${encodeURIComponent(JSON.stringify({ prefix: 'prefix', path: 'path' }))}`);\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABELprefix: path/END');\n\t});\n\n\ttest('custom query without value', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse(`vscode://microsoft.com/1/2/3/4/5?${encodeURIComponent(JSON.stringify({ path: 'path' }))}`);\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: path/END');\n\t});\n\n\ttest('custom query without query json', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5?path=foo');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: /END');\n\t});\n\n\ttest('custom query without query', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: /END');\n\t});\n});\n\n\nsuite('multi-root workspace', () => {\n\tlet labelService: LabelService;\n\n\tsetup(() => {\n\t\tconst sources = URI.file('folder1/src');\n\t\tconst tests = URI.file('folder1/test');\n\t\tconst other = URI.file('folder2');\n\n\t\tlabelService = new LabelService(\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestContextService(\n\t\t\t\tnew Workspace('test-workspace', [\n\t\t\t\t\tnew WorkspaceFolder({ uri: sources, index: 0, name: 'Sources' }, { uri: sources.toString() }),\n\t\t\t\t\tnew WorkspaceFolder({ uri: tests, index: 1, name: 'Tests' }, { uri: tests.toString() }),\n\t\t\t\t\tnew WorkspaceFolder({ uri: other, index: 2, name: resources.basename(other) }, { uri: other.toString() }),\n\t\t\t\t])),\n\t\t\tnew TestPathService());\n\t});\n\n\ttest('labels of files in multiroot workspaces are the foldername followed by offset from the folder', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${authority}${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: false,\n\t\t\t\tnormalizeDriveLetter: false,\n\t\t\t\tauthorityPrefix: '//',\n\t\t\t\tworkspaceSuffix: ''\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file',\n\t\t\t'folder1/src/folder/file': 'Sources • folder/file',\n\t\t\t'folder1/src': 'Sources',\n\t\t\t'folder1/other': '/folder1/other',\n\t\t\t'folder2/other': 'folder2 • other',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n\n\ttest('labels with context after path', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path} (${scheme})',\n\t\t\t\tseparator: '/',\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file (file)',\n\t\t\t'folder1/src/folder/file': 'Sources • folder/file (file)',\n\t\t\t'folder1/src': 'Sources',\n\t\t\t'folder1/other': '/folder1/other (file)',\n\t\t\t'folder2/other': 'folder2 • other (file)',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label, path);\n\t\t});\n\t});\n\n\ttest('stripPathStartingSeparator', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\tstripPathStartingSeparator: true\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file',\n\t\t\t'other/blah': 'other/blah',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label, path);\n\t\t});\n\t});\n});\n\nsuite('workspace at FSP root', () => {\n\tlet labelService: LabelService;\n\n\tsetup(() => {\n\t\tconst rootFolder = URI.parse('myscheme://myauthority/');\n\n\t\tlabelService = new LabelService(\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestContextService(\n\t\t\t\tnew Workspace('test-workspace', [\n\t\t\t\t\tnew WorkspaceFolder({ uri: rootFolder, index: 0, name: 'FSProotFolder' }, { uri: rootFolder.toString() }),\n\t\t\t\t])),\n\t\t\tnew TestPathService());\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'myscheme',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${scheme}://${authority}${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: false,\n\t\t\t\tnormalizeDriveLetter: false,\n\t\t\t\tworkspaceSuffix: '',\n\t\t\t\tauthorityPrefix: '',\n\t\t\t\tstripPathStartingSeparator: false\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('non-relative label', () => {\n\n\t\tconst tests = {\n\t\t\t'myscheme://myauthority/myFile1.txt': 'myscheme://myauthority/myFile1.txt',\n\t\t\t'myscheme://myauthority/folder/myFile2.txt': 'myscheme://myauthority/folder/myFile2.txt',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([uriString, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.parse(uriString), { relative: false });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n\n\ttest('relative label', () => {\n\n\t\tconst tests = {\n\t\t\t'myscheme://myauthority/myFile1.txt': 'myFile1.txt',\n\t\t\t'myscheme://myauthority/folder/myFile2.txt': 'folder/myFile2.txt',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([uriString, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.parse(uriString), { relative: true });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n});\n"]}