{"version":3,"sources":["vs/workbench/services/label/common/labelService.ts"],"names":[],"mappings":"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","file":"labelService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport * as paths from 'vs/base/common/path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceContextService, IWorkspace, isWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { basenameOrAuthority, basename, joinPath, dirname } from 'vs/base/common/resources';\nimport { tildify, getPathLabel } from 'vs/base/common/labels';\nimport { IWorkspaceIdentifier, WORKSPACE_EXTENSION, toWorkspaceIdentifier, isWorkspaceIdentifier, isUntitledWorkspace, isSingleFolderWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { ILabelService, ResourceLabelFormatter, ResourceLabelFormatting, IFormatterChangeEvent } from 'vs/platform/label/common/label';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { match } from 'vs/base/common/glob';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\n\nconst resourceLabelFormattersExtPoint = ExtensionsRegistry.registerExtensionPoint<ResourceLabelFormatter[]>({\n\textensionPoint: 'resourceLabelFormatters',\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters', 'Contributes resource label formatting rules.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['scheme', 'formatting'],\n\t\t\tproperties: {\n\t\t\t\tscheme: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.scheme', 'URI scheme on which to match the formatter on. For example \"file\". Simple glob patterns are supported.'),\n\t\t\t\t},\n\t\t\t\tauthority: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.authority', 'URI authority on which to match the formatter on. Simple glob patterns are supported.'),\n\t\t\t\t},\n\t\t\t\tformatting: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.formatting', \"Rules for formatting uri resource labels.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.label', \"Label rules to display. For example: myLabel:/${path}. ${path}, ${scheme} and ${authority} are supported as variables.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseparator: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.separator', \"Separator to be used in the uri label display. '/' or '\\' as an example.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstripPathStartingSeparator: {\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.stripPathStartingSeparator', \"Controls whether `${path}` substitutions should have starting separator characters stripped.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttildify: {\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.tildify', \"Controls if the start of the uri label should be tildified when possible.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tworkspaceSuffix: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.formatting.workspaceSuffix', \"Suffix appended to the workspace label.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nconst sepRegexp = /\\//g;\nconst labelMatchingRegexp = /\\$\\{(scheme|authority|path|(query)\\.(.+?))\\}/g;\n\nfunction hasDriveLetterIgnorePlatform(path: string): boolean {\n\treturn !!(path && path[2] === ':');\n}\n\nclass ResourceLabelFormattersHandler implements IWorkbenchContribution {\n\tprivate formattersDisposables = new Map<ResourceLabelFormatter, IDisposable>();\n\n\tconstructor(@ILabelService labelService: ILabelService) {\n\t\tresourceLabelFormattersExtPoint.setHandler((extensions, delta) => {\n\t\t\tdelta.added.forEach(added => added.value.forEach(formatter => {\n\t\t\t\tthis.formattersDisposables.set(formatter, labelService.registerFormatter(formatter));\n\t\t\t}));\n\t\t\tdelta.removed.forEach(removed => removed.value.forEach(formatter => {\n\t\t\t\tthis.formattersDisposables.get(formatter)!.dispose();\n\t\t\t}));\n\t\t});\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(ResourceLabelFormattersHandler, LifecyclePhase.Restored);\n\nexport class LabelService extends Disposable implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate formatters: ResourceLabelFormatter[] = [];\n\n\tprivate readonly _onDidChangeFormatters = this._register(new Emitter<IFormatterChangeEvent>({ leakWarningThreshold: 400 }));\n\treadonly onDidChangeFormatters = this._onDidChangeFormatters.event;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService\n\t) {\n\t\tsuper();\n\t}\n\n\tfindFormatting(resource: URI): ResourceLabelFormatting | undefined {\n\t\tlet bestResult: ResourceLabelFormatter | undefined;\n\n\t\tthis.formatters.forEach(formatter => {\n\t\t\tif (formatter.scheme === resource.scheme) {\n\t\t\t\tif (!formatter.authority && (!bestResult || formatter.priority)) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!formatter.authority) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (match(formatter.authority.toLowerCase(), resource.authority.toLowerCase()) && (!bestResult || !bestResult.authority || formatter.authority.length > bestResult.authority.length || ((formatter.authority.length === bestResult.authority.length) && formatter.priority))) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn bestResult ? bestResult.formatting : undefined;\n\t}\n\n\tgetUriLabel(resource: URI, options: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean } = {}): string {\n\t\treturn this.doGetUriLabel(resource, this.findFormatting(resource), options);\n\t}\n\n\tprivate doGetUriLabel(resource: URI, formatting?: ResourceLabelFormatting, options: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean } = {}): string {\n\t\tif (!formatting) {\n\t\t\treturn getPathLabel(resource.path, { userHome: this.pathService.resolvedUserHome }, options.relative ? this.contextService : undefined);\n\t\t}\n\n\t\tlet label: string | undefined;\n\t\tconst baseResource = this.contextService?.getWorkspaceFolder(resource);\n\n\t\tif (options.relative && baseResource) {\n\t\t\tconst baseResourceLabel = this.formatUri(baseResource.uri, formatting, options.noPrefix);\n\t\t\tlet relativeLabel = this.formatUri(resource, formatting, options.noPrefix);\n\n\t\t\tlet overlap = 0;\n\t\t\twhile (relativeLabel[overlap] && relativeLabel[overlap] === baseResourceLabel[overlap]) { overlap++; }\n\t\t\tif (!relativeLabel[overlap] || relativeLabel[overlap] === formatting.separator) {\n\t\t\t\trelativeLabel = relativeLabel.substring(1 + overlap);\n\t\t\t} else if (overlap === baseResourceLabel.length && baseResource.uri.path === '/') {\n\t\t\t\trelativeLabel = relativeLabel.substring(overlap);\n\t\t\t}\n\n\t\t\tconst hasMultipleRoots = this.contextService.getWorkspace().folders.length > 1;\n\t\t\tif (hasMultipleRoots && !options.noPrefix) {\n\t\t\t\tconst rootName = baseResource?.name ?? basenameOrAuthority(baseResource.uri);\n\t\t\t\trelativeLabel = relativeLabel ? (rootName + ' • ' + relativeLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\tlabel = relativeLabel;\n\t\t} else {\n\t\t\tlabel = this.formatUri(resource, formatting, options.noPrefix);\n\t\t}\n\n\t\treturn options.endWithSeparator ? this.appendSeparatorIfMissing(label, formatting) : label;\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\tconst formatting = this.findFormatting(resource);\n\t\tconst label = this.doGetUriLabel(resource, formatting);\n\t\tif (formatting) {\n\t\t\tswitch (formatting.separator) {\n\t\t\t\tcase paths.win32.sep: return paths.win32.basename(label);\n\t\t\t\tcase paths.posix.sep: return paths.posix.basename(label);\n\t\t\t}\n\t\t}\n\n\t\treturn paths.basename(label);\n\t}\n\n\tgetWorkspaceLabel(workspace: IWorkspace | IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI, options?: { verbose: boolean }): string {\n\t\tif (isWorkspace(workspace)) {\n\t\t\tconst identifier = toWorkspaceIdentifier(workspace);\n\t\t\tif (identifier) {\n\t\t\t\treturn this.getWorkspaceLabel(identifier, options);\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\n\t\t// Workspace: Single Folder (as URI)\n\t\tif (URI.isUri(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace, options);\n\t\t}\n\n\t\t// Workspace: Single Folder (as workspace identifier)\n\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace.uri, options);\n\t\t}\n\n\t\t// Workspace: Multi Root\n\t\tif (isWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetWorkspaceLabel(workspace.configPath, options);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate doGetWorkspaceLabel(workspaceUri: URI, options?: { verbose: boolean }): string {\n\n\t\t// Workspace: Untitled\n\t\tif (isUntitledWorkspace(workspaceUri, this.environmentService)) {\n\t\t\treturn localize('untitledWorkspace', \"Untitled (Workspace)\");\n\t\t}\n\n\t\t// Workspace: Saved\n\t\tlet filename = basename(workspaceUri);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\n\t\tlet label;\n\t\tif (options?.verbose) {\n\t\t\tlabel = localize('workspaceNameVerbose', \"{0} (Workspace)\", this.getUriLabel(joinPath(dirname(workspaceUri), filename)));\n\t\t} else {\n\t\t\tlabel = localize('workspaceName', \"{0} (Workspace)\", filename);\n\t\t}\n\n\t\treturn this.appendWorkspaceSuffix(label, workspaceUri);\n\t}\n\n\tprivate doGetSingleFolderWorkspaceLabel(folderUri: URI, options?: { verbose: boolean }): string {\n\t\tconst label = options?.verbose ? this.getUriLabel(folderUri) : basename(folderUri) || '/';\n\t\treturn this.appendWorkspaceSuffix(label, folderUri);\n\t}\n\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\t\treturn formatter?.separator || '/';\n\t}\n\n\tgetHostLabel(scheme: string, authority?: string): string {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\t\treturn formatter?.workspaceSuffix || '';\n\t}\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthis.formatters.push(formatter);\n\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.formatters = this.formatters.filter(f => f !== formatter);\n\t\t\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate formatUri(resource: URI, formatting: ResourceLabelFormatting, forceNoTildify?: boolean): string {\n\t\tlet label = formatting.label.replace(labelMatchingRegexp, (match, token, qsToken, qsValue) => {\n\t\t\tswitch (token) {\n\t\t\t\tcase 'scheme': return resource.scheme;\n\t\t\t\tcase 'authority': return resource.authority;\n\t\t\t\tcase 'path':\n\t\t\t\t\treturn formatting.stripPathStartingSeparator\n\t\t\t\t\t\t? resource.path.slice(resource.path[0] === formatting.separator ? 1 : 0)\n\t\t\t\t\t\t: resource.path;\n\t\t\t\tdefault: {\n\t\t\t\t\tif (qsToken === 'query') {\n\t\t\t\t\t\tconst { query } = resource;\n\t\t\t\t\t\tif (query && query[0] === '{' && query[query.length - 1] === '}') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\treturn JSON.parse(query)[qsValue] || '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch { }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// convert \\c:\\something => C:\\something\n\t\tif (formatting.normalizeDriveLetter && hasDriveLetterIgnorePlatform(label)) {\n\t\t\tlabel = label.charAt(1).toUpperCase() + label.substr(2);\n\t\t}\n\n\t\tif (formatting.tildify && !forceNoTildify) {\n\t\t\tconst userHome = this.pathService.resolvedUserHome;\n\t\t\tif (userHome) {\n\t\t\t\tlabel = tildify(label, userHome.fsPath);\n\t\t\t}\n\t\t}\n\t\tif (formatting.authorityPrefix && resource.authority) {\n\t\t\tlabel = formatting.authorityPrefix + label;\n\t\t}\n\n\t\treturn label.replace(sepRegexp, formatting.separator);\n\t}\n\n\tprivate appendSeparatorIfMissing(label: string, formatting: ResourceLabelFormatting): string {\n\t\tlet appendedLabel = label;\n\t\tif (!label.endsWith(formatting.separator)) {\n\t\t\tappendedLabel += formatting.separator;\n\t\t}\n\t\treturn appendedLabel;\n\t}\n\n\tprivate appendWorkspaceSuffix(label: string, uri: URI): string {\n\t\tconst formatting = this.findFormatting(uri);\n\t\tconst suffix = formatting && (typeof formatting.workspaceSuffix === 'string') ? formatting.workspaceSuffix : undefined;\n\t\treturn suffix ? `${label} [${suffix}]` : label;\n\t}\n}\n\nregisterSingleton(ILabelService, LabelService, true);\n"]}