{"version":3,"file":"extensionIgnoredRecommendationsService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensionRecommendations/common/extensionIgnoredRecommendationsService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IExtensionIgnoredRecommendationsService, IgnoredRecommendationChangeNotification } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { IWorkpsaceExtensionsConfigService } from 'vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig';\n\nconst ignoredRecommendationsStorageKey = 'extensionsAssistant/ignored_recommendations';\n\nexport class ExtensionIgnoredRecommendationsService extends Disposable implements IExtensionIgnoredRecommendationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeIgnoredRecommendations = this._register(new Emitter<void>());\n\treadonly onDidChangeIgnoredRecommendations = this._onDidChangeIgnoredRecommendations.event;\n\n\t// Global Ignored Recommendations\n\tprivate _globalIgnoredRecommendations: string[] = [];\n\tget globalIgnoredRecommendations(): string[] { return [...this._globalIgnoredRecommendations]; }\n\tprivate _onDidChangeGlobalIgnoredRecommendation = this._register(new Emitter<IgnoredRecommendationChangeNotification>());\n\treadonly onDidChangeGlobalIgnoredRecommendation = this._onDidChangeGlobalIgnoredRecommendation.event;\n\n\t// Ignored Workspace Recommendations\n\tprivate ignoredWorkspaceRecommendations: string[] = [];\n\n\tget ignoredRecommendations(): string[] { return distinct([...this.globalIgnoredRecommendations, ...this.ignoredWorkspaceRecommendations]); }\n\n\tconstructor(\n\t\t@IWorkpsaceExtensionsConfigService private readonly workpsaceExtensionsConfigService: IWorkpsaceExtensionsConfigService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._globalIgnoredRecommendations = this.getCachedIgnoredRecommendations();\n\t\tthis._register(this.storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\n\t\tthis.initIgnoredWorkspaceRecommendations();\n\t}\n\n\tprivate async initIgnoredWorkspaceRecommendations(): Promise<void> {\n\t\tthis.ignoredWorkspaceRecommendations = await this.workpsaceExtensionsConfigService.getUnwantedRecommendations();\n\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\tthis._register(this.workpsaceExtensionsConfigService.onDidChangeExtensionsConfigs(async () => {\n\t\t\tthis.ignoredWorkspaceRecommendations = await this.workpsaceExtensionsConfigService.getUnwantedRecommendations();\n\t\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\t}));\n\t}\n\n\ttoggleGlobalIgnoredRecommendation(extensionId: string, shouldIgnore: boolean): void {\n\t\textensionId = extensionId.toLowerCase();\n\t\tconst ignored = this._globalIgnoredRecommendations.indexOf(extensionId) !== -1;\n\t\tif (ignored === shouldIgnore) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._globalIgnoredRecommendations = shouldIgnore ? [...this._globalIgnoredRecommendations, extensionId] : this._globalIgnoredRecommendations.filter(id => id !== extensionId);\n\t\tthis.storeCachedIgnoredRecommendations(this._globalIgnoredRecommendations);\n\t\tthis._onDidChangeGlobalIgnoredRecommendation.fire({ extensionId, isRecommended: !shouldIgnore });\n\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t}\n\n\tprivate getCachedIgnoredRecommendations(): string[] {\n\t\tconst ignoredRecommendations: string[] = JSON.parse(this.ignoredRecommendationsValue);\n\t\treturn ignoredRecommendations.map(e => e.toLowerCase());\n\t}\n\n\tprivate onDidStorageChange(e: IStorageValueChangeEvent): void {\n\t\tif (e.key === ignoredRecommendationsStorageKey && e.scope === StorageScope.GLOBAL\n\t\t\t&& this.ignoredRecommendationsValue !== this.getStoredIgnoredRecommendationsValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._ignoredRecommendationsValue = undefined;\n\t\t\tthis._globalIgnoredRecommendations = this.getCachedIgnoredRecommendations();\n\t\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\t}\n\t}\n\n\tprivate storeCachedIgnoredRecommendations(ignoredRecommendations: string[]): void {\n\t\tthis.ignoredRecommendationsValue = JSON.stringify(ignoredRecommendations);\n\t}\n\n\tprivate _ignoredRecommendationsValue: string | undefined;\n\tprivate get ignoredRecommendationsValue(): string {\n\t\tif (!this._ignoredRecommendationsValue) {\n\t\t\tthis._ignoredRecommendationsValue = this.getStoredIgnoredRecommendationsValue();\n\t\t}\n\n\t\treturn this._ignoredRecommendationsValue;\n\t}\n\n\tprivate set ignoredRecommendationsValue(ignoredRecommendationsValue: string) {\n\t\tif (this.ignoredRecommendationsValue !== ignoredRecommendationsValue) {\n\t\t\tthis._ignoredRecommendationsValue = ignoredRecommendationsValue;\n\t\t\tthis.setStoredIgnoredRecommendationsValue(ignoredRecommendationsValue);\n\t\t}\n\t}\n\n\tprivate getStoredIgnoredRecommendationsValue(): string {\n\t\treturn this.storageService.get(ignoredRecommendationsStorageKey, StorageScope.GLOBAL, '[]');\n\t}\n\n\tprivate setStoredIgnoredRecommendationsValue(value: string): void {\n\t\tthis.storageService.store(ignoredRecommendationsStorageKey, value, StorageScope.GLOBAL, StorageTarget.USER);\n\t}\n\n}\n\nregisterSingleton(IExtensionIgnoredRecommendationsService, ExtensionIgnoredRecommendationsService);\n"]}