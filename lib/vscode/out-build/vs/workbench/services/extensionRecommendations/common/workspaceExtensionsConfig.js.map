{"version":3,"sources":["vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig.ts"],"names":[],"mappings":"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","file":"workspaceExtensionsConfig.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct, flatten } from 'vs/base/common/arrays';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { parse } from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { FileKind, IFileService } from 'vs/platform/files/common/files';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isWorkspace, IWorkspace, IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IQuickInputService, IQuickPickItem, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { IJSONEditingService, IJSONValue } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { ResourceMap } from 'vs/base/common/map';\n\nexport const EXTENSIONS_CONFIG = '.vscode/extensions.json';\n\nexport interface IExtensionsConfigContent {\n\trecommendations?: string[];\n\tunwantedRecommendations?: string[];\n}\n\nexport const IWorkpsaceExtensionsConfigService = createDecorator<IWorkpsaceExtensionsConfigService>('IWorkpsaceExtensionsConfigService');\n\nexport interface IWorkpsaceExtensionsConfigService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeExtensionsConfigs: Event<void>;\n\tgetExtensionsConfigs(): Promise<IExtensionsConfigContent[]>;\n\tgetRecommendations(): Promise<string[]>;\n\tgetUnwantedRecommendations(): Promise<string[]>;\n\n\ttoggleRecommendation(extensionId: string): Promise<void>;\n\ttoggleUnwantedRecommendation(extensionId: string): Promise<void>;\n}\n\nexport class WorkspaceExtensionsConfigService extends Disposable implements IWorkpsaceExtensionsConfigService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeExtensionsConfigs = this._register(new Emitter<void>());\n\treadonly onDidChangeExtensionsConfigs = this._onDidChangeExtensionsConfigs.event;\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IJSONEditingService private readonly jsonEditingService: IJSONEditingService,\n\t) {\n\t\tsuper();\n\t\tthis._register(workspaceContextService.onDidChangeWorkspaceFolders(e => this._onDidChangeExtensionsConfigs.fire()));\n\t\tthis._register(fileService.onDidFilesChange(e => {\n\t\t\tconst workspace = workspaceContextService.getWorkspace();\n\t\t\tif ((workspace.configuration && e.affects(workspace.configuration))\n\t\t\t\t|| workspace.folders.some(folder => e.affects(folder.toResource(EXTENSIONS_CONFIG)))\n\t\t\t) {\n\t\t\t\tthis._onDidChangeExtensionsConfigs.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync getExtensionsConfigs(): Promise<IExtensionsConfigContent[]> {\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst result: IExtensionsConfigContent[] = [];\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration ? await this.resolveWorkspaceExtensionConfig(workspace.configuration) : undefined;\n\t\tif (workspaceExtensionsConfigContent) {\n\t\t\tresult.push(workspaceExtensionsConfigContent);\n\t\t}\n\t\tresult.push(...await Promise.all(workspace.folders.map(workspaceFolder => this.resolveWorkspaceFolderExtensionConfig(workspaceFolder))));\n\t\treturn result;\n\t}\n\n\tasync getRecommendations(): Promise<string[]> {\n\t\tconst configs = await this.getExtensionsConfigs();\n\t\treturn distinct(flatten(configs.map(c => c.recommendations ? c.recommendations.map(c => c.toLowerCase()) : [])));\n\t}\n\n\tasync getUnwantedRecommendations(): Promise<string[]> {\n\t\tconst configs = await this.getExtensionsConfigs();\n\t\treturn distinct(flatten(configs.map(c => c.unwantedRecommendations ? c.unwantedRecommendations.map(c => c.toLowerCase()) : [])));\n\t}\n\n\tasync toggleRecommendation(extensionId: string): Promise<void> {\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration ? await this.resolveWorkspaceExtensionConfig(workspace.configuration) : undefined;\n\t\tconst workspaceFolderExtensionsConfigContents = new ResourceMap<IExtensionsConfigContent>();\n\t\tawait Promise.all(workspace.folders.map(async workspaceFolder => {\n\t\t\tconst extensionsConfigContent = await this.resolveWorkspaceFolderExtensionConfig(workspaceFolder);\n\t\t\tworkspaceFolderExtensionsConfigContents.set(workspaceFolder.uri, extensionsConfigContent);\n\t\t}));\n\n\t\tconst isWorkspaceRecommended = workspaceExtensionsConfigContent && workspaceExtensionsConfigContent.recommendations?.some(r => r === extensionId);\n\t\tconst recommendedWorksapceFolders = workspace.folders.filter(workspaceFolder => workspaceFolderExtensionsConfigContents.get(workspaceFolder.uri)?.recommendations?.some(r => r === extensionId));\n\t\tconst isRecommended = isWorkspaceRecommended || recommendedWorksapceFolders.length > 0;\n\n\t\tconst workspaceOrFolders = isRecommended\n\t\t\t? await this.pickWorkspaceOrFolders(recommendedWorksapceFolders, isWorkspaceRecommended ? workspace : undefined, localize('select for remove', \"Remove extension recommendation from\"))\n\t\t\t: await this.pickWorkspaceOrFolders(workspace.folders, workspace.configuration ? workspace : undefined, localize('select for add', \"Add extension recommendation to\"));\n\n\t\tfor (const workspaceOrWorkspaceFolder of workspaceOrFolders) {\n\t\t\tif (isWorkspace(workspaceOrWorkspaceFolder)) {\n\t\t\t\tawait this.addOrRemoveWorkspaceRecommendation(extensionId, workspaceOrWorkspaceFolder, workspaceExtensionsConfigContent, !isRecommended);\n\t\t\t} else {\n\t\t\t\tawait this.addOrRemoveWorkspaceFolderRecommendation(extensionId, workspaceOrWorkspaceFolder, workspaceFolderExtensionsConfigContents.get(workspaceOrWorkspaceFolder.uri)!, !isRecommended);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync toggleUnwantedRecommendation(extensionId: string): Promise<void> {\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration ? await this.resolveWorkspaceExtensionConfig(workspace.configuration) : undefined;\n\t\tconst workspaceFolderExtensionsConfigContents = new ResourceMap<IExtensionsConfigContent>();\n\t\tawait Promise.all(workspace.folders.map(async workspaceFolder => {\n\t\t\tconst extensionsConfigContent = await this.resolveWorkspaceFolderExtensionConfig(workspaceFolder);\n\t\t\tworkspaceFolderExtensionsConfigContents.set(workspaceFolder.uri, extensionsConfigContent);\n\t\t}));\n\n\t\tconst isWorkspaceUnwanted = workspaceExtensionsConfigContent && workspaceExtensionsConfigContent.unwantedRecommendations?.some(r => r === extensionId);\n\t\tconst unWantedWorksapceFolders = workspace.folders.filter(workspaceFolder => workspaceFolderExtensionsConfigContents.get(workspaceFolder.uri)?.unwantedRecommendations?.some(r => r === extensionId));\n\t\tconst isUnwanted = isWorkspaceUnwanted || unWantedWorksapceFolders.length > 0;\n\n\t\tconst workspaceOrFolders = isUnwanted\n\t\t\t? await this.pickWorkspaceOrFolders(unWantedWorksapceFolders, isWorkspaceUnwanted ? workspace : undefined, localize('select for remove', \"Remove extension recommendation from\"))\n\t\t\t: await this.pickWorkspaceOrFolders(workspace.folders, workspace.configuration ? workspace : undefined, localize('select for add', \"Add extension recommendation to\"));\n\n\t\tfor (const workspaceOrWorkspaceFolder of workspaceOrFolders) {\n\t\t\tif (isWorkspace(workspaceOrWorkspaceFolder)) {\n\t\t\t\tawait this.addOrRemoveWorkspaceUnwantedRecommendation(extensionId, workspaceOrWorkspaceFolder, workspaceExtensionsConfigContent, !isUnwanted);\n\t\t\t} else {\n\t\t\t\tawait this.addOrRemoveWorkspaceFolderUnwantedRecommendation(extensionId, workspaceOrWorkspaceFolder, workspaceFolderExtensionsConfigContents.get(workspaceOrWorkspaceFolder.uri)!, !isUnwanted);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceFolderRecommendation(extensionId: string, workspaceFolder: IWorkspaceFolder, extensionsConfigContent: IExtensionsConfigContent, add: boolean): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (add) {\n\t\t\tvalues.push({ path: ['recommendations'], value: [...extensionsConfigContent.recommendations || [], extensionId] });\n\t\t\tif (extensionsConfigContent.unwantedRecommendations && extensionsConfigContent.unwantedRecommendations.some(e => e === extensionId)) {\n\t\t\t\tvalues.push({ path: ['unwantedRecommendations'], value: extensionsConfigContent.unwantedRecommendations.filter(e => e !== extensionId) });\n\t\t\t}\n\t\t} else if (extensionsConfigContent.recommendations) {\n\t\t\tvalues.push({ path: ['recommendations'], value: extensionsConfigContent.recommendations.filter(e => e !== extensionId) });\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(workspaceFolder.toResource(EXTENSIONS_CONFIG), values, true);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceRecommendation(extensionId: string, workspace: IWorkspace, extensionsConfigContent: IExtensionsConfigContent | undefined, add: boolean): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (extensionsConfigContent) {\n\t\t\tif (add) {\n\t\t\t\tvalues.push({ path: ['extensions', 'recommendations'], value: [...extensionsConfigContent.recommendations || [], extensionId] });\n\t\t\t\tif (extensionsConfigContent.unwantedRecommendations && extensionsConfigContent.unwantedRecommendations.some(e => e === extensionId)) {\n\t\t\t\t\tvalues.push({ path: ['extensions', 'unwantedRecommendations'], value: extensionsConfigContent.unwantedRecommendations.filter(e => e !== extensionId) });\n\t\t\t\t}\n\t\t\t} else if (extensionsConfigContent.recommendations) {\n\t\t\t\tvalues.push({ path: ['extensions', 'recommendations'], value: extensionsConfigContent.recommendations.filter(e => e !== extensionId) });\n\t\t\t}\n\t\t} else if (add) {\n\t\t\tvalues.push({ path: ['extensions'], value: { recommendations: [extensionId] } });\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(workspace.configuration!, values, true);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceFolderUnwantedRecommendation(extensionId: string, workspaceFolder: IWorkspaceFolder, extensionsConfigContent: IExtensionsConfigContent, add: boolean): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (add) {\n\t\t\tvalues.push({ path: ['unwantedRecommendations'], value: [...extensionsConfigContent.unwantedRecommendations || [], extensionId] });\n\t\t\tif (extensionsConfigContent.recommendations && extensionsConfigContent.recommendations.some(e => e === extensionId)) {\n\t\t\t\tvalues.push({ path: ['recommendations'], value: extensionsConfigContent.recommendations.filter(e => e !== extensionId) });\n\t\t\t}\n\t\t} else if (extensionsConfigContent.unwantedRecommendations) {\n\t\t\tvalues.push({ path: ['unwantedRecommendations'], value: extensionsConfigContent.unwantedRecommendations.filter(e => e !== extensionId) });\n\t\t}\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(workspaceFolder.toResource(EXTENSIONS_CONFIG), values, true);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceUnwantedRecommendation(extensionId: string, workspace: IWorkspace, extensionsConfigContent: IExtensionsConfigContent | undefined, add: boolean): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (extensionsConfigContent) {\n\t\t\tif (add) {\n\t\t\t\tvalues.push({ path: ['extensions', 'unwantedRecommendations'], value: [...extensionsConfigContent.unwantedRecommendations || [], extensionId] });\n\t\t\t\tif (extensionsConfigContent.recommendations && extensionsConfigContent.recommendations.some(e => e === extensionId)) {\n\t\t\t\t\tvalues.push({ path: ['extensions', 'recommendations'], value: extensionsConfigContent.recommendations.filter(e => e !== extensionId) });\n\t\t\t\t}\n\t\t\t} else if (extensionsConfigContent.unwantedRecommendations) {\n\t\t\t\tvalues.push({ path: ['extensions', 'unwantedRecommendations'], value: extensionsConfigContent.unwantedRecommendations.filter(e => e !== extensionId) });\n\t\t\t}\n\t\t} else if (add) {\n\t\t\tvalues.push({ path: ['extensions'], value: { unwantedRecommendations: [extensionId] } });\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(workspace.configuration!, values, true);\n\t\t}\n\t}\n\n\tprivate async pickWorkspaceOrFolders(workspaceFolders: IWorkspaceFolder[], workspace: IWorkspace | undefined, placeHolder: string): Promise<(IWorkspace | IWorkspaceFolder)[]> {\n\t\tconst workspaceOrFolders = workspace ? [...workspaceFolders, workspace] : [...workspaceFolders];\n\t\tif (workspaceOrFolders.length === 1) {\n\t\t\treturn workspaceOrFolders;\n\t\t}\n\n\t\tconst folderPicks: (IQuickPickItem & { workspaceOrFolder: IWorkspace | IWorkspaceFolder } | IQuickPickSeparator)[] = workspaceFolders.map(workspaceFolder => {\n\t\t\treturn {\n\t\t\t\tlabel: workspaceFolder.name,\n\t\t\t\tdescription: localize('workspace folder', \"Workspace Folder\"),\n\t\t\t\tworkspaceOrFolder: workspaceFolder,\n\t\t\t\ticonClasses: getIconClasses(this.modelService, this.modeService, workspaceFolder.uri, FileKind.ROOT_FOLDER)\n\t\t\t};\n\t\t});\n\n\t\tif (workspace) {\n\t\t\tfolderPicks.push({ type: 'separator' });\n\t\t\tfolderPicks.push({\n\t\t\t\tlabel: localize('workspace', \"Workspace\"),\n\t\t\t\tworkspaceOrFolder: workspace,\n\t\t\t});\n\t\t}\n\n\t\tconst result = await this.quickInputService.pick(folderPicks, { placeHolder, canPickMany: true }) || [];\n\t\treturn result.map(r => r.workspaceOrFolder!);\n\t}\n\n\tprivate async resolveWorkspaceExtensionConfig(workspaceConfigurationResource: URI): Promise<IExtensionsConfigContent | undefined> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(workspaceConfigurationResource);\n\t\t\tconst extensionsConfigContent = <IExtensionsConfigContent | undefined>parse(content.value.toString())['extensions'];\n\t\t\treturn extensionsConfigContent ? this.parseExtensionConfig(extensionsConfigContent) : undefined;\n\t\t} catch (e) { /* Ignore */ }\n\t\treturn undefined;\n\t}\n\n\tprivate async resolveWorkspaceFolderExtensionConfig(workspaceFolder: IWorkspaceFolder): Promise<IExtensionsConfigContent> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(workspaceFolder.toResource(EXTENSIONS_CONFIG));\n\t\t\tconst extensionsConfigContent = <IExtensionsConfigContent>parse(content.value.toString());\n\t\t\treturn this.parseExtensionConfig(extensionsConfigContent);\n\t\t} catch (e) { /* ignore */ }\n\t\treturn {};\n\t}\n\n\tprivate parseExtensionConfig(extensionsConfigContent: IExtensionsConfigContent): IExtensionsConfigContent {\n\t\treturn {\n\t\t\trecommendations: distinct((extensionsConfigContent.recommendations || []).map(e => e.toLowerCase())),\n\t\t\tunwantedRecommendations: distinct((extensionsConfigContent.unwantedRecommendations || []).map(e => e.toLowerCase()))\n\t\t};\n\t}\n\n}\n\nregisterSingleton(IWorkpsaceExtensionsConfigService, WorkspaceExtensionsConfigService);\n"]}