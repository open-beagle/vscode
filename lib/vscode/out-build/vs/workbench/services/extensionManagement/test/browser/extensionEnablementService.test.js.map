{"version":3,"file":"extensionEnablementService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { IExtensionManagementService, DidUninstallExtensionEvent, ILocalExtension, DidInstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionEnablementService } from 'vs/workbench/services/extensionManagement/browser/extensionEnablementService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { Emitter } from 'vs/base/common/event';\nimport { IWorkspace, IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IStorageService, InMemoryStorageService } from 'vs/platform/storage/common/storage';\nimport { IExtensionContributions, ExtensionType, IExtension, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestLifecycleService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { GlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { IUserDataSyncAccountService, UserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IUserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { mock } from 'vs/base/test/common/mock';\nimport { IExtensionBisectService } from 'vs/workbench/services/extensionManagement/browser/extensionBisect';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService, WorkspaceTrustRequestOptions } from 'vs/platform/workspace/common/workspaceTrust';\nimport { TestWorkspaceTrustManagementService } from 'vs/workbench/services/workspaces/test/common/testWorkspaceTrustService';\nimport { ExtensionManifestPropertiesService, IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { TestContextService, TestProductService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { TestWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\n\nfunction createStorageService(instantiationService: TestInstantiationService): IStorageService {\n\tlet service = instantiationService.get(IStorageService);\n\tif (!service) {\n\t\tlet workspaceContextService = instantiationService.get(IWorkspaceContextService);\n\t\tif (!workspaceContextService) {\n\t\t\tworkspaceContextService = instantiationService.stub(IWorkspaceContextService, <IWorkspaceContextService>{\n\t\t\t\tgetWorkbenchState: () => WorkbenchState.FOLDER,\n\t\t\t\tgetWorkspace: () => TestWorkspace as IWorkspace\n\t\t\t});\n\t\t}\n\t\tservice = instantiationService.stub(IStorageService, new InMemoryStorageService());\n\t}\n\treturn service;\n}\n\nexport class TestExtensionEnablementService extends ExtensionEnablementService {\n\tconstructor(instantiationService: TestInstantiationService) {\n\t\tconst storageService = createStorageService(instantiationService);\n\t\tconst extensionManagementService = instantiationService.get(IExtensionManagementService) || instantiationService.stub(IExtensionManagementService, { onDidInstallExtension: new Emitter<DidInstallExtensionEvent>().event, onDidUninstallExtension: new Emitter<DidUninstallExtensionEvent>().event } as IExtensionManagementService);\n\t\tconst extensionManagementServerService = instantiationService.get(IExtensionManagementServerService) || instantiationService.stub(IExtensionManagementServerService, <IExtensionManagementServerService>{ localExtensionManagementServer: { extensionManagementService } });\n\t\tsuper(\n\t\t\tstorageService,\n\t\t\tnew GlobalExtensionEnablementService(storageService),\n\t\t\tinstantiationService.get(IWorkspaceContextService) || new TestContextService(),\n\t\t\tinstantiationService.get(IWorkbenchEnvironmentService) || instantiationService.stub(IWorkbenchEnvironmentService, { configuration: Object.create(null) } as IWorkbenchEnvironmentService),\n\t\t\textensionManagementService,\n\t\t\tinstantiationService.get(IConfigurationService),\n\t\t\textensionManagementServerService,\n\t\t\tinstantiationService.get(IUserDataAutoSyncEnablementService) || instantiationService.stub(IUserDataAutoSyncEnablementService, <Partial<IUserDataAutoSyncEnablementService>>{ isEnabled() { return false; } }),\n\t\t\tinstantiationService.get(IUserDataSyncAccountService) || instantiationService.stub(IUserDataSyncAccountService, UserDataSyncAccountService),\n\t\t\tinstantiationService.get(ILifecycleService) || instantiationService.stub(ILifecycleService, new TestLifecycleService()),\n\t\t\tinstantiationService.get(INotificationService) || instantiationService.stub(INotificationService, new TestNotificationService()),\n\t\t\tinstantiationService.get(IHostService),\n\t\t\tnew class extends mock<IExtensionBisectService>() { override isDisabledByBisect() { return false; } },\n\t\t\tinstantiationService.get(IWorkspaceTrustManagementService) || instantiationService.stub(IWorkspaceTrustManagementService, new TestWorkspaceTrustManagementService()),\n\t\t\tnew class extends mock<IWorkspaceTrustRequestService>() { override requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean> { return Promise.resolve(true); } },\n\t\t\tinstantiationService.get(IExtensionManifestPropertiesService) || instantiationService.stub(IExtensionManifestPropertiesService, new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService()))\n\t\t);\n\t}\n\n\tpublic reset(): void {\n\t\tlet extensions = this.globalExtensionEnablementService.getDisabledExtensions();\n\t\tfor (const e of this._getWorkspaceDisabledExtensions()) {\n\t\t\tif (!extensions.some(r => areSameExtensions(r, e))) {\n\t\t\t\textensions.push(e);\n\t\t\t}\n\t\t}\n\t\tconst workspaceEnabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tif (workspaceEnabledExtensions.length) {\n\t\t\textensions = extensions.filter(r => !workspaceEnabledExtensions.some(e => areSameExtensions(e, r)));\n\t\t}\n\t\textensions.forEach(d => this.setEnablement([aLocalExtension(d.id)], EnablementState.EnabledGlobally));\n\t}\n}\n\nsuite('ExtensionEnablementService Test', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet testObject: IWorkbenchExtensionEnablementService;\n\n\tconst didInstallEvent = new Emitter<DidInstallExtensionEvent>();\n\tconst didUninstallEvent = new Emitter<DidUninstallExtensionEvent>();\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\t\tonDidInstallExtension: didInstallEvent.event,\n\t\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\t\tgetInstalled: () => Promise.resolve([] as ILocalExtension[])\n\t\t});\n\t\tinstantiationService.stub(IExtensionManagementServerService, <IExtensionManagementServerService>{\n\t\t\tlocalExtensionManagementServer: {\n\t\t\t\textensionManagementService: instantiationService.get(IExtensionManagementService)\n\t\t\t}\n\t\t});\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t});\n\n\tteardown(() => {\n\t\t(<ExtensionEnablementService>testObject).dispose();\n\t});\n\n\ttest('test disable an extension globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledGlobally);\n\t});\n\n\ttest('test disable an extension globally should return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension globally triggers the change event', () => {\n\t\tconst target = sinon.spy();\n\t\ttestObject.onEnablementChanged(target);\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test disable an extension globally again should return a falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test state of globally disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of globally enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test disable an extension for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('test disable an extension for workspace returns a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension for workspace again should return a falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test state of workspace disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of workspace and globally disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of workspace enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledWorkspace));\n\t});\n\n\ttest('test state of globally disabled and workspace enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledWorkspace));\n\t});\n\n\ttest('test state of an extension when disabled for workspace from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of an extension when disabled globally from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of an extension when disabled globally from workspace disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of an extension when enabled globally from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test state of an extension when enabled globally from workspace disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test disable an extension for workspace and then globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledGlobally);\n\t});\n\n\ttest('test disable an extension for workspace and then globally return a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension for workspace and then globally trigger the change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.onEnablementChanged(target))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test disable an extension globally and then for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('test disable an extension globally and then for workspace return a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension globally and then for workspace triggers the change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.onEnablementChanged(target))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test disable an extension for workspace when there is no workspace throws error', () => {\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkbenchState', WorkbenchState.EMPTY);\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.fail('should throw an error'), error => assert.ok(error));\n\t});\n\n\ttest('test enable an extension globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable an extension globally return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test enable an extension globally triggers change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.onEnablementChanged(target))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test enable an extension globally when already enabled return falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally)\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test enable an extension for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test enable an extension for workspace return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test enable an extension for workspace triggers change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.b')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.onEnablementChanged(target))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.b')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.b' });\n\t\t\t});\n\t});\n\n\ttest('test enable an extension for workspace when already enabled return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test enable an extension for workspace when disabled in workspace and gloablly', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test enable an extension globally when disabled in workspace and gloablly', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test remove an extension from disablement list when uninstalled', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tdidUninstallEvent.fire({ identifier: { id: 'pub.a' } });\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test isEnabled return false extension is disabled globally', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => assert.ok(!testObject.isEnabled(aLocalExtension('pub.a'))));\n\t});\n\n\ttest('test isEnabled return false extension is disabled in workspace', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.ok(!testObject.isEnabled(aLocalExtension('pub.a'))));\n\t});\n\n\ttest('test isEnabled return true extension is not disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.c')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.ok(testObject.isEnabled(aLocalExtension('pub.b'))));\n\t});\n\n\ttest('test canChangeEnablement return false for language packs', () => {\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { localizations: [{ languageId: 'gr', translations: [{ id: 'vscode', path: 'path' }] }] })), false);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension', () => {\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension when user data sync account does not depends on it', () => {\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'b' }\n\t\t});\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension when user data sync account depends on it but auto sync is off', () => {\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'a' }\n\t\t});\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return false for auth extension and user data sync account depends on it and auto sync is on', () => {\n\t\tinstantiationService.stub(IUserDataAutoSyncEnablementService, <Partial<IUserDataAutoSyncEnablementService>>{ isEnabled() { return true; } });\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'a' }\n\t\t});\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), false);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return true', () => {\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a')), true);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return false if there is no workspace', () => {\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkbenchState', WorkbenchState.EMPTY);\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return false for auth extension', () => {\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), false);\n\t});\n\n\ttest('test canChangeEnablement return false when extensions are disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: true } as IWorkbenchEnvironmentService);\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeEnablement return false when the extension is disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] } as IWorkbenchEnvironmentService);\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeEnablement return true for system extensions when extensions are disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: true } as IWorkbenchEnvironmentService);\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tconst extension = aLocalExtension('pub.a', undefined, ExtensionType.System);\n\t\tassert.strictEqual(testObject.canChangeEnablement(extension), true);\n\t});\n\n\ttest('test canChangeEnablement return false for system extension when extension is disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] } as IWorkbenchEnvironmentService);\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tconst extension = aLocalExtension('pub.a', undefined, ExtensionType.System);\n\t\tassert.ok(!testObject.canChangeEnablement(extension));\n\t});\n\n\ttest('test extension is disabled when disabled in environment', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] } as IWorkbenchEnvironmentService);\n\t\tinstantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\t\tonDidInstallExtension: didInstallEvent.event,\n\t\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\t\tgetInstalled: () => Promise.resolve([extension, aLocalExtension('pub.b')])\n\t\t});\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByEnvironment);\n\t});\n\n\ttest('test extension does not support vitrual workspace is not enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByVirtualWorkspace);\n\t});\n\n\ttest('test canChangeEnablement return false when extension is disabled in virtual workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.canChangeEnablement(extension));\n\t});\n\n\ttest('test extension does not support vitrual workspace is enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA') }] });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension supports virtual workspace is enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: true } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension without any value for virtual worksapce is enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a');\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test local workspace extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test local workspace + ui extension is enabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test local ui extension is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return false when the local workspace extension is disabled by kind', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), false);\n\t});\n\n\ttest('test canChangeEnablement return true for local ui extension', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), true);\n\t});\n\n\ttest('test remote ui extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test remote ui+workspace extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test remote ui extension is disabled by kind when there is no local server', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(null, anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test remote workspace extension is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return false when the remote ui extension is disabled by kind', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), false);\n\t});\n\n\ttest('test canChangeEnablement return true for remote workspace extension', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), true);\n\t});\n\n\ttest('test web extension on local server is disabled by kind when web worker is not enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['web'] }, { location: URI.file(`pub.a`) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: false });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on local server is not disabled by kind when web worker is enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['web'] }, { location: URI.file(`pub.a`) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: true });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), true);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test web extension on remote server is disabled by kind when web worker is not enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['web'] }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: false });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on remote server is disabled by kind when web worker is enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['web'] }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: true });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on web server is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst webExtension = aLocalExtension2('pub.a', { extensionKind: ['web'] }, { location: URI.file(`pub.a`).with({ scheme: 'web' }) });\n\t\ttestObject = new TestExtensionEnablementService(instantiationService);\n\t\tassert.strictEqual(testObject.isEnabled(webExtension), true);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(webExtension), EnablementState.EnabledGlobally);\n\t});\n\n});\n\nfunction anExtensionManagementServer(authority: string, instantiationService: TestInstantiationService): IExtensionManagementServer {\n\treturn {\n\t\tid: authority,\n\t\tlabel: authority,\n\t\textensionManagementService: instantiationService.get(IExtensionManagementService)\n\t};\n}\n\nfunction aMultiExtensionManagementServerService(instantiationService: TestInstantiationService): IExtensionManagementServerService {\n\tconst localExtensionManagementServer = anExtensionManagementServer('vscode-local', instantiationService);\n\tconst remoteExtensionManagementServer = anExtensionManagementServer('vscode-remote', instantiationService);\n\treturn anExtensionManagementServerService(localExtensionManagementServer, remoteExtensionManagementServer, null);\n}\n\nfunction anExtensionManagementServerService(localExtensionManagementServer: IExtensionManagementServer | null, remoteExtensionManagementServer: IExtensionManagementServer | null, webExtensionManagementServer: IExtensionManagementServer | null): IExtensionManagementServerService {\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tlocalExtensionManagementServer,\n\t\tremoteExtensionManagementServer,\n\t\twebExtensionManagementServer,\n\t\tgetExtensionManagementServer: (extension: IExtension) => {\n\t\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\t\treturn localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\t\treturn remoteExtensionManagementServer;\n\t\t\t}\n\t\t\treturn webExtensionManagementServer;\n\t\t}\n\t};\n}\n\nfunction aLocalExtension(id: string, contributes?: IExtensionContributions, type?: ExtensionType): ILocalExtension {\n\treturn aLocalExtension2(id, contributes ? { contributes } : {}, isUndefinedOrNull(type) ? {} : { type });\n}\n\nfunction aLocalExtension2(id: string, manifest: Partial<IExtensionManifest> = {}, properties: any = {}): ILocalExtension {\n\tconst [publisher, name] = id.split('.');\n\tmanifest = { name, publisher, ...manifest };\n\tproperties = {\n\t\tidentifier: { id },\n\t\tgalleryIdentifier: { id, uuid: undefined },\n\t\ttype: ExtensionType.User,\n\t\t...properties\n\t};\n\tproperties.isBuiltin = properties.type === ExtensionType.System;\n\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n}\n"]}