{"version":3,"sources":["vs/workbench/services/extensionManagement/common/extensionManagementService.ts"],"names":[],"mappings":"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","file":"extensionManagementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, EventMultiplexer } from 'vs/base/common/event';\nimport {\n\tILocalExtension, IGalleryExtension, InstallExtensionEvent, DidInstallExtensionEvent, IExtensionIdentifier, DidUninstallExtensionEvent, IReportedExtension, IGalleryMetadata, IExtensionGalleryService, InstallOptions, UninstallOptions, INSTALL_ERROR_NOT_SUPPORTED\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IExtensionManagementServer, IExtensionManagementServerService, IWorkbenchExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionType, isLanguagePackExtension, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { canceled } from 'vs/base/common/errors';\nimport { IUserDataAutoSyncEnablementService, IUserDataSyncResourceEnablementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { isWeb } from 'vs/base/common/platform';\nimport { Promises } from 'vs/base/common/async';\nimport { IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\n\nexport class ExtensionManagementService extends Disposable implements IWorkbenchExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onInstallExtension: Event<InstallExtensionEvent>;\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent>;\n\treadonly onUninstallExtension: Event<IExtensionIdentifier>;\n\treadonly onDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tprotected readonly servers: IExtensionManagementServer[] = [];\n\n\tconstructor(\n\t\t@IExtensionManagementServerService protected readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IDownloadService protected readonly downloadService: IDownloadService,\n\t\t@IUserDataAutoSyncEnablementService private readonly userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService,\n\t\t@IUserDataSyncResourceEnablementService private readonly userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper();\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.remoteExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.webExtensionManagementServer);\n\t\t}\n\n\t\tthis.onInstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<InstallExtensionEvent>, server) => { emitter.add(server.extensionManagementService.onInstallExtension); return emitter; }, new EventMultiplexer<InstallExtensionEvent>())).event;\n\t\tthis.onDidInstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<DidInstallExtensionEvent>, server) => { emitter.add(server.extensionManagementService.onDidInstallExtension); return emitter; }, new EventMultiplexer<DidInstallExtensionEvent>())).event;\n\t\tthis.onUninstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<IExtensionIdentifier>, server) => { emitter.add(server.extensionManagementService.onUninstallExtension); return emitter; }, new EventMultiplexer<IExtensionIdentifier>())).event;\n\t\tthis.onDidUninstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<DidUninstallExtensionEvent>, server) => { emitter.add(server.extensionManagementService.onDidUninstallExtension); return emitter; }, new EventMultiplexer<DidUninstallExtensionEvent>())).event;\n\t}\n\n\tasync getInstalled(type?: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst result = await Promise.all(this.servers.map(({ extensionManagementService }) => extensionManagementService.getInstalled(type)));\n\t\treturn flatten(result);\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\t\tif (this.servers.length > 1) {\n\t\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\t\treturn this.uninstallEverywhere(extension);\n\t\t\t}\n\t\t\treturn this.uninstallInServer(extension, server, options);\n\t\t}\n\t\treturn server.extensionManagementService.uninstall(extension);\n\t}\n\n\tprivate async uninstallEverywhere(extension: ILocalExtension): Promise<void> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\t\tconst promise = server.extensionManagementService.uninstall(extension);\n\t\tconst otherServers: IExtensionManagementServer[] = this.servers.filter(s => s !== server);\n\t\tif (otherServers.length) {\n\t\t\tfor (const otherServer of otherServers) {\n\t\t\t\tconst installed = await otherServer.extensionManagementService.getInstalled();\n\t\t\t\textension = installed.filter(i => !i.isBuiltin && areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\tawait otherServer.extensionManagementService.uninstall(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async uninstallInServer(extension: ILocalExtension, server: IExtensionManagementServer, options?: UninstallOptions): Promise<void> {\n\t\tif (server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tconst installedExtensions = await this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst dependentNonUIExtensions = installedExtensions.filter(i => !this.extensionManifestPropertiesService.prefersExecuteOnUI(i.manifest)\n\t\t\t\t&& i.manifest.extensionDependencies && i.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t\t\tif (dependentNonUIExtensions.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, dependentNonUIExtensions)));\n\t\t\t}\n\t\t}\n\t\treturn server.extensionManagementService.uninstall(extension, options);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\tawait this.checkForWorkspaceTrust(extension.manifest);\n\t\t\treturn server.extensionManagementService.reinstallFromGallery(extension);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tupdateMetadata(extension: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.updateMetadata(extension, metadata);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tupdateExtensionScope(extension: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.updateExtensionScope(extension, isMachineScoped);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.zip(extension);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promises.settled(this.servers\n\t\t\t// Filter out web server\n\t\t\t.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer)\n\t\t\t.map(({ extensionManagementService }) => extensionManagementService.unzip(zipLocation))).then(([extensionIdentifier]) => extensionIdentifier);\n\t}\n\n\tasync install(vsix: URI): Promise<ILocalExtension> {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tconst manifest = await this.getManifest(vsix);\n\t\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\t\t// Install on both servers\n\t\t\t\tconst [local] = await Promises.settled([this.extensionManagementServerService.localExtensionManagementServer, this.extensionManagementServerService.remoteExtensionManagementServer].map(server => this.installVSIX(vsix, server)));\n\t\t\t\treturn local;\n\t\t\t}\n\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnUI(manifest)) {\n\t\t\t\t// Install only on local server\n\t\t\t\treturn this.installVSIX(vsix, this.extensionManagementServerService.localExtensionManagementServer);\n\t\t\t}\n\t\t\t// Install only on remote server\n\t\t\treturn this.installVSIX(vsix, this.extensionManagementServerService.remoteExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.installVSIX(vsix, this.extensionManagementServerService.localExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.installVSIX(vsix, this.extensionManagementServerService.remoteExtensionManagementServer);\n\t\t}\n\t\treturn Promise.reject('No Servers to Install');\n\t}\n\n\tprotected async installVSIX(vsix: URI, server: IExtensionManagementServer): Promise<ILocalExtension> {\n\t\tconst manifest = await this.getManifest(vsix);\n\t\tif (manifest) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest);\n\t\t\treturn server.extensionManagementService.install(vsix);\n\t\t}\n\t\treturn Promise.reject('Unable to get the extension manifest.');\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tif (vsix.scheme === Schemas.file && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getManifest(vsix);\n\t\t}\n\t\tif (vsix.scheme === Schemas.vscodeRemote && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getManifest(vsix);\n\t\t}\n\t\treturn Promise.reject('No Servers');\n\t}\n\n\tasync canInstall(gallery: IGalleryExtension): Promise<boolean> {\n\t\tfor (const server of this.servers) {\n\t\t\tif (await server.extensionManagementService.canInstall(gallery)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync updateFromGallery(gallery: IGalleryExtension, extension: ILocalExtension): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Update Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\tservers.push(...this.servers.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer));\n\t\t} else {\n\t\t\tservers.push(server);\n\t\t}\n\n\t\treturn Promises.settled(servers.map(server => server.extensionManagementService.installFromGallery(gallery))).then(([local]) => local);\n\t}\n\n\tasync installExtensions(extensions: IGalleryExtension[], installOptions?: InstallOptions): Promise<ILocalExtension[]> {\n\t\tif (!installOptions) {\n\t\t\tconst isMachineScoped = await this.hasToFlagExtensionsMachineScoped(extensions);\n\t\t\tinstallOptions = { isMachineScoped, isBuiltin: false };\n\t\t}\n\t\treturn Promises.settled(extensions.map(extension => this.installFromGallery(extension, installOptions)));\n\t}\n\n\tasync installFromGallery(gallery: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\n\t\tconst manifest = await this.extensionGalleryService.getManifest(gallery, CancellationToken.None);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject(localize('Manifest is not found', \"Installing Extension {0} failed: Manifest is not found.\", gallery.displayName || gallery.name));\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Install Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\tservers.push(...this.servers.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer));\n\t\t} else {\n\t\t\tconst server = this.getExtensionManagementServerToInstall(manifest);\n\t\t\tif (server) {\n\t\t\t\tservers.push(server);\n\t\t\t}\n\t\t}\n\n\t\tif (servers.length) {\n\t\t\tif (!installOptions) {\n\t\t\t\tconst isMachineScoped = await this.hasToFlagExtensionsMachineScoped([gallery]);\n\t\t\t\tinstallOptions = { isMachineScoped, isBuiltin: false };\n\t\t\t}\n\t\t\tif (!installOptions.isMachineScoped && this.isExtensionsSyncEnabled()) {\n\t\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer && !servers.includes(this.extensionManagementServerService.localExtensionManagementServer)) {\n\t\t\t\t\tservers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.checkForWorkspaceTrust(manifest);\n\t\t\treturn Promises.settled(servers.map(server => server.extensionManagementService.installFromGallery(gallery, installOptions))).then(([local]) => local);\n\t\t}\n\n\t\tconst error = new Error(localize('cannot be installed', \"Cannot install the '{0}' extension because it is not available in this setup.\", gallery.displayName || gallery.name));\n\t\terror.name = INSTALL_ERROR_NOT_SUPPORTED;\n\t\treturn Promise.reject(error);\n\t}\n\n\tgetExtensionManagementServerToInstall(manifest: IExtensionManifest): IExtensionManagementServer | null {\n\n\t\t// Only local server\n\t\tif (this.servers.length === 1 && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t\t}\n\n\t\tconst extensionKind = this.extensionManifestPropertiesService.getExtensionKind(manifest);\n\t\tfor (const kind of extensionKind) {\n\t\t\tif (kind === 'ui' && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (kind === 'workspace' && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer;\n\t\t\t}\n\t\t\tif (kind === 'web' && this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer;\n\t\t\t}\n\t\t}\n\n\t\t// NOTE@coder: Fall back to installing on the remote server on web.\n\t\tif (isWeb && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer;\n\t\t}\n\n\t\t// Local server can accept any extension. So return local server if not compatible server found.\n\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t}\n\n\tprivate isExtensionsSyncEnabled(): boolean {\n\t\treturn this.userDataAutoSyncEnablementService.isEnabled() && this.userDataSyncResourceEnablementService.isResourceEnabled(SyncResource.Extensions);\n\t}\n\n\tprivate async hasToFlagExtensionsMachineScoped(extensions: IGalleryExtension[]): Promise<boolean> {\n\t\tif (this.isExtensionsSyncEnabled()) {\n\t\t\tconst result = await this.dialogService.show(\n\t\t\t\tSeverity.Info,\n\t\t\t\textensions.length === 1 ? localize('install extension', \"Install Extension\") : localize('install extensions', \"Install Extensions\"),\n\t\t\t\t[\n\t\t\t\t\tlocalize('install', \"Install\"),\n\t\t\t\t\tlocalize('install and do no sync', \"Install (Do not sync)\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\"),\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tcancelId: 2,\n\t\t\t\t\tdetail: extensions.length === 1\n\t\t\t\t\t\t? localize('install single extension', \"Would you like to install and synchronize '{0}' extension across your devices?\", extensions[0].displayName)\n\t\t\t\t\t\t: localize('install multiple extensions', \"Would you like to install and synchronize extensions across your devices?\")\n\t\t\t\t}\n\t\t\t);\n\t\t\tswitch (result.choice) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn false;\n\t\t\t\tcase 1:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getExtensionsReport();\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getExtensionsReport();\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tprivate getServer(extension: ILocalExtension): IExtensionManagementServer | null {\n\t\treturn this.extensionManagementServerService.getExtensionManagementServer(extension);\n\t}\n\n\tprotected async checkForWorkspaceTrust(manifest: IExtensionManifest): Promise<void> {\n\t\tif (this.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(manifest) === false) {\n\t\t\tconst trustState = await this.workspaceTrustRequestService.requestWorkspaceTrust({\n\t\t\t\tmodal: true,\n\t\t\t\tmessage: localize('extensionInstallWorkspaceTrustMessage', \"Enabling this extension requires a trusted workspace.\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustButton', \"Trust Workspace & Install\"), type: 'ContinueWithTrust' },\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustContinueButton', \"Install\"), type: 'ContinueWithoutTrust' },\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustManageButton', \"Learn More\"), type: 'Manage' }\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tif (trustState === undefined) {\n\t\t\t\treturn Promise.reject(canceled());\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n}\n"]}