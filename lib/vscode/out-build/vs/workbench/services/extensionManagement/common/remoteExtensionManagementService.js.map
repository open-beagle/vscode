{"version":3,"file":"remoteExtensionManagementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensionManagement/common/remoteExtensionManagementService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUhG,IAAa,mCAAmC,GAAhD,MAAa,mCAAoC,SAAQ,yDAAgC;QAExF,YACC,OAAiB,EAC4B,cAAwC,EAC3C,oBAA2C,EACjD,cAA+B,EACX,kCAAuE;YAE/H,KAAK,CAAC,OAAO,CAAC,CAAC;YAL8B,mBAAc,GAAd,cAAc,CAA0B;YAC3C,yBAAoB,GAApB,oBAAoB,CAAuB;YACjD,mBAAc,GAAd,cAAc,CAAiB;YACX,uCAAkC,GAAlC,kCAAkC,CAAqC;QAGhI,CAAC;QAEQ,KAAK,CAAC,UAAU,CAAC,SAA4B;YACrD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAC1F,OAAO,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,kCAAkC,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QAC9F,CAAC;KAED,CAAA;IAjBY,mCAAmC;QAI7C,WAAA,8CAAwB,CAAA;QACxB,WAAA,qCAAqB,CAAA;QACrB,WAAA,gCAAe,CAAA;QACf,WAAA,wEAAmC,CAAA;OAPzB,mCAAmC,CAiB/C;IAjBY,kFAAmC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, IGalleryExtension, IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ExtensionManagementChannelClient } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\n\nexport class WebRemoteExtensionManagementService extends ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\tconstructor(\n\t\tchannel: IChannel,\n\t\t@IExtensionGalleryService protected readonly galleryService: IExtensionGalleryService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IExtensionManifestPropertiesService protected readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(channel);\n\t}\n\n\toverride async canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst manifest = await this.galleryService.getManifest(extension, CancellationToken.None);\n\t\treturn !!manifest && this.extensionManifestPropertiesService.canExecuteOnWorkspace(manifest);\n\t}\n\n}\n"]}