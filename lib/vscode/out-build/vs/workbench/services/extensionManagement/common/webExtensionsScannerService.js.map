{"version":3,"sources":["vs/workbench/services/extensionManagement/common/webExtensionsScannerService.ts"],"names":[],"mappings":"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","file":"webExtensionsScannerService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBuiltinExtensionsScannerService, IScannedExtension, ExtensionType, IExtensionIdentifier, ITranslatedScannedExtension } from 'vs/platform/extensions/common/extensions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWebExtensionsScannerService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { isWeb } from 'vs/base/common/platform';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { asText, isSuccess, IRequestService } from 'vs/platform/request/common/request';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IGalleryExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { groupByExtension, areSameExtensions, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport type { IStaticExtension } from 'vs/workbench/workbench.web.api';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isArray } from 'vs/base/common/types';\n\ninterface IUserExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tlocation: URI;\n\treadmeUri?: URI;\n\tchangelogUri?: URI;\n\tpackageNLSUri?: URI;\n}\n\ninterface IStoredUserExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tlocation: UriComponents;\n\treadmeUri?: UriComponents;\n\tchangelogUri?: UriComponents;\n\tpackageNLSUri?: UriComponents;\n}\n\nexport class WebExtensionsScannerService extends Disposable implements IWebExtensionsScannerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly systemExtensionsPromise: Promise<IScannedExtension[]> = Promise.resolve([]);\n\tprivate readonly defaultExtensionsPromise: Promise<IScannedExtension[]> = Promise.resolve([]);\n\tprivate readonly extensionsResource: URI | undefined = undefined;\n\tprivate readonly userExtensionsResourceLimiter: Queue<IUserExtension[]> = new Queue<IUserExtension[]>();\n\n\tprivate userExtensionsPromise: Promise<IScannedExtension[]> | undefined;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IBuiltinExtensionsScannerService private readonly builtinExtensionsScannerService: IBuiltinExtensionsScannerService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tif (isWeb) {\n\t\t\tthis.extensionsResource = joinPath(environmentService.userRoamingDataHome, 'extensions.json');\n\t\t\tthis.systemExtensionsPromise = this.readSystemExtensions();\n\t\t\tthis.defaultExtensionsPromise = this.readDefaultExtensions();\n\t\t\tif (this.extensionsResource) {\n\t\t\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.extensionsResource!))(() => this.userExtensionsPromise = undefined));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async readSystemExtensions(): Promise<IScannedExtension[]> {\n\t\tconst extensions = await this.builtinExtensionsScannerService.scanBuiltinExtensions();\n\t\treturn extensions.concat(this.getStaticExtensions(true));\n\t}\n\n\t/**\n\t * All extensions defined via `staticExtensions`\n\t */\n\tprivate getStaticExtensions(builtin: boolean): IScannedExtension[] {\n\t\tconst staticExtensions = this.environmentService.options && Array.isArray(this.environmentService.options.staticExtensions) ? this.environmentService.options.staticExtensions : [];\n\t\tconst result: IScannedExtension[] = [];\n\t\tfor (const e of staticExtensions) {\n\t\t\tif (Boolean(e.isBuiltin) === builtin) {\n\t\t\t\tconst scannedExtension = this.parseStaticExtension(e, builtin, false);\n\t\t\t\tif (scannedExtension) {\n\t\t\t\t\tresult.push(scannedExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * All dev extensions\n\t */\n\tprivate getDevExtensions(): IScannedExtension[] {\n\t\tconst devExtensions = this.environmentService.options?.developmentOptions?.extensions;\n\t\tconst result: IScannedExtension[] = [];\n\t\tif (Array.isArray(devExtensions)) {\n\t\t\tfor (const e of devExtensions) {\n\t\t\t\tconst scannedExtension = this.parseStaticExtension(e, false, true);\n\t\t\t\tif (scannedExtension) {\n\t\t\t\t\tresult.push(scannedExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async readDefaultExtensions(): Promise<IScannedExtension[]> {\n\t\tconst defaultUserWebExtensions = await this.readDefaultUserWebExtensions();\n\t\tconst extensions: IScannedExtension[] = [];\n\t\tfor (const e of defaultUserWebExtensions) {\n\t\t\tconst scannedExtension = this.parseStaticExtension(e, false, false);\n\t\t\tif (scannedExtension) {\n\t\t\t\textensions.push(scannedExtension);\n\t\t\t}\n\t\t}\n\t\treturn extensions.concat(this.getStaticExtensions(false), this.getDevExtensions());\n\t}\n\n\tprivate parseStaticExtension(e: IStaticExtension, builtin: boolean, isUnderDevelopment: boolean): IScannedExtension | null {\n\t\tconst extensionLocation = URI.revive(e.extensionLocation);\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tidentifier: { id: getGalleryExtensionId(e.packageJSON.publisher, e.packageJSON.name) },\n\t\t\t\tlocation: extensionLocation,\n\t\t\t\ttype: builtin ? ExtensionType.System : ExtensionType.User,\n\t\t\t\tpackageJSON: e.packageJSON,\n\t\t\t\tisUnderDevelopment\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Error while parsing extension ${extensionLocation.toString()}`);\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async readDefaultUserWebExtensions(): Promise<IStaticExtension[]> {\n\t\tconst result: IStaticExtension[] = [];\n\t\tconst defaultUserWebExtensions = this.configurationService.getValue<{ location: string }[]>('_extensions.defaultUserWebExtensions');\n\t\tif (isArray(defaultUserWebExtensions)) {\n\t\t\tfor (const webExtension of defaultUserWebExtensions) {\n\t\t\t\ttry {\n\t\t\t\t\tconst extensionLocation = URI.parse(webExtension.location);\n\t\t\t\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\t\t\t\tconst context = await this.requestService.request({ type: 'GET', url: manifestLocation.toString(true) }, CancellationToken.None);\n\t\t\t\t\tif (!isSuccess(context)) {\n\t\t\t\t\t\tthis.logService.warn('Skipped default user web extension as there is an error while fetching manifest', manifestLocation);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst content = await asText(context);\n\t\t\t\t\tif (!content) {\n\t\t\t\t\t\tthis.logService.warn('Skipped default user web extension as there is manifest is not found', manifestLocation);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst packageJSON = JSON.parse(content);\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tpackageJSON,\n\t\t\t\t\t\textensionLocation,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn('Skipped default user web extension as there is an error while fetching manifest', webExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync scanExtensions(type?: ExtensionType): Promise<IScannedExtension[]> {\n\t\tconst extensions = [];\n\t\tif (type === undefined || type === ExtensionType.System) {\n\t\t\tconst systemExtensions = await this.systemExtensionsPromise;\n\t\t\textensions.push(...systemExtensions);\n\t\t}\n\t\tif (type === undefined || type === ExtensionType.User) {\n\t\t\tconst staticExtensions = await this.defaultExtensionsPromise;\n\t\t\textensions.push(...staticExtensions);\n\t\t\tif (!this.userExtensionsPromise) {\n\t\t\t\tthis.userExtensionsPromise = this.scanUserExtensions();\n\t\t\t}\n\t\t\tconst userExtensions = await this.userExtensionsPromise;\n\t\t\textensions.push(...userExtensions);\n\t\t}\n\t\treturn extensions;\n\t}\n\n\tasync scanAndTranslateExtensions(type?: ExtensionType): Promise<ITranslatedScannedExtension[]> {\n\t\tconst extensions = await this.scanExtensions(type);\n\t\treturn Promise.all(extensions.map((ext) => this._translateScannedExtension(ext)));\n\t}\n\n\tasync scanAndTranslateSingleExtension(extensionLocation: URI, extensionType: ExtensionType): Promise<ITranslatedScannedExtension | null> {\n\t\tconst extension = await this._scanSingleExtension(extensionLocation, extensionType);\n\t\tif (extension) {\n\t\t\treturn this._translateScannedExtension(extension);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async _scanSingleExtension(extensionLocation: URI, extensionType: ExtensionType): Promise<IScannedExtension | null> {\n\t\tif (extensionType === ExtensionType.System) {\n\t\t\tconst systemExtensions = await this.systemExtensionsPromise;\n\t\t\treturn this._findScannedExtension(systemExtensions, extensionLocation);\n\t\t}\n\n\t\tconst staticExtensions = await this.defaultExtensionsPromise;\n\t\tconst userExtensions = await this.scanUserExtensions();\n\t\treturn this._findScannedExtension(staticExtensions.concat(userExtensions), extensionLocation);\n\t}\n\n\tprivate _findScannedExtension(candidates: IScannedExtension[], extensionLocation: URI): IScannedExtension | null {\n\t\tfor (const candidate of candidates) {\n\t\t\tif (candidate.location.toString() === extensionLocation.toString()) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async _translateScannedExtension(scannedExtension: IScannedExtension): Promise<ITranslatedScannedExtension> {\n\t\tlet manifest = scannedExtension.packageJSON;\n\t\tif (scannedExtension.packageNLS) {\n\t\t\t// package.nls.json is inlined\n\t\t\ttry {\n\t\t\t\tmanifest = localizeManifest(manifest, scannedExtension.packageNLS);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\t/* ignore */\n\t\t\t}\n\t\t} else if (scannedExtension.packageNLSUrl) {\n\t\t\t// package.nls.json needs to be fetched\n\t\t\ttry {\n\t\t\t\tconst context = await this.requestService.request({ type: 'GET', url: scannedExtension.packageNLSUrl.toString() }, CancellationToken.None);\n\t\t\t\tif (isSuccess(context)) {\n\t\t\t\t\tconst content = await asText(context);\n\t\t\t\t\tif (content) {\n\t\t\t\t\t\tmanifest = localizeManifest(manifest, JSON.parse(content));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) { /* ignore */ }\n\t\t}\n\t\treturn {\n\t\t\tidentifier: scannedExtension.identifier,\n\t\t\tlocation: scannedExtension.location,\n\t\t\ttype: scannedExtension.type,\n\t\t\tpackageJSON: manifest,\n\t\t\treadmeUrl: scannedExtension.readmeUrl,\n\t\t\tchangelogUrl: scannedExtension.changelogUrl,\n\t\t\tisUnderDevelopment: scannedExtension.isUnderDevelopment\n\t\t};\n\t}\n\n\tcanAddExtension(galleryExtension: IGalleryExtension): boolean {\n\t\treturn !!galleryExtension.properties.webExtension && !!galleryExtension.webResource;\n\t}\n\n\tasync addExtension(galleryExtension: IGalleryExtension): Promise<IScannedExtension> {\n\t\tif (!this.canAddExtension(galleryExtension)) {\n\t\t\tthrow new Error(localize('cannot be installed', \"Cannot install '{0}' because this extension is not a web extension.\", galleryExtension.displayName || galleryExtension.name));\n\t\t}\n\n\t\tconst extensionLocation = galleryExtension.webResource!;\n\t\tconst packageNLSUri = joinPath(extensionLocation, 'package.nls.json');\n\t\tconst context = await this.requestService.request({ type: 'GET', url: packageNLSUri.toString() }, CancellationToken.None);\n\t\tconst packageNLSExists = isSuccess(context);\n\n\t\tconst userExtensions = await this.readUserExtensions();\n\t\tconst userExtension: IUserExtension = {\n\t\t\tidentifier: galleryExtension.identifier,\n\t\t\tversion: galleryExtension.version,\n\t\t\tlocation: extensionLocation,\n\t\t\treadmeUri: galleryExtension.assets.readme ? URI.parse(galleryExtension.assets.readme.uri) : undefined,\n\t\t\tchangelogUri: galleryExtension.assets.changelog ? URI.parse(galleryExtension.assets.changelog.uri) : undefined,\n\t\t\tpackageNLSUri: packageNLSExists ? packageNLSUri : undefined\n\t\t};\n\t\tuserExtensions.push(userExtension);\n\t\tawait this.writeUserExtensions(userExtensions);\n\n\t\tconst scannedExtension = await this.toScannedExtension(userExtension);\n\t\tif (scannedExtension) {\n\t\t\treturn scannedExtension;\n\t\t}\n\t\tthrow new Error('Error while scanning extension');\n\t}\n\n\tasync removeExtension(identifier: IExtensionIdentifier, version?: string): Promise<void> {\n\t\tlet userExtensions = await this.readUserExtensions();\n\t\tuserExtensions = userExtensions.filter(extension => !(areSameExtensions(extension.identifier, identifier) && (version ? extension.version === version : true)));\n\t\tawait this.writeUserExtensions(userExtensions);\n\t}\n\n\tprivate async scanUserExtensions(): Promise<IScannedExtension[]> {\n\t\tlet userExtensions = await this.readUserExtensions();\n\t\tconst byExtension: IUserExtension[][] = groupByExtension(userExtensions, e => e.identifier);\n\t\tuserExtensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\tconst scannedExtensions: IScannedExtension[] = [];\n\t\tawait Promise.all(userExtensions.map(async userExtension => {\n\t\t\ttry {\n\t\t\t\tconst scannedExtension = await this.toScannedExtension(userExtension);\n\t\t\t\tif (scannedExtension) {\n\t\t\t\t\tscannedExtensions.push(scannedExtension);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error, 'Error while scanning user extension', userExtension.identifier.id);\n\t\t\t}\n\t\t}));\n\t\treturn scannedExtensions;\n\t}\n\n\tprivate async toScannedExtension(userExtension: IUserExtension): Promise<IScannedExtension | null> {\n\t\tconst context = await this.requestService.request({ type: 'GET', url: joinPath(userExtension.location, 'package.json').toString() }, CancellationToken.None);\n\t\tif (isSuccess(context)) {\n\t\t\tconst content = await asText(context);\n\t\t\tif (content) {\n\t\t\t\tconst packageJSON = JSON.parse(content);\n\t\t\t\treturn {\n\t\t\t\t\tidentifier: userExtension.identifier,\n\t\t\t\t\tlocation: userExtension.location,\n\t\t\t\t\tpackageJSON,\n\t\t\t\t\ttype: ExtensionType.User,\n\t\t\t\t\treadmeUrl: userExtension.readmeUri,\n\t\t\t\t\tchangelogUrl: userExtension.changelogUri,\n\t\t\t\t\tpackageNLSUrl: userExtension.packageNLSUri,\n\t\t\t\t\tisUnderDevelopment: false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async readUserExtensions(): Promise<IUserExtension[]> {\n\t\tif (!this.extensionsResource) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.userExtensionsResourceLimiter.queue(async () => {\n\t\t\ttry {\n\t\t\t\tconst content = await this.fileService.readFile(this.extensionsResource!);\n\t\t\t\tconst storedUserExtensions: IStoredUserExtension[] = this.parseExtensions(content.value.toString());\n\t\t\t\treturn storedUserExtensions.map(e => ({\n\t\t\t\t\tidentifier: e.identifier,\n\t\t\t\t\tversion: e.version,\n\t\t\t\t\tlocation: URI.revive(e.location),\n\t\t\t\t\treadmeUri: URI.revive(e.readmeUri),\n\t\t\t\t\tchangelogUri: URI.revive(e.changelogUri),\n\t\t\t\t\tpackageNLSUri: URI.revive(e.packageNLSUri),\n\t\t\t\t}));\n\t\t\t} catch (error) { /* Ignore */ }\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate writeUserExtensions(userExtensions: IUserExtension[]): Promise<IUserExtension[]> {\n\t\tif (!this.extensionsResource) {\n\t\t\tthrow new Error('unsupported');\n\t\t}\n\t\treturn this.userExtensionsResourceLimiter.queue(async () => {\n\t\t\tconst storedUserExtensions: IStoredUserExtension[] = userExtensions.map(e => ({\n\t\t\t\tidentifier: e.identifier,\n\t\t\t\tversion: e.version,\n\t\t\t\tlocation: e.location.toJSON(),\n\t\t\t\treadmeUri: e.readmeUri?.toJSON(),\n\t\t\t\tchangelogUri: e.changelogUri?.toJSON(),\n\t\t\t\tpackageNLSUri: e.packageNLSUri?.toJSON(),\n\t\t\t}));\n\t\t\tawait this.fileService.writeFile(this.extensionsResource!, VSBuffer.fromString(JSON.stringify(storedUserExtensions)));\n\t\t\tthis.userExtensionsPromise = undefined;\n\t\t\treturn userExtensions;\n\t\t});\n\t}\n\n\tprivate parseExtensions(content: string): IStoredUserExtension[] {\n\t\tconst storedUserExtensions: (IStoredUserExtension & { uri?: UriComponents })[] = JSON.parse(content.toString());\n\t\treturn storedUserExtensions.map(e => {\n\t\t\tconst location = e.uri ? joinPath(URI.revive(e.uri), 'Microsoft.VisualStudio.Code.WebResources', 'extension') : e.location;\n\t\t\treturn { ...e, location };\n\t\t});\n\t}\n\n}\n\nregisterSingleton(IWebExtensionsScannerService, WebExtensionsScannerService);\n"]}