{"version":3,"sources":["vs/workbench/services/extensionManagement/browser/extensionBisect.ts"],"names":[],"mappings":"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","file":"extensionBisect.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ExtensionType, IExtension } from 'vs/platform/extensions/common/extensions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { INotificationService, IPromptChoice, Severity } from 'vs/platform/notification/common/notification';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyEqualsExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\n// --- bisect service\n\nexport const IExtensionBisectService = createDecorator<IExtensionBisectService>('IExtensionBisectService');\n\nexport interface IExtensionBisectService {\n\n\treadonly _serviceBrand: undefined;\n\n\tisDisabledByBisect(extension: IExtension): boolean;\n\tisActive: boolean;\n\tdisabledCount: number;\n\tstart(extensions: ILocalExtension[]): Promise<void>;\n\tnext(seeingBad: boolean): Promise<{ id: string, bad: boolean } | undefined>;\n\treset(): Promise<void>;\n}\n\nclass BisectState {\n\n\tstatic fromJSON(raw: string | undefined): BisectState | undefined {\n\t\tif (!raw) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tinterface Raw extends BisectState { }\n\t\t\tconst data: Raw = JSON.parse(raw);\n\t\t\treturn new BisectState(data.extensions, data.low, data.high, data.mid);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(\n\t\treadonly extensions: string[],\n\t\treadonly low: number,\n\t\treadonly high: number,\n\t\treadonly mid: number = ((low + high) / 2) | 0\n\t) { }\n}\n\nclass ExtensionBisectService implements IExtensionBisectService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly _storageKey = 'extensionBisectState';\n\n\tprivate readonly _state: BisectState | undefined;\n\tprivate readonly _disabled = new Map<string, boolean>();\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IWorkbenchEnvironmentService private readonly _envService: IWorkbenchEnvironmentService\n\t) {\n\t\tconst raw = _storageService.get(ExtensionBisectService._storageKey, StorageScope.GLOBAL);\n\t\tthis._state = BisectState.fromJSON(raw);\n\n\t\tif (this._state) {\n\t\t\tconst { mid, high } = this._state;\n\t\t\tfor (let i = 0; i < this._state.extensions.length; i++) {\n\t\t\t\tconst isDisabled = i >= mid && i < high;\n\t\t\t\tthis._disabled.set(this._state.extensions[i], isDisabled);\n\t\t\t}\n\t\t\tlogService.warn('extension BISECT active', [...this._disabled]);\n\t\t}\n\t}\n\n\tget isActive() {\n\t\treturn !!this._state;\n\t}\n\n\tget disabledCount() {\n\t\treturn this._state ? this._state.high - this._state.mid : -1;\n\t}\n\n\tisDisabledByBisect(extension: IExtension): boolean {\n\t\tif (!this._state) {\n\t\t\t// bisect isn't active\n\t\t\treturn false;\n\t\t}\n\t\tif (this._isRemoteResolver(extension)) {\n\t\t\t// the current remote resolver extension cannot be disabled\n\t\t\treturn false;\n\t\t}\n\t\tconst disabled = this._disabled.get(extension.identifier.id);\n\t\treturn disabled ?? false;\n\t}\n\n\tprivate _isRemoteResolver(extension: IExtension): boolean {\n\t\tif (extension.manifest.enableProposedApi !== true) {\n\t\t\treturn false;\n\t\t}\n\t\tconst idx = this._envService.remoteAuthority?.indexOf('+');\n\t\tconst activationEvent = `onResolveRemoteAuthority:${this._envService.remoteAuthority?.substr(0, idx)}`;\n\t\treturn Boolean(extension.manifest.activationEvents?.find(e => e === activationEvent));\n\t}\n\n\tasync start(extensions: ILocalExtension[]): Promise<void> {\n\t\tif (this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\tconst extensionIds = extensions.map(ext => ext.identifier.id);\n\t\tconst newState = new BisectState(extensionIds, 0, extensionIds.length, 0);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(newState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t}\n\n\tasync next(seeingBad: boolean): Promise<{ id: string; bad: boolean; } | undefined> {\n\t\tif (!this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\t// check if bad when all extensions are disabled\n\t\tif (seeingBad && this._state.mid === 0 && this._state.high === this._state.extensions.length) {\n\t\t\treturn { bad: true, id: '' };\n\t\t}\n\t\t// check if there is only one left\n\t\tif (this._state.low === this._state.high - 1) {\n\t\t\tawait this.reset();\n\t\t\treturn { id: this._state.extensions[this._state.low], bad: seeingBad };\n\t\t}\n\t\t// the second half is disabled so if there is still bad it must be\n\t\t// in the first half\n\t\tconst nextState = new BisectState(\n\t\t\tthis._state.extensions,\n\t\t\tseeingBad ? this._state.low : this._state.mid,\n\t\t\tseeingBad ? this._state.mid : this._state.high,\n\t\t);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(nextState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t\treturn undefined;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tthis._storageService.remove(ExtensionBisectService._storageKey, StorageScope.GLOBAL);\n\t\tawait this._storageService.flush();\n\t}\n}\n\nregisterSingleton(IExtensionBisectService, ExtensionBisectService, true);\n\n// --- bisect UI\n\nclass ExtensionBisectUi {\n\n\tstatic ctxIsBisectActive = new RawContextKey('isExtensionBisectActive', false);\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionBisectService private readonly _extensionBisectService: IExtensionBisectService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tif (_extensionBisectService.isActive) {\n\t\t\tExtensionBisectUi.ctxIsBisectActive.bindTo(contextKeyService).set(true);\n\t\t\tthis._showBisectPrompt();\n\t\t}\n\t}\n\n\tprivate _showBisectPrompt(): void {\n\n\t\tconst goodPrompt: IPromptChoice = {\n\t\t\tlabel: 'Good now',\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', false)\n\t\t};\n\t\tconst badPrompt: IPromptChoice = {\n\t\t\tlabel: 'This is bad',\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', true)\n\t\t};\n\t\tconst stop: IPromptChoice = {\n\t\t\tlabel: 'Stop Bisect',\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.stop')\n\t\t};\n\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tlocalize('bisect', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", this._extensionBisectService.disabledCount),\n\t\t\t[goodPrompt, badPrompt, stop],\n\t\t\t{ sticky: true }\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tExtensionBisectUi,\n\tLifecyclePhase.Restored\n);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.start',\n\t\t\ttitle: { value: localize('title.start', \"Start Extension Bisect\"), original: 'Start Extension Bisect' },\n\t\t\tcategory: localize('help', \"Help\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive.negate(),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyEqualsExpr.create('viewContainer', 'workbench.view.extensions'),\n\t\t\t\tgroup: '2_enablement',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst extensionManagement = accessor.get(IExtensionManagementService);\n\t\tconst extensionEnablementService = accessor.get(IGlobalExtensionEnablementService);\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\n\t\tconst disabled = new Set(extensionEnablementService.getDisabledExtensions().map(id => id.id));\n\t\tconst extensions = (await extensionManagement.getInstalled(ExtensionType.User)).filter(ext => !disabled.has(ext.identifier.id));\n\n\t\tconst res = await dialogService.confirm({\n\t\t\tmessage: localize('msg.start', \"Extension Bisect\"),\n\t\t\tdetail: localize('detail.start', \"Extension Bisect will use binary search to find an extension that causes a problem. During the process the window reloads repeatedly (~{0} times). Each time you must confirm if you are still seeing problems.\", 2 + Math.log2(extensions.length) | 0),\n\t\t\tprimaryButton: localize('msg2', \"Start Extension Bisect\")\n\t\t});\n\n\t\tif (res.confirmed) {\n\t\t\tawait extensionsBisect.start(extensions);\n\t\t\thostService.reload();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.next',\n\t\t\ttitle: localize('title.isBad', \"Continue Extension Bisect\"),\n\t\t\tcategory: localize('help', \"Help\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, seeingBad: boolean | undefined): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst bisectService = accessor.get(IExtensionBisectService);\n\t\tconst productService = accessor.get(IProductService);\n\t\tconst extensionEnablementService = accessor.get(IGlobalExtensionEnablementService);\n\t\tconst issueService = accessor.get(IWorkbenchIssueService);\n\n\t\tif (!bisectService.isActive) {\n\t\t\treturn;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tconst goodBadStopCancel = await this._checkForBad(dialogService, bisectService);\n\t\t\tif (goodBadStopCancel === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseeingBad = goodBadStopCancel;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tawait bisectService.reset();\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\t\tconst done = await bisectService.next(seeingBad);\n\t\tif (!done) {\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\n\t\tif (done.bad) {\n\t\t\t// DONE but nothing found\n\t\t\tawait dialogService.show(Severity.Info, localize('done.msg', \"Extension Bisect\"), [], {\n\t\t\t\tdetail: localize('done.detail2', \"Extension Bisect is done but no extension has been identified. This might be a problem with {0}.\", productService.nameShort)\n\t\t\t});\n\n\t\t} else {\n\t\t\t// DONE and identified extension\n\t\t\tconst res = await dialogService.show(Severity.Info, localize('done.msg', \"Extension Bisect\"),\n\t\t\t\t[localize('report', \"Report Issue & Continue\"), localize('done', \"Continue\")],\n\t\t\t\t// [],\n\t\t\t\t{\n\t\t\t\t\tdetail: localize('done.detail', \"Extension Bisect is done and has identified {0} as the extension causing the problem.\", done.id),\n\t\t\t\t\tcheckbox: { label: localize('done.disbale', \"Keep this extension disabled\"), checked: true },\n\t\t\t\t\tcancelId: 1\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (res.checkboxChecked) {\n\t\t\t\tawait extensionEnablementService.disableExtension({ id: done.id }, undefined);\n\t\t\t}\n\t\t\tif (res.choice === 0) {\n\t\t\t\tawait issueService.openReporter({ extensionId: done.id });\n\t\t\t}\n\t\t}\n\t\tawait bisectService.reset();\n\t\thostService.reload();\n\t}\n\n\tprivate async _checkForBad(dialogService: IDialogService, bisectService: IExtensionBisectService): Promise<boolean | undefined | null> {\n\t\tconst options = {\n\t\t\tcancelId: 3,\n\t\t\tdetail: localize('bisect', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", bisectService.disabledCount),\n\t\t};\n\t\tconst res = await dialogService.show(\n\t\t\tSeverity.Info,\n\t\t\tlocalize('msg.next', \"Extension Bisect\"),\n\t\t\t[localize('next.good', \"Good now\"), localize('next.bad', \"This is bad\"), localize('next.stop', \"Stop Bisect\"), localize('next.cancel', \"Cancel\")],\n\t\t\toptions\n\t\t);\n\t\tswitch (res.choice) {\n\t\t\tcase 0: return false; //good now\n\t\t\tcase 1: return true; //bad\n\t\t\tcase 2: return undefined; //stop\n\t\t}\n\t\treturn null; //cancel\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.stop',\n\t\t\ttitle: localize('title.stop', \"Stop Extension Bisect\"),\n\t\t\tcategory: localize('help', \"Help\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tawait extensionsBisect.reset();\n\t\thostService.reload();\n\t}\n});\n"]}