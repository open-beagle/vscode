{"version":3,"file":"extensionManagementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAmBhG,IAAa,0BAA0B,GAAvC,MAAa,0BAA2B,SAAQ,uDAA8B;QAE7E,YACsD,kBAAsD,EACxE,gCAAmE,EAC5E,uBAAiD,EACpD,oBAA2C,EACjD,cAA+B,EAC9B,eAAiC,EACf,iCAAqE,EACjE,qCAA6E,EACrG,aAA6B,EACd,4BAA2D,EACrD,kCAAuE;YAE5G,KAAK,CAAC,gCAAgC,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,cAAc,EAAE,eAAe,EAAE,iCAAiC,EAAE,qCAAqC,EAAE,aAAa,EAAE,4BAA4B,EAAE,kCAAkC,CAAC,CAAC;YAZ9N,uBAAkB,GAAlB,kBAAkB,CAAoC;QAa5G,CAAC;QAEkB,KAAK,CAAC,WAAW,CAAC,IAAS,EAAE,MAAkC;YACjF,IAAI,IAAI,CAAC,MAAM,KAAK,iBAAO,CAAC,YAAY,IAAI,MAAM,KAAK,IAAI,CAAC,gCAAgC,CAAC,8BAA8B,EAAE;gBAC5H,MAAM,kBAAkB,GAAG,CAAA,GAAA,oBAAQ,CAAA,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAA,GAAA,mBAAY,CAAA,EAAE,CAAC,CAAC;gBACpF,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;gBAC9D,IAAI,GAAG,kBAAkB,CAAC;aAC1B;YACD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,QAAQ,EAAE;gBACb,MAAM,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;gBAC5C,OAAO,MAAM,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACvD;YAED,OAAO,OAAO,CAAC,MAAM,CAAC,uCAAuC,CAAC,CAAC;QAChE,CAAC;KACD,CAAA;IAhCY,0BAA0B;QAGpC,WAAA,uDAAkC,CAAA;QAClC,WAAA,uDAAiC,CAAA;QACjC,WAAA,8CAAwB,CAAA;QACxB,WAAA,qCAAqB,CAAA;QACrB,WAAA,gCAAe,CAAA;QACf,WAAA,2BAAgB,CAAA;QAChB,WAAA,iDAAkC,CAAA;QAClC,WAAA,qDAAsC,CAAA;QACtC,WAAA,wBAAc,CAAA;QACd,WAAA,8CAA6B,CAAA;QAC7B,YAAA,wEAAmC,CAAA;OAbzB,0BAA0B,CAgCtC;IAhCY,gEAA0B;IAkCvC,CAAA,GAAA,8BAAiB,CAAA,CAAC,0DAAoC,EAAE,0BAA0B,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ILocalExtension, IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionManagementService as BaseExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagementService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IExtensionManagementServer, IExtensionManagementServerService, IWorkbenchExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { Schemas } from 'vs/base/common/network';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IUserDataAutoSyncEnablementService, IUserDataSyncResourceEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\n\nexport class ExtensionManagementService extends BaseExtensionManagementService {\n\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IExtensionManagementServerService extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IProductService productService: IProductService,\n\t\t@IDownloadService downloadService: IDownloadService,\n\t\t@IUserDataAutoSyncEnablementService userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IWorkspaceTrustRequestService workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(extensionManagementServerService, extensionGalleryService, configurationService, productService, downloadService, userDataAutoSyncEnablementService, userDataSyncResourceEnablementService, dialogService, workspaceTrustRequestService, extensionManifestPropertiesService);\n\t}\n\n\tprotected override async installVSIX(vsix: URI, server: IExtensionManagementServer): Promise<ILocalExtension> {\n\t\tif (vsix.scheme === Schemas.vscodeRemote && server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\t\tvsix = downloadedLocation;\n\t\t}\n\t\tconst manifest = await this.getManifest(vsix);\n\t\tif (manifest) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest);\n\t\t\treturn server.extensionManagementService.install(vsix);\n\t\t}\n\n\t\treturn Promise.reject('Unable to get the extension manifest.');\n\t}\n}\n\nregisterSingleton(IWorkbenchExtensionManagementService, ExtensionManagementService);\n"]}