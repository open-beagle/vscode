{"version":3,"file":"encryptionService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/encryption/browser/encryptionService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,iBAAiB;QAI7B,OAAO,CAAC,KAAa;YACpB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAED,OAAO,CAAC,KAAa;YACpB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;KACD;IAXD,8CAWC;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,sCAAkB,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IEncryptionService } from 'vs/workbench/services/encryption/common/encryptionService';\n\nexport class EncryptionService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tencrypt(value: string): Promise<string> {\n\t\treturn Promise.resolve(value);\n\t}\n\n\tdecrypt(value: string): Promise<string> {\n\t\treturn Promise.resolve(value);\n\t}\n}\n\nregisterSingleton(IEncryptionService, EncryptionService, true);\n"]}