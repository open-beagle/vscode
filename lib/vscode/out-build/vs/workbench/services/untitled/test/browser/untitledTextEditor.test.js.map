{"version":3,"file":"untitledTextEditor.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/untitled/test/browser/untitledTextEditor.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { join } from 'vs/base/common/path';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUntitledTextEditorService, UntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\nimport { workbenchInstantiationService, TestServiceAccessor } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { snapshotToString } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ModesRegistry, PLAINTEXT_MODE_ID } from 'vs/editor/common/modes/modesRegistry';\nimport { IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { Range } from 'vs/editor/common/core/range';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { IUntitledTextEditorModel } from 'vs/workbench/services/untitled/common/untitledTextEditorModel';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nsuite('Untitled text editors', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\tteardown(() => {\n\t\t(accessor.untitledTextEditorService as UntitledTextEditorService).dispose();\n\t});\n\n\ttest('basics', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst workingCopyService = accessor.workingCopyService;\n\n\t\tconst input1 = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\t\tawait input1.resolve();\n\t\tassert.strictEqual(service.get(input1.resource), input1.model);\n\n\t\tassert.ok(service.get(input1.resource));\n\t\tassert.ok(!service.get(URI.file('testing')));\n\n\t\tconst input2 = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\t\tassert.strictEqual(service.get(input2.resource), input2.model);\n\n\t\t// get()\n\t\tassert.strictEqual(service.get(input1.resource), input1.model);\n\t\tassert.strictEqual(service.get(input2.resource), input2.model);\n\n\t\t// revert()\n\t\tawait input1.revert(0);\n\t\tassert.ok(input1.isDisposed());\n\t\tassert.ok(!service.get(input1.resource));\n\n\t\t// dirty\n\t\tconst model = await input2.resolve();\n\t\tassert.strictEqual(await service.resolve({ untitledResource: input2.resource }), model);\n\t\tassert.ok(service.get(model.resource));\n\n\t\tassert.ok(!input2.isDirty());\n\n\t\tconst resourcePromise = awaitDidChangeDirty(accessor.untitledTextEditorService);\n\n\t\tmodel.textEditorModel?.setValue('foo bar');\n\n\t\tconst resource = await resourcePromise;\n\n\t\tassert.strictEqual(resource.toString(), input2.resource.toString());\n\n\t\tassert.ok(input2.isDirty());\n\n\t\tassert.ok(workingCopyService.isDirty(input2.resource));\n\t\tassert.strictEqual(workingCopyService.dirtyCount, 1);\n\n\t\tawait input1.revert(0);\n\t\tawait input2.revert(0);\n\t\tassert.ok(!service.get(input1.resource));\n\t\tassert.ok(!service.get(input2.resource));\n\t\tassert.ok(!input2.isDirty());\n\t\tassert.ok(!model.isDirty());\n\n\t\tassert.ok(!workingCopyService.isDirty(input2.resource));\n\t\tassert.strictEqual(workingCopyService.dirtyCount, 0);\n\n\t\tawait input1.revert(0);\n\t\tassert.ok(input1.isDisposed());\n\t\tassert.ok(!service.get(input1.resource));\n\n\t\tinput2.dispose();\n\t\tassert.ok(!service.get(input2.resource));\n\t});\n\n\tfunction awaitDidChangeDirty(service: IUntitledTextEditorService): Promise<URI> {\n\t\treturn new Promise(resolve => {\n\t\t\tconst listener = service.onDidChangeDirty(async model => {\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tresolve(model.resource);\n\t\t\t});\n\t\t});\n\t}\n\n\ttest('setValue()', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst untitled = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tconst model = await untitled.resolve();\n\n\t\tmodel.setValue('not dirty', true);\n\t\tassert.ok(!model.isDirty());\n\n\t\tmodel.setValue('dirty');\n\t\tassert.ok(model.isDirty());\n\n\t\tuntitled.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('associated resource is dirty', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst file = URI.file(join('C:\\\\', '/foo/file.txt'));\n\n\t\tlet onDidChangeDirtyModel: IUntitledTextEditorModel | undefined = undefined;\n\t\tconst listener = service.onDidChangeDirty(model => {\n\t\t\tonDidChangeDirtyModel = model;\n\t\t});\n\n\t\tconst model = service.create({ associatedResource: file });\n\t\tconst untitled = instantiationService.createInstance(UntitledTextEditorInput, model);\n\t\tassert.ok(untitled.isDirty());\n\t\tassert.strictEqual(model, onDidChangeDirtyModel);\n\n\t\tconst resolvedModel = await untitled.resolve();\n\n\t\tassert.ok(resolvedModel.hasAssociatedFilePath);\n\t\tassert.strictEqual(untitled.isDirty(), true);\n\n\t\tuntitled.dispose();\n\t\tlistener.dispose();\n\t});\n\n\ttest('no longer dirty when content gets empty (not with associated resource)', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst workingCopyService = accessor.workingCopyService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\t// dirty\n\t\tconst model = await input.resolve();\n\t\tmodel.textEditorModel?.setValue('foo bar');\n\t\tassert.ok(model.isDirty());\n\t\tassert.ok(workingCopyService.isDirty(model.resource, model.typeId));\n\t\tmodel.textEditorModel?.setValue('');\n\t\tassert.ok(!model.isDirty());\n\t\tassert.ok(!workingCopyService.isDirty(model.resource, model.typeId));\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('via create options', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\n\t\tconst model1 = await instantiationService.createInstance(UntitledTextEditorInput, service.create()).resolve();\n\n\t\tmodel1.textEditorModel!.setValue('foo bar');\n\t\tassert.ok(model1.isDirty());\n\n\t\tmodel1.textEditorModel!.setValue('');\n\t\tassert.ok(!model1.isDirty());\n\n\t\tconst model2 = await instantiationService.createInstance(UntitledTextEditorInput, service.create({ initialValue: 'Hello World' })).resolve();\n\t\tassert.strictEqual(snapshotToString(model2.createSnapshot()!), 'Hello World');\n\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tconst model3 = await instantiationService.createInstance(UntitledTextEditorInput, service.create({ untitledResource: input.resource })).resolve();\n\n\t\tassert.strictEqual(model3.resource.toString(), input.resource.toString());\n\n\t\tconst file = URI.file(join('C:\\\\', '/foo/file44.txt'));\n\t\tconst model4 = await instantiationService.createInstance(UntitledTextEditorInput, service.create({ associatedResource: file })).resolve();\n\t\tassert.ok(model4.hasAssociatedFilePath);\n\t\tassert.ok(model4.isDirty());\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t\tmodel3.dispose();\n\t\tmodel4.dispose();\n\t\tinput.dispose();\n\t});\n\n\ttest('associated path remains dirty when content gets empty', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst file = URI.file(join('C:\\\\', '/foo/file.txt'));\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create({ associatedResource: file }));\n\n\t\t// dirty\n\t\tconst model = await input.resolve();\n\t\tmodel.textEditorModel?.setValue('foo bar');\n\t\tassert.ok(model.isDirty());\n\t\tmodel.textEditorModel?.setValue('');\n\t\tassert.ok(model.isDirty());\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('initial content is dirty', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst workingCopyService = accessor.workingCopyService;\n\n\t\tconst untitled = instantiationService.createInstance(UntitledTextEditorInput, service.create({ initialValue: 'Hello World' }));\n\t\tassert.ok(untitled.isDirty());\n\n\t\t// dirty\n\t\tconst model = await untitled.resolve();\n\t\tassert.ok(model.isDirty());\n\t\tassert.strictEqual(workingCopyService.dirtyCount, 1);\n\n\t\tuntitled.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('created with files.defaultLanguage setting', () => {\n\t\tconst defaultLanguage = 'javascript';\n\t\tconst config = accessor.testConfigurationService;\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': defaultLanguage });\n\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = service.create();\n\n\t\tassert.strictEqual(input.getMode(), defaultLanguage);\n\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': undefined });\n\n\t\tinput.dispose();\n\t});\n\n\ttest('created with files.defaultLanguage setting (${activeEditorLanguage})', async () => {\n\t\tconst config = accessor.testConfigurationService;\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': '${activeEditorLanguage}' });\n\n\t\taccessor.editorService.activeTextEditorMode = 'typescript';\n\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst model = service.create();\n\n\t\tassert.strictEqual(model.getMode(), 'typescript');\n\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': undefined });\n\t\taccessor.editorService.activeTextEditorMode = undefined;\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('created with mode overrides files.defaultLanguage setting', () => {\n\t\tconst mode = 'typescript';\n\t\tconst defaultLanguage = 'javascript';\n\t\tconst config = accessor.testConfigurationService;\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': defaultLanguage });\n\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = service.create({ mode });\n\n\t\tassert.strictEqual(input.getMode(), mode);\n\n\t\tconfig.setUserConfiguration('files', { 'defaultLanguage': undefined });\n\n\t\tinput.dispose();\n\t});\n\n\ttest('can change mode afterwards', async () => {\n\t\tconst mode = 'untitled-input-test';\n\n\t\tModesRegistry.registerLanguage({\n\t\t\tid: mode,\n\t\t});\n\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create({ mode }));\n\n\t\tassert.ok(input.model.hasModeSetExplicitly);\n\t\tassert.strictEqual(input.getMode(), mode);\n\n\t\tconst model = await input.resolve();\n\t\tassert.strictEqual(model.getMode(), mode);\n\n\t\tinput.setMode('plaintext');\n\n\t\tassert.strictEqual(input.getMode(), PLAINTEXT_MODE_ID);\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('remembers that mode was set explicitly', async () => {\n\t\tconst mode = 'untitled-input-test';\n\n\t\tModesRegistry.registerLanguage({\n\t\t\tid: mode,\n\t\t});\n\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst model = service.create();\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, model);\n\n\t\tassert.ok(!input.model.hasModeSetExplicitly);\n\t\tinput.setMode('plaintext');\n\t\tassert.ok(input.model.hasModeSetExplicitly);\n\n\t\tassert.strictEqual(input.getMode(), PLAINTEXT_MODE_ID);\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('service#onDidChangeEncoding', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tservice.onDidChangeEncoding(model => {\n\t\t\tcounter++;\n\t\t\tassert.strictEqual(model.resource.toString(), input.resource.toString());\n\t\t});\n\n\t\t// encoding\n\t\tconst model = await input.resolve();\n\t\tawait model.setEncoding('utf16');\n\t\tassert.strictEqual(counter, 1);\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('service#onDidChangeLabel', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tservice.onDidChangeLabel(model => {\n\t\t\tcounter++;\n\t\t\tassert.strictEqual(model.resource.toString(), input.resource.toString());\n\t\t});\n\n\t\t// label\n\t\tconst model = await input.resolve();\n\t\tmodel.textEditorModel?.setValue('Foo Bar');\n\t\tassert.strictEqual(counter, 1);\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('service#onWillDispose', async () => {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tservice.onWillDispose(model => {\n\t\t\tcounter++;\n\t\t\tassert.strictEqual(model.resource.toString(), input.resource.toString());\n\t\t});\n\n\t\tconst model = await input.resolve();\n\t\tassert.strictEqual(counter, 0);\n\t\tmodel.dispose();\n\t\tassert.strictEqual(counter, 1);\n\t});\n\n\n\ttest('service#getValue', async () => {\n\t\t// This function is used for the untitledocumentData API\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst model1 = await instantiationService.createInstance(UntitledTextEditorInput, service.create()).resolve();\n\n\t\tmodel1.textEditorModel!.setValue('foo bar');\n\t\tassert.strictEqual(service.getValue(model1.resource), 'foo bar');\n\t\tmodel1.dispose();\n\n\t\t// When a model doesn't exist, it should return undefined\n\t\tassert.strictEqual(service.getValue(URI.parse('https://www.microsoft.com')), undefined);\n\t});\n\n\ttest('model#onDidChangeContent', async function () {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tconst model = await input.resolve();\n\t\tmodel.onDidChangeContent(() => counter++);\n\n\t\tmodel.textEditorModel?.setValue('foo');\n\n\t\tassert.strictEqual(counter, 1, 'Dirty model should trigger event');\n\t\tmodel.textEditorModel?.setValue('bar');\n\n\t\tassert.strictEqual(counter, 2, 'Content change when dirty should trigger event');\n\t\tmodel.textEditorModel?.setValue('');\n\n\t\tassert.strictEqual(counter, 3, 'Manual revert should trigger event');\n\t\tmodel.textEditorModel?.setValue('foo');\n\n\t\tassert.strictEqual(counter, 4, 'Dirty model should trigger event');\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('model#onDidRevert and input disposed when reverted', async function () {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tconst model = await input.resolve();\n\t\tmodel.onDidRevert(() => counter++);\n\n\t\tmodel.textEditorModel?.setValue('foo');\n\n\t\tawait model.revert();\n\n\t\tassert.ok(input.isDisposed());\n\t\tassert.ok(counter === 1);\n\t});\n\n\ttest('model#onDidChangeName and input name', async function () {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tlet model = await input.resolve();\n\t\tmodel.onDidChangeName(() => counter++);\n\n\t\tmodel.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(input.getName(), 'foo');\n\t\tassert.strictEqual(model.name, 'foo');\n\n\t\tassert.strictEqual(counter, 1);\n\t\tmodel.textEditorModel?.setValue('bar');\n\t\tassert.strictEqual(input.getName(), 'bar');\n\t\tassert.strictEqual(model.name, 'bar');\n\n\t\tassert.strictEqual(counter, 2);\n\t\tmodel.textEditorModel?.setValue('');\n\t\tassert.strictEqual(input.getName(), 'Untitled-1');\n\t\tassert.strictEqual(model.name, 'Untitled-1');\n\n\t\tmodel.textEditorModel?.setValue('        ');\n\t\tassert.strictEqual(input.getName(), 'Untitled-1');\n\t\tassert.strictEqual(model.name, 'Untitled-1');\n\n\t\tmodel.textEditorModel?.setValue('([]}'); // require actual words\n\t\tassert.strictEqual(input.getName(), 'Untitled-1');\n\t\tassert.strictEqual(model.name, 'Untitled-1');\n\n\t\tmodel.textEditorModel?.setValue('([]}hello   '); // require actual words\n\t\tassert.strictEqual(input.getName(), '([]}hello');\n\t\tassert.strictEqual(model.name, '([]}hello');\n\n\t\tmodel.textEditorModel?.setValue('12345678901234567890123456789012345678901234567890'); // trimmed at 40chars max\n\t\tassert.strictEqual(input.getName(), '1234567890123456789012345678901234567890');\n\t\tassert.strictEqual(model.name, '1234567890123456789012345678901234567890');\n\n\t\tmodel.textEditorModel?.setValue('123456789012345678901234567890123456789🌞'); // do not break grapehems (#111235)\n\t\tassert.strictEqual(input.getName(), '123456789012345678901234567890123456789');\n\t\tassert.strictEqual(model.name, '123456789012345678901234567890123456789');\n\n\t\tassert.strictEqual(counter, 6);\n\n\t\tmodel.textEditorModel?.setValue('Hello\\nWorld');\n\t\tassert.strictEqual(counter, 7);\n\n\t\tfunction createSingleEditOp(text: string, positionLineNumber: number, positionColumn: number, selectionLineNumber: number = positionLineNumber, selectionColumn: number = positionColumn): IIdentifiedSingleEditOperation {\n\t\t\tlet range = new Range(\n\t\t\t\tselectionLineNumber,\n\t\t\t\tselectionColumn,\n\t\t\t\tpositionLineNumber,\n\t\t\t\tpositionColumn\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tidentifier: null,\n\t\t\t\trange,\n\t\t\t\ttext,\n\t\t\t\tforceMoveMarkers: false\n\t\t\t};\n\t\t}\n\n\t\tmodel.textEditorModel?.applyEdits([createSingleEditOp('hello', 2, 2)]);\n\t\tassert.strictEqual(counter, 7); // change was not on first line\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\n\t\tconst inputWithContents = instantiationService.createInstance(UntitledTextEditorInput, service.create({ initialValue: 'Foo' }));\n\t\tmodel = await inputWithContents.resolve();\n\n\t\tassert.strictEqual(inputWithContents.getName(), 'Foo');\n\n\t\tinputWithContents.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('model#onDidChangeDirty', async function () {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tconst model = await input.resolve();\n\t\tmodel.onDidChangeDirty(() => counter++);\n\n\t\tmodel.textEditorModel?.setValue('foo');\n\n\t\tassert.strictEqual(counter, 1, 'Dirty model should trigger event');\n\t\tmodel.textEditorModel?.setValue('bar');\n\n\t\tassert.strictEqual(counter, 1, 'Another change does not fire event');\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('model#onDidChangeEncoding', async function () {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst input = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tlet counter = 0;\n\n\t\tconst model = await input.resolve();\n\t\tmodel.onDidChangeEncoding(() => counter++);\n\n\t\tawait model.setEncoding('utf16');\n\n\t\tassert.strictEqual(counter, 1, 'Dirty model should trigger event');\n\t\tawait model.setEncoding('utf16');\n\n\t\tassert.strictEqual(counter, 1, 'Another change to same encoding does not fire event');\n\n\t\tinput.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('backup and restore (simple)', async function () {\n\t\treturn testBackupAndRestore('Some very small file text content.');\n\t});\n\n\ttest('backup and restore (large, #121347)', async function () {\n\t\tconst largeContent = '국어한\\n'.repeat(100000);\n\t\treturn testBackupAndRestore(largeContent);\n\t});\n\n\tasync function testBackupAndRestore(content: string) {\n\t\tconst service = accessor.untitledTextEditorService;\n\t\tconst originalInput = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\t\tconst restoredInput = instantiationService.createInstance(UntitledTextEditorInput, service.create());\n\n\t\tconst originalModel = await originalInput.resolve();\n\t\toriginalModel.textEditorModel?.setValue(content);\n\n\t\tconst backup = await originalModel.backup(CancellationToken.None);\n\t\tconst modelRestoredIdentifier = { typeId: originalModel.typeId, resource: restoredInput.resource };\n\t\tawait accessor.workingCopyBackupService.backup(modelRestoredIdentifier, backup.content);\n\n\t\tconst restoredModel = await restoredInput.resolve();\n\n\t\tassert.strictEqual(restoredModel.textEditorModel?.getValue(), content);\n\t\tassert.strictEqual(restoredModel.isDirty(), true);\n\n\t\toriginalInput.dispose();\n\t\toriginalModel.dispose();\n\t\trestoredInput.dispose();\n\t\trestoredModel.dispose();\n\t}\n});\n"]}