{"version":3,"file":"untitledTextEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/untitled/common/untitledTextEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAahG;;OAEG;IACH,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,yDAA+B;QAU3E,YACiB,KAA+B,EAC7B,eAAiC,EACpC,YAA2B,EAC1B,aAA6B,EACvB,kBAAwC,EAChD,WAAyB,EACX,yBAAqD;YAEjF,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,kBAAkB,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAE,yBAAyB,CAAC,CAAC;YAR3H,UAAK,GAAL,KAAK,CAA0B;YAHxC,iBAAY,GAA8B,SAAS,CAAC;YAa3D,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QAlBD,IAAa,MAAM;YAClB,OAAO,uBAAuB,CAAC,EAAE,CAAC;QACnC,CAAC;QAkBO,sBAAsB,CAAC,KAA+B;YAE7D,qCAAqC;YACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAE3E,oEAAoE;YACpE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC;QAEQ,OAAO;YACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACxB,CAAC;QAEQ,cAAc,CAAC,0BAAuC;YAE9D,mEAAmE;YACnE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBACtC,MAAM,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAChD,IAAI,oBAAoB,KAAK,IAAI,CAAC,OAAO,EAAE,EAAE;oBAC5C,OAAO,oBAAoB,CAAC;iBAC5B;gBAED,OAAO,SAAS,CAAC;aACjB;YAED,2CAA2C;YAC3C,OAAO,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACxC,CAAC;QAEQ,QAAQ,CAAC,SAAoB;YAErC,0EAA0E;YAC1E,sEAAsE;YACtE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1C,IAAI,WAAW,IAAI,WAAW,KAAK,IAAI,EAAE;oBACxC,OAAO,GAAG,IAAI,MAAM,WAAW,EAAE,CAAC;iBAClC;gBAED,OAAO,IAAI,CAAC;aACZ;YAED,2CAA2C;YAC3C,OAAO,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAEQ,OAAO;YACf,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED,WAAW;YACV,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACjC,CAAC;QAED,WAAW,CAAC,QAAgB,EAAE,IAAkB,CAAC,kCAAkC;YAClF,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QAED,OAAO,CAAC,IAAY;YACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO;YACN,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEQ,KAAK,CAAC,OAAO;YACrB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;aACzC;YAED,MAAM,IAAI,CAAC,YAAY,CAAC;YAExB,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAEQ,OAAO,CAAC,UAAmB;YACnC,IAAI,UAAU,KAAK,IAAI,EAAE;gBACxB,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,UAAU,YAAY,uBAAuB,EAAE;gBAClD,OAAO,CAAA,GAAA,mBAAO,CAAA,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACnD;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAE9B,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IArHgB,0BAAE,GAAW,uCAAuC,CAAC;IAFzD,uBAAuB;QAYjC,WAAA,4BAAgB,CAAA;QAChB,WAAA,qBAAa,CAAA;QACb,WAAA,8BAAc,CAAA;QACd,WAAA,0CAAoB,CAAA;QACpB,WAAA,oBAAY,CAAA;QACZ,WAAA,sDAA0B,CAAA;OAjBhB,uBAAuB,CAuHnC;IAvHY,0DAAuB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Verbosity } from 'vs/workbench/common/editor';\nimport { AbstractTextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { IUntitledTextEditorModel } from 'vs/workbench/services/untitled/common/untitledTextEditorModel';\nimport { EncodingMode, IEncodingSupport, IModeSupport, ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { isEqual } from 'vs/base/common/resources';\n\n/**\n * An editor input to be used for untitled text buffers.\n */\nexport class UntitledTextEditorInput extends AbstractTextResourceEditorInput implements IEncodingSupport, IModeSupport {\n\n\tstatic readonly ID: string = 'workbench.editors.untitledEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn UntitledTextEditorInput.ID;\n\t}\n\n\tprivate modelResolve: Promise<void> | undefined = undefined;\n\n\tconstructor(\n\t\tpublic readonly model: IUntitledTextEditorModel,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper(model.resource, undefined, editorService, editorGroupService, textFileService, labelService, fileService, filesConfigurationService);\n\n\t\tthis.registerModelListeners(model);\n\t}\n\n\tprivate registerModelListeners(model: IUntitledTextEditorModel): void {\n\n\t\t// re-emit some events from the model\n\t\tthis._register(model.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(model.onDidChangeName(() => this._onDidChangeLabel.fire()));\n\n\t\t// a reverted untitled text editor model renders this input disposed\n\t\tthis._register(model.onDidRevert(() => this.dispose()));\n\t}\n\n\toverride getName(): string {\n\t\treturn this.model.name;\n\t}\n\n\toverride getDescription(verbosity: Verbosity = Verbosity.MEDIUM): string | undefined {\n\n\t\t// Without associated path: only use if name and description differ\n\t\tif (!this.model.hasAssociatedFilePath) {\n\t\t\tconst descriptionCandidate = this.resource.path;\n\t\t\tif (descriptionCandidate !== this.getName()) {\n\t\t\t\treturn descriptionCandidate;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// With associated path: delegate to parent\n\t\treturn super.getDescription(verbosity);\n\t}\n\n\toverride getTitle(verbosity: Verbosity): string {\n\n\t\t// Without associated path: check if name and description differ to decide\n\t\t// if description should appear besides the name to distinguish better\n\t\tif (!this.model.hasAssociatedFilePath) {\n\t\t\tconst name = this.getName();\n\t\t\tconst description = this.getDescription();\n\t\t\tif (description && description !== name) {\n\t\t\t\treturn `${name} â€¢ ${description}`;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t}\n\n\t\t// With associated path: delegate to parent\n\t\treturn super.getTitle(verbosity);\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.model.isDirty();\n\t}\n\n\tgetEncoding(): string | undefined {\n\t\treturn this.model.getEncoding();\n\t}\n\n\tsetEncoding(encoding: string, mode: EncodingMode /* ignored, we only have Encode */): Promise<void> {\n\t\treturn this.model.setEncoding(encoding);\n\t}\n\n\tsetMode(mode: string): void {\n\t\tthis.model.setMode(mode);\n\t}\n\n\tgetMode(): string | undefined {\n\t\treturn this.model.getMode();\n\t}\n\n\toverride async resolve(): Promise<IUntitledTextEditorModel> {\n\t\tif (!this.modelResolve) {\n\t\t\tthis.modelResolve = this.model.resolve();\n\t\t}\n\n\t\tawait this.modelResolve;\n\n\t\treturn this.model;\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\tif (otherInput === this) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof UntitledTextEditorInput) {\n\t\t\treturn isEqual(otherInput.resource, this.resource);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.modelResolve = undefined;\n\n\t\tsuper.dispose();\n\t}\n}\n"]}