{"version":3,"file":"history.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/history/test/browser/history.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { EditorOptions } from 'vs/workbench/common/editor';\nimport { URI } from 'vs/base/common/uri';\nimport { workbenchInstantiationService, TestFileEditorInput, registerTestEditor, createEditorPart } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { EditorPart } from 'vs/workbench/browser/parts/editor/editorPart';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IEditorGroupsService, GroupDirection } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { HistoryService } from 'vs/workbench/services/history/browser/history';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorService } from 'vs/workbench/services/editor/browser/editorService';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { timeout } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\n\nsuite('HistoryService', function () {\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditorHistory';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForHistoyService';\n\n\tasync function createServices(): Promise<[EditorPart, HistoryService, EditorService]> {\n\t\tconst instantiationService = workbenchInstantiationService();\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService = instantiationService.createInstance(EditorService);\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\tconst historyService = instantiationService.createInstance(HistoryService);\n\t\tinstantiationService.stub(IHistoryService, historyService);\n\n\t\treturn [part, historyService, editorService];\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)]));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('back / forward', async () => {\n\t\tconst [part, historyService, editorService] = await createServices();\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tawait part.activeGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input1);\n\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID);\n\t\tawait part.activeGroup.openEditor(input2, EditorOptions.create({ pinned: true }));\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\n\t\tlet editorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.back();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input1);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.forward();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\t});\n\n\ttest('getHistory', async () => {\n\t\tconst [part, historyService] = await createServices();\n\n\t\tlet history = historyService.getHistory();\n\t\tassert.strictEqual(history.length, 0);\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tawait part.activeGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID);\n\t\tawait part.activeGroup.openEditor(input2, EditorOptions.create({ pinned: true }));\n\n\t\thistory = historyService.getHistory();\n\t\tassert.strictEqual(history.length, 2);\n\n\t\thistoryService.removeFromHistory(input2);\n\t\thistory = historyService.getHistory();\n\t\tassert.strictEqual(history.length, 1);\n\t\tassert.strictEqual(history[0], input1);\n\t});\n\n\ttest('getLastActiveFile', async () => {\n\t\tconst [part, historyService] = await createServices();\n\n\t\tassert.ok(!historyService.getLastActiveFile('foo'));\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tawait part.activeGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\n\t\tassert.strictEqual(historyService.getLastActiveFile('foo')?.toString(), input1.resource.toString());\n\t});\n\n\ttest('open next/previous recently used editor (single group)', async () => {\n\t\tconst [part, historyService, editorService] = await createServices();\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait part.activeGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input1);\n\n\t\tawait part.activeGroup.openEditor(input2, EditorOptions.create({ pinned: true }));\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\n\t\tlet editorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openPreviouslyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input1);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openNextRecentlyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openPreviouslyUsedEditor(part.activeGroup.id);\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input1);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openNextRecentlyUsedEditor(part.activeGroup.id);\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\t});\n\n\ttest('open next/previous recently used editor (multi group)', async () => {\n\t\tconst [part, historyService, editorService] = await createServices();\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst sideGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tawait rootGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\t\tawait sideGroup.openEditor(input2, EditorOptions.create({ pinned: true }));\n\n\t\tlet editorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openPreviouslyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup, rootGroup);\n\t\tassert.strictEqual(rootGroup.activeEditor, input1);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openNextRecentlyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\t\tassert.strictEqual(sideGroup.activeEditor, input2);\n\t});\n\n\ttest('open next/previous recently is reset when other input opens', async () => {\n\t\tconst [part, historyService, editorService] = await createServices();\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = new TestFileEditorInput(URI.parse('foo://bar3'), TEST_EDITOR_INPUT_ID);\n\t\tconst input4 = new TestFileEditorInput(URI.parse('foo://bar4'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait part.activeGroup.openEditor(input1, EditorOptions.create({ pinned: true }));\n\t\tawait part.activeGroup.openEditor(input2, EditorOptions.create({ pinned: true }));\n\t\tawait part.activeGroup.openEditor(input3, EditorOptions.create({ pinned: true }));\n\n\t\tlet editorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openPreviouslyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\n\t\tawait timeout(0);\n\t\tawait part.activeGroup.openEditor(input4, EditorOptions.create({ pinned: true }));\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openPreviouslyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input2);\n\n\t\teditorChangePromise = Event.toPromise(editorService.onDidActiveEditorChange);\n\t\thistoryService.openNextRecentlyUsedEditor();\n\t\tawait editorChangePromise;\n\t\tassert.strictEqual(part.activeGroup.activeEditor, input4);\n\t});\n});\n"]}