{"version":3,"sources":["vs/workbench/services/history/browser/history.ts"],"names":[],"mappings":"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","file":"history.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { ITextEditorOptions, IResourceEditorInput, TextEditorSelectionRevealType, IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditorPane, EditorExtensions, EditorInput, IEditorCloseEvent, IEditorInputFactoryRegistry, EditorResourceAccessor, IEditorIdentifier, GroupIdentifier, EditorsOrder, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { FileChangesEvent, IFileService, FileChangeType, FILES_EXCLUDE_CONFIG, FileOperationEvent, FileOperation } from 'vs/platform/files/common/files';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { dispose, Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { getCodeEditor, ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { getExcludes, ISearchConfiguration, SEARCH_EXCLUDE_CONFIG } from 'vs/workbench/services/search/common/search';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorServiceImpl } from 'vs/workbench/browser/parts/editor/editor';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { coalesce, remove } from 'vs/base/common/arrays';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { addDisposableListener, EventType, EventHelper } from 'vs/base/browser/dom';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { Schemas } from 'vs/base/common/network';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IdleValue } from 'vs/base/common/async';\nimport { ResourceGlobMatcher } from 'vs/workbench/common/resources';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\n/**\n * Stores the selection & view state of an editor and allows to compare it to other selection states.\n */\nexport class TextEditorState {\n\n\tprivate static readonly EDITOR_SELECTION_THRESHOLD = 10; // number of lines to move in editor to justify for new state\n\n\tconstructor(private _editorInput: IEditorInput, private _selection: Selection | null) { }\n\n\tget editorInput(): IEditorInput {\n\t\treturn this._editorInput;\n\t}\n\n\tget selection(): Selection | undefined {\n\t\treturn withNullAsUndefined(this._selection);\n\t}\n\n\tjustifiesNewPushState(other: TextEditorState, event?: ICursorPositionChangedEvent): boolean {\n\t\tif (event?.source === 'api') {\n\t\t\treturn true; // always let API source win (e.g. \"Go to definition\" should add a history entry)\n\t\t}\n\n\t\tif (!this._editorInput.matches(other._editorInput)) {\n\t\t\treturn true; // different editor inputs\n\t\t}\n\n\t\tif (!Selection.isISelection(this._selection) || !Selection.isISelection(other._selection)) {\n\t\t\treturn true; // unknown selections\n\t\t}\n\n\t\tconst thisLineNumber = Math.min(this._selection.selectionStartLineNumber, this._selection.positionLineNumber);\n\t\tconst otherLineNumber = Math.min(other._selection.selectionStartLineNumber, other._selection.positionLineNumber);\n\n\t\tif (Math.abs(thisLineNumber - otherLineNumber) < TextEditorState.EDITOR_SELECTION_THRESHOLD) {\n\t\t\treturn false; // ignore selection changes in the range of EditorState.EDITOR_SELECTION_THRESHOLD lines\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\ninterface ISerializedEditorHistoryEntry {\n\tresourceJSON?: object;\n\teditorInputJSON?: { typeId: string; deserialized: string; };\n}\n\ninterface IStackEntry {\n\tinput: IEditorInput | IResourceEditorInput;\n\tselection?: Selection;\n}\n\ninterface IRecentlyClosedEditor {\n\tresource: URI | undefined;\n\tassociatedResources: URI[];\n\tserialized: { typeId: string, value: string };\n\tindex: number;\n\tsticky: boolean;\n}\n\nexport class HistoryService extends Disposable implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly activeEditorListeners = this._register(new DisposableStore());\n\tprivate lastActiveEditor?: IEditorIdentifier;\n\n\tprivate readonly editorHistoryListeners = new Map();\n\tprivate readonly editorStackListeners = new Map();\n\n\tprivate readonly editorInputFactory = Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories);\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: EditorServiceImpl,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.onActiveEditorChanged()));\n\t\tthis._register(this.editorService.onDidOpenEditorFail(event => this.remove(event.editor)));\n\t\tthis._register(this.editorService.onDidCloseEditor(event => this.onEditorClosed(event)));\n\t\tthis._register(this.storageService.onWillSaveState(() => this.saveState()));\n\t\tthis._register(this.fileService.onDidFilesChange(event => this.onDidFilesChange(event)));\n\t\tthis._register(this.fileService.onDidRunOperation(event => this.onDidFilesChange(event)));\n\t\tthis._register(this.editorService.onDidMostRecentlyActiveEditorsChange(() => this.handleEditorEventInRecentEditorsStack()));\n\n\t\t// if the service is created late enough that an editor is already opened\n\t\t// make sure to trigger the onActiveEditorChanged() to track the editor\n\t\t// properly (fixes https://github.com/microsoft/vscode/issues/59908)\n\t\tif (this.editorService.activeEditorPane) {\n\t\t\tthis.onActiveEditorChanged();\n\t\t}\n\n\t\t// Mouse back/forward support\n\t\tconst mouseBackForwardSupportListener = this._register(new DisposableStore());\n\t\tconst handleMouseBackForwardSupport = () => {\n\t\t\tmouseBackForwardSupportListener.clear();\n\n\t\t\tif (this.configurationService.getValue('workbench.editor.mouseBackForwardToNavigate')) {\n\t\t\t\tmouseBackForwardSupportListener.add(addDisposableListener(this.layoutService.container, EventType.MOUSE_DOWN, e => this.onMouseDown(e)));\n\t\t\t}\n\t\t};\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(event => {\n\t\t\tif (event.affectsConfiguration('workbench.editor.mouseBackForwardToNavigate')) {\n\t\t\t\thandleMouseBackForwardSupport();\n\t\t\t}\n\t\t}));\n\n\t\thandleMouseBackForwardSupport();\n\t}\n\n\tprivate onMouseDown(event: MouseEvent): void {\n\n\t\t// Support to navigate in history when mouse buttons 4/5 are pressed\n\t\tswitch (event.button) {\n\t\t\tcase 3:\n\t\t\t\tEventHelper.stop(event);\n\t\t\t\tthis.back();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tEventHelper.stop(event);\n\t\t\t\tthis.forward();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate onActiveEditorChanged(): void {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (this.lastActiveEditor && this.matchesEditor(this.lastActiveEditor, activeEditorPane)) {\n\t\t\treturn; // return if the active editor is still the same\n\t\t}\n\n\t\t// Remember as last active editor (can be undefined if none opened)\n\t\tthis.lastActiveEditor = activeEditorPane?.input && activeEditorPane.group ? { editor: activeEditorPane.input, groupId: activeEditorPane.group.id } : undefined;\n\n\t\t// Dispose old listeners\n\t\tthis.activeEditorListeners.clear();\n\n\t\t// Propagate to history\n\t\tthis.handleActiveEditorChange(activeEditorPane);\n\n\t\t// Apply listener for selection changes if this is a text editor\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeTextEditorControl) {\n\n\t\t\t// Debounce the event with a timeout of 0ms so that multiple calls to\n\t\t\t// editor.setSelection() are folded into one. We do not want to record\n\t\t\t// subsequent history navigations for such API calls.\n\t\t\tthis.activeEditorListeners.add(Event.debounce(activeTextEditorControl.onDidChangeCursorPosition, (last, event) => event, 0)((event => {\n\t\t\t\tthis.handleEditorSelectionChangeEvent(activeEditorPane, event);\n\t\t\t})));\n\n\t\t\t// Track the last edit location by tracking model content change events\n\t\t\t// Use a debouncer to make sure to capture the correct cursor position\n\t\t\t// after the model content has changed.\n\t\t\tthis.activeEditorListeners.add(Event.debounce(activeTextEditorControl.onDidChangeModelContent, (last, event) => event, 0)((event => {\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\tthis.rememberLastEditLocation(activeEditor, activeTextEditorControl);\n\t\t\t\t}\n\t\t\t})));\n\t\t}\n\t}\n\n\tprivate matchesEditor(identifier: IEditorIdentifier, editor?: IEditorPane): boolean {\n\t\tif (!editor || !editor.group) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (identifier.groupId !== editor.group.id) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn identifier.editor.matches(editor.input);\n\t}\n\n\tprivate onDidFilesChange(event: FileChangesEvent | FileOperationEvent): void {\n\n\t\t// External file changes (watcher)\n\t\tif (event instanceof FileChangesEvent) {\n\t\t\tif (event.gotDeleted()) {\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\t\t}\n\n\t\t// Internal file changes (e.g. explorer)\n\t\telse {\n\n\t\t\t// Delete\n\t\t\tif (event.isOperation(FileOperation.DELETE)) {\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\n\t\t\t// Move\n\t\t\telse if (event.isOperation(FileOperation.MOVE) && event.target.isFile) {\n\t\t\t\tthis.move(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleEditorSelectionChangeEvent(editor?: IEditorPane, event?: ICursorPositionChangedEvent): void {\n\t\tthis.handleEditorEventInNavigationStack(editor, event);\n\t}\n\n\tprivate handleActiveEditorChange(editor?: IEditorPane): void {\n\t\tthis.handleEditorEventInHistory(editor);\n\t\tthis.handleEditorEventInNavigationStack(editor);\n\t}\n\n\tprivate onEditorDispose(editor: EditorInput, listener: Function, mapEditorToDispose: Map<EditorInput, DisposableStore>): void {\n\t\tconst toDispose = Event.once(editor.onWillDispose)(() => listener());\n\n\t\tlet disposables = mapEditorToDispose.get(editor);\n\t\tif (!disposables) {\n\t\t\tdisposables = new DisposableStore();\n\t\t\tmapEditorToDispose.set(editor, disposables);\n\t\t}\n\n\t\tdisposables.add(toDispose);\n\t}\n\n\tprivate clearOnEditorDispose(editor: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent, mapEditorToDispose: Map<EditorInput, DisposableStore>): void {\n\t\tif (!(editor instanceof EditorInput)) {\n\t\t\treturn; // only supported when passing in an actual editor input\n\t\t}\n\n\t\tconst disposables = mapEditorToDispose.get(editor);\n\t\tif (disposables) {\n\t\t\tdispose(disposables);\n\t\t\tmapEditorToDispose.delete(editor);\n\t\t}\n\t}\n\n\tprivate move(event: FileOperationEvent): void {\n\t\tthis.moveInHistory(event);\n\t\tthis.moveInNavigationStack(event);\n\t}\n\n\tprivate remove(input: IEditorInput | IResourceEditorInput): void;\n\tprivate remove(event: FileChangesEvent): void;\n\tprivate remove(event: FileOperationEvent): void;\n\tprivate remove(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.removeFromHistory(arg1);\n\t\tthis.removeFromNavigationStack(arg1);\n\t\tthis.removeFromRecentlyClosedEditors(arg1);\n\t\tthis.removeFromRecentlyOpened(arg1);\n\t}\n\n\tprivate removeFromRecentlyOpened(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tlet resource: URI | undefined = undefined;\n\t\tif (arg1 instanceof EditorInput) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(arg1);\n\t\t} else if (arg1 instanceof FileChangesEvent) {\n\t\t\t// Ignore for now (recently opened are most often out of workspace files anyway for which there are no file events)\n\t\t} else {\n\t\t\tresource = arg1.resource;\n\t\t}\n\n\t\tif (resource) {\n\t\t\tthis.workspacesService.removeRecentlyOpened([resource]);\n\t\t}\n\t}\n\n\tclear(): void {\n\n\t\t// History\n\t\tthis.clearRecentlyOpened();\n\n\t\t// Navigation (next, previous)\n\t\tthis.navigationStackIndex = -1;\n\t\tthis.lastNavigationStackIndex = -1;\n\t\tthis.navigationStack.splice(0);\n\t\tthis.editorStackListeners.forEach(listeners => dispose(listeners));\n\t\tthis.editorStackListeners.clear();\n\n\t\t// Recently closed editors\n\t\tthis.recentlyClosedEditors = [];\n\n\t\t// Context Keys\n\t\tthis.updateContextKeys();\n\t}\n\n\t//#region Navigation (Go Forward, Go Backward)\n\n\tprivate static readonly MAX_NAVIGATION_STACK_ITEMS = 50;\n\n\tprivate navigationStack: IStackEntry[] = [];\n\tprivate navigationStackIndex = -1;\n\tprivate lastNavigationStackIndex = -1;\n\n\tprivate navigatingInStack = false;\n\n\tprivate currentTextEditorState: TextEditorState | null = null;\n\n\tforward(): void {\n\t\tif (this.navigationStack.length > this.navigationStackIndex + 1) {\n\t\t\tthis.setIndex(this.navigationStackIndex + 1);\n\t\t\tthis.navigate();\n\t\t}\n\t}\n\n\tback(): void {\n\t\tif (this.navigationStackIndex > 0) {\n\t\t\tthis.setIndex(this.navigationStackIndex - 1);\n\t\t\tthis.navigate();\n\t\t}\n\t}\n\n\tlast(): void {\n\t\tif (this.lastNavigationStackIndex === -1) {\n\t\t\tthis.back();\n\t\t} else {\n\t\t\tthis.setIndex(this.lastNavigationStackIndex);\n\t\t\tthis.navigate();\n\t\t}\n\t}\n\n\tprivate setIndex(value: number): void {\n\t\tthis.lastNavigationStackIndex = this.navigationStackIndex;\n\t\tthis.navigationStackIndex = value;\n\n\t\t// Context Keys\n\t\tthis.updateContextKeys();\n\t}\n\n\tprivate navigate(): void {\n\t\tthis.navigatingInStack = true;\n\n\t\tconst navigateToStackEntry = this.navigationStack[this.navigationStackIndex];\n\n\t\tthis.doNavigate(navigateToStackEntry).finally(() => { this.navigatingInStack = false; });\n\t}\n\n\tprivate doNavigate(location: IStackEntry): Promise<IEditorPane | undefined> {\n\t\tconst options: ITextEditorOptions = {\n\t\t\trevealIfOpened: true, // support to navigate across editor groups,\n\t\t\tselection: location.selection,\n\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport\n\t\t};\n\n\t\tif (location.input instanceof EditorInput) {\n\t\t\treturn this.editorService.openEditor(location.input, options);\n\t\t}\n\n\t\treturn this.editorService.openEditor({ resource: (location.input as IResourceEditorInput).resource, options });\n\t}\n\n\tprivate handleEditorEventInNavigationStack(control: IEditorPane | undefined, event?: ICursorPositionChangedEvent): void {\n\t\tconst codeEditor = control ? getCodeEditor(control.getControl()) : undefined;\n\n\t\t// treat editor changes that happen as part of stack navigation specially\n\t\t// we do not want to add a new stack entry as a matter of navigating the\n\t\t// stack but we need to keep our currentTextEditorState up to date with\n\t\t// the navigtion that occurs.\n\t\tif (this.navigatingInStack) {\n\t\t\tif (codeEditor && control?.input && !control.input.isDisposed()) {\n\t\t\t\tthis.currentTextEditorState = new TextEditorState(control.input, codeEditor.getSelection());\n\t\t\t} else {\n\t\t\t\tthis.currentTextEditorState = null; // we navigated to a non text or disposed editor\n\t\t\t}\n\t\t}\n\n\t\t// normal navigation not part of history navigation\n\t\telse {\n\n\t\t\t// navigation inside text editor\n\t\t\tif (codeEditor && control?.input && !control.input.isDisposed()) {\n\t\t\t\tthis.handleTextEditorEventInNavigationStack(control, codeEditor, event);\n\t\t\t}\n\n\t\t\t// navigation to non-text disposed editor\n\t\t\telse {\n\t\t\t\tthis.currentTextEditorState = null; // at this time we have no active text editor view state\n\n\t\t\t\tif (control?.input && !control.input.isDisposed()) {\n\t\t\t\t\tthis.handleNonTextEditorEventInNavigationStack(control);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleTextEditorEventInNavigationStack(editor: IEditorPane, editorControl: IEditor, event?: ICursorPositionChangedEvent): void {\n\t\tif (!editor.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst stateCandidate = new TextEditorState(editor.input, editorControl.getSelection());\n\n\t\t// Add to stack if we dont have a current state or this new state justifies a push\n\t\tif (!this.currentTextEditorState || this.currentTextEditorState.justifiesNewPushState(stateCandidate, event)) {\n\t\t\tthis.addToNavigationStack(editor.input, stateCandidate.selection);\n\t\t}\n\n\t\t// Otherwise we replace the current stack entry with this one\n\t\telse {\n\t\t\tthis.replaceInNavigationStack(editor.input, stateCandidate.selection);\n\t\t}\n\n\t\t// Update our current text editor state\n\t\tthis.currentTextEditorState = stateCandidate;\n\t}\n\n\tprivate handleNonTextEditorEventInNavigationStack(editor: IEditorPane): void {\n\t\tif (!editor.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentStack = this.navigationStack[this.navigationStackIndex];\n\t\tif (currentStack && this.matches(editor.input, currentStack.input)) {\n\t\t\treturn; // do not push same editor input again\n\t\t}\n\n\t\tthis.addToNavigationStack(editor.input);\n\t}\n\n\tprivate addToNavigationStack(input: IEditorInput | IResourceEditorInput, selection?: Selection): void {\n\t\tif (!this.navigatingInStack) {\n\t\t\tthis.doAddOrReplaceInNavigationStack(input, selection);\n\t\t}\n\t}\n\n\tprivate replaceInNavigationStack(input: IEditorInput | IResourceEditorInput, selection?: Selection): void {\n\t\tif (!this.navigatingInStack) {\n\t\t\tthis.doAddOrReplaceInNavigationStack(input, selection, true /* force replace */);\n\t\t}\n\t}\n\n\tprivate doAddOrReplaceInNavigationStack(input: IEditorInput | IResourceEditorInput, selection?: Selection, forceReplace?: boolean): void {\n\n\t\t// Overwrite an entry in the stack if we have a matching input that comes\n\t\t// with editor options to indicate that this entry is more specific. Also\n\t\t// prevent entries that have the exact same options. Finally, Overwrite\n\t\t// entries if we detect that the change came in very fast which indicates\n\t\t// that it was not coming in from a user change but rather rapid programmatic\n\t\t// changes. We just take the last of the changes to not cause too many entries\n\t\t// on the stack.\n\t\t// We can also be instructed to force replace the last entry.\n\t\tlet replace = false;\n\t\tconst currentEntry = this.navigationStack[this.navigationStackIndex];\n\t\tif (currentEntry) {\n\t\t\tif (forceReplace) {\n\t\t\t\treplace = true; // replace if we are forced to\n\t\t\t} else if (this.matches(input, currentEntry.input) && this.sameSelection(currentEntry.selection, selection)) {\n\t\t\t\treplace = true; // replace if the input is the same as the current one and the selection as well\n\t\t\t}\n\t\t}\n\n\t\tconst stackEditorInput = this.preferResourceEditorInput(input);\n\t\tif (!stackEditorInput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = { input: stackEditorInput, selection };\n\n\t\t// Replace at current position\n\t\tlet removedEntries: IStackEntry[] = [];\n\t\tif (replace) {\n\t\t\tremovedEntries.push(this.navigationStack[this.navigationStackIndex]);\n\t\t\tthis.navigationStack[this.navigationStackIndex] = entry;\n\t\t}\n\n\t\t// Add to stack at current position\n\t\telse {\n\n\t\t\t// If we are not at the end of history, we remove anything after\n\t\t\tif (this.navigationStack.length > this.navigationStackIndex + 1) {\n\t\t\t\tfor (let i = this.navigationStackIndex + 1; i < this.navigationStack.length; i++) {\n\t\t\t\t\tremovedEntries.push(this.navigationStack[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.navigationStack = this.navigationStack.slice(0, this.navigationStackIndex + 1);\n\t\t\t}\n\n\t\t\t// Insert entry at index\n\t\t\tthis.navigationStack.splice(this.navigationStackIndex + 1, 0, entry);\n\n\t\t\t// Check for limit\n\t\t\tif (this.navigationStack.length > HistoryService.MAX_NAVIGATION_STACK_ITEMS) {\n\t\t\t\tremovedEntries.push(this.navigationStack.shift()!); // remove first\n\t\t\t\tif (this.lastNavigationStackIndex >= 0) {\n\t\t\t\t\tthis.lastNavigationStackIndex--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setIndex(this.navigationStackIndex + 1);\n\t\t\t}\n\t\t}\n\n\t\t// Clear editor listeners from removed entries\n\t\tremovedEntries.forEach(removedEntry => this.clearOnEditorDispose(removedEntry.input, this.editorStackListeners));\n\n\t\t// Remove this from the stack unless the stack input is a resource\n\t\t// that can easily be restored even when the input gets disposed\n\t\tif (stackEditorInput instanceof EditorInput) {\n\t\t\tthis.onEditorDispose(stackEditorInput, () => this.removeFromNavigationStack(stackEditorInput), this.editorStackListeners);\n\t\t}\n\n\t\t// Context Keys\n\t\tthis.updateContextKeys();\n\t}\n\n\tprivate preferResourceEditorInput(input: IEditorInput): IEditorInput | IResourceEditorInput;\n\tprivate preferResourceEditorInput(input: IResourceEditorInput): IResourceEditorInput | undefined;\n\tprivate preferResourceEditorInput(input: IEditorInput | IResourceEditorInput): IEditorInput | IResourceEditorInput | undefined;\n\tprivate preferResourceEditorInput(input: IEditorInput | IResourceEditorInput): IEditorInput | IResourceEditorInput | undefined {\n\t\tlet resource: URI | undefined = undefined;\n\t\tif (input instanceof EditorInput) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(input);\n\t\t} else {\n\t\t\tresource = input.resource;\n\t\t}\n\n\t\t// for now, only prefer well known schemes that we control to prevent\n\t\t// issues such as https://github.com/microsoft/vscode/issues/85204\n\t\t// from being used as resource inputs\n\t\t// resource inputs survive editor disposal and as such are a lot more\n\t\t// durable across editor changes and restarts\n\t\tconst validResourceEditorInputScheme =\n\t\t\tresource?.scheme === Schemas.file ||\n\t\t\tresource?.scheme === Schemas.vscodeRemote ||\n\t\t\tresource?.scheme === Schemas.userData ||\n\t\t\tresource?.scheme === this.pathService.defaultUriScheme;\n\n\t\tif (input instanceof EditorInput) {\n\t\t\treturn validResourceEditorInputScheme && resource ? { resource } : input;\n\t\t}\n\n\t\treturn validResourceEditorInputScheme ? input : undefined;\n\t}\n\n\tprivate sameSelection(selectionA?: Selection, selectionB?: Selection): boolean {\n\t\tif (!selectionA && !selectionB) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!selectionA || !selectionB) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn selectionA.startLineNumber === selectionB.startLineNumber; // we consider the history entry same if we are on the same line\n\t}\n\n\tprivate moveInNavigationStack(event: FileOperationEvent): void {\n\t\tthis.removeFromNavigationStack(event);\n\t\tif (event.target) {\n\t\t\tthis.addToNavigationStack({ resource: event.target.resource });\n\t\t}\n\t}\n\n\tprivate removeFromNavigationStack(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.navigationStack = this.navigationStack.filter(e => {\n\t\t\tconst matches = this.matches(arg1, e.input);\n\n\t\t\t// Cleanup any listeners associated with the input when removing\n\t\t\tif (matches) {\n\t\t\t\tthis.clearOnEditorDispose(arg1, this.editorStackListeners);\n\t\t\t}\n\n\t\t\treturn !matches;\n\t\t});\n\t\tthis.navigationStackIndex = this.navigationStack.length - 1; // reset index\n\t\tthis.lastNavigationStackIndex = -1;\n\n\t\t// Context Keys\n\t\tthis.updateContextKeys();\n\t}\n\n\tprivate matches(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent, inputB: IEditorInput | IResourceEditorInput): boolean {\n\t\tif (arg1 instanceof FileChangesEvent || arg1 instanceof FileOperationEvent) {\n\t\t\tif (inputB instanceof EditorInput) {\n\t\t\t\treturn false; // we only support this for `IResourceEditorInputs` that are file based\n\t\t\t}\n\n\t\t\tif (arg1 instanceof FileChangesEvent) {\n\t\t\t\treturn arg1.contains((inputB as IResourceEditorInput).resource, FileChangeType.DELETED);\n\t\t\t}\n\n\t\t\treturn this.matchesFile((inputB as IResourceEditorInput).resource, arg1);\n\t\t}\n\n\t\tif (arg1 instanceof EditorInput && inputB instanceof EditorInput) {\n\t\t\treturn arg1.matches(inputB);\n\t\t}\n\n\t\tif (arg1 instanceof EditorInput) {\n\t\t\treturn this.matchesFile((inputB as IResourceEditorInput).resource, arg1);\n\t\t}\n\n\t\tif (inputB instanceof EditorInput) {\n\t\t\treturn this.matchesFile((arg1 as IResourceEditorInput).resource, inputB);\n\t\t}\n\n\t\tconst resourceEditorInputA = arg1 as IResourceEditorInput;\n\t\tconst resourceEditorInputB = inputB as IResourceEditorInput;\n\n\t\treturn resourceEditorInputA && resourceEditorInputB && this.uriIdentityService.extUri.isEqual(resourceEditorInputA.resource, resourceEditorInputB.resource);\n\t}\n\n\tprivate matchesFile(resource: URI, arg2: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): boolean {\n\t\tif (arg2 instanceof FileChangesEvent) {\n\t\t\treturn arg2.contains(resource, FileChangeType.DELETED);\n\t\t}\n\n\t\tif (arg2 instanceof FileOperationEvent) {\n\t\t\treturn this.uriIdentityService.extUri.isEqualOrParent(resource, arg2.resource);\n\t\t}\n\n\t\tif (arg2 instanceof EditorInput) {\n\t\t\tconst inputResource = arg2.resource;\n\t\t\tif (!inputResource) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.lifecycleService.phase >= LifecyclePhase.Restored && !this.fileService.canHandleResource(inputResource)) {\n\t\t\t\treturn false; // make sure to only check this when workbench has restored (for https://github.com/microsoft/vscode/issues/48275)\n\t\t\t}\n\n\t\t\treturn this.uriIdentityService.extUri.isEqual(inputResource, resource);\n\t\t}\n\n\t\tconst resourceEditorInput = arg2 as IResourceEditorInput;\n\n\t\treturn this.uriIdentityService.extUri.isEqual(resourceEditorInput?.resource, resource);\n\t}\n\n\t//#endregion\n\n\t//#region Recently Closed Editors\n\n\tprivate static readonly MAX_RECENTLY_CLOSED_EDITORS = 20;\n\n\tprivate recentlyClosedEditors: IRecentlyClosedEditor[] = [];\n\tprivate ignoreEditorCloseEvent = false;\n\n\tprivate onEditorClosed(event: IEditorCloseEvent): void {\n\t\tif (this.ignoreEditorCloseEvent) {\n\t\t\treturn; // blocked\n\t\t}\n\n\t\tconst { editor, replaced } = event;\n\t\tif (replaced) {\n\t\t\treturn; // ignore if editor was replaced\n\t\t}\n\n\t\tconst editorSerializer = this.editorInputFactory.getEditorInputSerializer(editor);\n\t\tif (!editorSerializer || !editorSerializer.canSerialize(editor)) {\n\t\t\treturn; // we need a serializer from this point that can serialize this editor\n\t\t}\n\n\t\tconst serialized = editorSerializer.serialize(editor);\n\t\tif (typeof serialized !== 'string') {\n\t\t\treturn; // we need something to deserialize from\n\t\t}\n\n\t\tconst associatedResources: URI[] = [];\n\t\tconst editorResource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH });\n\t\tif (URI.isUri(editorResource)) {\n\t\t\tassociatedResources.push(editorResource);\n\t\t} else if (editorResource) {\n\t\t\tassociatedResources.push(...coalesce([editorResource.primary, editorResource.secondary]));\n\t\t}\n\n\t\t// Remove from list of recently closed before...\n\t\tthis.removeFromRecentlyClosedEditors(editor);\n\n\t\t// ...adding it as last recently closed\n\t\tthis.recentlyClosedEditors.push({\n\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor),\n\t\t\tassociatedResources,\n\t\t\tserialized: { typeId: editor.typeId, value: serialized },\n\t\t\tindex: event.index,\n\t\t\tsticky: event.sticky\n\t\t});\n\n\t\t// Bounding\n\t\tif (this.recentlyClosedEditors.length > HistoryService.MAX_RECENTLY_CLOSED_EDITORS) {\n\t\t\tthis.recentlyClosedEditors.shift();\n\t\t}\n\n\t\t// Context\n\t\tthis.canReopenClosedEditorContextKey.set(true);\n\t}\n\n\treopenLastClosedEditor(): void {\n\n\t\t// Open editor if we have one\n\t\tconst lastClosedEditor = this.recentlyClosedEditors.pop();\n\t\tif (lastClosedEditor) {\n\t\t\tthis.doReopenLastClosedEditor(lastClosedEditor);\n\t\t}\n\n\t\t// Update context\n\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\t}\n\n\tprivate async doReopenLastClosedEditor(lastClosedEditor: IRecentlyClosedEditor): Promise<void> {\n\n\t\t// Determine editor options\n\t\tlet options: IEditorOptions;\n\t\tif (lastClosedEditor.sticky) {\n\t\t\t// Sticky: in case the target index is outside of the range of\n\t\t\t// sticky editors, we make sure to not provide the index as\n\t\t\t// option. Otherwise the index will cause the sticky flag to\n\t\t\t// be ignored.\n\t\t\tif (!this.editorGroupService.activeGroup.isSticky(lastClosedEditor.index)) {\n\t\t\t\toptions = { pinned: true, sticky: true, ignoreError: true };\n\t\t\t} else {\n\t\t\t\toptions = { pinned: true, sticky: true, index: lastClosedEditor.index, ignoreError: true };\n\t\t\t}\n\t\t} else {\n\t\t\toptions = { pinned: true, index: lastClosedEditor.index, ignoreError: true };\n\t\t}\n\n\t\t// Deserialize and open editor unless already opened\n\t\tconst restoredEditor = this.editorInputFactory.getEditorInputSerializer(lastClosedEditor.serialized.typeId)?.deserialize(this.instantiationService, lastClosedEditor.serialized.value);\n\t\tlet editorPane: IEditorPane | undefined = undefined;\n\t\tif (restoredEditor && !this.editorGroupService.activeGroup.contains(restoredEditor)) {\n\t\t\t// Fix for https://github.com/microsoft/vscode/issues/107850\n\t\t\t// If opening an editor fails, it is possible that we get\n\t\t\t// another editor-close event as a result. But we really do\n\t\t\t// want to ignore that in our list of recently closed editors\n\t\t\t//  to prevent endless loops.\n\t\t\tthis.ignoreEditorCloseEvent = true;\n\t\t\ttry {\n\t\t\t\teditorPane = await this.editorService.openEditor(restoredEditor, options);\n\t\t\t} finally {\n\t\t\t\tthis.ignoreEditorCloseEvent = false;\n\t\t\t}\n\t\t}\n\n\t\t// If no editor was opened, try with the next one\n\t\tif (!editorPane) {\n\t\t\t// Fix for https://github.com/microsoft/vscode/issues/67882\n\t\t\t// If opening of the editor fails, make sure to try the next one\n\t\t\t// but make sure to remove this one from the list to prevent\n\t\t\t// endless loops.\n\t\t\tremove(this.recentlyClosedEditors, lastClosedEditor);\n\n\t\t\t// Try with next one\n\t\t\tthis.reopenLastClosedEditor();\n\t\t}\n\t}\n\n\tprivate removeFromRecentlyClosedEditors(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.recentlyClosedEditors = this.recentlyClosedEditors.filter(recentlyClosedEditor => {\n\t\t\tif (recentlyClosedEditor.resource && this.matchesFile(recentlyClosedEditor.resource, arg1)) {\n\t\t\t\treturn false; // editor matches directly\n\t\t\t}\n\n\t\t\tif (recentlyClosedEditor.associatedResources.some(associatedResource => this.matchesFile(associatedResource, arg1))) {\n\t\t\t\treturn false; // an associated resource matches\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Update context\n\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\t}\n\n\t//#endregion\n\n\t//#region Last Edit Location\n\n\tprivate lastEditLocation: IStackEntry | undefined;\n\n\tprivate rememberLastEditLocation(activeEditor: IEditorInput, activeTextEditorControl: ICodeEditor): void {\n\t\tthis.lastEditLocation = { input: activeEditor };\n\t\tthis.canNavigateToLastEditLocationContextKey.set(true);\n\n\t\tconst position = activeTextEditorControl.getPosition();\n\t\tif (position) {\n\t\t\tthis.lastEditLocation.selection = new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t}\n\t}\n\n\topenLastEditLocation(): void {\n\t\tif (this.lastEditLocation) {\n\t\t\tthis.doNavigate(this.lastEditLocation);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Context Keys\n\n\tprivate readonly canNavigateBackContextKey = (new RawContextKey<boolean>('canNavigateBack', false, localize('canNavigateBack', \"Whether it is possible to navigate back in editor history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateForwardContextKey = (new RawContextKey<boolean>('canNavigateForward', false, localize('canNavigateForward', \"Whether it is possible to navigate forward in editor history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateToLastEditLocationContextKey = (new RawContextKey<boolean>('canNavigateToLastEditLocation', false, localize('canNavigateToLastEditLocation', \"Whether it is possible to navigate to the last edit location\"))).bindTo(this.contextKeyService);\n\tprivate readonly canReopenClosedEditorContextKey = (new RawContextKey<boolean>('canReopenClosedEditor', false, localize('canReopenClosedEditor', \"Whether it is possible to reopen the last closed editor\"))).bindTo(this.contextKeyService);\n\n\tprivate updateContextKeys(): void {\n\t\tthis.contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis.canNavigateBackContextKey.set(this.navigationStack.length > 0 && this.navigationStackIndex > 0);\n\t\t\tthis.canNavigateForwardContextKey.set(this.navigationStack.length > 0 && this.navigationStackIndex < this.navigationStack.length - 1);\n\t\t\tthis.canNavigateToLastEditLocationContextKey.set(!!this.lastEditLocation);\n\t\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region History\n\n\tprivate static readonly MAX_HISTORY_ITEMS = 200;\n\tprivate static readonly HISTORY_STORAGE_KEY = 'history.entries';\n\n\tprivate history: Array<IEditorInput | IResourceEditorInput> | undefined = undefined;\n\n\tprivate readonly resourceExcludeMatcher = this._register(new IdleValue(() => {\n\t\tconst matcher = this._register(this.instantiationService.createInstance(\n\t\t\tResourceGlobMatcher,\n\t\t\troot => getExcludes(root ? this.configurationService.getValue<ISearchConfiguration>({ resource: root }) : this.configurationService.getValue<ISearchConfiguration>()) || Object.create(null),\n\t\t\tevent => event.affectsConfiguration(FILES_EXCLUDE_CONFIG) || event.affectsConfiguration(SEARCH_EXCLUDE_CONFIG)\n\t\t));\n\n\t\tthis._register(matcher.onExpressionChange(() => this.removeExcludedFromHistory()));\n\n\t\treturn matcher;\n\t}));\n\n\tprivate handleEditorEventInHistory(editor?: IEditorPane): void {\n\n\t\t// Ensure we have not configured to exclude input and don't track invalid inputs\n\t\tconst input = editor?.input;\n\t\tif (!input || input.isDisposed() || !this.includeInHistory(input)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove any existing entry and add to the beginning\n\t\tthis.removeFromHistory(input);\n\t\tthis.addToHistory(input);\n\t}\n\n\tprivate addToHistory(input: IEditorInput | IResourceEditorInput): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tconst historyInput = this.preferResourceEditorInput(input);\n\t\tif (!historyInput) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add to beginning\n\t\tthis.history.unshift(historyInput);\n\n\t\t// Respect max entries setting\n\t\tif (this.history.length > HistoryService.MAX_HISTORY_ITEMS) {\n\t\t\tthis.clearOnEditorDispose(this.history.pop()!, this.editorHistoryListeners);\n\t\t}\n\n\t\t// Remove this from the history unless the history input is a resource\n\t\t// that can easily be restored even when the input gets disposed\n\t\tif (historyInput instanceof EditorInput) {\n\t\t\tthis.onEditorDispose(historyInput, () => this.removeFromHistory(historyInput), this.editorHistoryListeners);\n\t\t}\n\t}\n\n\tprivate includeInHistory(input: IEditorInput | IResourceEditorInput): boolean {\n\t\tif (input instanceof EditorInput) {\n\t\t\treturn true; // include any non files\n\t\t}\n\n\t\tconst resourceEditorInput = input as IResourceEditorInput;\n\n\t\treturn !this.resourceExcludeMatcher.value.matches(resourceEditorInput.resource);\n\t}\n\n\tprivate removeExcludedFromHistory(): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tthis.history = this.history.filter(e => {\n\t\t\tconst include = this.includeInHistory(e);\n\n\t\t\t// Cleanup any listeners associated with the input when removing from history\n\t\t\tif (!include) {\n\t\t\t\tthis.clearOnEditorDispose(e, this.editorHistoryListeners);\n\t\t\t}\n\n\t\t\treturn include;\n\t\t});\n\t}\n\n\tprivate moveInHistory(event: FileOperationEvent): void {\n\t\tthis.removeFromHistory(event);\n\t\tif (event.target) {\n\t\t\tthis.addToHistory({ resource: event.target.resource });\n\t\t}\n\t}\n\n\tremoveFromHistory(arg1: IEditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tthis.history = this.history.filter(e => {\n\t\t\tconst matches = this.matches(arg1, e);\n\n\t\t\t// Cleanup any listeners associated with the input when removing from history\n\t\t\tif (matches) {\n\t\t\t\tthis.clearOnEditorDispose(arg1, this.editorHistoryListeners);\n\t\t\t}\n\n\t\t\treturn !matches;\n\t\t});\n\t}\n\n\tclearRecentlyOpened(): void {\n\t\tthis.history = [];\n\n\t\tthis.editorHistoryListeners.forEach(listeners => dispose(listeners));\n\t\tthis.editorHistoryListeners.clear();\n\t}\n\n\tgetHistory(): readonly (IEditorInput | IResourceEditorInput)[] {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\treturn this.history.slice(0);\n\t}\n\n\tprivate ensureHistoryLoaded(history: Array<IEditorInput | IResourceEditorInput> | undefined): asserts history {\n\t\tif (!this.history) {\n\t\t\tthis.history = this.loadHistory();\n\t\t}\n\t}\n\n\tprivate loadHistory(): Array<IEditorInput | IResourceEditorInput> {\n\t\tlet entries: ISerializedEditorHistoryEntry[] = [];\n\n\t\tconst entriesRaw = this.storageService.get(HistoryService.HISTORY_STORAGE_KEY, StorageScope.WORKSPACE);\n\t\tif (entriesRaw) {\n\t\t\ttry {\n\t\t\t\tentries = coalesce(JSON.parse(entriesRaw));\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // https://github.com/microsoft/vscode/issues/99075\n\t\t\t}\n\t\t}\n\n\t\treturn coalesce(entries.map(entry => {\n\t\t\ttry {\n\t\t\t\treturn this.safeLoadHistoryEntry(entry);\n\t\t\t} catch (error) {\n\t\t\t\treturn undefined; // https://github.com/microsoft/vscode/issues/60960\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate safeLoadHistoryEntry(entry: ISerializedEditorHistoryEntry): IEditorInput | IResourceEditorInput | undefined {\n\t\tconst serializedEditorHistoryEntry = entry;\n\n\t\t// File resource: via URI.revive()\n\t\tif (serializedEditorHistoryEntry.resourceJSON) {\n\t\t\treturn { resource: URI.revive(<UriComponents>serializedEditorHistoryEntry.resourceJSON) };\n\t\t}\n\n\t\t// Editor input: via serializer\n\t\tconst { editorInputJSON } = serializedEditorHistoryEntry;\n\t\tif (editorInputJSON?.deserialized) {\n\t\t\tconst editorSerializer = this.editorInputFactory.getEditorInputSerializer(editorInputJSON.typeId);\n\t\t\tif (editorSerializer) {\n\t\t\t\tconst input = editorSerializer.deserialize(this.instantiationService, editorInputJSON.deserialized);\n\t\t\t\tif (input) {\n\t\t\t\t\tthis.onEditorDispose(input, () => this.removeFromHistory(input), this.editorHistoryListeners);\n\t\t\t\t}\n\n\t\t\t\treturn withNullAsUndefined(input);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate saveState(): void {\n\t\tif (!this.history) {\n\t\t\treturn; // nothing to save because history was not used\n\t\t}\n\n\t\tconst entries: ISerializedEditorHistoryEntry[] = coalesce(this.history.map((input): ISerializedEditorHistoryEntry | undefined => {\n\n\t\t\t// Editor input: try via serializer\n\t\t\tif (input instanceof EditorInput) {\n\t\t\t\tconst editorSerializer = this.editorInputFactory.getEditorInputSerializer(input);\n\t\t\t\tif (editorSerializer) {\n\t\t\t\t\tconst deserialized = editorSerializer.serialize(input);\n\t\t\t\t\tif (deserialized) {\n\t\t\t\t\t\treturn { editorInputJSON: { typeId: input.typeId, deserialized } };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// File resource: via URI.toJSON()\n\t\t\telse {\n\t\t\t\treturn { resourceJSON: (input as IResourceEditorInput).resource.toJSON() };\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}));\n\n\t\tthis.storageService.store(HistoryService.HISTORY_STORAGE_KEY, JSON.stringify(entries), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\t//#endregion\n\n\t//#region Last Active Workspace/File\n\n\tgetLastActiveWorkspaceRoot(schemeFilter?: string): URI | undefined {\n\n\t\t// No Folder: return early\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Single Folder: return early\n\t\tif (folders.length === 1) {\n\t\t\tconst resource = folders[0].uri;\n\t\t\tif (!schemeFilter || resource.scheme === schemeFilter) {\n\t\t\t\treturn resource;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Multiple folders: find the last active one\n\t\tfor (const input of this.getHistory()) {\n\t\t\tif (input instanceof EditorInput) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst resourceEditorInput = input as IResourceEditorInput;\n\t\t\tif (schemeFilter && resourceEditorInput.resource.scheme !== schemeFilter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst resourceWorkspace = this.contextService.getWorkspaceFolder(resourceEditorInput.resource);\n\t\t\tif (resourceWorkspace) {\n\t\t\t\treturn resourceWorkspace.uri;\n\t\t\t}\n\t\t}\n\n\t\t// fallback to first workspace matching scheme filter if any\n\t\tfor (const folder of folders) {\n\t\t\tconst resource = folder.uri;\n\t\t\tif (!schemeFilter || resource.scheme === schemeFilter) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetLastActiveFile(filterByScheme: string): URI | undefined {\n\t\tfor (const input of this.getHistory()) {\n\t\t\tlet resource: URI | undefined;\n\t\t\tif (input instanceof EditorInput) {\n\t\t\t\tresource = EditorResourceAccessor.getOriginalUri(input, { filterByScheme });\n\t\t\t} else {\n\t\t\t\tresource = (input as IResourceEditorInput).resource;\n\t\t\t}\n\n\t\t\tif (resource?.scheme === filterByScheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t//#endregion\n\n\t//#region Editor Most Recently Used History\n\n\tprivate recentlyUsedEditorsStack: readonly IEditorIdentifier[] | undefined = undefined;\n\tprivate recentlyUsedEditorsStackIndex = 0;\n\n\tprivate recentlyUsedEditorsInGroupStack: readonly IEditorIdentifier[] | undefined = undefined;\n\tprivate recentlyUsedEditorsInGroupStackIndex = 0;\n\n\tprivate navigatingInRecentlyUsedEditorsStack = false;\n\tprivate navigatingInRecentlyUsedEditorsInGroupStack = false;\n\n\topenNextRecentlyUsedEditor(groupId?: GroupIdentifier): void {\n\t\tconst [stack, index] = this.ensureRecentlyUsedStack(index => index - 1, groupId);\n\n\t\tthis.doNavigateInRecentlyUsedEditorsStack(stack[index], groupId);\n\t}\n\n\topenPreviouslyUsedEditor(groupId?: GroupIdentifier): void {\n\t\tconst [stack, index] = this.ensureRecentlyUsedStack(index => index + 1, groupId);\n\n\t\tthis.doNavigateInRecentlyUsedEditorsStack(stack[index], groupId);\n\t}\n\n\tprivate doNavigateInRecentlyUsedEditorsStack(editorIdentifier: IEditorIdentifier | undefined, groupId?: GroupIdentifier): void {\n\t\tif (editorIdentifier) {\n\t\t\tconst acrossGroups = typeof groupId !== 'number' || !this.editorGroupService.getGroup(groupId);\n\n\t\t\tif (acrossGroups) {\n\t\t\t\tthis.navigatingInRecentlyUsedEditorsStack = true;\n\t\t\t} else {\n\t\t\t\tthis.navigatingInRecentlyUsedEditorsInGroupStack = true;\n\t\t\t}\n\n\t\t\tthis.editorService.openEditor(editorIdentifier.editor, undefined, editorIdentifier.groupId).finally(() => {\n\t\t\t\tif (acrossGroups) {\n\t\t\t\t\tthis.navigatingInRecentlyUsedEditorsStack = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigatingInRecentlyUsedEditorsInGroupStack = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate ensureRecentlyUsedStack(indexModifier: (index: number) => number, groupId?: GroupIdentifier): [readonly IEditorIdentifier[], number] {\n\t\tlet editors: readonly IEditorIdentifier[];\n\t\tlet index: number;\n\n\t\tconst group = typeof groupId === 'number' ? this.editorGroupService.getGroup(groupId) : undefined;\n\n\t\t// Across groups\n\t\tif (!group) {\n\t\t\teditors = this.recentlyUsedEditorsStack || this.editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tindex = this.recentlyUsedEditorsStackIndex;\n\t\t}\n\n\t\t// Within group\n\t\telse {\n\t\t\teditors = this.recentlyUsedEditorsInGroupStack || group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).map(editor => ({ groupId: group.id, editor }));\n\t\t\tindex = this.recentlyUsedEditorsInGroupStackIndex;\n\t\t}\n\n\t\t// Adjust index\n\t\tlet newIndex = indexModifier(index);\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = 0;\n\t\t} else if (newIndex > editors.length - 1) {\n\t\t\tnewIndex = editors.length - 1;\n\t\t}\n\n\t\t// Remember index and editors\n\t\tif (!group) {\n\t\t\tthis.recentlyUsedEditorsStack = editors;\n\t\t\tthis.recentlyUsedEditorsStackIndex = newIndex;\n\t\t} else {\n\t\t\tthis.recentlyUsedEditorsInGroupStack = editors;\n\t\t\tthis.recentlyUsedEditorsInGroupStackIndex = newIndex;\n\t\t}\n\n\t\treturn [editors, newIndex];\n\t}\n\n\tprivate handleEditorEventInRecentEditorsStack(): void {\n\n\t\t// Drop all-editors stack unless navigating in all editors\n\t\tif (!this.navigatingInRecentlyUsedEditorsStack) {\n\t\t\tthis.recentlyUsedEditorsStack = undefined;\n\t\t\tthis.recentlyUsedEditorsStackIndex = 0;\n\t\t}\n\n\t\t// Drop in-group-editors stack unless navigating in group\n\t\tif (!this.navigatingInRecentlyUsedEditorsInGroupStack) {\n\t\t\tthis.recentlyUsedEditorsInGroupStack = undefined;\n\t\t\tthis.recentlyUsedEditorsInGroupStackIndex = 0;\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nregisterSingleton(IHistoryService, HistoryService);\n"]}