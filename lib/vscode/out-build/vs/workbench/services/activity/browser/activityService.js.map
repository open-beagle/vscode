{"version":3,"file":"activityService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/activity/browser/activityService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IActivityService, IActivity } from 'vs/workbench/services/activity/common/activity';\nimport { IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IActivityBarService } from 'vs/workbench/services/activityBar/browser/activityBarService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { GLOBAL_ACTIVITY_ID, ACCOUNTS_ACTIVITY_ID } from 'vs/workbench/common/activity';\nimport { Event } from 'vs/base/common/event';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nclass ViewContainerActivityByView extends Disposable {\n\n\tprivate activity: IActivity | undefined = undefined;\n\tprivate activityDisposable: IDisposable = Disposable.None;\n\n\tconstructor(\n\t\tprivate readonly viewId: string,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper();\n\t\tthis._register(Event.filter(this.viewDescriptorService.onDidChangeContainer, e => e.views.some(view => view.id === viewId))(() => this.update()));\n\t\tthis._register(Event.filter(this.viewDescriptorService.onDidChangeLocation, e => e.views.some(view => view.id === viewId))(() => this.update()));\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.activity = activity;\n\t\tthis.update();\n\t}\n\n\tclearActivity(): void {\n\t\tthis.activity = undefined;\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.activityDisposable.dispose();\n\t\tconst container = this.viewDescriptorService.getViewContainerByViewId(this.viewId);\n\t\tif (container && this.activity) {\n\t\t\tthis.activityDisposable = this.activityService.showViewContainerActivity(container.id, this.activity);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis.activityDisposable.dispose();\n\t}\n}\n\ninterface IViewActivity {\n\tid: number;\n\treadonly activity: ViewContainerActivityByView;\n}\n\nexport class ActivityService implements IActivityService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate viewActivities = new Map<string, IViewActivity>();\n\n\tconstructor(\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IActivityBarService private readonly activityBarService: IActivityBarService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tshowViewContainerActivity(viewContainerId: string, { badge, clazz, priority }: IActivity): IDisposable {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(viewContainerId);\n\t\tif (viewContainer) {\n\t\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tswitch (location) {\n\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\treturn this.panelService.showActivity(viewContainer.id, badge, clazz);\n\t\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\t\t\treturn this.activityBarService.showActivity(viewContainer.id, badge, clazz, priority);\n\t\t\t}\n\t\t}\n\t\treturn Disposable.None;\n\t}\n\n\tshowViewActivity(viewId: string, activity: IActivity): IDisposable {\n\t\tlet maybeItem = this.viewActivities.get(viewId);\n\n\t\tif (maybeItem) {\n\t\t\tmaybeItem.id++;\n\t\t} else {\n\t\t\tmaybeItem = {\n\t\t\t\tid: 1,\n\t\t\t\tactivity: this.instantiationService.createInstance(ViewContainerActivityByView, viewId)\n\t\t\t};\n\n\t\t\tthis.viewActivities.set(viewId, maybeItem);\n\t\t}\n\n\t\tconst id = maybeItem.id;\n\t\tmaybeItem.activity.setActivity(activity);\n\n\t\tconst item = maybeItem;\n\t\treturn toDisposable(() => {\n\t\t\tif (item.id === id) {\n\t\t\t\titem.activity.dispose();\n\t\t\t\tthis.viewActivities.delete(viewId);\n\t\t\t}\n\t\t});\n\t}\n\n\tshowAccountsActivity({ badge, clazz, priority }: IActivity): IDisposable {\n\t\treturn this.activityBarService.showActivity(ACCOUNTS_ACTIVITY_ID, badge, clazz, priority);\n\t}\n\n\tshowGlobalActivity({ badge, clazz, priority }: IActivity): IDisposable {\n\t\treturn this.activityBarService.showActivity(GLOBAL_ACTIVITY_ID, badge, clazz, priority);\n\t}\n}\n\nregisterSingleton(IActivityService, ActivityService, true);\n"]}