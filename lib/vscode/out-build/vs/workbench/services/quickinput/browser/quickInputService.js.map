{"version":3,"file":"quickInputService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/quickinput/browser/quickInputService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAehG,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,8BAAqB;QAI3D,YACyC,oBAA2C,EAC5D,oBAA2C,EAC7B,iBAAqC,EACtD,iBAAqC,EAC1C,YAA2B,EACnB,oBAA2C,EAClD,aAA6B;YAE7C,KAAK,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,YAAY,EAAE,oBAAoB,EAAE,aAAa,CAAC,CAAC;YAR1D,yBAAoB,GAApB,oBAAoB,CAAuB;YAE9C,sBAAiB,GAAjB,iBAAiB,CAAoB;YAL1D,wBAAmB,GAAG,mCAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAa3F,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC;QAEO,iBAAiB;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC;QAEkB,gBAAgB;YAClC,OAAO,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE;gBACjD,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,sCAAsC,CAAC;gBACjG,mBAAmB,EAAE,GAAG,EAAE,WAAC,OAAA,CAAA,MAAA,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,0CAAE,QAAQ,EAAE,KAAI,SAAS,CAAA,EAAA;aAC9H,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IA7BY,iBAAiB;QAK3B,WAAA,qCAAqB,CAAA;QACrB,WAAA,qCAAqB,CAAA;QACrB,WAAA,+BAAkB,CAAA;QAClB,WAAA,+BAAkB,CAAA;QAClB,WAAA,4BAAa,CAAA;QACb,WAAA,qCAAqB,CAAA;QACrB,WAAA,8BAAc,CAAA;OAXJ,iBAAiB,CA6B7B;IA7BY,8CAAiB;IA+B9B,CAAA,GAAA,8BAAiB,CAAA,CAAC,+BAAkB,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { QuickInputController } from 'vs/base/parts/quickinput/browser/quickInput';\nimport { QuickInputService as BaseQuickInputService } from 'vs/platform/quickinput/browser/quickInput';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { InQuickPickContextKey } from 'vs/workbench/browser/quickaccess';\n\nexport class QuickInputService extends BaseQuickInputService {\n\n\tprivate readonly inQuickInputContext = InQuickPickContextKey.bindTo(this.contextKeyService);\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t) {\n\t\tsuper(instantiationService, contextKeyService, themeService, accessibilityService, layoutService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.onShow(() => this.inQuickInputContext.set(true)));\n\t\tthis._register(this.onHide(() => this.inQuickInputContext.set(false)));\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.layoutService, {\n\t\t\tignoreFocusOut: () => !this.configurationService.getValue('workbench.quickOpen.closeOnFocusLost'),\n\t\t\tbackKeybindingLabel: () => this.keybindingService.lookupKeybinding('workbench.action.quickInputBack')?.getLabel() || undefined,\n\t\t});\n\t}\n}\n\nregisterSingleton(IQuickInputService, QuickInputService, true);\n"]}