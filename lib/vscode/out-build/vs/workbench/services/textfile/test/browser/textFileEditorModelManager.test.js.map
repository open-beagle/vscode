{"version":3,"file":"textFileEditorModelManager.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/textfile/test/browser/textFileEditorModelManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TextFileEditorModelManager } from 'vs/workbench/services/textfile/common/textFileEditorModelManager';\nimport { workbenchInstantiationService, TestServiceAccessor, TestTextFileEditorModelManager } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { FileChangesEvent, FileChangeType } from 'vs/platform/files/common/files';\nimport { toResource } from 'vs/base/test/common/utils';\nimport { ModesRegistry, PLAINTEXT_MODE_ID } from 'vs/editor/common/modes/modesRegistry';\nimport { ITextFileEditorModel } from 'vs/workbench/services/textfile/common/textfiles';\nimport { createTextBufferFactory } from 'vs/editor/common/model/textModel';\nimport { timeout } from 'vs/base/common/async';\n\nsuite('Files - TextFileEditorModelManager', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\ttest('add, remove, clear, get, getAll', function () {\n\t\tconst manager: TestTextFileEditorModelManager = instantiationService.createInstance(TestTextFileEditorModelManager);\n\n\t\tconst model1: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random1.txt'), 'utf8', undefined);\n\t\tconst model2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random2.txt'), 'utf8', undefined);\n\t\tconst model3: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random3.txt'), 'utf8', undefined);\n\n\t\tmanager.add(URI.file('/test.html'), model1);\n\t\tmanager.add(URI.file('/some/other.html'), model2);\n\t\tmanager.add(URI.file('/some/this.txt'), model3);\n\n\t\tconst fileUpper = URI.file('/TEST.html');\n\n\t\tassert(!manager.get(URI.file('foo')));\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), model1);\n\n\t\tassert.ok(!manager.get(fileUpper));\n\n\t\tlet results = manager.models;\n\t\tassert.strictEqual(3, results.length);\n\n\t\tlet result = manager.get(URI.file('/yes'));\n\t\tassert.ok(!result);\n\n\t\tresult = manager.get(URI.file('/some/other.txt'));\n\t\tassert.ok(!result);\n\n\t\tresult = manager.get(URI.file('/some/other.html'));\n\t\tassert.ok(result);\n\n\t\tresult = manager.get(fileUpper);\n\t\tassert.ok(!result);\n\n\t\tmanager.remove(URI.file(''));\n\n\t\tresults = manager.models;\n\t\tassert.strictEqual(3, results.length);\n\n\t\tmanager.remove(URI.file('/some/other.html'));\n\t\tresults = manager.models;\n\t\tassert.strictEqual(2, results.length);\n\n\t\tmanager.remove(fileUpper);\n\t\tresults = manager.models;\n\t\tassert.strictEqual(2, results.length);\n\n\t\tmanager.clear();\n\t\tresults = manager.models;\n\t\tassert.strictEqual(0, results.length);\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t\tmodel3.dispose();\n\n\t\tmanager.dispose();\n\t});\n\n\ttest('resolve', async () => {\n\t\tconst manager: TestTextFileEditorModelManager = instantiationService.createInstance(TestTextFileEditorModelManager);\n\t\tconst resource = URI.file('/test.html');\n\t\tconst encoding = 'utf8';\n\n\t\tconst events: ITextFileEditorModel[] = [];\n\t\tconst listener = manager.onDidCreate(model => {\n\t\t\tevents.push(model);\n\t\t});\n\n\t\tconst modelPromise = manager.resolve(resource, { encoding });\n\t\tassert.ok(manager.get(resource)); // model known even before resolved()\n\n\t\tconst model1 = await modelPromise;\n\t\tassert.ok(model1);\n\t\tassert.strictEqual(model1.getEncoding(), encoding);\n\t\tassert.strictEqual(manager.get(resource), model1);\n\n\t\tconst model2 = await manager.resolve(resource, { encoding });\n\t\tassert.strictEqual(model2, model1);\n\t\tmodel1.dispose();\n\n\t\tconst model3 = await manager.resolve(resource, { encoding });\n\t\tassert.notStrictEqual(model3, model2);\n\t\tassert.strictEqual(manager.get(resource), model3);\n\t\tmodel3.dispose();\n\n\t\tassert.strictEqual(events.length, 2);\n\t\tassert.strictEqual(events[0].resource.toString(), model1.resource.toString());\n\t\tassert.strictEqual(events[1].resource.toString(), model2.resource.toString());\n\n\t\tlistener.dispose();\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t\tmodel3.dispose();\n\n\t\tmanager.dispose();\n\t});\n\n\ttest('resolve with initial contents', async () => {\n\t\tconst manager: TestTextFileEditorModelManager = instantiationService.createInstance(TestTextFileEditorModelManager);\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst model = await manager.resolve(resource, { contents: createTextBufferFactory('Hello World') });\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'Hello World');\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\tawait manager.resolve(resource, { contents: createTextBufferFactory('More Changes') });\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'More Changes');\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\tmodel.dispose();\n\t\tmanager.dispose();\n\t});\n\n\ttest('multiple resolves execute in sequence', async () => {\n\t\tconst manager: TestTextFileEditorModelManager = instantiationService.createInstance(TestTextFileEditorModelManager);\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst firstModelPromise = manager.resolve(resource);\n\t\tconst secondModelPromise = manager.resolve(resource, { contents: createTextBufferFactory('Hello World') });\n\t\tconst thirdModelPromise = manager.resolve(resource, { contents: createTextBufferFactory('More Changes') });\n\n\t\tawait firstModelPromise;\n\t\tawait secondModelPromise;\n\t\tconst model = await thirdModelPromise;\n\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'More Changes');\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\tmodel.dispose();\n\t\tmanager.dispose();\n\t});\n\n\ttest('removed from cache when model disposed', function () {\n\t\tconst manager: TestTextFileEditorModelManager = instantiationService.createInstance(TestTextFileEditorModelManager);\n\n\t\tconst model1: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random1.txt'), 'utf8', undefined);\n\t\tconst model2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random2.txt'), 'utf8', undefined);\n\t\tconst model3: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/random3.txt'), 'utf8', undefined);\n\n\t\tmanager.add(URI.file('/test.html'), model1);\n\t\tmanager.add(URI.file('/some/other.html'), model2);\n\t\tmanager.add(URI.file('/some/this.txt'), model3);\n\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), model1);\n\n\t\tmodel1.dispose();\n\t\tassert(!manager.get(URI.file('/test.html')));\n\n\t\tmodel2.dispose();\n\t\tmodel3.dispose();\n\n\t\tmanager.dispose();\n\t});\n\n\ttest('events', async function () {\n\t\tconst manager: TextFileEditorModelManager = instantiationService.createInstance(TextFileEditorModelManager);\n\n\t\tconst resource1 = toResource.call(this, '/path/index.txt');\n\t\tconst resource2 = toResource.call(this, '/path/other.txt');\n\n\t\tlet resolvedCounter = 0;\n\t\tlet gotDirtyCounter = 0;\n\t\tlet gotNonDirtyCounter = 0;\n\t\tlet revertedCounter = 0;\n\t\tlet savedCounter = 0;\n\t\tlet encodingCounter = 0;\n\n\t\tmanager.onDidResolve(({ model }) => {\n\t\t\tif (model.resource.toString() === resource1.toString()) {\n\t\t\t\tresolvedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidChangeDirty(model => {\n\t\t\tif (model.resource.toString() === resource1.toString()) {\n\t\t\t\tif (model.isDirty()) {\n\t\t\t\t\tgotDirtyCounter++;\n\t\t\t\t} else {\n\t\t\t\t\tgotNonDirtyCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidRevert(model => {\n\t\t\tif (model.resource.toString() === resource1.toString()) {\n\t\t\t\trevertedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidSave(({ model }) => {\n\t\t\tif (model.resource.toString() === resource1.toString()) {\n\t\t\t\tsavedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidChangeEncoding(model => {\n\t\t\tif (model.resource.toString() === resource1.toString()) {\n\t\t\t\tencodingCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst model1 = await manager.resolve(resource1, { encoding: 'utf8' });\n\t\tassert.strictEqual(resolvedCounter, 1);\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.DELETED }], false));\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.ADDED }], false));\n\n\t\tconst model2 = await manager.resolve(resource2, { encoding: 'utf8' });\n\t\tassert.strictEqual(resolvedCounter, 2);\n\n\t\tmodel1.updateTextEditorModel(createTextBufferFactory('changed'));\n\t\tmodel1.updatePreferredEncoding('utf16');\n\n\t\tawait model1.revert();\n\t\tmodel1.updateTextEditorModel(createTextBufferFactory('changed again'));\n\n\t\tawait model1.save();\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\n\t\tawait model1.revert();\n\t\tassert.strictEqual(gotDirtyCounter, 2);\n\t\tassert.strictEqual(gotNonDirtyCounter, 2);\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(encodingCounter, 2);\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(resource1));\n\t\tassert.ok(!accessor.modelService.getModel(resource2));\n\n\t\tmanager.dispose();\n\t});\n\n\ttest('disposing model takes it out of the manager', async function () {\n\t\tconst manager: TextFileEditorModelManager = instantiationService.createInstance(TextFileEditorModelManager);\n\n\t\tconst resource = toResource.call(this, '/path/index_something.txt');\n\n\t\tconst model = await manager.resolve(resource, { encoding: 'utf8' });\n\t\tmodel.dispose();\n\t\tassert.ok(!manager.get(resource));\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t\tmanager.dispose();\n\t});\n\n\ttest('canDispose with dirty model', async function () {\n\t\tconst manager: TextFileEditorModelManager = instantiationService.createInstance(TextFileEditorModelManager);\n\n\t\tconst resource = toResource.call(this, '/path/index_something.txt');\n\n\t\tconst model = await manager.resolve(resource, { encoding: 'utf8' });\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('make dirty'));\n\n\t\tlet canDisposePromise = manager.canDispose(model as TextFileEditorModel);\n\t\tassert.ok(canDisposePromise instanceof Promise);\n\n\t\tlet canDispose = false;\n\t\t(async () => {\n\t\t\tcanDispose = await canDisposePromise;\n\t\t})();\n\n\t\tassert.strictEqual(canDispose, false);\n\t\tmodel.revert({ soft: true });\n\n\t\tawait timeout(0);\n\n\t\tassert.strictEqual(canDispose, true);\n\n\t\tlet canDispose2 = manager.canDispose(model as TextFileEditorModel);\n\t\tassert.strictEqual(canDispose2, true);\n\n\t\tmanager.dispose();\n\t});\n\n\ttest('mode', async function () {\n\t\tconst mode = 'text-file-model-manager-test';\n\t\tModesRegistry.registerLanguage({\n\t\t\tid: mode,\n\t\t});\n\n\t\tconst manager: TextFileEditorModelManager = instantiationService.createInstance(TextFileEditorModelManager);\n\n\t\tconst resource = toResource.call(this, '/path/index_something.txt');\n\n\t\tlet model = await manager.resolve(resource, { mode });\n\t\tassert.strictEqual(model.textEditorModel!.getModeId(), mode);\n\n\t\tmodel = await manager.resolve(resource, { mode: 'text' });\n\t\tassert.strictEqual(model.textEditorModel!.getModeId(), PLAINTEXT_MODE_ID);\n\n\t\tmodel.dispose();\n\t\tmanager.dispose();\n\t});\n});\n"]}