{"version":3,"sources":["vs/workbench/services/textMate/common/TMGrammars.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAuBnF,QAAA,gBAAgB,GAA+C,uCAAkB,CAAC,sBAAsB,CAA4B;QAChJ,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE,CAAC,wCAAiB,CAAC;QACzB,UAAU,EAAE;YACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuC,EAAE,IAAkC,CAAC;YACtG,IAAI,EAAE,OAAO;YACb,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,gCAAgC,EAAE,CAAC,EAAE,CAAC;YAC3H,KAAK,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,gCAAgC,EAAE,EAAE,CAAC;gBACzH,UAAU,EAAE;oBACX,QAAQ,EAAE;wBACT,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgD,EAAE,IAA8D,CAAC;wBAC3I,IAAI,EAAE,QAAQ;qBACd;oBACD,SAAS,EAAE;wBACV,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiD,EAAE,IAAkD,CAAC;wBAChI,IAAI,EAAE,QAAQ;qBACd;oBACD,IAAI,EAAE;wBACL,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA4C,EAAE,IAAsH,CAAC;wBAC/L,IAAI,EAAE,QAAQ;qBACd;oBACD,iBAAiB,EAAE;wBAClB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyD,EAAE,IAAiF,CAAC;wBACvK,IAAI,EAAE,QAAQ;qBACd;oBACD,UAAU,EAAE;wBACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAkD,EAAE,IAAqC,CAAC;wBACpH,IAAI,EAAE,QAAQ;wBACd,oBAAoB,EAAE;4BACrB,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;yBACpC;qBACD;oBACD,QAAQ,EAAE;wBACT,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgD,EAAE,IAAoE,CAAC;wBACjJ,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACd;qBACD;iBACD;gBACD,QAAQ,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC;aAC/B;SACD;KACD,CAAC,CAAC","file":"TMGrammars.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { ExtensionsRegistry, IExtensionPoint } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { languagesExtPoint } from 'vs/workbench/services/mode/common/workbenchModeService';\n\nexport interface IEmbeddedLanguagesMap {\n\t[scopeName: string]: string;\n}\n\nexport interface TokenTypesContribution {\n\t[scopeName: string]: string;\n}\n\nexport interface ITMSyntaxExtensionPoint {\n\tlanguage: string;\n\tscopeName: string;\n\tpath: string;\n\tembeddedLanguages: IEmbeddedLanguagesMap;\n\ttokenTypes: TokenTypesContribution;\n\tinjectTo: string[];\n}\n\nexport const grammarsExtPoint: IExtensionPoint<ITMSyntaxExtensionPoint[]> = ExtensionsRegistry.registerExtensionPoint<ITMSyntaxExtensionPoint[]>({\n\textensionPoint: 'grammars',\n\tdeps: [languagesExtPoint],\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.grammars', 'Contributes textmate tokenizers.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ language: '${1:id}', scopeName: 'source.${2:id}', path: './syntaxes/${3:id}.tmLanguage.' }] }],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { language: '${1:id}', scopeName: 'source.${2:id}', path: './syntaxes/${3:id}.tmLanguage.' } }],\n\t\t\tproperties: {\n\t\t\t\tlanguage: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.language', 'Language identifier for which this syntax is contributed to.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tscopeName: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.scopeName', 'Textmate scope name used by the tmLanguage file.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.path', 'Path of the tmLanguage file. The path is relative to the extension folder and typically starts with \\'./syntaxes/\\'.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tembeddedLanguages: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.embeddedLanguages', 'A map of scope name to language id if this grammar contains embedded languages.'),\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\ttokenTypes: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.tokenTypes', 'A map of scope name to token types.'),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tadditionalProperties: {\n\t\t\t\t\t\tenum: ['string', 'comment', 'other']\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tinjectTo: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.grammars.injectTo', 'List of language scope names to which this grammar is injected to.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\trequired: ['scopeName', 'path']\n\t\t}\n\t}\n});\n"]}