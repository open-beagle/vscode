{"version":3,"sources":["vs/workbench/services/lifecycle/electron-sandbox/lifecycleService.ts"],"names":[],"mappings":"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","file":"lifecycleService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { handleVetos } from 'vs/platform/lifecycle/common/lifecycle';\nimport { ShutdownReason, StartupKind, ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget, WillSaveStateReason } from 'vs/platform/storage/common/storage';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { AbstractLifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycleService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport Severity from 'vs/base/common/severity';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { Promises, disposableTimeout } from 'vs/base/common/async';\n\nexport class NativeLifecycleService extends AbstractLifecycleService {\n\n\tprivate static readonly LAST_SHUTDOWN_REASON_KEY = 'lifecyle.lastShutdownReason';\n\n\tprivate static readonly BEFORE_SHUTDOWN_WARNING_DELAY = 5000;\n\tprivate static readonly WILL_SHUTDOWN_WARNING_DELAY = 5000;\n\n\tprivate shutdownReason: ShutdownReason | undefined;\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IStorageService readonly storageService: IStorageService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(logService);\n\n\t\tthis._startupKind = this.resolveStartupKind();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate resolveStartupKind(): StartupKind {\n\t\tconst lastShutdownReason = this.storageService.getNumber(NativeLifecycleService.LAST_SHUTDOWN_REASON_KEY, StorageScope.WORKSPACE);\n\t\tthis.storageService.remove(NativeLifecycleService.LAST_SHUTDOWN_REASON_KEY, StorageScope.WORKSPACE);\n\n\t\tlet startupKind: StartupKind;\n\t\tif (lastShutdownReason === ShutdownReason.RELOAD) {\n\t\t\tstartupKind = StartupKind.ReloadedWindow;\n\t\t} else if (lastShutdownReason === ShutdownReason.LOAD) {\n\t\t\tstartupKind = StartupKind.ReopenedWindow;\n\t\t} else {\n\t\t\tstartupKind = StartupKind.NewWindow;\n\t\t}\n\n\t\tthis.logService.trace(`[lifecycle] starting up (startup kind: ${this._startupKind})`);\n\n\t\treturn startupKind;\n\t}\n\n\tprivate registerListeners(): void {\n\t\tconst windowId = this.nativeHostService.windowId;\n\n\t\t// Main side indicates that window is about to unload, check for vetos\n\t\tipcRenderer.on('vscode:onBeforeUnload', (event: unknown, reply: { okChannel: string, cancelChannel: string, reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onBeforeUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onBeforeShutdown events and veto collecting\n\t\t\tthis.handleBeforeShutdown(reply.reason).then(veto => {\n\t\t\t\tif (veto) {\n\t\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload prevented via veto');\n\n\t\t\t\t\tipcRenderer.send(reply.cancelChannel, windowId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload continues without veto');\n\n\t\t\t\t\tthis.shutdownReason = reply.reason;\n\t\t\t\t\tipcRenderer.send(reply.okChannel, windowId);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Main side indicates that we will indeed shutdown\n\t\tipcRenderer.on('vscode:onWillUnload', async (event: unknown, reply: { replyChannel: string, reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onWillUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onWillShutdown events and joining\n\t\t\tawait this.handleWillShutdown(reply.reason);\n\n\t\t\t// trigger onDidShutdown event now that we know we will quit\n\t\t\tthis._onDidShutdown.fire();\n\n\t\t\t// acknowledge to main side\n\t\t\tipcRenderer.send(reply.replyChannel, windowId);\n\t\t});\n\n\t\t// Save shutdown reason to retrieve on next startup\n\t\tthis.storageService.onWillSaveState(e => {\n\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\tthis.storageService.store(NativeLifecycleService.LAST_SHUTDOWN_REASON_KEY, this.shutdownReason, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async handleBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\tconst logService = this.logService;\n\t\tconst vetos: (boolean | Promise<boolean>)[] = [];\n\t\tconst pendingVetos = new Set<string>();\n\n\t\tthis._onBeforeShutdown.fire({\n\t\t\tveto(value, id) {\n\t\t\t\tvetos.push(value);\n\n\t\t\t\t// Log any veto instantly\n\t\t\t\tif (value === true) {\n\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t}\n\n\t\t\t\t// Track promise completion\n\t\t\t\telse if (value instanceof Promise) {\n\t\t\t\t\tpendingVetos.add(id);\n\t\t\t\t\tvalue.then(veto => {\n\t\t\t\t\t\tif (veto === true) {\n\t\t\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).finally(() => pendingVetos.delete(id));\n\t\t\t\t}\n\t\t\t},\n\t\t\treason\n\t\t});\n\n\t\tconst longRunningBeforeShutdownWarning = disposableTimeout(() => {\n\t\t\tlogService.warn(`[lifecycle] onBeforeShutdown is taking a long time, pending operations: ${Array.from(pendingVetos).join(', ')}`);\n\t\t}, NativeLifecycleService.BEFORE_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\t\t\treturn await handleVetos(vetos, error => this.onShutdownError(reason, error));\n\t\t} finally {\n\t\t\tlongRunningBeforeShutdownWarning.dispose();\n\t\t}\n\t}\n\n\tprivate async handleWillShutdown(reason: ShutdownReason): Promise<void> {\n\t\tconst joiners: Promise<void>[] = [];\n\t\tconst pendingJoiners = new Set<string>();\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin(promise, id) {\n\t\t\t\tjoiners.push(promise);\n\n\t\t\t\t// Track promise completion\n\t\t\t\tpendingJoiners.add(id);\n\t\t\t\tpromise.finally(() => pendingJoiners.delete(id));\n\t\t\t},\n\t\t\treason\n\t\t});\n\n\t\tconst longRunningWillShutdownWarning = disposableTimeout(() => {\n\t\t\tthis.logService.warn(`[lifecycle] onWillShutdown is taking a long time, pending operations: ${Array.from(pendingJoiners).join(', ')}`);\n\t\t}, NativeLifecycleService.WILL_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\t\t\tawait Promises.settled(joiners);\n\t\t} catch (error) {\n\t\t\tthis.onShutdownError(reason, error);\n\t\t} finally {\n\t\t\tlongRunningWillShutdownWarning.dispose();\n\t\t}\n\t}\n\n\tprivate onShutdownError(reason: ShutdownReason, error: Error): void {\n\t\tlet message: string;\n\t\tswitch (reason) {\n\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\tmessage = localize('errorClose', \"An unexpected error was thrown while attempting to close the window ({0}).\", toErrorMessage(error));\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.QUIT:\n\t\t\t\tmessage = localize('errorQuit', \"An unexpected error was thrown while attempting to quit the application ({0}).\", toErrorMessage(error));\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\tmessage = localize('errorReload', \"An unexpected error was thrown while attempting to reload the window ({0}).\", toErrorMessage(error));\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\tmessage = localize('errorLoad', \"An unexpected error was thrown while attempting to change the workspace of the window ({0}).\", toErrorMessage(error));\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.notificationService.notify({\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage,\n\t\t\tsticky: true\n\t\t});\n\n\t\tonUnexpectedError(error);\n\t}\n\n\tshutdown(): void {\n\t\tthis.nativeHostService.closeWindow();\n\t}\n}\n\nregisterSingleton(ILifecycleService, NativeLifecycleService);\n"]}