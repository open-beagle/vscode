{"version":3,"sources":["vs/workbench/services/dialogs/browser/abstractFileDialogService.ts"],"names":[],"mappings":"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","file":"abstractFileDialogService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IWindowOpenable, isWorkspaceToOpen, isFileToOpen } from 'vs/platform/windows/common/windows';\nimport { IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, FileFilter, IFileDialogService, IDialogService, ConfirmResult, getFileNamesMessage } from 'vs/platform/dialogs/common/dialogs';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { IInstantiationService, } from 'vs/platform/instantiation/common/instantiation';\nimport { SimpleFileDialog } from 'vs/workbench/services/dialogs/browser/simpleFileDialog';\nimport { WORKSPACE_EXTENSION, isUntitledWorkspace, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport Severity from 'vs/base/common/severity';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { compareIgnoreCase, trim } from 'vs/base/common/strings';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { Schemas } from 'vs/base/common/network';\nimport { PLAINTEXT_EXTENSION } from 'vs/editor/common/modes/modesRegistry';\n\nexport abstract class AbstractFileDialogService implements IFileDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IHostService protected readonly hostService: IHostService,\n\t\t@IWorkspaceContextService protected readonly contextService: IWorkspaceContextService,\n\t\t@IHistoryService protected readonly historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IOpenerService protected readonly openerService: IOpenerService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\n\tasync defaultFilePath(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\n\t\t// Check for last active file first...\n\t\tlet candidate = this.historyService.getLastActiveFile(schemeFilter);\n\n\t\t// ...then for last active file root\n\t\tif (!candidate) {\n\t\t\tcandidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n\t\t} else {\n\t\t\tcandidate = candidate && resources.dirname(candidate);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\tcandidate = await this.pathService.userHome({ preferLocal: schemeFilter === Schemas.file });\n\t\t}\n\n\t\treturn candidate;\n\t}\n\n\tasync defaultFolderPath(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\n\t\t// Check for last active file root first...\n\t\tlet candidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n\n\t\t// ...then for last active file\n\t\tif (!candidate) {\n\t\t\tcandidate = this.historyService.getLastActiveFile(schemeFilter);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\treturn this.pathService.userHome({ preferLocal: schemeFilter === Schemas.file });\n\t\t} else {\n\t\t\treturn resources.dirname(candidate);\n\t\t}\n\t}\n\n\tasync defaultWorkspacePath(schemeFilter = this.getSchemeFilterForWindow(), filename?: string): Promise<URI> {\n\t\tlet defaultWorkspacePath: URI | undefined;\n\t\t// Check for current workspace config file first...\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tconst configuration = this.contextService.getWorkspace().configuration;\n\t\t\tif (configuration && configuration.scheme === schemeFilter && !isUntitledWorkspace(configuration, this.environmentService)) {\n\t\t\t\tdefaultWorkspacePath = resources.dirname(configuration) || undefined;\n\t\t\t}\n\t\t}\n\n\t\t// ...then fallback to default file path\n\t\tif (!defaultWorkspacePath) {\n\t\t\tdefaultWorkspacePath = await this.defaultFilePath(schemeFilter);\n\t\t}\n\n\t\tif (defaultWorkspacePath && filename) {\n\t\t\tdefaultWorkspacePath = resources.joinPath(defaultWorkspacePath, filename);\n\t\t}\n\n\t\treturn defaultWorkspacePath;\n\t}\n\n\tasync showSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> {\n\t\tif (this.environmentService.isExtensionDevelopment && this.environmentService.extensionTestsLocationURI) {\n\t\t\treturn ConfirmResult.DONT_SAVE; // no veto when we are in extension dev testing mode because we cannot assume we run interactive\n\t\t}\n\n\t\treturn this.doShowSaveConfirm(fileNamesOrResources);\n\t}\n\n\tprotected async doShowSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> {\n\t\tif (fileNamesOrResources.length === 0) {\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t}\n\n\t\tlet message: string;\n\t\tlet detail = nls.localize('saveChangesDetail', \"Your changes will be lost if you don't save them.\");\n\t\tif (fileNamesOrResources.length === 1) {\n\t\t\tmessage = nls.localize('saveChangesMessage', \"Do you want to save the changes you made to {0}?\", typeof fileNamesOrResources[0] === 'string' ? fileNamesOrResources[0] : resources.basename(fileNamesOrResources[0]));\n\t\t} else {\n\t\t\tmessage = nls.localize('saveChangesMessages', \"Do you want to save the changes to the following {0} files?\", fileNamesOrResources.length);\n\t\t\tdetail = getFileNamesMessage(fileNamesOrResources) + '\\n' + detail;\n\t\t}\n\n\t\tconst buttons: string[] = [\n\t\t\tfileNamesOrResources.length > 1 ? nls.localize({ key: 'saveAll', comment: ['&& denotes a mnemonic'] }, \"&&Save All\") : nls.localize({ key: 'save', comment: ['&& denotes a mnemonic'] }, \"&&Save\"),\n\t\t\tnls.localize({ key: 'dontSave', comment: ['&& denotes a mnemonic'] }, \"Do&&n't Save\"),\n\t\t\tnls.localize('cancel', \"Cancel\")\n\t\t];\n\n\t\tconst { choice } = await this.dialogService.show(Severity.Warning, message, buttons, {\n\t\t\tcancelId: 2,\n\t\t\tdetail\n\t\t});\n\n\t\tswitch (choice) {\n\t\t\tcase 0: return ConfirmResult.SAVE;\n\t\t\tcase 1: return ConfirmResult.DONT_SAVE;\n\t\t\tdefault: return ConfirmResult.CANCEL;\n\t\t}\n\t}\n\n\tprotected abstract addFileSchemaIfNeeded(schema: string): string[];\n\n\tprotected async pickFileFolderAndOpenSimplified(schema: string, options: IPickAndOpenOptions, preferNewWindow: boolean): Promise<any> {\n\t\tconst title = nls.localize('openFileOrFolder.title', 'Open File Or Folder');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\n\t\tif (uri) {\n\t\t\tconst stat = await this.fileService.resolve(uri);\n\n\t\t\tconst toOpen: IWindowOpenable = stat.isDirectory ? { folderUri: uri } : { fileUri: uri };\n\t\t\tif (!isWorkspaceToOpen(toOpen) && isFileToOpen(toOpen)) {\n\t\t\t\t// add the picked file into the list of recently opened\n\t\t\t\tthis.workspacesService.addRecentlyOpened([{ fileUri: toOpen.fileUri, label: this.labelService.getUriLabel(toOpen.fileUri) }]);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory || options.forceNewWindow || preferNewWindow) {\n\t\t\t\treturn this.hostService.openWindow([toOpen], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t\t} else {\n\t\t\t\treturn this.openerService.open(uri, { fromUserGesture: true, editorOptions: { pinned: true } });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async pickFileAndOpenSimplified(schema: string, options: IPickAndOpenOptions, preferNewWindow: boolean): Promise<any> {\n\t\tconst title = nls.localize('openFile.title', 'Open File');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\t\tif (uri) {\n\t\t\t// add the picked file into the list of recently opened\n\t\t\tthis.workspacesService.addRecentlyOpened([{ fileUri: uri, label: this.labelService.getUriLabel(uri) }]);\n\n\t\t\tif (options.forceNewWindow || preferNewWindow) {\n\t\t\t\treturn this.hostService.openWindow([{ fileUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t\t} else {\n\t\t\t\treturn this.openerService.open(uri, { fromUserGesture: true, editorOptions: { pinned: true } });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async pickFolderAndOpenSimplified(schema: string, options: IPickAndOpenOptions): Promise<any> {\n\t\tconst title = nls.localize('openFolder.title', 'Open Folder');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: false, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ folderUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t}\n\t}\n\n\tprotected async pickWorkspaceAndOpenSimplified(schema: string, options: IPickAndOpenOptions): Promise<any> {\n\t\tconst title = nls.localize('openWorkspace.title', 'Open Workspace');\n\t\tconst filters: FileFilter[] = [{ name: nls.localize('filterName.workspace', 'Workspace'), extensions: [WORKSPACE_EXTENSION] }];\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, filters, availableFileSystems });\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ workspaceUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t}\n\t}\n\n\tprotected async pickFileToSaveSimplified(schema: string, options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\toptions.title = nls.localize('saveFileAs.title', 'Save As');\n\t\treturn this.saveRemoteResource(options);\n\t}\n\n\tprotected async showSaveDialogSimplified(schema: string, options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\treturn this.saveRemoteResource(options);\n\t}\n\n\tprotected async showOpenDialogSimplified(schema: string, options: IOpenDialogOptions): Promise<URI[] | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\tconst uri = await this.pickResource(options);\n\n\t\treturn uri ? [uri] : undefined;\n\t}\n\n\tprivate pickResource(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\tconst simpleFileDialog = this.instantiationService.createInstance(SimpleFileDialog);\n\n\t\treturn simpleFileDialog.showOpenDialog(options);\n\t}\n\n\tprivate saveRemoteResource(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tconst remoteFileDialog = this.instantiationService.createInstance(SimpleFileDialog);\n\n\t\treturn remoteFileDialog.showSaveDialog(options);\n\t}\n\n\tprotected getSchemeFilterForWindow(defaultUriScheme?: string): string {\n\t\treturn defaultUriScheme ?? this.pathService.defaultUriScheme;\n\t}\n\n\tprotected getFileSystemSchema(options: { availableFileSystems?: readonly string[], defaultUri?: URI }): string {\n\t\treturn options.availableFileSystems && options.availableFileSystems[0] || this.getSchemeFilterForWindow(options.defaultUri?.scheme);\n\t}\n\n\tabstract pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFileAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined>;\n\tabstract showOpenDialog(options: IOpenDialogOptions): Promise<URI[] | undefined>;\n\n\tabstract pickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined>;\n\n\tprotected getPickFileToSaveDialogOptions(defaultUri: URI, availableFileSystems?: string[]): ISaveDialogOptions {\n\t\tconst options: ISaveDialogOptions = {\n\t\t\tdefaultUri,\n\t\t\ttitle: nls.localize('saveAsTitle', \"Save As\"),\n\t\t\tavailableFileSystems\n\t\t};\n\n\t\tinterface IFilter { name: string; extensions: string[]; }\n\n\t\t// Build the file filter by using our known languages\n\t\tconst ext: string | undefined = defaultUri ? resources.extname(defaultUri) : undefined;\n\t\tlet matchingFilter: IFilter | undefined;\n\n\t\tconst registeredLanguageNames = this.modeService.getRegisteredLanguageNames().sort((a, b) => compareIgnoreCase(a, b));\n\t\tconst registeredLanguageFilters: IFilter[] = coalesce(registeredLanguageNames.map(languageName => {\n\t\t\tconst extensions = this.modeService.getExtensions(languageName);\n\t\t\tif (!extensions || !extensions.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst filter: IFilter = { name: languageName, extensions: distinct(extensions).slice(0, 10).map(e => trim(e, '.')) };\n\n\t\t\tif (!matchingFilter && extensions.indexOf(ext || PLAINTEXT_EXTENSION /* https://github.com/microsoft/vscode/issues/115860 */) >= 0) {\n\t\t\t\tmatchingFilter = filter;\n\n\t\t\t\treturn null; // first matching filter will be added to the top\n\t\t\t}\n\n\t\t\treturn filter;\n\t\t}));\n\n\t\t// We have no matching filter, e.g. because the language\n\t\t// is unknown. We still add the extension to the list of\n\t\t// filters though so that it can be picked\n\t\t// (https://github.com/microsoft/vscode/issues/96283)\n\t\tif (!matchingFilter && ext) {\n\t\t\tmatchingFilter = { name: trim(ext, '.').toUpperCase(), extensions: [trim(ext, '.')] };\n\t\t}\n\n\t\t// Order of filters is\n\t\t// - All Files (we MUST do this to fix macOS issue https://github.com/microsoft/vscode/issues/102713)\n\t\t// - File Extension Match (if any)\n\t\t// - All Languages\n\t\t// - No Extension\n\t\toptions.filters = coalesce([\n\t\t\t{ name: nls.localize('allFiles', \"All Files\"), extensions: ['*'] },\n\t\t\tmatchingFilter,\n\t\t\t...registeredLanguageFilters,\n\t\t\t{ name: nls.localize('noExt', \"No Extension\"), extensions: [''] }\n\t\t]);\n\n\t\treturn options;\n\t}\n}\n"]}