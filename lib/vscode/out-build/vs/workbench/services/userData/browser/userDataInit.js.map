{"version":3,"file":"userDataInit.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/userData/browser/userDataInit.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAiCnF,QAAA,8BAA8B,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAiC,gCAAgC,CAAC,CAAC;IAWhI,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;QAQzC,YACgD,kBAAgD,EACzC,kCAAuE,EAC9F,WAAyB,EACtB,cAA+B,EAC/B,cAA+B,EAC/B,cAA+B,EACnC,UAAuB;YANN,uBAAkB,GAAlB,kBAAkB,CAA8B;YACzC,uCAAkC,GAAlC,kCAAkC,CAAqC;YAC9F,gBAAW,GAAX,WAAW,CAAc;YACtB,mBAAc,GAAd,cAAc,CAAiB;YAC/B,mBAAc,GAAd,cAAc,CAAiB;YAC/B,mBAAc,GAAd,cAAc,CAAiB;YACnC,eAAU,GAAV,UAAU,CAAa;YAXrC,gBAAW,GAAmB,EAAE,CAAC;YACjC,2BAAsB,GAAG,IAAI,eAAO,EAAE,CAAC;YAChD,wBAAmB,GAAqB,IAAI,CAAC;YAWpD,IAAI,CAAC,6BAA6B,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE;gBACnE,IAAI,CAAC,uBAAuB,EAAE;oBAC7B,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;iBACnC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAGO,6BAA6B;YACpC,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;gBAC1C,IAAI,CAAC,+BAA+B,GAAG,CAAC,KAAK,IAAmD,EAAE;;oBACjG,IAAI,CAAC,gBAAK,EAAE;wBACX,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;wBACpE,OAAO;qBACP;oBAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,gBAAqB,EAAE;wBACpD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kEAAkE,CAAC,CAAC;wBAC1F,OAAO;qBACP;oBAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,mBAAwB,EAAE;wBACvD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC;wBACxF,OAAO;qBACP;oBAED,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,kBAAkB,CAAC,OAAO,0CAAE,mBAAmB,CAAA,EAAE;wBAC1D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;wBACjG,OAAO;qBACP;oBAED,IAAI,qBAAqB,CAAC;oBAC1B,IAAI;wBACH,qBAAqB,GAAG,MAAM,CAAA,GAAA,2DAAmC,CAAA,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;qBAChH;oBAAC,OAAO,KAAK,EAAE;wBACf,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBACD,IAAI,CAAC,qBAAqB,EAAE;wBAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;wBAC9F,OAAO;qBACP;oBAED,MAAM,IAAI,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,CAAC;oBAE9D,MAAM,iBAAiB,GAAG,IAAI,CAAC,kCAAkC,CAAC,iBAAiB,CAAC;oBACpF,IAAI,CAAC,iBAAiB,EAAE;wBACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iEAAiE,CAAC,CAAC;wBACzF,OAAO;qBACP;oBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,+BAA+B,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC;oBAC3G,MAAM,uBAAuB,GAAG,IAAI,kDAAuB,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC9M,uBAAuB,CAAC,YAAY,CAAC,qBAAqB,CAAC,WAAW,EAAE,qBAAqB,CAAC,UAAU,CAAC,CAAC;oBAC1G,OAAO,uBAAuB,CAAC;gBAChC,CAAC,CAAC,EAAE,CAAC;aACL;YAED,OAAO,IAAI,CAAC,+BAA+B,CAAC;QAC7C,CAAC;QAEO,KAAK,CAAC,2BAA2B,CAAC,qBAAgD;;YACzF,MAAM,iBAAiB,GAAG,IAAI,CAAC,kCAAkC,CAAC,iBAAiB,CAAC;YACpF,IAAI,CAAC,CAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,SAAS,CAAA,EAAE;gBAClC,OAAO;aACP;YAED,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;YAC1C,IAAI;gBACH,MAAM,uBAAuB,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,kDAAuB,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/N,uBAAuB,CAAC,YAAY,CAAC,qBAAqB,CAAC,WAAW,EAAE,qBAAqB,CAAC,UAAU,CAAC,CAAC;gBAE1G,0DAA0D;gBAC1D,IAAI,CAAC,mBAAmB,GAAG,MAAM,uBAAuB,CAAC,IAAI,kCAA2B,IAAI,CAAC,CAAC;gBAE9F,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBAC7B,MAAM,qBAAqB,GAAG,IAAI,mDAAiC,CAAC,uBAAuB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACzN,IAAI,qBAAqB,EAAE;wBAC1B,MAAM,IAAI,CAAC,kCAAkC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;wBAE5E,qDAAqD;wBACrD,IAAI,CAAC,CAAA,GAAA,mBAAO,CAAA,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAA,IAAI,CAAC,kCAAkC,CAAC,iBAAiB,0CAAE,GAAG,CAAC,EAAE;4BACpG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;4BACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;yBAChC;qBACD;iBACD;aACD;oBAAS;gBACT,WAAW,CAAC,OAAO,EAAE,CAAC;aACtB;QACF,CAAC;QAED,KAAK,CAAC,0BAA0B;YAC/B,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;QAC1C,CAAC;QAED,KAAK,CAAC,sBAAsB;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;YAC9E,MAAM,uBAAuB,GAAG,MAAM,IAAI,CAAC,6BAA6B,EAAE,CAAC;YAC3E,OAAO,CAAC,CAAC,uBAAuB,CAAC;QAClC,CAAC;QAED,KAAK,CAAC,2BAA2B;YAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;YACnF,OAAO,IAAI,CAAC,UAAU,CAAC,4DAAiD,CAAC,CAAC;QAC3E,CAAC;QAED,KAAK,CAAC,wBAAwB,CAAC,oBAA2C;YACzE,IAAI;gBACH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;gBAChF,MAAM,gBAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,4DAAiD,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;aACjJ;oBAAS;gBACT,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;aACnC;QACF,CAAC;QAEO,KAAK,CAAC,oBAAoB,CAAC,oBAA2C;YAC7E,IAAI;gBACH,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;aAClI;oBAAS;gBACT,IAAI,CAAC,WAAW,CAAC,IAAI,+BAAyB,CAAC;aAC/C;QACF,CAAC;QAGD,KAAK,CAAC,6BAA6B,CAAC,oBAA2C;YAC9E,IAAI,CAAC,IAAI,CAAC,oCAAoC,EAAE;gBAC/C,IAAI,CAAC,oCAAoC,GAAG,CAAC,KAAK,IAAI,EAAE;oBACvD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,6DAA6D,CAAC,CAAC;oBACrF,MAAM,4BAA4B,GAAG,MAAM,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,CAAC;oBACtG,IAAI,4BAA4B,EAAE;wBACjC,MAAM,oBAAoB,CAAC,cAAc,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC,UAAU,EAAE,CAAC;qBACrH;gBACF,CAAC,CAAC,EAAE,CAAC;aACL;YACD,OAAO,IAAI,CAAC,oCAAoC,CAAC;QAClD,CAAC;QAGO,KAAK,CAAC,uBAAuB,CAAC,oBAA2C;YAChF,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE;gBACzC,IAAI,CAAC,8BAA8B,GAAG,CAAC,KAAK,IAAI,EAAE;oBACjD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;oBAC/E,MAAM,4BAA4B,GAAG,MAAM,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,CAAC;oBACtG,IAAI,4BAA4B,EAAE;wBACjC,MAAM,oBAAoB,CAAC,cAAc,CAAC,wBAAwB,EAAE,4BAA4B,CAAC,CAAC,UAAU,EAAE,CAAC;qBAC/G;gBACF,CAAC,CAAC,EAAE,CAAC;aACL;YACD,OAAO,IAAI,CAAC,8BAA8B,CAAC;QAC5C,CAAC;QAGO,+BAA+B,CAAC,oBAA2C;YAClF,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE;gBAC9C,IAAI,CAAC,mCAAmC,GAAG,CAAC,KAAK,IAAI,EAAE;oBACtD,MAAM,uBAAuB,GAAG,MAAM,IAAI,CAAC,6BAA6B,EAAE,CAAC;oBAC3E,IAAI,CAAC,uBAAuB,EAAE;wBAC7B,OAAO,IAAI,CAAC;qBACZ;oBACD,MAAM,QAAQ,GAAG,MAAM,uBAAuB,CAAC,IAAI,gCAA0B,IAAI,CAAC,CAAC;oBACnF,OAAO,oBAAoB,CAAC,cAAc,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;gBACpF,CAAC,CAAC,EAAE,CAAC;aACL;YACD,OAAO,IAAI,CAAC,mCAAmC,CAAC;QACjD,CAAC;QAEO,KAAK,CAAC,UAAU,CAAC,aAA6B;YACrD,MAAM,uBAAuB,GAAG,MAAM,IAAI,CAAC,6BAA6B,EAAE,CAAC;YAC3E,IAAI,CAAC,uBAAuB,EAAE;gBAC7B,OAAO;aACP;YAED,MAAM,gBAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,EAAC,YAAY,EAAC,EAAE;gBAC7D,IAAI;oBACH,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;wBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAA,GAAA,+BAAgB,CAAA,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC;wBAC/E,OAAO;qBACP;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAA,GAAA,+BAAgB,CAAA,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBACxE,MAAM,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,YAAY,CAAC,CAAC;oBACrE,MAAM,QAAQ,GAAG,MAAM,uBAAuB,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,oCAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/I,MAAM,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAA,GAAA,+BAAgB,CAAA,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;iBACtE;gBAAC,OAAO,KAAK,EAAE;oBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,4BAA4B,CAAA,GAAA,+BAAgB,CAAA,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBACnF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,6BAA6B,CAAC,YAA0B;YAC/D,QAAQ,YAAY,EAAE;gBACrB,8BAA0B,CAAC,CAAC,OAAO,IAAI,kCAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvH,oCAA6B,CAAC,CAAC,OAAO,IAAI,wCAAsB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7H,8BAA0B,CAAC,CAAC,OAAO,IAAI,kCAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvH,oCAA6B,CAAC,CAAC,OAAO,IAAI,wCAAsB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAClJ;YACD,MAAM,IAAI,KAAK,CAAC,iCAAiC,YAAY,EAAE,CAAC,CAAC;QAClE,CAAC;KAED,CAAA;IA1NY,6BAA6B;QASvC,WAAA,iDAA4B,CAAA;QAC5B,WAAA,kDAAmC,CAAA;QACnC,WAAA,oBAAY,CAAA;QACZ,WAAA,yBAAe,CAAA;QACf,WAAA,gCAAe,CAAA;QACf,WAAA,yBAAe,CAAA;QACf,WAAA,iBAAW,CAAA;OAfD,6BAA6B,CA0NzC;IA1NY,sEAA6B;IA4N1C,IAAM,4BAA4B,GAAlC,MAAM,4BAA6B,SAAQ,8CAA6B;QAKvE,YACkB,cAAyB,EACb,0BAAuD,EAC/C,kCAAuE,EAC9F,WAAyB,EAClB,kBAAuC,EACnC,UAAmC;YAE5D,KAAK,CAAC,0BAA0B,EAAE,kCAAkC,EAAE,WAAW,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC;YAPlG,mBAAc,GAAd,cAAc,CAAW;YAHnC,YAAO,GAA+C,IAAI,CAAC;QAWnE,CAAC;QAED,UAAU;YACT,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrF;YACD,OAAO,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;QAEQ,UAAU;YAClB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QAClD,CAAC;QAEkB,KAAK,CAAC,YAAY,CAAC,cAA+B;YACpE,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;YACpE,IAAI,CAAC,gBAAgB,EAAE;gBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,4EAA4E,CAAC,CAAC;gBACnG,OAAO;aACP;YACD,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAE,CAAC;YACjF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;QAC5E,CAAC;KACD,CAAA;IApCK,4BAA4B;QAO/B,WAAA,iDAA2B,CAAA;QAC3B,WAAA,uDAAmC,CAAA;QACnC,WAAA,oBAAY,CAAA;QACZ,WAAA,iCAAmB,CAAA;QACnB,WAAA,sCAAuB,CAAA;OAXpB,4BAA4B,CAoCjC;IAED,IAAM,8BAA8B,GAApC,MAAM,8BAA8B;QAEnC,YACkB,4BAA0D,EACvB,0BAA6D,EAC/E,cAA+B,EACvB,UAAmC;YAH5D,iCAA4B,GAA5B,4BAA4B,CAA8B;YACvB,+BAA0B,GAA1B,0BAA0B,CAAmC;YAC/E,mBAAc,GAAd,cAAc,CAAiB;YACvB,eAAU,GAAV,UAAU,CAAyB;QAE9E,CAAC;QAED,KAAK,CAAC,UAAU;YACf,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,mDAAmD;YACnD,KAAK,MAAM,kBAAkB,IAAI,OAAO,CAAC,mBAAmB,EAAE;gBAC7D,MAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAA,GAAA,2CAAiB,CAAA,CAAC,UAAU,EAAE,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;gBACtI,IAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,EAAE;oBACzB,MAAM,cAAc,GAAG,CAAA,GAAA,yCAAwB,CAAA,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC9I,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,KAAM,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjG,CAAA,GAAA,2CAA0B,CAAA,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBACzI;aACD;YAED,sCAAsC;YACtC,IAAI,OAAO,CAAC,kBAAkB,CAAC,MAAM,EAAE;gBACtC,KAAK,MAAM,UAAU,IAAI,OAAO,CAAC,kBAAkB,EAAE;oBACpD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,wBAAwB,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;oBAC/D,MAAM,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;oBACnE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;iBAC3D;aACD;QACF,CAAC;KACD,CAAA;IAnCK,8BAA8B;QAIjC,WAAA,uDAAiC,CAAA;QACjC,WAAA,yBAAe,CAAA;QACf,WAAA,sCAAuB,CAAA;OANpB,8BAA8B,CAmCnC;IAED,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;QAE7B,YACkB,4BAA0D,EACvC,gBAAmC,EACrC,cAA+B,EACtB,cAAwC,EACrC,0BAAuD,EAC3D,UAAmC;YAL5D,iCAA4B,GAA5B,4BAA4B,CAA8B;YACvC,qBAAgB,GAAhB,gBAAgB,CAAmB;YACrC,mBAAc,GAAd,cAAc,CAAiB;YACtB,mBAAc,GAAd,cAAc,CAA0B;YACrC,+BAA0B,GAA1B,0BAA0B,CAA6B;YAC3D,eAAU,GAAV,UAAU,CAAyB;QAE9E,CAAC;QAED,KAAK,CAAC,UAAU;YACf,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;aACP;YAED,MAAM,sBAAsB,GAAsB,EAAE,CAAC;YACrD,MAAM,KAAK,GAAa,EAAE,EAAE,KAAK,GAAa,EAAE,CAAC;YACjD,KAAK,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,OAAO,CAAC,aAAa,EAAE;gBACjD,IAAI,IAAI,EAAE;oBACT,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;qBAAM;oBACN,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACf;aACD;YACD,MAAM,iBAAiB,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACnK,KAAK,MAAM,gBAAgB,IAAI,iBAAiB,EAAE;gBACjD,IAAI;oBACH,MAAM,eAAe,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAA,GAAA,2CAAiB,CAAA,CAAC,UAAU,EAAE,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtI,IAAI,CAAC,eAAe,EAAE;wBACrB,SAAS;qBACT;oBACD,IAAI,eAAe,CAAC,KAAK,EAAE;wBAC1B,CAAA,GAAA,2CAA0B,CAAA,CAAC,gBAAgB,CAAC,SAAS,EAAE,gBAAgB,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;qBAC1H;oBACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,yBAAyB,EAAE,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBACjF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,4DAA4D,CAAC,CAAC;oBAClL,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA,GAAA,2CAAiB,CAAA,CAAC,UAAU,EAAE,gBAAgB,CAAC,UAAU,CAAC,CAAC,EAAE;wBAC/G,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;iBAC7E;gBAAC,OAAO,KAAK,EAAE;oBACf,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACD;YAED,MAAM,oBAAoB,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAA,GAAA,mCAAsB,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC,EAAE;gBAC7D,MAAM,IAAI,OAAO,CAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAK,IAAI,EAAE;wBACzE,IAAI;4BACH,IAAI,MAAM,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,EAAE;gCAC1D,UAAU,CAAC,OAAO,EAAE,CAAC;gCACrB,CAAC,EAAE,CAAC;6BACJ;yBACD;wBAAC,OAAO,KAAK,EAAE;4BACf,CAAC,CAAC,KAAK,CAAC,CAAC;yBACT;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;aACH;QACF,CAAC;QAEO,KAAK,CAAC,oBAAoB,CAAC,UAA6B;YAC/D,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;YACtE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,GAAA,2CAAiB,CAAA,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxH,CAAC;KACD,CAAA;IArEK,wBAAwB;QAI3B,WAAA,8BAAiB,CAAA;QACjB,WAAA,yBAAe,CAAA;QACf,WAAA,8CAAwB,CAAA;QACxB,WAAA,iDAA2B,CAAA;QAC3B,WAAA,sCAAuB,CAAA;OARpB,wBAAwB,CAqE7B;IAED,IAAM,oCAAoC,GAA1C,MAAM,oCAAoC;QACzC,YACiC,yBAAyD,EAClE,oBAA2C,EAC/C,gBAAmC;YAEtD,gBAAgB,CAAC,iCAAiC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,EAAE,oBAAoB,CAAC,CAAC,CAAC;QAChJ,CAAC;QAEO,KAAK,CAAC,uBAAuB,CAAC,yBAAyD,EAAE,oBAA2C;YAC3I,IAAI,MAAM,yBAAyB,CAAC,sBAAsB,EAAE,EAAE;gBAC7D,CAAA,GAAA,kBAAI,CAAA,CAAC,4BAA4B,CAAC,CAAC;gBACnC,MAAM,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC;gBAC/E,CAAA,GAAA,kBAAI,CAAA,CAAC,2BAA2B,CAAC,CAAC;aAClC;QACF,CAAC;KACD,CAAA;IAhBK,oCAAoC;QAEvC,WAAA,sCAA8B,CAAA;QAC9B,WAAA,qCAAqB,CAAA;QACrB,WAAA,8BAAiB,CAAA;OAJd,oCAAoC,CAgBzC;IAED,IAAI,gBAAK,EAAE;QACV,MAAM,iBAAiB,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC;QAC7F,iBAAiB,CAAC,6BAA6B,CAAC,oCAAoC,mBAA0B,CAAC;KAC/G","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { AbstractExtensionsInitializer, getExtensionStorageState, IExtensionsInitializerPreviewResult, storeExtensionStorageState } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { GlobalStateInitializer, UserDataSyncStoreTypeSynchronizer } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { KeybindingsInitializer } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { SettingsInitializer } from 'vs/platform/userDataSync/common/settingsSync';\nimport { SnippetsInitializer } from 'vs/platform/userDataSync/common/snippetsSync';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRemoteUserData, IUserData, IUserDataInitializer, IUserDataSyncLogService, IUserDataSyncStoreClient, IUserDataSyncStoreManagementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { AuthenticationSessionInfo, getCurrentAuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { getSyncAreaLabel } from 'vs/workbench/services/userDataSync/common/userDataSync';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { Barrier, Promises } from 'vs/base/common/async';\nimport { IExtensionGalleryService, IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionService, toExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { mark } from 'vs/base/common/performance';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IUserDataInitializationService = createDecorator<IUserDataInitializationService>('IUserDataInitializationService');\nexport interface IUserDataInitializationService {\n\t_serviceBrand: any;\n\n\trequiresInitialization(): Promise<boolean>;\n\twhenInitializationFinished(): Promise<void>;\n\tinitializeRequiredResources(): Promise<void>;\n\tinitializeInstalledExtensions(instantiationService: IInstantiationService): Promise<void>;\n\tinitializeOtherResources(instantiationService: IInstantiationService): Promise<void>;\n}\n\nexport class UserDataInitializationService implements IUserDataInitializationService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly initialized: SyncResource[] = [];\n\tprivate readonly initializationFinished = new Barrier();\n\tprivate globalStateUserData: IUserData | null = null;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.createUserDataSyncStoreClient().then(userDataSyncStoreClient => {\n\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\tthis.initializationFinished.open();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _userDataSyncStoreClientPromise: Promise<IUserDataSyncStoreClient | undefined> | undefined;\n\tprivate createUserDataSyncStoreClient(): Promise<IUserDataSyncStoreClient | undefined> {\n\t\tif (!this._userDataSyncStoreClientPromise) {\n\t\t\tthis._userDataSyncStoreClientPromise = (async (): Promise<IUserDataSyncStoreClient | undefined> => {\n\t\t\t\tif (!isWeb) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data in desktop`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.storageService.isNew(StorageScope.GLOBAL)) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as application was opened before`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as workspace was opened before`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.environmentService.options?.credentialsProvider) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as credentials provider is not provided`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet authenticationSession;\n\t\t\t\ttry {\n\t\t\t\t\tauthenticationSession = await getCurrentAuthenticationSessionInfo(this.environmentService, this.productService);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t\tif (!authenticationSession) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as authentication session is not set`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.initializeUserDataSyncStore(authenticationSession);\n\n\t\t\t\tconst userDataSyncStore = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\t\t\tif (!userDataSyncStore) {\n\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as sync service is not provided`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.logService.info(`Using settings sync service ${userDataSyncStore.url.toString()} for initialization`);\n\t\t\t\tconst userDataSyncStoreClient = new UserDataSyncStoreClient(userDataSyncStore.url, this.productService, this.requestService, this.logService, this.environmentService, this.fileService, this.storageService);\n\t\t\t\tuserDataSyncStoreClient.setAuthToken(authenticationSession.accessToken, authenticationSession.providerId);\n\t\t\t\treturn userDataSyncStoreClient;\n\t\t\t})();\n\t\t}\n\n\t\treturn this._userDataSyncStoreClientPromise;\n\t}\n\n\tprivate async initializeUserDataSyncStore(authenticationSession: AuthenticationSessionInfo): Promise<void> {\n\t\tconst userDataSyncStore = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\tif (!userDataSyncStore?.canSwitch) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataSyncStoreClient = disposables.add(new UserDataSyncStoreClient(userDataSyncStore.url, this.productService, this.requestService, this.logService, this.environmentService, this.fileService, this.storageService));\n\t\t\tuserDataSyncStoreClient.setAuthToken(authenticationSession.accessToken, authenticationSession.providerId);\n\n\t\t\t// Cache global state data for global state initialization\n\t\t\tthis.globalStateUserData = await userDataSyncStoreClient.read(SyncResource.GlobalState, null);\n\n\t\t\tif (this.globalStateUserData) {\n\t\t\t\tconst userDataSyncStoreType = new UserDataSyncStoreTypeSynchronizer(userDataSyncStoreClient, this.storageService, this.environmentService, this.fileService, this.logService).getSyncStoreType(this.globalStateUserData);\n\t\t\t\tif (userDataSyncStoreType) {\n\t\t\t\t\tawait this.userDataSyncStoreManagementService.switch(userDataSyncStoreType);\n\n\t\t\t\t\t// Unset cached global state data if urls are changed\n\t\t\t\t\tif (!isEqual(userDataSyncStore.url, this.userDataSyncStoreManagementService.userDataSyncStore?.url)) {\n\t\t\t\t\t\tthis.logService.info('Switched settings sync store');\n\t\t\t\t\t\tthis.globalStateUserData = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync whenInitializationFinished(): Promise<void> {\n\t\tawait this.initializationFinished.wait();\n\t}\n\n\tasync requiresInitialization(): Promise<boolean> {\n\t\tthis.logService.trace(`UserDataInitializationService#requiresInitialization`);\n\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\treturn !!userDataSyncStoreClient;\n\t}\n\n\tasync initializeRequiredResources(): Promise<void> {\n\t\tthis.logService.trace(`UserDataInitializationService#initializeRequiredResources`);\n\t\treturn this.initialize([SyncResource.Settings, SyncResource.GlobalState]);\n\t}\n\n\tasync initializeOtherResources(instantiationService: IInstantiationService): Promise<void> {\n\t\ttry {\n\t\t\tthis.logService.trace(`UserDataInitializationService#initializeOtherResources`);\n\t\t\tawait Promises.allSettled([this.initialize([SyncResource.Keybindings, SyncResource.Snippets]), this.initializeExtensions(instantiationService)]);\n\t\t} finally {\n\t\t\tthis.initializationFinished.open();\n\t\t}\n\t}\n\n\tprivate async initializeExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\ttry {\n\t\t\tawait Promise.all([this.initializeInstalledExtensions(instantiationService), this.initializeNewExtensions(instantiationService)]);\n\t\t} finally {\n\t\t\tthis.initialized.push(SyncResource.Extensions);\n\t\t}\n\t}\n\n\tprivate initializeInstalledExtensionsPromise: Promise<void> | undefined;\n\tasync initializeInstalledExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\tif (!this.initializeInstalledExtensionsPromise) {\n\t\t\tthis.initializeInstalledExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(`UserDataInitializationService#initializeInstalledExtensions`);\n\t\t\t\tconst extensionsPreviewInitializer = await this.getExtensionsPreviewInitializer(instantiationService);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService.createInstance(InstalledExtensionsInitializer, extensionsPreviewInitializer).initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeInstalledExtensionsPromise;\n\t}\n\n\tprivate initializeNewExtensionsPromise: Promise<void> | undefined;\n\tprivate async initializeNewExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\tif (!this.initializeNewExtensionsPromise) {\n\t\t\tthis.initializeNewExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(`UserDataInitializationService#initializeNewExtensions`);\n\t\t\t\tconst extensionsPreviewInitializer = await this.getExtensionsPreviewInitializer(instantiationService);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService.createInstance(NewExtensionsInitializer, extensionsPreviewInitializer).initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeNewExtensionsPromise;\n\t}\n\n\tprivate extensionsPreviewInitializerPromise: Promise<ExtensionsPreviewInitializer | null> | undefined;\n\tprivate getExtensionsPreviewInitializer(instantiationService: IInstantiationService): Promise<ExtensionsPreviewInitializer | null> {\n\t\tif (!this.extensionsPreviewInitializerPromise) {\n\t\t\tthis.extensionsPreviewInitializerPromise = (async () => {\n\t\t\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst userData = await userDataSyncStoreClient.read(SyncResource.Extensions, null);\n\t\t\t\treturn instantiationService.createInstance(ExtensionsPreviewInitializer, userData);\n\t\t\t})();\n\t\t}\n\t\treturn this.extensionsPreviewInitializerPromise;\n\t}\n\n\tprivate async initialize(syncResources: SyncResource[]): Promise<void> {\n\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\tif (!userDataSyncStoreClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promises.settled(syncResources.map(async syncResource => {\n\t\t\ttry {\n\t\t\t\tif (this.initialized.includes(syncResource)) {\n\t\t\t\t\tthis.logService.info(`${getSyncAreaLabel(syncResource)} initialized already.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.initialized.push(syncResource);\n\t\t\t\tthis.logService.trace(`Initializing ${getSyncAreaLabel(syncResource)}`);\n\t\t\t\tconst initializer = this.createSyncResourceInitializer(syncResource);\n\t\t\t\tconst userData = await userDataSyncStoreClient.read(syncResource, syncResource === SyncResource.GlobalState ? this.globalStateUserData : null);\n\t\t\t\tawait initializer.initialize(userData);\n\t\t\t\tthis.logService.info(`Initialized ${getSyncAreaLabel(syncResource)}`);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(`Error while initializing ${getSyncAreaLabel(syncResource)}`);\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createSyncResourceInitializer(syncResource: SyncResource): IUserDataInitializer {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings: return new SettingsInitializer(this.fileService, this.environmentService, this.logService);\n\t\t\tcase SyncResource.Keybindings: return new KeybindingsInitializer(this.fileService, this.environmentService, this.logService);\n\t\t\tcase SyncResource.Snippets: return new SnippetsInitializer(this.fileService, this.environmentService, this.logService);\n\t\t\tcase SyncResource.GlobalState: return new GlobalStateInitializer(this.storageService, this.fileService, this.environmentService, this.logService);\n\t\t}\n\t\tthrow new Error(`Cannot create initializer for ${syncResource}`);\n\t}\n\n}\n\nclass ExtensionsPreviewInitializer extends AbstractExtensionsInitializer {\n\n\tprivate previewPromise: Promise<IExtensionsInitializerPreviewResult | null> | undefined;\n\tprivate preview: IExtensionsInitializerPreviewResult | null = null;\n\n\tconstructor(\n\t\tprivate readonly extensionsData: IUserData,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper(extensionManagementService, ignoredExtensionsManagementService, fileService, environmentService, logService);\n\t}\n\n\tgetPreview(): Promise<IExtensionsInitializerPreviewResult | null> {\n\t\tif (!this.previewPromise) {\n\t\t\tthis.previewPromise = super.initialize(this.extensionsData).then(() => this.preview);\n\t\t}\n\t\treturn this.previewPromise;\n\t}\n\n\toverride initialize(): Promise<void> {\n\t\tthrow new Error('should not be called directly');\n\t}\n\n\tprotected override async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info('Skipping initializing extensions because remote extensions does not exist.');\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tthis.preview = this.generatePreview(remoteExtensions, installedExtensions);\n\t}\n}\n\nclass InstalledExtensionsInitializer implements IUserDataInitializer {\n\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 1. Initialise already installed extensions state\n\t\tfor (const installedExtension of preview.installedExtensions) {\n\t\t\tconst syncExtension = preview.remoteExtensions.find(({ identifier }) => areSameExtensions(identifier, installedExtension.identifier));\n\t\t\tif (syncExtension?.state) {\n\t\t\t\tconst extensionState = getExtensionStorageState(installedExtension.manifest.publisher, installedExtension.manifest.name, this.storageService);\n\t\t\t\tObject.keys(syncExtension.state).forEach(key => extensionState[key] = syncExtension.state![key]);\n\t\t\t\tstoreExtensionStorageState(installedExtension.manifest.publisher, installedExtension.manifest.name, extensionState, this.storageService);\n\t\t\t}\n\t\t}\n\n\t\t// 2. Initialise extensions enablement\n\t\tif (preview.disabledExtensions.length) {\n\t\t\tfor (const identifier of preview.disabledExtensions) {\n\t\t\t\tthis.logService.trace(`Disabling extension...`, identifier.id);\n\t\t\t\tawait this.extensionEnablementService.disableExtension(identifier);\n\t\t\t\tthis.logService.info(`Disabling extension`, identifier.id);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass NewExtensionsInitializer implements IUserDataInitializer {\n\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newlyEnabledExtensions: ILocalExtension[] = [];\n\t\tconst uuids: string[] = [], names: string[] = [];\n\t\tfor (const { uuid, id } of preview.newExtensions) {\n\t\t\tif (uuid) {\n\t\t\t\tuuids.push(uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(id);\n\t\t\t}\n\t\t}\n\t\tconst galleryExtensions = (await this.galleryService.query({ ids: uuids, names: names, pageSize: uuids.length + names.length }, CancellationToken.None)).firstPage;\n\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\ttry {\n\t\t\t\tconst extensionToSync = preview.remoteExtensions.find(({ identifier }) => areSameExtensions(identifier, galleryExtension.identifier));\n\t\t\t\tif (!extensionToSync) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (extensionToSync.state) {\n\t\t\t\t\tstoreExtensionStorageState(galleryExtension.publisher, galleryExtension.name, extensionToSync.state, this.storageService);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace(`Installing extension...`, galleryExtension.identifier.id);\n\t\t\t\tconst local = await this.extensionManagementService.installFromGallery(galleryExtension, { isMachineScoped: false } /* pass options to prevent install and sync dialog in web */);\n\t\t\t\tif (!preview.disabledExtensions.some(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\tnewlyEnabledExtensions.push(local);\n\t\t\t\t}\n\t\t\t\tthis.logService.info(`Installed extension.`, galleryExtension.identifier.id);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\tconst canEnabledExtensions = newlyEnabledExtensions.filter(e => this.extensionService.canAddExtension(toExtensionDescription(e)));\n\t\tif (!(await this.areExtensionsRunning(canEnabledExtensions))) {\n\t\t\tawait new Promise<void>((c, e) => {\n\t\t\t\tconst disposable = this.extensionService.onDidChangeExtensions(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (await this.areExtensionsRunning(canEnabledExtensions)) {\n\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\te(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async areExtensionsRunning(extensions: ILocalExtension[]): Promise<boolean> {\n\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\t\treturn extensions.every(e => runningExtensions.some(r => areSameExtensions({ id: r.identifier.value }, e.identifier)));\n\t}\n}\n\nclass InitializeOtherResourcesContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IUserDataInitializationService userDataInitializeService: IUserDataInitializationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IExtensionService extensionService: IExtensionService\n\t) {\n\t\textensionService.whenInstalledExtensionsRegistered().then(() => this.initializeOtherResource(userDataInitializeService, instantiationService));\n\t}\n\n\tprivate async initializeOtherResource(userDataInitializeService: IUserDataInitializationService, instantiationService: IInstantiationService): Promise<void> {\n\t\tif (await userDataInitializeService.requiresInitialization()) {\n\t\t\tmark('code/willInitOtherUserData');\n\t\t\tawait userDataInitializeService.initializeOtherResources(instantiationService);\n\t\t\tmark('code/didInitOtherUserData');\n\t\t}\n\t}\n}\n\nif (isWeb) {\n\tconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench);\n\tworkbenchRegistry.registerWorkbenchContribution(InitializeOtherResourcesContribution, LifecyclePhase.Restored);\n}\n"]}