{"version":3,"file":"fileUserDataProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/userData/common/fileUserDataProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IFileSystemProviderWithFileReadWriteCapability, IFileChange, IWatchOptions, IStat, FileOverwriteOptions, FileType, FileWriteOptions, FileDeleteOptions, FileSystemProviderCapabilities, IFileSystemProviderWithOpenReadWriteCloseCapability, FileOpenOptions, hasReadWriteCapability, hasOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadStreamCapability, FileReadStreamOptions, hasFileReadStreamCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport class FileUserDataProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability {\n\n\tget capabilities() { return this.fileSystemProvider.capabilities; }\n\treadonly onDidChangeCapabilities: Event<void> = this.fileSystemProvider.onDidChangeCapabilities;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChangeFile.event;\n\n\tprivate extUri: ExtUri;\n\n\tprivate readonly watchResources = TernarySearchTree.forUris<URI>(uri => this.extUri.ignorePathCasing(uri));\n\n\tconstructor(\n\t\tprivate readonly fileSystemScheme: string,\n\t\tprivate readonly fileSystemProvider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability,\n\t\tprivate readonly userDataScheme: string,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.extUri = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive) ? extUri : extUriIgnorePathCase;\n\t\t// update extUri as capabilites might change.\n\t\tthis._register(this.onDidChangeCapabilities(() => this.extUri = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive) ? extUri : extUriIgnorePathCase));\n\t\tthis._register(this.fileSystemProvider.onDidChangeFile(e => this.handleFileChanges(e)));\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tthis.watchResources.set(resource, resource);\n\t\tconst disposable = this.fileSystemProvider.watch(this.toFileSystemResource(resource), opts);\n\t\treturn toDisposable(() => {\n\t\t\tthis.watchResources.delete(resource);\n\t\t\tdisposable.dispose();\n\t\t});\n\t}\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.fileSystemProvider.stat(this.toFileSystemResource(resource));\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.fileSystemProvider.mkdir(this.toFileSystemResource(resource));\n\t}\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.fileSystemProvider.rename(this.toFileSystemResource(from), this.toFileSystemResource(to), opts);\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\tif (hasReadWriteCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.readFile(this.toFileSystemResource(resource));\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tif (hasFileReadStreamCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.readFileStream(this.toFileSystemResource(resource), opts, token);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.fileSystemProvider.readdir(this.toFileSystemResource(resource));\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tif (hasReadWriteCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.writeFile(this.toFileSystemResource(resource), content, opts);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\tif (hasOpenReadWriteCloseCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.open(this.toFileSystemResource(resource), opts);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\tif (hasOpenReadWriteCloseCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.close(fd);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tif (hasOpenReadWriteCloseCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.read(fd, pos, data, offset, length);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tif (hasOpenReadWriteCloseCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.write(fd, pos, data, offset, length);\n\t\t}\n\t\tthrow new Error('not supported');\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.fileSystemProvider.delete(this.toFileSystemResource(resource), opts);\n\t}\n\n\tprivate handleFileChanges(changes: readonly IFileChange[]): void {\n\t\tconst userDataChanges: IFileChange[] = [];\n\t\tfor (const change of changes) {\n\t\t\tconst userDataResource = this.toUserDataResource(change.resource);\n\t\t\tif (this.watchResources.findSubstr(userDataResource)) {\n\t\t\t\tuserDataChanges.push({\n\t\t\t\t\tresource: userDataResource,\n\t\t\t\t\ttype: change.type\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (userDataChanges.length) {\n\t\t\tthis.logService.debug('User data changed');\n\t\t\tthis._onDidChangeFile.fire(userDataChanges);\n\t\t}\n\t}\n\n\tprivate toFileSystemResource(userDataResource: URI): URI {\n\t\treturn userDataResource.with({ scheme: this.fileSystemScheme });\n\t}\n\n\tprivate toUserDataResource(fileSystemResource: URI): URI {\n\t\treturn fileSystemResource.with({ scheme: this.userDataScheme });\n\t}\n\n}\n"]}