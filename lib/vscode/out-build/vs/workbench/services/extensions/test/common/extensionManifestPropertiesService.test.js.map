{"version":3,"file":"extensionManifestPropertiesService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensions/test/common/extensionManifestPropertiesService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IExtensionManifest, ExtensionKind, ExtensionUntrustedWorkpaceSupportType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestProductService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\n\nsuite('ExtensionManifestPropertiesService - ExtensionKind', () => {\n\n\tfunction check(manifest: Partial<IExtensionManifest>, expected: ExtensionKind[]): void {\n\t\tconst extensionManifestPropertiesService = new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService());\n\t\tassert.deepStrictEqual(extensionManifestPropertiesService.deduceExtensionKind(<IExtensionManifest>manifest), expected);\n\t}\n\n\ttest('declarative with extension dependencies => workspace', () => {\n\t\tcheck({ extensionDependencies: ['ext1'] }, ['workspace']);\n\t});\n\n\ttest('declarative extension pack => workspace', () => {\n\t\tcheck({ extensionPack: ['ext1', 'ext2'] }, ['workspace']);\n\t});\n\n\ttest('declarative with unknown contribution point => workspace', () => {\n\t\tcheck({ contributes: <any>{ 'unknownPoint': { something: true } } }, ['workspace']);\n\t});\n\n\ttest('simple declarative => ui, workspace, web', () => {\n\t\tcheck({}, ['ui', 'workspace', 'web']);\n\t});\n\n\ttest('only browser => web', () => {\n\t\tcheck({ browser: 'main.browser.js' }, ['web']);\n\t});\n\n\ttest('only main => workspace', () => {\n\t\tcheck({ main: 'main.js' }, ['workspace']);\n\t});\n\n\ttest('main and browser => workspace, web', () => {\n\t\tcheck({ main: 'main.js', browser: 'main.browser.js' }, ['workspace', 'web']);\n\t});\n});\n\n\n// Workspace Trust is disabled in web at the moment\nif (!isWeb) {\n\tsuite('ExtensionManifestPropertiesService - ExtensionUntrustedWorkpaceSupportType', () => {\n\t\tlet testObject: ExtensionManifestPropertiesService;\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet testConfigurationService: TestConfigurationService;\n\n\t\tsetup(async () => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\n\t\t\ttestConfigurationService = new TestConfigurationService();\n\t\t\tinstantiationService.stub(IConfigurationService, testConfigurationService);\n\t\t\tawait testConfigurationService.setUserConfiguration('security', { workspace: { trust: { enabled: true } } });\n\t\t});\n\n\t\tteardown(() => testObject.dispose());\n\n\t\tfunction assertUntrustedWorkspaceSupport(extensionMaifest: IExtensionManifest, expected: ExtensionUntrustedWorkpaceSupportType): void {\n\t\t\ttestObject = instantiationService.createInstance(ExtensionManifestPropertiesService);\n\t\t\tconst untrustedWorkspaceSupport = testObject.getExtensionUntrustedWorkspaceSupportType(extensionMaifest);\n\n\t\t\tassert.strictEqual(untrustedWorkspaceSupport, expected);\n\t\t}\n\n\t\tfunction getExtensionManifest(properties: any = {}): IExtensionManifest {\n\t\t\treturn Object.create({ name: 'a', publisher: 'pub', version: '1.0.0', ...properties }) as IExtensionManifest;\n\t\t}\n\n\t\ttest('test extension workspace trust request when main entry point is missing', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tconst extensionMaifest = getExtensionManifest();\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when workspace trust is disabled', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tawait testConfigurationService.setUserConfiguration('security', { workspace: { trust: { enabled: false } } });\n\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tawait testConfigurationService.setUserConfiguration('security', { workspace: { trust: { extensionUntrustedSupport: { 'pub.a': { supported: true } } } } });\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override for the version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tawait testConfigurationService.setUserConfiguration('security', { workspace: { trust: { extensionUntrustedSupport: { 'pub.a': { supported: true, version: '1.0.0' } } } } });\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override for a different version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tawait testConfigurationService.setUserConfiguration('security', {\n\t\t\t\tworkspace: {\n\t\t\t\t\ttrust: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\textensionUntrustedSupport: { 'pub.a': { supported: true, version: '2.0.0' } }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when default exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { default: true } } });\n\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { override: 'limited' } } });\n\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when no value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\n\t\t\tconst extensionMaifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionMaifest, false);\n\t\t});\n\t});\n}\n"]}