{"version":3,"file":"extensionManifestPropertiesService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensions/common/extensionManifestPropertiesService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest, ExtensionKind, ExtensionIdentifier, ExtensionUntrustedWorkpaceSupportType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ExtensionUntrustedWorkspaceSupport } from 'vs/base/common/product';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWorkspaceTrustEnabled, WORKSPACE_TRUST_EXTENSION_SUPPORT } from 'vs/workbench/services/workspaces/common/workspaceTrust';\n\nexport const IExtensionManifestPropertiesService = createDecorator<IExtensionManifestPropertiesService>('extensionManifestPropertiesService');\n\nexport interface IExtensionManifestPropertiesService {\n\treadonly _serviceBrand: undefined;\n\n\tprefersExecuteOnUI(manifest: IExtensionManifest): boolean;\n\tprefersExecuteOnWorkspace(manifest: IExtensionManifest): boolean;\n\tprefersExecuteOnWeb(manifest: IExtensionManifest): boolean;\n\n\tcanExecuteOnUI(manifest: IExtensionManifest): boolean;\n\tcanExecuteOnWorkspace(manifest: IExtensionManifest): boolean;\n\tcanExecuteOnWeb(manifest: IExtensionManifest): boolean;\n\n\tgetExtensionKind(manifest: IExtensionManifest): ExtensionKind[];\n\tgetExtensionUntrustedWorkspaceSupportType(manifest: IExtensionManifest): ExtensionUntrustedWorkpaceSupportType;\n\tcanSupportVirtualWorkspace(manifest: IExtensionManifest): boolean;\n}\n\nexport class ExtensionManifestPropertiesService extends Disposable implements IExtensionManifestPropertiesService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _uiExtensionPoints: Set<string> | null = null;\n\tprivate _productExtensionKindsMap: Map<string, ExtensionKind[]> | null = null;\n\tprivate _configuredExtensionKindsMap: Map<string, ExtensionKind | ExtensionKind[]> | null = null;\n\n\tprivate _productVirtualWorkspaceSupportMap: Map<string, { default?: boolean, override?: boolean }> | null = null;\n\tprivate _configuredVirtualWorkspaceSupportMap: Map<string, boolean> | null = null;\n\n\tprivate readonly _configuredExtensionWorkspaceTrustRequestMap: Map<string, { supported: ExtensionUntrustedWorkpaceSupportType, version?: string }>;\n\tprivate readonly _productExtensionWorkspaceTrustRequestMap: Map<string, ExtensionUntrustedWorkspaceSupport>;\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\t// Workspace trust request type (settings.json)\n\t\tthis._configuredExtensionWorkspaceTrustRequestMap = new Map<string, { supported: ExtensionUntrustedWorkpaceSupportType, version?: string }>();\n\t\tconst configuredExtensionWorkspaceTrustRequests = configurationService.inspect<{ [key: string]: { supported: ExtensionUntrustedWorkpaceSupportType, version?: string } }>(WORKSPACE_TRUST_EXTENSION_SUPPORT).userValue || {};\n\t\tfor (const id of Object.keys(configuredExtensionWorkspaceTrustRequests)) {\n\t\t\tthis._configuredExtensionWorkspaceTrustRequestMap.set(ExtensionIdentifier.toKey(id), configuredExtensionWorkspaceTrustRequests[id]);\n\t\t}\n\n\t\t// Workpace trust request type (products.json)\n\t\tthis._productExtensionWorkspaceTrustRequestMap = new Map<string, ExtensionUntrustedWorkspaceSupport>();\n\t\tif (productService.extensionUntrustedWorkspaceSupport) {\n\t\t\tfor (const id of Object.keys(productService.extensionUntrustedWorkspaceSupport)) {\n\t\t\t\tthis._productExtensionWorkspaceTrustRequestMap.set(ExtensionIdentifier.toKey(id), productService.extensionUntrustedWorkspaceSupport[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprefersExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'ui');\n\t}\n\n\tprefersExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'workspace');\n\t}\n\n\tprefersExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'web');\n\t}\n\n\tcanExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'ui');\n\t}\n\n\tcanExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'workspace');\n\t}\n\n\tcanExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'web');\n\t}\n\n\tgetExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t\t// check in config\n\t\tlet result = this.getConfiguredExtensionKind(manifest);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn this.toArray(result);\n\t\t}\n\n\t\t// check product.json\n\t\tresult = this.getProductExtensionKind(manifest);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn result;\n\t\t}\n\n\t\t// check the manifest itself\n\t\tresult = manifest.extensionKind;\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn this.toArray(result);\n\t\t}\n\n\t\treturn this.deduceExtensionKind(manifest);\n\t}\n\n\tgetExtensionUntrustedWorkspaceSupportType(manifest: IExtensionManifest): ExtensionUntrustedWorkpaceSupportType {\n\t\t// Workspace trust feature is disabled, or extension has no entry point\n\t\tif (!isWorkspaceTrustEnabled(this.configurationService) || !manifest.main) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get extension workspace trust requirements from settings.json\n\t\tconst configuredWorkspaceTrustRequest = this.getConfiguredExtensionWorkspaceTrustRequest(manifest);\n\n\t\t// Get extension workspace trust requirements from product.json\n\t\tconst productWorkspaceTrustRequest = this.getProductExtensionWorkspaceTrustRequest(manifest);\n\n\t\t// Use settings.json override value if it exists\n\t\tif (configuredWorkspaceTrustRequest) {\n\t\t\treturn configuredWorkspaceTrustRequest;\n\t\t}\n\n\t\t// Use product.json override value if it exists\n\t\tif (productWorkspaceTrustRequest?.override) {\n\t\t\treturn productWorkspaceTrustRequest.override;\n\t\t}\n\n\t\t// Use extension manifest value if it exists\n\t\tif (manifest.capabilities?.untrustedWorkspaces?.supported !== undefined) {\n\t\t\treturn manifest.capabilities.untrustedWorkspaces.supported;\n\t\t}\n\n\t\t// Use product.json default value if it exists\n\t\tif (productWorkspaceTrustRequest?.default) {\n\t\t\treturn productWorkspaceTrustRequest.default;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcanSupportVirtualWorkspace(manifest: IExtensionManifest): boolean {\n\t\t// check user configured\n\t\tconst userConfiguredVirtualWorkspaceSupport = this.getConfiguredVirtualWorkspaceSupport(manifest);\n\t\tif (userConfiguredVirtualWorkspaceSupport !== undefined) {\n\t\t\treturn userConfiguredVirtualWorkspaceSupport;\n\t\t}\n\n\t\tconst productConfiguredWorkspaceSchemes = this.getProductVirtualWorkspaceSupport(manifest);\n\n\t\t// check override from product\n\t\tif (productConfiguredWorkspaceSchemes?.override !== undefined) {\n\t\t\treturn productConfiguredWorkspaceSchemes.override;\n\t\t}\n\n\t\t// check the manifest\n\t\tif (manifest.capabilities?.virtualWorkspaces !== undefined) {\n\t\t\treturn manifest.capabilities?.virtualWorkspaces;\n\t\t}\n\n\t\t// check default from product\n\t\tif (productConfiguredWorkspaceSchemes?.default !== undefined) {\n\t\t\treturn productConfiguredWorkspaceSchemes.default;\n\t\t}\n\n\t\t// Default - supports virtual workspace\n\t\treturn true;\n\t}\n\n\tdeduceExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t\t// Not an UI extension if it has main\n\t\tif (manifest.main) {\n\t\t\tif (manifest.browser) {\n\t\t\t\treturn ['workspace', 'web'];\n\t\t\t}\n\t\t\treturn ['workspace'];\n\t\t}\n\n\t\tif (manifest.browser) {\n\t\t\treturn ['web'];\n\t\t}\n\n\t\t// Not an UI nor web extension if it has dependencies or an extension pack\n\t\tif (isNonEmptyArray(manifest.extensionDependencies) || isNonEmptyArray(manifest.extensionPack)) {\n\t\t\treturn ['workspace'];\n\t\t}\n\n\t\tif (manifest.contributes) {\n\t\t\t// Not an UI nor web extension if it has no ui contributions\n\t\t\tfor (const contribution of Object.keys(manifest.contributes)) {\n\t\t\t\tif (!this.isUIExtensionPoint(contribution)) {\n\t\t\t\t\treturn ['workspace'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ['ui', 'workspace', 'web'];\n\t}\n\n\tprivate isUIExtensionPoint(extensionPoint: string): boolean {\n\t\tif (this._uiExtensionPoints === null) {\n\t\t\tconst uiExtensionPoints = new Set<string>();\n\t\t\tExtensionsRegistry.getExtensionPoints().filter(e => e.defaultExtensionKind !== 'workspace').forEach(e => {\n\t\t\t\tuiExtensionPoints.add(e.name);\n\t\t\t});\n\t\t\tthis._uiExtensionPoints = uiExtensionPoints;\n\t\t}\n\t\treturn this._uiExtensionPoints.has(extensionPoint);\n\t}\n\n\tprivate getProductExtensionKind(manifest: IExtensionManifest): ExtensionKind[] | undefined {\n\t\tif (this._productExtensionKindsMap === null) {\n\t\t\tconst productExtensionKindsMap = new Map<string, ExtensionKind[]>();\n\t\t\tif (this.productService.extensionKind) {\n\t\t\t\tfor (const id of Object.keys(this.productService.extensionKind)) {\n\t\t\t\t\tproductExtensionKindsMap.set(ExtensionIdentifier.toKey(id), this.productService.extensionKind[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._productExtensionKindsMap = productExtensionKindsMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productExtensionKindsMap.get(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tprivate getConfiguredExtensionKind(manifest: IExtensionManifest): ExtensionKind | ExtensionKind[] | undefined {\n\t\tif (this._configuredExtensionKindsMap === null) {\n\t\t\tconst configuredExtensionKindsMap = new Map<string, ExtensionKind | ExtensionKind[]>();\n\t\t\tconst configuredExtensionKinds = this.configurationService.getValue<{ [key: string]: ExtensionKind | ExtensionKind[] }>('remote.extensionKind') || {};\n\t\t\tfor (const id of Object.keys(configuredExtensionKinds)) {\n\t\t\t\tconfiguredExtensionKindsMap.set(ExtensionIdentifier.toKey(id), configuredExtensionKinds[id]);\n\t\t\t}\n\t\t\tthis._configuredExtensionKindsMap = configuredExtensionKindsMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._configuredExtensionKindsMap.get(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tprivate getProductVirtualWorkspaceSupport(manifest: IExtensionManifest): { default?: boolean, override?: boolean } | undefined {\n\t\tif (this._productVirtualWorkspaceSupportMap === null) {\n\t\t\tconst productWorkspaceSchemesMap = new Map<string, { default?: boolean, override?: boolean }>();\n\t\t\tif (this.productService.extensionVirtualWorkspacesSupport) {\n\t\t\t\tfor (const id of Object.keys(this.productService.extensionVirtualWorkspacesSupport)) {\n\t\t\t\t\tproductWorkspaceSchemesMap.set(ExtensionIdentifier.toKey(id), this.productService.extensionVirtualWorkspacesSupport[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._productVirtualWorkspaceSupportMap = productWorkspaceSchemesMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productVirtualWorkspaceSupportMap.get(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tprivate getConfiguredVirtualWorkspaceSupport(manifest: IExtensionManifest): boolean | undefined {\n\t\tif (this._configuredVirtualWorkspaceSupportMap === null) {\n\t\t\tconst configuredWorkspaceSchemesMap = new Map<string, boolean>();\n\t\t\tconst configuredWorkspaceSchemes = this.configurationService.getValue<{ [key: string]: boolean }>('extensions.supportVirtualWorkspaces') || {};\n\t\t\tfor (const id of Object.keys(configuredWorkspaceSchemes)) {\n\t\t\t\tif (configuredWorkspaceSchemes[id] !== undefined) {\n\t\t\t\t\tconfiguredWorkspaceSchemesMap.set(ExtensionIdentifier.toKey(id), configuredWorkspaceSchemes[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._configuredVirtualWorkspaceSupportMap = configuredWorkspaceSchemesMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._configuredVirtualWorkspaceSupportMap.get(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tprivate getConfiguredExtensionWorkspaceTrustRequest(manifest: IExtensionManifest): ExtensionUntrustedWorkpaceSupportType | undefined {\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\tconst extensionWorkspaceTrustRequest = this._configuredExtensionWorkspaceTrustRequestMap.get(ExtensionIdentifier.toKey(extensionId));\n\n\t\tif (extensionWorkspaceTrustRequest && (extensionWorkspaceTrustRequest.version === undefined || extensionWorkspaceTrustRequest.version === manifest.version)) {\n\t\t\treturn extensionWorkspaceTrustRequest.supported;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getProductExtensionWorkspaceTrustRequest(manifest: IExtensionManifest): ExtensionUntrustedWorkspaceSupport | undefined {\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productExtensionWorkspaceTrustRequestMap.get(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tprivate toArray(extensionKind: ExtensionKind | ExtensionKind[]): ExtensionKind[] {\n\t\tif (Array.isArray(extensionKind)) {\n\t\t\treturn extensionKind;\n\t\t}\n\t\treturn extensionKind === 'ui' ? ['ui', 'workspace'] : [extensionKind];\n\t}\n}\n\nregisterSingleton(IExtensionManifestPropertiesService, ExtensionManifestPropertiesService);\n"]}