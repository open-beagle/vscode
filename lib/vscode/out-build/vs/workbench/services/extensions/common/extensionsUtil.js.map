{"version":3,"file":"extensionsUtil.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensions/common/extensionsUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest, ExtensionKind, ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class ExtensionKindController2 {\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\tprefersExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'ui');\n\t}\n\n\tprefersExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'workspace');\n\t}\n\n\tprefersExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'web');\n\t}\n\n\tcanExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'ui');\n\t}\n\n\tcanExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'workspace');\n\t}\n\n\tcanExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'web');\n\t}\n\n\tgetExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t\t// check in config\n\t\tlet result = getConfiguredExtensionKind(manifest, this.configurationService);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn toArray(result);\n\t\t}\n\n\t\t// check product.json\n\t\tresult = getProductExtensionKind(manifest, this.productService);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn result;\n\t\t}\n\n\t\t// check the manifest itself\n\t\tresult = manifest.extensionKind;\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn toArray(result);\n\t\t}\n\n\t\treturn deduceExtensionKind(manifest);\n\t}\n}\n\nexport function deduceExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t// Not an UI extension if it has main\n\tif (manifest.main) {\n\t\tif (manifest.browser) {\n\t\t\treturn ['workspace', 'web'];\n\t\t}\n\t\treturn ['workspace'];\n\t}\n\n\tif (manifest.browser) {\n\t\treturn ['web'];\n\t}\n\n\t// Not an UI nor web extension if it has dependencies or an extension pack\n\tif (isNonEmptyArray(manifest.extensionDependencies) || isNonEmptyArray(manifest.extensionPack)) {\n\t\treturn ['workspace'];\n\t}\n\n\tif (manifest.contributes) {\n\t\t// Not an UI nor web extension if it has no ui contributions\n\t\tfor (const contribution of Object.keys(manifest.contributes)) {\n\t\t\tif (!isUIExtensionPoint(contribution)) {\n\t\t\t\treturn ['workspace'];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ['ui', 'workspace', 'web'];\n}\n\nlet _uiExtensionPoints: Set<string> | null = null;\nfunction isUIExtensionPoint(extensionPoint: string): boolean {\n\tif (_uiExtensionPoints === null) {\n\t\tconst uiExtensionPoints = new Set<string>();\n\t\tExtensionsRegistry.getExtensionPoints().filter(e => e.defaultExtensionKind !== 'workspace').forEach(e => {\n\t\t\tuiExtensionPoints.add(e.name);\n\t\t});\n\t\t_uiExtensionPoints = uiExtensionPoints;\n\t}\n\treturn _uiExtensionPoints.has(extensionPoint);\n}\n\nlet _productExtensionKindsMap: Map<string, ExtensionKind[]> | null = null;\nfunction getProductExtensionKind(manifest: IExtensionManifest, productService: IProductService): ExtensionKind[] | undefined {\n\tif (_productExtensionKindsMap === null) {\n\t\tconst productExtensionKindsMap = new Map<string, ExtensionKind[]>();\n\t\tif (productService.extensionKind) {\n\t\t\tfor (const id of Object.keys(productService.extensionKind)) {\n\t\t\t\tproductExtensionKindsMap.set(ExtensionIdentifier.toKey(id), productService.extensionKind[id]);\n\t\t\t}\n\t\t}\n\t\t_productExtensionKindsMap = productExtensionKindsMap;\n\t}\n\n\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\treturn _productExtensionKindsMap.get(ExtensionIdentifier.toKey(extensionId));\n}\n\nlet _configuredExtensionKindsMap: Map<string, ExtensionKind | ExtensionKind[]> | null = null;\nfunction getConfiguredExtensionKind(manifest: IExtensionManifest, configurationService: IConfigurationService): ExtensionKind | ExtensionKind[] | undefined {\n\tif (_configuredExtensionKindsMap === null) {\n\t\tconst configuredExtensionKindsMap = new Map<string, ExtensionKind | ExtensionKind[]>();\n\t\tconst configuredExtensionKinds = configurationService.getValue<{ [key: string]: ExtensionKind | ExtensionKind[] }>('remote.extensionKind') || {};\n\t\tfor (const id of Object.keys(configuredExtensionKinds)) {\n\t\t\tconfiguredExtensionKindsMap.set(ExtensionIdentifier.toKey(id), configuredExtensionKinds[id]);\n\t\t}\n\t\t_configuredExtensionKindsMap = configuredExtensionKindsMap;\n\t}\n\n\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\treturn _configuredExtensionKindsMap.get(ExtensionIdentifier.toKey(extensionId));\n}\n\nfunction toArray(extensionKind: ExtensionKind | ExtensionKind[]): ExtensionKind[] {\n\tif (Array.isArray(extensionKind)) {\n\t\treturn extensionKind;\n\t}\n\treturn extensionKind === 'ui' ? ['ui', 'workspace'] : [extensionKind];\n}\n\n"]}