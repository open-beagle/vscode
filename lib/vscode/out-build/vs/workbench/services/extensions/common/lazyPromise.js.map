{"version":3,"file":"lazyPromise.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensions/common/lazyPromise.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAa,WAAW;QAYvB;YACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAClB,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACvB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC;QAEO,aAAa;YACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBAEpB,IAAI,IAAI,CAAC,SAAS,EAAE;wBACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC5B;oBAED,IAAI,IAAI,CAAC,OAAO,EAAE;wBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC3B;gBACF,CAAC,CAAC,CAAC;aACH;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEM,SAAS,CAAC,KAAU;YAC1B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBACnC,OAAO;aACP;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC;aACvB;QACF,CAAC;QAEM,UAAU,CAAC,GAAQ;YACzB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBACnC,OAAO;aACP;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAEhB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,UAAW,CAAC,GAAG,CAAC,CAAC;aACtB;iBAAM;gBACN,6EAA6E;gBAC7E,iDAAiD;gBACjD,CAAA,GAAA,0BAAiB,CAAA,CAAC,GAAG,CAAC,CAAC;aACvB;QACF,CAAC;QAEM,IAAI,CAAC,OAAY,EAAE,KAAU;YACnC,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC;QAEM,KAAK,CAAC,KAAU;YACtB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;QAEM,OAAO,CAAC,QAAoB;YAClC,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/C,CAAC;KACD;IArFD,kCAqFC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class LazyPromise implements Promise<any> {\n\n\tprivate _actual: Promise<any> | null;\n\tprivate _actualOk: ((value?: any) => any) | null;\n\tprivate _actualErr: ((err?: any) => any) | null;\n\n\tprivate _hasValue: boolean;\n\tprivate _value: any;\n\n\tprivate _hasErr: boolean;\n\tprivate _err: any;\n\n\tconstructor() {\n\t\tthis._actual = null;\n\t\tthis._actualOk = null;\n\t\tthis._actualErr = null;\n\t\tthis._hasValue = false;\n\t\tthis._value = null;\n\t\tthis._hasErr = false;\n\t\tthis._err = null;\n\t}\n\n\tget [Symbol.toStringTag](): string {\n\t\treturn this.toString();\n\t}\n\n\tprivate _ensureActual(): Promise<any> {\n\t\tif (!this._actual) {\n\t\t\tthis._actual = new Promise<any>((c, e) => {\n\t\t\t\tthis._actualOk = c;\n\t\t\t\tthis._actualErr = e;\n\n\t\t\t\tif (this._hasValue) {\n\t\t\t\t\tthis._actualOk(this._value);\n\t\t\t\t}\n\n\t\t\t\tif (this._hasErr) {\n\t\t\t\t\tthis._actualErr(this._err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._actual;\n\t}\n\n\tpublic resolveOk(value: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasValue = true;\n\t\tthis._value = value;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualOk!(value);\n\t\t}\n\t}\n\n\tpublic resolveErr(err: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasErr = true;\n\t\tthis._err = err;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualErr!(err);\n\t\t} else {\n\t\t\t// If nobody's listening at this point, it is safe to assume they never will,\n\t\t\t// since resolving this promise is always \"async\"\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic then(success: any, error: any): any {\n\t\treturn this._ensureActual().then(success, error);\n\t}\n\n\tpublic catch(error: any): any {\n\t\treturn this._ensureActual().then(undefined, error);\n\t}\n\n\tpublic finally(callback: () => void): any {\n\t\treturn this._ensureActual().finally(callback);\n\t}\n}\n"]}