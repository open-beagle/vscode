{"version":3,"sources":["vs/workbench/services/extensions/common/extensionHostManager.ts"],"names":[],"mappings":"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","file":"extensionHostManager.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostCustomersRegistry } from 'vs/workbench/api/common/extHostCustomers';\nimport { ExtHostContext, ExtHostExtensionServiceShape, IExtHostContext, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { ProxyIdentifier } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { IRPCProtocolLogger, RPCProtocol, RequestInitiator, ResponsiveState } from 'vs/workbench/services/extensions/common/rpcProtocol';\nimport { RemoteAuthorityResolverError, ResolverResult } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport * as nls from 'vs/nls';\nimport { registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IExtensionHost, ExtensionHostKind, ActivationKind } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionActivationReason } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { CATEGORIES } from 'vs/workbench/common/actions';\nimport { timeout } from 'vs/base/common/async';\n\n// Enable to see detailed message communication between window and extension host\nconst LOG_EXTENSION_HOST_COMMUNICATION = false;\nconst LOG_USE_COLORS = true;\n\nexport class ExtensionHostManager extends Disposable {\n\n\tpublic readonly kind: ExtensionHostKind;\n\tpublic readonly onDidExit: Event<[number, string | null]>;\n\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\t/**\n\t * A map of already requested activation events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _cachedActivationEvents: Map<string, Promise<void>>;\n\tprivate _rpcProtocol: RPCProtocol | null;\n\tprivate readonly _customers: IDisposable[];\n\tprivate readonly _extensionHost: IExtensionHost;\n\t/**\n\t * winjs believes a proxy is a promise because it has a `then` method, so wrap the result in an object.\n\t */\n\tprivate _proxy: Promise<{ value: ExtHostExtensionServiceShape; } | null> | null;\n\tprivate _resolveAuthorityAttempt: number;\n\tprivate _hasStarted = false;\n\n\tconstructor(\n\t\textensionHost: IExtensionHost,\n\t\tinitialActivationEvents: string[],\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tthis._cachedActivationEvents = new Map<string, Promise<void>>();\n\t\tthis._rpcProtocol = null;\n\t\tthis._customers = [];\n\n\t\tthis._extensionHost = extensionHost;\n\t\tthis.kind = this._extensionHost.kind;\n\t\tthis.onDidExit = this._extensionHost.onExit;\n\t\tthis._proxy = this._extensionHost.start()!.then(\n\t\t\t(protocol) => {\n\t\t\t\tthis._hasStarted = true;\n\t\t\t\treturn { value: this._createExtensionHostCustomers(protocol) };\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tconsole.error(`Error received from starting extension host (kind: ${this.kind})`);\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t);\n\t\tthis._proxy.then(() => {\n\t\t\tinitialActivationEvents.forEach((activationEvent) => this.activateByEvent(activationEvent, ActivationKind.Normal));\n\t\t\tthis._register(registerLatencyTestProvider({\n\t\t\t\tmeasure: () => this.measure()\n\t\t\t}));\n\t\t});\n\t\tthis._resolveAuthorityAttempt = 0;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._extensionHost) {\n\t\t\tthis._extensionHost.dispose();\n\t\t}\n\t\tif (this._rpcProtocol) {\n\t\t\tthis._rpcProtocol.dispose();\n\t\t}\n\t\tfor (let i = 0, len = this._customers.length; i < len; i++) {\n\t\t\tconst customer = this._customers[i];\n\t\t\ttry {\n\t\t\t\tcustomer.dispose();\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t\tthis._proxy = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate async measure(): Promise<ExtHostLatencyResult | null> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn null;\n\t\t}\n\t\tconst latency = await this._measureLatency(proxy);\n\t\tconst down = await this._measureDown(proxy);\n\t\tconst up = await this._measureUp(proxy);\n\t\treturn {\n\t\t\tremoteAuthority: this._extensionHost.remoteAuthority,\n\t\t\tlatency,\n\t\t\tdown,\n\t\t\tup\n\t\t};\n\t}\n\n\tprivate async _getProxy(): Promise<ExtHostExtensionServiceShape | null> {\n\t\tif (!this._proxy) {\n\t\t\treturn null;\n\t\t}\n\t\tconst p = await this._proxy;\n\t\tif (!p) {\n\t\t\treturn null;\n\t\t}\n\t\treturn p.value;\n\t}\n\n\tprivate async _measureLatency(proxy: ExtHostExtensionServiceShape): Promise<number> {\n\t\tconst COUNT = 10;\n\n\t\tlet sum = 0;\n\t\tfor (let i = 0; i < COUNT; i++) {\n\t\t\tconst sw = StopWatch.create(true);\n\t\t\tawait proxy.$test_latency(i);\n\t\t\tsw.stop();\n\t\t\tsum += sw.elapsed();\n\t\t}\n\t\treturn (sum / COUNT);\n\t}\n\n\tprivate static _convert(byteCount: number, elapsedMillis: number): number {\n\t\treturn (byteCount * 1000 * 8) / elapsedMillis;\n\t}\n\n\tprivate async _measureUp(proxy: ExtHostExtensionServiceShape): Promise<number> {\n\t\tconst SIZE = 10 * 1024 * 1024; // 10MB\n\n\t\tlet buff = VSBuffer.alloc(SIZE);\n\t\tlet value = Math.ceil(Math.random() * 256);\n\t\tfor (let i = 0; i < buff.byteLength; i++) {\n\t\t\tbuff.writeUInt8(i, value);\n\t\t}\n\t\tconst sw = StopWatch.create(true);\n\t\tawait proxy.$test_up(buff);\n\t\tsw.stop();\n\t\treturn ExtensionHostManager._convert(SIZE, sw.elapsed());\n\t}\n\n\tprivate async _measureDown(proxy: ExtHostExtensionServiceShape): Promise<number> {\n\t\tconst SIZE = 10 * 1024 * 1024; // 10MB\n\n\t\tconst sw = StopWatch.create(true);\n\t\tawait proxy.$test_down(SIZE);\n\t\tsw.stop();\n\t\treturn ExtensionHostManager._convert(SIZE, sw.elapsed());\n\t}\n\n\tprivate _createExtensionHostCustomers(protocol: IMessagePassingProtocol): ExtHostExtensionServiceShape {\n\n\t\tlet logger: IRPCProtocolLogger | null = null;\n\t\tif (LOG_EXTENSION_HOST_COMMUNICATION || this._environmentService.logExtensionHostCommunication) {\n\t\t\tlogger = new RPCLogger();\n\t\t}\n\n\t\tthis._rpcProtocol = new RPCProtocol(protocol, logger);\n\t\tthis._register(this._rpcProtocol.onDidChangeResponsiveState((responsiveState: ResponsiveState) => this._onDidChangeResponsiveState.fire(responsiveState)));\n\t\tconst extHostContext: IExtHostContext = {\n\t\t\tremoteAuthority: this._extensionHost.remoteAuthority,\n\t\t\textensionHostKind: this.kind,\n\t\t\tgetProxy: <T>(identifier: ProxyIdentifier<T>): T => this._rpcProtocol!.getProxy(identifier),\n\t\t\tset: <T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R => this._rpcProtocol!.set(identifier, instance),\n\t\t\tassertRegistered: (identifiers: ProxyIdentifier<any>[]): void => this._rpcProtocol!.assertRegistered(identifiers),\n\t\t\tdrain: (): Promise<void> => this._rpcProtocol!.drain(),\n\t\t};\n\n\t\t// Named customers\n\t\tconst namedCustomers = ExtHostCustomersRegistry.getNamedCustomers();\n\t\tfor (let i = 0, len = namedCustomers.length; i < len; i++) {\n\t\t\tconst [id, ctor] = namedCustomers[i];\n\t\t\tconst instance = this._instantiationService.createInstance(ctor, extHostContext);\n\t\t\tthis._customers.push(instance);\n\t\t\tthis._rpcProtocol.set(id, instance);\n\t\t}\n\n\t\t// Customers\n\t\tconst customers = ExtHostCustomersRegistry.getCustomers();\n\t\tfor (const ctor of customers) {\n\t\t\tconst instance = this._instantiationService.createInstance(ctor, extHostContext);\n\t\t\tthis._customers.push(instance);\n\t\t}\n\n\t\t// Check that no named customers are missing\n\t\tconst expected: ProxyIdentifier<any>[] = Object.keys(MainContext).map((key) => (<any>MainContext)[key]);\n\t\tthis._rpcProtocol.assertRegistered(expected);\n\n\t\treturn this._rpcProtocol.getProxy(ExtHostContext.ExtHostExtensionService);\n\t}\n\n\tpublic async activate(extension: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn false;\n\t\t}\n\t\treturn proxy.$activate(extension, reason);\n\t}\n\n\tpublic activateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void> {\n\t\tif (activationKind === ActivationKind.Immediate && !this._hasStarted) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (!this._cachedActivationEvents.has(activationEvent)) {\n\t\t\tthis._cachedActivationEvents.set(activationEvent, this._activateByEvent(activationEvent, activationKind));\n\t\t}\n\t\treturn this._cachedActivationEvents.get(activationEvent)!;\n\t}\n\n\tprivate async _activateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void> {\n\t\tif (!this._proxy) {\n\t\t\treturn;\n\t\t}\n\t\tconst proxy = await this._proxy;\n\t\tif (!proxy) {\n\t\t\t// this case is already covered above and logged.\n\t\t\t// i.e. the extension host could not be started\n\t\t\treturn;\n\t\t}\n\t\treturn proxy.value.$activateByEvent(activationEvent, activationKind);\n\t}\n\n\tpublic async getInspectPort(tryEnableInspector: boolean): Promise<number> {\n\t\tif (this._extensionHost) {\n\t\t\tif (tryEnableInspector) {\n\t\t\t\tawait this._extensionHost.enableInspectPort();\n\t\t\t}\n\t\t\tlet port = this._extensionHost.getInspectPort();\n\t\t\tif (port) {\n\t\t\t\treturn port;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic async resolveAuthority(remoteAuthority: string): Promise<ResolverResult> {\n\t\tconst authorityPlusIndex = remoteAuthority.indexOf('+');\n\t\tif (authorityPlusIndex === -1) {\n\t\t\t// This authority does not need to be resolved, simply parse the port number\n\t\t\tconst lastColon = remoteAuthority.lastIndexOf(':');\n\t\t\treturn Promise.resolve({\n\t\t\t\tauthority: {\n\t\t\t\t\tauthority: remoteAuthority,\n\t\t\t\t\thost: remoteAuthority.substring(0, lastColon),\n\t\t\t\t\tport: parseInt(remoteAuthority.substring(lastColon + 1), 10),\n\t\t\t\t\tconnectionToken: undefined\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\tthrow new Error(`Cannot resolve authority`);\n\t\t}\n\t\tthis._resolveAuthorityAttempt++;\n\t\tconst result = await proxy.$resolveAuthority(remoteAuthority, this._resolveAuthorityAttempt);\n\t\tif (result.type === 'ok') {\n\t\t\treturn result.value;\n\t\t} else {\n\t\t\tthrow new RemoteAuthorityResolverError(result.error.message, result.error.code, result.error.detail);\n\t\t}\n\t}\n\n\tpublic async start(enabledExtensionIds: ExtensionIdentifier[]): Promise<void> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\t\treturn proxy.$startExtensionHost(enabledExtensionIds);\n\t}\n\n\tpublic async extensionTestsExecute(): Promise<number> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\tthrow new Error('Could not obtain Extension Host Proxy');\n\t\t}\n\t\treturn proxy.$extensionTestsExecute();\n\t}\n\n\tpublic async extensionTestsSendExit(exitCode: number): Promise<void> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\t\t// This method does not wait for the actual RPC to be confirmed\n\t\t// It waits for the socket to drain (i.e. the message has been sent)\n\t\t// It also times out after 5s in case drain takes too long\n\t\tproxy.$extensionTestsExit(exitCode);\n\t\tif (this._rpcProtocol) {\n\t\t\tawait Promise.race([this._rpcProtocol.drain(), timeout(5000)]);\n\t\t}\n\t}\n\n\tpublic async deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\t\treturn proxy.$deltaExtensions(toAdd, toRemove);\n\t}\n\n\tpublic async setRemoteEnvironment(env: { [key: string]: string | null }): Promise<void> {\n\t\tconst proxy = await this._getProxy();\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn proxy.$setRemoteEnvironment(env);\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nclass RPCLogger implements IRPCProtocolLogger {\n\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tprivate _log(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\t\tdata = pretty(data);\n\n\t\tconst colorTable = colorTables[initiator];\n\t\tconst color = LOG_USE_COLORS ? colorTable[req % colorTable.length] : '#000000';\n\t\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7)}]%c[len: ${String(msgLength).padStart(5)}]%c${String(req).padStart(5)} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\t\tif (/\\($/.test(str)) {\n\t\t\targs = args.concat(data);\n\t\t\targs.push(')');\n\t\t} else {\n\t\t\targs.push(data);\n\t\t}\n\t\tconsole.log.apply(console, args as [string, ...string[]]);\n\t}\n\n\tlogIncoming(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tthis._log('Ext \\u2192 Win', this._totalIncoming, msgLength, req, initiator, str, data);\n\t}\n\n\tlogOutgoing(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tthis._log('Win \\u2192 Ext', this._totalOutgoing, msgLength, req, initiator, str, data);\n\t}\n}\n\ninterface ExtHostLatencyResult {\n\tremoteAuthority: string | null;\n\tup: number;\n\tdown: number;\n\tlatency: number;\n}\n\ninterface ExtHostLatencyProvider {\n\tmeasure(): Promise<ExtHostLatencyResult | null>;\n}\n\nlet providers: ExtHostLatencyProvider[] = [];\nfunction registerLatencyTestProvider(provider: ExtHostLatencyProvider): IDisposable {\n\tproviders.push(provider);\n\treturn {\n\t\tdispose: () => {\n\t\t\tfor (let i = 0; i < providers.length; i++) {\n\t\t\t\tif (providers[i] === provider) {\n\t\t\t\t\tproviders.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction getLatencyTestProviders(): ExtHostLatencyProvider[] {\n\treturn providers.slice(0);\n}\n\nregisterAction2(class MeasureExtHostLatencyAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.measureExtHostLatency',\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('measureExtHostLatency', \"Measure Extension Host Latency\"),\n\t\t\t\toriginal: 'Measure Extension Host Latency'\n\t\t\t},\n\t\t\tcategory: CATEGORIES.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst measurements = await Promise.all(getLatencyTestProviders().map(provider => provider.measure()));\n\t\teditorService.openEditor({ contents: measurements.map(MeasureExtHostLatencyAction._print).join('\\n\\n'), options: { pinned: true } });\n\t}\n\n\tprivate static _print(m: ExtHostLatencyResult | null): string {\n\t\tif (!m) {\n\t\t\treturn '';\n\t\t}\n\t\treturn `${m.remoteAuthority ? `Authority: ${m.remoteAuthority}\\n` : ``}Roundtrip latency: ${m.latency.toFixed(3)}ms\\nUp: ${MeasureExtHostLatencyAction._printSpeed(m.up)}\\nDown: ${MeasureExtHostLatencyAction._printSpeed(m.down)}\\n`;\n\t}\n\n\tprivate static _printSpeed(n: number): string {\n\t\tif (n <= 1024) {\n\t\t\treturn `${n} bps`;\n\t\t}\n\t\tif (n < 1024 * 1024) {\n\t\t\treturn `${(n / 1024).toFixed(1)} kbps`;\n\t\t}\n\t\treturn `${(n / 1024 / 1024).toFixed(1)} Mbps`;\n\t}\n});\n"]}