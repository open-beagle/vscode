{"version":3,"sources":["vs/workbench/services/extensions/browser/webWorkerExtensionHost.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAwChG,MAAM,QAAQ,GAAG,MAAA,MAAM,CAAC,YAAY,0CAAE,YAAY,CAAC,wBAAwB,EAAE,EAAE,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAElH,MAAM,oBAAoB,GAAG,MAAA,MAAM,CAAC,YAAY,0CAAE,YAAY,CAAC,8BAA8B,EAAE;QAC9F,eAAe,CAAC,KAAK;YACpB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC9B,OAAO,KAAK,CAAC;aACb;YACD,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC,CAAC;QAC5C,CAAC;KACD,CAAC,CAAC;IAEH,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,sBAAU;QAerD,YACkB,iBAAsD,EACnC,iBAAoC,EAC7B,eAAyC,EACpD,aAA4B,EAC9B,WAAwB,EACP,mBAAiD,EAC9D,eAAgC,EACjC,cAA8B;YAE/D,KAAK,EAAE,CAAC;YATS,sBAAiB,GAAjB,iBAAiB,CAAqC;YACnC,sBAAiB,GAAjB,iBAAiB,CAAmB;YAC7B,oBAAe,GAAf,eAAe,CAA0B;YACpD,kBAAa,GAAb,aAAa,CAAe;YAC9B,gBAAW,GAAX,WAAW,CAAa;YACP,wBAAmB,GAAnB,mBAAmB,CAA8B;YAC9D,oBAAe,GAAf,eAAe,CAAiB;YACjC,mBAAc,GAAd,cAAc,CAAgB;YArBhD,SAAI,0BAAoC;YACxC,oBAAe,GAAG,IAAI,CAAC;YAEtB,eAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAA2B,CAAC,CAAC;YACrE,WAAM,GAAmC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YAoB9E,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,0BAA0B,GAAG,CAAA,GAAA,oBAAQ,CAAA,CAAC,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;YAClG,IAAI,CAAC,qBAAqB,GAAG,CAAA,GAAA,oBAAQ,CAAA,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,qCAAwB,MAAM,CAAC,CAAC;QAC3G,CAAC;QAEO,gCAAgC;YACvC,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,+BAA+B,EAAE;gBACzG,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,+BAA+B,CAAC;aACxE;YACD,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;gBACxC,MAAM,UAAU,GAAG,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;gBACpD,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;gBAClD,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;oBACjC,OAAO,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;iBAC9C;gBACD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;oBAChC,OAAO,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;iBAC7C;gBACD,OAAO,CACN,UAAU;oBACT,CAAC,CAAC,GAAG,OAAO,qFAAqF;oBACjG,CAAC,CAAC,GAAG,OAAO,oFAAoF,CACjG,CAAC;aACF;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAEM,KAAK,CAAC,KAAK;YACjB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,QAAQ,CAAC,KAAK,EAAE;oBACnB,MAAM,+BAA+B,GAAG,IAAI,CAAC,gCAAgC,EAAE,CAAC;oBAChF,IAAI,+BAA+B,EAAE;wBACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,CAAC,CAAC;qBACjF;yBAAM;wBACN,OAAO,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;wBACpF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBACnD;iBACD;qBAAM;oBACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBACnD;gBACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC;aAClE;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC9B,CAAC;QAEO,KAAK,CAAC,kBAAkB,CAAC,+BAAuC;YACvE,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAY,CAAC,CAAC;YAExD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;YAC3D,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;YAClE,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAE9B,MAAM,wBAAwB,GAAG,CAAA,GAAA,mBAAY,CAAA,EAAE,CAAC;YAChD,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,+BAA+B,6BAA6B,wBAAwB,EAAE,CAAC,CAAC;YAEtH,MAAM,OAAO,GAAG,IAAI,eAAO,EAAE,CAAC;YAC9B,IAAI,IAAkB,CAAC;YACvB,IAAI,YAAY,GAAiB,IAAI,CAAC;YACtC,IAAI,eAAe,GAAG,KAAK,CAAC;YAC5B,IAAI,YAAY,GAAQ,IAAI,CAAC;YAE7B,MAAM,aAAa,GAAG,CAAC,QAAgB,EAAE,KAAY,EAAE,EAAE;gBACxD,YAAY,GAAG,KAAK,CAAC;gBACrB,eAAe,GAAG,IAAI,CAAC;gBACvB,CAAA,GAAA,0BAAiB,CAAA,CAAC,YAAY,CAAC,CAAC;gBAChC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,2BAAwC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpF,OAAO,CAAC,IAAI,EAAE,CAAC;YAChB,CAAC,CAAC;YAEF,MAAM,cAAc,GAAG,CAAC,WAAwB,EAAE,EAAE;gBACnD,IAAI,GAAG,WAAW,CAAC;gBACnB,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC3B,OAAO,CAAC,IAAI,EAAE,CAAC;YAChB,CAAC,CAAC;YAEF,YAAY,GAAG,UAAU,CAAC,GAAG,EAAE;gBAC9B,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;YAC9F,CAAC,EAAE,KAAK,CAAC,CAAC;YAEV,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;gBACrE,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,aAAa,EAAE;oBAC1C,OAAO;iBACP;gBACD,IAAI,KAAK,CAAC,IAAI,CAAC,wBAAwB,KAAK,wBAAwB,EAAE;oBACrE,OAAO;iBACP;gBACD,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBACrB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;oBAClD,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;oBACxB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;oBACtB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;oBAClB,OAAO,aAAa,2BAAwC,GAAG,CAAC,CAAC;iBACjE;gBACD,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC5B,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,EAAE;oBACvD,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;oBAC1C,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;oBAC5C,OAAO,aAAa,2BAAwC,GAAG,CAAC,CAAC;iBACjE;gBACD,cAAc,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEpD,uDAAuD;YACvD,iCAAiC;YACjC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YAErB,IAAI,eAAe,EAAE;gBACpB,MAAM,YAAY,CAAC;aACnB;YAED,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;gBAC1B,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,EAAE;oBACnC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC;oBACpD,OAAO;iBACP;gBACD,OAAO,CAAC,IAAI,CAAC,iBAAQ,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC;YAEF,MAAM,QAAQ,GAA4B;gBACzC,SAAS,EAAE,OAAO,CAAC,KAAK;gBACxB,IAAI,EAAE,KAAK,CAAC,EAAE;oBACb,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACnH,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChC,CAAC;aACD,CAAC;YAEF,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QAEO,KAAK,CAAC,mBAAmB;;YAChC,MAAM,OAAO,GAAG,IAAI,eAAO,EAAY,CAAC;YAExC,MAAM,GAAG,GAAG,CAAA,GAAA,4CAAqB,CAAA,CAAC,oBAAU,CAAC,YAAY,CAAC,sCAAsC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,qBAAqB,CAAC,CAAC;YAClJ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,eAAe,CAAC,GAAG,CAAsB,mCAAI,GAAG,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC;YAEvH,MAAM,OAAO,GAAG,IAAI,eAAO,EAAE,CAAC;YAC9B,IAAI,IAAkB,CAAC;YAEvB,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;YAE/C,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;;gBAE5B,MAAM,IAAI,GAA4D,KAAK,CAAC,IAAI,CAAC;gBAEjF,IAAI,IAAI,YAAY,WAAW,EAAE;oBAChC,wDAAwD;oBACxD,qCAAqC;oBACrC,IAAI,OAAO,CAAC,MAAM,EAAE,EAAE;wBACrB,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;wBAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,2BAAwC,mDAAmD,CAAC,CAAC,CAAC;wBACnH,OAAO;qBACP;oBACD,IAAI,GAAG,IAAI,CAAC;oBACZ,OAAO,CAAC,IAAI,EAAE,CAAC;iBAGf;qBAAM,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,YAAY,EAAE;oBACvC,0DAA0D;oBAC1D,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,MAAA,oBAAoB,aAApB,oBAAoB,uBAApB,oBAAoB,CAAE,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAI,IAAI,CAAC,GAAG,CAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjH,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC3C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7C,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;iBAElC;qBAAM,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,kBAAkB,EAAE;oBAC7C,uDAAuD;oBACvD,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;wBAC9B,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC,SAAS,EAAE,CAAC;wBACvC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC7B;iBAED;qBAAM;oBACN,kCAAkC;oBAClC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;oBAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,2BAAwC,oBAAoB,CAAC,CAAC,CAAC;iBACpF;YACF,CAAC,CAAC;YAEF,uDAAuD;YACvD,iCAAiC;YACjC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YAErB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;gBAC1B,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,EAAE;oBACnC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC;oBACpD,OAAO;iBACP;gBAED,OAAO,CAAC,IAAI,CAAC,iBAAQ,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC;YAEF,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;gBAC1B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,2BAAwC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7F,CAAC,CAAC;YAEF,mBAAmB;YACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAEvD,MAAM,QAAQ,GAA4B;gBACzC,SAAS,EAAE,OAAO,CAAC,KAAK;gBACxB,IAAI,EAAE,KAAK,CAAC,EAAE;oBACb,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACnH,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChC,CAAC;aACD,CAAC;YAEF,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QAEO,KAAK,CAAC,iBAAiB,CAAC,QAAiC;YAChE,yCAAyC;YACzC,0BAA0B;YAC1B,0BAA0B;YAC1B,gCAAgC;YAEhC,MAAM,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAA,GAAA,uCAAe,CAAA,CAAC,GAAG,gBAAoB,CAAC,CAAC,CAAC;YACxG,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,MAAM,CAAA,GAAA,iBAAQ,CAAA,EAAE,CAAC;aACjB;YACD,QAAQ,CAAC,IAAI,CAAC,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC;YACxF,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,MAAM,CAAA,GAAA,iBAAQ,CAAA,EAAE,CAAC;aACjB;YACD,MAAM,aAAK,CAAC,SAAS,CAAC,aAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAA,GAAA,uCAAe,CAAA,CAAC,GAAG,sBAA0B,CAAC,CAAC,CAAC;YAC9G,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,MAAM,CAAA,GAAA,iBAAQ,CAAA,EAAE,CAAC;aACjB;YAED,kDAAkD;YAClD,mBAAQ,CAAC,EAAE,CAAyB,mBAAU,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAuB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAE7M,OAAO,QAAQ,CAAC;QACjB,CAAC;QAEe,OAAO;YACtB,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,OAAO;aACP;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,GAAA,2CAAmB,CAAA,mBAAuB,CAAC,CAAC;aAChE;YACD,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAED,cAAc;YACb,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,iBAAiB;YAChB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAEO,KAAK,CAAC,sBAAsB;YACnC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACvI,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;YACtD,OAAO;gBACN,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM;gBACnC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO;gBACrC,SAAS,EAAE,CAAC,CAAC;gBACb,WAAW,EAAE;oBACZ,2BAA2B,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa;oBACnE,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ;oBACtC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW;oBAC9C,WAAW,EAAE,QAAQ,CAAC,QAAQ;oBAC9B,+BAA+B,EAAE,IAAI,CAAC,mBAAmB,CAAC,+BAA+B;oBACzF,yBAAyB,EAAE,IAAI,CAAC,mBAAmB,CAAC,yBAAyB;oBAC7E,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,iBAAiB;oBAC7D,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,oBAAoB;oBACnE,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,mBAAmB;oBACjE,gBAAgB,EAAE,IAAI,CAAC,mBAAmB,CAAC,gBAAgB;iBAC3D;gBACD,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,kBAAyB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC1F,aAAa,EAAE,SAAS,CAAC,aAAa,IAAI,SAAS;oBACnD,EAAE,EAAE,SAAS,CAAC,EAAE;oBAChB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC;iBACrD;gBACD,kBAAkB,EAAE,EAAE;gBACtB,cAAc,EAAE,EAAE;gBAClB,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,aAAa;gBACb,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;gBACrC,YAAY,EAAE,IAAI,CAAC,0BAA0B;gBAC7C,OAAO,EAAE,IAAI,CAAC,qBAAqB;gBACnC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,MAAM,EAAE;oBACP,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,eAAe;oBACnD,cAAc,EAAE,IAAI;oBACpB,QAAQ,EAAE,KAAK;iBACf;gBACD,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAM,CAAC,GAAG,CAAC,CAAC,CAAC,yBAAM,CAAC,OAAO;aACpD,CAAC;QACH,CAAC;KACD,CAAA;IA5UY,sBAAsB;QAiBhC,WAAA,6BAAiB,CAAA;QACjB,WAAA,oCAAwB,CAAA;QACxB,WAAA,qBAAa,CAAA;QACb,WAAA,iBAAW,CAAA;QACX,WAAA,iDAA4B,CAAA;QAC5B,WAAA,gCAAe,CAAA;QACf,WAAA,8BAAc,CAAA;OAvBJ,sBAAsB,CA4UlC;IA5UY,wDAAsB","file":"webWorkerExtensionHost.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWorkerBootstrapUrl } from 'vs/base/worker/defaultWorkerFactory';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { createMessageOfType, MessageType, isMessageOfType, ExtensionHostExitCode } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { IInitData, UIKind } from 'vs/workbench/api/common/extHost.protocol';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport * as platform from 'vs/base/common/platform';\nimport * as dom from 'vs/base/browser/dom';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtensionHost, ExtensionHostLogFileName, ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { joinPath } from 'vs/base/common/resources';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IOutputChannelRegistry, Extensions } from 'vs/workbench/services/output/common/output';\nimport { localize } from 'vs/nls';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { canceled, onUnexpectedError } from 'vs/base/common/errors';\nimport { Barrier } from 'vs/base/common/async';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { NewWorkerMessage, TerminateWorkerMessage } from 'vs/workbench/services/extensions/common/polyfillNestedWorker.protocol';\n\nexport interface IWebWorkerExtensionHostInitData {\n\treadonly autoStart: boolean;\n\treadonly extensions: IExtensionDescription[];\n}\n\nexport interface IWebWorkerExtensionHostDataProvider {\n\tgetInitData(): Promise<IWebWorkerExtensionHostInitData>;\n}\n\nconst ttPolicy = window.trustedTypes?.createPolicy('webWorkerExtensionHost', { createScriptURL: value => value });\n\nconst ttPolicyNestedWorker = window.trustedTypes?.createPolicy('webNestedWorkerExtensionHost', {\n\tcreateScriptURL(value) {\n\t\tif (value.startsWith('blob:')) {\n\t\t\treturn value;\n\t\t}\n\t\tthrow new Error(value + ' is NOT allowed');\n\t}\n});\n\nexport class WebWorkerExtensionHost extends Disposable implements IExtensionHost {\n\n\tpublic readonly kind = ExtensionHostKind.LocalWebWorker;\n\tpublic readonly remoteAuthority = null;\n\n\tprivate readonly _onDidExit = this._register(new Emitter<[number, string | null]>());\n\tpublic readonly onExit: Event<[number, string | null]> = this._onDidExit.event;\n\n\tprivate _isTerminating: boolean;\n\tprivate _protocolPromise: Promise<IMessagePassingProtocol> | null;\n\tprivate _protocol: IMessagePassingProtocol | null;\n\n\tprivate readonly _extensionHostLogsLocation: URI;\n\tprivate readonly _extensionHostLogFile: URI;\n\n\tconstructor(\n\t\tprivate readonly _initDataProvider: IWebWorkerExtensionHostDataProvider,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t) {\n\t\tsuper();\n\t\tthis._isTerminating = false;\n\t\tthis._protocolPromise = null;\n\t\tthis._protocol = null;\n\t\tthis._extensionHostLogsLocation = joinPath(this._environmentService.extHostLogsPath, 'webWorker');\n\t\tthis._extensionHostLogFile = joinPath(this._extensionHostLogsLocation, `${ExtensionHostLogFileName}.log`);\n\t}\n\n\tprivate _webWorkerExtensionHostIframeSrc(): string | null {\n\t\tif (this._environmentService.options && this._environmentService.options.webWorkerExtensionHostIframeSrc) {\n\t\t\treturn this._environmentService.options.webWorkerExtensionHostIframeSrc;\n\t\t}\n\t\tif (this._productService.webEndpointUrl) {\n\t\t\tconst forceHTTPS = (location.protocol === 'https:');\n\t\t\tlet baseUrl = this._productService.webEndpointUrl;\n\t\t\tif (this._productService.quality) {\n\t\t\t\tbaseUrl += `/${this._productService.quality}`;\n\t\t\t}\n\t\t\tif (this._productService.commit) {\n\t\t\t\tbaseUrl += `/${this._productService.commit}`;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tforceHTTPS\n\t\t\t\t\t? `${baseUrl}/out/vs/workbench/services/extensions/worker/httpsWebWorkerExtensionHostIframe.html`\n\t\t\t\t\t: `${baseUrl}/out/vs/workbench/services/extensions/worker/httpWebWorkerExtensionHostIframe.html`\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic async start(): Promise<IMessagePassingProtocol> {\n\t\tif (!this._protocolPromise) {\n\t\t\tif (platform.isWeb) {\n\t\t\t\tconst webWorkerExtensionHostIframeSrc = this._webWorkerExtensionHostIframeSrc();\n\t\t\t\tif (webWorkerExtensionHostIframeSrc) {\n\t\t\t\t\tthis._protocolPromise = this._startInsideIframe(webWorkerExtensionHostIframeSrc);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`The web worker extension host is started without an iframe sandbox!`);\n\t\t\t\t\tthis._protocolPromise = this._startOutsideIframe();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._protocolPromise = this._startOutsideIframe();\n\t\t\t}\n\t\t\tthis._protocolPromise.then(protocol => this._protocol = protocol);\n\t\t}\n\t\treturn this._protocolPromise;\n\t}\n\n\tprivate async _startInsideIframe(webWorkerExtensionHostIframeSrc: string): Promise<IMessagePassingProtocol> {\n\t\tconst emitter = this._register(new Emitter<VSBuffer>());\n\n\t\tconst iframe = document.createElement('iframe');\n\t\tiframe.setAttribute('class', 'web-worker-ext-host-iframe');\n\t\tiframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n\t\tiframe.style.display = 'none';\n\n\t\tconst vscodeWebWorkerExtHostId = generateUuid();\n\t\tiframe.setAttribute('src', `${webWorkerExtensionHostIframeSrc}?vscodeWebWorkerExtHostId=${vscodeWebWorkerExtHostId}`);\n\n\t\tconst barrier = new Barrier();\n\t\tlet port!: MessagePort;\n\t\tlet barrierError: Error | null = null;\n\t\tlet barrierHasError = false;\n\t\tlet startTimeout: any = null;\n\n\t\tconst rejectBarrier = (exitCode: number, error: Error) => {\n\t\t\tbarrierError = error;\n\t\t\tbarrierHasError = true;\n\t\t\tonUnexpectedError(barrierError);\n\t\t\tclearTimeout(startTimeout);\n\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, barrierError.message]);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tconst resolveBarrier = (messagePort: MessagePort) => {\n\t\t\tport = messagePort;\n\t\t\tclearTimeout(startTimeout);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tstartTimeout = setTimeout(() => {\n\t\t\tconsole.warn(`The Web Worker Extension Host did not start in 60s, that might be a problem.`);\n\t\t}, 60000);\n\n\t\tthis._register(dom.addDisposableListener(window, 'message', (event) => {\n\t\t\tif (event.source !== iframe.contentWindow) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.vscodeWebWorkerExtHostId !== vscodeWebWorkerExtHostId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.error) {\n\t\t\t\tconst { name, message, stack } = event.data.error;\n\t\t\t\tconst err = new Error();\n\t\t\t\terr.message = message;\n\t\t\t\terr.name = name;\n\t\t\t\terr.stack = stack;\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tconst { data } = event.data;\n\t\t\tif (barrier.isOpen() || !(data instanceof MessagePort)) {\n\t\t\t\tconsole.warn('UNEXPECTED message', event);\n\t\t\t\tconst err = new Error('UNEXPECTED message');\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tresolveBarrier(data);\n\t\t}));\n\n\t\tthis._layoutService.container.appendChild(iframe);\n\t\tthis._register(toDisposable(() => iframe.remove()));\n\n\t\t// await MessagePort and use it to directly communicate\n\t\t// with the worker extension host\n\t\tawait barrier.wait();\n\n\t\tif (barrierHasError) {\n\t\t\tthrow barrierError;\n\t\t}\n\n\t\tport.onmessage = (event) => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn('UNKNOWN data received', data);\n\t\t\t\tthis._onDidExit.fire([77, 'UNKNOWN data received']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.fire(VSBuffer.wrap(new Uint8Array(data, 0, data.byteLength)));\n\t\t};\n\n\t\tconst protocol: IMessagePassingProtocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: vsbuf => {\n\t\t\t\tconst data = vsbuf.buffer.buffer.slice(vsbuf.buffer.byteOffset, vsbuf.buffer.byteOffset + vsbuf.buffer.byteLength);\n\t\t\t\tport.postMessage(data, [data]);\n\t\t\t}\n\t\t};\n\n\t\treturn this._performHandshake(protocol);\n\t}\n\n\tprivate async _startOutsideIframe(): Promise<IMessagePassingProtocol> {\n\t\tconst emitter = new Emitter<VSBuffer>();\n\n\t\tconst url = getWorkerBootstrapUrl(FileAccess.asBrowserUri('../worker/extensionHostWorkerMain.js', require).toString(true), 'WorkerExtensionHost');\n\t\tconst worker = new Worker(ttPolicy?.createScriptURL(url) as unknown as string ?? url, { name: 'WorkerExtensionHost' });\n\n\t\tconst barrier = new Barrier();\n\t\tlet port!: MessagePort;\n\n\t\tconst nestedWorker = new Map<string, Worker>();\n\n\t\tworker.onmessage = (event) => {\n\n\t\t\tconst data: MessagePort | NewWorkerMessage | TerminateWorkerMessage = event.data;\n\n\t\t\tif (data instanceof MessagePort) {\n\t\t\t\t// receiving a message port which is used to communicate\n\t\t\t\t// with the web worker extension host\n\t\t\t\tif (barrier.isOpen()) {\n\t\t\t\t\tconsole.warn('UNEXPECTED message', event);\n\t\t\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, 'received a message port AFTER opening the barrier']);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tport = data;\n\t\t\t\tbarrier.open();\n\n\n\t\t\t} else if (data?.type === '_newWorker') {\n\t\t\t\t// receiving a message to create a new nested/child worker\n\t\t\t\tconst worker = new Worker((ttPolicyNestedWorker?.createScriptURL(data.url) ?? data.url) as string, data.options);\n\t\t\t\tworker.postMessage(data.port, [data.port]);\n\t\t\t\tworker.onerror = console.error.bind(console);\n\t\t\t\tnestedWorker.set(data.id, worker);\n\n\t\t\t} else if (data?.type === '_terminateWorker') {\n\t\t\t\t// receiving a message to terminate nested/child worker\n\t\t\t\tif (nestedWorker.has(data.id)) {\n\t\t\t\t\tnestedWorker.get(data.id)!.terminate();\n\t\t\t\t\tnestedWorker.delete(data.id);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// all other messages are an error\n\t\t\t\tconsole.warn('UNEXPECTED message', event);\n\t\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, 'UNEXPECTED message']);\n\t\t\t}\n\t\t};\n\n\t\t// await MessagePort and use it to directly communicate\n\t\t// with the worker extension host\n\t\tawait barrier.wait();\n\n\t\tport.onmessage = (event) => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn('UNKNOWN data received', data);\n\t\t\t\tthis._onDidExit.fire([77, 'UNKNOWN data received']);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\temitter.fire(VSBuffer.wrap(new Uint8Array(data, 0, data.byteLength)));\n\t\t};\n\n\t\tworker.onerror = (event) => {\n\t\t\tconsole.error(event.message, event.error);\n\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, event.message || event.error]);\n\t\t};\n\n\t\t// keep for cleanup\n\t\tthis._register(emitter);\n\t\tthis._register(toDisposable(() => worker.terminate()));\n\n\t\tconst protocol: IMessagePassingProtocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: vsbuf => {\n\t\t\t\tconst data = vsbuf.buffer.buffer.slice(vsbuf.buffer.byteOffset, vsbuf.buffer.byteOffset + vsbuf.buffer.byteLength);\n\t\t\t\tport.postMessage(data, [data]);\n\t\t\t}\n\t\t};\n\n\t\treturn this._performHandshake(protocol);\n\t}\n\n\tprivate async _performHandshake(protocol: IMessagePassingProtocol): Promise<IMessagePassingProtocol> {\n\t\t// extension host handshake happens below\n\t\t// (1) <== wait for: Ready\n\t\t// (2) ==> send: init data\n\t\t// (3) <== wait for: Initialized\n\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Ready)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tprotocol.send(VSBuffer.fromString(JSON.stringify(await this._createExtHostInitData())));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Initialized)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\t// Register log channel for web worker exthost log\n\t\tRegistry.as<IOutputChannelRegistry>(Extensions.OutputChannels).registerChannel({ id: 'webWorkerExtHostLog', label: localize('name', \"Worker Extension Host\"), file: this._extensionHostLogFile, log: true });\n\n\t\treturn protocol;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._isTerminating) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\t\tif (this._protocol) {\n\t\t\tthis._protocol.send(createMessageOfType(MessageType.Terminate));\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tgetInspectPort(): number | undefined {\n\t\treturn undefined;\n\t}\n\n\tenableInspectPort(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _createExtHostInitData(): Promise<IInitData> {\n\t\tconst [telemetryInfo, initData] = await Promise.all([this._telemetryService.getTelemetryInfo(), this._initDataProvider.getInitData()]);\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\treturn {\n\t\t\tcommit: this._productService.commit,\n\t\t\tversion: this._productService.version,\n\t\t\tparentPid: -1,\n\t\t\tenvironment: {\n\t\t\t\tisExtensionDevelopmentDebug: this._environmentService.debugRenderer,\n\t\t\t\tappName: this._productService.nameLong,\n\t\t\t\tappUriScheme: this._productService.urlProtocol,\n\t\t\t\tappLanguage: platform.language,\n\t\t\t\textensionDevelopmentLocationURI: this._environmentService.extensionDevelopmentLocationURI,\n\t\t\t\textensionTestsLocationURI: this._environmentService.extensionTestsLocationURI,\n\t\t\t\tglobalStorageHome: this._environmentService.globalStorageHome,\n\t\t\t\tworkspaceStorageHome: this._environmentService.workspaceStorageHome,\n\t\t\t\twebviewResourceRoot: this._environmentService.webviewResourceRoot,\n\t\t\t\twebviewCspSource: this._environmentService.webviewCspSource,\n\t\t\t},\n\t\t\tworkspace: this._contextService.getWorkbenchState() === WorkbenchState.EMPTY ? undefined : {\n\t\t\t\tconfiguration: workspace.configuration || undefined,\n\t\t\t\tid: workspace.id,\n\t\t\t\tname: this._labelService.getWorkspaceLabel(workspace)\n\t\t\t},\n\t\t\tresolvedExtensions: [],\n\t\t\thostExtensions: [],\n\t\t\textensions: initData.extensions,\n\t\t\ttelemetryInfo,\n\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\tlogsLocation: this._extensionHostLogsLocation,\n\t\t\tlogFile: this._extensionHostLogFile,\n\t\t\tautoStart: initData.autoStart,\n\t\t\tremote: {\n\t\t\t\tauthority: this._environmentService.remoteAuthority,\n\t\t\t\tconnectionData: null,\n\t\t\t\tisRemote: false\n\t\t\t},\n\t\t\tuiKind: platform.isWeb ? UIKind.Web : UIKind.Desktop\n\t\t};\n\t}\n}\n"]}