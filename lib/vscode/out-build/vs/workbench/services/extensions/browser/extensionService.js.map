{"version":3,"sources":["vs/workbench/services/extensions/browser/extensionService.ts"],"names":[],"mappings":"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","file":"extensionService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkbenchExtensionEnablementService, IWebExtensionsScannerService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IExtensionService, IExtensionHost } from 'vs/workbench/services/extensions/common/extensions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { AbstractExtensionService, ExtensionRunningLocation, ExtensionRunningLocationClassifier, ExtensionRunningPreference, parseScannedExtension } from 'vs/workbench/services/extensions/common/abstractExtensionService';\nimport { RemoteExtensionHost, IRemoteExtensionHostDataProvider, IRemoteExtensionHostInitData } from 'vs/workbench/services/extensions/common/remoteExtensionHost';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { WebWorkerExtensionHost } from 'vs/workbench/services/extensions/browser/webWorkerExtensionHost';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ExtensionIdentifier, IExtensionDescription, ExtensionKind, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { FetchFileSystemProvider } from 'vs/workbench/services/extensions/browser/webWorkerFileSystemProvider';\nimport { Schemas } from 'vs/base/common/network';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit';\n\nexport class ExtensionService extends AbstractExtensionService implements IExtensionService {\n\n\tprivate _disposables = new DisposableStore();\n\tprivate _remoteInitData: IRemoteExtensionHostInitData | null = null;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkbenchExtensionEnablementService extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IRemoteAgentService private readonly _remoteAgentService: IRemoteAgentService,\n\t\t@IWebExtensionsScannerService private readonly _webExtensionsScannerService: IWebExtensionsScannerService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IExtensionManifestPropertiesService extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IUserDataInitializationService private readonly _userDataInitializationService: IUserDataInitializationService,\n\t) {\n\t\tsuper(\n\t\t\tnew ExtensionRunningLocationClassifier(\n\t\t\t\t(extension) => this._getExtensionKind(extension),\n\t\t\t\t(extensionKinds, isInstalledLocally, isInstalledRemotely, preference) => ExtensionService.pickRunningLocation(extensionKinds, isInstalledLocally, isInstalledRemotely, preference)\n\t\t\t),\n\t\t\tinstantiationService,\n\t\t\tnotificationService,\n\t\t\tenvironmentService,\n\t\t\ttelemetryService,\n\t\t\textensionEnablementService,\n\t\t\tfileService,\n\t\t\tproductService,\n\t\t\textensionManagementService,\n\t\t\tcontextService,\n\t\t\tconfigurationService,\n\t\t\textensionManifestPropertiesService\n\t\t);\n\n\t\tthis._runningLocation = new Map<string, ExtensionRunningLocation>();\n\n\t\t// Initialize installed extensions first and do it only after workbench is ready\n\t\tthis._lifecycleService.when(LifecyclePhase.Ready).then(async () => {\n\t\t\tawait this._userDataInitializationService.initializeInstalledExtensions(this._instantiationService);\n\t\t\tthis._initialize();\n\t\t});\n\n\t\tthis._initFetchFileSystem();\n\t}\n\n\toverride dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprotected async _scanSingleExtension(extension: IExtension): Promise<IExtensionDescription | null> {\n\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\treturn this._remoteAgentService.scanSingleExtension(extension.location, extension.type === ExtensionType.System);\n\t\t}\n\n\t\tconst scannedExtension = await this._webExtensionsScannerService.scanAndTranslateSingleExtension(extension.location, extension.type);\n\t\tif (scannedExtension) {\n\t\t\treturn parseScannedExtension(scannedExtension);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _initFetchFileSystem(): void {\n\t\tconst provider = new FetchFileSystemProvider();\n\t\tthis._disposables.add(this._fileService.registerProvider(Schemas.http, provider));\n\t\tthis._disposables.add(this._fileService.registerProvider(Schemas.https, provider));\n\t}\n\n\tprivate _createLocalExtensionHostDataProvider() {\n\t\treturn {\n\t\t\tgetInitData: async () => {\n\t\t\t\tconst allExtensions = await this.getExtensions();\n\t\t\t\tconst localWebWorkerExtensions = filterByRunningLocation(allExtensions, this._runningLocation, ExtensionRunningLocation.LocalWebWorker);\n\t\t\t\treturn {\n\t\t\t\t\tautoStart: true,\n\t\t\t\t\textensions: localWebWorkerExtensions\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _createRemoteExtensionHostDataProvider(remoteAuthority: string): IRemoteExtensionHostDataProvider {\n\t\treturn {\n\t\t\tremoteAuthority: remoteAuthority,\n\t\t\tgetInitData: async () => {\n\t\t\t\tawait this.whenInstalledExtensionsRegistered();\n\t\t\t\treturn this._remoteInitData!;\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static pickRunningLocation(extensionKinds: ExtensionKind[], isInstalledLocally: boolean, isInstalledRemotely: boolean, preference: ExtensionRunningPreference): ExtensionRunningLocation {\n\t\tconst result: ExtensionRunningLocation[] = [];\n\t\tlet canRunRemotely = false;\n\t\tfor (const extensionKind of extensionKinds) {\n\t\t\tif (extensionKind === 'ui' && isInstalledRemotely) {\n\t\t\t\t// ui extensions run remotely if possible (but only as a last resort)\n\t\t\t\tif (preference === ExtensionRunningPreference.Remote) {\n\t\t\t\t\treturn ExtensionRunningLocation.Remote;\n\t\t\t\t} else {\n\t\t\t\t\tcanRunRemotely = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionKind === 'workspace' && isInstalledRemotely) {\n\t\t\t\t// workspace extensions run remotely if possible\n\t\t\t\tif (preference === ExtensionRunningPreference.None || preference === ExtensionRunningPreference.Remote) {\n\t\t\t\t\treturn ExtensionRunningLocation.Remote;\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(ExtensionRunningLocation.Remote);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionKind === 'web' && isInstalledLocally) {\n\t\t\t\t// web worker extensions run in the local web worker if possible\n\t\t\t\tif (preference === ExtensionRunningPreference.None || preference === ExtensionRunningPreference.Local) {\n\t\t\t\t\treturn ExtensionRunningLocation.LocalWebWorker;\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(ExtensionRunningLocation.LocalWebWorker);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (canRunRemotely) {\n\t\t\tresult.push(ExtensionRunningLocation.Remote);\n\t\t}\n\t\treturn (result.length > 0 ? result[0] : ExtensionRunningLocation.None);\n\t}\n\n\tprotected _createExtensionHosts(_isInitialStart: boolean): IExtensionHost[] {\n\t\tconst result: IExtensionHost[] = [];\n\n\t\tconst webWorkerExtHost = this._instantiationService.createInstance(WebWorkerExtensionHost, this._createLocalExtensionHostDataProvider());\n\t\tresult.push(webWorkerExtHost);\n\n\t\tconst remoteAgentConnection = this._remoteAgentService.getConnection();\n\t\tif (remoteAgentConnection) {\n\t\t\tconst remoteExtHost = this._instantiationService.createInstance(RemoteExtensionHost, this._createRemoteExtensionHostDataProvider(remoteAgentConnection.remoteAuthority), this._remoteAgentService.socketFactory);\n\t\t\tresult.push(remoteExtHost);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async _scanAndHandleExtensions(): Promise<void> {\n\t\t// fetch the remote environment\n\t\tlet [localExtensions, remoteEnv, remoteExtensions] = await Promise.all([\n\t\t\tthis._webExtensionsScannerService.scanAndTranslateExtensions().then(extensions => extensions.map(parseScannedExtension)),\n\t\t\tthis._remoteAgentService.getEnvironment(),\n\t\t\tthis._remoteAgentService.scanExtensions()\n\t\t]);\n\t\tlocalExtensions = this._checkEnabledAndProposedAPI(localExtensions);\n\t\tremoteExtensions = this._checkEnabledAndProposedAPI(remoteExtensions);\n\n\t\tconst remoteAgentConnection = this._remoteAgentService.getConnection();\n\t\tthis._runningLocation = this._runningLocationClassifier.determineRunningLocation(localExtensions, remoteExtensions);\n\n\t\tlocalExtensions = filterByRunningLocation(localExtensions, this._runningLocation, ExtensionRunningLocation.LocalWebWorker);\n\t\tremoteExtensions = filterByRunningLocation(remoteExtensions, this._runningLocation, ExtensionRunningLocation.Remote);\n\n\t\tconst result = this._registry.deltaExtensions(remoteExtensions.concat(localExtensions), []);\n\t\tif (result.removedDueToLooping.length > 0) {\n\t\t\tthis._logOrShowMessage(Severity.Error, nls.localize('looping', 'The following extensions contain dependency loops and have been disabled: {0}', result.removedDueToLooping.map(e => `'${e.identifier.value}'`).join(', ')));\n\t\t}\n\n\t\tif (remoteEnv && remoteAgentConnection) {\n\t\t\t// save for remote extension's init data\n\t\t\tthis._remoteInitData = {\n\t\t\t\tconnectionData: this._remoteAuthorityResolverService.getConnectionData(remoteAgentConnection.remoteAuthority),\n\t\t\t\tpid: remoteEnv.pid,\n\t\t\t\tappRoot: remoteEnv.appRoot,\n\t\t\t\textensionHostLogsPath: remoteEnv.extensionHostLogsPath,\n\t\t\t\tglobalStorageHome: remoteEnv.globalStorageHome,\n\t\t\t\tworkspaceStorageHome: remoteEnv.workspaceStorageHome,\n\t\t\t\textensions: remoteExtensions,\n\t\t\t\tallExtensions: this._registry.getAllExtensionDescriptions()\n\t\t\t};\n\t\t}\n\n\t\tthis._doHandleExtensionPoints(this._registry.getAllExtensionDescriptions());\n\t}\n\n\tpublic _onExtensionHostExit(code: number): void {\n\t\t// Dispose everything associated with the extension host\n\t\tthis.stopExtensionHosts();\n\n\t\t// We log the exit code to the console. Do NOT remove this\n\t\t// code as the automated integration tests in browser rely\n\t\t// on this message to exit properly.\n\t\tconsole.log(`vscode:exit ${code}`);\n\t}\n}\n\nfunction filterByRunningLocation(extensions: IExtensionDescription[], runningLocation: Map<string, ExtensionRunningLocation>, desiredRunningLocation: ExtensionRunningLocation): IExtensionDescription[] {\n\treturn extensions.filter(ext => runningLocation.get(ExtensionIdentifier.toKey(ext.identifier)) === desiredRunningLocation);\n}\n\nregisterSingleton(IExtensionService, ExtensionService);\n"]}