{"version":3,"file":"workspacesService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workspaces/electron-sandbox/workspacesService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQhG,iDAAiD;IACjD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;QAInC,YACsB,kBAAuC,EACxC,iBAAqC;YAEzD,OAAO,kBAAY,CAAC,SAAS,CAAqB,kBAAkB,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzI,CAAC;KACD,CAAA;IAVY,uBAAuB;QAKjC,WAAA,8BAAmB,CAAA;QACnB,WAAA,2BAAkB,CAAA;OANR,uBAAuB,CAUnC;IAVY,0DAAuB;IAYpC,CAAA,GAAA,8BAAiB,CAAA,CAAC,+BAAkB,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\n\n// @ts-ignore: interface is implemented via proxy\nexport class NativeWorkspacesService implements IWorkspacesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IMainProcessService mainProcessService: IMainProcessService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\treturn ProxyChannel.toService<IWorkspacesService>(mainProcessService.getChannel('workspaces'), { context: nativeHostService.windowId });\n\t}\n}\n\nregisterSingleton(IWorkspacesService, NativeWorkspacesService, true);\n"]}