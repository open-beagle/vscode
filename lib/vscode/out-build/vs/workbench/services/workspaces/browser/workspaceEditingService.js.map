{"version":3,"file":"workspaceEditingService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workspaces/browser/workspaceEditingService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAqBhG,IAAa,8BAA8B,GAA3C,MAAa,8BAA+B,SAAQ,iEAA+B;QAElF,YACsB,kBAAuC,EAClC,cAAgC,EACnC,oBAA2C,EAC5C,mBAAyC,EAC9C,cAA+B,EAClC,WAAyB,EACrB,eAAiC,EAC/B,iBAAqC,EAC3B,kBAAgD,EAC1D,iBAAqC,EACzC,aAA6B,EAC/B,WAAyB,EAClB,kBAAuC,EAC1B,+BAAiE;YAEnG,KAAK,CAAC,kBAAkB,EAAE,cAAc,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,aAAa,EAAE,WAAW,EAAE,kBAAkB,EAAE,+BAA+B,CAAC,CAAC;QAC/Q,CAAC;QAED,KAAK,CAAC,cAAc,CAAC,IAAS;YAC7B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,MAAM,EAAE;gBAEX,gCAAgC;gBAChC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;aACxF;QACF,CAAC;KACD,CAAA;IA7BY,8BAA8B;QAGxC,WAAA,iCAAmB,CAAA;QACnB,WAAA,oCAAwB,CAAA;QACxB,WAAA,qCAAqB,CAAA;QACrB,WAAA,mCAAoB,CAAA;QACpB,WAAA,0BAAe,CAAA;QACf,WAAA,oBAAY,CAAA;QACZ,WAAA,4BAAgB,CAAA;QAChB,WAAA,+BAAkB,CAAA;QAClB,WAAA,iDAA4B,CAAA;QAC5B,WAAA,4BAAkB,CAAA;QAClB,YAAA,wBAAc,CAAA;QACd,YAAA,mBAAY,CAAA;QACZ,YAAA,iCAAmB,CAAA;QACnB,YAAA,iDAAgC,CAAA;OAhBtB,8BAA8B,CA6B1C;IA7BY,wEAA8B;IA+B3C,CAAA,GAAA,8BAAiB,CAAA,CAAC,2CAAwB,EAAE,8BAA8B,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { WorkspaceService } from 'vs/workbench/services/configuration/browser/configurationService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IFileDialogService, IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { AbstractWorkspaceEditingService } from 'vs/workbench/services/workspaces/browser/abstractWorkspaceEditingService';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\n\nexport class BrowserWorkspaceEditingService extends AbstractWorkspaceEditingService {\n\n\tconstructor(\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@IWorkspaceContextService contextService: WorkspaceService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService\n\t) {\n\t\tsuper(jsonEditingService, contextService, configurationService, notificationService, commandService, fileService, textFileService, workspacesService, environmentService, fileDialogService, dialogService, hostService, uriIdentityService, workspaceTrustManagementService);\n\t}\n\n\tasync enterWorkspace(path: URI): Promise<void> {\n\t\tconst result = await this.doEnterWorkspace(path);\n\t\tif (result) {\n\n\t\t\t// Open workspace in same window\n\t\t\tawait this.hostService.openWindow([{ workspaceUri: path }], { forceReuseWindow: true });\n\t\t}\n\t}\n}\n\nregisterSingleton(IWorkspaceEditingService, BrowserWorkspaceEditingService, true);\n"]}