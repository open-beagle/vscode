{"version":3,"sources":["vs/workbench/services/workspaces/browser/workspaceTrustEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,yBAA0B,SAAQ,oBAAW;QAA1D;;YAOU,aAAQ,GAAQ,SAAG,CAAC,IAAI,CAAC;gBACjC,MAAM,EAAE,iBAAO,CAAC,oBAAoB;gBACpC,IAAI,EAAE,sBAAsB;aAC5B,CAAC,CAAC;QASJ,CAAC;QAhBA,IAAa,MAAM;YAClB,OAAO,yBAAyB,CAAC,EAAE,CAAC;QACrC,CAAC;QAOQ,OAAO,CAAC,UAAmB;YACnC,OAAO,UAAU,YAAY,yBAAyB,CAAC;QACxD,CAAC;QAEQ,OAAO;YACf,OAAO,CAAA,GAAA,cAAQ,CAAA,CAAC,CAA+B,EAAE,IAAiB,CAAC,CAAC;QACrE,CAAC;;IAlBF,8DAmBC;IAlBgB,4BAAE,GAAW,gCAAgC,CAAC","file":"workspaceTrustEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { EditorInput } from 'vs/workbench/common/editor';\n\nexport class WorkspaceTrustEditorInput extends EditorInput {\n\tstatic readonly ID: string = 'workbench.input.workspaceTrust';\n\n\toverride get typeId(): string {\n\t\treturn WorkspaceTrustEditorInput.ID;\n\t}\n\n\treadonly resource: URI = URI.from({\n\t\tscheme: Schemas.vscodeWorkspaceTrust,\n\t\tpath: `workspaceTrustEditor`\n\t});\n\n\toverride matches(otherInput: unknown): boolean {\n\t\treturn otherInput instanceof WorkspaceTrustEditorInput;\n\t}\n\n\toverride getName(): string {\n\t\treturn localize('workspaceTrustEditorInputName', \"Workspace Trust\");\n\t}\n}\n"]}