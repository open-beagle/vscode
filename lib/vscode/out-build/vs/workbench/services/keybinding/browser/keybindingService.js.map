{"version":3,"sources":["vs/workbench/services/keybinding/browser/keybindingService.ts"],"names":[],"mappings":"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","file":"keybindingService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport { printKeyboardEvent, printStandardKeyboardEvent, StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Keybinding, ResolvedKeybinding, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { KeybindingParser } from 'vs/base/common/keybindingParser';\nimport { OS, OperatingSystem, isMacintosh } from 'vs/base/common/platform';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigExtensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr, IContextKeyService, ContextKeyExpression, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Extensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { AbstractKeybindingService } from 'vs/platform/keybinding/common/abstractKeybindingService';\nimport { IKeyboardEvent, IUserFriendlyKeybinding, KeybindingSource, IKeybindingService, IKeybindingEvent, KeybindingsSchemaContribution } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { IKeybindingItem, IKeybindingRule2, KeybindingWeight, KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionMessageCollector, ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { IUserKeybindingItem, KeybindingIO, OutputBuilder } from 'vs/workbench/services/keybinding/common/keybindingIO';\nimport { IKeyboardMapper } from 'vs/platform/keyboardLayout/common/keyboardMapper';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { commandsExtensionPoint } from 'vs/workbench/api/common/menusExtensionPoint';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { parse } from 'vs/base/common/json';\nimport * as objects from 'vs/base/common/objects';\nimport { IKeyboardLayoutService } from 'vs/platform/keyboardLayout/common/keyboardLayout';\nimport { getDispatchConfig } from 'vs/platform/keyboardLayout/common/dispatchConfig';\nimport { isArray } from 'vs/base/common/types';\nimport { INavigatorWithKeyboard, IKeyboard } from 'vs/workbench/services/keybinding/browser/navigatorKeyboard';\nimport { ScanCode, ScanCodeUtils, IMMUTABLE_CODE_TO_KEY_CODE } from 'vs/base/common/scanCode';\nimport { flatten } from 'vs/base/common/arrays';\nimport { BrowserFeatures, KeyboardSupport } from 'vs/base/browser/canIUse';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { dirname } from 'vs/base/common/resources';\nimport { getAllUnboundCommands } from 'vs/workbench/services/keybinding/browser/unboundCommands';\n\ninterface ContributedKeyBinding {\n\tcommand: string;\n\targs?: any;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nfunction isContributedKeyBindingsArray(thing: ContributedKeyBinding | ContributedKeyBinding[]): thing is ContributedKeyBinding[] {\n\treturn Array.isArray(thing);\n}\n\nfunction isValidContributedKeyBinding(keyBinding: ContributedKeyBinding, rejects: string[]): boolean {\n\tif (!keyBinding) {\n\t\trejects.push(nls.localize('nonempty', \"expected non-empty value.\"));\n\t\treturn false;\n\t}\n\tif (typeof keyBinding.command !== 'string') {\n\t\trejects.push(nls.localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n\t\treturn false;\n\t}\n\tif (keyBinding.key && typeof keyBinding.key !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'key'));\n\t\treturn false;\n\t}\n\tif (keyBinding.when && typeof keyBinding.when !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'when'));\n\t\treturn false;\n\t}\n\tif (keyBinding.mac && typeof keyBinding.mac !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'mac'));\n\t\treturn false;\n\t}\n\tif (keyBinding.linux && typeof keyBinding.linux !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'linux'));\n\t\treturn false;\n\t}\n\tif (keyBinding.win && typeof keyBinding.win !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'win'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nlet keybindingType: IJSONSchema = {\n\ttype: 'object',\n\tdefault: { command: '', key: '' },\n\tproperties: {\n\t\tcommand: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.command', 'Identifier of the command to run when keybinding is triggered.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\targs: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.args', \"Arguments to pass to the command to execute.\")\n\t\t},\n\t\tkey: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.key', 'Key or key sequence (separate keys with plus-sign and sequences with space, e.g. Ctrl+O and Ctrl+L L for a chord).'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tmac: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.mac', 'Mac specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tlinux: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.linux', 'Linux specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\twin: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.win', 'Windows specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\twhen: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.when', 'Condition when the key is active.'),\n\t\t\ttype: 'string'\n\t\t},\n\t}\n};\n\nconst keybindingsExtPoint = ExtensionsRegistry.registerExtensionPoint<ContributedKeyBinding | ContributedKeyBinding[]>({\n\textensionPoint: 'keybindings',\n\tdeps: [commandsExtensionPoint],\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.keybindings', \"Contributes keybindings.\"),\n\t\toneOf: [\n\t\t\tkeybindingType,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: keybindingType\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst NUMPAD_PRINTABLE_SCANCODES = [\n\tScanCode.NumpadDivide,\n\tScanCode.NumpadMultiply,\n\tScanCode.NumpadSubtract,\n\tScanCode.NumpadAdd,\n\tScanCode.Numpad1,\n\tScanCode.Numpad2,\n\tScanCode.Numpad3,\n\tScanCode.Numpad4,\n\tScanCode.Numpad5,\n\tScanCode.Numpad6,\n\tScanCode.Numpad7,\n\tScanCode.Numpad8,\n\tScanCode.Numpad9,\n\tScanCode.Numpad0,\n\tScanCode.NumpadDecimal\n];\n\nconst otherMacNumpadMapping = new Map<ScanCode, KeyCode>();\notherMacNumpadMapping.set(ScanCode.Numpad1, KeyCode.KEY_1);\notherMacNumpadMapping.set(ScanCode.Numpad2, KeyCode.KEY_2);\notherMacNumpadMapping.set(ScanCode.Numpad3, KeyCode.KEY_3);\notherMacNumpadMapping.set(ScanCode.Numpad4, KeyCode.KEY_4);\notherMacNumpadMapping.set(ScanCode.Numpad5, KeyCode.KEY_5);\notherMacNumpadMapping.set(ScanCode.Numpad6, KeyCode.KEY_6);\notherMacNumpadMapping.set(ScanCode.Numpad7, KeyCode.KEY_7);\notherMacNumpadMapping.set(ScanCode.Numpad8, KeyCode.KEY_8);\notherMacNumpadMapping.set(ScanCode.Numpad9, KeyCode.KEY_9);\notherMacNumpadMapping.set(ScanCode.Numpad0, KeyCode.KEY_0);\n\nexport class WorkbenchKeybindingService extends AbstractKeybindingService {\n\n\tprivate _keyboardMapper: IKeyboardMapper;\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate userKeybindings: UserKeybindings;\n\tprivate isComposingGlobalContextKey: IContextKey<boolean>;\n\tprivate readonly _contributions: KeybindingsSchemaContribution[] = [];\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t\t@IKeyboardLayoutService private readonly keyboardLayoutService: IKeyboardLayoutService\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis.isComposingGlobalContextKey = contextKeyService.createKey('isComposing', false);\n\t\tthis.updateSchema();\n\n\t\tlet dispatchConfig = getDispatchConfig(configurationService);\n\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\tlet newDispatchConfig = getDispatchConfig(configurationService);\n\t\t\tif (dispatchConfig === newDispatchConfig) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdispatchConfig = newDispatchConfig;\n\t\t\tthis._keyboardMapper = this.keyboardLayoutService.getKeyboardMapper(dispatchConfig);\n\t\t\tthis.updateResolver({ source: KeybindingSource.Default });\n\t\t});\n\n\t\tthis._keyboardMapper = this.keyboardLayoutService.getKeyboardMapper(dispatchConfig);\n\t\tthis.keyboardLayoutService.onDidChangeKeyboardLayout(() => {\n\t\t\tthis._keyboardMapper = this.keyboardLayoutService.getKeyboardMapper(dispatchConfig);\n\t\t\tthis.updateResolver({ source: KeybindingSource.Default });\n\t\t});\n\n\t\tthis._cachedResolver = null;\n\n\t\tthis.userKeybindings = this._register(new UserKeybindings(environmentService.keybindingsResource, fileService, logService));\n\t\tthis.userKeybindings.initialize().then(() => {\n\t\t\tif (this.userKeybindings.keybindings.length) {\n\t\t\t\tthis.updateResolver({ source: KeybindingSource.User });\n\t\t\t}\n\t\t});\n\t\tthis._register(this.userKeybindings.onDidChange(() => {\n\t\t\tlogService.debug('User keybindings changed');\n\t\t\tthis.updateResolver({\n\t\t\t\tsource: KeybindingSource.User,\n\t\t\t\tkeybindings: this.userKeybindings.keybindings\n\t\t\t});\n\t\t}));\n\n\t\tkeybindingsExtPoint.setHandler((extensions) => {\n\n\t\t\tlet keybindings: IKeybindingRule2[] = [];\n\t\t\tfor (let extension of extensions) {\n\t\t\t\tthis._handleKeybindingsExtensionPointUser(extension.description.identifier, extension.description.isBuiltin, extension.value, extension.collector, keybindings);\n\t\t\t}\n\n\t\t\tKeybindingsRegistry.setExtensionKeybindings(keybindings);\n\t\t\tthis.updateResolver({ source: KeybindingSource.Default });\n\t\t});\n\n\t\tthis.updateSchema();\n\t\tthis._register(extensionService.onDidRegisterExtensions(() => this.updateSchema()));\n\n\t\t// for standard keybindings\n\t\tthis._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tthis.isComposingGlobalContextKey.set(e.isComposing);\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tthis._log(`/ Received  keydown event - ${printKeyboardEvent(e)}`);\n\t\t\tthis._log(`| Converted keydown event - ${printStandardKeyboardEvent(keyEvent)}`);\n\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t}\n\t\t\tthis.isComposingGlobalContextKey.set(false);\n\t\t}));\n\n\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\tthis._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tthis.isComposingGlobalContextKey.set(e.isComposing);\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t}\n\t\t\tthis.isComposingGlobalContextKey.set(false);\n\t\t}));\n\n\t\tlet data = this.keyboardLayoutService.getCurrentKeyboardLayout();\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"IKeyboardLayoutInfo\" : {\n\t\t\t\t\"name\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"id\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"text\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"IKeyboardLayoutInfo\" : {\n\t\t\t\t\"model\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"layout\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"variant\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"options\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"rules\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"IKeyboardLayoutInfo\" : {\n\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"lang\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"keyboardLayout\" : {\n\t\t\t\t\"currentKeyboardLayout\": { \"${inline}\": [ \"${IKeyboardLayoutInfo}\" ] }\n\t\t\t}\n\t\t*/\n\t\ttelemetryService.publicLog('keyboardLayout', {\n\t\t\tcurrentKeyboardLayout: data\n\t\t});\n\n\t\tthis._register(browser.onDidChangeFullscreen(() => {\n\t\t\tconst keyboard: IKeyboard | null = (<INavigatorWithKeyboard>navigator).keyboard;\n\n\t\t\tif (BrowserFeatures.keyboard === KeyboardSupport.None) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (browser.isFullscreen()) {\n\t\t\t\tkeyboard?.lock(['Escape']);\n\t\t\t} else {\n\t\t\t\tkeyboard?.unlock();\n\t\t\t}\n\n\t\t\t// update resolver which will bring back all unbound keyboard shortcuts\n\t\t\tthis._cachedResolver = null;\n\t\t\tthis._onDidUpdateKeybindings.fire({ source: KeybindingSource.User });\n\t\t}));\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\tthis._contributions.push(contribution);\n\t\tif (contribution.onDidChange) {\n\t\t\tthis._register(contribution.onDidChange(() => this.updateSchema()));\n\t\t}\n\t\tthis.updateSchema();\n\t}\n\n\tprivate updateSchema() {\n\t\tupdateSchema(flatten(this._contributions.map(x => x.getSchemaAdditions())));\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\tconst layoutInfo = JSON.stringify(this.keyboardLayoutService.getCurrentKeyboardLayout(), null, '\\t');\n\t\tconst mapperInfo = this._keyboardMapper.dumpDebugInfo();\n\t\tconst rawMapping = JSON.stringify(this.keyboardLayoutService.getRawKeyboardMapping(), null, '\\t');\n\t\treturn `Layout info:\\n${layoutInfo}\\n${mapperInfo}\\n\\nRaw mapping:\\n${rawMapping}`;\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\tconst info = {\n\t\t\tlayout: this.keyboardLayoutService.getCurrentKeyboardLayout(),\n\t\t\trawMapping: this.keyboardLayoutService.getRawKeyboardMapping()\n\t\t};\n\t\treturn JSON.stringify(info, null, '\\t');\n\t}\n\n\tpublic override customKeybindingsCount(): number {\n\t\treturn this.userKeybindings.keybindings.length;\n\t}\n\n\tprivate updateResolver(event: IKeybindingEvent): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire(event);\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._resolveKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._resolveUserKeybindingItems(this.userKeybindings.keybindings.map((k) => KeybindingIO.readUserKeybindingItem(k)), false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\t// it is possible that the document has lost focus, but the\n\t\t// window is still focused, e.g. when a <webview> element\n\t\t// has focus\n\t\treturn this.hostService.hasFocus;\n\t}\n\n\tprivate _resolveKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tlet result: ResolvedKeybindingItem[] = [], resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, item.extensionId, item.isBuiltinExtension);\n\t\t\t} else {\n\t\t\t\tif (this._assertBrowserConflicts(keybinding, item.command)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst resolvedKeybindings = this.resolveKeybinding(keybinding);\n\t\t\t\tfor (let i = resolvedKeybindings.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst resolvedKeybinding = resolvedKeybindings[i];\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, item.extensionId, item.isBuiltinExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _resolveUserKeybindingItems(items: IUserKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tlet result: ResolvedKeybindingItem[] = [], resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst parts = item.parts;\n\t\t\tif (parts.length === 0) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = this._keyboardMapper.resolveUserBinding(parts);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _assertBrowserConflicts(kb: Keybinding, commandId: string): boolean {\n\t\tif (BrowserFeatures.keyboard === KeyboardSupport.Always) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (BrowserFeatures.keyboard === KeyboardSupport.FullScreen && browser.isFullscreen()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let part of kb.parts) {\n\t\t\tif (!part.metaKey && !part.altKey && !part.ctrlKey && !part.shiftKey) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst modifiersMask = KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.Shift;\n\n\t\t\tlet partModifiersMask = 0;\n\t\t\tif (part.metaKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.CtrlCmd;\n\t\t\t}\n\n\t\t\tif (part.shiftKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.Shift;\n\t\t\t}\n\n\t\t\tif (part.altKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.Alt;\n\t\t\t}\n\n\t\t\tif (part.ctrlKey && OS === OperatingSystem.Macintosh) {\n\t\t\t\tpartModifiersMask |= KeyMod.WinCtrl;\n\t\t\t}\n\n\t\t\t// re https://github.com/microsoft/vscode/issues/108788.\n\t\t\t// since we introduced `window.confirmBeforeQuit`, we should probably not unbind cmd+w/t/n.\n\n\t\t\t// if ((partModifiersMask & modifiersMask) === KeyMod.CtrlCmd && part.keyCode === KeyCode.KEY_W) {\n\t\t\t// \t// console.warn('Ctrl/Cmd+W keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\n\t\t\t// \treturn true;\n\t\t\t// }\n\n\t\t\t// if ((partModifiersMask & modifiersMask) === KeyMod.CtrlCmd && part.keyCode === KeyCode.KEY_N) {\n\t\t\t// \t// console.warn('Ctrl/Cmd+N keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\n\t\t\t// \treturn true;\n\t\t\t// }\n\n\t\t\t// if ((partModifiersMask & modifiersMask) === KeyMod.CtrlCmd && part.keyCode === KeyCode.KEY_T) {\n\t\t\t// \t// console.warn('Ctrl/Cmd+T keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\n\t\t\t// \treturn true;\n\t\t\t// }\n\n\t\t\tif ((partModifiersMask & modifiersMask) === (KeyMod.CtrlCmd | KeyMod.Alt) && (part.keyCode === KeyCode.LeftArrow || part.keyCode === KeyCode.RightArrow)) {\n\t\t\t\t// console.warn('Ctrl/Cmd+Arrow keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ((partModifiersMask & modifiersMask) === KeyMod.CtrlCmd && part.keyCode >= KeyCode.KEY_0 && part.keyCode <= KeyCode.KEY_9) {\n\t\t\t\t// console.warn('Ctrl/Cmd+Num keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic resolveKeybinding(kb: Keybinding): ResolvedKeybinding[] {\n\t\treturn this._keyboardMapper.resolveKeybinding(kb);\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tthis.keyboardLayoutService.validateCurrentKeyboardMapping(keyboardEvent);\n\t\treturn this._keyboardMapper.resolveKeyboardEvent(keyboardEvent);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\tconst parts = KeybindingParser.parseUserBinding(userBinding);\n\t\treturn this._keyboardMapper.resolveUserBinding(parts);\n\t}\n\n\tprivate _handleKeybindingsExtensionPointUser(extensionId: ExtensionIdentifier, isBuiltin: boolean, keybindings: ContributedKeyBinding | ContributedKeyBinding[], collector: ExtensionMessageCollector, result: IKeybindingRule2[]): void {\n\t\tif (isContributedKeyBindingsArray(keybindings)) {\n\t\t\tfor (let i = 0, len = keybindings.length; i < len; i++) {\n\t\t\t\tthis._handleKeybinding(extensionId, isBuiltin, i + 1, keybindings[i], collector, result);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._handleKeybinding(extensionId, isBuiltin, 1, keybindings, collector, result);\n\t\t}\n\t}\n\n\tprivate _handleKeybinding(extensionId: ExtensionIdentifier, isBuiltin: boolean, idx: number, keybindings: ContributedKeyBinding, collector: ExtensionMessageCollector, result: IKeybindingRule2[]): void {\n\n\t\tlet rejects: string[] = [];\n\n\t\tif (isValidContributedKeyBinding(keybindings, rejects)) {\n\t\t\tlet rule = this._asCommandRule(extensionId, isBuiltin, idx++, keybindings);\n\t\t\tif (rule) {\n\t\t\t\tresult.push(rule);\n\t\t\t}\n\t\t}\n\n\t\tif (rejects.length > 0) {\n\t\t\tcollector.error(nls.localize(\n\t\t\t\t'invalid.keybindings',\n\t\t\t\t\"Invalid `contributes.{0}`: {1}\",\n\t\t\t\tkeybindingsExtPoint.name,\n\t\t\t\trejects.join('\\n')\n\t\t\t));\n\t\t}\n\t}\n\n\tprivate _asCommandRule(extensionId: ExtensionIdentifier, isBuiltin: boolean, idx: number, binding: ContributedKeyBinding): IKeybindingRule2 | undefined {\n\n\t\tlet { command, args, when, key, mac, linux, win } = binding;\n\n\t\tlet weight: number;\n\t\tif (isBuiltin) {\n\t\t\tweight = KeybindingWeight.BuiltinExtension + idx;\n\t\t} else {\n\t\t\tweight = KeybindingWeight.ExternalExtension + idx;\n\t\t}\n\n\t\tlet commandAction = MenuRegistry.getCommand(command);\n\t\tlet precondition = commandAction && commandAction.precondition;\n\t\tlet fullWhen: ContextKeyExpression | undefined;\n\t\tif (when && precondition) {\n\t\t\tfullWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(when));\n\t\t} else if (when) {\n\t\t\tfullWhen = ContextKeyExpr.deserialize(when);\n\t\t} else if (precondition) {\n\t\t\tfullWhen = precondition;\n\t\t}\n\n\t\tlet desc: IKeybindingRule2 = {\n\t\t\tid: command,\n\t\t\targs,\n\t\t\twhen: fullWhen,\n\t\t\tweight: weight,\n\t\t\tprimary: KeybindingParser.parseKeybinding(key, OS),\n\t\t\tmac: mac ? { primary: KeybindingParser.parseKeybinding(mac, OS) } : null,\n\t\t\tlinux: linux ? { primary: KeybindingParser.parseKeybinding(linux, OS) } : null,\n\t\t\twin: win ? { primary: KeybindingParser.parseKeybinding(win, OS) } : null,\n\t\t\textensionId: extensionId.value,\n\t\t\tisBuiltinExtension: isBuiltin\n\t\t};\n\n\t\tif (!desc.primary && !desc.mac && !desc.linux && !desc.win) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn desc;\n\t}\n\n\tpublic override getDefaultKeybindingsContent(): string {\n\t\tconst resolver = this._getResolver();\n\t\tconst defaultKeybindings = resolver.getDefaultKeybindings();\n\t\tconst boundCommands = resolver.getDefaultBoundCommands();\n\t\treturn (\n\t\t\tWorkbenchKeybindingService._getDefaultKeybindings(defaultKeybindings)\n\t\t\t+ '\\n\\n'\n\t\t\t+ WorkbenchKeybindingService._getAllCommandsAsComment(boundCommands)\n\t\t);\n\t}\n\n\tprivate static _getDefaultKeybindings(defaultKeybindings: readonly ResolvedKeybindingItem[]): string {\n\t\tlet out = new OutputBuilder();\n\t\tout.writeLine('[');\n\n\t\tlet lastIndex = defaultKeybindings.length - 1;\n\t\tdefaultKeybindings.forEach((k, index) => {\n\t\t\tKeybindingIO.writeKeybindingItem(out, k);\n\t\t\tif (index !== lastIndex) {\n\t\t\t\tout.writeLine(',');\n\t\t\t} else {\n\t\t\t\tout.writeLine();\n\t\t\t}\n\t\t});\n\t\tout.writeLine(']');\n\t\treturn out.toString();\n\t}\n\n\tprivate static _getAllCommandsAsComment(boundCommands: Map<string, boolean>): string {\n\t\tconst unboundCommands = getAllUnboundCommands(boundCommands);\n\t\tlet pretty = unboundCommands.sort().join('\\n// - ');\n\t\treturn '// ' + nls.localize('unboundCommands', \"Here are other available commands: \") + '\\n// - ' + pretty;\n\t}\n\n\toverride mightProducePrintableCharacter(event: IKeyboardEvent): boolean {\n\t\tif (event.ctrlKey || event.metaKey || event.altKey) {\n\t\t\t// ignore ctrl/cmd/alt-combination but not shift-combinatios\n\t\t\treturn false;\n\t\t}\n\t\tconst code = ScanCodeUtils.toEnum(event.code);\n\n\t\tif (NUMPAD_PRINTABLE_SCANCODES.indexOf(code) !== -1) {\n\t\t\t// This is a numpad key that might produce a printable character based on NumLock.\n\t\t\t// Let's check if NumLock is on or off based on the event's keyCode.\n\t\t\t// e.g.\n\t\t\t// - when NumLock is off, ScanCode.Numpad4 produces KeyCode.LeftArrow\n\t\t\t// - when NumLock is on, ScanCode.Numpad4 produces KeyCode.NUMPAD_4\n\t\t\t// However, ScanCode.NumpadAdd always produces KeyCode.NUMPAD_ADD\n\t\t\tif (event.keyCode === IMMUTABLE_CODE_TO_KEY_CODE[code]) {\n\t\t\t\t// NumLock is on or this is /, *, -, + on the numpad\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (isMacintosh && event.keyCode === otherMacNumpadMapping.get(code)) {\n\t\t\t\t// on macOS, the numpad keys can also map to keys 1 - 0.\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst keycode = IMMUTABLE_CODE_TO_KEY_CODE[code];\n\t\tif (keycode !== -1) {\n\t\t\t// https://github.com/microsoft/vscode/issues/74934\n\t\t\treturn false;\n\t\t}\n\t\t// consult the KeyboardMapperFactory to check the given event for\n\t\t// a printable value.\n\t\tconst mapping = this.keyboardLayoutService.getRawKeyboardMapping();\n\t\tif (!mapping) {\n\t\t\treturn false;\n\t\t}\n\t\tconst keyInfo = mapping[event.code];\n\t\tif (!keyInfo) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keyInfo.value || /\\s/.test(keyInfo.value)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass UserKeybindings extends Disposable {\n\n\tprivate _keybindings: IUserFriendlyKeybinding[] = [];\n\tget keybindings(): IUserFriendlyKeybinding[] { return this._keybindings; }\n\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly keybindingsResource: URI,\n\t\tprivate readonly fileService: IFileService,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(fileService.watch(dirname(keybindingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.keybindingsResource));\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reload().then(changed => {\n\t\t\tif (changed) {\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}), 50));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.keybindingsResource))(() => {\n\t\t\tlogService.debug('Keybindings file changed');\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tawait this.reload();\n\t}\n\n\tprivate async reload(): Promise<boolean> {\n\t\tconst existing = this._keybindings;\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.keybindingsResource);\n\t\t\tconst value = parse(content.value.toString());\n\t\t\tthis._keybindings = isArray(value) ? value : [];\n\t\t} catch (e) {\n\t\t\tthis._keybindings = [];\n\t\t}\n\t\treturn existing ? !objects.equals(existing, this._keybindings) : true;\n\t}\n}\n\nlet schemaId = 'vscode://schemas/keybindings';\nlet commandsSchemas: IJSONSchema[] = [];\nlet commandsEnum: string[] = [];\nlet commandsEnumDescriptions: (string | undefined)[] = [];\nlet schema: IJSONSchema = {\n\tid: schemaId,\n\ttype: 'array',\n\ttitle: nls.localize('keybindings.json.title', \"Keybindings configuration\"),\n\tallowTrailingCommas: true,\n\tallowComments: true,\n\tdefinitions: {\n\t\t'editorGroupsSchema': {\n\t\t\t'type': 'array',\n\t\t\t'items': {\n\t\t\t\t'type': 'object',\n\t\t\t\t'properties': {\n\t\t\t\t\t'groups': {\n\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema',\n\t\t\t\t\t\t'default': [{}, {}]\n\t\t\t\t\t},\n\t\t\t\t\t'size': {\n\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t'default': 0.5\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\titems: {\n\t\t'required': ['key'],\n\t\t'type': 'object',\n\t\t'defaultSnippets': [{ 'body': { 'key': '$1', 'command': '$2', 'when': '$3' } }],\n\t\t'properties': {\n\t\t\t'key': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'description': nls.localize('keybindings.json.key', \"Key or key sequence (separated by space)\"),\n\t\t\t},\n\t\t\t'command': {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t'enum': commandsEnum,\n\t\t\t\t\t\t'enumDescriptions': <any>commandsEnumDescriptions,\n\t\t\t\t\t\t'description': nls.localize('keybindings.json.command', \"Name of the command to execute\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t'when': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'description': nls.localize('keybindings.json.when', \"Condition when the key is active.\")\n\t\t\t},\n\t\t\t'args': {\n\t\t\t\t'description': nls.localize('keybindings.json.args', \"Arguments to pass to the command to execute.\")\n\t\t\t}\n\t\t},\n\t\t'allOf': commandsSchemas\n\t}\n};\n\nlet schemaRegistry = Registry.as<IJSONContributionRegistry>(Extensions.JSONContribution);\nschemaRegistry.registerSchema(schemaId, schema);\n\nfunction updateSchema(additionalContributions: readonly IJSONSchema[]) {\n\tcommandsSchemas.length = 0;\n\tcommandsEnum.length = 0;\n\tcommandsEnumDescriptions.length = 0;\n\n\tconst knownCommands = new Set<string>();\n\tconst addKnownCommand = (commandId: string, description?: string | undefined) => {\n\t\tif (!/^_/.test(commandId)) {\n\t\t\tif (!knownCommands.has(commandId)) {\n\t\t\t\tknownCommands.add(commandId);\n\n\t\t\t\tcommandsEnum.push(commandId);\n\t\t\t\tcommandsEnumDescriptions.push(description);\n\n\t\t\t\t// Also add the negative form for keybinding removal\n\t\t\t\tcommandsEnum.push(`-${commandId}`);\n\t\t\t\tcommandsEnumDescriptions.push(description);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst allCommands = CommandsRegistry.getCommands();\n\tfor (const [commandId, command] of allCommands) {\n\t\tconst commandDescription = command.description;\n\n\t\taddKnownCommand(commandId, commandDescription ? commandDescription.description : undefined);\n\n\t\tif (!commandDescription || !commandDescription.args || commandDescription.args.length !== 1 || !commandDescription.args[0].schema) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst argsSchema = commandDescription.args[0].schema;\n\t\tconst argsRequired = (\n\t\t\t(typeof commandDescription.args[0].isOptional !== 'undefined')\n\t\t\t\t? (!commandDescription.args[0].isOptional)\n\t\t\t\t: (Array.isArray(argsSchema.required) && argsSchema.required.length > 0)\n\t\t);\n\t\tconst addition = {\n\t\t\t'if': {\n\t\t\t\t'properties': {\n\t\t\t\t\t'command': { 'const': commandId }\n\t\t\t\t}\n\t\t\t},\n\t\t\t'then': {\n\t\t\t\t'required': (<string[]>[]).concat(argsRequired ? ['args'] : []),\n\t\t\t\t'properties': {\n\t\t\t\t\t'args': argsSchema\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcommandsSchemas.push(addition);\n\t}\n\n\tconst menuCommands = MenuRegistry.getCommands();\n\tfor (const commandId of menuCommands.keys()) {\n\t\taddKnownCommand(commandId);\n\t}\n\n\tcommandsSchemas.push(...additionalContributions);\n\tschemaRegistry.notifySchemaChanged(schemaId);\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigExtensions.Configuration);\nconst keyboardConfiguration: IConfigurationNode = {\n\t'id': 'keyboard',\n\t'order': 15,\n\t'type': 'object',\n\t'title': nls.localize('keyboardConfigurationTitle', \"Keyboard\"),\n\t'properties': {\n\t\t'keyboard.dispatch': {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: 'string',\n\t\t\tenum: ['code', 'keyCode'],\n\t\t\tdefault: 'code',\n\t\t\tmarkdownDescription: nls.localize('dispatch', \"Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`.\"),\n\t\t\tincluded: OS === OperatingSystem.Macintosh || OS === OperatingSystem.Linux\n\t\t}\n\t}\n};\n\nconfigurationRegistry.registerConfiguration(keyboardConfiguration);\n\nregisterSingleton(IKeybindingService, WorkbenchKeybindingService);\n"]}