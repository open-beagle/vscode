{"version":3,"file":"keymapInfo.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/keybinding/common/keymapInfo.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getKeyboardLayoutId, IKeyboardLayoutInfo } from 'vs/platform/keyboardLayout/common/keyboardLayout';\n\nfunction deserializeMapping(serializedMapping: ISerializedMapping) {\n\tlet mapping = serializedMapping;\n\n\tlet ret: { [key: string]: any } = {};\n\tfor (let key in mapping) {\n\t\tlet result: (string | number)[] = mapping[key];\n\t\tif (result.length) {\n\t\t\tlet value = result[0];\n\t\t\tlet withShift = result[1];\n\t\t\tlet withAltGr = result[2];\n\t\t\tlet withShiftAltGr = result[3];\n\t\t\tlet mask = Number(result[4]);\n\t\t\tlet vkey = result.length === 6 ? result[5] : undefined;\n\t\t\tret[key] = {\n\t\t\t\t'value': value,\n\t\t\t\t'vkey': vkey,\n\t\t\t\t'withShift': withShift,\n\t\t\t\t'withAltGr': withAltGr,\n\t\t\t\t'withShiftAltGr': withShiftAltGr,\n\t\t\t\t'valueIsDeadKey': (mask & 1) > 0,\n\t\t\t\t'withShiftIsDeadKey': (mask & 2) > 0,\n\t\t\t\t'withAltGrIsDeadKey': (mask & 4) > 0,\n\t\t\t\t'withShiftAltGrIsDeadKey': (mask & 8) > 0\n\t\t\t};\n\t\t} else {\n\t\t\tret[key] = {\n\t\t\t\t'value': '',\n\t\t\t\t'valueIsDeadKey': false,\n\t\t\t\t'withShift': '',\n\t\t\t\t'withShiftIsDeadKey': false,\n\t\t\t\t'withAltGr': '',\n\t\t\t\t'withAltGrIsDeadKey': false,\n\t\t\t\t'withShiftAltGr': '',\n\t\t\t\t'withShiftAltGrIsDeadKey': false\n\t\t\t};\n\t\t}\n\t}\n\n\treturn ret;\n}\n\nexport interface IRawMixedKeyboardMapping {\n\t[key: string]: {\n\t\tvalue: string,\n\t\twithShift: string;\n\t\twithAltGr: string;\n\t\twithShiftAltGr: string;\n\t\tvalueIsDeadKey?: boolean;\n\t\twithShiftIsDeadKey?: boolean;\n\t\twithAltGrIsDeadKey?: boolean;\n\t\twithShiftAltGrIsDeadKey?: boolean;\n\n\t};\n}\n\ninterface ISerializedMapping {\n\t[key: string]: (string | number)[];\n}\n\nexport interface IKeymapInfo {\n\tlayout: IKeyboardLayoutInfo;\n\tsecondaryLayouts: IKeyboardLayoutInfo[];\n\tmapping: ISerializedMapping;\n\tisUserKeyboardLayout?: boolean;\n}\n\nexport class KeymapInfo {\n\tmapping: IRawMixedKeyboardMapping;\n\tisUserKeyboardLayout: boolean;\n\n\tconstructor(public layout: IKeyboardLayoutInfo, public secondaryLayouts: IKeyboardLayoutInfo[], keyboardMapping: ISerializedMapping, isUserKeyboardLayout?: boolean) {\n\t\tthis.mapping = deserializeMapping(keyboardMapping);\n\t\tthis.isUserKeyboardLayout = !!isUserKeyboardLayout;\n\t\tthis.layout.isUserKeyboardLayout = !!isUserKeyboardLayout;\n\t}\n\n\tstatic createKeyboardLayoutFromDebugInfo(layout: IKeyboardLayoutInfo, value: IRawMixedKeyboardMapping, isUserKeyboardLayout?: boolean): KeymapInfo {\n\t\tlet keyboardLayoutInfo = new KeymapInfo(layout, [], {}, true);\n\t\tkeyboardLayoutInfo.mapping = value;\n\t\treturn keyboardLayoutInfo;\n\t}\n\n\tupdate(other: KeymapInfo) {\n\t\tthis.layout = other.layout;\n\t\tthis.secondaryLayouts = other.secondaryLayouts;\n\t\tthis.mapping = other.mapping;\n\t\tthis.isUserKeyboardLayout = other.isUserKeyboardLayout;\n\t\tthis.layout.isUserKeyboardLayout = other.isUserKeyboardLayout;\n\t}\n\n\tgetScore(other: IRawMixedKeyboardMapping): number {\n\t\tlet score = 0;\n\t\tfor (let key in other) {\n\t\t\tif (isWindows && (key === 'Backslash' || key === 'KeyQ')) {\n\t\t\t\t// keymap from Chromium is probably wrong.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (isLinux && (key === 'Backspace' || key === 'Escape')) {\n\t\t\t\t// native keymap doesn't align with keyboard event\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet currentMapping = this.mapping[key];\n\n\t\t\tif (currentMapping === undefined) {\n\t\t\t\tscore -= 1;\n\t\t\t}\n\n\t\t\tlet otherMapping = other[key];\n\n\t\t\tif (currentMapping && otherMapping && currentMapping.value !== otherMapping.value) {\n\t\t\t\tscore -= 1;\n\t\t\t}\n\t\t}\n\n\t\treturn score;\n\t}\n\n\tequal(other: KeymapInfo): boolean {\n\t\tif (this.isUserKeyboardLayout !== other.isUserKeyboardLayout) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (getKeyboardLayoutId(this.layout) !== getKeyboardLayoutId(other.layout)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.fuzzyEqual(other.mapping);\n\t}\n\n\tfuzzyEqual(other: IRawMixedKeyboardMapping): boolean {\n\t\tfor (let key in other) {\n\t\t\tif (isWindows && (key === 'Backslash' || key === 'KeyQ')) {\n\t\t\t\t// keymap from Chromium is probably wrong.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.mapping[key] === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet currentMapping = this.mapping[key];\n\t\t\tlet otherMapping = other[key];\n\n\t\t\tif (currentMapping.value !== otherMapping.value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]}