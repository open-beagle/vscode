{"version":3,"sources":["vs/workbench/services/keybinding/common/keybindingEditing.ts"],"names":[],"mappings":"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","file":"keybindingEditing.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Queue } from 'vs/base/common/async';\nimport * as json from 'vs/base/common/json';\nimport * as objects from 'vs/base/common/objects';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Edit } from 'vs/base/common/jsonFormatter';\nimport { Disposable, IReference } from 'vs/base/common/lifecycle';\nimport { isArray } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ITextModelService, IResolvedTextEditorModel } from 'vs/editor/common/services/resolverService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IUserFriendlyKeybinding } from 'vs/platform/keybinding/common/keybinding';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport const IKeybindingEditingService = createDecorator<IKeybindingEditingService>('keybindingEditingService');\n\nexport interface IKeybindingEditingService {\n\n\treadonly _serviceBrand: undefined;\n\n\taddKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void>;\n\n\teditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void>;\n\n\tremoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void>;\n\n\tresetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void>;\n}\n\nexport class KeybindingsEditingService extends Disposable implements IKeybindingEditingService {\n\n\tpublic _serviceBrand: undefined;\n\tprivate queue: Queue<void>;\n\n\tprivate resource: URI = this.environmentService.keybindingsResource;\n\n\tconstructor(\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\taddKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void> {\n\t\treturn this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, true)); // queue up writes to prevent race conditions\n\t}\n\n\teditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void> {\n\t\treturn this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, false)); // queue up writes to prevent race conditions\n\t}\n\n\tresetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.queue.queue(() => this.doResetKeybinding(keybindingItem)); // queue up writes to prevent race conditions\n\t}\n\n\tremoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.queue.queue(() => this.doRemoveKeybinding(keybindingItem)); // queue up writes to prevent race conditions\n\t}\n\n\tprivate async doEditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined, add: boolean): Promise<void> {\n\t\tconst reference = await this.resolveAndValidate();\n\t\tconst model = reference.object.textEditorModel;\n\t\tif (add) {\n\t\t\tthis.updateKeybinding(keybindingItem, key, when, model, -1);\n\t\t} else {\n\t\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\t\tconst userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n\t\t\tthis.updateKeybinding(keybindingItem, key, when, model, userKeybindingEntryIndex);\n\t\t\tif (keybindingItem.isDefault && keybindingItem.resolvedKeybinding) {\n\t\t\t\tthis.removeDefaultKeybinding(keybindingItem, model);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tawait this.save();\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate doRemoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.resolveAndValidate()\n\t\t\t.then(reference => {\n\t\t\t\tconst model = reference.object.textEditorModel;\n\t\t\t\tif (keybindingItem.isDefault) {\n\t\t\t\t\tthis.removeDefaultKeybinding(keybindingItem, model);\n\t\t\t\t} else {\n\t\t\t\t\tthis.removeUserKeybinding(keybindingItem, model);\n\t\t\t\t}\n\t\t\t\treturn this.save().finally(() => reference.dispose());\n\t\t\t});\n\t}\n\n\tprivate doResetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.resolveAndValidate()\n\t\t\t.then(reference => {\n\t\t\t\tconst model = reference.object.textEditorModel;\n\t\t\t\tif (!keybindingItem.isDefault) {\n\t\t\t\t\tthis.removeUserKeybinding(keybindingItem, model);\n\t\t\t\t\tthis.removeUnassignedDefaultKeybinding(keybindingItem, model);\n\t\t\t\t}\n\t\t\t\treturn this.save().finally(() => reference.dispose());\n\t\t\t});\n\t}\n\n\tprivate save(): Promise<any> {\n\t\treturn this.textFileService.save(this.resource);\n\t}\n\n\tprivate updateKeybinding(keybindingItem: ResolvedKeybindingItem, newKey: string, when: string | undefined, model: ITextModel, userKeybindingEntryIndex: number): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tif (userKeybindingEntryIndex !== -1) {\n\t\t\t// Update the keybinding with new key\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex, 'key'], newKey, { tabSize, insertSpaces, eol })[0], model);\n\t\t\tconst edits = setProperty(model.getValue(), [userKeybindingEntryIndex, 'when'], when, { tabSize, insertSpaces, eol });\n\t\t\tif (edits.length > 0) {\n\t\t\t\tthis.applyEditsToBuffer(edits[0], model);\n\t\t\t}\n\t\t} else {\n\t\t\t// Add the new keybinding with new key\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [-1], this.asObject(newKey, keybindingItem.command, when, false), { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate removeUserKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\tconst userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n\t\tif (userKeybindingEntryIndex !== -1) {\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex], undefined, { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate removeDefaultKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst key = keybindingItem.resolvedKeybinding ? keybindingItem.resolvedKeybinding.getUserSettingsLabel() : null;\n\t\tif (key) {\n\t\t\tconst entry: IUserFriendlyKeybinding = this.asObject(key, keybindingItem.command, keybindingItem.when ? keybindingItem.when.serialize() : undefined, true);\n\t\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\t\tif (userKeybindingEntries.every(e => !this.areSame(e, entry))) {\n\t\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [-1], entry, { tabSize, insertSpaces, eol })[0], model);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeUnassignedDefaultKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\tconst indices = this.findUnassignedDefaultKeybindingEntryIndex(keybindingItem, userKeybindingEntries).reverse();\n\t\tfor (const index of indices) {\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [index], undefined, { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate findUserKeybindingEntryIndex(keybindingItem: ResolvedKeybindingItem, userKeybindingEntries: IUserFriendlyKeybinding[]): number {\n\t\tfor (let index = 0; index < userKeybindingEntries.length; index++) {\n\t\t\tconst keybinding = userKeybindingEntries[index];\n\t\t\tif (keybinding.command === keybindingItem.command) {\n\t\t\t\tif (!keybinding.when && !keybindingItem.when) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t\tif (keybinding.when && keybindingItem.when) {\n\t\t\t\t\tconst contextKeyExpr = ContextKeyExpr.deserialize(keybinding.when);\n\t\t\t\t\tif (contextKeyExpr && contextKeyExpr.serialize() === keybindingItem.when.serialize()) {\n\t\t\t\t\t\treturn index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tprivate findUnassignedDefaultKeybindingEntryIndex(keybindingItem: ResolvedKeybindingItem, userKeybindingEntries: IUserFriendlyKeybinding[]): number[] {\n\t\tconst indices: number[] = [];\n\t\tfor (let index = 0; index < userKeybindingEntries.length; index++) {\n\t\t\tif (userKeybindingEntries[index].command === `-${keybindingItem.command}`) {\n\t\t\t\tindices.push(index);\n\t\t\t}\n\t\t}\n\t\treturn indices;\n\t}\n\n\tprivate asObject(key: string, command: string | null, when: string | undefined, negate: boolean): any {\n\t\tconst object: any = { key };\n\t\tif (command) {\n\t\t\tobject['command'] = negate ? `-${command}` : command;\n\t\t}\n\t\tif (when) {\n\t\t\tobject['when'] = when;\n\t\t}\n\t\treturn object;\n\t}\n\n\tprivate areSame(a: IUserFriendlyKeybinding, b: IUserFriendlyKeybinding): boolean {\n\t\tif (a.command !== b.command) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a.key !== b.key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst whenA = ContextKeyExpr.deserialize(a.when);\n\t\tconst whenB = ContextKeyExpr.deserialize(b.when);\n\t\tif ((whenA && !whenB) || (!whenA && whenB)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (whenA && whenB && !whenA.equals(whenB)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!objects.equals(a.args, b.args)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate applyEditsToBuffer(edit: Edit, model: ITextModel): void {\n\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\tconst endPosition = model.getPositionAt(edit.offset + edit.length);\n\t\tconst range = new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\tlet currentText = model.getValueInRange(range);\n\t\tconst editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n\t\tmodel.pushEditOperations([new Selection(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column)], [editOperation], () => []);\n\t}\n\n\tprivate resolveModelReference(): Promise<IReference<IResolvedTextEditorModel>> {\n\t\treturn this.fileService.exists(this.resource)\n\t\t\t.then(exists => {\n\t\t\t\tconst EOL = this.configurationService.getValue<{ eol: string }>('files', { overrideIdentifier: 'json' })['eol'];\n\t\t\t\tconst result: Promise<any> = exists ? Promise.resolve(null) : this.textFileService.write(this.resource, this.getEmptyContent(EOL), { encoding: 'utf8' });\n\t\t\t\treturn result.then(() => this.textModelResolverService.createModelReference(this.resource));\n\t\t\t});\n\t}\n\n\tprivate resolveAndValidate(): Promise<IReference<IResolvedTextEditorModel>> {\n\n\t\t// Target cannot be dirty if not writing into buffer\n\t\tif (this.textFileService.isDirty(this.resource)) {\n\t\t\treturn Promise.reject(new Error(localize('errorKeybindingsFileDirty', \"Unable to write because the keybindings configuration file is dirty. Please save it first and then try again.\")));\n\t\t}\n\n\t\treturn this.resolveModelReference()\n\t\t\t.then(reference => {\n\t\t\t\tconst model = reference.object.textEditorModel;\n\t\t\t\tconst EOL = model.getEOL();\n\t\t\t\tif (model.getValue()) {\n\t\t\t\t\tconst parsed = this.parse(model);\n\t\t\t\t\tif (parsed.parseErrors.length) {\n\t\t\t\t\t\treference.dispose();\n\t\t\t\t\t\treturn Promise.reject<any>(new Error(localize('parseErrors', \"Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.\")));\n\t\t\t\t\t}\n\t\t\t\t\tif (parsed.result) {\n\t\t\t\t\t\tif (!isArray(parsed.result)) {\n\t\t\t\t\t\t\treference.dispose();\n\t\t\t\t\t\t\treturn Promise.reject<any>(new Error(localize('errorInvalidConfiguration', \"Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.\")));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst content = EOL + '[]';\n\t\t\t\t\t\tthis.applyEditsToBuffer({ content, length: content.length, offset: model.getValue().length }, model);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst content = this.getEmptyContent(EOL);\n\t\t\t\t\tthis.applyEditsToBuffer({ content, length: content.length, offset: 0 }, model);\n\t\t\t\t}\n\t\t\t\treturn reference;\n\t\t\t});\n\t}\n\n\tprivate parse(model: ITextModel): { result: IUserFriendlyKeybinding[], parseErrors: json.ParseError[] } {\n\t\tconst parseErrors: json.ParseError[] = [];\n\t\tconst result = json.parse(model.getValue(), parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\treturn { result, parseErrors };\n\t}\n\n\tprivate getEmptyContent(EOL: string): string {\n\t\treturn '// ' + localize('emptyKeybindingsHeader', \"Place your key bindings in this file to override the defaults\") + EOL + '[]';\n\t}\n}\n\nregisterSingleton(IKeybindingEditingService, KeybindingsEditingService, true);\n"]}