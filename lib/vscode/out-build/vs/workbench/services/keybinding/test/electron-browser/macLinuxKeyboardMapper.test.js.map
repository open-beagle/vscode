{"version":3,"file":"macLinuxKeyboardMapper.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/keybinding/test/electron-browser/macLinuxKeyboardMapper.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { KeyChord, KeyCode, KeyMod, SimpleKeybinding, createKeybinding, createSimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { UserSettingsLabelProvider } from 'vs/base/common/keybindingLabels';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { ScanCode, ScanCodeBinding, ScanCodeUtils } from 'vs/base/common/scanCode';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { MacLinuxKeyboardMapper } from 'vs/workbench/services/keybinding/common/macLinuxKeyboardMapper';\nimport { IResolvedKeybinding, assertMapping, assertResolveKeybinding, assertResolveKeyboardEvent, assertResolveUserBinding, readRawMapping } from 'vs/workbench/services/keybinding/test/electron-browser/keyboardMapperTestUtils';\nimport { IMacLinuxKeyboardMapping } from 'vs/platform/keyboardLayout/common/keyboardLayout';\n\nconst WRITE_FILE_IF_DIFFERENT = false;\n\nasync function createKeyboardMapper(isUSStandard: boolean, file: string, OS: OperatingSystem): Promise<MacLinuxKeyboardMapper> {\n\tconst rawMappings = await readRawMapping<IMacLinuxKeyboardMapping>(file);\n\treturn new MacLinuxKeyboardMapper(isUSStandard, rawMappings, OS);\n}\n\nsuite('keyboardMapper - MAC de_ch', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(false, 'mac_de_ch', OperatingSystem.Macintosh);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'mac_de_ch.txt');\n\t});\n\n\tfunction assertKeybindingTranslation(kb: number, expected: string | string[]): void {\n\t\t_assertKeybindingTranslation(mapper, OperatingSystem.Macintosh, kb, expected);\n\t}\n\n\tfunction _assertResolveKeybinding(k: number, expected: IResolvedKeybinding[]): void {\n\t\tassertResolveKeybinding(mapper, createKeybinding(k, OperatingSystem.Macintosh)!, expected);\n\t}\n\n\ttest('kb => hw', () => {\n\t\t// unchanged\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_1, 'cmd+Digit1');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_B, 'cmd+KeyB');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_B, 'shift+cmd+KeyB');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.KEY_B, 'ctrl+shift+alt+cmd+KeyB');\n\n\t\t// flips Y and Z\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_Z, 'cmd+KeyY');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_Y, 'cmd+KeyZ');\n\n\t\t// Ctrl+/\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.US_SLASH, 'shift+cmd+Digit7');\n\t});\n\n\ttest('resolveKeybinding Cmd+A', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_A,\n\t\t\t[{\n\t\t\t\tlabel: '⌘A',\n\t\t\t\tariaLabel: 'Command+A',\n\t\t\t\telectronAccelerator: 'Cmd+A',\n\t\t\t\tuserSettingsLabel: 'cmd+a',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[KeyA]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+B', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_B,\n\t\t\t[{\n\t\t\t\tlabel: '⌘B',\n\t\t\t\tariaLabel: 'Command+B',\n\t\t\t\telectronAccelerator: 'Cmd+B',\n\t\t\t\tuserSettingsLabel: 'cmd+b',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[KeyB]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+Z', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_Z,\n\t\t\t[{\n\t\t\t\tlabel: '⌘Z',\n\t\t\t\tariaLabel: 'Command+Z',\n\t\t\t\telectronAccelerator: 'Cmd+Z',\n\t\t\t\tuserSettingsLabel: 'cmd+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[KeyY]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Cmd+[KeyY]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'KeyY'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘Z',\n\t\t\t\tariaLabel: 'Command+Z',\n\t\t\t\telectronAccelerator: 'Cmd+Z',\n\t\t\t\tuserSettingsLabel: 'cmd+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[KeyY]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: '⌃⌥⌘6',\n\t\t\t\tariaLabel: 'Control+Alt+Command+6',\n\t\t\t\telectronAccelerator: 'Ctrl+Alt+Cmd+6',\n\t\t\t\tuserSettingsLabel: 'ctrl+alt+cmd+6',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+alt+meta+[Digit6]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Cmd+[BracketRight]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'BracketRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘¨',\n\t\t\t\tariaLabel: 'Command+¨',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+[BracketRight]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[BracketRight]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Shift+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.Shift | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: '⌃⌥9',\n\t\t\t\tariaLabel: 'Control+Alt+9',\n\t\t\t\telectronAccelerator: 'Ctrl+Alt+9',\n\t\t\t\tuserSettingsLabel: 'ctrl+alt+9',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+alt+[Digit9]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: '⇧⌘7',\n\t\t\t\tariaLabel: 'Shift+Command+7',\n\t\t\t\telectronAccelerator: 'Shift+Cmd+7',\n\t\t\t\tuserSettingsLabel: 'shift+cmd+7',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['shift+meta+[Digit7]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+Shift+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: '⇧⌘\\'',\n\t\t\t\tariaLabel: 'Shift+Command+\\'',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'shift+cmd+[Minus]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['shift+meta+[Minus]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+K Cmd+\\\\', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_BACKSLASH),\n\t\t\t[{\n\t\t\t\tlabel: '⌘K ⌃⇧⌥⌘7',\n\t\t\t\tariaLabel: 'Command+K Control+Shift+Alt+Command+7',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+k ctrl+shift+alt+cmd+7',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['meta+[KeyK]', 'ctrl+shift+alt+meta+[Digit7]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+K Cmd+=', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_EQUAL),\n\t\t\t[{\n\t\t\t\tlabel: '⌘K ⇧⌘0',\n\t\t\t\tariaLabel: 'Command+K Shift+Command+0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+k shift+cmd+0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['meta+[KeyK]', 'shift+meta+[Digit0]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+DownArrow', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t[{\n\t\t\t\tlabel: '⌘↓',\n\t\t\t\tariaLabel: 'Command+DownArrow',\n\t\t\t\telectronAccelerator: 'Cmd+Down',\n\t\t\t\tuserSettingsLabel: 'cmd+down',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[ArrowDown]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Cmd+NUMPAD_0', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.NUMPAD_0,\n\t\t\t[{\n\t\t\t\tlabel: '⌘NumPad0',\n\t\t\t\tariaLabel: 'Command+NumPad0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+numpad0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[Numpad0]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Home', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t[{\n\t\t\t\tlabel: '⌘Home',\n\t\t\t\tariaLabel: 'Command+Home',\n\t\t\t\telectronAccelerator: 'Cmd+Home',\n\t\t\t\tuserSettingsLabel: 'cmd+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[Home]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'Home'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘Home',\n\t\t\t\tariaLabel: 'Command+Home',\n\t\t\t\telectronAccelerator: 'Cmd+Home',\n\t\t\t\tuserSettingsLabel: 'cmd+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveUserBinding empty', () => {\n\t\tassertResolveUserBinding(mapper, [], []);\n\t});\n\n\ttest('resolveUserBinding Cmd+[Comma] Cmd+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper,\n\t\t\t[\n\t\t\t\tnew ScanCodeBinding(false, false, false, true, ScanCode.Comma),\n\t\t\t\tnew SimpleKeybinding(false, false, false, true, KeyCode.US_SLASH),\n\t\t\t],\n\t\t\t[{\n\t\t\t\tlabel: '⌘, ⇧⌘7',\n\t\t\t\tariaLabel: 'Command+, Shift+Command+7',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+[Comma] shift+cmd+7',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['meta+[Comma]', 'shift+meta+[Digit7]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘',\n\t\t\t\tariaLabel: 'Command',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘',\n\t\t\t\tariaLabel: 'Command',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - MAC en_us', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(true, 'mac_en_us', OperatingSystem.Macintosh);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'mac_en_us.txt');\n\t});\n\n\ttest('resolveUserBinding Cmd+[Comma] Cmd+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper,\n\t\t\t[\n\t\t\t\tnew ScanCodeBinding(false, false, false, true, ScanCode.Comma),\n\t\t\t\tnew SimpleKeybinding(false, false, false, true, KeyCode.US_SLASH),\n\t\t\t],\n\t\t\t[{\n\t\t\t\tlabel: '⌘, ⌘/',\n\t\t\t\tariaLabel: 'Command+, Command+/',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd+, cmd+/',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['meta+[Comma]', 'meta+[Slash]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘',\n\t\t\t\tariaLabel: 'Command',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: '⌘',\n\t\t\t\tariaLabel: 'Command',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'cmd',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - LINUX de_ch', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(false, 'linux_de_ch', OperatingSystem.Linux);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'linux_de_ch.txt');\n\t});\n\n\tfunction assertKeybindingTranslation(kb: number, expected: string | string[]): void {\n\t\t_assertKeybindingTranslation(mapper, OperatingSystem.Linux, kb, expected);\n\t}\n\n\tfunction _assertResolveKeybinding(k: number, expected: IResolvedKeybinding[]): void {\n\t\tassertResolveKeybinding(mapper, createKeybinding(k, OperatingSystem.Linux)!, expected);\n\t}\n\n\ttest('kb => hw', () => {\n\t\t// unchanged\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_1, 'ctrl+Digit1');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_B, 'ctrl+KeyB');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_B, 'ctrl+shift+KeyB');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.KEY_B, 'ctrl+shift+alt+meta+KeyB');\n\n\t\t// flips Y and Z\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_Z, 'ctrl+KeyY');\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.KEY_Y, 'ctrl+KeyZ');\n\n\t\t// Ctrl+/\n\t\tassertKeybindingTranslation(KeyMod.CtrlCmd | KeyCode.US_SLASH, 'ctrl+shift+Digit7');\n\t});\n\n\ttest('resolveKeybinding Ctrl+A', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_A,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+A',\n\t\t\t\tariaLabel: 'Control+A',\n\t\t\t\telectronAccelerator: 'Ctrl+A',\n\t\t\t\tuserSettingsLabel: 'ctrl+a',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyA]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Z', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_Z,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyY]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[KeyY]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'KeyY'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyY]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[BracketRight]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'BracketRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+¨',\n\t\t\t\tariaLabel: 'Control+¨',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+[BracketRight]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[BracketRight]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Shift+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.Shift | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Alt+0',\n\t\t\t\tariaLabel: 'Control+Alt+0',\n\t\t\t\telectronAccelerator: 'Ctrl+Alt+0',\n\t\t\t\tuserSettingsLabel: 'ctrl+alt+0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+alt+[Digit0]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}, {\n\t\t\t\tlabel: 'Ctrl+Alt+$',\n\t\t\t\tariaLabel: 'Control+Alt+$',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+alt+[Backslash]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+alt+[Backslash]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Shift+7',\n\t\t\t\tariaLabel: 'Control+Shift+7',\n\t\t\t\telectronAccelerator: 'Ctrl+Shift+7',\n\t\t\t\tuserSettingsLabel: 'ctrl+shift+7',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+shift+[Digit7]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Shift+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Shift+\\'',\n\t\t\t\tariaLabel: 'Control+Shift+\\'',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+shift+[Minus]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+shift+[Minus]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+\\\\', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_BACKSLASH),\n\t\t\t[]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+=', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_EQUAL),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+Shift+0',\n\t\t\t\tariaLabel: 'Control+K Control+Shift+0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+shift+0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+[KeyK]', 'ctrl+shift+[Digit0]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+DownArrow', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+DownArrow',\n\t\t\t\tariaLabel: 'Control+DownArrow',\n\t\t\t\telectronAccelerator: 'Ctrl+Down',\n\t\t\t\tuserSettingsLabel: 'ctrl+down',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[ArrowDown]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+NUMPAD_0', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.NUMPAD_0,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+NumPad0',\n\t\t\t\tariaLabel: 'Control+NumPad0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+numpad0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Numpad0]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Home', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[Home]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'Home'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[KeyX]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'KeyX'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+X',\n\t\t\t\tariaLabel: 'Control+X',\n\t\t\t\telectronAccelerator: 'Ctrl+X',\n\t\t\t\tuserSettingsLabel: 'ctrl+x',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyX]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma] Ctrl+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma),\n\t\t\tnew SimpleKeybinding(true, false, false, false, KeyCode.US_SLASH),\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+, Ctrl+Shift+7',\n\t\t\t\tariaLabel: 'Control+, Control+Shift+7',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+[Comma] ctrl+shift+7',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+[Comma]', 'ctrl+shift+[Digit7]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ControlLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ControlLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ControlRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ControlRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - LINUX en_us', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(true, 'linux_en_us', OperatingSystem.Linux);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'linux_en_us.txt');\n\t});\n\n\tfunction _assertResolveKeybinding(k: number, expected: IResolvedKeybinding[]): void {\n\t\tassertResolveKeybinding(mapper, createKeybinding(k, OperatingSystem.Linux)!, expected);\n\t}\n\n\ttest('resolveKeybinding Ctrl+A', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_A,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+A',\n\t\t\t\tariaLabel: 'Control+A',\n\t\t\t\telectronAccelerator: 'Ctrl+A',\n\t\t\t\tuserSettingsLabel: 'ctrl+a',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyA]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Z', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_Z,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyZ]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[KeyZ]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'KeyZ'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyZ]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+]',\n\t\t\t\tariaLabel: 'Control+]',\n\t\t\t\telectronAccelerator: 'Ctrl+]',\n\t\t\t\tuserSettingsLabel: 'ctrl+]',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[BracketRight]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[BracketRight]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'BracketRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+]',\n\t\t\t\tariaLabel: 'Control+]',\n\t\t\t\telectronAccelerator: 'Ctrl+]',\n\t\t\t\tuserSettingsLabel: 'ctrl+]',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[BracketRight]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Shift+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.Shift | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: 'Shift+]',\n\t\t\t\tariaLabel: 'Shift+]',\n\t\t\t\telectronAccelerator: 'Shift+]',\n\t\t\t\tuserSettingsLabel: 'shift+]',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['shift+[BracketRight]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+/',\n\t\t\t\tariaLabel: 'Control+/',\n\t\t\t\telectronAccelerator: 'Ctrl+/',\n\t\t\t\tuserSettingsLabel: 'ctrl+/',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Slash]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Shift+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Shift+/',\n\t\t\t\tariaLabel: 'Control+Shift+/',\n\t\t\t\telectronAccelerator: 'Ctrl+Shift+/',\n\t\t\t\tuserSettingsLabel: 'ctrl+shift+/',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+shift+[Slash]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+\\\\', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_BACKSLASH),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+\\\\',\n\t\t\t\tariaLabel: 'Control+K Control+\\\\',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+\\\\',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+[KeyK]', 'ctrl+[Backslash]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+=', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_EQUAL),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+=',\n\t\t\t\tariaLabel: 'Control+K Control+=',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+=',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+[KeyK]', 'ctrl+[Equal]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+DownArrow', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+DownArrow',\n\t\t\t\tariaLabel: 'Control+DownArrow',\n\t\t\t\telectronAccelerator: 'Ctrl+Down',\n\t\t\t\tuserSettingsLabel: 'ctrl+down',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[ArrowDown]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+NUMPAD_0', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.NUMPAD_0,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+NumPad0',\n\t\t\t\tariaLabel: 'Control+NumPad0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+numpad0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Numpad0]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Home', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[Home]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'Home'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Home]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Shift+,', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_COMMA,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Shift+,',\n\t\t\t\tariaLabel: 'Control+Shift+,',\n\t\t\t\telectronAccelerator: 'Ctrl+Shift+,',\n\t\t\t\tuserSettingsLabel: 'ctrl+shift+,',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+shift+[Comma]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}, {\n\t\t\t\tlabel: 'Ctrl+<',\n\t\t\t\tariaLabel: 'Control+<',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+[IntlBackslash]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[IntlBackslash]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('issue #23393: resolveKeybinding Ctrl+Enter', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Enter',\n\t\t\t\tariaLabel: 'Control+Enter',\n\t\t\t\telectronAccelerator: 'Ctrl+Enter',\n\t\t\t\tuserSettingsLabel: 'ctrl+enter',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Enter]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('issue #23393: resolveKeyboardEvent Ctrl+[NumpadEnter]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'NumpadEnter'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Enter',\n\t\t\t\tariaLabel: 'Control+Enter',\n\t\t\t\telectronAccelerator: 'Ctrl+Enter',\n\t\t\t\tuserSettingsLabel: 'ctrl+enter',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Enter]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma] Ctrl+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma),\n\t\t\tnew SimpleKeybinding(true, false, false, false, KeyCode.US_SLASH),\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+, Ctrl+/',\n\t\t\t\tariaLabel: 'Control+, Control+/',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+, ctrl+/',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+[Comma]', 'ctrl+[Slash]'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma]', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma)\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+,',\n\t\t\t\tariaLabel: 'Control+,',\n\t\t\t\telectronAccelerator: 'Ctrl+,',\n\t\t\t\tuserSettingsLabel: 'ctrl+,',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Comma]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ControlLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ControlLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ControlRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ControlRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ShiftLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: true,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ShiftLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Shift',\n\t\t\t\tariaLabel: 'Shift',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'shift',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['shift'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier ShiftRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: true,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ShiftRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Shift',\n\t\t\t\tariaLabel: 'Shift',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'shift',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['shift'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier AltLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: true,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'AltLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Alt',\n\t\t\t\tariaLabel: 'Alt',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'alt',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['alt'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier AltRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: true,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'AltRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Alt',\n\t\t\t\tariaLabel: 'Alt',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'alt',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['alt'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaLeft+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Super',\n\t\t\t\tariaLabel: 'Super',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'meta',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier MetaRight+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'MetaRight'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Super',\n\t\t\t\tariaLabel: 'Super',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'meta',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Only Modifiers Ctrl+Shift+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: true,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'ShiftLeft'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Shift',\n\t\t\t\tariaLabel: 'Control+Shift',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+shift',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper', () => {\n\n\ttest('issue #23706: Linux UK layout: Ctrl + Apostrophe also toggles terminal', () => {\n\t\tlet mapper = new MacLinuxKeyboardMapper(false, {\n\t\t\t'Backquote': {\n\t\t\t\t'value': '`',\n\t\t\t\t'withShift': '¬',\n\t\t\t\t'withAltGr': '|',\n\t\t\t\t'withShiftAltGr': '|'\n\t\t\t}\n\t\t}, OperatingSystem.Linux);\n\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'Backquote'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+`',\n\t\t\t\tariaLabel: 'Control+`',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+`',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[Backquote]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('issue #24064: NumLock/NumPad keys stopped working in 1.11 on Linux', () => {\n\t\tlet mapper = new MacLinuxKeyboardMapper(false, {}, OperatingSystem.Linux);\n\n\t\tfunction assertNumpadKeyboardEvent(keyCode: KeyCode, code: string, label: string, electronAccelerator: string | null, userSettingsLabel: string, dispatch: string): void {\n\t\t\tassertResolveKeyboardEvent(\n\t\t\t\tmapper,\n\t\t\t\t{\n\t\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\t\tctrlKey: false,\n\t\t\t\t\tshiftKey: false,\n\t\t\t\t\taltKey: false,\n\t\t\t\t\tmetaKey: false,\n\t\t\t\t\tkeyCode: keyCode,\n\t\t\t\t\tcode: code\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tariaLabel: label,\n\t\t\t\t\telectronAccelerator: electronAccelerator,\n\t\t\t\t\tuserSettingsLabel: userSettingsLabel,\n\t\t\t\t\tisWYSIWYG: true,\n\t\t\t\t\tisChord: false,\n\t\t\t\t\tdispatchParts: [dispatch],\n\t\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tassertNumpadKeyboardEvent(KeyCode.End, 'Numpad1', 'End', 'End', 'end', '[End]');\n\t\tassertNumpadKeyboardEvent(KeyCode.DownArrow, 'Numpad2', 'DownArrow', 'Down', 'down', '[ArrowDown]');\n\t\tassertNumpadKeyboardEvent(KeyCode.PageDown, 'Numpad3', 'PageDown', 'PageDown', 'pagedown', '[PageDown]');\n\t\tassertNumpadKeyboardEvent(KeyCode.LeftArrow, 'Numpad4', 'LeftArrow', 'Left', 'left', '[ArrowLeft]');\n\t\tassertNumpadKeyboardEvent(KeyCode.Unknown, 'Numpad5', 'NumPad5', null!, 'numpad5', '[Numpad5]');\n\t\tassertNumpadKeyboardEvent(KeyCode.RightArrow, 'Numpad6', 'RightArrow', 'Right', 'right', '[ArrowRight]');\n\t\tassertNumpadKeyboardEvent(KeyCode.Home, 'Numpad7', 'Home', 'Home', 'home', '[Home]');\n\t\tassertNumpadKeyboardEvent(KeyCode.UpArrow, 'Numpad8', 'UpArrow', 'Up', 'up', '[ArrowUp]');\n\t\tassertNumpadKeyboardEvent(KeyCode.PageUp, 'Numpad9', 'PageUp', 'PageUp', 'pageup', '[PageUp]');\n\t\tassertNumpadKeyboardEvent(KeyCode.Insert, 'Numpad0', 'Insert', 'Insert', 'insert', '[Insert]');\n\t\tassertNumpadKeyboardEvent(KeyCode.Delete, 'NumpadDecimal', 'Delete', 'Delete', 'delete', '[Delete]');\n\t});\n\n\ttest('issue #24107: Delete, Insert, Home, End, PgUp, PgDn, and arrow keys no longer work editor in 1.11', () => {\n\t\tlet mapper = new MacLinuxKeyboardMapper(false, {}, OperatingSystem.Linux);\n\n\t\tfunction assertKeyboardEvent(keyCode: KeyCode, code: string, label: string, electronAccelerator: string, userSettingsLabel: string, dispatch: string): void {\n\t\t\tassertResolveKeyboardEvent(\n\t\t\t\tmapper,\n\t\t\t\t{\n\t\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\t\tctrlKey: false,\n\t\t\t\t\tshiftKey: false,\n\t\t\t\t\taltKey: false,\n\t\t\t\t\tmetaKey: false,\n\t\t\t\t\tkeyCode: keyCode,\n\t\t\t\t\tcode: code\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tariaLabel: label,\n\t\t\t\t\telectronAccelerator: electronAccelerator,\n\t\t\t\t\tuserSettingsLabel: userSettingsLabel,\n\t\t\t\t\tisWYSIWYG: true,\n\t\t\t\t\tisChord: false,\n\t\t\t\t\tdispatchParts: [dispatch],\n\t\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// https://github.com/microsoft/vscode/issues/24107#issuecomment-292318497\n\t\tassertKeyboardEvent(KeyCode.UpArrow, 'Lang3', 'UpArrow', 'Up', 'up', '[ArrowUp]');\n\t\tassertKeyboardEvent(KeyCode.DownArrow, 'NumpadEnter', 'DownArrow', 'Down', 'down', '[ArrowDown]');\n\t\tassertKeyboardEvent(KeyCode.LeftArrow, 'Convert', 'LeftArrow', 'Left', 'left', '[ArrowLeft]');\n\t\tassertKeyboardEvent(KeyCode.RightArrow, 'NonConvert', 'RightArrow', 'Right', 'right', '[ArrowRight]');\n\t\tassertKeyboardEvent(KeyCode.Delete, 'PrintScreen', 'Delete', 'Delete', 'delete', '[Delete]');\n\t\tassertKeyboardEvent(KeyCode.Insert, 'NumpadDivide', 'Insert', 'Insert', 'insert', '[Insert]');\n\t\tassertKeyboardEvent(KeyCode.End, 'Unknown', 'End', 'End', 'end', '[End]');\n\t\tassertKeyboardEvent(KeyCode.Home, 'IntlRo', 'Home', 'Home', 'home', '[Home]');\n\t\tassertKeyboardEvent(KeyCode.PageDown, 'ControlRight', 'PageDown', 'PageDown', 'pagedown', '[PageDown]');\n\t\tassertKeyboardEvent(KeyCode.PageUp, 'Lang4', 'PageUp', 'PageUp', 'pageup', '[PageUp]');\n\n\t\t// https://github.com/microsoft/vscode/issues/24107#issuecomment-292323924\n\t\tassertKeyboardEvent(KeyCode.PageDown, 'ControlRight', 'PageDown', 'PageDown', 'pagedown', '[PageDown]');\n\t\tassertKeyboardEvent(KeyCode.PageUp, 'Lang4', 'PageUp', 'PageUp', 'pageup', '[PageUp]');\n\t\tassertKeyboardEvent(KeyCode.End, '', 'End', 'End', 'end', '[End]');\n\t\tassertKeyboardEvent(KeyCode.Home, 'IntlRo', 'Home', 'Home', 'home', '[Home]');\n\t\tassertKeyboardEvent(KeyCode.Delete, 'PrintScreen', 'Delete', 'Delete', 'delete', '[Delete]');\n\t\tassertKeyboardEvent(KeyCode.Insert, 'NumpadDivide', 'Insert', 'Insert', 'insert', '[Insert]');\n\t\tassertKeyboardEvent(KeyCode.RightArrow, 'NonConvert', 'RightArrow', 'Right', 'right', '[ArrowRight]');\n\t\tassertKeyboardEvent(KeyCode.LeftArrow, 'Convert', 'LeftArrow', 'Left', 'left', '[ArrowLeft]');\n\t\tassertKeyboardEvent(KeyCode.DownArrow, 'NumpadEnter', 'DownArrow', 'Down', 'down', '[ArrowDown]');\n\t\tassertKeyboardEvent(KeyCode.UpArrow, 'Lang3', 'UpArrow', 'Up', 'up', '[ArrowUp]');\n\t});\n});\n\nsuite('keyboardMapper - LINUX ru', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(false, 'linux_ru', OperatingSystem.Linux);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'linux_ru.txt');\n\t});\n\n\tfunction _assertResolveKeybinding(k: number, expected: IResolvedKeybinding[]): void {\n\t\tassertResolveKeybinding(mapper, createKeybinding(k, OperatingSystem.Linux)!, expected);\n\t}\n\n\ttest('resolveKeybinding Ctrl+S', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_S,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+S',\n\t\t\t\tariaLabel: 'Control+S',\n\t\t\t\telectronAccelerator: 'Ctrl+S',\n\t\t\t\tuserSettingsLabel: 'ctrl+s',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+[KeyS]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - LINUX en_uk', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(false, 'linux_en_uk', OperatingSystem.Linux);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'linux_en_uk.txt');\n\t});\n\n\ttest('issue #24522: resolveKeyboardEvent Ctrl+Alt+[Minus]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: true,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: -1,\n\t\t\t\tcode: 'Minus'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Alt+-',\n\t\t\t\tariaLabel: 'Control+Alt+-',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+alt+[Minus]',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+alt+[Minus]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - MAC zh_hant', () => {\n\n\tlet mapper: MacLinuxKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tconst _mapper = await createKeyboardMapper(false, 'mac_zh_hant', OperatingSystem.Macintosh);\n\t\tmapper = _mapper;\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'mac_zh_hant.txt');\n\t});\n\n\tfunction _assertResolveKeybinding(k: number, expected: IResolvedKeybinding[]): void {\n\t\tassertResolveKeybinding(mapper, createKeybinding(k, OperatingSystem.Macintosh)!, expected);\n\t}\n\n\ttest('issue #28237 resolveKeybinding Cmd+C', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_C,\n\t\t\t[{\n\t\t\t\tlabel: '⌘C',\n\t\t\t\tariaLabel: 'Command+C',\n\t\t\t\telectronAccelerator: 'Cmd+C',\n\t\t\t\tuserSettingsLabel: 'cmd+c',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['meta+[KeyC]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n});\n\nfunction _assertKeybindingTranslation(mapper: MacLinuxKeyboardMapper, OS: OperatingSystem, kb: number, _expected: string | string[]): void {\n\tlet expected: string[];\n\tif (typeof _expected === 'string') {\n\t\texpected = [_expected];\n\t} else if (Array.isArray(_expected)) {\n\t\texpected = _expected;\n\t} else {\n\t\texpected = [];\n\t}\n\n\tconst runtimeKeybinding = createSimpleKeybinding(kb, OS);\n\n\tconst keybindingLabel = new USLayoutResolvedKeybinding(runtimeKeybinding.toChord(), OS).getUserSettingsLabel();\n\n\tconst actualHardwareKeypresses = mapper.simpleKeybindingToScanCodeBinding(runtimeKeybinding);\n\tif (actualHardwareKeypresses.length === 0) {\n\t\tassert.deepStrictEqual([], expected, `simpleKeybindingToHardwareKeypress -- \"${keybindingLabel}\" -- actual: \"[]\" -- expected: \"${expected}\"`);\n\t\treturn;\n\t}\n\n\tconst actual = actualHardwareKeypresses\n\t\t.map(k => UserSettingsLabelProvider.toLabel(OS, [k], (keybinding) => ScanCodeUtils.toString(keybinding.scanCode)));\n\tassert.deepStrictEqual(actual, expected, `simpleKeybindingToHardwareKeypress -- \"${keybindingLabel}\" -- actual: \"${actual}\" -- expected: \"${expected}\"`);\n}\n"]}