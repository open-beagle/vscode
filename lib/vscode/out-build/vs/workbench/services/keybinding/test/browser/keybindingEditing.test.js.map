{"version":3,"file":"keybindingEditing.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as json from 'vs/base/common/json';\nimport { ChordKeybinding, KeyCode, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OS } from 'vs/base/common/platform';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ModeServiceImpl } from 'vs/editor/common/services/modeServiceImpl';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ModelServiceImpl } from 'vs/editor/common/services/modelServiceImpl';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IUserFriendlyKeybinding } from 'vs/platform/keybinding/common/keybinding';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { KeybindingsEditingService } from 'vs/workbench/services/keybinding/common/keybindingEditing';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { TextModelResolverService } from 'vs/workbench/services/textmodelResolver/common/textModelResolverService';\nimport { TestWorkingCopyBackupService, TestEditorGroupsService, TestEditorService, TestEnvironmentService, TestLifecycleService, TestPathService, TestTextFileService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { FileUserDataProvider } from 'vs/workbench/services/userData/common/fileUserDataProvider';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IWorkingCopyService, WorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { IFilesConfigurationService, FilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { WorkingCopyFileService, IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { TestTextResourcePropertiesService, TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentityService';\nimport { joinPath } from 'vs/base/common/resources';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\ninterface Modifiers {\n\tmetaKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tshiftKey?: boolean;\n}\n\nconst ROOT = URI.file('tests').with({ scheme: 'vscode-tests' });\n\nsuite('KeybindingsEditing', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: TestInstantiationService, fileService: IFileService, environmentService: IEnvironmentService;\n\tlet testObject: KeybindingsEditingService;\n\n\tsetup(async () => {\n\t\tconst logService = new NullLogService();\n\t\tfileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\n\t\tconst userFolder = joinPath(ROOT, 'User');\n\t\tawait fileService.createFolder(userFolder);\n\t\tenvironmentService = TestEnvironmentService;\n\n\t\tinstantiationService = new TestInstantiationService();\n\n\t\tconst configService = new TestConfigurationService();\n\t\tconfigService.setUserConfiguration('files', { 'eol': '\\n' });\n\n\t\tinstantiationService.stub(IEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IPathService, new TestPathService());\n\t\tinstantiationService.stub(IConfigurationService, configService);\n\t\tinstantiationService.stub(IWorkspaceContextService, new TestContextService());\n\t\tconst lifecycleService = new TestLifecycleService();\n\t\tinstantiationService.stub(ILifecycleService, lifecycleService);\n\t\tinstantiationService.stub(IContextKeyService, <IContextKeyService>instantiationService.createInstance(MockContextKeyService));\n\t\tinstantiationService.stub(IEditorGroupsService, new TestEditorGroupsService());\n\t\tinstantiationService.stub(IEditorService, new TestEditorService());\n\t\tinstantiationService.stub(IWorkingCopyService, disposables.add(new WorkingCopyService()));\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IModeService, ModeServiceImpl);\n\t\tinstantiationService.stub(ILogService, new NullLogService());\n\t\tinstantiationService.stub(ILabelService, disposables.add(instantiationService.createInstance(LabelService)));\n\t\tinstantiationService.stub(IFilesConfigurationService, disposables.add(instantiationService.createInstance(FilesConfigurationService)));\n\t\tinstantiationService.stub(ITextResourcePropertiesService, new TestTextResourcePropertiesService(instantiationService.get(IConfigurationService)));\n\t\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelServiceImpl)));\n\t\tfileService.registerProvider(Schemas.userData, disposables.add(new FileUserDataProvider(ROOT.scheme, fileSystemProvider, Schemas.userData, new NullLogService())));\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tinstantiationService.stub(IUriIdentityService, new UriIdentityService(fileService));\n\t\tinstantiationService.stub(IWorkingCopyFileService, disposables.add(instantiationService.createInstance(WorkingCopyFileService)));\n\t\tinstantiationService.stub(ITextFileService, disposables.add(instantiationService.createInstance(TestTextFileService)));\n\t\tinstantiationService.stub(ITextModelService, disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\t\tinstantiationService.stub(IWorkingCopyBackupService, new TestWorkingCopyBackupService());\n\n\t\ttestObject = disposables.add(instantiationService.createInstance(KeybindingsEditingService));\n\n\t});\n\n\tteardown(() => disposables.clear());\n\n\ttest('errors cases - parse errors', async () => {\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(',,,,,,,,,,,,,,'));\n\t\ttry {\n\t\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape } }), 'alt+c', undefined);\n\t\t\tassert.fail('Should fail with parse errors');\n\t\t} catch (error) {\n\t\t\tassert.strictEqual(error.message, 'Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.');\n\t\t}\n\t});\n\n\ttest('errors cases - parse errors 2', async () => {\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString('[{\"key\": }]'));\n\t\ttry {\n\t\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape } }), 'alt+c', undefined);\n\t\t\tassert.fail('Should fail with parse errors');\n\t\t} catch (error) {\n\t\t\tassert.strictEqual(error.message, 'Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.');\n\t\t}\n\t});\n\n\ttest('errors cases - dirty', () => {\n\t\tinstantiationService.stub(ITextFileService, 'isDirty', true);\n\t\treturn testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape } }), 'alt+c', undefined)\n\t\t\t.then(() => assert.fail('Should fail with dirty error'),\n\t\t\t\terror => assert.strictEqual(error.message, 'Unable to write because the keybindings configuration file is dirty. Please save it first and then try again.'));\n\t});\n\n\ttest('errors cases - did not find an array', async () => {\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString('{\"key\": \"alt+c\", \"command\": \"hello\"}'));\n\t\ttry {\n\t\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape } }), 'alt+c', undefined);\n\t\t\tassert.fail('Should fail');\n\t\t} catch (error) {\n\t\t\tassert.strictEqual(error.message, 'Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.');\n\t\t}\n\t});\n\n\ttest('edit a default keybinding to an empty file', async () => {\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(''));\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'a' }, { key: 'escape', command: '-a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'a' }), 'alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('edit a default keybinding to an empty array', async () => {\n\t\tawait writeToKeybindingsFile();\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'a' }, { key: 'escape', command: '-a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'a' }), 'alt+c', undefined);\n\t\treturn assert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('edit a default keybinding in an existing array', async () => {\n\t\tawait writeToKeybindingsFile({ command: 'b', key: 'shift+c' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'shift+c', command: 'b' }, { key: 'alt+c', command: 'a' }, { key: 'escape', command: '-a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'a' }), 'alt+c', undefined);\n\t\treturn assert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('add another keybinding', async () => {\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'a' }];\n\t\tawait testObject.addKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'a' }), 'alt+c', undefined);\n\t\treturn assert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('add a new default keybinding', async () => {\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'a' }];\n\t\tawait testObject.addKeybinding(aResolvedKeybindingItem({ command: 'a' }), 'alt+c', undefined);\n\t\treturn assert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('add a new default keybinding using edit', async () => {\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a' }), 'alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('edit an user keybinding', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'escape', command: 'b' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'b' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'b', isDefault: false }), 'alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('edit an user keybinding with more than one element', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'escape', command: 'b' }, { key: 'alt+shift+g', command: 'c' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: 'b' }, { key: 'alt+shift+g', command: 'c' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ firstPart: { keyCode: KeyCode.Escape }, command: 'b', isDefault: false }), 'alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('remove a default keybinding', async () => {\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a' }];\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('remove a default keybinding should not ad duplicate entries', async () => {\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a' }];\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'a', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } } }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('remove a user keybinding', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: 'b' });\n\t\tawait testObject.removeKeybinding(aResolvedKeybindingItem({ command: 'b', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } }, isDefault: false }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), []);\n\t});\n\n\ttest('reset an edited keybinding', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: 'b' });\n\t\tawait testObject.resetKeybinding(aResolvedKeybindingItem({ command: 'b', firstPart: { keyCode: KeyCode.KEY_C, modifiers: { altKey: true } }, isDefault: false }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), []);\n\t});\n\n\ttest('reset a removed keybinding', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-b' });\n\t\tawait testObject.resetKeybinding(aResolvedKeybindingItem({ command: 'b', isDefault: false }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), []);\n\t});\n\n\ttest('reset multiple removed keybindings', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-b' });\n\t\tawait writeToKeybindingsFile({ key: 'alt+shift+c', command: '-b' });\n\t\tawait writeToKeybindingsFile({ key: 'escape', command: '-b' });\n\t\tawait testObject.resetKeybinding(aResolvedKeybindingItem({ command: 'b', isDefault: false }));\n\t\tassert.deepStrictEqual(await getUserKeybindings(), []);\n\t});\n\n\ttest('add a new keybinding to unassigned keybinding', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-a' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a' }, { key: 'shift+alt+c', command: 'a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a', isDefault: false }), 'shift+alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('add when expression', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-a' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a' }, { key: 'shift+alt+c', command: 'a', when: 'editorTextFocus' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a', isDefault: false }), 'shift+alt+c', 'editorTextFocus');\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('update command and when expression', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' }, { key: 'shift+alt+c', command: 'a', when: 'editorTextFocus' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a', isDefault: false }), 'shift+alt+c', 'editorTextFocus');\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('update when expression', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' }, { key: 'shift+alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' }, { key: 'shift+alt+c', command: 'a', when: 'editorTextFocus' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a', isDefault: false, when: 'editorTextFocus && !editorReadonly' }), 'shift+alt+c', 'editorTextFocus');\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\ttest('remove when expression', async () => {\n\t\tawait writeToKeybindingsFile({ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' });\n\t\tconst expected: IUserFriendlyKeybinding[] = [{ key: 'alt+c', command: '-a', when: 'editorTextFocus && !editorReadonly' }, { key: 'shift+alt+c', command: 'a' }];\n\t\tawait testObject.editKeybinding(aResolvedKeybindingItem({ command: 'a', isDefault: false }), 'shift+alt+c', undefined);\n\t\tassert.deepStrictEqual(await getUserKeybindings(), expected);\n\t});\n\n\tasync function writeToKeybindingsFile(...keybindings: IUserFriendlyKeybinding[]): Promise<void> {\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify(keybindings || [])));\n\t}\n\n\tasync function getUserKeybindings(): Promise<IUserFriendlyKeybinding[]> {\n\t\treturn json.parse((await fileService.readFile(environmentService.keybindingsResource)).value.toString());\n\t}\n\n\tfunction aResolvedKeybindingItem({ command, when, isDefault, firstPart, chordPart }: { command?: string, when?: string, isDefault?: boolean, firstPart?: { keyCode: KeyCode, modifiers?: Modifiers }, chordPart?: { keyCode: KeyCode, modifiers?: Modifiers } }): ResolvedKeybindingItem {\n\t\tconst aSimpleKeybinding = function (part: { keyCode: KeyCode, modifiers?: Modifiers }): SimpleKeybinding {\n\t\t\tconst { ctrlKey, shiftKey, altKey, metaKey } = part.modifiers || { ctrlKey: false, shiftKey: false, altKey: false, metaKey: false };\n\t\t\treturn new SimpleKeybinding(ctrlKey!, shiftKey!, altKey!, metaKey!, part.keyCode);\n\t\t};\n\t\tlet parts: SimpleKeybinding[] = [];\n\t\tif (firstPart) {\n\t\t\tparts.push(aSimpleKeybinding(firstPart));\n\t\t\tif (chordPart) {\n\t\t\t\tparts.push(aSimpleKeybinding(chordPart));\n\t\t\t}\n\t\t}\n\t\tconst keybinding = parts.length > 0 ? new USLayoutResolvedKeybinding(new ChordKeybinding(parts), OS) : undefined;\n\t\treturn new ResolvedKeybindingItem(keybinding, command || 'some command', null, when ? ContextKeyExpr.deserialize(when) : undefined, isDefault === undefined ? true : isDefault, null, false);\n\t}\n\n});\n"]}