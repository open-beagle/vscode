{"version":3,"file":"windowsKeyboardMapper.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/keybinding/test/electron-browser/windowsKeyboardMapper.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod, SimpleKeybinding, createKeybinding } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { ScanCode, ScanCodeBinding } from 'vs/base/common/scanCode';\nimport { WindowsKeyboardMapper } from 'vs/workbench/services/keybinding/common/windowsKeyboardMapper';\nimport { IResolvedKeybinding, assertMapping, assertResolveKeybinding, assertResolveKeyboardEvent, assertResolveUserBinding, readRawMapping } from 'vs/workbench/services/keybinding/test/electron-browser/keyboardMapperTestUtils';\nimport { IWindowsKeyboardMapping } from 'vs/platform/keyboardLayout/common/keyboardLayout';\n\nconst WRITE_FILE_IF_DIFFERENT = false;\n\nasync function createKeyboardMapper(isUSStandard: boolean, file: string): Promise<WindowsKeyboardMapper> {\n\tconst rawMappings = await readRawMapping<IWindowsKeyboardMapping>(file);\n\treturn new WindowsKeyboardMapper(isUSStandard, rawMappings);\n}\n\nfunction _assertResolveKeybinding(mapper: WindowsKeyboardMapper, k: number, expected: IResolvedKeybinding[]): void {\n\tconst keyBinding = createKeybinding(k, OperatingSystem.Windows);\n\tassertResolveKeybinding(mapper, keyBinding!, expected);\n}\n\nsuite('keyboardMapper - WINDOWS de_ch', () => {\n\n\tlet mapper: WindowsKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tmapper = await createKeyboardMapper(false, 'win_de_ch');\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'win_de_ch.txt');\n\t});\n\n\ttest('resolveKeybinding Ctrl+A', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_A,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+A',\n\t\t\t\tariaLabel: 'Control+A',\n\t\t\t\telectronAccelerator: 'Ctrl+A',\n\t\t\t\tuserSettingsLabel: 'ctrl+a',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+A'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Z', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_Z,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+Z'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+Z', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.KEY_Z,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Z',\n\t\t\t\tariaLabel: 'Control+Z',\n\t\t\t\telectronAccelerator: 'Ctrl+Z',\n\t\t\t\tuserSettingsLabel: 'ctrl+z',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+Z'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+^',\n\t\t\t\tariaLabel: 'Control+^',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+oem_6',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+^',\n\t\t\t\tariaLabel: 'Control+^',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+oem_6',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Shift+]', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.Shift | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t[{\n\t\t\t\tlabel: 'Shift+^',\n\t\t\t\tariaLabel: 'Shift+^',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'shift+oem_6',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['shift+]'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+§',\n\t\t\t\tariaLabel: 'Control+§',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+oem_2',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+/'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Shift+/', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SLASH,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Shift+§',\n\t\t\t\tariaLabel: 'Control+Shift+§',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+shift+oem_2',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+shift+/'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+\\\\', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_BACKSLASH),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+ä',\n\t\t\t\tariaLabel: 'Control+K Control+ä',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+oem_5',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+K', 'ctrl+\\\\'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+=', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_EQUAL),\n\t\t\t[]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+DownArrow', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+DownArrow',\n\t\t\t\tariaLabel: 'Control+DownArrow',\n\t\t\t\telectronAccelerator: 'Ctrl+Down',\n\t\t\t\tuserSettingsLabel: 'ctrl+down',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+DownArrow'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+NUMPAD_0', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.NUMPAD_0,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+NumPad0',\n\t\t\t\tariaLabel: 'Control+NumPad0',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+numpad0',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+NumPad0'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeybinding Ctrl+Home', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+Home'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+Home', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Home,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Home',\n\t\t\t\tariaLabel: 'Control+Home',\n\t\t\t\telectronAccelerator: 'Ctrl+Home',\n\t\t\t\tuserSettingsLabel: 'ctrl+home',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+Home'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveUserBinding empty', () => {\n\t\tassertResolveUserBinding(mapper, [], []);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma] Ctrl+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma),\n\t\t\tnew SimpleKeybinding(true, false, false, false, KeyCode.US_SLASH),\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+, Ctrl+§',\n\t\t\t\tariaLabel: 'Control+, Control+§',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+oem_comma ctrl+oem_2',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+,', 'ctrl+/'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier Ctrl+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Ctrl,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - WINDOWS en_us', () => {\n\n\tlet mapper: WindowsKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tmapper = await createKeyboardMapper(true, 'win_en_us');\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'win_en_us.txt');\n\t});\n\n\ttest('resolveKeybinding Ctrl+K Ctrl+\\\\', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_BACKSLASH),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+\\\\',\n\t\t\t\tariaLabel: 'Control+K Control+\\\\',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+\\\\',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+K', 'ctrl+\\\\'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma] Ctrl+/', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma),\n\t\t\tnew SimpleKeybinding(true, false, false, false, KeyCode.US_SLASH),\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+, Ctrl+/',\n\t\t\t\tariaLabel: 'Control+, Control+/',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+, ctrl+/',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+,', 'ctrl+/'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveUserBinding Ctrl+[Comma]', () => {\n\t\tassertResolveUserBinding(\n\t\t\tmapper, [\n\t\t\tnew ScanCodeBinding(true, false, false, false, ScanCode.Comma),\n\t\t],\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+,',\n\t\t\t\tariaLabel: 'Control+,',\n\t\t\t\telectronAccelerator: 'Ctrl+,',\n\t\t\t\tuserSettingsLabel: 'ctrl+,',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+,'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier Ctrl+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Ctrl,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl',\n\t\t\t\tariaLabel: 'Control',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['ctrl'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier Shift+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: true,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Shift,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Shift',\n\t\t\t\tariaLabel: 'Shift',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'shift',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['shift'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier Alt+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: true,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Alt,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Alt',\n\t\t\t\tariaLabel: 'Alt',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'alt',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['alt'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Single Modifier Meta+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: true,\n\t\t\t\tkeyCode: KeyCode.Meta,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Windows',\n\t\t\t\tariaLabel: 'Windows',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'win',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: ['meta'],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Only Modifiers Ctrl+Shift+', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: true,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.Shift,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+Shift',\n\t\t\t\tariaLabel: 'Control+Shift',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+shift',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: [null],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - WINDOWS por_ptb', () => {\n\n\tlet mapper: WindowsKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tmapper = await createKeyboardMapper(false, 'win_por_ptb');\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'win_por_ptb.txt');\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[IntlRo]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.ABNT_C1,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+/',\n\t\t\t\tariaLabel: 'Control+/',\n\t\t\t\telectronAccelerator: 'Ctrl+ABNT_C1',\n\t\t\t\tuserSettingsLabel: 'ctrl+abnt_c1',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+ABNT_C1'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('resolveKeyboardEvent Ctrl+[NumpadComma]', () => {\n\t\tassertResolveKeyboardEvent(\n\t\t\tmapper,\n\t\t\t{\n\t\t\t\t_standardKeyboardEventBrand: true,\n\t\t\t\tctrlKey: true,\n\t\t\t\tshiftKey: false,\n\t\t\t\taltKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tkeyCode: KeyCode.ABNT_C2,\n\t\t\t\tcode: null!\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Ctrl+.',\n\t\t\t\tariaLabel: 'Control+.',\n\t\t\t\telectronAccelerator: 'Ctrl+ABNT_C2',\n\t\t\t\tuserSettingsLabel: 'ctrl+abnt_c2',\n\t\t\t\tisWYSIWYG: false,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+ABNT_C2'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - WINDOWS ru', () => {\n\n\tlet mapper: WindowsKeyboardMapper;\n\n\tsuiteSetup(async () => {\n\t\tmapper = await createKeyboardMapper(false, 'win_ru');\n\t});\n\n\ttest('mapping', () => {\n\t\treturn assertMapping(WRITE_FILE_IF_DIFFERENT, mapper, 'win_ru.txt');\n\t});\n\n\ttest('issue ##24361: resolveKeybinding Ctrl+K Ctrl+K', () => {\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_K),\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+K Ctrl+K',\n\t\t\t\tariaLabel: 'Control+K Control+K',\n\t\t\t\telectronAccelerator: null,\n\t\t\t\tuserSettingsLabel: 'ctrl+k ctrl+k',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: true,\n\t\t\t\tdispatchParts: ['ctrl+K', 'ctrl+K'],\n\t\t\t\tsingleModifierDispatchParts: [null, null],\n\t\t\t}]\n\t\t);\n\t});\n});\n\nsuite('keyboardMapper - misc', () => {\n\ttest('issue #23513: Toggle Sidebar Visibility and Go to Line display same key mapping in Arabic keyboard', () => {\n\t\tconst mapper = new WindowsKeyboardMapper(false, {\n\t\t\t'KeyB': {\n\t\t\t\t'vkey': 'VK_B',\n\t\t\t\t'value': 'لا',\n\t\t\t\t'withShift': 'لآ',\n\t\t\t\t'withAltGr': '',\n\t\t\t\t'withShiftAltGr': ''\n\t\t\t},\n\t\t\t'KeyG': {\n\t\t\t\t'vkey': 'VK_G',\n\t\t\t\t'value': 'ل',\n\t\t\t\t'withShift': 'لأ',\n\t\t\t\t'withAltGr': '',\n\t\t\t\t'withShiftAltGr': ''\n\t\t\t}\n\t\t});\n\n\t\t_assertResolveKeybinding(\n\t\t\tmapper,\n\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_B,\n\t\t\t[{\n\t\t\t\tlabel: 'Ctrl+B',\n\t\t\t\tariaLabel: 'Control+B',\n\t\t\t\telectronAccelerator: 'Ctrl+B',\n\t\t\t\tuserSettingsLabel: 'ctrl+b',\n\t\t\t\tisWYSIWYG: true,\n\t\t\t\tisChord: false,\n\t\t\t\tdispatchParts: ['ctrl+B'],\n\t\t\t\tsingleModifierDispatchParts: [null],\n\t\t\t}]\n\t\t);\n\t});\n});\n"]}