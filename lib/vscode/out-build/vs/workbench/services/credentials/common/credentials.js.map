{"version":3,"file":"credentials.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/credentials/common/credentials.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKnF,QAAA,mBAAmB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAsB,oBAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ICredentialsService = createDecorator<ICredentialsService>('credentialsService');\n\nexport interface ICredentialsProvider {\n\tgetPassword(service: string, account: string): Promise<string | null>;\n\tsetPassword(service: string, account: string, password: string): Promise<void>;\n\tdeletePassword(service: string, account: string): Promise<boolean>;\n\tfindPassword(service: string): Promise<string | null>;\n\tfindCredentials(service: string): Promise<Array<{ account: string, password: string }>>;\n}\n\nexport interface ICredentialsChangeEvent {\n\tservice: string\n\taccount: string;\n}\n\nexport interface ICredentialsService extends ICredentialsProvider {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangePassword: Event<ICredentialsChangeEvent>;\n}\n"]}