{"version":3,"file":"userDataAutoSyncService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/userDataSync/electron-sandbox/userDataAutoSyncService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAQhG,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;QAO5B,YACwB,oBAA2C;YAElE,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QACpE,CAAC;QAND,IAAI,OAAO,KAA+B,OAAO,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAQ,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,gCAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAQnJ,WAAW,CAAC,OAAiB,EAAE,cAAuB,EAAE,YAAqB;YAC5E,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;QAClF,CAAC;QAED,MAAM;YACL,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QAED,OAAO,CAAC,UAAmB;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;QACnD,CAAC;KAED,CAAA;IAzBK,uBAAuB;QAQ1B,WAAA,gCAAqB,CAAA;OARlB,uBAAuB,CAyB5B;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,uCAAwB,EAAE,uBAAuB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataAutoSyncService, UserDataSyncError } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nclass UserDataAutoSyncService implements IUserDataAutoSyncService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly channel: IChannel;\n\tget onError(): Event<UserDataSyncError> { return Event.map(this.channel.listen<Error>('onError'), e => UserDataSyncError.toUserDataSyncError(e)); }\n\n\tconstructor(\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tthis.channel = sharedProcessService.getChannel('userDataAutoSync');\n\t}\n\n\ttriggerSync(sources: string[], hasToLimitSync: boolean, disableCache: boolean): Promise<void> {\n\t\treturn this.channel.call('triggerSync', [sources, hasToLimitSync, disableCache]);\n\t}\n\n\tturnOn(): Promise<void> {\n\t\treturn this.channel.call('turnOn');\n\t}\n\n\tturnOff(everywhere: boolean): Promise<void> {\n\t\treturn this.channel.call('turnOff', [everywhere]);\n\t}\n\n}\n\nregisterSingleton(IUserDataAutoSyncService, UserDataAutoSyncService);\n"]}