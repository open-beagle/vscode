{"version":3,"file":"userDataSyncStoreManagementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/userDataSync/electron-sandbox/userDataSyncStoreManagementService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAWhG,IAAM,kCAAkC,GAAxC,MAAM,kCAAmC,SAAQ,qEAA0C;QAI1F,YACkB,cAA+B,EACzB,oBAA2C,EACjD,cAA+B,EACzB,oBAA2C;YAElE,KAAK,CAAC,cAAc,EAAE,oBAAoB,EAAE,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iEAA+C,CAAC,oBAAoB,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;YACzJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;QACvG,CAAC;QAED,KAAK,CAAC,MAAM,CAAC,IAA2B;YACvC,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QAED,KAAK,CAAC,4BAA4B;YACjC,OAAO,IAAI,CAAC,aAAa,CAAC,4BAA4B,EAAE,CAAC;QAC1D,CAAC;KAED,CAAA;IAvBK,kCAAkC;QAKrC,WAAA,gCAAe,CAAA;QACf,WAAA,qCAAqB,CAAA;QACrB,WAAA,yBAAe,CAAA;QACf,WAAA,gCAAqB,CAAA;OARlB,kCAAkC,CAuBvC;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,kDAAmC,EAAE,kCAAkC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataSyncStoreManagementService, UserDataSyncStoreType, IUserDataSyncStore } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { AbstractUserDataSyncStoreManagementService } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { UserDataSyncStoreManagementServiceChannelClient } from 'vs/platform/userDataSync/common/userDataSyncIpc';\n\nclass UserDataSyncStoreManagementService extends AbstractUserDataSyncStoreManagementService implements IUserDataSyncStoreManagementService {\n\n\tprivate readonly channelClient: UserDataSyncStoreManagementServiceChannelClient;\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper(productService, configurationService, storageService);\n\t\tthis.channelClient = this._register(new UserDataSyncStoreManagementServiceChannelClient(sharedProcessService.getChannel('userDataSyncStoreManagement')));\n\t\tthis._register(this.channelClient.onDidChangeUserDataSyncStore(() => this.updateUserDataSyncStore()));\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\treturn this.channelClient.switch(type);\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore> {\n\t\treturn this.channelClient.getPreviousUserDataSyncStore();\n\t}\n\n}\n\nregisterSingleton(IUserDataSyncStoreManagementService, UserDataSyncStoreManagementService);\n"]}