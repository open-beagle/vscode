{"version":3,"sources":["vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService.ts"],"names":[],"mappings":"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","file":"userDataSyncWorkbenchService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataSyncService, IAuthenticationProvider, isAuthenticationProvider, IUserDataAutoSyncService, SyncResource, IResourcePreview, ISyncResourcePreview, Change, IManualSyncTask, IUserDataSyncStoreManagementService, SyncStatus, IUserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IUserDataSyncWorkbenchService, IUserDataSyncAccount, AccountStatus, CONTEXT_SYNC_ENABLEMENT, CONTEXT_SYNC_STATE, CONTEXT_ACCOUNT_STATE, SHOW_SYNC_LOG_COMMAND_ID, getSyncAreaLabel, IUserDataSyncPreview, IUserDataSyncResource, CONTEXT_ENABLE_SYNC_MERGES_VIEW, SYNC_MERGES_VIEW_ID, CONTEXT_ENABLE_ACTIVITY_VIEWS, SYNC_VIEW_CONTAINER_ID, SYNC_TITLE } from 'vs/workbench/services/userDataSync/common/userDataSync';\nimport { AuthenticationSession, AuthenticationSessionsChangeEvent } from 'vs/editor/common/modes';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { flatten, equals } from 'vs/base/common/arrays';\nimport { getCurrentAuthenticationSessionInfo, IAuthenticationService } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { localize } from 'vs/nls';\nimport { canceled } from 'vs/base/common/errors';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Action } from 'vs/base/common/actions';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IViewsService, ViewContainerLocation, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { UserDataSyncStoreTypeSynchronizer } from 'vs/platform/userDataSync/common/globalStateSync';\n\ntype UserAccountClassification = {\n\tid: { classification: 'EndUserPseudonymizedInformation', purpose: 'BusinessInsight' };\n};\n\ntype FirstTimeSyncClassification = {\n\taction: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\ntype UserAccountEvent = {\n\tid: string;\n};\n\ntype FirstTimeSyncAction = 'pull' | 'push' | 'merge' | 'manual';\n\ntype AccountQuickPickItem = { label: string, authenticationProvider: IAuthenticationProvider, account?: UserDataSyncAccount, description?: string };\n\nclass UserDataSyncAccount implements IUserDataSyncAccount {\n\n\tconstructor(readonly authenticationProviderId: string, private readonly session: AuthenticationSession) { }\n\n\tget sessionId(): string { return this.session.id; }\n\tget accountName(): string { return this.session.account.label; }\n\tget accountId(): string { return this.session.account.id; }\n\tget token(): string { return this.session.accessToken; }\n}\n\nexport class UserDataSyncWorkbenchService extends Disposable implements IUserDataSyncWorkbenchService {\n\n\t_serviceBrand: any;\n\n\tprivate static DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY = 'userDataSyncAccount.donotUseWorkbenchSession';\n\tprivate static CACHED_SESSION_STORAGE_KEY = 'userDataSyncAccountPreference';\n\n\tget enabled() { return !!this.userDataSyncStoreManagementService.userDataSyncStore; }\n\n\tprivate _authenticationProviders: IAuthenticationProvider[] = [];\n\tget authenticationProviders() { return this._authenticationProviders; }\n\n\tprivate _accountStatus: AccountStatus = AccountStatus.Uninitialized;\n\tget accountStatus(): AccountStatus { return this._accountStatus; }\n\tprivate readonly _onDidChangeAccountStatus = this._register(new Emitter<AccountStatus>());\n\treadonly onDidChangeAccountStatus = this._onDidChangeAccountStatus.event;\n\n\tprivate _all: Map<string, UserDataSyncAccount[]> = new Map<string, UserDataSyncAccount[]>();\n\tget all(): UserDataSyncAccount[] { return flatten([...this._all.values()]); }\n\n\tget current(): UserDataSyncAccount | undefined { return this.all.filter(account => this.isCurrentAccount(account))[0]; }\n\n\tprivate readonly syncEnablementContext: IContextKey<boolean>;\n\tprivate readonly syncStatusContext: IContextKey<string>;\n\tprivate readonly accountStatusContext: IContextKey<string>;\n\tprivate readonly mergesViewEnablementContext: IContextKey<boolean>;\n\tprivate readonly activityViewsEnablementContext: IContextKey<boolean>;\n\n\treadonly userDataSyncPreview: UserDataSyncPreview = this._register(new UserDataSyncPreview(this.userDataSyncService));\n\n\tconstructor(\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataAutoSyncEnablementService private readonly userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService,\n\t\t@IUserDataAutoSyncService private readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.syncEnablementContext = CONTEXT_SYNC_ENABLEMENT.bindTo(contextKeyService);\n\t\tthis.syncStatusContext = CONTEXT_SYNC_STATE.bindTo(contextKeyService);\n\t\tthis.accountStatusContext = CONTEXT_ACCOUNT_STATE.bindTo(contextKeyService);\n\t\tthis.activityViewsEnablementContext = CONTEXT_ENABLE_ACTIVITY_VIEWS.bindTo(contextKeyService);\n\t\tthis.mergesViewEnablementContext = CONTEXT_ENABLE_SYNC_MERGES_VIEW.bindTo(contextKeyService);\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthis.syncStatusContext.set(this.userDataSyncService.status);\n\t\t\tthis._register(userDataSyncService.onDidChangeStatus(status => this.syncStatusContext.set(status)));\n\t\t\tthis.syncEnablementContext.set(userDataAutoSyncEnablementService.isEnabled());\n\t\t\tthis._register(userDataAutoSyncEnablementService.onDidChangeEnablement(enabled => this.syncEnablementContext.set(enabled)));\n\n\t\t\tthis.waitAndInitialize();\n\t\t}\n\t}\n\n\tprivate updateAuthenticationProviders(): void {\n\t\tthis._authenticationProviders = (this.userDataSyncStoreManagementService.userDataSyncStore?.authenticationProviders || []).filter(({ id }) => this.authenticationService.declaredProviders.some(provider => provider.id === id));\n\t}\n\n\tprivate isSupportedAuthenticationProviderId(authenticationProviderId: string): boolean {\n\t\treturn this.authenticationProviders.some(({ id }) => id === authenticationProviderId);\n\t}\n\n\tprivate async waitAndInitialize(): Promise<void> {\n\t\t/* wait */\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\t/* initialize */\n\t\ttry {\n\t\t\tthis.logService.trace('Settings Sync: Initializing accounts');\n\t\t\tawait this.initialize();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\tif (this.accountStatus === AccountStatus.Uninitialized) {\n\t\t\tthis.logService.warn('Settings Sync: Accounts are not initialized');\n\t\t} else {\n\t\t\tthis.logService.trace('Settings Sync: Accounts are initialized');\n\t\t}\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tconst authenticationSession = this.environmentService.options?.credentialsProvider ? await getCurrentAuthenticationSessionInfo(this.environmentService, this.productService) : undefined;\n\t\tif (this.currentSessionId === undefined && this.useWorkbenchSessionId && (authenticationSession?.id)) {\n\t\t\tthis.currentSessionId = authenticationSession?.id;\n\t\t\tthis.useWorkbenchSessionId = false;\n\t\t}\n\n\t\tawait this.update();\n\n\t\tthis._register(this.authenticationService.onDidChangeDeclaredProviders(() => this.updateAuthenticationProviders()));\n\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tEvent.filter(\n\t\t\t\t\tEvent.any(\n\t\t\t\t\t\tthis.authenticationService.onDidRegisterAuthenticationProvider,\n\t\t\t\t\t\tthis.authenticationService.onDidUnregisterAuthenticationProvider,\n\t\t\t\t\t), info => this.isSupportedAuthenticationProviderId(info.id)),\n\t\t\t\tEvent.filter(this.userDataSyncAccountService.onTokenFailed, isSuccessive => !isSuccessive))\n\t\t\t\t(() => this.update()));\n\n\t\tthis._register(Event.filter(this.authenticationService.onDidChangeSessions, e => this.isSupportedAuthenticationProviderId(e.providerId))(({ event }) => this.onDidChangeSessions(event)));\n\t\tthis._register(this.storageService.onDidChangeValue(e => this.onDidChangeStorage(e)));\n\t\tthis._register(Event.filter(this.userDataSyncAccountService.onTokenFailed, isSuccessive => isSuccessive)(() => this.onDidSuccessiveAuthFailures()));\n\t}\n\n\tprivate async update(): Promise<void> {\n\n\t\tthis.updateAuthenticationProviders();\n\n\t\tconst allAccounts: Map<string, UserDataSyncAccount[]> = new Map<string, UserDataSyncAccount[]>();\n\t\tfor (const { id } of this.authenticationProviders) {\n\t\t\tthis.logService.trace('Settings Sync: Getting accounts for', id);\n\t\t\tconst accounts = await this.getAccounts(id);\n\t\t\tallAccounts.set(id, accounts);\n\t\t\tthis.logService.trace('Settings Sync: Updated accounts for', id);\n\t\t}\n\n\t\tthis._all = allAccounts;\n\t\tconst current = this.current;\n\t\tawait this.updateToken(current);\n\t\tthis.updateAccountStatus(current ? AccountStatus.Available : AccountStatus.Unavailable);\n\t}\n\n\tprivate async getAccounts(authenticationProviderId: string): Promise<UserDataSyncAccount[]> {\n\t\tlet accounts: Map<string, UserDataSyncAccount> = new Map<string, UserDataSyncAccount>();\n\t\tlet currentAccount: UserDataSyncAccount | null = null;\n\n\t\tconst sessions = await this.authenticationService.getSessions(authenticationProviderId) || [];\n\t\tfor (const session of sessions) {\n\t\t\tconst account: UserDataSyncAccount = new UserDataSyncAccount(authenticationProviderId, session);\n\t\t\taccounts.set(account.accountName, account);\n\t\t\tif (this.isCurrentAccount(account)) {\n\t\t\t\tcurrentAccount = account;\n\t\t\t}\n\t\t}\n\n\t\tif (currentAccount) {\n\t\t\t// Always use current account if available\n\t\t\taccounts.set(currentAccount.accountName, currentAccount);\n\t\t}\n\n\t\treturn [...accounts.values()];\n\t}\n\n\tprivate async updateToken(current: UserDataSyncAccount | undefined): Promise<void> {\n\t\tlet value: { token: string, authenticationProviderId: string } | undefined = undefined;\n\t\tif (current) {\n\t\t\ttry {\n\t\t\t\tthis.logService.trace('Settings Sync: Updating the token for the account', current.accountName);\n\t\t\t\tconst token = current.token;\n\t\t\t\tthis.logService.trace('Settings Sync: Token updated for the account', current.accountName);\n\t\t\t\tvalue = { token, authenticationProviderId: current.authenticationProviderId };\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tawait this.userDataSyncAccountService.updateAccount(value);\n\t}\n\n\tprivate updateAccountStatus(accountStatus: AccountStatus): void {\n\t\tif (this._accountStatus !== accountStatus) {\n\t\t\tconst previous = this._accountStatus;\n\t\t\tthis.logService.trace(`Settings Sync: Account status changed from ${previous} to ${accountStatus}`);\n\n\t\t\tthis._accountStatus = accountStatus;\n\t\t\tthis.accountStatusContext.set(accountStatus);\n\t\t\tthis._onDidChangeAccountStatus.fire(accountStatus);\n\t\t}\n\t}\n\n\tasync turnOn(): Promise<void> {\n\t\tif (!this.authenticationProviders.length) {\n\t\t\tthrow new Error(localize('no authentication providers', \"Settings sync cannot be turned on because there are no authentication providers available.\"));\n\t\t}\n\t\tif (this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.userDataSyncService.status !== SyncStatus.Idle) {\n\t\t\tthrow new Error('Cannont turn on sync while syncing');\n\t\t}\n\n\t\tconst picked = await this.pick();\n\t\tif (!picked) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\t// User did not pick an account or login failed\n\t\tif (this.accountStatus !== AccountStatus.Available) {\n\t\t\tthrow new Error(localize('no account', \"No account available\"));\n\t\t}\n\n\t\tconst syncTitle = SYNC_TITLE;\n\t\tconst title = `${syncTitle} [(${localize('show log', \"show log\")})](command:${SHOW_SYNC_LOG_COMMAND_ID})`;\n\t\tconst manualSyncTask = await this.userDataSyncService.createManualSyncTask();\n\t\tconst disposable = isWeb\n\t\t\t? Disposable.None /* In web long running shutdown handlers will not work */\n\t\t\t: this.lifecycleService.onBeforeShutdown(e => e.veto(this.onBeforeShutdown(manualSyncTask), 'veto.settingsSync'));\n\n\t\ttry {\n\t\t\tawait this.syncBeforeTurningOn(title, manualSyncTask);\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t}\n\n\t\tawait this.userDataAutoSyncService.turnOn();\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore?.canSwitch) {\n\t\t\tawait this.synchroniseUserDataSyncStoreType();\n\t\t}\n\n\t\tthis.notificationService.info(localize('sync turned on', \"{0} is turned on\", title));\n\t}\n\n\tturnoff(everywhere: boolean): Promise<void> {\n\t\treturn this.userDataAutoSyncService.turnOff(everywhere);\n\t}\n\n\tasync synchroniseUserDataSyncStoreType(): Promise<void> {\n\t\tif (!this.userDataSyncAccountService.account) {\n\t\t\tthrow new Error('Cannot update because you are signed out from settings sync. Please sign in and try again.');\n\t\t}\n\t\tif (!isWeb || !this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\t// Not supported\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreUrl = this.userDataSyncStoreManagementService.userDataSyncStore.type === 'insiders' ? this.userDataSyncStoreManagementService.userDataSyncStore.stableUrl : this.userDataSyncStoreManagementService.userDataSyncStore.insidersUrl;\n\t\tconst userDataSyncStoreClient = this.instantiationService.createInstance(UserDataSyncStoreClient, userDataSyncStoreUrl);\n\t\tuserDataSyncStoreClient.setAuthToken(this.userDataSyncAccountService.account.token, this.userDataSyncAccountService.account.authenticationProviderId);\n\t\tawait this.instantiationService.createInstance(UserDataSyncStoreTypeSynchronizer, userDataSyncStoreClient).sync(this.userDataSyncStoreManagementService.userDataSyncStore.type);\n\t}\n\n\tsyncNow(): Promise<void> {\n\t\treturn this.userDataAutoSyncService.triggerSync(['Sync Now'], false, true);\n\t}\n\n\tprivate async onBeforeShutdown(manualSyncTask: IManualSyncTask): Promise<boolean> {\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: localize('sync in progress', \"Settings Sync is being turned on. Would you like to cancel it?\"),\n\t\t\ttitle: localize('settings sync', \"Settings Sync\"),\n\t\t\tprimaryButton: localize({ key: 'yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n\t\t\tsecondaryButton: localize({ key: 'no', comment: ['&& denotes a mnemonic'] }, \"&&No\"),\n\t\t});\n\t\tif (result.confirmed) {\n\t\t\tawait manualSyncTask.stop();\n\t\t}\n\t\treturn !result.confirmed;\n\t}\n\n\tprivate async syncBeforeTurningOn(title: string, manualSyncTask: IManualSyncTask): Promise<void> {\n\n\t\t/* Make sure sync started on clean local state */\n\t\tawait this.userDataSyncService.resetLocal();\n\n\t\ttry {\n\t\t\tlet action: FirstTimeSyncAction = 'manual';\n\n\t\t\tawait this.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\ttitle,\n\t\t\t\tdelay: 500,\n\t\t\t}, async progress => {\n\t\t\t\tprogress.report({ message: localize('turning on', \"Turning on...\") });\n\n\t\t\t\tconst preview = await manualSyncTask.preview();\n\t\t\t\tconst hasRemoteData = manualSyncTask.manifest !== null;\n\t\t\t\tconst hasLocalData = await this.userDataSyncService.hasLocalData();\n\t\t\t\tconst hasMergesFromAnotherMachine = preview.some(([syncResource, { isLastSyncFromCurrentMachine, resourcePreviews }]) =>\n\t\t\t\t\tsyncResource !== SyncResource.GlobalState && !isLastSyncFromCurrentMachine\n\t\t\t\t\t&& resourcePreviews.some(r => r.localChange !== Change.None || r.remoteChange !== Change.None));\n\n\t\t\t\taction = await this.getFirstTimeSyncAction(hasRemoteData, hasLocalData, hasMergesFromAnotherMachine);\n\t\t\t\tconst progressDisposable = manualSyncTask.onSynchronizeResources(synchronizingResources =>\n\t\t\t\t\tsynchronizingResources.length ? progress.report({ message: localize('syncing resource', \"Syncing {0}...\", getSyncAreaLabel(synchronizingResources[0][0])) }) : undefined);\n\t\t\t\ttry {\n\t\t\t\t\tswitch (action) {\n\t\t\t\t\t\tcase 'merge':\n\t\t\t\t\t\t\tawait manualSyncTask.merge();\n\t\t\t\t\t\t\tif (manualSyncTask.status !== SyncStatus.HasConflicts) {\n\t\t\t\t\t\t\t\tawait manualSyncTask.apply();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase 'pull': return await manualSyncTask.pull();\n\t\t\t\t\t\tcase 'push': return await manualSyncTask.push();\n\t\t\t\t\t\tcase 'manual': return;\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tprogressDisposable.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (manualSyncTask.status === SyncStatus.HasConflicts) {\n\t\t\t\tawait this.dialogService.show(\n\t\t\t\t\tSeverity.Warning,\n\t\t\t\t\tlocalize('conflicts detected', \"Conflicts Detected\"),\n\t\t\t\t\t[localize('merge Manually', \"Merge Manually...\")],\n\t\t\t\t\t{\n\t\t\t\t\t\tdetail: localize('resolve', \"Unable to merge due to conflicts. Please merge manually to continue...\"),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tawait manualSyncTask.discardConflicts();\n\t\t\t\taction = 'manual';\n\t\t\t}\n\t\t\tif (action === 'manual') {\n\t\t\t\tawait this.syncManually(manualSyncTask);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tawait manualSyncTask.stop();\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tmanualSyncTask.dispose();\n\t\t}\n\t}\n\n\tprivate async getFirstTimeSyncAction(hasRemoteData: boolean, hasLocalData: boolean, hasMergesFromAnotherMachine: boolean): Promise<FirstTimeSyncAction> {\n\n\t\tif (!hasLocalData /* no data on local */\n\t\t\t|| !hasRemoteData /* no data on remote */\n\t\t\t|| !hasMergesFromAnotherMachine /* no merges with another machine  */\n\t\t) {\n\t\t\treturn 'merge';\n\t\t}\n\n\t\tconst result = await this.dialogService.show(\n\t\t\tSeverity.Info,\n\t\t\tlocalize('merge or replace', \"Merge or Replace\"),\n\t\t\t[\n\t\t\t\tlocalize('merge', \"Merge\"),\n\t\t\t\tlocalize('replace local', \"Replace Local\"),\n\t\t\t\tlocalize('merge Manually', \"Merge Manually...\"),\n\t\t\t\tlocalize('cancel', \"Cancel\"),\n\t\t\t],\n\t\t\t{\n\t\t\t\tcancelId: 3,\n\t\t\t\tdetail: localize('first time sync detail', \"It looks like you last synced from another machine.\\nWould you like to merge or replace with your data in the cloud?\"),\n\t\t\t}\n\t\t);\n\t\tswitch (result.choice) {\n\t\t\tcase 0:\n\t\t\t\tthis.telemetryService.publicLog2<{ action: string }, FirstTimeSyncClassification>('sync/firstTimeSync', { action: 'merge' });\n\t\t\t\treturn 'merge';\n\t\t\tcase 1:\n\t\t\t\tthis.telemetryService.publicLog2<{ action: string }, FirstTimeSyncClassification>('sync/firstTimeSync', { action: 'pull' });\n\t\t\t\treturn 'pull';\n\t\t\tcase 2:\n\t\t\t\tthis.telemetryService.publicLog2<{ action: string }, FirstTimeSyncClassification>('sync/firstTimeSync', { action: 'manual' });\n\t\t\t\treturn 'manual';\n\t\t}\n\t\tthis.telemetryService.publicLog2<{ action: string }, FirstTimeSyncClassification>('sync/firstTimeSync', { action: 'cancelled' });\n\t\tthrow canceled();\n\t}\n\n\tprivate async syncManually(task: IManualSyncTask): Promise<void> {\n\t\tconst visibleViewContainer = this.viewsService.getVisibleViewContainer(ViewContainerLocation.Sidebar);\n\t\tconst preview = await task.preview();\n\t\tthis.userDataSyncPreview.setManualSyncPreview(task, preview);\n\n\t\tthis.mergesViewEnablementContext.set(true);\n\t\tawait this.waitForActiveSyncViews();\n\t\tawait this.viewsService.openView(SYNC_MERGES_VIEW_ID);\n\n\t\tconst error = await Event.toPromise(this.userDataSyncPreview.onDidCompleteManualSync);\n\t\tthis.userDataSyncPreview.unsetManualSyncPreview();\n\n\t\tthis.mergesViewEnablementContext.set(false);\n\t\tif (visibleViewContainer) {\n\t\t\tthis.viewsService.openViewContainer(visibleViewContainer.id);\n\t\t} else {\n\t\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(SYNC_MERGES_VIEW_ID);\n\t\t\tthis.viewsService.closeViewContainer(viewContainer!.id);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync resetSyncedData(): Promise<void> {\n\t\tconst result = await this.dialogService.confirm({\n\t\t\tmessage: localize('reset', \"This will clear your data in the cloud and stop sync on all your devices.\"),\n\t\t\ttitle: localize('reset title', \"Clear\"),\n\t\t\ttype: 'info',\n\t\t\tprimaryButton: localize({ key: 'resetButton', comment: ['&& denotes a mnemonic'] }, \"&&Reset\"),\n\t\t});\n\t\tif (result.confirmed) {\n\t\t\tawait this.userDataSyncService.resetRemote();\n\t\t}\n\t}\n\n\tasync showSyncActivity(): Promise<void> {\n\t\tthis.activityViewsEnablementContext.set(true);\n\t\tawait this.waitForActiveSyncViews();\n\t\tawait this.viewsService.openViewContainer(SYNC_VIEW_CONTAINER_ID);\n\t}\n\n\tprivate async waitForActiveSyncViews(): Promise<void> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(SYNC_VIEW_CONTAINER_ID);\n\t\tif (viewContainer) {\n\t\t\tconst model = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (!model.activeViewDescriptors.length) {\n\t\t\t\tawait Event.toPromise(Event.filter(model.onDidChangeActiveViewDescriptors, e => model.activeViewDescriptors.length > 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isCurrentAccount(account: UserDataSyncAccount): boolean {\n\t\treturn account.sessionId === this.currentSessionId;\n\t}\n\n\tasync signIn(): Promise<void> {\n\t\tawait this.pick();\n\t}\n\n\tprivate async pick(): Promise<boolean> {\n\t\tconst result = await this.doPick();\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\t\tlet sessionId: string, accountName: string, accountId: string;\n\t\tif (isAuthenticationProvider(result)) {\n\t\t\tconst session = await this.authenticationService.createSession(result.id, result.scopes);\n\t\t\tsessionId = session.id;\n\t\t\taccountName = session.account.label;\n\t\t\taccountId = session.account.id;\n\t\t} else {\n\t\t\tsessionId = result.sessionId;\n\t\t\taccountName = result.accountName;\n\t\t\taccountId = result.accountId;\n\t\t}\n\t\tawait this.switch(sessionId, accountName, accountId);\n\t\treturn true;\n\t}\n\n\tprivate async doPick(): Promise<UserDataSyncAccount | IAuthenticationProvider | undefined> {\n\t\tif (this.authenticationProviders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tawait this.update();\n\n\t\t// Single auth provider and no accounts available\n\t\tif (this.authenticationProviders.length === 1 && !this.all.length) {\n\t\t\treturn this.authenticationProviders[0];\n\t\t}\n\n\t\treturn new Promise<UserDataSyncAccount | IAuthenticationProvider | undefined>(async (c, e) => {\n\t\t\tlet result: UserDataSyncAccount | IAuthenticationProvider | undefined;\n\t\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\t\tconst quickPick = this.quickInputService.createQuickPick<AccountQuickPickItem>();\n\t\t\tdisposables.add(quickPick);\n\n\t\t\tquickPick.title = SYNC_TITLE;\n\t\t\tquickPick.ok = false;\n\t\t\tquickPick.placeholder = localize('choose account placeholder', \"Select an account to sign in\");\n\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\tquickPick.items = this.createQuickpickItems();\n\n\t\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\t\tresult = quickPick.selectedItems[0]?.account ? quickPick.selectedItems[0]?.account : quickPick.selectedItems[0]?.authenticationProvider;\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tc(result);\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate createQuickpickItems(): (AccountQuickPickItem | IQuickPickSeparator)[] {\n\t\tconst quickPickItems: (AccountQuickPickItem | IQuickPickSeparator)[] = [];\n\n\t\t// Signed in Accounts\n\t\tif (this.all.length) {\n\t\t\tconst authenticationProviders = [...this.authenticationProviders].sort(({ id }) => id === this.current?.authenticationProviderId ? -1 : 1);\n\t\t\tquickPickItems.push({ type: 'separator', label: localize('signed in', \"Signed in\") });\n\t\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\t\tconst accounts = (this._all.get(authenticationProvider.id) || []).sort(({ sessionId }) => sessionId === this.current?.sessionId ? -1 : 1);\n\t\t\t\tconst providerName = this.authenticationService.getLabel(authenticationProvider.id);\n\t\t\t\tfor (const account of accounts) {\n\t\t\t\t\tquickPickItems.push({\n\t\t\t\t\t\tlabel: `${account.accountName} (${providerName})`,\n\t\t\t\t\t\tdescription: account.sessionId === this.current?.sessionId ? localize('last used', \"Last Used with Sync\") : undefined,\n\t\t\t\t\t\taccount,\n\t\t\t\t\t\tauthenticationProvider,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tquickPickItems.push({ type: 'separator', label: localize('others', \"Others\") });\n\t\t}\n\n\t\t// Account proviers\n\t\tfor (const authenticationProvider of this.authenticationProviders) {\n\t\t\tconst signedInForProvider = this.all.some(account => account.authenticationProviderId === authenticationProvider.id);\n\t\t\tif (!signedInForProvider || this.authenticationService.supportsMultipleAccounts(authenticationProvider.id)) {\n\t\t\t\tconst providerName = this.authenticationService.getLabel(authenticationProvider.id);\n\t\t\t\tquickPickItems.push({ label: localize('sign in using account', \"Sign in with {0}\", providerName), authenticationProvider });\n\t\t\t}\n\t\t}\n\n\t\treturn quickPickItems;\n\t}\n\n\tprivate async switch(sessionId: string, accountName: string, accountId: string): Promise<void> {\n\t\tconst currentAccount = this.current;\n\t\tif (this.userDataAutoSyncEnablementService.isEnabled() && (currentAccount && currentAccount.accountName !== accountName)) {\n\t\t\t// accounts are switched while sync is enabled.\n\t\t}\n\t\tthis.currentSessionId = sessionId;\n\t\tthis.telemetryService.publicLog2<UserAccountEvent, UserAccountClassification>('sync.userAccount', { id: accountId });\n\t\tawait this.update();\n\t}\n\n\tprivate async onDidSuccessiveAuthFailures(): Promise<void> {\n\t\tthis.telemetryService.publicLog2('sync/successiveAuthFailures');\n\t\tthis.currentSessionId = undefined;\n\t\tawait this.update();\n\n\t\tif (this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\tthis.notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize('successive auth failures', \"Settings sync is suspended because of successive authorization failures. Please sign in again to continue synchronizing\"),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [new Action('sign in', localize('sign in', \"Sign in\"), undefined, true, () => this.signIn())]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onDidChangeSessions(e: AuthenticationSessionsChangeEvent): void {\n\t\tif (this.currentSessionId && e.removed.find(session => session.id === this.currentSessionId)) {\n\t\t\tthis.currentSessionId = undefined;\n\t\t}\n\t\tthis.update();\n\t}\n\n\tprivate onDidChangeStorage(e: IStorageValueChangeEvent): void {\n\t\tif (e.key === UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY && e.scope === StorageScope.GLOBAL\n\t\t\t&& this.currentSessionId !== this.getStoredCachedSessionId() /* This checks if current window changed the value or not */) {\n\t\t\tthis._cachedCurrentSessionId = null;\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tprivate _cachedCurrentSessionId: string | undefined | null = null;\n\tprivate get currentSessionId(): string | undefined {\n\t\tif (this._cachedCurrentSessionId === null) {\n\t\t\tthis._cachedCurrentSessionId = this.getStoredCachedSessionId();\n\t\t}\n\t\treturn this._cachedCurrentSessionId;\n\t}\n\n\tprivate set currentSessionId(cachedSessionId: string | undefined) {\n\t\tif (this._cachedCurrentSessionId !== cachedSessionId) {\n\t\t\tthis._cachedCurrentSessionId = cachedSessionId;\n\t\t\tif (cachedSessionId === undefined) {\n\t\t\t\tthis.storageService.remove(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, StorageScope.GLOBAL);\n\t\t\t} else {\n\t\t\t\tthis.storageService.store(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, cachedSessionId, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getStoredCachedSessionId(): string | undefined {\n\t\treturn this.storageService.get(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, StorageScope.GLOBAL);\n\t}\n\n\tprivate get useWorkbenchSessionId(): boolean {\n\t\treturn !this.storageService.getBoolean(UserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY, StorageScope.GLOBAL, false);\n\t}\n\n\tprivate set useWorkbenchSessionId(useWorkbenchSession: boolean) {\n\t\tthis.storageService.store(UserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY, !useWorkbenchSession, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n}\n\nclass UserDataSyncPreview extends Disposable implements IUserDataSyncPreview {\n\n\tprivate _resources: ReadonlyArray<IUserDataSyncResource> = [];\n\tget resources() { return Object.freeze(this._resources); }\n\tprivate _onDidChangeResources = this._register(new Emitter<ReadonlyArray<IUserDataSyncResource>>());\n\treadonly onDidChangeResources = this._onDidChangeResources.event;\n\n\tprivate _conflicts: ReadonlyArray<IUserDataSyncResource> = [];\n\tget conflicts() { return Object.freeze(this._conflicts); }\n\tprivate _onDidChangeConflicts = this._register(new Emitter<ReadonlyArray<IUserDataSyncResource>>());\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate _onDidCompleteManualSync = this._register(new Emitter<Error | undefined>());\n\treadonly onDidCompleteManualSync = this._onDidCompleteManualSync.event;\n\tprivate manualSync: { preview: [SyncResource, ISyncResourcePreview][], task: IManualSyncTask, disposables: DisposableStore } | undefined;\n\n\tconstructor(\n\t\tprivate readonly userDataSyncService: IUserDataSyncService\n\t) {\n\t\tsuper();\n\t\tthis.updateConflicts(userDataSyncService.conflicts);\n\t\tthis._register(userDataSyncService.onDidChangeConflicts(conflicts => this.updateConflicts(conflicts)));\n\t}\n\n\tsetManualSyncPreview(task: IManualSyncTask, preview: [SyncResource, ISyncResourcePreview][]): void {\n\t\tconst disposables = new DisposableStore();\n\t\tthis.manualSync = { task, preview, disposables };\n\t\tthis.updateResources();\n\t}\n\n\tunsetManualSyncPreview(): void {\n\t\tif (this.manualSync) {\n\t\t\tthis.manualSync.disposables.dispose();\n\t\t\tthis.manualSync = undefined;\n\t\t}\n\t\tthis.updateResources();\n\t}\n\n\tasync accept(syncResource: SyncResource, resource: URI, content?: string | null): Promise<void> {\n\t\tif (this.manualSync) {\n\t\t\tconst syncPreview = await this.manualSync.task.accept(resource, content);\n\t\t\tthis.updatePreview(syncPreview);\n\t\t} else {\n\t\t\tawait this.userDataSyncService.accept(syncResource, resource, content, false);\n\t\t}\n\t}\n\n\tasync merge(resource: URI): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can merge only while syncing manually');\n\t\t}\n\t\tconst syncPreview = await this.manualSync.task.merge(resource);\n\t\tthis.updatePreview(syncPreview);\n\t}\n\n\tasync discard(resource: URI): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can discard only while syncing manually');\n\t\t}\n\t\tconst syncPreview = await this.manualSync.task.discard(resource);\n\t\tthis.updatePreview(syncPreview);\n\t}\n\n\tasync apply(): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can apply only while syncing manually');\n\t\t}\n\n\t\ttry {\n\t\t\tconst syncPreview = await this.manualSync.task.apply();\n\t\t\tthis.updatePreview(syncPreview);\n\t\t\tif (!this._resources.length) {\n\t\t\t\tthis._onDidCompleteManualSync.fire(undefined);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tawait this.manualSync.task.stop();\n\t\t\tthis.updatePreview([]);\n\t\t\tthis._onDidCompleteManualSync.fire(error);\n\t\t}\n\t}\n\n\tasync cancel(): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can cancel only while syncing manually');\n\t\t}\n\t\tawait this.manualSync.task.stop();\n\t\tthis.updatePreview([]);\n\t\tthis._onDidCompleteManualSync.fire(canceled());\n\t}\n\n\tasync pull(): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can pull only while syncing manually');\n\t\t}\n\t\tawait this.manualSync.task.pull();\n\t\tthis.updatePreview([]);\n\t}\n\n\tasync push(): Promise<void> {\n\t\tif (!this.manualSync) {\n\t\t\tthrow new Error('Can push only while syncing manually');\n\t\t}\n\t\tawait this.manualSync.task.push();\n\t\tthis.updatePreview([]);\n\t}\n\n\tprivate updatePreview(preview: [SyncResource, ISyncResourcePreview][]) {\n\t\tif (this.manualSync) {\n\t\t\tthis.manualSync.preview = preview;\n\t\t\tthis.updateResources();\n\t\t}\n\t}\n\n\tprivate updateConflicts(conflicts: [SyncResource, IResourcePreview[]][]): void {\n\t\tconst newConflicts = this.toUserDataSyncResourceGroups(conflicts);\n\t\tif (!equals(newConflicts, this._conflicts, (a, b) => isEqual(a.local, b.local))) {\n\t\t\tthis._conflicts = newConflicts;\n\t\t\tthis._onDidChangeConflicts.fire(this.conflicts);\n\t\t}\n\t}\n\n\tprivate updateResources(): void {\n\t\tconst newResources = this.toUserDataSyncResourceGroups(\n\t\t\t(this.manualSync?.preview || [])\n\t\t\t\t.map(([syncResource, syncResourcePreview]) =>\n\t\t\t\t([\n\t\t\t\t\tsyncResource,\n\t\t\t\t\tsyncResourcePreview.resourcePreviews\n\t\t\t\t]))\n\t\t);\n\t\tif (!equals(newResources, this._resources, (a, b) => isEqual(a.local, b.local) && a.mergeState === b.mergeState)) {\n\t\t\tthis._resources = newResources;\n\t\t\tthis._onDidChangeResources.fire(this.resources);\n\t\t}\n\t}\n\n\tprivate toUserDataSyncResourceGroups(syncResourcePreviews: [SyncResource, IResourcePreview[]][]): IUserDataSyncResource[] {\n\t\treturn flatten(\n\t\t\tsyncResourcePreviews.map(([syncResource, resourcePreviews]) =>\n\t\t\t\tresourcePreviews.map<IUserDataSyncResource>(({ localResource, remoteResource, previewResource, acceptedResource, localChange, remoteChange, mergeState }) =>\n\t\t\t\t\t({ syncResource, local: localResource, remote: remoteResource, merged: previewResource, accepted: acceptedResource, localChange, remoteChange, mergeState })))\n\t\t);\n\t}\n\n}\n\nregisterSingleton(IUserDataSyncWorkbenchService, UserDataSyncWorkbenchService);\n"]}