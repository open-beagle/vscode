{"version":3,"file":"fileWorkingCopy.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workingCopy/test/browser/fileWorkingCopy.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { FileWorkingCopy, FileWorkingCopyState, IFileWorkingCopyModel, IFileWorkingCopyModelContentChangedEvent, IFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/common/fileWorkingCopy';\nimport { bufferToStream, newWriteableBufferStream, streamToBuffer, VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { basename } from 'vs/base/common/resources';\nimport { FileChangesEvent, FileChangeType, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { Promises } from 'vs/base/common/async';\nimport { consumeReadable, consumeStream, isReadableStream } from 'vs/base/common/stream';\n\nexport class TestFileWorkingCopyModel extends Disposable implements IFileWorkingCopyModel {\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<IFileWorkingCopyModelContentChangedEvent>());\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\n\tprivate readonly _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tconstructor(readonly resource: URI, public contents: string) {\n\t\tsuper();\n\t}\n\n\tfireContentChangeEvent(event: IFileWorkingCopyModelContentChangedEvent): void {\n\t\tthis._onDidChangeContent.fire(event);\n\t}\n\n\tupdateContents(newContents: string): void {\n\t\tthis.doUpdate(newContents);\n\t}\n\n\tasync snapshot(token: CancellationToken): Promise<VSBufferReadableStream> {\n\t\tconst stream = newWriteableBufferStream();\n\t\tstream.end(VSBuffer.fromString(this.contents));\n\n\t\treturn stream;\n\t}\n\n\tasync update(contents: VSBufferReadableStream, token: CancellationToken): Promise<void> {\n\t\tthis.doUpdate((await streamToBuffer(contents)).toString());\n\t}\n\n\tprivate doUpdate(newContents: string): void {\n\t\tthis.contents = newContents;\n\n\t\tthis.versionId++;\n\n\t\tthis._onDidChangeContent.fire({ isRedoing: false, isUndoing: false });\n\t}\n\n\tversionId = 0;\n\n\tpushedStackElement = false;\n\n\tpushStackElement(): void {\n\t\tthis.pushedStackElement = true;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._onWillDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class TestFileWorkingCopyModelFactory implements IFileWorkingCopyModelFactory<TestFileWorkingCopyModel> {\n\n\tasync createModel(resource: URI, contents: VSBufferReadableStream, token: CancellationToken): Promise<TestFileWorkingCopyModel> {\n\t\treturn new TestFileWorkingCopyModel(resource, (await streamToBuffer(contents)).toString());\n\t}\n}\n\nsuite('FileWorkingCopy', function () {\n\n\tconst factory = new TestFileWorkingCopyModelFactory();\n\n\tlet resource = URI.file('test/resource');\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tlet workingCopy: FileWorkingCopy<TestFileWorkingCopyModel>;\n\n\tfunction createWorkingCopy(uri: URI = resource) {\n\t\treturn new FileWorkingCopy<TestFileWorkingCopyModel>('testWorkingCopyType', uri, basename(uri), factory, accessor.fileService, accessor.logService, accessor.textFileService, accessor.filesConfigurationService, accessor.workingCopyBackupService, accessor.workingCopyService, accessor.notificationService, accessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService);\n\t}\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tworkingCopy = createWorkingCopy();\n\t});\n\n\tteardown(() => {\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('requires good file system URI', async () => {\n\t\tassert.throws(() => createWorkingCopy(URI.from({ scheme: 'unknown', path: 'somePath' })));\n\t});\n\n\ttest('orphaned tracking', async () => {\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), false);\n\n\t\tlet onDidChangeOrphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\t\taccessor.fileService.notExistsSet.add(resource);\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\tawait onDidChangeOrphanedPromise;\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\n\t\tonDidChangeOrphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\t\taccessor.fileService.notExistsSet.delete(resource);\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.ADDED }], false));\n\n\t\tawait onDidChangeOrphanedPromise;\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), false);\n\t});\n\n\ttest('dirty', async () => {\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\n\t\tlet changeDirtyCounter = 0;\n\t\tworkingCopy.onDidChangeDirty(() => {\n\t\t\tchangeDirtyCounter++;\n\t\t});\n\n\t\tlet contentChangeCounter = 0;\n\t\tworkingCopy.onDidChangeContent(() => {\n\t\t\tcontentChangeCounter++;\n\t\t});\n\n\t\t// Dirty from: Model content change\n\t\tworkingCopy.model?.updateContents('hello dirty');\n\t\tassert.strictEqual(contentChangeCounter, 1);\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 1);\n\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 2);\n\n\t\t// Dirty from: Initial contents\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello dirty stream')) });\n\n\t\tassert.strictEqual(contentChangeCounter, 2); // content of model did not change\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 3);\n\n\t\tawait workingCopy.revert({ soft: true });\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 4);\n\n\t\t// Dirty from: API\n\t\tworkingCopy.markDirty();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 5);\n\n\t\tawait workingCopy.revert();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 6);\n\t});\n\n\ttest('dirty - working copy marks non-dirty when undo reaches saved version ID', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('hello saved state');\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\tworkingCopy.model?.updateContents('changing content once');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// Simulate an undo that goes back to the last (saved) version ID\n\t\tworkingCopy.model!.versionId--;\n\n\t\tworkingCopy.model?.fireContentChangeEvent({ isRedoing: false, isUndoing: true });\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('resolve (without backup)', async () => {\n\t\tlet onDidResolveCounter = 0;\n\t\tworkingCopy.onDidResolve(() => {\n\t\t\tonDidResolveCounter++;\n\t\t});\n\n\t\t// resolve from file\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\t\tassert.strictEqual(onDidResolveCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\n\t\t// dirty resolve returns early\n\t\tworkingCopy.model?.updateContents('hello resolve');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(onDidResolveCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello resolve');\n\n\t\t// dirty resolve with contents updates contents\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello initial contents')) });\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello initial contents');\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\n\t\t// resolve with pending save returns directly\n\t\tconst pendingSave = workingCopy.save();\n\t\tawait workingCopy.resolve();\n\t\tawait pendingSave;\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello initial contents');\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\n\t\t// disposed resolve is not throwing an error\n\t\tworkingCopy.dispose();\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isDisposed(), true);\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\t});\n\n\ttest('resolve (with backup)', async () => {\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello backup')) });\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\t\tawait accessor.workingCopyBackupService.backup(workingCopy, backup.content, undefined, backup.meta);\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(workingCopy), true);\n\n\t\tworkingCopy.dispose();\n\n\t\t// first resolve loads from backup\n\t\tworkingCopy = createWorkingCopy();\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello backup');\n\n\t\tworkingCopy.model.updateContents('hello updated');\n\t\tawait workingCopy.save();\n\n\t\t// subsequent resolve ignores any backups\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\t});\n\n\ttest('resolve (with backup, preserves metadata and orphaned state)', async () => {\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello backup')) });\n\n\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\taccessor.fileService.notExistsSet.add(resource);\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\tawait orphanedPromise;\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\t\tawait accessor.workingCopyBackupService.backup(workingCopy, backup.content, undefined, backup.meta);\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(workingCopy), true);\n\n\t\tworkingCopy.dispose();\n\n\t\tworkingCopy = createWorkingCopy();\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\n\t\tconst backup2 = await workingCopy.backup(CancellationToken.None);\n\t\tassert.deepStrictEqual(backup.meta, backup2.meta);\n\t});\n\n\ttest('resolve (updates orphaned state accordingly)', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\taccessor.fileService.notExistsSet.add(resource);\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\tawait orphanedPromise;\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\n\t\t// resolving clears orphaned state when successful\n\t\taccessor.fileService.notExistsSet.delete(resource);\n\t\tawait workingCopy.resolve({ forceReadFromFile: true });\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), false);\n\n\t\t// resolving adds orphaned state when fail to read\n\t\ttry {\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('file not found', FileOperationResult.FILE_NOT_FOUND);\n\t\t\tawait workingCopy.resolve();\n\t\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\t});\n\n\ttest('resolve (FILE_NOT_MODIFIED_SINCE can be handled for resolved working copies)', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\ttry {\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('file not modified since', FileOperationResult.FILE_NOT_MODIFIED_SINCE);\n\t\t\tawait workingCopy.resolve();\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\t});\n\n\ttest('resolve does not alter content when model content changed in parallel', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tconst resolvePromise = workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('changed content');\n\n\t\tawait resolvePromise;\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'changed content');\n\t});\n\n\ttest('backup', async () => {\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello backup');\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\n\t\tassert.ok(backup.meta);\n\n\t\tlet backupContents: string | undefined = undefined;\n\t\tif (backup.content instanceof VSBuffer) {\n\t\t\tbackupContents = backup.content.toString();\n\t\t} else if (isReadableStream(backup.content)) {\n\t\t\tbackupContents = (await consumeStream(backup.content, chunks => VSBuffer.concat(chunks))).toString();\n\t\t} else if (backup.content) {\n\t\t\tbackupContents = consumeReadable(backup.content, chunks => VSBuffer.concat(chunks)).toString();\n\t\t}\n\n\t\tassert.strictEqual(backupContents, 'hello backup');\n\t});\n\n\ttest('save (no errors)', async () => {\n\t\tlet savedCounter = 0;\n\t\tlet lastSavedReason: SaveReason | undefined = undefined;\n\t\tworkingCopy.onDidSave(reason => {\n\t\t\tsavedCounter++;\n\t\t\tlastSavedReason = reason;\n\t\t});\n\n\t\tlet saveErrorCounter = 0;\n\t\tworkingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t});\n\n\t\t// unresolved\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\n\t\t// simple\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(lastSavedReason, SaveReason.EXPLICIT);\n\t\tassert.strictEqual(workingCopy.model?.pushedStackElement, true);\n\n\t\t// save reason\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait workingCopy.save({ reason: SaveReason.AUTO });\n\n\t\tassert.strictEqual(savedCounter, 2);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(lastSavedReason, SaveReason.AUTO);\n\n\t\t// multiple saves in parallel are fine and result\n\t\t// in a single save when content does not change\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait Promises.settled([\n\t\t\tworkingCopy.save({ reason: SaveReason.AUTO }),\n\t\t\tworkingCopy.save({ reason: SaveReason.EXPLICIT }),\n\t\t\tworkingCopy.save({ reason: SaveReason.WINDOW_CHANGE })\n\t\t]);\n\n\t\tassert.strictEqual(savedCounter, 3);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// multiple saves in parallel are fine and result\n\t\t// in just one save operation (the second one\n\t\t// cancels the first)\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tconst firstSave = workingCopy.save();\n\t\tworkingCopy.model?.updateContents('hello save more');\n\t\tconst secondSave = workingCopy.save();\n\n\t\tawait Promises.settled([firstSave, secondSave]);\n\t\tassert.strictEqual(savedCounter, 4);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// no save when not forced and not dirty\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(savedCounter, 4);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// save when forced even when not dirty\n\t\tawait workingCopy.save({ force: true });\n\t\tassert.strictEqual(savedCounter, 5);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// save clears orphaned\n\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\taccessor.fileService.notExistsSet.add(resource);\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\tawait orphanedPromise;\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), true);\n\n\t\tawait workingCopy.save({ force: true });\n\t\tassert.strictEqual(savedCounter, 6);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ORPHAN), false);\n\t});\n\n\ttest('save (errors)', async () => {\n\t\tlet savedCounter = 0;\n\t\tworkingCopy.onDidSave(reason => {\n\t\t\tsavedCounter++;\n\t\t});\n\n\t\tlet saveErrorCounter = 0;\n\t\tworkingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t});\n\n\t\tawait workingCopy.resolve();\n\n\t\t// save error: any error marks working copy dirty\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy.save({ force: true });\n\t\t} catch (error) {\n\t\t\t// error is expected\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save is a no-op unless forced when in error case\n\t\tawait workingCopy.save({ reason: SaveReason.AUTO });\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save clears error flags when successful\n\t\tawait workingCopy.save({ reason: SaveReason.EXPLICIT });\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ERROR), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// save error: conflict\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error conflict', FileOperationResult.FILE_MODIFIED_SINCE);\n\n\t\t\tawait workingCopy.save({ force: true });\n\t\t} catch (error) {\n\t\t\t// error is expected\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 2);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.CONFLICT), true);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save clears error flags when successful\n\t\tawait workingCopy.save({ reason: SaveReason.EXPLICIT });\n\t\tassert.strictEqual(savedCounter, 2);\n\t\tassert.strictEqual(saveErrorCounter, 2);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.ERROR), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('revert', async () => {\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello revert');\n\n\t\tlet revertedCounter = 0;\n\t\tworkingCopy.onDidRevert(() => {\n\t\t\trevertedCounter++;\n\t\t});\n\n\t\t// revert: soft\n\t\tawait workingCopy.revert({ soft: true });\n\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello revert');\n\n\t\t// revert: not forced\n\t\tawait workingCopy.revert();\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello revert');\n\n\t\t// revert: forced\n\t\tawait workingCopy.revert({ force: true });\n\t\tassert.strictEqual(revertedCounter, 2);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\n\t\t// revert: forced, error\n\t\ttry {\n\t\t\tworkingCopy.model?.updateContents('hello revert');\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy.revert({ force: true });\n\t\t} catch (error) {\n\t\t\t// expected (our error)\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(revertedCounter, 2);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// revert: forced, file not found error is ignored\n\t\ttry {\n\t\t\tworkingCopy.model?.updateContents('hello revert');\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('error', FileOperationResult.FILE_NOT_FOUND);\n\n\t\t\tawait workingCopy.revert({ force: true });\n\t\t} catch (error) {\n\t\t\t// expected (our error)\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(revertedCounter, 3);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('state', async () => {\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), true);\n\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello state')) });\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), true);\n\n\t\tconst savePromise = workingCopy.save();\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), true);\n\n\t\tawait savePromise;\n\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t});\n\n\ttest('joinState', async () => {\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello state')) });\n\n\t\tworkingCopy.save();\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), true);\n\n\t\tawait workingCopy.joinState(FileWorkingCopyState.PENDING_SAVE);\n\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(FileWorkingCopyState.PENDING_SAVE), false);\n\t});\n\n\ttest('isReadonly, isResolved, dispose, isDisposed', async () => {\n\t\tassert.strictEqual(workingCopy.isResolved(), false);\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(workingCopy.isDisposed(), false);\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.ok(workingCopy.model);\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(workingCopy.isDisposed(), false);\n\n\t\tlet disposedEvent = false;\n\t\tworkingCopy.onWillDispose(() => {\n\t\t\tdisposedEvent = true;\n\t\t});\n\n\t\tlet disposedModelEvent = false;\n\t\tworkingCopy.model.onWillDispose(() => {\n\t\t\tdisposedModelEvent = true;\n\t\t});\n\n\t\tworkingCopy.dispose();\n\n\t\tassert.strictEqual(workingCopy.isDisposed(), true);\n\t\tassert.strictEqual(disposedEvent, true);\n\t\tassert.strictEqual(disposedModelEvent, true);\n\t});\n});\n"]}