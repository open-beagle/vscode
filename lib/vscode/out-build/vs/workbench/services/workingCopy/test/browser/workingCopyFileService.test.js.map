{"version":3,"file":"workingCopyFileService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workingCopy/test/browser/workingCopyFileService.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAgBhG,KAAK,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAEpC,IAAI,oBAA2C,CAAC;QAChD,IAAI,QAA6B,CAAC;QAElC,KAAK,CAAC,GAAG,EAAE;YACV,oBAAoB,GAAG,CAAA,GAAA,qDAA6B,CAAA,EAAE,CAAC;YACvD,QAAQ,GAAG,oBAAoB,CAAC,cAAc,CAAC,2CAAmB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACgB,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,OAAO,EAAE,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,KAAK;YAChC,MAAM,UAAU,CAAC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,iBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,KAAK;YAChC,MAAM,UAAU,CAAC,CAAC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,KAAK;YAC1C,MAAM,UAAU,CAAC;gBAChB,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;gBACxC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;gBACxC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;gBACxC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;aAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,KAAK;YAC9B,MAAM,cAAc,CAAC,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3I,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,KAAK;YAC9C,IAAI,WAAW,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC3H,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;YAExG,MAAM,YAAY,GAAG,MAAM,oBAAoB,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAEnJ,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0DAA0D,EAAE,KAAK;YACrE,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC9J,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC9J,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACpI,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACzE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACzE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAE1G,MAAM,YAAY,GAAG,MAAM,oBAAoB,CAAC;gBAC/C,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;gBAC3F,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;aAC3F,EAAE,IAAI,CAAC,CAAC;YAET,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK;YACvC,MAAM,cAAc,CAAC;gBACpB,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;gBAC7G,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;aAAC,EAC9G,IAAI,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK;YAC3D,MAAM,cAAc,CAAC,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACjJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,KAAK;YAC9B,MAAM,cAAc,CAAC,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5I,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,KAAK;YAC9C,IAAI,WAAW,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC3H,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;YAExG,MAAM,YAAY,GAAG,MAAM,oBAAoB,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAE7I,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0DAA0D,EAAE,KAAK;YACrE,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC9J,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAC9J,IAAI,YAAY,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACpI,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACzE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACzE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAE1G,MAAM,YAAY,GAAG,MAAM,oBAAoB,CAAC;gBAC/C,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;gBAC3F,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;aAC3F,CAAC,CAAC;YAEH,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK;YACvC,MAAM,cAAc,CAAC;gBACpB,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;gBAC7G,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;gBAC7G,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;aAAC,EAC9G,KAAK,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK;YAC3D,MAAM,cAAc,CAAC,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,MAAM,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAClJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,KAAK;YACrB,MAAM,MAAM,GAAG,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACrG,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE9F,MAAM,MAAM,GAAG,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACrG,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE9F,IAAI,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEpC,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAExC,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAErC,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAErC,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAExC,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEpC,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,MAAM,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK;YACxC,MAAM,MAAM,GAAG,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACrG,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC9F,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAExC,MAAM,eAAe,GAAG,IAAI,uCAAe,CAAC,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7F,MAAM,YAAY,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,GAAG,EAAE;gBACrF,OAAO,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,IAAI,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,iEAAiE,CAAC,CAAC;YACvG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;YAE9C,YAAY,CAAC,OAAO,EAAE,CAAC;YAEvB,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,uCAAuC,CAAC,CAAC;YAC7E,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAErC,MAAM,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,KAAK;YACzB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,aAAa,GAAuB,SAAS,CAAC;YAElD,MAAM,QAAQ,GAAG,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YAEvD,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;oBACvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACpC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChE,MAAM,CAAC,WAAW,CAAC,SAAS,iBAAuB,CAAC;oBACpD,YAAY,EAAE,CAAC;gBAChB,CAAC;aACD,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC,CAAC,EAAE;gBACvF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;gBAChC,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE;gBACtF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;gBACnD,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAE3F,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAEpC,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE,KAAK;YACzC,MAAM,QAAQ,GAAG,kBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YAEvD,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE;oBACvD,MAAM,CAAA,GAAA,eAAO,CAAA,CAAC,CAAC,CAAC,CAAC;oBACjB,QAAQ,GAAG,KAAK,CAAC,uBAAuB,CAAC;gBAC1C,CAAC;aACD,CAAC,CAAC;YAEH,SAAS;YACT,IAAI,GAAG,GAAG,IAAI,sCAAuB,EAAE,CAAC;YACxC,IAAI,OAAO,GAAqB,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAClG,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,GAAG,KAAK,CAAC;YAEjB,gBAAgB;YAChB,GAAG,GAAG,IAAI,sCAAuB,EAAE,CAAC;YACpC,OAAO,GAAG,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAClF,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,GAAG,KAAK,CAAC;YAEjB,OAAO;YACP,GAAG,GAAG,IAAI,sCAAuB,EAAE,CAAC;YACpC,OAAO,GAAG,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9G,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,GAAG,KAAK,CAAC;YAEjB,OAAO;YACP,GAAG,GAAG,IAAI,sCAAuB,EAAE,CAAC;YACpC,OAAO,GAAG,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9G,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,GAAG,KAAK,CAAC;YAEjB,SAAS;YACT,GAAG,GAAG,IAAI,sCAAuB,EAAE,CAAC;YACpC,OAAO,GAAG,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAC5E,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,GAAG,KAAK,CAAC;YAEjB,WAAW,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,KAAK,UAAU,oBAAoB,CAAC,KAAuB,EAAE,IAAc;YAC1E,IAAI,YAAY,GAAG,CAAC,CAAC;YAErB,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAC,KAAK,EAAC,EAAE;oBAC1B,YAAY,EAAE,CAAC;gBAChB,CAAC;aACD,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC,CAAC,EAAE;gBACvF,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE;gBACtF,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,EAAE;gBACT,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aAC1E;iBAAM;gBACN,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aAC1E;YAED,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,YAAY,CAAC;QACrB,CAAC;QAED,KAAK,UAAU,cAAc,CAAC,KAAqC,EAAE,IAAa,EAAE,WAAqB;YAExG,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC1E,IAAI,WAAW,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;gBAC3H,IAAI,WAAW,GAAwB,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;gBAC1F,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBACvE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAExG,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC5B,WAAW,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClE,IAAI,WAAW,EAAE;oBAChB,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;oBAC5B,WAAW,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBACjD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClE;gBAED,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC;YAEJ,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;oBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACtC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACpC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAE/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACvE,MAAM,CAAC,WAAW,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;qBACxE;oBAED,YAAY,EAAE,CAAC;oBAEf,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,cAAoB,CAAC,aAAmB,CAAC,CAAC;gBAC/E,CAAC;aACD,CAAC,CAAC;YAEH,IAAI,aAAqB,CAAC;YAE1B,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC,CAAC,EAAE;gBACvF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBAE/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACvE,MAAM,CAAC,WAAW,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACxE;gBAED,YAAY,EAAE,CAAC;gBAEf,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;gBAChC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,cAAoB,CAAC,aAAmB,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE;gBACtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACvE,MAAM,CAAC,WAAW,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACxE;gBAED,YAAY,EAAE,CAAC;gBAEf,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,cAAoB,CAAC,aAAmB,CAAC,CAAC;gBAChF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACpD,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,EAAE;gBACT,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aAC9M;iBAAM;gBACN,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aAC9M;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE/C,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,eAAgB,CAAC,QAAQ,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;gBAEvE,IAAI,IAAI,EAAE;oBACT,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACnE;qBAAM;oBACN,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClE;gBACD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAElE,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,WAAW,CAAC,OAAO,EAAE,CAAC;aACtB;YACD,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAEpC,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;QAED,KAAK,UAAU,UAAU,CAAC,SAAgB;YAEzC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAC,QAAQ,EAAC,EAAE;gBAC/D,MAAM,KAAK,GAAG,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;gBACnE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAE5F,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;gBACtB,KAAM,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACxC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/D,OAAO,KAAK,CAAC;YACd,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,aAAa,GAAuB,SAAS,CAAC;YAElD,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;oBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACvC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBACxB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;qBACtE;oBACD,MAAM,CAAC,WAAW,CAAC,SAAS,iBAAuB,CAAC;oBACpD,YAAY,EAAE,CAAC;gBAChB,CAAC;aACD,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC,CAAC,EAAE;gBACvF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACtE;gBACD,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;gBAChC,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE;gBACtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACtE;gBACD,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;gBACnD,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAC1H,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChE,KAAK,CAAC,OAAO,EAAE,CAAC;aAChB;YAED,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAEpC,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;QAED,KAAK,UAAU,UAAU,CAAC,QAAa,EAAE,QAAkB;YAC1D,MAAM,KAAK,GAAG,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YACnE,QAAQ,CAAC,eAAe,CAAC,KAAM,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAE5F,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YACtB,KAAM,CAAC,eAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE/D,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,aAAa,GAAuB,SAAS,CAAC;YAElD,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;gBAC/E,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;oBACvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACpC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACtE,MAAM,CAAC,WAAW,CAAC,SAAS,iBAAuB,CAAC;oBACpD,YAAY,EAAE,CAAC;gBAChB,CAAC;aACD,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC,CAAC,EAAE;gBACvF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACtE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;gBAChC,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE;gBACtF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACtE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,iBAAuB,CAAC;gBACtD,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;gBACnD,YAAY,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAC/F,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChE,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAEpC,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;IACF,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { TextFileEditorModelManager } from 'vs/workbench/services/textfile/common/textFileEditorModelManager';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { toResource } from 'vs/base/test/common/utils';\nimport { workbenchInstantiationService, TestServiceAccessor, TestTextFileEditorModelManager } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperation } from 'vs/platform/files/common/files';\nimport { TestWorkingCopy } from 'vs/workbench/test/common/workbenchTestServices';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ICopyOperation } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { timeout } from 'vs/base/common/async';\n\nsuite('WorkingCopyFileService', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\tteardown(() => {\n\t\t(<TextFileEditorModelManager>accessor.textFileService.files).dispose();\n\t});\n\n\ttest('create - dirty file', async function () {\n\t\tawait testCreate(toResource.call(this, '/path/file.txt'), VSBuffer.fromString('Hello World'));\n\t});\n\n\ttest('delete - dirty file', async function () {\n\t\tawait testDelete([toResource.call(this, '/path/file.txt')]);\n\t});\n\n\ttest('delete multiple - dirty files', async function () {\n\t\tawait testDelete([\n\t\t\ttoResource.call(this, '/path/file1.txt'),\n\t\t\ttoResource.call(this, '/path/file2.txt'),\n\t\t\ttoResource.call(this, '/path/file3.txt'),\n\t\t\ttoResource.call(this, '/path/file4.txt')]);\n\t});\n\n\ttest('move - dirty file', async function () {\n\t\tawait testMoveOrCopy([{ source: toResource.call(this, '/path/file.txt'), target: toResource.call(this, '/path/file_target.txt') }], true);\n\t});\n\n\ttest('move - source identical to target', async function () {\n\t\tlet sourceModel: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel.resource, sourceModel);\n\n\t\tconst eventCounter = await testEventsMoveOrCopy([{ file: { source: sourceModel.resource, target: sourceModel.resource }, overwrite: true }], true);\n\n\t\tsourceModel.dispose();\n\t\tassert.strictEqual(eventCounter, 3);\n\t});\n\n\ttest('move - one source == target and another source != target', async function () {\n\t\tlet sourceModel1: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file1.txt'), 'utf8', undefined);\n\t\tlet sourceModel2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file2.txt'), 'utf8', undefined);\n\t\tlet targetModel2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file_target2.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel1.resource, sourceModel1);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel2.resource, sourceModel2);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(targetModel2.resource, targetModel2);\n\n\t\tconst eventCounter = await testEventsMoveOrCopy([\n\t\t\t{ file: { source: sourceModel1.resource, target: sourceModel1.resource }, overwrite: true },\n\t\t\t{ file: { source: sourceModel2.resource, target: targetModel2.resource }, overwrite: true }\n\t\t], true);\n\n\t\tsourceModel1.dispose();\n\t\tsourceModel2.dispose();\n\t\ttargetModel2.dispose();\n\t\tassert.strictEqual(eventCounter, 3);\n\t});\n\n\ttest('move multiple - dirty file', async function () {\n\t\tawait testMoveOrCopy([\n\t\t\t{ source: toResource.call(this, '/path/file1.txt'), target: toResource.call(this, '/path/file1_target.txt') },\n\t\t\t{ source: toResource.call(this, '/path/file2.txt'), target: toResource.call(this, '/path/file2_target.txt') }],\n\t\t\ttrue);\n\t});\n\n\ttest('move - dirty file (target exists and is dirty)', async function () {\n\t\tawait testMoveOrCopy([{ source: toResource.call(this, '/path/file.txt'), target: toResource.call(this, '/path/file_target.txt') }], true, true);\n\t});\n\n\ttest('copy - dirty file', async function () {\n\t\tawait testMoveOrCopy([{ source: toResource.call(this, '/path/file.txt'), target: toResource.call(this, '/path/file_target.txt') }], false);\n\t});\n\n\ttest('copy - source identical to target', async function () {\n\t\tlet sourceModel: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel.resource, sourceModel);\n\n\t\tconst eventCounter = await testEventsMoveOrCopy([{ file: { source: sourceModel.resource, target: sourceModel.resource }, overwrite: true }]);\n\n\t\tsourceModel.dispose();\n\t\tassert.strictEqual(eventCounter, 3);\n\t});\n\n\ttest('copy - one source == target and another source != target', async function () {\n\t\tlet sourceModel1: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file1.txt'), 'utf8', undefined);\n\t\tlet sourceModel2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file2.txt'), 'utf8', undefined);\n\t\tlet targetModel2: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file_target2.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel1.resource, sourceModel1);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel2.resource, sourceModel2);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(targetModel2.resource, targetModel2);\n\n\t\tconst eventCounter = await testEventsMoveOrCopy([\n\t\t\t{ file: { source: sourceModel1.resource, target: sourceModel1.resource }, overwrite: true },\n\t\t\t{ file: { source: sourceModel2.resource, target: targetModel2.resource }, overwrite: true }\n\t\t]);\n\n\t\tsourceModel1.dispose();\n\t\tsourceModel2.dispose();\n\t\ttargetModel2.dispose();\n\t\tassert.strictEqual(eventCounter, 3);\n\t});\n\n\ttest('copy multiple - dirty file', async function () {\n\t\tawait testMoveOrCopy([\n\t\t\t{ source: toResource.call(this, '/path/file1.txt'), target: toResource.call(this, '/path/file_target1.txt') },\n\t\t\t{ source: toResource.call(this, '/path/file2.txt'), target: toResource.call(this, '/path/file_target2.txt') },\n\t\t\t{ source: toResource.call(this, '/path/file3.txt'), target: toResource.call(this, '/path/file_target3.txt') }],\n\t\t\tfalse);\n\t});\n\n\ttest('copy - dirty file (target exists and is dirty)', async function () {\n\t\tawait testMoveOrCopy([{ source: toResource.call(this, '/path/file.txt'), target: toResource.call(this, '/path/file_target.txt') }], false, true);\n\t});\n\n\ttest('getDirty', async function () {\n\t\tconst model1 = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file-1.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(model1.resource, model1);\n\n\t\tconst model2 = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file-2.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(model2.resource, model2);\n\n\t\tlet dirty = accessor.workingCopyFileService.getDirty(model1.resource);\n\t\tassert.strictEqual(dirty.length, 0);\n\n\t\tawait model1.resolve();\n\t\tmodel1.textEditorModel!.setValue('foo');\n\n\t\tdirty = accessor.workingCopyFileService.getDirty(model1.resource);\n\t\tassert.strictEqual(dirty.length, 1);\n\t\tassert.strictEqual(dirty[0], model1);\n\n\t\tdirty = accessor.workingCopyFileService.getDirty(toResource.call(this, '/path'));\n\t\tassert.strictEqual(dirty.length, 1);\n\t\tassert.strictEqual(dirty[0], model1);\n\n\t\tawait model2.resolve();\n\t\tmodel2.textEditorModel!.setValue('bar');\n\n\t\tdirty = accessor.workingCopyFileService.getDirty(toResource.call(this, '/path'));\n\t\tassert.strictEqual(dirty.length, 2);\n\n\t\tmodel1.dispose();\n\t\tmodel2.dispose();\n\t});\n\n\ttest('registerWorkingCopyProvider', async function () {\n\t\tconst model1 = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file-1.txt'), 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(model1.resource, model1);\n\t\tawait model1.resolve();\n\t\tmodel1.textEditorModel!.setValue('foo');\n\n\t\tconst testWorkingCopy = new TestWorkingCopy(toResource.call(this, '/path/file-2.txt'), true);\n\t\tconst registration = accessor.workingCopyFileService.registerWorkingCopyProvider(() => {\n\t\t\treturn [model1, testWorkingCopy];\n\t\t});\n\n\t\tlet dirty = accessor.workingCopyFileService.getDirty(model1.resource);\n\t\tassert.strictEqual(dirty.length, 2, 'Should return default working copy + working copy from provider');\n\t\tassert.strictEqual(dirty[0], model1);\n\t\tassert.strictEqual(dirty[1], testWorkingCopy);\n\n\t\tregistration.dispose();\n\n\t\tdirty = accessor.workingCopyFileService.getDirty(model1.resource);\n\t\tassert.strictEqual(dirty.length, 1, 'Should have unregistered our provider');\n\t\tassert.strictEqual(dirty[0], model1);\n\n\t\tmodel1.dispose();\n\t});\n\n\ttest('createFolder', async function () {\n\t\tlet eventCounter = 0;\n\t\tlet correlationId: number | undefined = undefined;\n\n\t\tconst resource = toResource.call(this, '/path/folder');\n\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async (files, operation) => {\n\t\t\t\tassert.strictEqual(files.length, 1);\n\t\t\t\tconst file = files[0];\n\t\t\t\tassert.strictEqual(file.target.toString(), resource.toString());\n\t\t\t\tassert.strictEqual(operation, FileOperation.CREATE);\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst listener1 = accessor.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => {\n\t\t\tassert.strictEqual(e.files.length, 1);\n\t\t\tconst file = e.files[0];\n\t\t\tassert.strictEqual(file.target.toString(), resource.toString());\n\t\t\tassert.strictEqual(e.operation, FileOperation.CREATE);\n\t\t\tcorrelationId = e.correlationId;\n\t\t\teventCounter++;\n\t\t});\n\n\t\tconst listener2 = accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tassert.strictEqual(e.files.length, 1);\n\t\t\tconst file = e.files[0];\n\t\t\tassert.strictEqual(file.target.toString(), resource.toString());\n\t\t\tassert.strictEqual(e.operation, FileOperation.CREATE);\n\t\t\tassert.strictEqual(e.correlationId, correlationId);\n\t\t\teventCounter++;\n\t\t});\n\n\t\tawait accessor.workingCopyFileService.createFolder([{ resource }], CancellationToken.None);\n\n\t\tassert.strictEqual(eventCounter, 3);\n\n\t\tparticipant.dispose();\n\t\tlistener1.dispose();\n\t\tlistener2.dispose();\n\t});\n\n\ttest('cancellation of participants', async function () {\n\t\tconst resource = toResource.call(this, '/path/folder');\n\n\t\tlet canceled = false;\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async (files, operation, info, t, token) => {\n\t\t\t\tawait timeout(0);\n\t\t\t\tcanceled = token.isCancellationRequested;\n\t\t\t}\n\t\t});\n\n\t\t// Create\n\t\tlet cts = new CancellationTokenSource();\n\t\tlet promise: Promise<unknown> = accessor.workingCopyFileService.create([{ resource }], cts.token);\n\t\tcts.cancel();\n\t\tawait promise;\n\t\tassert.strictEqual(canceled, true);\n\t\tcanceled = false;\n\n\t\t// Create Folder\n\t\tcts = new CancellationTokenSource();\n\t\tpromise = accessor.workingCopyFileService.createFolder([{ resource }], cts.token);\n\t\tcts.cancel();\n\t\tawait promise;\n\t\tassert.strictEqual(canceled, true);\n\t\tcanceled = false;\n\n\t\t// Move\n\t\tcts = new CancellationTokenSource();\n\t\tpromise = accessor.workingCopyFileService.move([{ file: { source: resource, target: resource } }], cts.token);\n\t\tcts.cancel();\n\t\tawait promise;\n\t\tassert.strictEqual(canceled, true);\n\t\tcanceled = false;\n\n\t\t// Copy\n\t\tcts = new CancellationTokenSource();\n\t\tpromise = accessor.workingCopyFileService.copy([{ file: { source: resource, target: resource } }], cts.token);\n\t\tcts.cancel();\n\t\tawait promise;\n\t\tassert.strictEqual(canceled, true);\n\t\tcanceled = false;\n\n\t\t// Delete\n\t\tcts = new CancellationTokenSource();\n\t\tpromise = accessor.workingCopyFileService.delete([{ resource }], cts.token);\n\t\tcts.cancel();\n\t\tawait promise;\n\t\tassert.strictEqual(canceled, true);\n\t\tcanceled = false;\n\n\t\tparticipant.dispose();\n\t});\n\n\tasync function testEventsMoveOrCopy(files: ICopyOperation[], move?: boolean): Promise<number> {\n\t\tlet eventCounter = 0;\n\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async files => {\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst listener1 = accessor.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => {\n\t\t\teventCounter++;\n\t\t});\n\n\t\tconst listener2 = accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\teventCounter++;\n\t\t});\n\n\t\tif (move) {\n\t\t\tawait accessor.workingCopyFileService.move(files, CancellationToken.None);\n\t\t} else {\n\t\t\tawait accessor.workingCopyFileService.copy(files, CancellationToken.None);\n\t\t}\n\n\t\tparticipant.dispose();\n\t\tlistener1.dispose();\n\t\tlistener2.dispose();\n\t\treturn eventCounter;\n\t}\n\n\tasync function testMoveOrCopy(files: { source: URI, target: URI }[], move: boolean, targetDirty?: boolean): Promise<void> {\n\n\t\tlet eventCounter = 0;\n\t\tconst models = await Promise.all(files.map(async ({ source, target }, i) => {\n\t\t\tlet sourceModel: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, source, 'utf8', undefined);\n\t\t\tlet targetModel: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, target, 'utf8', undefined);\n\t\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(sourceModel.resource, sourceModel);\n\t\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(targetModel.resource, targetModel);\n\n\t\t\tawait sourceModel.resolve();\n\t\t\tsourceModel.textEditorModel!.setValue('foo' + i);\n\t\t\tassert.ok(accessor.textFileService.isDirty(sourceModel.resource));\n\t\t\tif (targetDirty) {\n\t\t\t\tawait targetModel.resolve();\n\t\t\t\ttargetModel.textEditorModel!.setValue('bar' + i);\n\t\t\t\tassert.ok(accessor.textFileService.isDirty(targetModel.resource));\n\t\t\t}\n\n\t\t\treturn { sourceModel, targetModel };\n\t\t}));\n\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async (files, operation) => {\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tconst { target, source } = files[i];\n\t\t\t\t\tconst { targetModel, sourceModel } = models[i];\n\n\t\t\t\t\tassert.strictEqual(target.toString(), targetModel.resource.toString());\n\t\t\t\t\tassert.strictEqual(source?.toString(), sourceModel.resource.toString());\n\t\t\t\t}\n\n\t\t\t\teventCounter++;\n\n\t\t\t\tassert.strictEqual(operation, move ? FileOperation.MOVE : FileOperation.COPY);\n\t\t\t}\n\t\t});\n\n\t\tlet correlationId: number;\n\n\t\tconst listener1 = accessor.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => {\n\t\t\tfor (let i = 0; i < e.files.length; i++) {\n\t\t\t\tconst { target, source } = files[i];\n\t\t\t\tconst { targetModel, sourceModel } = models[i];\n\n\t\t\t\tassert.strictEqual(target.toString(), targetModel.resource.toString());\n\t\t\t\tassert.strictEqual(source?.toString(), sourceModel.resource.toString());\n\t\t\t}\n\n\t\t\teventCounter++;\n\n\t\t\tcorrelationId = e.correlationId;\n\t\t\tassert.strictEqual(e.operation, move ? FileOperation.MOVE : FileOperation.COPY);\n\t\t});\n\n\t\tconst listener2 = accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tfor (let i = 0; i < e.files.length; i++) {\n\t\t\t\tconst { target, source } = files[i];\n\t\t\t\tconst { targetModel, sourceModel } = models[i];\n\t\t\t\tassert.strictEqual(target.toString(), targetModel.resource.toString());\n\t\t\t\tassert.strictEqual(source?.toString(), sourceModel.resource.toString());\n\t\t\t}\n\n\t\t\teventCounter++;\n\n\t\t\tassert.strictEqual(e.operation, move ? FileOperation.MOVE : FileOperation.COPY);\n\t\t\tassert.strictEqual(e.correlationId, correlationId);\n\t\t});\n\n\t\tif (move) {\n\t\t\tawait accessor.workingCopyFileService.move(models.map(model => ({ file: { source: model.sourceModel.resource, target: model.targetModel.resource }, options: { overwrite: true } })), CancellationToken.None);\n\t\t} else {\n\t\t\tawait accessor.workingCopyFileService.copy(models.map(model => ({ file: { source: model.sourceModel.resource, target: model.targetModel.resource }, options: { overwrite: true } })), CancellationToken.None);\n\t\t}\n\n\t\tfor (let i = 0; i < models.length; i++) {\n\t\t\tconst { sourceModel, targetModel } = models[i];\n\n\t\t\tassert.strictEqual(targetModel.textEditorModel!.getValue(), 'foo' + i);\n\n\t\t\tif (move) {\n\t\t\t\tassert.ok(!accessor.textFileService.isDirty(sourceModel.resource));\n\t\t\t} else {\n\t\t\t\tassert.ok(accessor.textFileService.isDirty(sourceModel.resource));\n\t\t\t}\n\t\t\tassert.ok(accessor.textFileService.isDirty(targetModel.resource));\n\n\t\t\tsourceModel.dispose();\n\t\t\ttargetModel.dispose();\n\t\t}\n\t\tassert.strictEqual(eventCounter, 3);\n\n\t\tparticipant.dispose();\n\t\tlistener1.dispose();\n\t\tlistener2.dispose();\n\t}\n\n\tasync function testDelete(resources: URI[]) {\n\n\t\tconst models = await Promise.all(resources.map(async resource => {\n\t\t\tconst model = instantiationService.createInstance(TextFileEditorModel, resource, 'utf8', undefined);\n\t\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\t\tawait model.resolve();\n\t\t\tmodel!.textEditorModel!.setValue('foo');\n\t\t\tassert.ok(accessor.workingCopyService.isDirty(model.resource));\n\t\t\treturn model;\n\t\t}));\n\n\t\tlet eventCounter = 0;\n\t\tlet correlationId: number | undefined = undefined;\n\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async (files, operation) => {\n\t\t\t\tfor (let i = 0; i < models.length; i++) {\n\t\t\t\t\tconst model = models[i];\n\t\t\t\t\tconst file = files[i];\n\t\t\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\t\t}\n\t\t\t\tassert.strictEqual(operation, FileOperation.DELETE);\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst listener1 = accessor.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => {\n\t\t\tfor (let i = 0; i < models.length; i++) {\n\t\t\t\tconst model = models[i];\n\t\t\t\tconst file = e.files[i];\n\t\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\t}\n\t\t\tassert.strictEqual(e.operation, FileOperation.DELETE);\n\t\t\tcorrelationId = e.correlationId;\n\t\t\teventCounter++;\n\t\t});\n\n\t\tconst listener2 = accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tfor (let i = 0; i < models.length; i++) {\n\t\t\t\tconst model = models[i];\n\t\t\t\tconst file = e.files[i];\n\t\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\t}\n\t\t\tassert.strictEqual(e.operation, FileOperation.DELETE);\n\t\t\tassert.strictEqual(e.correlationId, correlationId);\n\t\t\teventCounter++;\n\t\t});\n\n\t\tawait accessor.workingCopyFileService.delete(models.map(model => ({ resource: model.resource })), CancellationToken.None);\n\t\tfor (const model of models) {\n\t\t\tassert.ok(!accessor.workingCopyService.isDirty(model.resource));\n\t\t\tmodel.dispose();\n\t\t}\n\n\t\tassert.strictEqual(eventCounter, 3);\n\n\t\tparticipant.dispose();\n\t\tlistener1.dispose();\n\t\tlistener2.dispose();\n\t}\n\n\tasync function testCreate(resource: URI, contents: VSBuffer) {\n\t\tconst model = instantiationService.createInstance(TextFileEditorModel, resource, 'utf8', undefined);\n\t\t(<TestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\tawait model.resolve();\n\t\tmodel!.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.workingCopyService.isDirty(model.resource));\n\n\t\tlet eventCounter = 0;\n\t\tlet correlationId: number | undefined = undefined;\n\n\t\tconst participant = accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async (files, operation) => {\n\t\t\t\tassert.strictEqual(files.length, 1);\n\t\t\t\tconst file = files[0];\n\t\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\t\tassert.strictEqual(operation, FileOperation.CREATE);\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst listener1 = accessor.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => {\n\t\t\tassert.strictEqual(e.files.length, 1);\n\t\t\tconst file = e.files[0];\n\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\tassert.strictEqual(e.operation, FileOperation.CREATE);\n\t\t\tcorrelationId = e.correlationId;\n\t\t\teventCounter++;\n\t\t});\n\n\t\tconst listener2 = accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tassert.strictEqual(e.files.length, 1);\n\t\t\tconst file = e.files[0];\n\t\t\tassert.strictEqual(file.target.toString(), model.resource.toString());\n\t\t\tassert.strictEqual(e.operation, FileOperation.CREATE);\n\t\t\tassert.strictEqual(e.correlationId, correlationId);\n\t\t\teventCounter++;\n\t\t});\n\n\t\tawait accessor.workingCopyFileService.create([{ resource, contents }], CancellationToken.None);\n\t\tassert.ok(!accessor.workingCopyService.isDirty(model.resource));\n\t\tmodel.dispose();\n\n\t\tassert.strictEqual(eventCounter, 3);\n\n\t\tparticipant.dispose();\n\t\tlistener1.dispose();\n\t\tlistener2.dispose();\n\t}\n});\n"]}