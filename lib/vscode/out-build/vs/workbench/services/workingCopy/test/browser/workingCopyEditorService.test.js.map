{"version":3,"file":"workingCopyEditorService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workingCopy/test/browser/workingCopyEditorService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorService } from 'vs/workbench/services/editor/browser/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { IWorkingCopyEditorHandler, WorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\nimport { createEditorPart, registerTestResourceEditor, TestEditorService, TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestWorkingCopy } from 'vs/workbench/test/common/workbenchTestServices';\n\nsuite('WorkingCopyEditorService', () => {\n\n\tlet disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestResourceEditor());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('registry - basics', () => {\n\t\tconst service = new WorkingCopyEditorService(new TestEditorService());\n\n\t\tlet handlerEvent: IWorkingCopyEditorHandler | undefined = undefined;\n\t\tservice.onDidRegisterHandler(handler => {\n\t\t\thandlerEvent = handler;\n\t\t});\n\n\t\tconst editorHandler: IWorkingCopyEditorHandler = {\n\t\t\thandles: workingCopy => false,\n\t\t\tisOpen: () => false,\n\t\t\tcreateEditor: workingCopy => { throw new Error(); }\n\t\t};\n\n\t\tconst disposable = service.registerHandler(editorHandler);\n\n\t\tassert.strictEqual(handlerEvent, editorHandler);\n\n\t\tdisposable.dispose();\n\t});\n\n\ttest('findEditor', async () => {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst instantiationService = workbenchInstantiationService();\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\t\tconst editorService = instantiationService.createInstance(EditorService);\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tconst service = new WorkingCopyEditorService(editorService);\n\n\t\tconst resource = URI.parse('custom://some/folder/custom.txt');\n\t\tconst testWorkingCopy = new TestWorkingCopy(resource, false, 'testWorkingCopyTypeId1');\n\n\t\tassert.strictEqual(service.findEditor(testWorkingCopy), undefined);\n\n\t\tconst editorHandler: IWorkingCopyEditorHandler = {\n\t\t\thandles: workingCopy => workingCopy === testWorkingCopy,\n\t\t\tisOpen: (workingCopy, editor) => workingCopy === testWorkingCopy,\n\t\t\tcreateEditor: workingCopy => { throw new Error(); }\n\t\t};\n\n\t\tdisposables.add(service.registerHandler(editorHandler));\n\n\t\tconst editor1 = instantiationService.createInstance(UntitledTextEditorInput, accessor.untitledTextEditorService.create({ initialValue: 'foo' }));\n\t\tconst editor2 = instantiationService.createInstance(UntitledTextEditorInput, accessor.untitledTextEditorService.create({ initialValue: 'foo' }));\n\n\t\tawait editorService.openEditors([{ editor: editor1 }, { editor: editor2 }]);\n\n\t\tassert.ok(service.findEditor(testWorkingCopy));\n\n\t\tdisposables.dispose();\n\t});\n});\n"]}