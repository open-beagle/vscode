{"version":3,"file":"fileWorkingCopyManager.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workingCopy/test/browser/fileWorkingCopyManager.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAchG,KAAK,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAEpC,IAAI,oBAA2C,CAAC;QAChD,IAAI,QAA6B,CAAC;QAElC,IAAI,OAA0D,CAAC;QAE/D,KAAK,CAAC,GAAG,EAAE;YACV,oBAAoB,GAAG,CAAA,GAAA,qDAA6B,CAAA,EAAE,CAAC;YACvD,QAAQ,GAAG,oBAAoB,CAAC,cAAc,CAAC,2CAAmB,CAAC,CAAC;YAEpE,MAAM,OAAO,GAAG,IAAI,sDAA+B,EAAE,CAAC;YACtD,OAAO,GAAG,IAAI,+CAAsB,CAA2B,qBAAqB,EAAE,OAAO,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,YAAY,EAAE,oBAAoB,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,sBAAsB,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAC7S,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACb,OAAO,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExC,MAAM,MAAM,GAA8C,EAAE,CAAC;YAC7D,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBAClD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjD,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,4CAA4C;YAC9E,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEpD,MAAM,YAAY,GAAG,MAAM,cAAc,CAAC;YAC1C,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC;YAExD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACpD,YAAY,CAAC,OAAO,EAAE,CAAC;YAEvB,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC;YACxD,YAAY,CAAC,OAAO,EAAE,CAAC;YAEvB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEpD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACpF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YAEpF,QAAQ,CAAC,OAAO,EAAE,CAAC;YAEnB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAChC,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE7C,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEpD,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,MAAM,YAAY,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;gBAChD,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE;oBACzB,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,EAAE;wBAC5D,UAAU,GAAG,IAAI,CAAC;wBAClB,OAAO,EAAE,CAAC;qBACV;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAEvD,MAAM,YAAY,CAAC;YAEnB,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;;YAChD,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExC,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;YACtH,MAAM,CAAC,WAAW,CAAC,MAAA,WAAW,CAAC,KAAK,0CAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;YACnG,MAAM,CAAC,WAAW,CAAC,MAAA,WAAW,CAAC,KAAK,0CAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,WAAW,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;;YACzE,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExC,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC/C,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;YAClH,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;YAElH,MAAM,YAAY,CAAC;YACnB,MAAM,aAAa,CAAC;YACpB,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC;YAEvC,MAAM,CAAC,WAAW,CAAC,MAAA,WAAW,CAAC,KAAK,0CAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,WAAW,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1C,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1C,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAE1C,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAChD,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACjD,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAEhD,MAAM,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC;YAElH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3E,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3E,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAE3E,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;;YAC9E,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExC,IAAI,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;YAEpH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAErE,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAE7C,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,CAAA,GAAA,uBAAc,CAAA,CAAC,iBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;YAEhH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAErE,MAAA,WAAW,CAAC,KAAK,0CAAE,OAAO,EAAE,CAAC;YAC7B,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;;YACzB,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC9C,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE9C,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,IAAI,YAAY,GAAG,CAAC,CAAC;YAErB,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBACjC,cAAc,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;gBAClC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,QAAQ,EAAE,EAAE;oBAC7D,eAAe,EAAE,CAAC;iBAClB;YACF,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE;gBACtC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,QAAQ,EAAE,EAAE;oBAC7D,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE;wBAC1B,eAAe,EAAE,CAAC;qBAClB;yBAAM;wBACN,kBAAkB,EAAE,CAAC;qBACrB;iBACD;YACF,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBACjC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,QAAQ,EAAE,EAAE;oBAC7D,eAAe,EAAE,CAAC;iBAClB;YACF,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;gBACrC,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,QAAQ,EAAE,EAAE;oBAC7D,YAAY,EAAE,CAAC;iBACf;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAEtC,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,wBAAgB,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,iBAAwB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAC3H,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,wBAAgB,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,eAAsB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAEzH,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAEtC,MAAA,YAAY,CAAC,KAAK,0CAAE,cAAc,CAAC,SAAS,CAAC,CAAC;YAE9C,MAAM,YAAY,CAAC,MAAM,EAAE,CAAC;YAC5B,MAAA,YAAY,CAAC,KAAK,0CAAE,cAAc,CAAC,eAAe,CAAC,CAAC;YAEpD,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;YAC1B,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;YAEvB,MAAM,YAAY,CAAC,MAAM,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAEtC,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAClE,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE7C,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEpD,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,MAAM,YAAY,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;gBAChD,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE;oBACzB,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,EAAE;wBAC5D,UAAU,GAAG,IAAI,CAAC;wBAClB,OAAO,EAAE,CAAC;qBACV;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,wBAAgB,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,iBAAwB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAEhH,MAAM,YAAY,CAAC;YAEnB,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;;YAC3D,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE9C,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAA,WAAW,CAAC,KAAK,0CAAE,cAAc,CAAC,cAAc,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,MAAM,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YACrF,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;YACnD,OAAO,2BAA2B,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;YACnD,OAAO,2BAA2B,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,KAAK,UAAU,2BAA2B,CAAC,IAAa;;YACvD,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE3C,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,MAAA,iBAAiB,CAAC,KAAK,0CAAE,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEtD,IAAI,IAAI,EAAE;gBACT,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aACnG;iBAAM;gBACN,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aACnG;YAED,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,MAAA,iBAAiB,CAAC,KAAK,0CAAE,QAAQ,EAAE,oBAAoB,CAAC,CAAC;QAC7E,CAAC;QAED,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;;YAC3D,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE9C,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAA,WAAW,CAAC,KAAK,0CAAE,cAAc,CAAC,cAAc,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,MAAM,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YACrF,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;;YAC1E,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,MAAA,iBAAiB,CAAC,KAAK,0CAAE,cAAc,CAAC,YAAY,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YAEtD,MAAM,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAE3G,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,MAAA,iBAAiB,CAAC,KAAK,0CAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,+CAA+C;QAE/C,IAAI,CAAC,4DAA4D,EAAE,GAAG,EAAE;YACvE,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4EAA4E,EAAE,KAAK,IAAI,EAAE;YAC7F,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;YAClF,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,6CAA6C;QAE7C,IAAI,CAAC,0DAA0D,EAAE,GAAG,EAAE;YACrE,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;YAC3F,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAChF,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,6CAA6C;QAE7C,IAAI,CAAC,0DAA0D,EAAE,GAAG,EAAE;YACrE,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;YAC3F,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAChF,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,2CAA2C;QAE3C,IAAI,CAAC,wDAAwD,EAAE,GAAG,EAAE;YACnE,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE5C,OAAO,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,KAAK,UAAU,UAAU,CAAC,MAAW,EAAE,MAAW,EAAE,aAAsB,EAAE,aAAsB;;YACjG,IAAI,iBAAiB,GAA2D,SAAS,CAAC;YAC1F,IAAI,aAAa,EAAE;gBAClB,iBAAiB,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClD,MAAA,iBAAiB,CAAC,KAAK,0CAAE,cAAc,CAAC,aAAa,CAAC,CAAC;gBACvD,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC;aACvC;YAED,IAAI,iBAAiB,GAA2D,SAAS,CAAC;YAC1F,IAAI,aAAa,EAAE;gBAClB,iBAAiB,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClD,MAAA,iBAAiB,CAAC,KAAK,0CAAE,cAAc,CAAC,aAAa,CAAC,CAAC;gBACvD,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC;aACvC;YAED,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,aAAa,EAAE;gBAChF,qEAAqE;gBACrE,wEAAwE;gBACxE,sEAAsE;gBACtE,wBAAwB;gBACxB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;aACnE;iBAAM;gBACN,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;aACnE;YAED,IAAI,aAAa,EAAE;gBAClB,MAAM,CAAC,WAAW,CAAC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;aACxD;YAED,IAAI,aAAa,EAAE;gBAClB,MAAM,CAAC,WAAW,CAAC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;aACxD;QACF,CAAC;QAED,IAAI,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;;YACrD,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YAEvD,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAA,WAAW,CAAC,KAAK,0CAAE,cAAc,CAAC,YAAY,CAAC,CAAC;YAEhD,IAAI,iBAAiB,GAAG,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACxD,MAAM,CAAC,EAAE,CAAC,iBAAiB,YAAY,OAAO,CAAC,CAAC;YAEhD,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,CAAC,KAAK,IAAI,EAAE;gBACX,UAAU,GAAG,MAAM,iBAAiB,CAAC;YACtC,CAAC,CAAC,EAAE,CAAC;YAEL,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACtC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAEnC,MAAM,CAAA,GAAA,eAAO,CAAA,CAAC,CAAC,CAAC,CAAC;YAEjB,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAErC,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;;YACjD,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAEzD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,MAAA,YAAY,CAAC,KAAK,0CAAE,cAAc,CAAC,YAAY,CAAC,CAAC;YAEjD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACtD,MAAA,YAAY,CAAC,KAAK,0CAAE,cAAc,CAAC,YAAY,CAAC,CAAC;YAEjD,IAAI,MAAM,GAAG,KAAK,CAAC;YACnB,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC7B,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,MAAM,GAAG,KAAK,CAAC;YACnB,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC7B,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,IAAI,6CAAqB,EAAE,CAAC;YAC1C,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAElD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClC,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE/B,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { workbenchInstantiationService, TestServiceAccessor, TestWillShutdownEvent } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { FileWorkingCopyManager, IFileWorkingCopyManager } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\nimport { IFileWorkingCopy, IFileWorkingCopyModel } from 'vs/workbench/services/workingCopy/common/fileWorkingCopy';\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { FileChangesEvent, FileChangeType } from 'vs/platform/files/common/files';\nimport { timeout } from 'vs/base/common/async';\nimport { TestFileWorkingCopyModel, TestFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/fileWorkingCopy.test';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nsuite('FileWorkingCopyManager', () => {\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet manager: IFileWorkingCopyManager<TestFileWorkingCopyModel>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService();\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tconst factory = new TestFileWorkingCopyModelFactory();\n\t\tmanager = new FileWorkingCopyManager<TestFileWorkingCopyModel>('testWorkingCopyType', factory, accessor.fileService, accessor.lifecycleService, accessor.labelService, instantiationService, accessor.logService, accessor.fileDialogService, accessor.workingCopyFileService, accessor.uriIdentityService);\n\t});\n\n\tteardown(() => {\n\t\tmanager.dispose();\n\t});\n\n\ttest('resolve', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst events: IFileWorkingCopy<IFileWorkingCopyModel>[] = [];\n\t\tconst listener = manager.onDidCreate(workingCopy => {\n\t\t\tevents.push(workingCopy);\n\t\t});\n\n\t\tconst resolvePromise = manager.resolve(resource);\n\t\tassert.ok(manager.get(resource)); // working copy known even before resolved()\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\n\t\tconst workingCopy1 = await resolvePromise;\n\t\tassert.ok(workingCopy1);\n\t\tassert.ok(workingCopy1.model);\n\t\tassert.strictEqual(workingCopy1.typeId, 'testWorkingCopyType');\n\t\tassert.strictEqual(manager.get(resource), workingCopy1);\n\n\t\tconst workingCopy2 = await manager.resolve(resource);\n\t\tassert.strictEqual(workingCopy2, workingCopy1);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\t\tworkingCopy1.dispose();\n\n\t\tconst workingCopy3 = await manager.resolve(resource);\n\t\tassert.notStrictEqual(workingCopy3, workingCopy2);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.get(resource), workingCopy3);\n\t\tworkingCopy3.dispose();\n\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\n\t\tassert.strictEqual(events.length, 2);\n\t\tassert.strictEqual(events[0].resource.toString(), workingCopy1.resource.toString());\n\t\tassert.strictEqual(events[1].resource.toString(), workingCopy2.resource.toString());\n\n\t\tlistener.dispose();\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t\tworkingCopy3.dispose();\n\t});\n\n\ttest('resolve async', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\n\t\tlet didResolve = false;\n\t\tconst onDidResolve = new Promise<void>(resolve => {\n\t\t\tmanager.onDidResolve(() => {\n\t\t\t\tif (workingCopy.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tmanager.resolve(resource, { reload: { async: true } });\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('resolve with initial contents', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst workingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello World');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('More Changes')) });\n\t\tassert.strictEqual(workingCopy.model?.contents, 'More Changes');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('multiple resolves execute in sequence (same resources)', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst firstPromise = manager.resolve(resource);\n\t\tconst secondPromise = manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\t\tconst thirdPromise = manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('More Changes')) });\n\n\t\tawait firstPromise;\n\t\tawait secondPromise;\n\t\tconst workingCopy = await thirdPromise;\n\n\t\tassert.strictEqual(workingCopy.model?.contents, 'More Changes');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('multiple resolves execute in parallel (different resources)', async () => {\n\t\tconst resource1 = URI.file('/test1.html');\n\t\tconst resource2 = URI.file('/test2.html');\n\t\tconst resource3 = URI.file('/test3.html');\n\n\t\tconst firstPromise = manager.resolve(resource1);\n\t\tconst secondPromise = manager.resolve(resource2);\n\t\tconst thirdPromise = manager.resolve(resource3);\n\n\t\tconst [workingCopy1, workingCopy2, workingCopy3] = await Promise.all([firstPromise, secondPromise, thirdPromise]);\n\n\t\tassert.strictEqual(manager.workingCopies.length, 3);\n\t\tassert.strictEqual(workingCopy1.resource.toString(), resource1.toString());\n\t\tassert.strictEqual(workingCopy2.resource.toString(), resource2.toString());\n\t\tassert.strictEqual(workingCopy3.resource.toString(), resource3.toString());\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t\tworkingCopy3.dispose();\n\t});\n\n\ttest('removed from cache when working copy or model gets disposed', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tlet workingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), workingCopy);\n\n\t\tworkingCopy.dispose();\n\t\tassert(!manager.get(URI.file('/test.html')));\n\n\t\tworkingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), workingCopy);\n\n\t\tworkingCopy.model?.dispose();\n\t\tassert(!manager.get(URI.file('/test.html')));\n\t});\n\n\ttest('events', async () => {\n\t\tconst resource1 = URI.file('/path/index.txt');\n\t\tconst resource2 = URI.file('/path/other.txt');\n\n\t\tlet createdCounter = 0;\n\t\tlet resolvedCounter = 0;\n\t\tlet gotDirtyCounter = 0;\n\t\tlet gotNonDirtyCounter = 0;\n\t\tlet revertedCounter = 0;\n\t\tlet savedCounter = 0;\n\n\t\tmanager.onDidCreate(workingCopy => {\n\t\t\tcreatedCounter++;\n\t\t});\n\n\t\tmanager.onDidResolve(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tresolvedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidChangeDirty(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tif (workingCopy.isDirty()) {\n\t\t\t\t\tgotDirtyCounter++;\n\t\t\t\t} else {\n\t\t\t\t\tgotNonDirtyCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidRevert(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\trevertedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tmanager.onDidSave(({ workingCopy }) => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tsavedCounter++;\n\t\t\t}\n\t\t});\n\n\t\tconst workingCopy1 = await manager.resolve(resource1);\n\t\tassert.strictEqual(resolvedCounter, 1);\n\t\tassert.strictEqual(createdCounter, 1);\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.DELETED }], false));\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.ADDED }], false));\n\n\t\tconst workingCopy2 = await manager.resolve(resource2);\n\t\tassert.strictEqual(resolvedCounter, 2);\n\t\tassert.strictEqual(createdCounter, 2);\n\n\t\tworkingCopy1.model?.updateContents('changed');\n\n\t\tawait workingCopy1.revert();\n\t\tworkingCopy1.model?.updateContents('changed again');\n\n\t\tawait workingCopy1.save();\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\n\t\tawait workingCopy1.revert();\n\t\tassert.strictEqual(gotDirtyCounter, 2);\n\t\tassert.strictEqual(gotNonDirtyCounter, 2);\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(createdCounter, 2);\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t});\n\n\ttest('file change event triggers working copy resolve', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\n\t\tlet didResolve = false;\n\t\tconst onDidResolve = new Promise<void>(resolve => {\n\t\t\tmanager.onDidResolve(() => {\n\t\t\t\tif (workingCopy.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.UPDATED }], false));\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('working copy file event handling: create', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('hello create');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.create([{ resource }], CancellationToken.None);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('working copy file event handling: move', () => {\n\t\treturn testMoveCopyFileWorkingCopy(true);\n\t});\n\n\ttest('working copy file event handling: copy', () => {\n\t\treturn testMoveCopyFileWorkingCopy(false);\n\t});\n\n\tasync function testMoveCopyFileWorkingCopy(move: boolean) {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/other.txt');\n\n\t\tconst sourceWorkingCopy = await manager.resolve(source);\n\t\tsourceWorkingCopy.model?.updateContents('hello move or copy');\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\n\t\tif (move) {\n\t\t\tawait accessor.workingCopyFileService.move([{ file: { source, target } }], CancellationToken.None);\n\t\t} else {\n\t\t\tawait accessor.workingCopyFileService.copy([{ file: { source, target } }], CancellationToken.None);\n\t\t}\n\n\t\tconst targetWorkingCopy = await manager.resolve(target);\n\t\tassert.strictEqual(targetWorkingCopy.isDirty(), true);\n\t\tassert.strictEqual(targetWorkingCopy.model?.contents, 'hello move or copy');\n\t}\n\n\ttest('working copy file event handling: delete', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('hello delete');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.delete([{ resource }], CancellationToken.None);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('working copy file event handling: move to same resource', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\tconst sourceWorkingCopy = await manager.resolve(source);\n\t\tsourceWorkingCopy.model?.updateContents('hello move');\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.move([{ file: { source, target: source } }], CancellationToken.None);\n\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\t\tassert.strictEqual(sourceWorkingCopy.model?.contents, 'hello move');\n\t});\n\n\t// saveAs: unresolved source, unresolved target\n\n\ttest('saveAs (same target, unresolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAs(source, source, false, false);\n\t});\n\n\ttest('saveAs (same target, different case, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAs(source, target, false, false);\n\t});\n\n\ttest('saveAs (different target, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAs(source, target, false, false);\n\t});\n\n\t// saveAs: resolved source, unresolved target\n\n\ttest('saveAs (same target, resolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAs(source, source, true, false);\n\t});\n\n\ttest('saveAs (same target, different case, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAs(source, target, true, false);\n\t});\n\n\ttest('saveAs (different target, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAs(source, target, true, false);\n\t});\n\n\t// saveAs: unresolved source, resolved target\n\n\ttest('saveAs (same target, unresolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAs(source, source, false, true);\n\t});\n\n\ttest('saveAs (same target, different case, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAs(source, target, false, true);\n\t});\n\n\ttest('saveAs (different target, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAs(source, target, false, true);\n\t});\n\n\t// saveAs: resolved source, resolved target\n\n\ttest('saveAs (same target, resolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAs(source, source, true, true);\n\t});\n\n\ttest('saveAs (different target, resolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAs(source, target, true, true);\n\t});\n\n\tasync function testSaveAs(source: URI, target: URI, resolveSource: boolean, resolveTarget: boolean) {\n\t\tlet sourceWorkingCopy: IFileWorkingCopy<TestFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveSource) {\n\t\t\tsourceWorkingCopy = await manager.resolve(source);\n\t\t\tsourceWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(sourceWorkingCopy.isDirty());\n\t\t}\n\n\t\tlet targetWorkingCopy: IFileWorkingCopy<TestFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveTarget) {\n\t\t\ttargetWorkingCopy = await manager.resolve(target);\n\t\t\ttargetWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(targetWorkingCopy.isDirty());\n\t\t}\n\n\t\tconst result = await manager.saveAs(source, target);\n\t\tif (accessor.uriIdentityService.extUri.isEqual(source, target) && resolveSource) {\n\t\t\t// if the uris are considered equal (different case on macOS/Windows)\n\t\t\t// and the source is to be resolved, the resulting working copy resource\n\t\t\t// will be the source resource because we consider file working copies\n\t\t\t// the same in that case\n\t\t\tassert.strictEqual(source.toString(), result?.resource.toString());\n\t\t} else {\n\t\t\tassert.strictEqual(target.toString(), result?.resource.toString());\n\t\t}\n\n\t\tif (resolveSource) {\n\t\t\tassert.strictEqual(sourceWorkingCopy?.isDirty(), false);\n\t\t}\n\n\t\tif (resolveTarget) {\n\t\t\tassert.strictEqual(targetWorkingCopy?.isDirty(), false);\n\t\t}\n\t}\n\n\ttest('canDispose with dirty working copy', async () => {\n\t\tconst resource = URI.file('/path/index_something.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('make dirty');\n\n\t\tlet canDisposePromise = manager.canDispose(workingCopy);\n\t\tassert.ok(canDisposePromise instanceof Promise);\n\n\t\tlet canDispose = false;\n\t\t(async () => {\n\t\t\tcanDispose = await canDisposePromise;\n\t\t})();\n\n\t\tassert.strictEqual(canDispose, false);\n\t\tworkingCopy.revert({ soft: true });\n\n\t\tawait timeout(0);\n\n\t\tassert.strictEqual(canDispose, true);\n\n\t\tlet canDispose2 = manager.canDispose(workingCopy);\n\t\tassert.strictEqual(canDispose2, true);\n\t});\n\n\ttest('pending saves join on shutdown', async () => {\n\t\tconst resource1 = URI.file('/path/index_something1.txt');\n\t\tconst resource2 = URI.file('/path/index_something2.txt');\n\n\t\tconst workingCopy1 = await manager.resolve(resource1);\n\t\tworkingCopy1.model?.updateContents('make dirty');\n\n\t\tconst workingCopy2 = await manager.resolve(resource2);\n\t\tworkingCopy2.model?.updateContents('make dirty');\n\n\t\tlet saved1 = false;\n\t\tworkingCopy1.save().then(() => {\n\t\t\tsaved1 = true;\n\t\t});\n\n\t\tlet saved2 = false;\n\t\tworkingCopy2.save().then(() => {\n\t\t\tsaved2 = true;\n\t\t});\n\n\t\tconst event = new TestWillShutdownEvent();\n\t\taccessor.lifecycleService.fireWillShutdown(event);\n\n\t\tassert.ok(event.value.length > 0);\n\t\tawait Promise.all(event.value);\n\n\t\tassert.strictEqual(saved1, true);\n\t\tassert.strictEqual(saved2, true);\n\t});\n});\n"]}