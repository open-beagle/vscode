{"version":3,"file":"workingCopyBackupService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/workingCopy/electron-sandbox/workingCopyBackupService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAchG,IAAa,8BAA8B,GAA3C,MAAa,8BAA+B,SAAQ,mDAAwB;QAE3E,YACqC,kBAAsD,EAC5E,WAAyB,EAC1B,UAAuB;YAEpC,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QACjN,CAAC;KACD,CAAA;IATY,8BAA8B;QAGxC,WAAA,uDAAkC,CAAA;QAClC,WAAA,oBAAY,CAAA;QACZ,WAAA,iBAAW,CAAA;OALD,8BAA8B,CAS1C;IATY,wEAA8B;IAW3C,mBAAmB;IACnB,CAAA,GAAA,8BAAiB,CAAA,CAAC,6CAAyB,EAAE,8BAA8B,CAAC,CAAC;IAE7E,0BAA0B;IAC1B,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,yDAA8B,mBAA0B,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackupService';\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { NativeWorkingCopyBackupTracker } from 'vs/workbench/services/workingCopy/electron-sandbox/workingCopyBackupTracker';\n\nexport class NativeWorkingCopyBackupService extends WorkingCopyBackupService {\n\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(environmentService.configuration.backupPath ? URI.file(environmentService.configuration.backupPath).with({ scheme: environmentService.userRoamingDataHome.scheme }) : undefined, fileService, logService);\n\t}\n}\n\n// Register Service\nregisterSingleton(IWorkingCopyBackupService, NativeWorkingCopyBackupService);\n\n// Register Backup Tracker\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(NativeWorkingCopyBackupTracker, LifecyclePhase.Starting);\n"]}