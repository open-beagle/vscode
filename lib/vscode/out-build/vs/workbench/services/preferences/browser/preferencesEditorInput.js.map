{"version":3,"sources":["vs/workbench/services/preferences/browser/preferencesEditorInput.ts"],"names":[],"mappings":"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","file":"preferencesEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OS } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport * as nls from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorInput, SideBySideEditorInput, Verbosity } from 'vs/workbench/common/editor';\nimport { ResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { KeybindingsEditorModel } from 'vs/workbench/services/preferences/browser/keybindingsEditorModel';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { Settings2EditorModel } from 'vs/workbench/services/preferences/common/preferencesModels';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class PreferencesEditorInput extends SideBySideEditorInput {\n\tstatic override readonly ID: string = 'workbench.editorinputs.preferencesEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn PreferencesEditorInput.ID;\n\t}\n\n\toverride getTitle(verbosity: Verbosity): string {\n\t\treturn this.primary.getTitle(verbosity);\n\t}\n}\n\nexport class DefaultPreferencesEditorInput extends ResourceEditorInput {\n\tstatic override readonly ID = 'workbench.editorinputs.defaultpreferences';\n\tconstructor(\n\t\tdefaultSettingsResource: URI,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper(defaultSettingsResource, nls.localize('settingsEditorName', \"Default Settings\"), '', undefined, textModelResolverService, textFileService, editorService, editorGroupService, fileService, labelService, filesConfigurationService);\n\t}\n\n\toverride get typeId(): string {\n\t\treturn DefaultPreferencesEditorInput.ID;\n\t}\n\n\toverride matches(other: unknown): boolean {\n\t\tif (other instanceof DefaultPreferencesEditorInput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!super.matches(other)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport interface IKeybindingsEditorSearchOptions {\n\tsearchValue: string;\n\trecordKeybindings: boolean;\n\tsortByPrecedence: boolean;\n}\n\nexport class KeybindingsEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.input.keybindings';\n\treadonly keybindingsModel: KeybindingsEditorModel;\n\n\tsearchOptions: IKeybindingsEditorSearchOptions | null = null;\n\n\treadonly resource = undefined;\n\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\n\t\tthis.keybindingsModel = instantiationService.createInstance(KeybindingsEditorModel, OS);\n\t}\n\n\toverride get typeId(): string {\n\t\treturn KeybindingsEditorInput.ID;\n\t}\n\n\toverride getName(): string {\n\t\treturn nls.localize('keybindingsInputName', \"Keyboard Shortcuts\");\n\t}\n\n\toverride async resolve(): Promise<KeybindingsEditorModel> {\n\t\treturn this.keybindingsModel;\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\treturn otherInput instanceof KeybindingsEditorInput;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.keybindingsModel.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class SettingsEditor2Input extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.input.settings2';\n\tprivate readonly _settingsModel: Settings2EditorModel;\n\n\treadonly resource: URI = URI.from({\n\t\tscheme: Schemas.vscodeSettings,\n\t\tpath: `settingseditor`\n\t});\n\n\tconstructor(\n\t\t@IPreferencesService _preferencesService: IPreferencesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._settingsModel = _preferencesService.createSettings2EditorModel();\n\t}\n\n\toverride matches(otherInput: unknown): boolean {\n\t\treturn otherInput instanceof SettingsEditor2Input;\n\t}\n\n\toverride get typeId(): string {\n\t\treturn SettingsEditor2Input.ID;\n\t}\n\n\toverride getName(): string {\n\t\treturn nls.localize('settingsEditor2InputName', \"Settings\");\n\t}\n\n\toverride async resolve(): Promise<Settings2EditorModel> {\n\t\treturn this._settingsModel;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._settingsModel.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}