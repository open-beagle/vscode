{"version":3,"sources":["vs/workbench/services/preferences/browser/keybindingsEditorModel.ts"],"names":[],"mappings":"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","file":"keybindingsEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport { OperatingSystem, Language } from 'vs/base/common/platform';\nimport { IMatch, IFilter, or, matchesContiguousSubString, matchesPrefix, matchesCamelCase, matchesWords } from 'vs/base/common/filters';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from 'vs/base/common/keyCodes';\nimport { AriaLabelProvider, UserSettingsLabelProvider, UILabelProvider, ModifierLabels as ModLabels } from 'vs/base/common/keybindingLabels';\nimport { MenuRegistry, ILocalizedString, ICommandAction } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { EditorModel } from 'vs/workbench/common/editor';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { getAllUnboundCommands } from 'vs/workbench/services/keybinding/browser/unboundCommands';\nimport { IKeybindingItemEntry, KeybindingMatches, KeybindingMatch, IKeybindingItem } from 'vs/workbench/services/preferences/common/preferences';\n\nexport const KEYBINDING_ENTRY_TEMPLATE_ID = 'keybinding.entry.template';\n\nconst SOURCE_DEFAULT = localize('default', \"Default\");\nconst SOURCE_EXTENSION = localize('extension', \"Extension\");\nconst SOURCE_USER = localize('user', \"User\");\n\ninterface ModifierLabels {\n\tui: ModLabels;\n\taria: ModLabels;\n\tuser: ModLabels;\n}\n\nconst wordFilter = or(matchesPrefix, matchesWords, matchesContiguousSubString);\n\nexport class KeybindingsEditorModel extends EditorModel {\n\n\tprivate _keybindingItems: IKeybindingItem[];\n\tprivate _keybindingItemsSortedByPrecedence: IKeybindingItem[];\n\tprivate modifierLabels: ModifierLabels;\n\n\tconstructor(\n\t\tos: OperatingSystem,\n\t\t@IKeybindingService private readonly keybindingsService: IKeybindingService\n\t) {\n\t\tsuper();\n\t\tthis._keybindingItems = [];\n\t\tthis._keybindingItemsSortedByPrecedence = [];\n\t\tthis.modifierLabels = {\n\t\t\tui: UILabelProvider.modifierLabels[os],\n\t\t\taria: AriaLabelProvider.modifierLabels[os],\n\t\t\tuser: UserSettingsLabelProvider.modifierLabels[os]\n\t\t};\n\t}\n\n\tfetch(searchValue: string, sortByPrecedence: boolean = false): IKeybindingItemEntry[] {\n\t\tlet keybindingItems = sortByPrecedence ? this._keybindingItemsSortedByPrecedence : this._keybindingItems;\n\n\t\tconst commandIdMatches = /@command:\\s*(.+)/i.exec(searchValue);\n\t\tif (commandIdMatches && commandIdMatches[1]) {\n\t\t\treturn keybindingItems.filter(k => k.command === commandIdMatches[1])\n\t\t\t\t.map(keybindingItem => (<IKeybindingItemEntry>{ id: KeybindingsEditorModel.getId(keybindingItem), keybindingItem, templateId: KEYBINDING_ENTRY_TEMPLATE_ID }));\n\t\t}\n\n\t\tif (/@source:\\s*(user|default|extension)/i.test(searchValue)) {\n\t\t\tkeybindingItems = this.filterBySource(keybindingItems, searchValue);\n\t\t\tsearchValue = searchValue.replace(/@source:\\s*(user|default|extension)/i, '');\n\t\t} else {\n\t\t\tconst keybindingMatches = /@keybinding:\\s*((\\\".+\\\")|(\\S+))/i.exec(searchValue);\n\t\t\tif (keybindingMatches && (keybindingMatches[2] || keybindingMatches[3])) {\n\t\t\t\tsearchValue = keybindingMatches[2] || `\"${keybindingMatches[3]}\"`;\n\t\t\t}\n\t\t}\n\n\t\tsearchValue = searchValue.trim();\n\t\tif (!searchValue) {\n\t\t\treturn keybindingItems.map(keybindingItem => (<IKeybindingItemEntry>{ id: KeybindingsEditorModel.getId(keybindingItem), keybindingItem, templateId: KEYBINDING_ENTRY_TEMPLATE_ID }));\n\t\t}\n\n\t\treturn this.filterByText(keybindingItems, searchValue);\n\t}\n\n\tprivate filterBySource(keybindingItems: IKeybindingItem[], searchValue: string): IKeybindingItem[] {\n\t\tif (/@source:\\s*default/i.test(searchValue)) {\n\t\t\treturn keybindingItems.filter(k => k.source === SOURCE_DEFAULT);\n\t\t}\n\t\tif (/@source:\\s*user/i.test(searchValue)) {\n\t\t\treturn keybindingItems.filter(k => k.source === SOURCE_USER);\n\t\t}\n\t\tif (/@source:\\s*extension/i.test(searchValue)) {\n\t\t\treturn keybindingItems.filter(k => k.source === SOURCE_EXTENSION);\n\t\t}\n\t\treturn keybindingItems;\n\t}\n\n\tprivate filterByText(keybindingItems: IKeybindingItem[], searchValue: string): IKeybindingItemEntry[] {\n\t\tconst quoteAtFirstChar = searchValue.charAt(0) === '\"';\n\t\tconst quoteAtLastChar = searchValue.charAt(searchValue.length - 1) === '\"';\n\t\tconst completeMatch = quoteAtFirstChar && quoteAtLastChar;\n\t\tif (quoteAtFirstChar) {\n\t\t\tsearchValue = searchValue.substring(1);\n\t\t}\n\t\tif (quoteAtLastChar) {\n\t\t\tsearchValue = searchValue.substring(0, searchValue.length - 1);\n\t\t}\n\t\tsearchValue = searchValue.trim();\n\n\t\tconst result: IKeybindingItemEntry[] = [];\n\t\tconst words = searchValue.split(' ');\n\t\tconst keybindingWords = this.splitKeybindingWords(words);\n\t\tfor (const keybindingItem of keybindingItems) {\n\t\t\tconst keybindingMatches = new KeybindingItemMatches(this.modifierLabels, keybindingItem, searchValue, words, keybindingWords, completeMatch);\n\t\t\tif (keybindingMatches.commandIdMatches\n\t\t\t\t|| keybindingMatches.commandLabelMatches\n\t\t\t\t|| keybindingMatches.commandDefaultLabelMatches\n\t\t\t\t|| keybindingMatches.sourceMatches\n\t\t\t\t|| keybindingMatches.whenMatches\n\t\t\t\t|| keybindingMatches.keybindingMatches) {\n\t\t\t\tresult.push({\n\t\t\t\t\tid: KeybindingsEditorModel.getId(keybindingItem),\n\t\t\t\t\ttemplateId: KEYBINDING_ENTRY_TEMPLATE_ID,\n\t\t\t\t\tcommandLabelMatches: keybindingMatches.commandLabelMatches || undefined,\n\t\t\t\t\tcommandDefaultLabelMatches: keybindingMatches.commandDefaultLabelMatches || undefined,\n\t\t\t\t\tkeybindingItem,\n\t\t\t\t\tkeybindingMatches: keybindingMatches.keybindingMatches || undefined,\n\t\t\t\t\tcommandIdMatches: keybindingMatches.commandIdMatches || undefined,\n\t\t\t\t\tsourceMatches: keybindingMatches.sourceMatches || undefined,\n\t\t\t\t\twhenMatches: keybindingMatches.whenMatches || undefined\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate splitKeybindingWords(wordsSeparatedBySpaces: string[]): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const word of wordsSeparatedBySpaces) {\n\t\t\tresult.push(...coalesce(word.split('+')));\n\t\t}\n\t\treturn result;\n\t}\n\n\toverride async resolve(actionLabels = new Map<string, string>()): Promise<void> {\n\t\tconst workbenchActionsRegistry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\n\t\tthis._keybindingItemsSortedByPrecedence = [];\n\t\tconst boundCommands: Map<string, boolean> = new Map<string, boolean>();\n\t\tfor (const keybinding of this.keybindingsService.getKeybindings()) {\n\t\t\tif (keybinding.command) { // Skip keybindings without commands\n\t\t\t\tthis._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(keybinding.command, keybinding, workbenchActionsRegistry, actionLabels));\n\t\t\t\tboundCommands.set(keybinding.command, true);\n\t\t\t}\n\t\t}\n\n\t\tconst commandsWithDefaultKeybindings = this.keybindingsService.getDefaultKeybindings().map(keybinding => keybinding.command);\n\t\tfor (const command of getAllUnboundCommands(boundCommands)) {\n\t\t\tconst keybindingItem = new ResolvedKeybindingItem(undefined, command, null, undefined, commandsWithDefaultKeybindings.indexOf(command) === -1, null, false);\n\t\t\tthis._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(command, keybindingItem, workbenchActionsRegistry, actionLabels));\n\t\t}\n\t\tthis._keybindingItems = this._keybindingItemsSortedByPrecedence.slice(0).sort((a, b) => KeybindingsEditorModel.compareKeybindingData(a, b));\n\t}\n\n\tprivate static getId(keybindingItem: IKeybindingItem): string {\n\t\treturn keybindingItem.command + (keybindingItem.keybinding ? keybindingItem.keybinding.getAriaLabel() : '') + keybindingItem.source + keybindingItem.when;\n\t}\n\n\tprivate static compareKeybindingData(a: IKeybindingItem, b: IKeybindingItem): number {\n\t\tif (a.keybinding && !b.keybinding) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (b.keybinding && !a.keybinding) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.commandLabel && !b.commandLabel) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (b.commandLabel && !a.commandLabel) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.commandLabel && b.commandLabel) {\n\t\t\tif (a.commandLabel !== b.commandLabel) {\n\t\t\t\treturn a.commandLabel.localeCompare(b.commandLabel);\n\t\t\t}\n\t\t}\n\t\tif (a.command === b.command) {\n\t\t\treturn a.keybindingItem.isDefault ? 1 : -1;\n\t\t}\n\t\treturn a.command.localeCompare(b.command);\n\t}\n\n\tprivate static toKeybindingEntry(command: string, keybindingItem: ResolvedKeybindingItem, workbenchActionsRegistry: IWorkbenchActionRegistry, actions: Map<string, string>): IKeybindingItem {\n\t\tconst menuCommand = MenuRegistry.getCommand(command)!;\n\t\tconst editorActionLabel = actions.get(command)!;\n\t\treturn <IKeybindingItem>{\n\t\t\tkeybinding: keybindingItem.resolvedKeybinding,\n\t\t\tkeybindingItem,\n\t\t\tcommand,\n\t\t\tcommandLabel: KeybindingsEditorModel.getCommandLabel(menuCommand, editorActionLabel),\n\t\t\tcommandDefaultLabel: KeybindingsEditorModel.getCommandDefaultLabel(menuCommand, workbenchActionsRegistry),\n\t\t\twhen: keybindingItem.when ? keybindingItem.when.serialize() : '',\n\t\t\tsource: (\n\t\t\t\tkeybindingItem.extensionId\n\t\t\t\t\t? (keybindingItem.isBuiltinExtension ? SOURCE_DEFAULT : SOURCE_EXTENSION)\n\t\t\t\t\t: (keybindingItem.isDefault ? SOURCE_DEFAULT : SOURCE_USER)\n\t\t\t)\n\t\t};\n\t}\n\n\tprivate static getCommandDefaultLabel(menuCommand: ICommandAction, workbenchActionsRegistry: IWorkbenchActionRegistry): string | null {\n\t\tif (!Language.isDefaultVariant()) {\n\t\t\tif (menuCommand && menuCommand.title && (<ILocalizedString>menuCommand.title).original) {\n\t\t\t\tconst category: string | undefined = menuCommand.category ? (<ILocalizedString>menuCommand.category).original : undefined;\n\t\t\t\tconst title = (<ILocalizedString>menuCommand.title).original;\n\t\t\t\treturn category ? localize('cat.title', \"{0}: {1}\", category, title) : title;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static getCommandLabel(menuCommand: ICommandAction, editorActionLabel: string): string {\n\t\tif (menuCommand) {\n\t\t\tconst category: string | undefined = menuCommand.category ? typeof menuCommand.category === 'string' ? menuCommand.category : menuCommand.category.value : undefined;\n\t\t\tconst title = typeof menuCommand.title === 'string' ? menuCommand.title : menuCommand.title.value;\n\t\t\treturn category ? localize('cat.title', \"{0}: {1}\", category, title) : title;\n\t\t}\n\n\t\tif (editorActionLabel) {\n\t\t\treturn editorActionLabel;\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\nclass KeybindingItemMatches {\n\n\treadonly commandIdMatches: IMatch[] | null = null;\n\treadonly commandLabelMatches: IMatch[] | null = null;\n\treadonly commandDefaultLabelMatches: IMatch[] | null = null;\n\treadonly sourceMatches: IMatch[] | null = null;\n\treadonly whenMatches: IMatch[] | null = null;\n\treadonly keybindingMatches: KeybindingMatches | null = null;\n\n\tconstructor(private modifierLabels: ModifierLabels, keybindingItem: IKeybindingItem, searchValue: string, words: string[], keybindingWords: string[], completeMatch: boolean) {\n\t\tif (!completeMatch) {\n\t\t\tthis.commandIdMatches = this.matches(searchValue, keybindingItem.command, or(matchesWords, matchesCamelCase), words);\n\t\t\tthis.commandLabelMatches = keybindingItem.commandLabel ? this.matches(searchValue, keybindingItem.commandLabel, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.commandLabel, true), words) : null;\n\t\t\tthis.commandDefaultLabelMatches = keybindingItem.commandDefaultLabel ? this.matches(searchValue, keybindingItem.commandDefaultLabel, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.commandDefaultLabel, true), words) : null;\n\t\t\tthis.sourceMatches = this.matches(searchValue, keybindingItem.source, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.source, true), words);\n\t\t\tthis.whenMatches = keybindingItem.when ? this.matches(null, keybindingItem.when, or(matchesWords, matchesCamelCase), words) : null;\n\t\t}\n\t\tthis.keybindingMatches = keybindingItem.keybinding ? this.matchesKeybinding(keybindingItem.keybinding, searchValue, keybindingWords, completeMatch) : null;\n\t}\n\n\tprivate matches(searchValue: string | null, wordToMatchAgainst: string, wordMatchesFilter: IFilter, words: string[]): IMatch[] | null {\n\t\tlet matches = searchValue ? wordFilter(searchValue, wordToMatchAgainst) : null;\n\t\tif (!matches) {\n\t\t\tmatches = this.matchesWords(words, wordToMatchAgainst, wordMatchesFilter);\n\t\t}\n\t\tif (matches) {\n\t\t\tmatches = this.filterAndSort(matches);\n\t\t}\n\t\treturn matches;\n\t}\n\n\tprivate matchesWords(words: string[], wordToMatchAgainst: string, wordMatchesFilter: IFilter): IMatch[] | null {\n\t\tlet matches: IMatch[] | null = [];\n\t\tfor (const word of words) {\n\t\t\tconst wordMatches = wordMatchesFilter(word, wordToMatchAgainst);\n\t\t\tif (wordMatches) {\n\t\t\t\tmatches = [...(matches || []), ...wordMatches];\n\t\t\t} else {\n\t\t\t\tmatches = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tprivate filterAndSort(matches: IMatch[]): IMatch[] {\n\t\treturn distinct(matches, (a => a.start + '.' + a.end)).filter(match => !matches.some(m => !(m.start === match.start && m.end === match.end) && (m.start <= match.start && m.end >= match.end))).sort((a, b) => a.start - b.start);\n\t}\n\n\tprivate matchesKeybinding(keybinding: ResolvedKeybinding, searchValue: string, words: string[], completeMatch: boolean): KeybindingMatches | null {\n\t\tconst [firstPart, chordPart] = keybinding.getParts();\n\n\t\tconst userSettingsLabel = keybinding.getUserSettingsLabel();\n\t\tconst ariaLabel = keybinding.getAriaLabel();\n\t\tconst label = keybinding.getLabel();\n\t\tif ((userSettingsLabel && strings.compareIgnoreCase(searchValue, userSettingsLabel) === 0)\n\t\t\t|| (ariaLabel && strings.compareIgnoreCase(searchValue, ariaLabel) === 0)\n\t\t\t|| (label && strings.compareIgnoreCase(searchValue, label) === 0)) {\n\t\t\treturn {\n\t\t\t\tfirstPart: this.createCompleteMatch(firstPart),\n\t\t\t\tchordPart: this.createCompleteMatch(chordPart)\n\t\t\t};\n\t\t}\n\n\t\tconst firstPartMatch: KeybindingMatch = {};\n\t\tlet chordPartMatch: KeybindingMatch = {};\n\n\t\tconst matchedWords: number[] = [];\n\t\tconst firstPartMatchedWords: number[] = [];\n\t\tlet chordPartMatchedWords: number[] = [];\n\t\tlet matchFirstPart = true;\n\t\tfor (let index = 0; index < words.length; index++) {\n\t\t\tconst word = words[index];\n\t\t\tlet firstPartMatched = false;\n\t\t\tlet chordPartMatched = false;\n\n\t\t\tmatchFirstPart = matchFirstPart && !firstPartMatch.keyCode;\n\t\t\tlet matchChordPart = !chordPartMatch.keyCode;\n\n\t\t\tif (matchFirstPart) {\n\t\t\t\tfirstPartMatched = this.matchPart(firstPart, firstPartMatch, word, completeMatch);\n\t\t\t\tif (firstPartMatch.keyCode) {\n\t\t\t\t\tfor (const cordPartMatchedWordIndex of chordPartMatchedWords) {\n\t\t\t\t\t\tif (firstPartMatchedWords.indexOf(cordPartMatchedWordIndex) === -1) {\n\t\t\t\t\t\t\tmatchedWords.splice(matchedWords.indexOf(cordPartMatchedWordIndex), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tchordPartMatch = {};\n\t\t\t\t\tchordPartMatchedWords = [];\n\t\t\t\t\tmatchChordPart = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (matchChordPart) {\n\t\t\t\tchordPartMatched = this.matchPart(chordPart, chordPartMatch, word, completeMatch);\n\t\t\t}\n\n\t\t\tif (firstPartMatched) {\n\t\t\t\tfirstPartMatchedWords.push(index);\n\t\t\t}\n\t\t\tif (chordPartMatched) {\n\t\t\t\tchordPartMatchedWords.push(index);\n\t\t\t}\n\t\t\tif (firstPartMatched || chordPartMatched) {\n\t\t\t\tmatchedWords.push(index);\n\t\t\t}\n\n\t\t\tmatchFirstPart = matchFirstPart && this.isModifier(word);\n\t\t}\n\t\tif (matchedWords.length !== words.length) {\n\t\t\treturn null;\n\t\t}\n\t\tif (completeMatch && (!this.isCompleteMatch(firstPart, firstPartMatch) || !this.isCompleteMatch(chordPart, chordPartMatch))) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.hasAnyMatch(firstPartMatch) || this.hasAnyMatch(chordPartMatch) ? { firstPart: firstPartMatch, chordPart: chordPartMatch } : null;\n\t}\n\n\tprivate matchPart(part: ResolvedKeybindingPart | null, match: KeybindingMatch, word: string, completeMatch: boolean): boolean {\n\t\tlet matched = false;\n\t\tif (this.matchesMetaModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.metaKey = true;\n\t\t}\n\t\tif (this.matchesCtrlModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.ctrlKey = true;\n\t\t}\n\t\tif (this.matchesShiftModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.shiftKey = true;\n\t\t}\n\t\tif (this.matchesAltModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.altKey = true;\n\t\t}\n\t\tif (this.matchesKeyCode(part, word, completeMatch)) {\n\t\t\tmatch.keyCode = true;\n\t\t\tmatched = true;\n\t\t}\n\t\treturn matched;\n\t}\n\n\tprivate matchesKeyCode(keybinding: ResolvedKeybindingPart | null, word: string, completeMatch: boolean): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tconst ariaLabel: string = keybinding.keyAriaLabel || '';\n\t\tif (completeMatch || ariaLabel.length === 1 || word.length === 1) {\n\t\t\tif (strings.compareIgnoreCase(ariaLabel, word) === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (matchesContiguousSubString(word, ariaLabel)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate matchesMetaModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.metaKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesMetaModifier(word);\n\t}\n\n\tprivate matchesCtrlModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.ctrlKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesCtrlModifier(word);\n\t}\n\n\tprivate matchesShiftModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.shiftKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesShiftModifier(word);\n\t}\n\n\tprivate matchesAltModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.altKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesAltModifier(word);\n\t}\n\n\tprivate hasAnyMatch(keybindingMatch: KeybindingMatch): boolean {\n\t\treturn !!keybindingMatch.altKey ||\n\t\t\t!!keybindingMatch.ctrlKey ||\n\t\t\t!!keybindingMatch.metaKey ||\n\t\t\t!!keybindingMatch.shiftKey ||\n\t\t\t!!keybindingMatch.keyCode;\n\t}\n\n\tprivate isCompleteMatch(part: ResolvedKeybindingPart | null, match: KeybindingMatch): boolean {\n\t\tif (!part) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!match.keyCode) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.metaKey && !match.metaKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.altKey && !match.altKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.ctrlKey && !match.ctrlKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.shiftKey && !match.shiftKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createCompleteMatch(part: ResolvedKeybindingPart | null): KeybindingMatch {\n\t\tconst match: KeybindingMatch = {};\n\t\tif (part) {\n\t\t\tmatch.keyCode = true;\n\t\t\tif (part.metaKey) {\n\t\t\t\tmatch.metaKey = true;\n\t\t\t}\n\t\t\tif (part.altKey) {\n\t\t\t\tmatch.altKey = true;\n\t\t\t}\n\t\t\tif (part.ctrlKey) {\n\t\t\t\tmatch.ctrlKey = true;\n\t\t\t}\n\t\t\tif (part.shiftKey) {\n\t\t\t\tmatch.shiftKey = true;\n\t\t\t}\n\t\t}\n\t\treturn match;\n\t}\n\n\tprivate isModifier(word: string): boolean {\n\t\tif (this.wordMatchesAltModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesCtrlModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesMetaModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesShiftModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate wordMatchesAltModifier(word: string): boolean {\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.ui.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.aria.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.user.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(localize('option', \"option\"), word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate wordMatchesCtrlModifier(word: string): boolean {\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.ui.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.aria.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.user.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate wordMatchesMetaModifier(word: string): boolean {\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.ui.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.aria.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.user.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(localize('meta', \"meta\"), word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate wordMatchesShiftModifier(word: string): boolean {\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.ui.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.aria.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (strings.equalsIgnoreCase(this.modifierLabels.user.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"]}