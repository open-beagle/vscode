{"version":3,"file":"preferencesValidation.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/preferences/test/common/preferencesValidation.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createValidator, getInvalidTypeError } from 'vs/workbench/services/preferences/common/preferencesValidation';\n\n\nsuite('Preferences Validation', () => {\n\tclass Tester {\n\t\tprivate validator: (value: any) => string | null;\n\n\t\tconstructor(private settings: IConfigurationPropertySchema) {\n\t\t\tthis.validator = createValidator(settings)!;\n\t\t}\n\n\t\tpublic accepts(input: string) {\n\t\t\tassert.strictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to accept \\`${input}\\`. Got ${this.validator(input)}.`);\n\t\t}\n\n\t\tpublic rejects(input: string) {\n\t\t\tassert.notStrictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to reject \\`${input}\\`.`);\n\t\t\treturn {\n\t\t\t\twithMessage:\n\t\t\t\t\t(message: string) => {\n\t\t\t\t\t\tconst actual = this.validator(input);\n\t\t\t\t\t\tassert.ok(actual);\n\t\t\t\t\t\tassert(actual!.indexOf(message) > -1,\n\t\t\t\t\t\t\t`Expected error of ${JSON.stringify(this.settings)} on \\`${input}\\` to contain ${message}. Got ${this.validator(input)}.`);\n\t\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\n\t\tpublic validatesNumeric() {\n\t\t\tthis.accepts('3');\n\t\t\tthis.accepts('3.');\n\t\t\tthis.accepts('.0');\n\t\t\tthis.accepts('3.0');\n\t\t\tthis.accepts(' 3.0');\n\t\t\tthis.accepts(' 3.0  ');\n\t\t\tthis.rejects('3f');\n\t\t}\n\n\t\tpublic validatesNullableNumeric() {\n\t\t\tthis.validatesNumeric();\n\t\t\tthis.accepts('');\n\t\t}\n\n\t\tpublic validatesNonNullableNumeric() {\n\t\t\tthis.validatesNumeric();\n\t\t\tthis.rejects('');\n\t\t}\n\n\t\tpublic validatesString() {\n\t\t\tthis.accepts('3');\n\t\t\tthis.accepts('3.');\n\t\t\tthis.accepts('.0');\n\t\t\tthis.accepts('3.0');\n\t\t\tthis.accepts(' 3.0');\n\t\t\tthis.accepts(' 3.0  ');\n\t\t\tthis.accepts('');\n\t\t\tthis.accepts('3f');\n\t\t\tthis.accepts('hello');\n\t\t}\n\t}\n\n\n\ttest('exclusive max and max work together properly', () => {\n\t\t{\n\t\t\tconst justMax = new Tester({ maximum: 5, type: 'number' });\n\t\t\tjustMax.validatesNonNullableNumeric();\n\t\t\tjustMax.rejects('5.1');\n\t\t\tjustMax.accepts('5.0');\n\t\t}\n\t\t{\n\t\t\tconst justEMax = new Tester({ exclusiveMaximum: 5, type: 'number' });\n\t\t\tjustEMax.validatesNonNullableNumeric();\n\t\t\tjustEMax.rejects('5.1');\n\t\t\tjustEMax.rejects('5.0');\n\t\t\tjustEMax.accepts('4.999');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMaximum: 5, maximum: 4, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('5.1');\n\t\t\tbothNumeric.rejects('5.0');\n\t\t\tbothNumeric.rejects('4.999');\n\t\t\tbothNumeric.accepts('4');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMaximum: 5, maximum: 6, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('5.1');\n\t\t\tbothNumeric.rejects('5.0');\n\t\t\tbothNumeric.accepts('4.999');\n\t\t}\n\t});\n\n\ttest('exclusive min and min work together properly', () => {\n\t\t{\n\t\t\tconst justMin = new Tester({ minimum: -5, type: 'number' });\n\t\t\tjustMin.validatesNonNullableNumeric();\n\t\t\tjustMin.rejects('-5.1');\n\t\t\tjustMin.accepts('-5.0');\n\t\t}\n\t\t{\n\t\t\tconst justEMin = new Tester({ exclusiveMinimum: -5, type: 'number' });\n\t\t\tjustEMin.validatesNonNullableNumeric();\n\t\t\tjustEMin.rejects('-5.1');\n\t\t\tjustEMin.rejects('-5.0');\n\t\t\tjustEMin.accepts('-4.999');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMinimum: -5, minimum: -4, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('-5.1');\n\t\t\tbothNumeric.rejects('-5.0');\n\t\t\tbothNumeric.rejects('-4.999');\n\t\t\tbothNumeric.accepts('-4');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMinimum: -5, minimum: -6, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('-5.1');\n\t\t\tbothNumeric.rejects('-5.0');\n\t\t\tbothNumeric.accepts('-4.999');\n\t\t}\n\t});\n\n\ttest('multiple of works for both integers and fractions', () => {\n\t\t{\n\t\t\tconst onlyEvens = new Tester({ multipleOf: 2, type: 'number' });\n\t\t\tonlyEvens.accepts('2.0');\n\t\t\tonlyEvens.accepts('2');\n\t\t\tonlyEvens.accepts('-4');\n\t\t\tonlyEvens.accepts('0');\n\t\t\tonlyEvens.accepts('100');\n\t\t\tonlyEvens.rejects('100.1');\n\t\t\tonlyEvens.rejects('');\n\t\t\tonlyEvens.rejects('we');\n\t\t}\n\t\t{\n\t\t\tconst hackyIntegers = new Tester({ multipleOf: 1, type: 'number' });\n\t\t\thackyIntegers.accepts('2.0');\n\t\t\thackyIntegers.rejects('.5');\n\t\t}\n\t\t{\n\t\t\tconst halfIntegers = new Tester({ multipleOf: 0.5, type: 'number' });\n\t\t\thalfIntegers.accepts('0.5');\n\t\t\thalfIntegers.accepts('1.5');\n\t\t\thalfIntegers.rejects('1.51');\n\t\t}\n\t});\n\n\ttest('integer type correctly adds a validation', () => {\n\t\t{\n\t\t\tconst integers = new Tester({ multipleOf: 1, type: 'integer' });\n\t\t\tintegers.accepts('02');\n\t\t\tintegers.accepts('2');\n\t\t\tintegers.accepts('20');\n\t\t\tintegers.rejects('.5');\n\t\t\tintegers.rejects('2j');\n\t\t\tintegers.rejects('');\n\t\t}\n\t});\n\n\ttest('null is allowed only when expected', () => {\n\t\t{\n\t\t\tconst nullableIntegers = new Tester({ type: ['integer', 'null'] });\n\t\t\tnullableIntegers.accepts('2');\n\t\t\tnullableIntegers.rejects('.5');\n\t\t\tnullableIntegers.accepts('2.0');\n\t\t\tnullableIntegers.rejects('2j');\n\t\t\tnullableIntegers.accepts('');\n\t\t}\n\t\t{\n\t\t\tconst nonnullableIntegers = new Tester({ type: ['integer'] });\n\t\t\tnonnullableIntegers.accepts('2');\n\t\t\tnonnullableIntegers.rejects('.5');\n\t\t\tnonnullableIntegers.accepts('2.0');\n\t\t\tnonnullableIntegers.rejects('2j');\n\t\t\tnonnullableIntegers.rejects('');\n\t\t}\n\t\t{\n\t\t\tconst nullableNumbers = new Tester({ type: ['number', 'null'] });\n\t\t\tnullableNumbers.accepts('2');\n\t\t\tnullableNumbers.accepts('.5');\n\t\t\tnullableNumbers.accepts('2.0');\n\t\t\tnullableNumbers.rejects('2j');\n\t\t\tnullableNumbers.accepts('');\n\t\t}\n\t\t{\n\t\t\tconst nonnullableNumbers = new Tester({ type: ['number'] });\n\t\t\tnonnullableNumbers.accepts('2');\n\t\t\tnonnullableNumbers.accepts('.5');\n\t\t\tnonnullableNumbers.accepts('2.0');\n\t\t\tnonnullableNumbers.rejects('2j');\n\t\t\tnonnullableNumbers.rejects('');\n\t\t}\n\t});\n\n\ttest('string max min length work', () => {\n\t\t{\n\t\t\tconst min = new Tester({ minLength: 4, type: 'string' });\n\t\t\tmin.rejects('123');\n\t\t\tmin.accepts('1234');\n\t\t\tmin.accepts('12345');\n\t\t}\n\t\t{\n\t\t\tconst max = new Tester({ maxLength: 6, type: 'string' });\n\t\t\tmax.accepts('12345');\n\t\t\tmax.accepts('123456');\n\t\t\tmax.rejects('1234567');\n\t\t}\n\t\t{\n\t\t\tconst minMax = new Tester({ minLength: 4, maxLength: 6, type: 'string' });\n\t\t\tminMax.rejects('123');\n\t\t\tminMax.accepts('1234');\n\t\t\tminMax.accepts('12345');\n\t\t\tminMax.accepts('123456');\n\t\t\tminMax.rejects('1234567');\n\t\t}\n\t});\n\n\ttest('patterns work', () => {\n\t\t{\n\t\t\tconst urls = new Tester({ pattern: '^(hello)*$', type: 'string' });\n\t\t\turls.accepts('');\n\t\t\turls.rejects('hel');\n\t\t\turls.accepts('hello');\n\t\t\turls.rejects('hellohel');\n\t\t\turls.accepts('hellohello');\n\t\t}\n\t\t{\n\t\t\tconst urls = new Tester({ pattern: '^(hello)*$', type: 'string', patternErrorMessage: 'err: must be friendly' });\n\t\t\turls.accepts('');\n\t\t\turls.rejects('hel').withMessage('err: must be friendly');\n\t\t\turls.accepts('hello');\n\t\t\turls.rejects('hellohel').withMessage('err: must be friendly');\n\t\t\turls.accepts('hellohello');\n\t\t}\n\t});\n\n\ttest('custom error messages are shown', () => {\n\t\tconst withMessage = new Tester({ minLength: 1, maxLength: 0, type: 'string', errorMessage: 'always error!' });\n\t\twithMessage.rejects('').withMessage('always error!');\n\t\twithMessage.rejects(' ').withMessage('always error!');\n\t\twithMessage.rejects('1').withMessage('always error!');\n\t});\n\n\tclass ArrayTester {\n\t\tprivate validator: (value: any) => string | null;\n\n\t\tconstructor(private settings: IConfigurationPropertySchema) {\n\t\t\tthis.validator = createValidator(settings)!;\n\t\t}\n\n\t\tpublic accepts(input: string[]) {\n\t\t\tassert.strictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to accept \\`${JSON.stringify(input)}\\`. Got ${this.validator(input)}.`);\n\t\t}\n\n\t\tpublic rejects(input: any[]) {\n\t\t\tassert.notStrictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to reject \\`${JSON.stringify(input)}\\`.`);\n\t\t\treturn {\n\t\t\t\twithMessage:\n\t\t\t\t\t(message: string) => {\n\t\t\t\t\t\tconst actual = this.validator(input);\n\t\t\t\t\t\tassert.ok(actual);\n\t\t\t\t\t\tassert(actual!.indexOf(message) > -1,\n\t\t\t\t\t\t\t`Expected error of ${JSON.stringify(this.settings)} on \\`${input}\\` to contain ${message}. Got ${this.validator(input)}.`);\n\t\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\ttest('simple array', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' } });\n\t\t\tarr.accepts([]);\n\t\t\tarr.accepts(['foo']);\n\t\t\tarr.accepts(['foo', 'bar']);\n\t\t}\n\t});\n\n\ttest('min-max items array', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' }, minItems: 1, maxItems: 2 });\n\t\t\tarr.rejects([]).withMessage('Array must have at least 1 items');\n\t\t\tarr.accepts(['a']);\n\t\t\tarr.accepts(['a', 'a']);\n\t\t\tarr.rejects(['a', 'a', 'a']).withMessage('Array must have at most 2 items');\n\t\t}\n\t});\n\n\ttest('array of enums', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', enum: ['a', 'b'] } });\n\t\t\tarr.accepts(['a']);\n\t\t\tarr.accepts(['a', 'b']);\n\n\t\t\tarr.rejects(['c']).withMessage(`Value 'c' is not one of`);\n\t\t\tarr.rejects(['a', 'c']).withMessage(`Value 'c' is not one of`);\n\n\t\t\tarr.rejects(['c', 'd']).withMessage(`Value 'c' is not one of`);\n\t\t\tarr.rejects(['c', 'd']).withMessage(`Value 'd' is not one of`);\n\t\t}\n\t});\n\n\ttest('min-max and enum', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', enum: ['a', 'b'] }, minItems: 1, maxItems: 2 });\n\n\t\tarr.rejects(['a', 'b', 'c']).withMessage('Array must have at most 2 items');\n\t\tarr.rejects(['a', 'b', 'c']).withMessage(`Value 'c' is not one of`);\n\t});\n\n\ttest('pattern', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', pattern: '^(hello)*$' } });\n\n\t\tarr.accepts(['hello']);\n\t\tarr.rejects(['a']).withMessage(`Value 'a' must match regex`);\n\t});\n\n\ttest('pattern with error message', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', pattern: '^(hello)*$', patternErrorMessage: 'err: must be friendly' } });\n\n\t\tarr.rejects(['a']).withMessage(`err: must be friendly`);\n\t});\n\n\ttest('uniqueItems', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' }, uniqueItems: true });\n\n\t\tarr.rejects(['a', 'a']).withMessage(`Array has duplicate items`);\n\t});\n\n\ttest('getInvalidTypeError', () => {\n\t\tfunction testInvalidTypeError(value: any, type: string | string[], shouldValidate: boolean) {\n\t\t\tconst message = `value: ${value}, type: ${JSON.stringify(type)}, expected: ${shouldValidate ? 'valid' : 'invalid'}`;\n\t\t\tif (shouldValidate) {\n\t\t\t\tassert.ok(!getInvalidTypeError(value, type), message);\n\t\t\t} else {\n\t\t\t\tassert.ok(getInvalidTypeError(value, type), message);\n\t\t\t}\n\t\t}\n\n\t\ttestInvalidTypeError(1, 'number', true);\n\t\ttestInvalidTypeError(1.5, 'number', true);\n\t\ttestInvalidTypeError([1], 'number', false);\n\t\ttestInvalidTypeError('1', 'number', false);\n\t\ttestInvalidTypeError({ a: 1 }, 'number', false);\n\t\ttestInvalidTypeError(null, 'number', false);\n\n\t\ttestInvalidTypeError('a', 'string', true);\n\t\ttestInvalidTypeError('1', 'string', true);\n\t\ttestInvalidTypeError([], 'string', false);\n\t\ttestInvalidTypeError({}, 'string', false);\n\n\t\ttestInvalidTypeError([1], 'array', true);\n\t\ttestInvalidTypeError([], 'array', true);\n\t\ttestInvalidTypeError([{}, [[]]], 'array', true);\n\t\ttestInvalidTypeError({ a: ['a'] }, 'array', false);\n\t\ttestInvalidTypeError('hello', 'array', false);\n\n\t\ttestInvalidTypeError(true, 'boolean', true);\n\t\ttestInvalidTypeError('hello', 'boolean', false);\n\t\ttestInvalidTypeError(null, 'boolean', false);\n\t\ttestInvalidTypeError([true], 'boolean', false);\n\n\t\ttestInvalidTypeError(null, 'null', true);\n\t\ttestInvalidTypeError(false, 'null', false);\n\t\ttestInvalidTypeError([null], 'null', false);\n\t\ttestInvalidTypeError('null', 'null', false);\n\t});\n\n\ttest('uri checks work', () => {\n\t\tconst tester = new Tester({ type: 'string', format: 'uri' });\n\t\ttester.rejects('example.com');\n\t\ttester.rejects('example.com/example');\n\t\ttester.rejects('example/example.html');\n\t\ttester.rejects('www.example.com');\n\t\ttester.rejects('');\n\t\ttester.rejects(' ');\n\t\ttester.rejects('example');\n\n\t\ttester.accepts('https:');\n\t\ttester.accepts('https://');\n\t\ttester.accepts('https://example.com');\n\t\ttester.accepts('https://www.example.com');\n\t});\n});\n"]}