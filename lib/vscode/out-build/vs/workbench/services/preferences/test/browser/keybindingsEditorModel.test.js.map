{"version":3,"file":"keybindingsEditorModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/preferences/test/browser/keybindingsEditorModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as uuid from 'vs/base/common/uuid';\nimport { OS, OperatingSystem } from 'vs/base/common/platform';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Action } from 'vs/base/common/actions';\nimport { KeyCode, SimpleKeybinding, ChordKeybinding } from 'vs/base/common/keyCodes';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingsEditorModel } from 'vs/workbench/services/preferences/browser/keybindingsEditorModel';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\n\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IKeybindingItemEntry } from 'vs/workbench/services/preferences/common/preferences';\n\ninterface Modifiers {\n\tmetaKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tshiftKey?: boolean;\n}\n\nclass AnAction extends Action {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n\nsuite('KeybindingsEditorModel', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet testObject: KeybindingsEditorModel;\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\n\t\tinstantiationService.stub(IKeybindingService, {});\n\t\tinstantiationService.stub(IExtensionService, {}, 'whenInstalledExtensionsRegistered', () => Promise.resolve(null));\n\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OS);\n\n\t\tCommandsRegistry.registerCommand('command_without_keybinding', () => { });\n\t});\n\n\ttest('fetch returns default keybindings', async () => {\n\t\tconst expected = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'b' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } })\n\t\t);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch(''));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns default keybindings at the top', async () => {\n\t\tconst expected = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'b' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } })\n\t\t);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch('').slice(0, 2), true);\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns default keybindings sorted by command id', async () => {\n\t\tconst keybindings = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'b' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'c' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Backspace } })\n\t\t);\n\t\tconst expected = [keybindings[2], keybindings[0], keybindings[1]];\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch(''));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns user keybinding first if default and user has same id', async () => {\n\t\tconst sameId = 'b' + uuid.generateUuid();\n\t\tconst keybindings = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: sameId, firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: sameId, firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape }, isDefault: false })\n\t\t);\n\t\tconst expected = [keybindings[1], keybindings[0]];\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch(''));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns keybinding with titles first', async () => {\n\t\tconst keybindings = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'b' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'c' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'd' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } })\n\t\t);\n\n\t\tregisterCommandWithTitle(keybindings[1].command!, 'B Title');\n\t\tregisterCommandWithTitle(keybindings[3].command!, 'A Title');\n\n\t\tconst expected = [keybindings[3], keybindings[1], keybindings[0], keybindings[2]];\n\t\tinstantiationService.stub(IKeybindingService, 'getKeybindings', () => keybindings);\n\t\tinstantiationService.stub(IKeybindingService, 'getDefaultKeybindings', () => keybindings);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch(''));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns keybinding with user first if title and id matches', async () => {\n\t\tconst sameId = 'b' + uuid.generateUuid();\n\t\tconst keybindings = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: sameId, firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'c' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: sameId, firstPart: { keyCode: KeyCode.Escape }, isDefault: false })\n\t\t);\n\n\t\tregisterCommandWithTitle(keybindings[1].command!, 'Same Title');\n\t\tregisterCommandWithTitle(keybindings[3].command!, 'Same Title');\n\t\tconst expected = [keybindings[3], keybindings[1], keybindings[0], keybindings[2]];\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch(''));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('fetch returns default keybindings sorted by precedence', async () => {\n\t\tconst expected = prepareKeybindingService(\n\t\t\taResolvedKeybindingItem({ command: 'b' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'c' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, chordPart: { keyCode: KeyCode.Escape } }),\n\t\t\taResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Backspace } })\n\t\t);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actuals = asResolvedKeybindingItems(testObject.fetch('', true));\n\t\tassertKeybindingItems(actuals, expected);\n\t});\n\n\ttest('convert keybinding without title to entry', async () => {\n\t\tconst expected = aResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2' });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('')[0];\n\t\tassert.strictEqual(actual.keybindingItem.command, expected.command);\n\t\tassert.strictEqual(actual.keybindingItem.commandLabel, '');\n\t\tassert.strictEqual(actual.keybindingItem.commandDefaultLabel, null);\n\t\tassert.strictEqual(actual.keybindingItem.keybinding.getAriaLabel(), expected.resolvedKeybinding!.getAriaLabel());\n\t\tassert.strictEqual(actual.keybindingItem.when, expected.when!.serialize());\n\t});\n\n\ttest('convert keybinding with title to entry', async () => {\n\t\tconst expected = aResolvedKeybindingItem({ command: 'a' + uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2' });\n\t\tprepareKeybindingService(expected);\n\t\tregisterCommandWithTitle(expected.command!, 'Some Title');\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('')[0];\n\t\tassert.strictEqual(actual.keybindingItem.command, expected.command);\n\t\tassert.strictEqual(actual.keybindingItem.commandLabel, 'Some Title');\n\t\tassert.strictEqual(actual.keybindingItem.commandDefaultLabel, null);\n\t\tassert.strictEqual(actual.keybindingItem.keybinding.getAriaLabel(), expected.resolvedKeybinding!.getAriaLabel());\n\t\tassert.strictEqual(actual.keybindingItem.when, expected.when!.serialize());\n\t});\n\n\ttest('convert without title and binding to entry', async () => {\n\t\tCommandsRegistry.registerCommand('command_without_keybinding', () => { });\n\t\tprepareKeybindingService();\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('').filter(element => element.keybindingItem.command === 'command_without_keybinding')[0];\n\t\tassert.strictEqual(actual.keybindingItem.command, 'command_without_keybinding');\n\t\tassert.strictEqual(actual.keybindingItem.commandLabel, '');\n\t\tassert.strictEqual(actual.keybindingItem.commandDefaultLabel, null);\n\t\tassert.strictEqual(actual.keybindingItem.keybinding, undefined);\n\t\tassert.strictEqual(actual.keybindingItem.when, '');\n\t});\n\n\ttest('convert with title and without binding to entry', async () => {\n\t\tconst id = 'a' + uuid.generateUuid();\n\t\tregisterCommandWithTitle(id, 'some title');\n\t\tprepareKeybindingService();\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('').filter(element => element.keybindingItem.command === id)[0];\n\t\tassert.strictEqual(actual.keybindingItem.command, id);\n\t\tassert.strictEqual(actual.keybindingItem.commandLabel, 'some title');\n\t\tassert.strictEqual(actual.keybindingItem.commandDefaultLabel, null);\n\t\tassert.strictEqual(actual.keybindingItem.keybinding, undefined);\n\t\tassert.strictEqual(actual.keybindingItem.when, '');\n\t});\n\n\ttest('filter by command id', async () => {\n\t\tconst id = 'workbench.action.increaseViewSize';\n\t\tregisterCommandWithTitle(id, 'some title');\n\t\tprepareKeybindingService();\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('workbench action view size').filter(element => element.keybindingItem.command === id)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by command title', async () => {\n\t\tconst id = 'a' + uuid.generateUuid();\n\t\tregisterCommandWithTitle(id, 'Increase view size');\n\t\tprepareKeybindingService();\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('increase size').filter(element => element.keybindingItem.command === id)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by default source', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2' });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('default').filter(element => element.keybindingItem.command === command)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by user source', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2', isDefault: false });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('user').filter(element => element.keybindingItem.command === command)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by default source with \"@source: \" prefix', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2', isDefault: true });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('@source: default').filter(element => element.keybindingItem.command === command)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by user source with \"@source: \" prefix', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2', isDefault: false });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('@source: user').filter(element => element.keybindingItem.command === command)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by command prefix with different commands', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2', isDefault: true });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command: uuid.generateUuid(), firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: true }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch(`@command:${command}`);\n\t\tassert.strictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].keybindingItem.command, command);\n\t});\n\n\ttest('filter by command prefix with same commands', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'context1 && context2', isDefault: true });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: true }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch(`@command:${command}`);\n\t\tassert.strictEqual(actual.length, 2);\n\t\tassert.deepStrictEqual(actual[0].keybindingItem.command, command);\n\t\tassert.deepStrictEqual(actual[1].keybindingItem.command, command);\n\t});\n\n\ttest('filter by when context', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('when context').filter(element => element.keybindingItem.command === command)[0];\n\t\tassert.ok(actual);\n\t});\n\n\ttest('filter by cmd key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected);\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('cmd').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by meta key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('meta').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by command key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('command').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by windows key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Windows);\n\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('windows').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by alt key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('alt').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { altKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by option key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('option').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { altKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by ctrl key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('ctrl').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { ctrlKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by control key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('control').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { ctrlKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by shift key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('shift').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { shiftKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by arrow', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.RightArrow, modifiers: { shiftKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('arrow').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by modifier and key', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.RightArrow, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.RightArrow, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('alt right').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { altKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by key and modifier', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.RightArrow, modifiers: { altKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.RightArrow, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('right alt').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(0, actual.length);\n\t});\n\n\ttest('filter by modifiers and key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true, metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('alt cmd esc').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { altKey: true, metaKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by modifiers in random order and key', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('cmd shift esc').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true, shiftKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by first part', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.Delete }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('cmd shift esc').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true, shiftKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter matches in chord part', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.Delete }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('cmd del').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { metaKey: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, { keyCode: true });\n\t});\n\n\ttest('filter matches first part and in chord part', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.Delete }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.UpArrow }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('cmd shift esc del').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { shiftKey: true, metaKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, { keyCode: true });\n\t});\n\n\ttest('filter exact matches', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"ctrl c\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { ctrlKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter exact matches with first and chord part', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"shift meta escape ctrl c\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { shiftKey: true, metaKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, { ctrlKey: true, keyCode: true });\n\t});\n\n\ttest('filter exact matches with first and chord part no results', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.Delete, modifiers: { metaKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.UpArrow }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"cmd shift esc del\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(0, actual.length);\n\t});\n\n\ttest('filter matches with + separator', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"control+c\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { ctrlKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter by keybinding prefix', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('@keybinding:control+c').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { ctrlKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, {});\n\t});\n\n\ttest('filter matches with + separator in first and chord parts', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"shift+meta+escape ctrl+c\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { shiftKey: true, metaKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, { keyCode: true, ctrlKey: true });\n\t});\n\n\ttest('filter by keybinding prefix with chord', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { shiftKey: true, metaKey: true } }, chordPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.KEY_C, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('@keybinding:\"shift+meta+escape ctrl+c\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { shiftKey: true, metaKey: true, keyCode: true });\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.chordPart, { keyCode: true, ctrlKey: true });\n\t});\n\n\ttest('filter exact matches with space #32993', async () => {\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Space, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Backspace, modifiers: { ctrlKey: true } }, when: 'whenContext1 && whenContext2', isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"ctrl+space\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t});\n\n\ttest('filter exact matches with user settings label', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = 'a' + uuid.generateUuid();\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.DownArrow } });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command: 'down', firstPart: { keyCode: KeyCode.Escape } }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('\"down\"').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { keyCode: true });\n\t});\n\n\ttest('filter modifiers are not matched when not completely matched (prefix)', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst term = `alt.${uuid.generateUuid()}`;\n\t\tconst command = `command.${term}`;\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command: 'some_command', firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch(term);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.strictEqual(command, actual[0].keybindingItem.command);\n\t\tassert.strictEqual(1, actual[0].commandIdMatches?.length);\n\t});\n\n\ttest('filter modifiers are not matched when not completely matched (includes)', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst term = `abcaltdef.${uuid.generateUuid()}`;\n\t\tconst command = `command.${term}`;\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape }, isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command: 'some_command', firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch(term);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.strictEqual(command, actual[0].keybindingItem.command);\n\t\tassert.strictEqual(1, actual[0].commandIdMatches?.length);\n\t});\n\n\ttest('filter modifiers are matched with complete term', async () => {\n\t\ttestObject = instantiationService.createInstance(KeybindingsEditorModel, OperatingSystem.Macintosh);\n\t\tconst command = `command.${uuid.generateUuid()}`;\n\t\tconst expected = aResolvedKeybindingItem({ command, firstPart: { keyCode: KeyCode.Escape, modifiers: { altKey: true } }, isDefault: false });\n\t\tprepareKeybindingService(expected, aResolvedKeybindingItem({ command: 'some_command', firstPart: { keyCode: KeyCode.Escape }, isDefault: false }));\n\n\t\tawait testObject.resolve(new Map<string, string>());\n\t\tconst actual = testObject.fetch('alt').filter(element => element.keybindingItem.command === command);\n\t\tassert.strictEqual(1, actual.length);\n\t\tassert.deepStrictEqual(actual[0].keybindingMatches!.firstPart, { altKey: true });\n\t});\n\n\tfunction prepareKeybindingService(...keybindingItems: ResolvedKeybindingItem[]): ResolvedKeybindingItem[] {\n\t\tinstantiationService.stub(IKeybindingService, 'getKeybindings', () => keybindingItems);\n\t\tinstantiationService.stub(IKeybindingService, 'getDefaultKeybindings', () => keybindingItems);\n\t\treturn keybindingItems;\n\n\t}\n\n\tfunction registerCommandWithTitle(command: string, title: string): void {\n\t\tconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\t\tregistry.registerWorkbenchAction(SyncActionDescriptor.create(AnAction, command, title, { primary: 0 }), '');\n\t}\n\n\tfunction assertKeybindingItems(actual: ResolvedKeybindingItem[], expected: ResolvedKeybindingItem[]) {\n\t\tassert.strictEqual(actual.length, expected.length);\n\t\tfor (let i = 0; i < actual.length; i++) {\n\t\t\tassertKeybindingItem(actual[i], expected[i]);\n\t\t}\n\t}\n\n\tfunction assertKeybindingItem(actual: ResolvedKeybindingItem, expected: ResolvedKeybindingItem): void {\n\t\tassert.strictEqual(actual.command, expected.command);\n\t\tif (actual.when) {\n\t\t\tassert.ok(!!expected.when);\n\t\t\tassert.strictEqual(actual.when.serialize(), expected.when!.serialize());\n\t\t} else {\n\t\t\tassert.ok(!expected.when);\n\t\t}\n\t\tassert.strictEqual(actual.isDefault, expected.isDefault);\n\n\t\tif (actual.resolvedKeybinding) {\n\t\t\tassert.ok(!!expected.resolvedKeybinding);\n\t\t\tassert.strictEqual(actual.resolvedKeybinding.getLabel(), expected.resolvedKeybinding!.getLabel());\n\t\t} else {\n\t\t\tassert.ok(!expected.resolvedKeybinding);\n\t\t}\n\t}\n\n\tfunction aResolvedKeybindingItem({ command, when, isDefault, firstPart, chordPart }: { command?: string, when?: string, isDefault?: boolean, firstPart?: { keyCode: KeyCode, modifiers?: Modifiers }, chordPart?: { keyCode: KeyCode, modifiers?: Modifiers } }): ResolvedKeybindingItem {\n\t\tconst aSimpleKeybinding = function (part: { keyCode: KeyCode, modifiers?: Modifiers }): SimpleKeybinding {\n\t\t\tconst { ctrlKey, shiftKey, altKey, metaKey } = part.modifiers || { ctrlKey: false, shiftKey: false, altKey: false, metaKey: false };\n\t\t\treturn new SimpleKeybinding(ctrlKey!, shiftKey!, altKey!, metaKey!, part.keyCode);\n\t\t};\n\t\tlet parts: SimpleKeybinding[] = [];\n\t\tif (firstPart) {\n\t\t\tparts.push(aSimpleKeybinding(firstPart));\n\t\t\tif (chordPart) {\n\t\t\t\tparts.push(aSimpleKeybinding(chordPart));\n\t\t\t}\n\t\t}\n\t\tconst keybinding = parts.length > 0 ? new USLayoutResolvedKeybinding(new ChordKeybinding(parts), OS) : undefined;\n\t\treturn new ResolvedKeybindingItem(keybinding, command || 'some command', null, when ? ContextKeyExpr.deserialize(when) : undefined, isDefault === undefined ? true : isDefault, null, false);\n\t}\n\n\tfunction asResolvedKeybindingItems(keybindingEntries: IKeybindingItemEntry[], keepUnassigned: boolean = false): ResolvedKeybindingItem[] {\n\t\tif (!keepUnassigned) {\n\t\t\tkeybindingEntries = keybindingEntries.filter(keybindingEntry => !!keybindingEntry.keybindingItem.keybinding);\n\t\t}\n\t\treturn keybindingEntries.map(entry => entry.keybindingItem.keybindingItem);\n\t}\n\n\n});\n"]}