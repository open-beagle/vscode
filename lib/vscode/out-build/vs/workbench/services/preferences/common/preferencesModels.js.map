{"version":3,"sources":["vs/workbench/services/preferences/common/preferencesModels.ts"],"names":[],"mappings":"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","file":"preferencesModels.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten, tail, coalesce } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { JSONVisitor, visit } from 'vs/base/common/json';\nimport { Disposable, IReference } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IIdentifiedSingleEditOperation, ITextModel } from 'vs/editor/common/model';\nimport { ITextEditorModel } from 'vs/editor/common/services/resolverService';\nimport * as nls from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationPropertySchema, IConfigurationRegistry, OVERRIDE_PROPERTY_PATTERN, IConfigurationExtensionInfo } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorModel } from 'vs/workbench/common/editor';\nimport { IFilterMetadata, IFilterResult, IGroupFilter, IKeybindingsEditorModel, ISearchResultGroup, ISetting, ISettingMatch, ISettingMatcher, ISettingsEditorModel, ISettingsGroup } from 'vs/workbench/services/preferences/common/preferences';\nimport { withNullAsUndefined, isArray } from 'vs/base/common/types';\nimport { FOLDER_SCOPES, WORKSPACE_SCOPES } from 'vs/workbench/services/configuration/common/configuration';\nimport { createValidator } from 'vs/workbench/services/preferences/common/preferencesValidation';\n\nexport const nullRange: IRange = { startLineNumber: -1, startColumn: -1, endLineNumber: -1, endColumn: -1 };\nexport function isNullRange(range: IRange): boolean { return range.startLineNumber === -1 && range.startColumn === -1 && range.endLineNumber === -1 && range.endColumn === -1; }\n\nexport abstract class AbstractSettingsModel extends EditorModel {\n\n\tprotected _currentResultGroups = new Map<string, ISearchResultGroup>();\n\n\tupdateResultGroup(id: string, resultGroup: ISearchResultGroup | undefined): IFilterResult | undefined {\n\t\tif (resultGroup) {\n\t\t\tthis._currentResultGroups.set(id, resultGroup);\n\t\t} else {\n\t\t\tthis._currentResultGroups.delete(id);\n\t\t}\n\n\t\tthis.removeDuplicateResults();\n\t\treturn this.update();\n\t}\n\n\t/**\n\t * Remove duplicates between result groups, preferring results in earlier groups\n\t */\n\tprivate removeDuplicateResults(): void {\n\t\tconst settingKeys = new Set<string>();\n\t\t[...this._currentResultGroups.keys()]\n\t\t\t.sort((a, b) => this._currentResultGroups.get(a)!.order - this._currentResultGroups.get(b)!.order)\n\t\t\t.forEach(groupId => {\n\t\t\t\tconst group = this._currentResultGroups.get(groupId)!;\n\t\t\t\tgroup.result.filterMatches = group.result.filterMatches.filter(s => !settingKeys.has(s.setting.key));\n\t\t\t\tgroup.result.filterMatches.forEach(s => settingKeys.add(s.setting.key));\n\t\t\t});\n\t}\n\n\tfilterSettings(filter: string, groupFilter: IGroupFilter, settingMatcher: ISettingMatcher): ISettingMatch[] {\n\t\tconst allGroups = this.filterGroups;\n\n\t\tconst filterMatches: ISettingMatch[] = [];\n\t\tfor (const group of allGroups) {\n\t\t\tconst groupMatched = groupFilter(group);\n\t\t\tfor (const section of group.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tconst settingMatchResult = settingMatcher(setting, group);\n\n\t\t\t\t\tif (groupMatched || settingMatchResult) {\n\t\t\t\t\t\tfilterMatches.push({\n\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\tmatches: settingMatchResult && settingMatchResult.matches,\n\t\t\t\t\t\t\tscore: settingMatchResult ? settingMatchResult.score : 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filterMatches.sort((a, b) => b.score - a.score);\n\t}\n\n\tgetPreference(key: string): ISetting | undefined {\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tfor (const section of group.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (key === setting.key) {\n\t\t\t\t\t\treturn setting;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected collectMetadata(groups: ISearchResultGroup[]): IStringDictionary<IFilterMetadata> {\n\t\tconst metadata = Object.create(null);\n\t\tlet hasMetadata = false;\n\t\tgroups.forEach(g => {\n\t\t\tif (g.result.metadata) {\n\t\t\t\tmetadata[g.id] = g.result.metadata;\n\t\t\t\thasMetadata = true;\n\t\t\t}\n\t\t});\n\n\t\treturn hasMetadata ? metadata : null;\n\t}\n\n\n\tprotected get filterGroups(): ISettingsGroup[] {\n\t\treturn this.settingsGroups;\n\t}\n\n\tabstract settingsGroups: ISettingsGroup[];\n\n\tabstract findValueMatches(filter: string, setting: ISetting): IRange[];\n\n\tprotected abstract update(): IFilterResult | undefined;\n}\n\nexport class SettingsEditorModel extends AbstractSettingsModel implements ISettingsEditorModel {\n\n\tprivate _settingsGroups: ISettingsGroup[] | undefined;\n\tprotected settingsModel: ITextModel;\n\n\tprivate readonly _onDidChangeGroups: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeGroups: Event<void> = this._onDidChangeGroups.event;\n\n\tconstructor(reference: IReference<ITextEditorModel>, private _configurationTarget: ConfigurationTarget) {\n\t\tsuper();\n\t\tthis.settingsModel = reference.object.textEditorModel!;\n\t\tthis._register(this.onWillDispose(() => reference.dispose()));\n\t\tthis._register(this.settingsModel.onDidChangeContent(() => {\n\t\t\tthis._settingsGroups = undefined;\n\t\t\tthis._onDidChangeGroups.fire();\n\t\t}));\n\t}\n\n\tget uri(): URI {\n\t\treturn this.settingsModel.uri;\n\t}\n\n\tget configurationTarget(): ConfigurationTarget {\n\t\treturn this._configurationTarget;\n\t}\n\n\tget settingsGroups(): ISettingsGroup[] {\n\t\tif (!this._settingsGroups) {\n\t\t\tthis.parse();\n\t\t}\n\t\treturn this._settingsGroups!;\n\t}\n\n\tget content(): string {\n\t\treturn this.settingsModel.getValue();\n\t}\n\n\tfindValueMatches(filter: string, setting: ISetting): IRange[] {\n\t\treturn this.settingsModel.findMatches(filter, setting.valueRange, false, false, null, false).map(match => match.range);\n\t}\n\n\tprotected isSettingsProperty(property: string, previousParents: string[]): boolean {\n\t\treturn previousParents.length === 0; // Settings is root\n\t}\n\n\tprotected parse(): void {\n\t\tthis._settingsGroups = parse(this.settingsModel, (property: string, previousParents: string[]): boolean => this.isSettingsProperty(property, previousParents));\n\t}\n\n\tprotected update(): IFilterResult | undefined {\n\t\tconst resultGroups = [...this._currentResultGroups.values()];\n\t\tif (!resultGroups.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Transform resultGroups into IFilterResult - ISetting ranges are already correct here\n\t\tconst filteredSettings: ISetting[] = [];\n\t\tconst matches: IRange[] = [];\n\t\tresultGroups.forEach(group => {\n\t\t\tgroup.result.filterMatches.forEach(filterMatch => {\n\t\t\t\tfilteredSettings.push(filterMatch.setting);\n\t\t\t\tif (filterMatch.matches) {\n\t\t\t\t\tmatches.push(...filterMatch.matches);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tlet filteredGroup: ISettingsGroup | undefined;\n\t\tconst modelGroup = this.settingsGroups[0]; // Editable model has one or zero groups\n\t\tif (modelGroup) {\n\t\t\tfilteredGroup = {\n\t\t\t\tid: modelGroup.id,\n\t\t\t\trange: modelGroup.range,\n\t\t\t\tsections: [{\n\t\t\t\t\tsettings: filteredSettings\n\t\t\t\t}],\n\t\t\t\ttitle: modelGroup.title,\n\t\t\t\ttitleRange: modelGroup.titleRange,\n\t\t\t\textensionInfo: modelGroup.extensionInfo\n\t\t\t};\n\t\t}\n\n\t\tconst metadata = this.collectMetadata(resultGroups);\n\t\treturn {\n\t\t\tallGroups: this.settingsGroups,\n\t\t\tfilteredGroups: filteredGroup ? [filteredGroup] : [],\n\t\t\tmatches,\n\t\t\tmetadata\n\t\t};\n\t}\n}\n\nexport class Settings2EditorModel extends AbstractSettingsModel implements ISettingsEditorModel {\n\tprivate readonly _onDidChangeGroups: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeGroups: Event<void> = this._onDidChangeGroups.event;\n\n\tprivate dirty = false;\n\n\tconstructor(\n\t\tprivate _defaultSettings: DefaultSettings,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.source === ConfigurationTarget.DEFAULT) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tthis._onDidChangeGroups.fire();\n\t\t\t}\n\t\t}));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidSchemaChange(e => {\n\t\t\tthis.dirty = true;\n\t\t\tthis._onDidChangeGroups.fire();\n\t\t}));\n\t}\n\n\tprotected override get filterGroups(): ISettingsGroup[] {\n\t\t// Don't filter \"commonly used\"\n\t\treturn this.settingsGroups.slice(1);\n\t}\n\n\tget settingsGroups(): ISettingsGroup[] {\n\t\tconst groups = this._defaultSettings.getSettingsGroups(this.dirty);\n\t\tthis.dirty = false;\n\t\treturn groups;\n\t}\n\n\tfindValueMatches(filter: string, setting: ISetting): IRange[] {\n\t\t// TODO @roblou\n\t\treturn [];\n\t}\n\n\tprotected update(): IFilterResult {\n\t\tthrow new Error('Not supported');\n\t}\n}\n\nfunction parse(model: ITextModel, isSettingsProperty: (currentProperty: string, previousParents: string[]) => boolean): ISettingsGroup[] {\n\tconst settings: ISetting[] = [];\n\tlet overrideSetting: ISetting | null = null;\n\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\tlet settingsPropertyIndex: number = -1;\n\tconst range = {\n\t\tstartLineNumber: 0,\n\t\tstartColumn: 0,\n\t\tendLineNumber: 0,\n\t\tendColumn: 0\n\t};\n\n\tfunction onValue(value: any, offset: number, length: number) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t\tif (previousParents.length === settingsPropertyIndex + 1 || (previousParents.length === settingsPropertyIndex + 2 && overrideSetting !== null)) {\n\t\t\t// settings value started\n\t\t\tconst setting = previousParents.length === settingsPropertyIndex + 1 ? settings[settings.length - 1] : overrideSetting!.overrides![overrideSetting!.overrides!.length - 1];\n\t\t\tif (setting) {\n\t\t\t\tconst valueStartPosition = model.getPositionAt(offset);\n\t\t\t\tconst valueEndPosition = model.getPositionAt(offset + length);\n\t\t\t\tsetting.value = value;\n\t\t\t\tsetting.valueRange = {\n\t\t\t\t\tstartLineNumber: valueStartPosition.lineNumber,\n\t\t\t\t\tstartColumn: valueStartPosition.column,\n\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t};\n\t\t\t\tsetting.range = Object.assign(setting.range, {\n\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\tif (isSettingsProperty(currentProperty!, previousParents)) {\n\t\t\t\t// Settings started\n\t\t\t\tsettingsPropertyIndex = previousParents.length;\n\t\t\t\tconst position = model.getPositionAt(offset);\n\t\t\t\trange.startLineNumber = position.lineNumber;\n\t\t\t\trange.startColumn = position.column;\n\t\t\t}\n\t\t\tconst object = {};\n\t\t\tonValue(object, offset, length);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t\tpreviousParents.push(currentParent);\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentProperty = name;\n\t\t\tif (previousParents.length === settingsPropertyIndex + 1 || (previousParents.length === settingsPropertyIndex + 2 && overrideSetting !== null)) {\n\t\t\t\t// setting started\n\t\t\t\tconst settingStartPosition = model.getPositionAt(offset);\n\t\t\t\tconst setting: ISetting = {\n\t\t\t\t\tdescription: [],\n\t\t\t\t\tdescriptionIsMarkdown: false,\n\t\t\t\t\tkey: name,\n\t\t\t\t\tkeyRange: {\n\t\t\t\t\t\tstartLineNumber: settingStartPosition.lineNumber,\n\t\t\t\t\t\tstartColumn: settingStartPosition.column + 1,\n\t\t\t\t\t\tendLineNumber: settingStartPosition.lineNumber,\n\t\t\t\t\t\tendColumn: settingStartPosition.column + length\n\t\t\t\t\t},\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: settingStartPosition.lineNumber,\n\t\t\t\t\t\tstartColumn: settingStartPosition.column,\n\t\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\t\tendColumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tvalueRange: nullRange,\n\t\t\t\t\tdescriptionRanges: [],\n\t\t\t\t\toverrides: [],\n\t\t\t\t\toverrideOf: withNullAsUndefined(overrideSetting)\n\t\t\t\t};\n\t\t\t\tif (previousParents.length === settingsPropertyIndex + 1) {\n\t\t\t\t\tsettings.push(setting);\n\t\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(name)) {\n\t\t\t\t\t\toverrideSetting = setting;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toverrideSetting!.overrides!.push(setting);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t\tif (settingsPropertyIndex !== -1 && (previousParents.length === settingsPropertyIndex + 1 || (previousParents.length === settingsPropertyIndex + 2 && overrideSetting !== null))) {\n\t\t\t\t// setting ended\n\t\t\t\tconst setting = previousParents.length === settingsPropertyIndex + 1 ? settings[settings.length - 1] : overrideSetting!.overrides![overrideSetting!.overrides!.length - 1];\n\t\t\t\tif (setting) {\n\t\t\t\t\tconst valueEndPosition = model.getPositionAt(offset + length);\n\t\t\t\t\tsetting.valueRange = Object.assign(setting.valueRange, {\n\t\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t\t});\n\t\t\t\t\tsetting.range = Object.assign(setting.range, {\n\t\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (previousParents.length === settingsPropertyIndex + 1) {\n\t\t\t\t\toverrideSetting = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (previousParents.length === settingsPropertyIndex) {\n\t\t\t\t// settings ended\n\t\t\t\tconst position = model.getPositionAt(offset);\n\t\t\t\trange.endLineNumber = position.lineNumber;\n\t\t\t\trange.endColumn = position.column;\n\t\t\t\tsettingsPropertyIndex = -1;\n\t\t\t}\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array, offset, length);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t\tif (previousParents.length === settingsPropertyIndex + 1 || (previousParents.length === settingsPropertyIndex + 2 && overrideSetting !== null)) {\n\t\t\t\t// setting value ended\n\t\t\t\tconst setting = previousParents.length === settingsPropertyIndex + 1 ? settings[settings.length - 1] : overrideSetting!.overrides![overrideSetting!.overrides!.length - 1];\n\t\t\t\tif (setting) {\n\t\t\t\t\tconst valueEndPosition = model.getPositionAt(offset + length);\n\t\t\t\t\tsetting.valueRange = Object.assign(setting.valueRange, {\n\t\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t\t});\n\t\t\t\t\tsetting.range = Object.assign(setting.range, {\n\t\t\t\t\t\tendLineNumber: valueEndPosition.lineNumber,\n\t\t\t\t\t\tendColumn: valueEndPosition.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error) => {\n\t\t\tconst setting = settings[settings.length - 1];\n\t\t\tif (setting && (isNullRange(setting.range) || isNullRange(setting.keyRange) || isNullRange(setting.valueRange))) {\n\t\t\t\tsettings.pop();\n\t\t\t}\n\t\t}\n\t};\n\tif (!model.isDisposed()) {\n\t\tvisit(model.getValue(), visitor);\n\t}\n\treturn settings.length > 0 ? [<ISettingsGroup>{\n\t\tsections: [\n\t\t\t{\n\t\t\t\tsettings\n\t\t\t}\n\t\t],\n\t\ttitle: '',\n\t\ttitleRange: nullRange,\n\t\trange\n\t}] : [];\n}\n\nexport class WorkspaceConfigurationEditorModel extends SettingsEditorModel {\n\n\tprivate _configurationGroups: ISettingsGroup[] = [];\n\n\tget configurationGroups(): ISettingsGroup[] {\n\t\treturn this._configurationGroups;\n\t}\n\n\tprotected override parse(): void {\n\t\tsuper.parse();\n\t\tthis._configurationGroups = parse(this.settingsModel, (property: string, previousParents: string[]): boolean => previousParents.length === 0);\n\t}\n\n\tprotected override isSettingsProperty(property: string, previousParents: string[]): boolean {\n\t\treturn property === 'settings' && previousParents.length === 1;\n\t}\n\n}\n\nexport class DefaultSettings extends Disposable {\n\n\tprivate _allSettingsGroups: ISettingsGroup[] | undefined;\n\tprivate _content: string | undefined;\n\tprivate _settingsByName = new Map<string, ISetting>();\n\n\treadonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate _mostCommonlyUsedSettingsKeys: string[],\n\t\treadonly target: ConfigurationTarget,\n\t) {\n\t\tsuper();\n\t}\n\n\tgetContent(forceUpdate = false): string {\n\t\tif (!this._content || forceUpdate) {\n\t\t\tthis.initialize();\n\t\t}\n\n\t\treturn this._content!;\n\t}\n\n\tgetSettingsGroups(forceUpdate = false): ISettingsGroup[] {\n\t\tif (!this._allSettingsGroups || forceUpdate) {\n\t\t\tthis.initialize();\n\t\t}\n\n\t\treturn this._allSettingsGroups!;\n\t}\n\n\tprivate initialize(): void {\n\t\tthis._allSettingsGroups = this.parse();\n\t\tthis._content = this.toContent(this._allSettingsGroups);\n\t}\n\n\tprivate parse(): ISettingsGroup[] {\n\t\tconst settingsGroups = this.getRegisteredGroups();\n\t\tthis.initAllSettingsMap(settingsGroups);\n\t\tconst mostCommonlyUsed = this.getMostCommonlyUsedSettings(settingsGroups);\n\t\treturn [mostCommonlyUsed, ...settingsGroups];\n\t}\n\n\tgetRegisteredGroups(): ISettingsGroup[] {\n\t\tconst configurations = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurations().slice();\n\t\tconst groups = this.removeEmptySettingsGroups(configurations.sort(this.compareConfigurationNodes)\n\t\t\t.reduce<ISettingsGroup[]>((result, config, index, array) => this.parseConfig(config, result, array), []));\n\n\t\treturn this.sortGroups(groups);\n\t}\n\n\tprivate sortGroups(groups: ISettingsGroup[]): ISettingsGroup[] {\n\t\tgroups.forEach(group => {\n\t\t\tgroup.sections.forEach(section => {\n\t\t\t\tsection.settings.sort((a, b) => a.key.localeCompare(b.key));\n\t\t\t});\n\t\t});\n\n\t\treturn groups;\n\t}\n\n\tprivate initAllSettingsMap(allSettingsGroups: ISettingsGroup[]): void {\n\t\tthis._settingsByName = new Map<string, ISetting>();\n\t\tfor (const group of allSettingsGroups) {\n\t\t\tfor (const section of group.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tthis._settingsByName.set(setting.key, setting);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getMostCommonlyUsedSettings(allSettingsGroups: ISettingsGroup[]): ISettingsGroup {\n\t\tconst settings = coalesce(this._mostCommonlyUsedSettingsKeys.map(key => {\n\t\t\tconst setting = this._settingsByName.get(key);\n\t\t\tif (setting) {\n\t\t\t\treturn <ISetting>{\n\t\t\t\t\tdescription: setting.description,\n\t\t\t\t\tkey: setting.key,\n\t\t\t\t\tvalue: setting.value,\n\t\t\t\t\tkeyRange: nullRange,\n\t\t\t\t\trange: nullRange,\n\t\t\t\t\tvalueRange: nullRange,\n\t\t\t\t\toverrides: [],\n\t\t\t\t\tscope: ConfigurationScope.RESOURCE,\n\t\t\t\t\ttype: setting.type,\n\t\t\t\t\tenum: setting.enum,\n\t\t\t\t\tenumDescriptions: setting.enumDescriptions,\n\t\t\t\t\tdescriptionRanges: []\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\t\t}));\n\n\t\treturn <ISettingsGroup>{\n\t\t\tid: 'mostCommonlyUsed',\n\t\t\trange: nullRange,\n\t\t\ttitle: nls.localize('commonlyUsed', \"Commonly Used\"),\n\t\t\ttitleRange: nullRange,\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tsettings\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\tprivate parseConfig(config: IConfigurationNode, result: ISettingsGroup[], configurations: IConfigurationNode[], settingsGroup?: ISettingsGroup, seenSettings?: { [key: string]: boolean }): ISettingsGroup[] {\n\t\tseenSettings = seenSettings ? seenSettings : {};\n\t\tlet title = config.title;\n\t\tif (!title) {\n\t\t\tconst configWithTitleAndSameId = configurations.find(c => (c.id === config.id) && c.title);\n\t\t\tif (configWithTitleAndSameId) {\n\t\t\t\ttitle = configWithTitleAndSameId.title;\n\t\t\t}\n\t\t}\n\t\tif (title) {\n\t\t\tif (!settingsGroup) {\n\t\t\t\tsettingsGroup = result.find(g => g.title === title && g.extensionInfo?.id === config.extensionInfo?.id);\n\t\t\t\tif (!settingsGroup) {\n\t\t\t\t\tsettingsGroup = { sections: [{ settings: [] }], id: config.id || '', title: title || '', titleRange: nullRange, range: nullRange, extensionInfo: config.extensionInfo };\n\t\t\t\t\tresult.push(settingsGroup);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsettingsGroup.sections[settingsGroup.sections.length - 1].title = title;\n\t\t\t}\n\t\t}\n\t\tif (config.properties) {\n\t\t\tif (!settingsGroup) {\n\t\t\t\tsettingsGroup = { sections: [{ settings: [] }], id: config.id || '', title: config.id || '', titleRange: nullRange, range: nullRange, extensionInfo: config.extensionInfo };\n\t\t\t\tresult.push(settingsGroup);\n\t\t\t}\n\t\t\tconst configurationSettings: ISetting[] = [];\n\t\t\tfor (const setting of [...settingsGroup.sections[settingsGroup.sections.length - 1].settings, ...this.parseSettings(config.properties, config.extensionInfo)]) {\n\t\t\t\tif (!seenSettings[setting.key]) {\n\t\t\t\t\tconfigurationSettings.push(setting);\n\t\t\t\t\tseenSettings[setting.key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configurationSettings.length) {\n\t\t\t\tsettingsGroup.sections[settingsGroup.sections.length - 1].settings = configurationSettings;\n\t\t\t}\n\t\t}\n\t\tif (config.allOf) {\n\t\t\tconfig.allOf.forEach(c => this.parseConfig(c, result, configurations, settingsGroup, seenSettings));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate removeEmptySettingsGroups(settingsGroups: ISettingsGroup[]): ISettingsGroup[] {\n\t\tconst result: ISettingsGroup[] = [];\n\t\tfor (const settingsGroup of settingsGroups) {\n\t\t\tsettingsGroup.sections = settingsGroup.sections.filter(section => section.settings.length > 0);\n\t\t\tif (settingsGroup.sections.length) {\n\t\t\t\tresult.push(settingsGroup);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate parseSettings(settingsObject: { [path: string]: IConfigurationPropertySchema; }, extensionInfo?: IConfigurationExtensionInfo): ISetting[] {\n\t\tconst result: ISetting[] = [];\n\t\tfor (const key in settingsObject) {\n\t\t\tconst prop = settingsObject[key];\n\t\t\tif (this.matchesScope(prop)) {\n\t\t\t\tconst value = prop.default;\n\t\t\t\tconst description = (prop.description || prop.markdownDescription || '').split('\\n');\n\t\t\t\tconst overrides = OVERRIDE_PROPERTY_PATTERN.test(key) ? this.parseOverrideSettings(prop.default) : [];\n\t\t\t\tconst listItemType = prop.type === 'array' && prop.items && !isArray(prop.items) && prop.items.type && !isArray(prop.items.type)\n\t\t\t\t\t? prop.items.type\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst objectProperties = prop.type === 'object' ? prop.properties : undefined;\n\t\t\t\tconst objectPatternProperties = prop.type === 'object' ? prop.patternProperties : undefined;\n\t\t\t\tconst objectAdditionalProperties = prop.type === 'object' ? prop.additionalProperties : undefined;\n\n\t\t\t\tresult.push({\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tdescription,\n\t\t\t\t\tdescriptionIsMarkdown: !prop.description,\n\t\t\t\t\trange: nullRange,\n\t\t\t\t\tkeyRange: nullRange,\n\t\t\t\t\tvalueRange: nullRange,\n\t\t\t\t\tdescriptionRanges: [],\n\t\t\t\t\toverrides,\n\t\t\t\t\tscope: prop.scope,\n\t\t\t\t\ttype: prop.type,\n\t\t\t\t\tarrayItemType: listItemType,\n\t\t\t\t\tobjectProperties,\n\t\t\t\t\tobjectPatternProperties,\n\t\t\t\t\tobjectAdditionalProperties,\n\t\t\t\t\tenum: prop.enum,\n\t\t\t\t\tenumDescriptions: prop.enumDescriptions || prop.markdownEnumDescriptions,\n\t\t\t\t\tenumDescriptionsAreMarkdown: !prop.enumDescriptions,\n\t\t\t\t\ttags: prop.tags,\n\t\t\t\t\tdisallowSyncIgnore: prop.disallowSyncIgnore,\n\t\t\t\t\trestricted: prop.restricted,\n\t\t\t\t\textensionInfo: extensionInfo,\n\t\t\t\t\tdeprecationMessage: prop.markdownDeprecationMessage || prop.deprecationMessage,\n\t\t\t\t\tdeprecationMessageIsMarkdown: !!prop.markdownDeprecationMessage,\n\t\t\t\t\tvalidator: createValidator(prop),\n\t\t\t\t\tenumItemLabels: prop.enumItemLabels\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate parseOverrideSettings(overrideSettings: any): ISetting[] {\n\t\treturn Object.keys(overrideSettings).map((key) => ({\n\t\t\tkey,\n\t\t\tvalue: overrideSettings[key],\n\t\t\tdescription: [],\n\t\t\tdescriptionIsMarkdown: false,\n\t\t\trange: nullRange,\n\t\t\tkeyRange: nullRange,\n\t\t\tvalueRange: nullRange,\n\t\t\tdescriptionRanges: [],\n\t\t\toverrides: []\n\t\t}));\n\t}\n\n\tprivate matchesScope(property: IConfigurationNode): boolean {\n\t\tif (!property.scope) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.target === ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\treturn FOLDER_SCOPES.indexOf(property.scope) !== -1;\n\t\t}\n\t\tif (this.target === ConfigurationTarget.WORKSPACE) {\n\t\t\treturn WORKSPACE_SCOPES.indexOf(property.scope) !== -1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate compareConfigurationNodes(c1: IConfigurationNode, c2: IConfigurationNode): number {\n\t\tif (typeof c1.order !== 'number') {\n\t\t\treturn 1;\n\t\t}\n\t\tif (typeof c2.order !== 'number') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (c1.order === c2.order) {\n\t\t\tconst title1 = c1.title || '';\n\t\t\tconst title2 = c2.title || '';\n\t\t\treturn title1.localeCompare(title2);\n\t\t}\n\t\treturn c1.order - c2.order;\n\t}\n\n\tprivate toContent(settingsGroups: ISettingsGroup[]): string {\n\t\tconst builder = new SettingsContentBuilder();\n\t\tbuilder.pushLine('[');\n\t\tsettingsGroups.forEach((settingsGroup, i) => {\n\t\t\tbuilder.pushGroup(settingsGroup);\n\t\t\tbuilder.pushLine(',');\n\t\t});\n\t\tbuilder.pushLine(']');\n\t\treturn builder.getContent();\n\t}\n\n}\n\nexport class DefaultSettingsEditorModel extends AbstractSettingsModel implements ISettingsEditorModel {\n\n\tprivate _model: ITextModel;\n\n\tprivate readonly _onDidChangeGroups: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeGroups: Event<void> = this._onDidChangeGroups.event;\n\n\tconstructor(\n\t\tprivate _uri: URI,\n\t\treference: IReference<ITextEditorModel>,\n\t\tprivate readonly defaultSettings: DefaultSettings\n\t) {\n\t\tsuper();\n\n\t\tthis._register(defaultSettings.onDidChange(() => this._onDidChangeGroups.fire()));\n\t\tthis._model = reference.object.textEditorModel!;\n\t\tthis._register(this.onWillDispose(() => reference.dispose()));\n\t}\n\n\tget uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tget target(): ConfigurationTarget {\n\t\treturn this.defaultSettings.target;\n\t}\n\n\tget settingsGroups(): ISettingsGroup[] {\n\t\treturn this.defaultSettings.getSettingsGroups();\n\t}\n\n\tprotected override get filterGroups(): ISettingsGroup[] {\n\t\t// Don't look at \"commonly used\" for filter\n\t\treturn this.settingsGroups.slice(1);\n\t}\n\n\tprotected update(): IFilterResult | undefined {\n\t\tif (this._model.isDisposed()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Grab current result groups, only render non-empty groups\n\t\tconst resultGroups = [...this._currentResultGroups.values()]\n\t\t\t.sort((a, b) => a.order - b.order);\n\t\tconst nonEmptyResultGroups = resultGroups.filter(group => group.result.filterMatches.length);\n\n\t\tconst startLine = tail(this.settingsGroups).range.endLineNumber + 2;\n\t\tconst { settingsGroups: filteredGroups, matches } = this.writeResultGroups(nonEmptyResultGroups, startLine);\n\n\t\tconst metadata = this.collectMetadata(resultGroups);\n\t\treturn resultGroups.length ?\n\t\t\t<IFilterResult>{\n\t\t\t\tallGroups: this.settingsGroups,\n\t\t\t\tfilteredGroups,\n\t\t\t\tmatches,\n\t\t\t\tmetadata\n\t\t\t} :\n\t\t\tundefined;\n\t}\n\n\t/**\n\t * Translate the ISearchResultGroups to text, and write it to the editor model\n\t */\n\tprivate writeResultGroups(groups: ISearchResultGroup[], startLine: number): { matches: IRange[], settingsGroups: ISettingsGroup[] } {\n\t\tconst contentBuilderOffset = startLine - 1;\n\t\tconst builder = new SettingsContentBuilder(contentBuilderOffset);\n\n\t\tconst settingsGroups: ISettingsGroup[] = [];\n\t\tconst matches: IRange[] = [];\n\t\tbuilder.pushLine(',');\n\t\tgroups.forEach(resultGroup => {\n\t\t\tconst settingsGroup = this.getGroup(resultGroup);\n\t\t\tsettingsGroups.push(settingsGroup);\n\t\t\tmatches.push(...this.writeSettingsGroupToBuilder(builder, settingsGroup, resultGroup.result.filterMatches));\n\t\t});\n\n\t\t// note: 1-indexed line numbers here\n\t\tconst groupContent = builder.getContent() + '\\n';\n\t\tconst groupEndLine = this._model.getLineCount();\n\t\tconst cursorPosition = new Selection(startLine, 1, startLine, 1);\n\t\tconst edit: IIdentifiedSingleEditOperation = {\n\t\t\ttext: groupContent,\n\t\t\tforceMoveMarkers: true,\n\t\t\trange: new Range(startLine, 1, groupEndLine, 1),\n\t\t\tidentifier: { major: 1, minor: 0 }\n\t\t};\n\n\t\tthis._model.pushEditOperations([cursorPosition], [edit], () => [cursorPosition]);\n\n\t\t// Force tokenization now - otherwise it may be slightly delayed, causing a flash of white text\n\t\tconst tokenizeTo = Math.min(startLine + 60, this._model.getLineCount());\n\t\tthis._model.forceTokenization(tokenizeTo);\n\n\t\treturn { matches, settingsGroups };\n\t}\n\n\tprivate writeSettingsGroupToBuilder(builder: SettingsContentBuilder, settingsGroup: ISettingsGroup, filterMatches: ISettingMatch[]): IRange[] {\n\t\tfilterMatches = filterMatches\n\t\t\t.map(filteredMatch => {\n\t\t\t\t// Fix match ranges to offset from setting start line\n\t\t\t\treturn <ISettingMatch>{\n\t\t\t\t\tsetting: filteredMatch.setting,\n\t\t\t\t\tscore: filteredMatch.score,\n\t\t\t\t\tmatches: filteredMatch.matches && filteredMatch.matches.map(match => {\n\t\t\t\t\t\treturn new Range(\n\t\t\t\t\t\t\tmatch.startLineNumber - filteredMatch.setting.range.startLineNumber,\n\t\t\t\t\t\t\tmatch.startColumn,\n\t\t\t\t\t\t\tmatch.endLineNumber - filteredMatch.setting.range.startLineNumber,\n\t\t\t\t\t\t\tmatch.endColumn);\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t});\n\n\t\tbuilder.pushGroup(settingsGroup);\n\t\tbuilder.pushLine(',');\n\n\t\t// builder has rewritten settings ranges, fix match ranges\n\t\tconst fixedMatches = flatten(\n\t\t\tfilterMatches\n\t\t\t\t.map(m => m.matches || [])\n\t\t\t\t.map((settingMatches, i) => {\n\t\t\t\t\tconst setting = settingsGroup.sections[0].settings[i];\n\t\t\t\t\treturn settingMatches.map(range => {\n\t\t\t\t\t\treturn new Range(\n\t\t\t\t\t\t\trange.startLineNumber + setting.range.startLineNumber,\n\t\t\t\t\t\t\trange.startColumn,\n\t\t\t\t\t\t\trange.endLineNumber + setting.range.startLineNumber,\n\t\t\t\t\t\t\trange.endColumn);\n\t\t\t\t\t});\n\t\t\t\t}));\n\n\t\treturn fixedMatches;\n\t}\n\n\tprivate copySetting(setting: ISetting): ISetting {\n\t\treturn {\n\t\t\tdescription: setting.description,\n\t\t\tscope: setting.scope,\n\t\t\ttype: setting.type,\n\t\t\tenum: setting.enum,\n\t\t\tenumDescriptions: setting.enumDescriptions,\n\t\t\tkey: setting.key,\n\t\t\tvalue: setting.value,\n\t\t\trange: setting.range,\n\t\t\toverrides: [],\n\t\t\toverrideOf: setting.overrideOf,\n\t\t\ttags: setting.tags,\n\t\t\tdeprecationMessage: setting.deprecationMessage,\n\t\t\tkeyRange: nullRange,\n\t\t\tvalueRange: nullRange,\n\t\t\tdescriptionIsMarkdown: undefined,\n\t\t\tdescriptionRanges: []\n\t\t};\n\t}\n\n\tfindValueMatches(filter: string, setting: ISetting): IRange[] {\n\t\treturn [];\n\t}\n\n\toverride getPreference(key: string): ISetting | undefined {\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tfor (const section of group.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (setting.key === key) {\n\t\t\t\t\t\treturn setting;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getGroup(resultGroup: ISearchResultGroup): ISettingsGroup {\n\t\treturn <ISettingsGroup>{\n\t\t\tid: resultGroup.id,\n\t\t\trange: nullRange,\n\t\t\ttitle: resultGroup.label,\n\t\t\ttitleRange: nullRange,\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tsettings: resultGroup.result.filterMatches.map(m => this.copySetting(m.setting))\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n\nclass SettingsContentBuilder {\n\tprivate _contentByLines: string[];\n\n\tprivate get lineCountWithOffset(): number {\n\t\treturn this._contentByLines.length + this._rangeOffset;\n\t}\n\n\tprivate get lastLine(): string {\n\t\treturn this._contentByLines[this._contentByLines.length - 1] || '';\n\t}\n\n\tconstructor(private _rangeOffset = 0) {\n\t\tthis._contentByLines = [];\n\t}\n\n\tpushLine(...lineText: string[]): void {\n\t\tthis._contentByLines.push(...lineText);\n\t}\n\n\tpushGroup(settingsGroups: ISettingsGroup): void {\n\t\tthis._contentByLines.push('{');\n\t\tthis._contentByLines.push('');\n\t\tthis._contentByLines.push('');\n\t\tconst lastSetting = this._pushGroup(settingsGroups, '  ');\n\n\t\tif (lastSetting) {\n\t\t\t// Strip the comma from the last setting\n\t\t\tconst lineIdx = lastSetting.range.endLineNumber - this._rangeOffset;\n\t\t\tconst content = this._contentByLines[lineIdx - 2];\n\t\t\tthis._contentByLines[lineIdx - 2] = content.substring(0, content.length - 1);\n\t\t}\n\n\t\tthis._contentByLines.push('}');\n\t}\n\n\tprotected _pushGroup(group: ISettingsGroup, indent: string): ISetting | null {\n\t\tlet lastSetting: ISetting | null = null;\n\t\tconst groupStart = this.lineCountWithOffset + 1;\n\t\tfor (const section of group.sections) {\n\t\t\tif (section.title) {\n\t\t\t\tconst sectionTitleStart = this.lineCountWithOffset + 1;\n\t\t\t\tthis.addDescription([section.title], indent, this._contentByLines);\n\t\t\t\tsection.titleRange = { startLineNumber: sectionTitleStart, startColumn: 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length };\n\t\t\t}\n\n\t\t\tif (section.settings.length) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tthis.pushSetting(setting, indent);\n\t\t\t\t\tlastSetting = setting;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tgroup.range = { startLineNumber: groupStart, startColumn: 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length };\n\t\treturn lastSetting;\n\t}\n\n\tgetContent(): string {\n\t\treturn this._contentByLines.join('\\n');\n\t}\n\n\tprivate pushSetting(setting: ISetting, indent: string): void {\n\t\tconst settingStart = this.lineCountWithOffset + 1;\n\n\t\tthis.pushSettingDescription(setting, indent);\n\n\t\tlet preValueContent = indent;\n\t\tconst keyString = JSON.stringify(setting.key);\n\t\tpreValueContent += keyString;\n\t\tsetting.keyRange = { startLineNumber: this.lineCountWithOffset + 1, startColumn: preValueContent.indexOf(setting.key) + 1, endLineNumber: this.lineCountWithOffset + 1, endColumn: setting.key.length };\n\n\t\tpreValueContent += ': ';\n\t\tconst valueStart = this.lineCountWithOffset + 1;\n\t\tthis.pushValue(setting, preValueContent, indent);\n\n\t\tsetting.valueRange = { startLineNumber: valueStart, startColumn: preValueContent.length + 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length + 1 };\n\t\tthis._contentByLines[this._contentByLines.length - 1] += ',';\n\t\tthis._contentByLines.push('');\n\t\tsetting.range = { startLineNumber: settingStart, startColumn: 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length };\n\t}\n\n\tprivate pushSettingDescription(setting: ISetting, indent: string): void {\n\t\tconst fixSettingLink = (line: string) => line.replace(/`#(.*)#`/g, (match, settingName) => `\\`${settingName}\\``);\n\n\t\tsetting.descriptionRanges = [];\n\t\tconst descriptionPreValue = indent + '// ';\n\t\tfor (let line of (setting.deprecationMessage ? [setting.deprecationMessage, ...setting.description] : setting.description)) {\n\t\t\tline = fixSettingLink(line);\n\n\t\t\tthis._contentByLines.push(descriptionPreValue + line);\n\t\t\tsetting.descriptionRanges.push({ startLineNumber: this.lineCountWithOffset, startColumn: this.lastLine.indexOf(line) + 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length });\n\t\t}\n\n\t\tif (setting.enumDescriptions && setting.enumDescriptions.some(desc => !!desc)) {\n\t\t\tsetting.enumDescriptions.forEach((desc, i) => {\n\t\t\t\tconst displayEnum = escapeInvisibleChars(String(setting.enum![i]));\n\t\t\t\tconst line = desc ?\n\t\t\t\t\t`${displayEnum}: ${fixSettingLink(desc)}` :\n\t\t\t\t\tdisplayEnum;\n\n\t\t\t\tconst lines = line.split(/\\n/g);\n\t\t\t\tlines[0] = ' - ' + lines[0];\n\t\t\t\tthis._contentByLines.push(...lines.map(l => `${indent}// ${l}`));\n\n\t\t\t\tsetting.descriptionRanges.push({ startLineNumber: this.lineCountWithOffset, startColumn: this.lastLine.indexOf(line) + 1, endLineNumber: this.lineCountWithOffset, endColumn: this.lastLine.length });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate pushValue(setting: ISetting, preValueConent: string, indent: string): void {\n\t\tconst valueString = JSON.stringify(setting.value, null, indent);\n\t\tif (valueString && (typeof setting.value === 'object')) {\n\t\t\tif (setting.overrides && setting.overrides.length) {\n\t\t\t\tthis._contentByLines.push(preValueConent + ' {');\n\t\t\t\tfor (const subSetting of setting.overrides) {\n\t\t\t\t\tthis.pushSetting(subSetting, indent + indent);\n\t\t\t\t\tthis._contentByLines.pop();\n\t\t\t\t}\n\t\t\t\tconst lastSetting = setting.overrides[setting.overrides.length - 1];\n\t\t\t\tconst content = this._contentByLines[lastSetting.range.endLineNumber - 2];\n\t\t\t\tthis._contentByLines[lastSetting.range.endLineNumber - 2] = content.substring(0, content.length - 1);\n\t\t\t\tthis._contentByLines.push(indent + '}');\n\t\t\t} else {\n\t\t\t\tconst mulitLineValue = valueString.split('\\n');\n\t\t\t\tthis._contentByLines.push(preValueConent + mulitLineValue[0]);\n\t\t\t\tfor (let i = 1; i < mulitLineValue.length; i++) {\n\t\t\t\t\tthis._contentByLines.push(indent + mulitLineValue[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._contentByLines.push(preValueConent + valueString);\n\t\t}\n\t}\n\n\tprivate addDescription(description: string[], indent: string, result: string[]) {\n\t\tfor (const line of description) {\n\t\t\tresult.push(indent + '// ' + line);\n\t\t}\n\t}\n}\n\nclass RawSettingsContentBuilder extends SettingsContentBuilder {\n\n\tconstructor(private indent: string = '\\t') {\n\t\tsuper(0);\n\t}\n\n\toverride pushGroup(settingsGroups: ISettingsGroup): void {\n\t\tthis._pushGroup(settingsGroups, this.indent);\n\t}\n\n}\n\nexport class DefaultRawSettingsEditorModel extends Disposable {\n\n\tprivate _content: string | null = null;\n\n\tconstructor(private defaultSettings: DefaultSettings) {\n\t\tsuper();\n\t\tthis._register(defaultSettings.onDidChange(() => this._content = null));\n\t}\n\n\tget content(): string {\n\t\tif (this._content === null) {\n\t\t\tconst builder = new RawSettingsContentBuilder();\n\t\t\tbuilder.pushLine('{');\n\t\t\tfor (const settingsGroup of this.defaultSettings.getRegisteredGroups()) {\n\t\t\t\tbuilder.pushGroup(settingsGroup);\n\t\t\t}\n\t\t\tbuilder.pushLine('}');\n\t\t\tthis._content = builder.getContent();\n\t\t}\n\t\treturn this._content;\n\t}\n}\n\nfunction escapeInvisibleChars(enumValue: string): string {\n\treturn enumValue && enumValue\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\r/g, '\\\\r');\n}\n\nexport function defaultKeybindingsContents(keybindingService: IKeybindingService): string {\n\tconst defaultsHeader = '// ' + nls.localize('defaultKeybindingsHeader', \"Override key bindings by placing them into your key bindings file.\");\n\treturn defaultsHeader + '\\n' + keybindingService.getDefaultKeybindingsContent();\n}\n\nexport class DefaultKeybindingsEditorModel implements IKeybindingsEditorModel<any> {\n\n\tprivate _content: string | undefined;\n\n\tconstructor(private _uri: URI,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService) {\n\t}\n\n\tget uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tget content(): string {\n\t\tif (!this._content) {\n\t\t\tthis._content = defaultKeybindingsContents(this.keybindingService);\n\t\t}\n\t\treturn this._content;\n\t}\n\n\tgetPreference(): any {\n\t\treturn null;\n\t}\n\n\tdispose(): void {\n\t\t// Not disposable\n\t}\n}\n"]}