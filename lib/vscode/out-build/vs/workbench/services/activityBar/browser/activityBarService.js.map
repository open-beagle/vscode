{"version":3,"file":"activityBarService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/activityBar/browser/activityBarService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,mBAAmB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAsB,oBAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport const IActivityBarService = createDecorator<IActivityBarService>('activityBarService');\n\nexport interface IActivityBarService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Show an activity in a viewlet.\n\t */\n\tshowActivity(viewletOrActionId: string, badge: IBadge, clazz?: string, priority?: number): IDisposable;\n\n\t/**\n\t * Returns id of pinned view containers following the visual order.\n\t */\n\tgetPinnedViewContainerIds(): string[];\n\n\t/**\n\t * Returns id of visible viewlets following the visual order.\n\t */\n\tgetVisibleViewContainerIds(): string[];\n\n\t/**\n\t * Focuses the activity bar.\n\t */\n\tfocusActivityBar(): void;\n}\n"]}