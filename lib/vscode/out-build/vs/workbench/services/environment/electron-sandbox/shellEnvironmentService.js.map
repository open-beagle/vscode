{"version":3,"file":"shellEnvironmentService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/environment/electron-sandbox/shellEnvironmentService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOnF,QAAA,wBAAwB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAA2B,yBAAyB,CAAC,CAAC;IAS7G,MAAa,uBAAuB;QAInC,WAAW;YACV,OAAO,iBAAO,CAAC,QAAQ,EAAE,CAAC;QAC3B,CAAC;KACD;IAPD,0DAOC;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,gCAAwB,EAAE,uBAAuB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { process } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport const IShellEnvironmentService = createDecorator<IShellEnvironmentService>('shellEnvironmentService');\n\nexport interface IShellEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment>;\n}\n\nexport class ShellEnvironmentService implements IShellEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment> {\n\t\treturn process.shellEnv();\n\t}\n}\n\nregisterSingleton(IShellEnvironmentService, ShellEnvironmentService);\n"]}