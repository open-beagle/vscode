{"version":3,"file":"environmentService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/environment/browser/environmentService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport { IColorScheme, IPath, IWindowConfiguration } from 'vs/platform/windows/common/windows';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport type { IWorkbenchConstructionOptions as IWorkbenchOptions } from 'vs/workbench/workbench.web.api';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { memoize } from 'vs/base/common/decorators';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { parseLineAndColumnAware } from 'vs/base/common/extpath';\nimport { LogLevelToString } from 'vs/platform/log/common/log';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\n\nclass BrowserWorkbenchConfiguration implements IWindowConfiguration {\n\n\tconstructor(\n\t\tprivate readonly options: IBrowserWorkbenchOptions,\n\t\tprivate readonly payload: Map<string, string> | undefined\n\t) { }\n\n\t@memoize\n\tget sessionId(): string { return generateUuid(); }\n\n\t@memoize\n\tget remoteAuthority(): string | undefined { return this.options.remoteAuthority; }\n\n\t@memoize\n\tget filesToOpenOrCreate(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToOpen = this.payload.get('openFile');\n\t\t\tif (fileToOpen) {\n\t\t\t\tconst fileUri = URI.parse(fileToOpen);\n\n\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\tif (this.payload.has('gotoLineMode')) {\n\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(fileUri.path);\n\n\t\t\t\t\treturn [{\n\t\t\t\t\t\tfileUri: fileUri.with({ path: pathColumnAware.path }),\n\t\t\t\t\t\tlineNumber: pathColumnAware.line,\n\t\t\t\t\t\tcolumnNumber: pathColumnAware.column\n\t\t\t\t\t}];\n\t\t\t\t}\n\n\t\t\t\treturn [{ fileUri }];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToDiff(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToDiffPrimary = this.payload.get('diffFilePrimary');\n\t\t\tconst fileToDiffSecondary = this.payload.get('diffFileSecondary');\n\t\t\tif (fileToDiffPrimary && fileToDiffSecondary) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffSecondary) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffPrimary) }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget colorScheme(): IColorScheme {\n\t\treturn { dark: false, highContrast: false };\n\t}\n}\n\ninterface IBrowserWorkbenchOptions extends IWorkbenchOptions {\n\tworkspaceId: string;\n\tlogsPath: URI;\n}\n\ninterface IExtensionHostDebugEnvironment {\n\tparams: IExtensionHostDebugParams;\n\tdebugRenderer: boolean;\n\tisExtensionDevelopment: boolean;\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n}\n\nexport class BrowserWorkbenchEnvironmentService implements IWorkbenchEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _configuration: IWindowConfiguration | undefined = undefined;\n\tget configuration(): IWindowConfiguration {\n\t\tif (!this._configuration) {\n\t\t\tthis._configuration = new BrowserWorkbenchConfiguration(this.options, this.payload);\n\t\t}\n\n\t\treturn this._configuration;\n\t}\n\n\t@memoize\n\tget remoteAuthority(): string | undefined { return this.options.remoteAuthority; }\n\n\t@memoize\n\tget isBuilt(): boolean { return !!this.productService.commit; }\n\n\t@memoize\n\tget logsPath(): string { return this.options.logsPath.path; }\n\n\t@memoize\n\tget logLevel(): string | undefined { return this.payload?.get('logLevel') || (this.options.developmentOptions?.logLevel !== undefined ? LogLevelToString(this.options.developmentOptions?.logLevel) : undefined); }\n\n\t@memoize\n\tget logFile(): URI { return joinPath(this.options.logsPath, 'window.log'); }\n\n\t// NOTE@coder: Use the same path in // ../../../../platform/environment/node/environmentService.ts\n\t// and don't use the user data scheme. This solves two problems:\n\t//  1. Extensions running in the browser (like Vim) might use these paths\n\t//     directly instead of using the file service and most likely can't write\n\t//     to `/User` on disk.\n\t//  2. Settings will be stored in the file system instead of in browser\n\t//     storage. Using browser storage makes sharing or seeding settings\n\t//     between browsers difficult. We may want to revisit this once/if we get\n\t//     settings sync.\n\t@memoize\n\tget userRoamingDataHome(): URI { return joinPath(URI.file(this.userDataPath).with({ scheme: Schemas.vscodeRemote }), 'User'); }\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst dataPath = this.payload?.get('userDataPath');\n\t\tif (!dataPath) {\n\t\t\tthrow new Error('userDataPath was not provided to environment service');\n\t\t}\n\t\treturn dataPath;\n\t}\n\n\t@memoize\n\tget settingsResource(): URI { return joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget argvResource(): URI { return joinPath(this.userRoamingDataHome, 'argv.json'); }\n\n\t@memoize\n\tget snippetsHome(): URI { return joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.userRoamingDataHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.userRoamingDataHome, 'workspaceStorage'); }\n\n\t/*\n\t * In Web every workspace can potentially have scoped user-data and/or extensions and if Sync state is shared then it can make\n\t * Sync error prone - say removing extensions from another workspace. Hence scope Sync state per workspace.\n\t * Sync scoped to a workspace is capable of handling opening same workspace in multiple windows.\n\t */\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync', this.options.workspaceId); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return joinPath(this.options.logsPath, 'userDataSync.log'); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return undefined; }\n\n\t@memoize\n\tget keybindingsResource(): URI { return joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return joinPath(this.userRoamingDataHome, 'Workspaces'); }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(this.userRoamingDataHome, 'machineid'); }\n\n\t@memoize\n\tget extHostLogsPath(): URI { return joinPath(this.options.logsPath, 'exthost'); }\n\n\tprivate _extensionHostDebugEnvironment: IExtensionHostDebugEnvironment | undefined = undefined;\n\tget debugExtensionHost(): IExtensionHostDebugParams {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.params;\n\t}\n\n\tget isExtensionDevelopment(): boolean {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.isExtensionDevelopment;\n\t}\n\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.extensionDevelopmentLocationURI;\n\t}\n\n\tget extensionDevelopmentLocationKind(): ExtensionKind[] | undefined {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.extensionDevelopmentKind;\n\t}\n\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.extensionTestsLocationURI;\n\t}\n\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.extensionEnabledProposedApi;\n\t}\n\n\tget debugRenderer(): boolean {\n\t\tif (!this._extensionHostDebugEnvironment) {\n\t\t\tthis._extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this._extensionHostDebugEnvironment.debugRenderer;\n\t}\n\n\tget disableExtensions() { return this.payload?.get('disableExtensions') === 'true'; }\n\n\tprivate get webviewEndpoint(): string {\n\t\t// TODO@matt: get fallback from product service\n\t\treturn this.options.webviewEndpoint || 'https://{{uuid}}.vscode-webview-test.com/{{commit}}';\n\t}\n\n\t@memoize\n\tget webviewExternalEndpoint(): string {\n\t\treturn (this.webviewEndpoint).replace('{{commit}}', this.productService.commit || '23a2409675bc1bde94f3532bc7c5826a6e99e4b6');\n\t}\n\n\t@memoize\n\tget webviewResourceRoot(): string {\n\t\treturn `${this.webviewExternalEndpoint}/vscode-resource/{{resource}}`;\n\t}\n\n\t@memoize\n\tget webviewCspSource(): string {\n\t\tconst uri = URI.parse(this.webviewEndpoint.replace('{{uuid}}', '*'));\n\t\treturn `${uri.scheme}://${uri.authority}`;\n\t}\n\n\t@memoize\n\tget telemetryLogResource(): URI { return joinPath(this.options.logsPath, 'telemetry.log'); }\n\tget disableTelemetry(): boolean { return false; }\n\n\tget verbose(): boolean { return this.payload?.get('verbose') === 'true'; }\n\tget logExtensionHostCommunication(): boolean { return this.payload?.get('logExtensionHostCommunication') === 'true'; }\n\n\tget skipReleaseNotes(): boolean { return false; }\n\n\tprivate payload: Map<string, string> | undefined;\n\n\tconstructor(\n\t\treadonly options: IBrowserWorkbenchOptions,\n\t\tprivate readonly productService: IProductService\n\t) {\n\t\tif (options.workspaceProvider && Array.isArray(options.workspaceProvider.payload)) {\n\t\t\ttry {\n\t\t\t\tthis.payload = new Map(options.workspaceProvider.payload);\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // possible invalid payload for map\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveExtensionHostDebugEnvironment(): IExtensionHostDebugEnvironment {\n\t\tconst extensionHostDebugEnvironment: IExtensionHostDebugEnvironment = {\n\t\t\tparams: {\n\t\t\t\tport: null,\n\t\t\t\tbreak: false\n\t\t\t},\n\t\t\tdebugRenderer: false,\n\t\t\tisExtensionDevelopment: false,\n\t\t\textensionDevelopmentLocationURI: undefined,\n\t\t\textensionDevelopmentKind: undefined\n\t\t};\n\t\tconst developmentOptions = this.options.developmentOptions;\n\t\tif (developmentOptions) {\n\t\t\tif (developmentOptions.extensions?.length) {\n\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = developmentOptions.extensions.map(e => URI.revive(e.extensionLocation));\n\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t}\n\t\t\tif (developmentOptions) {\n\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.revive(developmentOptions.extensionTestsPath);\n\t\t\t}\n\t\t}\n\n\t\t// Fill in selected extra environmental properties\n\t\tif (this.payload) {\n\t\t\tfor (const [key, value] of this.payload) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'extensionDevelopmentPath':\n\t\t\t\t\t\tif (!extensionHostDebugEnvironment.extensionDevelopmentLocationURI) {\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI.push(URI.parse(value));\n\t\t\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionDevelopmentKind':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentKind = [<ExtensionKind>value];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionTestsPath':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.parse(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugRenderer':\n\t\t\t\t\t\textensionHostDebugEnvironment.debugRenderer = value === 'true';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugId':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.debugId = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-brk-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\textensionHostDebugEnvironment.params.break = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'enableProposedApi':\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionEnabledProposedApi = JSON.parse(value);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionEnabledProposedApi = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn extensionHostDebugEnvironment;\n\t}\n}\n"]}