{"version":3,"file":"extensionResourceLoaderService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/extensionResourceLoader/electron-sandbox/extensionResourceLoaderService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;QAI1C,YACgC,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QACtD,CAAC;QAEL,KAAK,CAAC,qBAAqB,CAAC,GAAQ;YACnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACrD,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC;KACD,CAAA;IAZY,8BAA8B;QAKxC,WAAA,oBAAY,CAAA;OALF,8BAA8B,CAY1C;IAZY,wEAA8B;IAc3C,CAAA,GAAA,8BAAiB,CAAA,CAAC,yDAA+B,EAAE,8BAA8B,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IExtensionResourceLoaderService } from 'vs/workbench/services/extensionResourceLoader/common/extensionResourceLoader';\n\nexport class ExtensionResourceLoaderService implements IExtensionResourceLoaderService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService\n\t) { }\n\n\tasync readExtensionResource(uri: URI): Promise<string> {\n\t\tconst result = await this._fileService.readFile(uri);\n\t\treturn result.value.toString();\n\t}\n}\n\nregisterSingleton(IExtensionResourceLoaderService, ExtensionResourceLoaderService);\n"]}