{"version":3,"file":"commonProperties.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/telemetry/test/browser/commonProperties.test.ts"],"names":[],"mappings":";;;IAQA,KAAK,CAAC,uCAAuC,EAAE;QAE9C,MAAM,MAAM,GAAW,CAAC,SAAS,CAAE,CAAC;QACpC,MAAM,OAAO,GAAW,CAAC,SAAS,CAAE,CAAC;QACrC,IAAI,kBAAmC,CAAC;QAExC,KAAK,CAAC,GAAG,EAAE;YACV,kBAAkB,GAAG,IAAI,gCAAsB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE,KAAK;YAC3C,MAAM,gCAAgC,GAAG,GAAG,EAAE;gBAC7C,OAAO;oBACN,QAAQ,EAAE,GAAG;iBACb,CAAC;YACH,CAAC,CAAC;YAEF,MAAM,KAAK,GAAG,MAAM,CAAA,GAAA,4DAAgC,CAAA,CAAC,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,gCAAgC,CAAC,CAAC;YAEvI,MAAM,CAAC,EAAE,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC;YACjC,MAAM,CAAC,EAAE,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,iBAAiB,IAAI,KAAK,CAAC,CAAC;YACtC,MAAM,CAAC,EAAE,CAAC,8BAA8B,IAAI,KAAK,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,iBAAiB,IAAI,KAAK,CAAC,CAAC;YACtC,MAAM,CAAC,EAAE,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,EAAE,CAAC,yBAAyB,IAAI,KAAK,EAAE,kBAAkB,CAAC,CAAC;YAClE,MAAM,CAAC,EAAE,CAAC,wBAAwB,IAAI,KAAK,EAAE,iBAAiB,CAAC,CAAC;YAChE,MAAM,CAAC,EAAE,CAAC,qBAAqB,IAAI,KAAK,EAAE,cAAc,CAAC,CAAC;YAC1D,MAAM,CAAC,EAAE,CAAC,kBAAkB,IAAI,KAAK,EAAE,WAAW,CAAC,CAAC;YAEpD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,MAAM,gCAAgC,GAAG,GAAG,EAAE;gBAC7C,OAAO,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE;oBAClC,QAAQ,EAAE;wBACT,GAAG,EAAE,GAAG,EAAE;4BACT,OAAO,CAAC,EAAE,CAAC;wBACZ,CAAC;wBACD,UAAU,EAAE,IAAI;qBAChB;iBACD,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,MAAM,KAAK,GAAG,MAAM,CAAA,GAAA,4DAAgC,CAAA,CAAC,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,gCAAgC,CAAC,CAAC;YACvI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAEvC,MAAM,MAAM,GAAG,MAAM,CAAA,GAAA,4DAAgC,CAAA,CAAC,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,gCAAgC,CAAC,CAAC;YACxI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { resolveWorkbenchCommonProperties } from 'vs/workbench/services/telemetry/browser/workbenchCommonProperties';\nimport { IStorageService, InMemoryStorageService } from 'vs/platform/storage/common/storage';\n\nsuite('Browser Telemetry - common properties', function () {\n\n\tconst commit: string = (undefined)!;\n\tconst version: string = (undefined)!;\n\tlet testStorageService: IStorageService;\n\n\tsetup(() => {\n\t\ttestStorageService = new InMemoryStorageService();\n\t});\n\n\ttest('mixes in additional properties', async function () {\n\t\tconst resolveCommonTelemetryProperties = () => {\n\t\t\treturn {\n\t\t\t\t'userId': '1'\n\t\t\t};\n\t\t};\n\n\t\tconst props = await resolveWorkbenchCommonProperties(testStorageService, commit, version, undefined, resolveCommonTelemetryProperties);\n\n\t\tassert.ok('commitHash' in props);\n\t\tassert.ok('sessionID' in props);\n\t\tassert.ok('timestamp' in props);\n\t\tassert.ok('common.platform' in props);\n\t\tassert.ok('common.timesincesessionstart' in props);\n\t\tassert.ok('common.sequence' in props);\n\t\tassert.ok('version' in props);\n\t\tassert.ok('common.firstSessionDate' in props, 'firstSessionDate');\n\t\tassert.ok('common.lastSessionDate' in props, 'lastSessionDate');\n\t\tassert.ok('common.isNewSession' in props, 'isNewSession');\n\t\tassert.ok('common.machineId' in props, 'machineId');\n\n\t\tassert.strictEqual(props['userId'], '1');\n\t});\n\n\ttest('mixes in additional dyanmic properties', async function () {\n\t\tlet i = 1;\n\t\tconst resolveCommonTelemetryProperties = () => {\n\t\t\treturn Object.defineProperties({}, {\n\t\t\t\t'userId': {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\treturn i++;\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: true\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst props = await resolveWorkbenchCommonProperties(testStorageService, commit, version, undefined, resolveCommonTelemetryProperties);\n\t\tassert.strictEqual(props['userId'], 1);\n\n\t\tconst props2 = await resolveWorkbenchCommonProperties(testStorageService, commit, version, undefined, resolveCommonTelemetryProperties);\n\t\tassert.strictEqual(props2['userId'], 2);\n\t});\n});\n"]}