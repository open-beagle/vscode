{"version":3,"file":"workbenchCommonProperties.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/telemetry/electron-sandbox/workbenchCommonProperties.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IASzF,KAAK,UAAU,gCAAgC,CACrD,cAA+B,EAC/B,WAAyB,EACzB,OAAe,EACf,QAAgB,EAChB,MAA0B,EAC1B,OAA2B,EAC3B,SAAiB,EACjB,mBAAyC,EACzC,iBAAyB,EACzB,eAAwB;QAExB,MAAM,MAAM,GAAG,MAAM,CAAA,GAAA,0CAAuB,CAAA,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,iBAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;QAC/J,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,8BAAkB,iBAAuB,CAAC;QAChF,MAAM,gBAAgB,GAAG,cAAc,CAAC,GAAG,CAAC,sCAA0B,iBAAuB,CAAC;QAC9F,MAAM,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,qCAAyB,iBAAuB,CAAC;QAE5F,sHAAsH;QACtH,MAAM,CAAC,sBAAsB,CAAC,GAAG,iBAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9D,yHAAyH;QACzH,MAAM,CAAC,yBAAyB,CAAC,GAAG,iBAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/D,mHAAmH;QACnH,MAAM,CAAC,yBAAyB,CAAC,GAAG,gBAAgB,CAAC;QACrD,kHAAkH;QAClH,MAAM,CAAC,wBAAwB,CAAC,GAAG,eAAe,IAAI,EAAE,CAAC;QACzD,+GAA+G;QAC/G,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7D,6GAA6G;QAC7G,MAAM,CAAC,mBAAmB,CAAC,GAAG,UAAU,CAAC;QACzC,wHAAwH;QACxH,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAA,GAAA,qCAAoB,CAAA,CAAC,eAAe,CAAC,CAAC;QAEzE,OAAO,MAAM,CAAC;IACf,CAAC;IAjCD,4EAiCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { instanceStorageKey, firstSessionDateStorageKey, lastSessionDateStorageKey } from 'vs/platform/telemetry/common/telemetry';\nimport { cleanRemoteAuthority } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { process } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nexport async function resolveWorkbenchCommonProperties(\n\tstorageService: IStorageService,\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tremoteAuthority?: string\n): Promise<{ [name: string]: string | boolean | undefined }> {\n\tconst result = await resolveCommonProperties(fileService, release, hostname, process.arch, commit, version, machineId, msftInternalDomains, installSourcePath);\n\tconst instanceId = storageService.get(instanceStorageKey, StorageScope.GLOBAL)!;\n\tconst firstSessionDate = storageService.get(firstSessionDateStorageKey, StorageScope.GLOBAL)!;\n\tconst lastSessionDate = storageService.get(lastSessionDateStorageKey, StorageScope.GLOBAL)!;\n\n\t// __GDPR__COMMON__ \"common.version.shell\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.shell'] = process.versions['electron'];\n\t// __GDPR__COMMON__ \"common.version.renderer\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.renderer'] = process.versions['chrome'];\n\t// __GDPR__COMMON__ \"common.firstSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.firstSessionDate'] = firstSessionDate;\n\t// __GDPR__COMMON__ \"common.lastSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.lastSessionDate'] = lastSessionDate || '';\n\t// __GDPR__COMMON__ \"common.isNewSession\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.isNewSession'] = !lastSessionDate ? '1' : '0';\n\t// __GDPR__COMMON__ \"common.instanceId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.instanceId'] = instanceId;\n\t// __GDPR__COMMON__ \"common.remoteAuthority\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.remoteAuthority'] = cleanRemoteAuthority(remoteAuthority);\n\n\treturn result;\n}\n"]}