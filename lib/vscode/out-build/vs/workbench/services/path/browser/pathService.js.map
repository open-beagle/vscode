{"version":3,"file":"pathService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/path/browser/pathService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUhG,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,iCAAmB;QAI1D,YACsB,kBAAuC,EACb,kBAAgD,EACpD,cAAwC;YAEnF,KAAK,CAAC,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,gBAAgB,CAAC,kBAAkB,EAAE,cAAc,CAAC,EAAE,SAAS,EAAE,kBAAkB,CAAC,eAAe,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAHjH,uBAAkB,GAAlB,kBAAkB,CAA8B;YACpD,mBAAc,GAAd,cAAc,CAA0B;YAL3E,qBAAgB,GAAG,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAQ3F,CAAC;KACD,CAAA;IAXY,kBAAkB;QAK5B,WAAA,wCAAmB,CAAA;QACnB,WAAA,iDAA4B,CAAA;QAC5B,WAAA,oCAAwB,CAAA;OAPd,kBAAkB,CAW9B;IAXY,gDAAkB;IAa/B,SAAS,gBAAgB,CAAC,kBAAgD,EAAE,cAAwC;QACnH,IAAI,kBAAkB,CAAC,eAAe,EAAE;YACvC,OAAO,iBAAO,CAAC,YAAY,CAAC;SAC5B;QAED,MAAM,WAAW,GAAG,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,WAAW,EAAE;YAChB,OAAO,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;SAC9B;QAED,MAAM,aAAa,GAAG,cAAc,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC;QAClE,IAAI,aAAa,EAAE;YAClB,OAAO,aAAa,CAAC,MAAM,CAAC;SAC5B;QAED,OAAO,iBAAO,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,CAAA,GAAA,8BAAiB,CAAA,CAAC,0BAAY,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IPathService, AbstractPathService } from 'vs/workbench/services/path/common/pathService';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\n\nexport class BrowserPathService extends AbstractPathService {\n\n\treadonly defaultUriScheme = defaultUriScheme(this.environmentService, this.contextService);\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(URI.from({ scheme: defaultUriScheme(environmentService, contextService), authority: environmentService.remoteAuthority, path: '/' }), remoteAgentService);\n\t}\n}\n\nfunction defaultUriScheme(environmentService: IWorkbenchEnvironmentService, contextService: IWorkspaceContextService): string {\n\tif (environmentService.remoteAuthority) {\n\t\treturn Schemas.vscodeRemote;\n\t}\n\n\tconst firstFolder = contextService.getWorkspace().folders[0];\n\tif (firstFolder) {\n\t\treturn firstFolder.uri.scheme;\n\t}\n\n\tconst configuration = contextService.getWorkspace().configuration;\n\tif (configuration) {\n\t\treturn configuration.scheme;\n\t}\n\n\treturn Schemas.file;\n}\n\nregisterSingleton(IPathService, BrowserPathService, true);\n"]}