{"version":3,"file":"configurationModels.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/configuration/test/common/configurationModels.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { StandaloneConfigurationModelParser, Configuration } from 'vs/workbench/services/configuration/common/configurationModels';\nimport { ConfigurationModelParser, ConfigurationModel, ConfigurationParseOptions } from 'vs/platform/configuration/common/configurationModels';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\nimport { Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\n\nsuite('FolderSettingsModelParser', () => {\n\n\tsuiteSetup(() => {\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'FolderSettingsModelParser_1',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'FolderSettingsModelParser.window': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet'\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.resource': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.RESOURCE,\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.resourceLanguage': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.application': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.machine': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.MACHINE\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('parse all folder settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings');\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' }), { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.WINDOW] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['window'] = 'window';\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n\ttest('parse resource folder settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings');\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' }), { scopes: [ConfigurationScope.RESOURCE] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n\ttest('parse resource and resource language settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings');\n\n\t\ttestObject.parse(JSON.stringify({ '[json]': { 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.resourceLanguage': 'resourceLanguage', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' } }), { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\texpected['FolderSettingsModelParser']['resourceLanguage'] = 'resourceLanguage';\n\t\tassert.deepStrictEqual(testObject.configurationModel.overrides, [{ 'contents': expected, 'identifiers': ['json'], 'keys': ['FolderSettingsModelParser.resource', 'FolderSettingsModelParser.resourceLanguage'] }]);\n\t});\n\n\ttest('reparse folder settings excludes application and machine setting', () => {\n\t\tconst parseOptions: ConfigurationParseOptions = { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.WINDOW] };\n\t\tconst testObject = new ConfigurationModelParser('settings');\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.anotherApplicationSetting': 'executable' }), parseOptions);\n\n\t\tlet expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\texpected['FolderSettingsModelParser']['anotherApplicationSetting'] = 'executable';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'FolderSettingsModelParser_2',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'FolderSettingsModelParser.anotherApplicationSetting': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.anotherMachineSetting': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.MACHINE\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttestObject.reparse(parseOptions);\n\n\t\texpected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n});\n\nsuite('StandaloneConfigurationModelParser', () => {\n\n\ttest('parse tasks stand alone configuration model', () => {\n\t\tconst testObject = new StandaloneConfigurationModelParser('tasks', 'tasks');\n\n\t\ttestObject.parse(JSON.stringify({ 'version': '1.1.1', 'tasks': [] }));\n\n\t\tconst expected = Object.create(null);\n\t\texpected['tasks'] = Object.create(null);\n\t\texpected['tasks']['version'] = '1.1.1';\n\t\texpected['tasks']['tasks'] = [];\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n});\n\nsuite('Workspace Configuration', () => {\n\n\tconst defaultConfigurationModel = toConfigurationModel({\n\t\t'editor.lineNumbers': 'on',\n\t\t'editor.fontSize': 12,\n\t\t'window.zoomLevel': 1,\n\t\t'[markdown]': {\n\t\t\t'editor.wordWrap': 'off'\n\t\t},\n\t\t'window.title': 'custom',\n\t\t'workbench.enableTabs': false,\n\t\t'editor.insertSpaces': true\n\t});\n\n\ttest('Test compare same configurations', () => {\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('folder1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('folder2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst configuration1 = new Configuration(new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), workspace);\n\t\tconfiguration1.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration1.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration1.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst configuration2 = new Configuration(new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), workspace);\n\t\tconfiguration2.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration2.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration2.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst actual = configuration2.compare(configuration1);\n\n\t\tassert.deepStrictEqual(actual, { keys: [], overrides: [] });\n\t});\n\n\ttest('Test compare different configurations', () => {\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('folder1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('folder2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst configuration1 = new Configuration(new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), workspace);\n\t\tconfiguration1.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration1.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration1.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst configuration2 = new Configuration(new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), workspace);\n\t\tconfiguration2.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration2.updateLocalUserConfiguration(toConfigurationModel({ 'workbench.enableTabs': true, '[typescript]': { 'editor.insertSpaces': true } }));\n\t\tconfiguration2.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.fontSize': 11 }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.insertSpaces': true }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.wordWrap': 'on',\n\t\t\t\t'editor.lineNumbers': 'relative'\n\t\t\t},\n\t\t}));\n\n\t\tconst actual = configuration2.compare(configuration1);\n\n\t\tassert.deepStrictEqual(actual, { keys: ['editor.wordWrap', 'editor.fontSize', '[markdown]', 'window.title', 'workbench.enableTabs', '[typescript]'], overrides: [['markdown', ['editor.lineNumbers', 'editor.wordWrap']], ['typescript', ['editor.insertSpaces']]] });\n\t});\n\n\n});\n\nfunction toConfigurationModel(obj: any): ConfigurationModel {\n\tconst parser = new ConfigurationModelParser('test');\n\tparser.parse(JSON.stringify(obj));\n\treturn parser.configurationModel;\n}\n"]}