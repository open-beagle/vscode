{"version":3,"file":"configurationService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/configuration/browser/configurationService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { equals } from 'vs/base/common/objects';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Queue, Barrier, runWhenIdle, Promises } from 'vs/base/common/async';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IWorkspaceContextService, Workspace as BaseWorkspace, WorkbenchState, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, WorkspaceFolder, toWorkspaceFolder, isWorkspaceFolder, IWorkspaceFoldersWillChangeEvent } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent, AllKeysConfigurationChangeEvent, mergeChanges } from 'vs/platform/configuration/common/configurationModels';\nimport { IConfigurationChangeEvent, ConfigurationTarget, IConfigurationOverrides, keyFromOverrideIdentifier, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { Configuration } from 'vs/workbench/services/configuration/common/configurationModels';\nimport { FOLDER_CONFIG_FOLDER_NAME, defaultSettingsSchemaId, userSettingsSchemaId, workspaceSettingsSchemaId, folderSettingsSchemaId, IConfigurationCache, machineSettingsSchemaId, LOCAL_MACHINE_SCOPES, IWorkbenchConfigurationService, RestrictedSettings } from 'vs/workbench/services/configuration/common/configuration';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions, allSettings, windowSettings, resourceSettings, applicationSettings, machineSettings, machineOverridableSettings, ConfigurationScope, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IWorkspaceIdentifier, isWorkspaceIdentifier, IStoredWorkspaceFolder, isStoredWorkspaceFolder, IWorkspaceFolderCreationData, IWorkspaceInitializationPayload, IEmptyWorkspaceIdentifier, useSlashForPath, getStoredWorkspaceFolder, isSingleFolderWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, toWorkspaceFolders } from 'vs/platform/workspaces/common/workspaces';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ConfigurationEditingService, EditableConfigurationTarget } from 'vs/workbench/services/configuration/common/configurationEditingService';\nimport { WorkspaceConfiguration, FolderConfiguration, RemoteUserConfiguration, UserConfiguration } from 'vs/workbench/services/configuration/browser/configuration';\nimport { JSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditingService';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport { mark } from 'vs/base/common/performance';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { delta, distinct } from 'vs/base/common/arrays';\nimport { forEach, IStringDictionary } from 'vs/base/common/collections';\n\nclass Workspace extends BaseWorkspace {\n\tinitialized: boolean = false;\n}\n\nexport class WorkspaceService extends Disposable implements IWorkbenchConfigurationService, IWorkspaceContextService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate workspace!: Workspace;\n\tprivate initRemoteUserConfigurationBarrier: Barrier;\n\tprivate completeWorkspaceBarrier: Barrier;\n\tprivate readonly configurationCache: IConfigurationCache;\n\tprivate _configuration: Configuration;\n\tprivate initialized: boolean = false;\n\tprivate defaultConfiguration: DefaultConfigurationModel;\n\tprivate localUserConfiguration: UserConfiguration;\n\tprivate remoteUserConfiguration: RemoteUserConfiguration | null = null;\n\tprivate workspaceConfiguration: WorkspaceConfiguration;\n\tprivate cachedFolderConfigs: ResourceMap<FolderConfiguration>;\n\tprivate workspaceEditingQueue: Queue<void>;\n\n\tprivate readonly logService: ILogService;\n\tprivate readonly fileService: IFileService;\n\tprivate readonly uriIdentityService: IUriIdentityService;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\tpublic readonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tprotected readonly _onWillChangeWorkspaceFolders: Emitter<IWorkspaceFoldersWillChangeEvent> = this._register(new Emitter<IWorkspaceFoldersWillChangeEvent>());\n\tpublic readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent> = this._onWillChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceFolders: Emitter<IWorkspaceFoldersChangeEvent> = this._register(new Emitter<IWorkspaceFoldersChangeEvent>());\n\tpublic readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent> = this._onDidChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceName: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeWorkspaceName: Event<void> = this._onDidChangeWorkspaceName.event;\n\n\tprivate readonly _onDidChangeWorkbenchState: Emitter<WorkbenchState> = this._register(new Emitter<WorkbenchState>());\n\tpublic readonly onDidChangeWorkbenchState: Event<WorkbenchState> = this._onDidChangeWorkbenchState.event;\n\n\tprivate isWorkspaceTrusted: boolean = true;\n\n\tprivate _restrictedSettings: RestrictedSettings = { default: [] };\n\tget restrictedSettings() { return this._restrictedSettings; }\n\tprivate readonly _onDidChangeRestrictedSettings = this._register(new Emitter<RestrictedSettings>());\n\tpublic readonly onDidChangeRestrictedSettings = this._onDidChangeRestrictedSettings.event;\n\n\tprivate readonly configurationRegistry: IConfigurationRegistry;\n\n\t// TODO@sandeep debt with cyclic dependencies\n\tprivate configurationEditingService!: ConfigurationEditingService;\n\tprivate jsonEditingService!: JSONEditingService;\n\tprivate cyclicDependencyReady!: Function;\n\tprivate cyclicDependency = new Promise<void>(resolve => this.cyclicDependencyReady = resolve);\n\n\tconstructor(\n\t\t{ remoteAuthority, configurationCache }: { remoteAuthority?: string, configurationCache: IConfigurationCache },\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tfileService: IFileService,\n\t\tremoteAgentService: IRemoteAgentService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\t\t// register defaults before creating default configuration model\n\t\t// so that the model is not required to be updated after registering\n\t\tif (environmentService.options?.configurationDefaults) {\n\t\t\tthis.configurationRegistry.registerDefaultConfigurations([environmentService.options.configurationDefaults]);\n\t\t}\n\n\t\tthis.initRemoteUserConfigurationBarrier = new Barrier();\n\t\tthis.completeWorkspaceBarrier = new Barrier();\n\t\tthis.defaultConfiguration = new DefaultConfigurationModel();\n\t\tthis.configurationCache = configurationCache;\n\t\tthis.fileService = fileService;\n\t\tthis.uriIdentityService = uriIdentityService;\n\t\tthis.logService = logService;\n\t\tthis._configuration = new Configuration(this.defaultConfiguration, new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ResourceMap(), new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), this.workspace);\n\t\tthis.cachedFolderConfigs = new ResourceMap<FolderConfiguration>();\n\t\tthis.localUserConfiguration = this._register(new UserConfiguration(environmentService.settingsResource, remoteAuthority ? LOCAL_MACHINE_SCOPES : undefined, fileService, uriIdentityService, logService));\n\t\tthis._register(this.localUserConfiguration.onDidChangeConfiguration(userConfiguration => this.onLocalUserConfigurationChanged(userConfiguration)));\n\t\tif (remoteAuthority) {\n\t\t\tconst remoteUserConfiguration = this.remoteUserConfiguration = this._register(new RemoteUserConfiguration(remoteAuthority, configurationCache, fileService, uriIdentityService, remoteAgentService));\n\t\t\tthis._register(remoteUserConfiguration.onDidInitialize(remoteUserConfigurationModel => {\n\t\t\t\tthis._register(remoteUserConfiguration.onDidChangeConfiguration(remoteUserConfigurationModel => this.onRemoteUserConfigurationChanged(remoteUserConfigurationModel)));\n\t\t\t\tthis.onRemoteUserConfigurationChanged(remoteUserConfigurationModel);\n\t\t\t\tthis.initRemoteUserConfigurationBarrier.open();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.initRemoteUserConfigurationBarrier.open();\n\t\t}\n\n\t\tthis.workspaceConfiguration = this._register(new WorkspaceConfiguration(configurationCache, fileService));\n\t\tthis._register(this.workspaceConfiguration.onDidUpdateConfiguration(fromCache => {\n\t\t\tthis.onWorkspaceConfigurationChanged(fromCache).then(() => {\n\t\t\t\tthis.workspace.initialized = this.workspaceConfiguration.initialized;\n\t\t\t\tthis.checkAndMarkWorkspaceComplete(fromCache);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this.configurationRegistry.onDidUpdateConfiguration(configurationProperties => this.onDefaultConfigurationChanged(configurationProperties)));\n\n\t\tthis.workspaceEditingQueue = new Queue<void>();\n\t}\n\n\t// Workspace Context Service Impl\n\n\tpublic async getCompleteWorkspace(): Promise<Workspace> {\n\t\tawait this.completeWorkspaceBarrier.wait();\n\t\treturn this.getWorkspace();\n\t}\n\n\tpublic getWorkspace(): Workspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getWorkbenchState(): WorkbenchState {\n\t\t// Workspace has configuration file\n\t\tif (this.workspace.configuration) {\n\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t}\n\n\t\t// Folder has single root\n\t\tif (this.workspace.folders.length === 1) {\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\n\t\t// Empty\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tpublic getWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn this.workspace.getFolder(resource);\n\t}\n\n\tpublic addFolders(foldersToAdd: IWorkspaceFolderCreationData[], index?: number): Promise<void> {\n\t\treturn this.updateFolders(foldersToAdd, [], index);\n\t}\n\n\tpublic removeFolders(foldersToRemove: URI[]): Promise<void> {\n\t\treturn this.updateFolders([], foldersToRemove);\n\t}\n\n\tpublic async updateFolders(foldersToAdd: IWorkspaceFolderCreationData[], foldersToRemove: URI[], index?: number): Promise<void> {\n\t\tawait this.cyclicDependency;\n\t\treturn this.workspaceEditingQueue.queue(() => this.doUpdateFolders(foldersToAdd, foldersToRemove, index));\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\treturn !!this.getWorkspaceFolder(resource);\n\t}\n\n\tpublic isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\tswitch (this.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\tlet folderUri: URI | undefined = undefined;\n\t\t\t\tif (URI.isUri(workspaceIdOrFolder)) {\n\t\t\t\t\tfolderUri = workspaceIdOrFolder;\n\t\t\t\t} else if (isSingleFolderWorkspaceIdentifier(workspaceIdOrFolder)) {\n\t\t\t\t\tfolderUri = workspaceIdOrFolder.uri;\n\t\t\t\t}\n\n\t\t\t\treturn URI.isUri(folderUri) && this.uriIdentityService.extUri.isEqual(folderUri, this.workspace.folders[0].uri);\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn isWorkspaceIdentifier(workspaceIdOrFolder) && this.workspace.id === workspaceIdOrFolder.id;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async doUpdateFolders(foldersToAdd: IWorkspaceFolderCreationData[], foldersToRemove: URI[], index?: number): Promise<void> {\n\t\tif (this.getWorkbenchState() !== WorkbenchState.WORKSPACE) {\n\t\t\treturn Promise.resolve(undefined); // we need a workspace to begin with\n\t\t}\n\n\t\tif (foldersToAdd.length + foldersToRemove.length === 0) {\n\t\t\treturn Promise.resolve(undefined); // nothing to do\n\t\t}\n\n\t\tlet foldersHaveChanged = false;\n\n\t\t// Remove first (if any)\n\t\tlet currentWorkspaceFolders = this.getWorkspace().folders;\n\t\tlet newStoredFolders: IStoredWorkspaceFolder[] = currentWorkspaceFolders.map(f => f.raw).filter((folder, index): folder is IStoredWorkspaceFolder => {\n\t\t\tif (!isStoredWorkspaceFolder(folder)) {\n\t\t\t\treturn true; // keep entries which are unrelated\n\t\t\t}\n\n\t\t\treturn !this.contains(foldersToRemove, currentWorkspaceFolders[index].uri); // keep entries which are unrelated\n\t\t});\n\n\t\tconst slashForPath = useSlashForPath(newStoredFolders);\n\n\t\tfoldersHaveChanged = currentWorkspaceFolders.length !== newStoredFolders.length;\n\n\t\t// Add afterwards (if any)\n\t\tif (foldersToAdd.length) {\n\n\t\t\t// Recompute current workspace folders if we have folders to add\n\t\t\tconst workspaceConfigPath = this.getWorkspace().configuration!;\n\t\t\tconst workspaceConfigFolder = this.uriIdentityService.extUri.dirname(workspaceConfigPath);\n\t\t\tcurrentWorkspaceFolders = toWorkspaceFolders(newStoredFolders, workspaceConfigPath, this.uriIdentityService.extUri);\n\t\t\tconst currentWorkspaceFolderUris = currentWorkspaceFolders.map(folder => folder.uri);\n\n\t\t\tconst storedFoldersToAdd: IStoredWorkspaceFolder[] = [];\n\n\t\t\tfor (const folderToAdd of foldersToAdd) {\n\t\t\t\tconst folderURI = folderToAdd.uri;\n\t\t\t\tif (this.contains(currentWorkspaceFolderUris, folderURI)) {\n\t\t\t\t\tcontinue; // already existing\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await this.fileService.resolve(folderURI);\n\t\t\t\t\tif (!result.isDirectory) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* Ignore */ }\n\t\t\t\tstoredFoldersToAdd.push(getStoredWorkspaceFolder(folderURI, false, folderToAdd.name, workspaceConfigFolder, slashForPath, this.uriIdentityService.extUri));\n\t\t\t}\n\n\t\t\t// Apply to array of newStoredFolders\n\t\t\tif (storedFoldersToAdd.length > 0) {\n\t\t\t\tfoldersHaveChanged = true;\n\n\t\t\t\tif (typeof index === 'number' && index >= 0 && index < newStoredFolders.length) {\n\t\t\t\t\tnewStoredFolders = newStoredFolders.slice(0);\n\t\t\t\t\tnewStoredFolders.splice(index, 0, ...storedFoldersToAdd);\n\t\t\t\t} else {\n\t\t\t\t\tnewStoredFolders = [...newStoredFolders, ...storedFoldersToAdd];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set folders if we recorded a change\n\t\tif (foldersHaveChanged) {\n\t\t\treturn this.setFolders(newStoredFolders);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate async setFolders(folders: IStoredWorkspaceFolder[]): Promise<void> {\n\t\tawait this.cyclicDependency;\n\t\tawait this.workspaceConfiguration.setFolders(folders, this.jsonEditingService);\n\t\treturn this.onWorkspaceConfigurationChanged(false);\n\t}\n\n\tprivate contains(resources: URI[], toCheck: URI): boolean {\n\t\treturn resources.some(resource => this.uriIdentityService.extUri.isEqual(resource, toCheck));\n\t}\n\n\t// Workspace Configuration Service Impl\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this._configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : undefined;\n\t\treturn this._configuration.getValue(section, overrides);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError: boolean): Promise<void>;\n\tasync updateValue(key: string, value: any, arg3?: any, arg4?: any, donotNotifyError?: any): Promise<void> {\n\t\tawait this.cyclicDependency;\n\t\tconst overrides = isConfigurationOverrides(arg3) ? arg3 : undefined;\n\t\tconst target: ConfigurationTarget | undefined = overrides ? arg4 : arg3;\n\t\tconst targets: ConfigurationTarget[] = target ? [target] : [];\n\n\t\tif (!targets.length) {\n\t\t\tconst inspect = this.inspect(key, overrides);\n\t\t\ttargets.push(...this.deriveConfigurationTargets(key, value, inspect));\n\n\t\t\t// Remove the setting, if the value is same as default value and is updated only in user target\n\t\t\tif (equals(value, inspect.defaultValue) && targets.length === 1 && (targets[0] === ConfigurationTarget.USER || targets[0] === ConfigurationTarget.USER_LOCAL)) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t}\n\n\t\tawait Promises.settled(targets.map(target => this.writeConfigurationValue(key, value, target, overrides, donotNotifyError)));\n\t}\n\n\tasync reloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void> {\n\t\tif (target === undefined) {\n\t\t\tconst { local, remote } = await this.reloadUserConfiguration();\n\t\t\tawait this.reloadWorkspaceConfiguration();\n\t\t\tawait this.loadConfiguration(local, remote);\n\t\t\treturn;\n\t\t}\n\n\t\tif (isWorkspaceFolder(target)) {\n\t\t\tawait this.reloadWorkspaceFolderConfiguration(target);\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\tconst { local, remote } = await this.reloadUserConfiguration();\n\t\t\t\tawait this.loadConfiguration(local, remote);\n\t\t\t\treturn;\n\n\t\t\tcase ConfigurationTarget.USER_LOCAL:\n\t\t\t\tawait this.reloadLocalUserConfiguration();\n\t\t\t\treturn;\n\n\t\t\tcase ConfigurationTarget.USER_REMOTE:\n\t\t\t\tawait this.reloadRemoteUserConfiguration();\n\t\t\t\treturn;\n\n\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\tcase ConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\tawait this.reloadWorkspaceConfiguration();\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T> {\n\t\treturn this._configuration.inspect<T>(key, overrides);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this._configuration.keys();\n\t}\n\n\tpublic async whenRemoteConfigurationLoaded(): Promise<void> {\n\t\tawait this.initRemoteUserConfigurationBarrier.wait();\n\t}\n\n\t/**\n\t * At present, all workspaces (empty, single-folder, multi-root) in local and remote\n\t * can be initialized without requiring extension host except following case:\n\t *\n\t * A multi root workspace with .code-workspace file that has to be resolved by an extension.\n\t * Because of readonly `rootPath` property in extension API we have to resolve multi root workspace\n\t * before extension host starts so that `rootPath` can be set to first folder.\n\t *\n\t * This restriction is lifted partially for web in `MainThreadWorkspace`.\n\t * In web, we start extension host with empty `rootPath` in this case.\n\t *\n\t * Related root path issue discussion is being tracked here - https://github.com/microsoft/vscode/issues/69335\n\t */\n\tasync initialize(arg: IWorkspaceInitializationPayload): Promise<void> {\n\t\tmark('code/willInitWorkspaceService');\n\n\t\tconst workspace = await this.createWorkspace(arg);\n\t\tawait this.updateWorkspaceAndInitializeConfiguration(workspace);\n\t\tthis.checkAndMarkWorkspaceComplete(false);\n\n\t\tmark('code/didInitWorkspaceService');\n\t}\n\n\tupdateWorkspaceTrust(trusted: boolean): void {\n\t\tif (this.isWorkspaceTrusted !== trusted) {\n\t\t\tthis.isWorkspaceTrusted = trusted;\n\t\t\tconst data = this._configuration.toData();\n\t\t\tconst folderConfigurationModels: (ConfigurationModel | undefined)[] = [];\n\t\t\tfor (const folder of this.workspace.folders) {\n\t\t\t\tconst folderConfiguration = this.cachedFolderConfigs.get(folder.uri);\n\t\t\t\tlet configurationModel: ConfigurationModel | undefined;\n\t\t\t\tif (folderConfiguration) {\n\t\t\t\t\tconfigurationModel = folderConfiguration.updateWorkspaceTrust(this.isWorkspaceTrusted);\n\t\t\t\t\tthis._configuration.updateFolderConfiguration(folder.uri, configurationModel);\n\t\t\t\t}\n\t\t\t\tfolderConfigurationModels.push(configurationModel);\n\t\t\t}\n\t\t\tif (this.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\tif (folderConfigurationModels[0]) {\n\t\t\t\t\tthis._configuration.updateWorkspaceConfiguration(folderConfigurationModels[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._configuration.updateWorkspaceConfiguration(this.workspaceConfiguration.updateWorkspaceTrust(this.isWorkspaceTrusted));\n\t\t\t}\n\t\t\tthis.updateRestrictedSettings();\n\n\t\t\tlet keys: string[] = [];\n\t\t\tif (this.restrictedSettings.userLocal) {\n\t\t\t\tkeys.push(...this.restrictedSettings.userLocal);\n\t\t\t}\n\t\t\tif (this.restrictedSettings.userRemote) {\n\t\t\t\tkeys.push(...this.restrictedSettings.userRemote);\n\t\t\t}\n\t\t\tif (this.restrictedSettings.workspace) {\n\t\t\t\tkeys.push(...this.restrictedSettings.workspace);\n\t\t\t}\n\t\t\tif (this.restrictedSettings.workspaceFolder) {\n\t\t\t\tthis.restrictedSettings.workspaceFolder.forEach((value) => keys.push(...value));\n\t\t\t}\n\t\t\tkeys = distinct(keys);\n\t\t\tif (keys.length) {\n\t\t\t\tthis.triggerConfigurationChange({ keys, overrides: [] }, { data, workspace: this.workspace }, ConfigurationTarget.WORKSPACE);\n\t\t\t}\n\t\t}\n\t}\n\n\tacquireInstantiationService(instantiationService: IInstantiationService): void {\n\t\tthis.configurationEditingService = instantiationService.createInstance(ConfigurationEditingService);\n\t\tthis.jsonEditingService = instantiationService.createInstance(JSONEditingService);\n\n\t\tif (this.cyclicDependencyReady) {\n\t\t\tthis.cyclicDependencyReady();\n\t\t} else {\n\t\t\tthis.cyclicDependency = Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tprivate async createWorkspace(arg: IWorkspaceInitializationPayload): Promise<Workspace> {\n\t\tif (isWorkspaceIdentifier(arg)) {\n\t\t\treturn this.createMultiFolderWorkspace(arg);\n\t\t}\n\n\t\tif (isSingleFolderWorkspaceIdentifier(arg)) {\n\t\t\treturn this.createSingleFolderWorkspace(arg);\n\t\t}\n\n\t\treturn this.createEmptyWorkspace(arg);\n\t}\n\n\tprivate async createMultiFolderWorkspace(workspaceIdentifier: IWorkspaceIdentifier): Promise<Workspace> {\n\t\tawait this.workspaceConfiguration.initialize({ id: workspaceIdentifier.id, configPath: workspaceIdentifier.configPath }, this.isWorkspaceTrusted);\n\t\tconst workspaceConfigPath = workspaceIdentifier.configPath;\n\t\tconst workspaceFolders = toWorkspaceFolders(this.workspaceConfiguration.getFolders(), workspaceConfigPath, this.uriIdentityService.extUri);\n\t\tconst workspaceId = workspaceIdentifier.id;\n\t\tconst workspace = new Workspace(workspaceId, workspaceFolders, workspaceConfigPath, uri => this.uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tworkspace.initialized = this.workspaceConfiguration.initialized;\n\t\treturn workspace;\n\t}\n\n\tprivate createSingleFolderWorkspace(singleFolderWorkspaceIdentifier: ISingleFolderWorkspaceIdentifier): Workspace {\n\t\tconst workspace = new Workspace(singleFolderWorkspaceIdentifier.id, [toWorkspaceFolder(singleFolderWorkspaceIdentifier.uri)], null, uri => this.uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tworkspace.initialized = true;\n\t\treturn workspace;\n\t}\n\n\tprivate createEmptyWorkspace(emptyWorkspaceIdentifier: IEmptyWorkspaceIdentifier): Promise<Workspace> {\n\t\tconst workspace = new Workspace(emptyWorkspaceIdentifier.id, [], null, uri => this.uriIdentityService.extUri.ignorePathCasing(uri));\n\t\tworkspace.initialized = true;\n\t\treturn Promise.resolve(workspace);\n\t}\n\n\tprivate checkAndMarkWorkspaceComplete(fromCache: boolean): void {\n\t\tif (!this.completeWorkspaceBarrier.isOpen() && this.workspace.initialized) {\n\t\t\tthis.completeWorkspaceBarrier.open();\n\t\t\tthis.validateWorkspaceFoldersAndReload(fromCache);\n\t\t}\n\t}\n\n\tprivate async updateWorkspaceAndInitializeConfiguration(workspace: Workspace): Promise<void> {\n\t\tconst hasWorkspaceBefore = !!this.workspace;\n\t\tlet previousState: WorkbenchState | undefined;\n\t\tlet previousWorkspacePath: string | undefined;\n\t\tlet previousFolders: WorkspaceFolder[] = [];\n\n\t\tif (hasWorkspaceBefore) {\n\t\t\tpreviousState = this.getWorkbenchState();\n\t\t\tpreviousWorkspacePath = this.workspace.configuration ? this.workspace.configuration.fsPath : undefined;\n\t\t\tpreviousFolders = this.workspace.folders;\n\t\t\tthis.workspace.update(workspace);\n\t\t} else {\n\t\t\tthis.workspace = workspace;\n\t\t}\n\n\t\tawait this.initializeConfiguration();\n\n\t\t// Trigger changes after configuration initialization so that configuration is up to date.\n\t\tif (hasWorkspaceBefore) {\n\t\t\tconst newState = this.getWorkbenchState();\n\t\t\tif (previousState && newState !== previousState) {\n\t\t\t\tthis._onDidChangeWorkbenchState.fire(newState);\n\t\t\t}\n\n\t\t\tconst newWorkspacePath = this.workspace.configuration ? this.workspace.configuration.fsPath : undefined;\n\t\t\tif (previousWorkspacePath && newWorkspacePath !== previousWorkspacePath || newState !== previousState) {\n\t\t\t\tthis._onDidChangeWorkspaceName.fire();\n\t\t\t}\n\n\t\t\tconst folderChanges = this.compareFolders(previousFolders, this.workspace.folders);\n\t\t\tif (folderChanges && (folderChanges.added.length || folderChanges.removed.length || folderChanges.changed.length)) {\n\t\t\t\tawait this.handleWillChangeWorkspaceFolders(folderChanges, false);\n\t\t\t\tthis._onDidChangeWorkspaceFolders.fire(folderChanges);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.localUserConfiguration.hasTasksLoaded) {\n\t\t\t// Reload local user configuration again to load user tasks\n\t\t\tthis._register(runWhenIdle(() => this.reloadLocalUserConfiguration(), 5000));\n\t\t}\n\t}\n\n\tprivate compareFolders(currentFolders: IWorkspaceFolder[], newFolders: IWorkspaceFolder[]): IWorkspaceFoldersChangeEvent {\n\t\tconst result: IWorkspaceFoldersChangeEvent = { added: [], removed: [], changed: [] };\n\t\tresult.added = newFolders.filter(newFolder => !currentFolders.some(currentFolder => newFolder.uri.toString() === currentFolder.uri.toString()));\n\t\tfor (let currentIndex = 0; currentIndex < currentFolders.length; currentIndex++) {\n\t\t\tlet currentFolder = currentFolders[currentIndex];\n\t\t\tlet newIndex = 0;\n\t\t\tfor (newIndex = 0; newIndex < newFolders.length && currentFolder.uri.toString() !== newFolders[newIndex].uri.toString(); newIndex++) { }\n\t\t\tif (newIndex < newFolders.length) {\n\t\t\t\tif (currentIndex !== newIndex || currentFolder.name !== newFolders[newIndex].name) {\n\t\t\t\t\tresult.changed.push(currentFolder);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.removed.push(currentFolder);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async initializeConfiguration(): Promise<void> {\n\t\tconst { local, remote } = await this.initializeUserConfiguration();\n\t\tawait this.loadConfiguration(local, remote);\n\t}\n\n\tprivate async initializeUserConfiguration(): Promise<{ local: ConfigurationModel, remote: ConfigurationModel }> {\n\t\tconst [local, remote] = await Promise.all([this.localUserConfiguration.initialize(), this.remoteUserConfiguration ? this.remoteUserConfiguration.initialize() : Promise.resolve(new ConfigurationModel())]);\n\t\treturn { local, remote };\n\t}\n\n\tprivate async reloadUserConfiguration(): Promise<{ local: ConfigurationModel, remote: ConfigurationModel }> {\n\t\tconst [local, remote] = await Promise.all([this.reloadLocalUserConfiguration(true), this.reloadRemoteUserConfiguration(true)]);\n\t\treturn { local, remote };\n\t}\n\n\tasync reloadLocalUserConfiguration(donotTrigger?: boolean): Promise<ConfigurationModel> {\n\t\tconst model = await this.localUserConfiguration.reload();\n\t\tif (!donotTrigger) {\n\t\t\tthis.onLocalUserConfigurationChanged(model);\n\t\t}\n\t\treturn model;\n\t}\n\n\tprivate async reloadRemoteUserConfiguration(donotTrigger?: boolean): Promise<ConfigurationModel> {\n\t\tif (this.remoteUserConfiguration) {\n\t\t\tconst model = await this.remoteUserConfiguration.reload();\n\t\t\tif (!donotTrigger) {\n\t\t\t\tthis.onRemoteUserConfigurationChanged(model);\n\t\t\t}\n\t\t\treturn model;\n\t\t}\n\t\treturn new ConfigurationModel();\n\t}\n\n\tprivate async reloadWorkspaceConfiguration(): Promise<void> {\n\t\tconst workbenchState = this.getWorkbenchState();\n\t\tif (workbenchState === WorkbenchState.FOLDER) {\n\t\t\treturn this.onWorkspaceFolderConfigurationChanged(this.workspace.folders[0]);\n\t\t}\n\t\tif (workbenchState === WorkbenchState.WORKSPACE) {\n\t\t\treturn this.workspaceConfiguration.reload().then(() => this.onWorkspaceConfigurationChanged(false));\n\t\t}\n\t}\n\n\tprivate reloadWorkspaceFolderConfiguration(folder: IWorkspaceFolder): Promise<void> {\n\t\treturn this.onWorkspaceFolderConfigurationChanged(folder);\n\t}\n\n\tprivate async loadConfiguration(userConfigurationModel: ConfigurationModel, remoteUserConfigurationModel: ConfigurationModel): Promise<void> {\n\t\t// reset caches\n\t\tthis.cachedFolderConfigs = new ResourceMap<FolderConfiguration>();\n\n\t\tconst folders = this.workspace.folders;\n\t\tconst folderConfigurations = await this.loadFolderConfigurations(folders);\n\n\t\tlet workspaceConfiguration = this.getWorkspaceConfigurationModel(folderConfigurations);\n\t\tconst folderConfigurationModels = new ResourceMap<ConfigurationModel>();\n\t\tfolderConfigurations.forEach((folderConfiguration, index) => folderConfigurationModels.set(folders[index].uri, folderConfiguration));\n\n\t\tconst currentConfiguration = this._configuration;\n\t\tthis._configuration = new Configuration(this.defaultConfiguration, userConfigurationModel, remoteUserConfigurationModel, workspaceConfiguration, folderConfigurationModels, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), this.workspace);\n\n\t\tif (this.initialized) {\n\t\t\tconst change = this._configuration.compare(currentConfiguration);\n\t\t\tthis.triggerConfigurationChange(change, { data: currentConfiguration.toData(), workspace: this.workspace }, ConfigurationTarget.WORKSPACE);\n\t\t} else {\n\t\t\tthis._onDidChangeConfiguration.fire(new AllKeysConfigurationChangeEvent(this._configuration, this.workspace, ConfigurationTarget.WORKSPACE, this.getTargetConfiguration(ConfigurationTarget.WORKSPACE)));\n\t\t\tthis.initialized = true;\n\t\t}\n\n\t\tthis.updateRestrictedSettings();\n\t}\n\n\tprivate getWorkspaceConfigurationModel(folderConfigurations: ConfigurationModel[]): ConfigurationModel {\n\t\tswitch (this.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn folderConfigurations[0];\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn this.workspaceConfiguration.getConfiguration();\n\t\t\tdefault:\n\t\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\tprivate onDefaultConfigurationChanged(keys: string[]): void {\n\t\tthis.defaultConfiguration = new DefaultConfigurationModel();\n\t\tif (this.workspace) {\n\t\t\tconst previousData = this._configuration.toData();\n\t\t\tconst change = this._configuration.compareAndUpdateDefaultConfiguration(this.defaultConfiguration, keys);\n\t\t\tif (this.remoteUserConfiguration) {\n\t\t\t\tthis._configuration.updateLocalUserConfiguration(this.localUserConfiguration.reparse());\n\t\t\t\tthis._configuration.updateRemoteUserConfiguration(this.remoteUserConfiguration.reparse());\n\t\t\t}\n\t\t\tif (this.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\tconst folderConfiguration = this.cachedFolderConfigs.get(this.workspace.folders[0].uri);\n\t\t\t\tif (folderConfiguration) {\n\t\t\t\t\tthis._configuration.updateWorkspaceConfiguration(folderConfiguration.reparse());\n\t\t\t\t\tthis._configuration.updateFolderConfiguration(this.workspace.folders[0].uri, folderConfiguration.reparse());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._configuration.updateWorkspaceConfiguration(this.workspaceConfiguration.reparseWorkspaceSettings());\n\t\t\t\tfor (const folder of this.workspace.folders) {\n\t\t\t\t\tconst folderConfiguration = this.cachedFolderConfigs.get(folder.uri);\n\t\t\t\t\tif (folderConfiguration) {\n\t\t\t\t\t\tthis._configuration.updateFolderConfiguration(folder.uri, folderConfiguration.reparse());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.triggerConfigurationChange(change, { data: previousData, workspace: this.workspace }, ConfigurationTarget.DEFAULT);\n\t\t\tthis.updateRestrictedSettings();\n\t\t}\n\t}\n\n\tprivate onLocalUserConfigurationChanged(userConfiguration: ConfigurationModel): void {\n\t\tconst previous = { data: this._configuration.toData(), workspace: this.workspace };\n\t\tconst change = this._configuration.compareAndUpdateLocalUserConfiguration(userConfiguration);\n\t\tthis.triggerConfigurationChange(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onRemoteUserConfigurationChanged(userConfiguration: ConfigurationModel): void {\n\t\tconst previous = { data: this._configuration.toData(), workspace: this.workspace };\n\t\tconst change = this._configuration.compareAndUpdateRemoteUserConfiguration(userConfiguration);\n\t\tthis.triggerConfigurationChange(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate async onWorkspaceConfigurationChanged(fromCache: boolean): Promise<void> {\n\t\tif (this.workspace && this.workspace.configuration) {\n\t\t\tlet newFolders = toWorkspaceFolders(this.workspaceConfiguration.getFolders(), this.workspace.configuration, this.uriIdentityService.extUri);\n\n\t\t\t// Validate only if workspace is initialized\n\t\t\tif (this.workspace.initialized) {\n\t\t\t\tconst { added, removed, changed } = this.compareFolders(this.workspace.folders, newFolders);\n\n\t\t\t\t/* If changed validate new folders */\n\t\t\t\tif (added.length || removed.length || changed.length) {\n\t\t\t\t\tnewFolders = await this.toValidWorkspaceFolders(newFolders);\n\t\t\t\t}\n\t\t\t\t/* Otherwise use existing */\n\t\t\t\telse {\n\t\t\t\t\tnewFolders = this.workspace.folders;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.updateWorkspaceConfiguration(newFolders, this.workspaceConfiguration.getConfiguration(), fromCache);\n\t\t}\n\t}\n\n\tprivate updateRestrictedSettings(): void {\n\t\tconst changed: string[] = [];\n\n\t\tconst allProperties = this.configurationRegistry.getConfigurationProperties();\n\t\tconst defaultRestrictedSettings: string[] = Object.keys(allProperties).filter(key => allProperties[key].restricted).sort((a, b) => a.localeCompare(b));\n\t\tconst defaultDelta = delta(defaultRestrictedSettings, this._restrictedSettings.default, (a, b) => a.localeCompare(b));\n\t\tchanged.push(...defaultDelta.added, ...defaultDelta.removed);\n\n\t\tconst userLocal = this.localUserConfiguration.getRestrictedSettings().sort((a, b) => a.localeCompare(b));\n\t\tconst userLocalDelta = delta(userLocal, this._restrictedSettings.userLocal || [], (a, b) => a.localeCompare(b));\n\t\tchanged.push(...userLocalDelta.added, ...userLocalDelta.removed);\n\n\t\tconst userRemote = (this.remoteUserConfiguration?.getRestrictedSettings() || []).sort((a, b) => a.localeCompare(b));\n\t\tconst userRemoteDelta = delta(userRemote, this._restrictedSettings.userRemote || [], (a, b) => a.localeCompare(b));\n\t\tchanged.push(...userRemoteDelta.added, ...userRemoteDelta.removed);\n\n\t\tconst workspaceFolderMap = new ResourceMap<ReadonlyArray<string>>();\n\t\tfor (const workspaceFolder of this.workspace.folders) {\n\t\t\tconst cachedFolderConfig = this.cachedFolderConfigs.get(workspaceFolder.uri);\n\t\t\tconst folderRestrictedSettings = (cachedFolderConfig?.getRestrictedSettings() || []).sort((a, b) => a.localeCompare(b));\n\t\t\tif (folderRestrictedSettings.length) {\n\t\t\t\tworkspaceFolderMap.set(workspaceFolder.uri, folderRestrictedSettings);\n\t\t\t}\n\t\t\tconst previous = this._restrictedSettings.workspaceFolder?.get(workspaceFolder.uri) || [];\n\t\t\tconst workspaceFolderDelta = delta(folderRestrictedSettings, previous, (a, b) => a.localeCompare(b));\n\t\t\tchanged.push(...workspaceFolderDelta.added, ...workspaceFolderDelta.removed);\n\t\t}\n\n\t\tconst workspace = this.getWorkbenchState() === WorkbenchState.WORKSPACE ? this.workspaceConfiguration.getRestrictedSettings().sort((a, b) => a.localeCompare(b))\n\t\t\t: this.workspace.folders[0] ? (workspaceFolderMap.get(this.workspace.folders[0].uri) || []) : [];\n\t\tconst workspaceDelta = delta(workspace, this._restrictedSettings.workspace || [], (a, b) => a.localeCompare(b));\n\t\tchanged.push(...workspaceDelta.added, ...workspaceDelta.removed);\n\n\t\tif (changed.length) {\n\t\t\tthis._restrictedSettings = {\n\t\t\t\tdefault: defaultRestrictedSettings,\n\t\t\t\tuserLocal: userLocal.length ? userLocal : undefined,\n\t\t\t\tuserRemote: userRemote.length ? userRemote : undefined,\n\t\t\t\tworkspace: workspace.length ? workspace : undefined,\n\t\t\t\tworkspaceFolder: workspaceFolderMap.size ? workspaceFolderMap : undefined,\n\t\t\t};\n\t\t\tthis._onDidChangeRestrictedSettings.fire(this.restrictedSettings);\n\t\t}\n\t}\n\n\tprivate async updateWorkspaceConfiguration(workspaceFolders: WorkspaceFolder[], configuration: ConfigurationModel, fromCache: boolean): Promise<void> {\n\t\tconst previous = { data: this._configuration.toData(), workspace: this.workspace };\n\t\tconst change = this._configuration.compareAndUpdateWorkspaceConfiguration(configuration);\n\t\tconst changes = this.compareFolders(this.workspace.folders, workspaceFolders);\n\t\tif (changes.added.length || changes.removed.length || changes.changed.length) {\n\t\t\tthis.workspace.folders = workspaceFolders;\n\t\t\tconst change = await this.onFoldersChanged();\n\t\t\tawait this.handleWillChangeWorkspaceFolders(changes, fromCache);\n\t\t\tthis.triggerConfigurationChange(change, previous, ConfigurationTarget.WORKSPACE_FOLDER);\n\t\t\tthis._onDidChangeWorkspaceFolders.fire(changes);\n\t\t} else {\n\t\t\tthis.triggerConfigurationChange(change, previous, ConfigurationTarget.WORKSPACE);\n\t\t}\n\t\tthis.updateRestrictedSettings();\n\t}\n\n\tprivate async handleWillChangeWorkspaceFolders(changes: IWorkspaceFoldersChangeEvent, fromCache: boolean): Promise<void> {\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillChangeWorkspaceFolders.fire({\n\t\t\tjoin(updateWorkspaceTrustStatePromise) {\n\t\t\t\tjoiners.push(updateWorkspaceTrustStatePromise);\n\t\t\t},\n\t\t\tchanges,\n\t\t\tfromCache\n\t\t});\n\t\ttry { await Promises.settled(joiners); } catch (error) { /* Ignore */ }\n\t}\n\n\tprivate async onWorkspaceFolderConfigurationChanged(folder: IWorkspaceFolder): Promise<void> {\n\t\tconst [folderConfiguration] = await this.loadFolderConfigurations([folder]);\n\t\tconst previous = { data: this._configuration.toData(), workspace: this.workspace };\n\t\tconst folderConfiguraitonChange = this._configuration.compareAndUpdateFolderConfiguration(folder.uri, folderConfiguration);\n\t\tif (this.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\tconst workspaceConfigurationChange = this._configuration.compareAndUpdateWorkspaceConfiguration(folderConfiguration);\n\t\t\tthis.triggerConfigurationChange(mergeChanges(folderConfiguraitonChange, workspaceConfigurationChange), previous, ConfigurationTarget.WORKSPACE);\n\t\t} else {\n\t\t\tthis.triggerConfigurationChange(folderConfiguraitonChange, previous, ConfigurationTarget.WORKSPACE_FOLDER);\n\t\t}\n\t\tthis.updateRestrictedSettings();\n\t}\n\n\tprivate async onFoldersChanged(): Promise<IConfigurationChange> {\n\t\tconst changes: IConfigurationChange[] = [];\n\n\t\t// Remove the configurations of deleted folders\n\t\tfor (const key of this.cachedFolderConfigs.keys()) {\n\t\t\tif (!this.workspace.folders.filter(folder => folder.uri.toString() === key.toString())[0]) {\n\t\t\t\tconst folderConfiguration = this.cachedFolderConfigs.get(key);\n\t\t\t\tfolderConfiguration!.dispose();\n\t\t\t\tthis.cachedFolderConfigs.delete(key);\n\t\t\t\tchanges.push(this._configuration.compareAndDeleteFolderConfiguration(key));\n\t\t\t}\n\t\t}\n\n\t\tconst toInitialize = this.workspace.folders.filter(folder => !this.cachedFolderConfigs.has(folder.uri));\n\t\tif (toInitialize.length) {\n\t\t\tconst folderConfigurations = await this.loadFolderConfigurations(toInitialize);\n\t\t\tfolderConfigurations.forEach((folderConfiguration, index) => {\n\t\t\t\tchanges.push(this._configuration.compareAndUpdateFolderConfiguration(toInitialize[index].uri, folderConfiguration));\n\t\t\t});\n\t\t}\n\t\treturn mergeChanges(...changes);\n\t}\n\n\tprivate loadFolderConfigurations(folders: IWorkspaceFolder[]): Promise<ConfigurationModel[]> {\n\t\treturn Promise.all([...folders.map(folder => {\n\t\t\tlet folderConfiguration = this.cachedFolderConfigs.get(folder.uri);\n\t\t\tif (!folderConfiguration) {\n\t\t\t\tfolderConfiguration = new FolderConfiguration(folder, FOLDER_CONFIG_FOLDER_NAME, this.getWorkbenchState(), this.isWorkspaceTrusted, this.fileService, this.uriIdentityService, this.logService, this.configurationCache);\n\t\t\t\tthis._register(folderConfiguration.onDidChange(() => this.onWorkspaceFolderConfigurationChanged(folder)));\n\t\t\t\tthis.cachedFolderConfigs.set(folder.uri, this._register(folderConfiguration));\n\t\t\t}\n\t\t\treturn folderConfiguration.loadConfiguration();\n\t\t})]);\n\t}\n\n\tprivate async validateWorkspaceFoldersAndReload(fromCache: boolean): Promise<void> {\n\t\tconst validWorkspaceFolders = await this.toValidWorkspaceFolders(this.workspace.folders);\n\t\tconst { removed } = this.compareFolders(this.workspace.folders, validWorkspaceFolders);\n\t\tif (removed.length) {\n\t\t\tawait this.updateWorkspaceConfiguration(validWorkspaceFolders, this.workspaceConfiguration.getConfiguration(), fromCache);\n\t\t}\n\t}\n\n\t// Filter out workspace folders which are files (not directories)\n\t// Workspace folders those cannot be resolved are not filtered because they are handled by the Explorer.\n\tprivate async toValidWorkspaceFolders(workspaceFolders: WorkspaceFolder[]): Promise<WorkspaceFolder[]> {\n\t\tconst validWorkspaceFolders: WorkspaceFolder[] = [];\n\t\tfor (const workspaceFolder of workspaceFolders) {\n\t\t\ttry {\n\t\t\t\tconst result = await this.fileService.resolve(workspaceFolder.uri);\n\t\t\t\tif (!result.isDirectory) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.warn(`Ignoring the error while validating workspace folder ${workspaceFolder.uri.toString()} - ${toErrorMessage(e)}`);\n\t\t\t}\n\t\t\tvalidWorkspaceFolders.push(workspaceFolder);\n\t\t}\n\t\treturn validWorkspaceFolders;\n\t}\n\n\tprivate async writeConfigurationValue(key: string, value: any, target: ConfigurationTarget, overrides: IConfigurationOverrides | undefined, donotNotifyError: boolean): Promise<void> {\n\t\tif (target === ConfigurationTarget.DEFAULT) {\n\t\t\tthrow new Error('Invalid configuration target');\n\t\t}\n\n\t\tif (target === ConfigurationTarget.MEMORY) {\n\t\t\tconst previous = { data: this._configuration.toData(), workspace: this.workspace };\n\t\t\tthis._configuration.updateValue(key, value, overrides);\n\t\t\tthis.triggerConfigurationChange({ keys: overrides?.overrideIdentifier ? [keyFromOverrideIdentifier(overrides.overrideIdentifier), key] : [key], overrides: overrides?.overrideIdentifier ? [[overrides?.overrideIdentifier, [key]]] : [] }, previous, target);\n\t\t\treturn;\n\t\t}\n\n\t\tconst editableConfigurationTarget = this.toEditableConfigurationTarget(target, key);\n\t\tif (!editableConfigurationTarget) {\n\t\t\tthrow new Error('Invalid configuration target');\n\t\t}\n\n\t\tif (editableConfigurationTarget === EditableConfigurationTarget.USER_REMOTE && !this.remoteUserConfiguration) {\n\t\t\tthrow new Error('Invalid configuration target');\n\t\t}\n\n\t\tawait this.configurationEditingService.writeConfiguration(editableConfigurationTarget, { key, value }, { scopes: overrides, donotNotifyError });\n\t\tswitch (editableConfigurationTarget) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\treturn this.reloadLocalUserConfiguration().then(() => undefined);\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\treturn this.reloadRemoteUserConfiguration().then(() => undefined);\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\treturn this.reloadWorkspaceConfiguration();\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\tconst workspaceFolder = overrides && overrides.resource ? this.workspace.getFolder(overrides.resource) : null;\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\treturn this.reloadWorkspaceFolderConfiguration(workspaceFolder);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate deriveConfigurationTargets(key: string, value: any, inspect: IConfigurationValue<any>): ConfigurationTarget[] {\n\t\tif (equals(value, inspect.value)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst definedTargets: ConfigurationTarget[] = [];\n\t\tif (inspect.workspaceFolderValue !== undefined) {\n\t\t\tdefinedTargets.push(ConfigurationTarget.WORKSPACE_FOLDER);\n\t\t}\n\t\tif (inspect.workspaceValue !== undefined) {\n\t\t\tdefinedTargets.push(ConfigurationTarget.WORKSPACE);\n\t\t}\n\t\tif (inspect.userRemoteValue !== undefined) {\n\t\t\tdefinedTargets.push(ConfigurationTarget.USER_REMOTE);\n\t\t}\n\t\tif (inspect.userLocalValue !== undefined) {\n\t\t\tdefinedTargets.push(ConfigurationTarget.USER_LOCAL);\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\t// Remove the setting in all defined targets\n\t\t\treturn definedTargets;\n\t\t}\n\n\t\treturn [definedTargets[0] || ConfigurationTarget.USER];\n\t}\n\n\tprivate triggerConfigurationChange(change: IConfigurationChange, previous: { data: IConfigurationData, workspace?: Workspace } | undefined, target: ConfigurationTarget): void {\n\t\tif (change.keys.length) {\n\t\t\tif (target !== ConfigurationTarget.DEFAULT) {\n\t\t\t\tthis.logService.debug(`Configuration keys changed in ${ConfigurationTargetToString(target)} target`, ...change.keys);\n\t\t\t}\n\t\t\tconst configurationChangeEvent = new ConfigurationChangeEvent(change, previous, this._configuration, this.workspace);\n\t\t\tconfigurationChangeEvent.source = target;\n\t\t\tconfigurationChangeEvent.sourceConfig = this.getTargetConfiguration(target);\n\t\t\tthis._onDidChangeConfiguration.fire(configurationChangeEvent);\n\t\t}\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this._configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this._configuration.userConfiguration.contents;\n\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\treturn this._configuration.workspaceConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n\n\tprivate toEditableConfigurationTarget(target: ConfigurationTarget, key: string): EditableConfigurationTarget | null {\n\t\tif (target === ConfigurationTarget.USER) {\n\t\t\tif (this.remoteUserConfiguration) {\n\t\t\t\tconst scope = this.configurationRegistry.getConfigurationProperties()[key]?.scope;\n\t\t\t\tif (scope === ConfigurationScope.MACHINE || scope === ConfigurationScope.MACHINE_OVERRIDABLE) {\n\t\t\t\t\treturn EditableConfigurationTarget.USER_REMOTE;\n\t\t\t\t}\n\t\t\t\tif (this.inspect(key).userRemoteValue !== undefined) {\n\t\t\t\t\treturn EditableConfigurationTarget.USER_REMOTE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn EditableConfigurationTarget.USER_LOCAL;\n\t\t}\n\t\tif (target === ConfigurationTarget.USER_LOCAL) {\n\t\t\treturn EditableConfigurationTarget.USER_LOCAL;\n\t\t}\n\t\tif (target === ConfigurationTarget.USER_REMOTE) {\n\t\t\treturn EditableConfigurationTarget.USER_REMOTE;\n\t\t}\n\t\tif (target === ConfigurationTarget.WORKSPACE) {\n\t\t\treturn EditableConfigurationTarget.WORKSPACE;\n\t\t}\n\t\tif (target === ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\treturn EditableConfigurationTarget.WORKSPACE_FOLDER;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass RegisterConfigurationSchemasContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper();\n\t\tthis.registerConfigurationSchemas();\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\t\tthis._register(configurationRegistry.onDidUpdateConfiguration(e => this.registerConfigurationSchemas()));\n\t\tthis._register(configurationRegistry.onDidSchemaChange(e => this.registerConfigurationSchemas()));\n\t\tthis._register(workspaceTrustManagementService.onDidChangeTrust(() => this.registerConfigurationSchemas()));\n\t}\n\n\tprivate registerConfigurationSchemas(): void {\n\t\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\n\t\tconst allSettingsSchema: IJSONSchema = {\n\t\t\tproperties: allSettings.properties,\n\t\t\tpatternProperties: allSettings.patternProperties,\n\t\t\tadditionalProperties: true,\n\t\t\tallowTrailingCommas: true,\n\t\t\tallowComments: true\n\t\t};\n\n\t\tconst userSettingsSchema: IJSONSchema = this.environmentService.remoteAuthority ?\n\t\t\t{\n\t\t\t\tproperties: {\n\t\t\t\t\t...applicationSettings.properties,\n\t\t\t\t\t...windowSettings.properties,\n\t\t\t\t\t...resourceSettings.properties\n\t\t\t\t},\n\t\t\t\tpatternProperties: allSettings.patternProperties,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tallowTrailingCommas: true,\n\t\t\t\tallowComments: true\n\t\t\t}\n\t\t\t: allSettingsSchema;\n\n\t\tconst machineSettingsSchema: IJSONSchema = {\n\t\t\tproperties: {\n\t\t\t\t...machineSettings.properties,\n\t\t\t\t...machineOverridableSettings.properties,\n\t\t\t\t...windowSettings.properties,\n\t\t\t\t...resourceSettings.properties\n\t\t\t},\n\t\t\tpatternProperties: allSettings.patternProperties,\n\t\t\tadditionalProperties: true,\n\t\t\tallowTrailingCommas: true,\n\t\t\tallowComments: true\n\t\t};\n\n\t\tconst workspaceSettingsSchema: IJSONSchema = {\n\t\t\tproperties: {\n\t\t\t\t...this.checkAndFilterPropertiesRequiringTrust(machineOverridableSettings.properties),\n\t\t\t\t...this.checkAndFilterPropertiesRequiringTrust(windowSettings.properties),\n\t\t\t\t...this.checkAndFilterPropertiesRequiringTrust(resourceSettings.properties)\n\t\t\t},\n\t\t\tpatternProperties: allSettings.patternProperties,\n\t\t\tadditionalProperties: true,\n\t\t\tallowTrailingCommas: true,\n\t\t\tallowComments: true\n\t\t};\n\n\t\tjsonRegistry.registerSchema(defaultSettingsSchemaId, {\n\t\t\tproperties: Object.keys(allSettings.properties).reduce<IJSONSchemaMap>((result, key) => {\n\t\t\t\tresult[key] = {\n\t\t\t\t\t...allSettings.properties[key],\n\t\t\t\t\tdeprecationMessage: undefined\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t}, {}),\n\t\t\tpatternProperties: Object.keys(allSettings.patternProperties).reduce<IJSONSchemaMap>((result, key) => {\n\t\t\t\tresult[key] = {\n\t\t\t\t\t...allSettings.patternProperties[key],\n\t\t\t\t\tdeprecationMessage: undefined\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t}, {}),\n\t\t\tadditionalProperties: true,\n\t\t\tallowTrailingCommas: true,\n\t\t\tallowComments: true\n\t\t});\n\t\tjsonRegistry.registerSchema(userSettingsSchemaId, userSettingsSchema);\n\t\tjsonRegistry.registerSchema(machineSettingsSchemaId, machineSettingsSchema);\n\n\t\tif (WorkbenchState.WORKSPACE === this.workspaceContextService.getWorkbenchState()) {\n\t\t\tconst folderSettingsSchema: IJSONSchema = {\n\t\t\t\tproperties: {\n\t\t\t\t\t...this.checkAndFilterPropertiesRequiringTrust(machineOverridableSettings.properties),\n\t\t\t\t\t...this.checkAndFilterPropertiesRequiringTrust(resourceSettings.properties)\n\t\t\t\t},\n\t\t\t\tpatternProperties: allSettings.patternProperties,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tallowTrailingCommas: true,\n\t\t\t\tallowComments: true\n\t\t\t};\n\t\t\tjsonRegistry.registerSchema(workspaceSettingsSchemaId, workspaceSettingsSchema);\n\t\t\tjsonRegistry.registerSchema(folderSettingsSchemaId, folderSettingsSchema);\n\t\t} else {\n\t\t\tjsonRegistry.registerSchema(workspaceSettingsSchemaId, workspaceSettingsSchema);\n\t\t\tjsonRegistry.registerSchema(folderSettingsSchemaId, workspaceSettingsSchema);\n\t\t}\n\t}\n\n\tprivate checkAndFilterPropertiesRequiringTrust(properties: IStringDictionary<IConfigurationPropertySchema>): IStringDictionary<IConfigurationPropertySchema> {\n\t\tif (this.workspaceTrustManagementService.isWorkpaceTrusted()) {\n\t\t\treturn properties;\n\t\t}\n\n\t\tconst result: IStringDictionary<IConfigurationPropertySchema> = {};\n\t\tforEach(properties, ({ key, value }) => {\n\t\t\tif (!value.restricted) {\n\t\t\t\tresult[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RegisterConfigurationSchemasContribution, LifecyclePhase.Restored);\n"]}