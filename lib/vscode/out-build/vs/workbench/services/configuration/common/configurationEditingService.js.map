{"version":3,"sources":["vs/workbench/services/configuration/common/configurationEditingService.ts"],"names":[],"mappings":"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","file":"configurationEditingService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport * as json from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Queue } from 'vs/base/common/async';\nimport { Edit } from 'vs/base/common/jsonFormatter';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IConfigurationService, IConfigurationOverrides, keyFromOverrideIdentifier } from 'vs/platform/configuration/common/configuration';\nimport { FOLDER_SETTINGS_PATH, WORKSPACE_STANDALONE_CONFIGURATIONS, TASKS_CONFIGURATION_KEY, LAUNCH_CONFIGURATION_KEY, USER_STANDALONE_CONFIGURATIONS, TASKS_DEFAULT } from 'vs/workbench/services/configuration/common/configuration';\nimport { IFileService, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport { ITextModelService, IResolvedTextEditorModel } from 'vs/editor/common/services/resolverService';\nimport { OVERRIDE_PROPERTY_PATTERN, IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { withUndefinedAsNull, withNullAsUndefined } from 'vs/base/common/types';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IUriIdentityService } from 'vs/workbench/services/uriIdentity/common/uriIdentity';\n\nexport const enum ConfigurationEditingErrorCode {\n\n\t/**\n\t * Error when trying to write a configuration key that is not registered.\n\t */\n\tERROR_UNKNOWN_KEY,\n\n\t/**\n\t * Error when trying to write an application setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION,\n\n\t/**\n\t * Error when trying to write a machne setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE,\n\n\t/**\n\t * Error when trying to write an invalid folder configuration key to folder settings.\n\t */\n\tERROR_INVALID_FOLDER_CONFIGURATION,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_USER_TARGET,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_WORKSPACE_TARGET,\n\n\t/**\n\t * Error when trying to write a configuration key to folder target\n\t */\n\tERROR_INVALID_FOLDER_TARGET,\n\n\t/**\n\t * Error when trying to write to language specific setting but not supported for preovided key\n\t */\n\tERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION,\n\n\t/**\n\t * Error when trying to write to the workspace configuration without having a workspace opened.\n\t */\n\tERROR_NO_WORKSPACE_OPENED,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is dirty in the editor.\n\t */\n\tERROR_CONFIGURATION_FILE_DIRTY,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is not the latest in the disk.\n\t */\n\tERROR_CONFIGURATION_FILE_MODIFIED_SINCE,\n\n\t/**\n\t * Error when trying to write to a configuration file that contains JSON errors.\n\t */\n\tERROR_INVALID_CONFIGURATION\n}\n\nexport class ConfigurationEditingError extends Error {\n\tconstructor(message: string, public code: ConfigurationEditingErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport interface IConfigurationValue {\n\tkey: string;\n\tvalue: any;\n}\n\nexport interface IConfigurationEditingOptions {\n\t/**\n\t * If `true`, do not saves the configuration. Default is `false`.\n\t */\n\tdonotSave?: boolean;\n\t/**\n\t * If `true`, do not notifies the error to user by showing the message box. Default is `false`.\n\t */\n\tdonotNotifyError?: boolean;\n\t/**\n\t * Scope of configuration to be written into.\n\t */\n\tscopes?: IConfigurationOverrides;\n}\n\nexport const enum EditableConfigurationTarget {\n\tUSER_LOCAL = 1,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER\n}\n\ninterface IConfigurationEditOperation extends IConfigurationValue {\n\ttarget: EditableConfigurationTarget;\n\tjsonPath: json.JSONPath;\n\tresource?: URI;\n\tworkspaceStandAloneConfigurationKey?: string;\n\n}\n\ninterface ConfigurationEditingOptions extends IConfigurationEditingOptions {\n\tforce?: boolean;\n}\n\nexport class ConfigurationEditingService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate queue: Queue<void>;\n\tprivate remoteSettingsResource: URI | null = null;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t\tremoteAgentService.getEnvironment().then(environment => {\n\t\t\tif (environment) {\n\t\t\t\tthis.remoteSettingsResource = environment.settingsPath;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteConfiguration(target: EditableConfigurationTarget, value: IConfigurationValue, options: IConfigurationEditingOptions = {}): Promise<void> {\n\t\tconst operation = this.getConfigurationEditOperation(target, value, options.scopes || {});\n\t\treturn Promise.resolve(this.queue.queue(() => this.doWriteConfiguration(operation, options) // queue up writes to prevent race conditions\n\t\t\t.then(() => { },\n\t\t\t\tasync error => {\n\t\t\t\t\tif (!options.donotNotifyError) {\n\t\t\t\t\t\tawait this.onError(error, operation, options.scopes);\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t})));\n\t}\n\n\tprivate async doWriteConfiguration(operation: IConfigurationEditOperation, options: ConfigurationEditingOptions): Promise<void> {\n\t\tconst checkDirtyConfiguration = !(options.force || options.donotSave);\n\t\tconst saveConfiguration = options.force || !options.donotSave;\n\t\tconst reference = await this.resolveAndValidate(operation.target, operation, checkDirtyConfiguration, options.scopes || {});\n\t\ttry {\n\t\t\tawait this.writeToBuffer(reference.object.textEditorModel, operation, saveConfiguration);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tawait this.textFileService.revert(operation.resource!);\n\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE, operation.target, operation);\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate async writeToBuffer(model: ITextModel, operation: IConfigurationEditOperation, save: boolean): Promise<any> {\n\t\tconst edit = this.getEdits(model, operation)[0];\n\t\tif (edit && this.applyEditsToBuffer(edit, model) && save) {\n\t\t\tawait this.textFileService.save(operation.resource!, { skipSaveParticipants: true /* programmatic change */, ignoreErrorHandler: true /* handle error self */ });\n\t\t}\n\t}\n\n\tprivate applyEditsToBuffer(edit: Edit, model: ITextModel): boolean {\n\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\tconst endPosition = model.getPositionAt(edit.offset + edit.length);\n\t\tconst range = new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\tlet currentText = model.getValueInRange(range);\n\t\tif (edit.content !== currentText) {\n\t\t\tconst editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n\t\t\tmodel.pushEditOperations([new Selection(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column)], [editOperation], () => []);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async onError(error: ConfigurationEditingError, operation: IConfigurationEditOperation, scopes: IConfigurationOverrides | undefined): Promise<void> {\n\t\tswitch (error.code) {\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION:\n\t\t\t\tthis.onInvalidConfigurationError(error, operation);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY:\n\t\t\t\tthis.onConfigurationFileDirtyError(error, operation, scopes);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\treturn this.doWriteConfiguration(operation, { scopes });\n\t\t\tdefault:\n\t\t\t\tthis.notificationService.error(error.message);\n\t\t}\n\t}\n\n\tprivate onInvalidConfigurationError(error: ConfigurationEditingError, operation: IConfigurationEditOperation,): void {\n\t\tconst openStandAloneConfigurationActionLabel = operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY ? nls.localize('openTasksConfiguration', \"Open Tasks Configuration\")\n\t\t\t: operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY ? nls.localize('openLaunchConfiguration', \"Open Launch Configuration\")\n\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!)\n\t\t\t\t}]\n\t\t\t);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('open', \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation)\n\t\t\t\t}]\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onConfigurationFileDirtyError(error: ConfigurationEditingError, operation: IConfigurationEditOperation, scopes: IConfigurationOverrides | undefined): void {\n\t\tconst openStandAloneConfigurationActionLabel = operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY ? nls.localize('openTasksConfiguration', \"Open Tasks Configuration\")\n\t\t\t: operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY ? nls.localize('openLaunchConfiguration', \"Open Launch Configuration\")\n\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('saveAndRetry', \"Save and Retry\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst key = operation.key ? `${operation.workspaceStandAloneConfigurationKey}.${operation.key}` : operation.workspaceStandAloneConfigurationKey!;\n\t\t\t\t\t\tthis.writeConfiguration(operation.target, { key, value: operation.value }, <ConfigurationEditingOptions>{ force: true, scopes });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!)\n\t\t\t\t}]\n\t\t\t);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('saveAndRetry', \"Save and Retry\"),\n\t\t\t\t\trun: () => this.writeConfiguration(operation.target, { key: operation.key, value: operation.value }, <ConfigurationEditingOptions>{ force: true, scopes })\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('open', \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation)\n\t\t\t\t}]\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate openSettings(operation: IConfigurationEditOperation): void {\n\t\tswitch (operation.target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\tthis.preferencesService.openGlobalSettings(true);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\tthis.preferencesService.openRemoteSettings();\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\tthis.preferencesService.openWorkspaceSettings(true);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\tif (operation.resource) {\n\t\t\t\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\t\tthis.preferencesService.openFolderSettings(workspaceFolder.uri, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate openFile(resource: URI): void {\n\t\tthis.editorService.openEditor({ resource, options: { pinned: true } });\n\t}\n\n\tprivate reject<T = never>(code: ConfigurationEditingErrorCode, target: EditableConfigurationTarget, operation: IConfigurationEditOperation): Promise<T> {\n\t\tconst message = this.toErrorMessage(code, target, operation);\n\n\t\treturn Promise.reject(new ConfigurationEditingError(message, code));\n\t}\n\n\tprivate toErrorMessage(error: ConfigurationEditingErrorCode, target: EditableConfigurationTarget, operation: IConfigurationEditOperation): string {\n\t\tswitch (error) {\n\n\t\t\t// API constraints\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY: return nls.localize('errorUnknownKey', \"Unable to write to {0} because {1} is not a registered configuration.\", this.stringifyTarget(target), operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION: return nls.localize('errorInvalidWorkspaceConfigurationApplication', \"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE: return nls.localize('errorInvalidWorkspaceConfigurationMachine', \"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION: return nls.localize('errorInvalidFolderConfiguration', \"Unable to write to Folder Settings because {0} does not support the folder resource scope.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET: return nls.localize('errorInvalidUserTarget', \"Unable to write to User Settings because {0} does not support for global scope.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_TARGET: return nls.localize('errorInvalidWorkspaceTarget', \"Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET: return nls.localize('errorInvalidFolderTarget', \"Unable to write to Folder Settings because no resource is provided.\");\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION: return nls.localize('errorInvalidResourceLanguageConfiguraiton', \"Unable to write to Language Settings because {0} is not a resource language setting.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED: return nls.localize('errorNoWorkspaceOpened', \"Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.\", this.stringifyTarget(target));\n\n\t\t\t// User issues\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION: {\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorInvalidTaskConfiguration', \"Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorInvalidLaunchConfiguration', \"Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfiguration', \"Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorInvalidRemoteConfiguration', \"Unable to write into remote user settings. Please open the remote user settings to correct errors/warnings in it and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfigurationWorkspace', \"Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\tlet workspaceFolderName: string = '<<unknown>>';\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfigurationFolder', \"Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.\", workspaceFolderName);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY: {\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorTasksConfigurationFileDirty', \"Unable to write into tasks configuration file because the file is dirty. Please save it first and then try again.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorLaunchConfigurationFileDirty', \"Unable to write into launch configuration file because the file is dirty. Please save it first and then try again.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirty', \"Unable to write into user settings because the file is dirty. Please save the user settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorRemoteConfigurationFileDirty', \"Unable to write into remote user settings because the file is dirty. Please save the remote user settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirtyWorkspace', \"Unable to write into workspace settings because the file is dirty. Please save the workspace settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\tlet workspaceFolderName: string = '<<unknown>>';\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirtyFolder', \"Unable to write into folder settings because the file is dirty. Please save the '{0}' folder settings file first and then try again.\", workspaceFolderName);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorTasksConfigurationFileModifiedSince', \"Unable to write into tasks configuration file because the content of the file is newer.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorLaunchConfigurationFileModifiedSince', \"Unable to write into launch configuration file because the content of the file is newer.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSince', \"Unable to write into user settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorRemoteConfigurationFileModifiedSince', \"Unable to write into remote user settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSinceWorkspace', \"Unable to write into workspace settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSinceFolder', \"Unable to write into folder settings because the content of the file is newer.\");\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate stringifyTarget(target: EditableConfigurationTarget): string {\n\t\tswitch (target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\treturn nls.localize('userTarget', \"User Settings\");\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\treturn nls.localize('remoteUserTarget', \"Remote User Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\treturn nls.localize('workspaceTarget', \"Workspace Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\treturn nls.localize('folderTarget', \"Folder Settings\");\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate getEdits(model: ITextModel, edit: IConfigurationEditOperation): Edit[] {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst { value, jsonPath } = edit;\n\n\t\t// Without jsonPath, the entire configuration file is being replaced, so we just use JSON.stringify\n\t\tif (!jsonPath.length) {\n\t\t\tconst content = JSON.stringify(value, null, insertSpaces ? ' '.repeat(tabSize) : '\\t');\n\t\t\treturn [{\n\t\t\t\tcontent,\n\t\t\t\tlength: model.getValue().length,\n\t\t\t\toffset: 0\n\t\t\t}];\n\t\t}\n\n\t\treturn setProperty(model.getValue(), jsonPath, value, { tabSize, insertSpaces, eol });\n\t}\n\n\tprivate defaultResourceValue(resource: URI): string {\n\t\tconst basename: string = this.uriIdentityService.extUri.basename(resource);\n\t\tconst configurationValue: string = basename.substr(0, basename.length - this.uriIdentityService.extUri.extname(resource).length);\n\t\tswitch (configurationValue) {\n\t\t\tcase TASKS_CONFIGURATION_KEY: return TASKS_DEFAULT;\n\t\t\tdefault: return '{}';\n\t\t}\n\t}\n\n\tprivate async resolveModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst exists = await this.fileService.exists(resource);\n\t\tif (!exists) {\n\t\t\tawait this.textFileService.write(resource, this.defaultResourceValue(resource), { encoding: 'utf8' });\n\t\t}\n\t\treturn this.textModelResolverService.createModelReference(resource);\n\t}\n\n\tprivate hasParseErrors(model: ITextModel, operation: IConfigurationEditOperation): boolean {\n\t\t// If we write to a workspace standalone file and replace the entire contents (no key provided)\n\t\t// we can return here because any parse errors can safely be ignored since all contents are replaced\n\t\tif (operation.workspaceStandAloneConfigurationKey && !operation.key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst parseErrors: json.ParseError[] = [];\n\t\tjson.parse(model.getValue(), parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\treturn parseErrors.length > 0;\n\t}\n\n\tprivate resolveAndValidate(target: EditableConfigurationTarget, operation: IConfigurationEditOperation, checkDirty: boolean, overrides: IConfigurationOverrides): Promise<IReference<IResolvedTextEditorModel>> {\n\n\t\t// Any key must be a known setting from the registry (unless this is a standalone config)\n\t\tif (!operation.workspaceStandAloneConfigurationKey) {\n\t\t\tconst validKeys = this.configurationService.keys().default;\n\t\t\tif (validKeys.indexOf(operation.key) < 0 && !OVERRIDE_PROPERTY_PATTERN.test(operation.key)) {\n\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY, target, operation);\n\t\t\t}\n\t\t}\n\n\t\tif (operation.workspaceStandAloneConfigurationKey) {\n\t\t\t// Global launches are not supported\n\t\t\tif ((operation.workspaceStandAloneConfigurationKey !== TASKS_CONFIGURATION_KEY) && (target === EditableConfigurationTarget.USER_LOCAL || target === EditableConfigurationTarget.USER_REMOTE)) {\n\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET, target, operation);\n\t\t\t}\n\t\t}\n\n\t\t// Target cannot be workspace or folder if no workspace opened\n\t\tif ((target === EditableConfigurationTarget.WORKSPACE || target === EditableConfigurationTarget.WORKSPACE_FOLDER) && this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED, target, operation);\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\tif (!operation.workspaceStandAloneConfigurationKey && !OVERRIDE_PROPERTY_PATTERN.test(operation.key)) {\n\t\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\t\t\tif (configurationProperties[operation.key].scope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION, target, operation);\n\t\t\t\t}\n\t\t\t\tif (configurationProperties[operation.key].scope === ConfigurationScope.MACHINE) {\n\t\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE, target, operation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\tif (!operation.resource) {\n\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET, target, operation);\n\t\t\t}\n\n\t\t\tif (!operation.workspaceStandAloneConfigurationKey && !OVERRIDE_PROPERTY_PATTERN.test(operation.key)) {\n\t\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\t\t\tif (!(configurationProperties[operation.key].scope === ConfigurationScope.RESOURCE || configurationProperties[operation.key].scope === ConfigurationScope.LANGUAGE_OVERRIDABLE)) {\n\t\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION, target, operation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (overrides.overrideIdentifier) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\t\tif (configurationProperties[operation.key].scope !== ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION, target, operation);\n\t\t\t}\n\t\t}\n\n\t\tif (!operation.resource) {\n\t\t\treturn this.reject(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET, target, operation);\n\t\t}\n\n\t\treturn this.resolveModelReference(operation.resource)\n\t\t\t.then(reference => {\n\t\t\t\tconst model = reference.object.textEditorModel;\n\n\t\t\t\tif (this.hasParseErrors(model, operation)) {\n\t\t\t\t\treference.dispose();\n\t\t\t\t\treturn this.reject<typeof reference>(ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION, target, operation);\n\t\t\t\t}\n\n\t\t\t\t// Target cannot be dirty if not writing into buffer\n\t\t\t\tif (checkDirty && operation.resource && this.textFileService.isDirty(operation.resource)) {\n\t\t\t\t\treference.dispose();\n\t\t\t\t\treturn this.reject<typeof reference>(ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY, target, operation);\n\t\t\t\t}\n\t\t\t\treturn reference;\n\t\t\t});\n\t}\n\n\tprivate getConfigurationEditOperation(target: EditableConfigurationTarget, config: IConfigurationValue, overrides: IConfigurationOverrides): IConfigurationEditOperation {\n\n\t\t// Check for standalone workspace configurations\n\t\tif (config.key) {\n\t\t\tconst standaloneConfigurationMap = target === EditableConfigurationTarget.USER_LOCAL ? USER_STANDALONE_CONFIGURATIONS : WORKSPACE_STANDALONE_CONFIGURATIONS;\n\t\t\tconst standaloneConfigurationKeys = Object.keys(standaloneConfigurationMap);\n\t\t\tfor (const key of standaloneConfigurationKeys) {\n\t\t\t\tconst resource = this.getConfigurationFileResource(target, standaloneConfigurationMap[key], overrides.resource);\n\n\t\t\t\t// Check for prefix\n\t\t\t\tif (config.key === key) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(resource) ? [key] : [];\n\t\t\t\t\treturn { key: jsonPath[jsonPath.length - 1], jsonPath, value: config.value, resource: withNullAsUndefined(resource), workspaceStandAloneConfigurationKey: key, target };\n\t\t\t\t}\n\n\t\t\t\t// Check for prefix.<setting>\n\t\t\t\tconst keyPrefix = `${key}.`;\n\t\t\t\tif (config.key.indexOf(keyPrefix) === 0) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(resource) ? [key, config.key.substr(keyPrefix.length)] : [config.key.substr(keyPrefix.length)];\n\t\t\t\t\treturn { key: jsonPath[jsonPath.length - 1], jsonPath, value: config.value, resource: withNullAsUndefined(resource), workspaceStandAloneConfigurationKey: key, target };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet key = config.key;\n\t\tlet jsonPath = overrides.overrideIdentifier ? [keyFromOverrideIdentifier(overrides.overrideIdentifier), key] : [key];\n\t\tif (target === EditableConfigurationTarget.USER_LOCAL || target === EditableConfigurationTarget.USER_REMOTE) {\n\t\t\treturn { key, jsonPath, value: config.value, resource: withNullAsUndefined(this.getConfigurationFileResource(target, '', null)), target };\n\t\t}\n\n\t\tconst resource = this.getConfigurationFileResource(target, FOLDER_SETTINGS_PATH, overrides.resource);\n\t\tif (this.isWorkspaceConfigurationResource(resource)) {\n\t\t\tjsonPath = ['settings', ...jsonPath];\n\t\t}\n\t\treturn { key, jsonPath, value: config.value, resource: withNullAsUndefined(resource), target };\n\t}\n\n\tprivate isWorkspaceConfigurationResource(resource: URI | null): boolean {\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\treturn !!(workspace.configuration && resource && workspace.configuration.fsPath === resource.fsPath);\n\t}\n\n\tprivate getConfigurationFileResource(target: EditableConfigurationTarget, relativePath: string, resource: URI | null | undefined): URI | null {\n\t\tif (target === EditableConfigurationTarget.USER_LOCAL) {\n\t\t\tif (relativePath) {\n\t\t\t\treturn this.uriIdentityService.extUri.joinPath(this.uriIdentityService.extUri.dirname(this.environmentService.settingsResource), relativePath);\n\t\t\t} else {\n\t\t\t\treturn this.environmentService.settingsResource;\n\t\t\t}\n\t\t}\n\t\tif (target === EditableConfigurationTarget.USER_REMOTE) {\n\t\t\treturn this.remoteSettingsResource;\n\t\t}\n\t\tconst workbenchState = this.contextService.getWorkbenchState();\n\t\tif (workbenchState !== WorkbenchState.EMPTY) {\n\n\t\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\t\tif (workbenchState === WorkbenchState.WORKSPACE) {\n\t\t\t\t\treturn withUndefinedAsNull(workspace.configuration);\n\t\t\t\t}\n\t\t\t\tif (workbenchState === WorkbenchState.FOLDER) {\n\t\t\t\t\treturn workspace.folders[0].toResource(relativePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\tif (resource) {\n\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(resource);\n\t\t\t\t\tif (folder) {\n\t\t\t\t\t\treturn folder.toResource(relativePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}