{"version":3,"file":"jsonEditing.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/configuration/common/jsonEditing.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,mBAAmB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAsB,oBAAoB,CAAC,CAAC;IAE9F,IAAkB,oBAWjB;IAXD,WAAkB,oBAAoB;QAErC;;WAEG;QACH,uFAAgB,CAAA;QAEhB;;WAEG;QACH,2FAAkB,CAAA;IACnB,CAAC,EAXiB,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAWrC;IAED,MAAa,gBAAiB,SAAQ,KAAK;QAC1C,YAAY,OAAe,EAAS,IAA0B;YAC7D,KAAK,CAAC,OAAO,CAAC,CAAC;YADoB,SAAI,GAAJ,IAAI,CAAsB;QAE9D,CAAC;KACD;IAJD,4CAIC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { JSONPath } from 'vs/base/common/json';\n\nexport const IJSONEditingService = createDecorator<IJSONEditingService>('jsonEditingService');\n\nexport const enum JSONEditingErrorCode {\n\n\t/**\n\t * Error when trying to write and save to the file while it is dirty in the editor.\n\t */\n\tERROR_FILE_DIRTY,\n\n\t/**\n\t * Error when trying to write to a file that contains JSON errors.\n\t */\n\tERROR_INVALID_FILE\n}\n\nexport class JSONEditingError extends Error {\n\tconstructor(message: string, public code: JSONEditingErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport interface IJSONValue {\n\tpath: JSONPath;\n\tvalue: any;\n}\n\nexport interface IJSONEditingService {\n\n\treadonly _serviceBrand: undefined;\n\n\twrite(resource: URI, values: IJSONValue[], save: boolean): Promise<void>;\n}\n"]}