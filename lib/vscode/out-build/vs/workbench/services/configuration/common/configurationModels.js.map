{"version":3,"file":"configurationModels.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/configuration/common/configurationModels.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/objects';\nimport { toValuesTree, IConfigurationModel, IConfigurationOverrides, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Configuration as BaseConfiguration, ConfigurationModelParser, ConfigurationModel, ConfigurationParseOptions } from 'vs/platform/configuration/common/configurationModels';\nimport { IStoredWorkspaceFolder } from 'vs/platform/workspaces/common/workspaces';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\n\nexport class WorkspaceConfigurationModelParser extends ConfigurationModelParser {\n\n\tprivate _folders: IStoredWorkspaceFolder[] = [];\n\tprivate _settingsModelParser: ConfigurationModelParser;\n\tprivate _launchModel: ConfigurationModel;\n\tprivate _tasksModel: ConfigurationModel;\n\n\tconstructor(name: string) {\n\t\tsuper(name);\n\t\tthis._settingsModelParser = new ConfigurationModelParser(name);\n\t\tthis._launchModel = new ConfigurationModel();\n\t\tthis._tasksModel = new ConfigurationModel();\n\t}\n\n\tget folders(): IStoredWorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tget settingsModel(): ConfigurationModel {\n\t\treturn this._settingsModelParser.configurationModel;\n\t}\n\n\tget launchModel(): ConfigurationModel {\n\t\treturn this._launchModel;\n\t}\n\n\tget tasksModel(): ConfigurationModel {\n\t\treturn this._tasksModel;\n\t}\n\n\treparseWorkspaceSettings(configurationParseOptions: ConfigurationParseOptions): void {\n\t\tthis._settingsModelParser.reparse(configurationParseOptions);\n\t}\n\n\tgetRestrictedWorkspaceSettings(): string[] {\n\t\treturn this._settingsModelParser.restrictedConfigurations;\n\t}\n\n\tprotected override doParseRaw(raw: any, configurationParseOptions?: ConfigurationParseOptions): IConfigurationModel {\n\t\tthis._folders = (raw['folders'] || []) as IStoredWorkspaceFolder[];\n\t\tthis._settingsModelParser.parseRaw(raw['settings'], configurationParseOptions);\n\t\tthis._launchModel = this.createConfigurationModelFrom(raw, 'launch');\n\t\tthis._tasksModel = this.createConfigurationModelFrom(raw, 'tasks');\n\t\treturn super.doParseRaw(raw, configurationParseOptions);\n\t}\n\n\tprivate createConfigurationModelFrom(raw: any, key: string): ConfigurationModel {\n\t\tconst data = raw[key];\n\t\tif (data) {\n\t\t\tconst contents = toValuesTree(data, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\t\tconst scopedContents = Object.create(null);\n\t\t\tscopedContents[key] = contents;\n\t\t\tconst keys = Object.keys(data).map(k => `${key}.${k}`);\n\t\t\treturn new ConfigurationModel(scopedContents, keys, []);\n\t\t}\n\t\treturn new ConfigurationModel();\n\t}\n}\n\nexport class StandaloneConfigurationModelParser extends ConfigurationModelParser {\n\n\tconstructor(name: string, private readonly scope: string) {\n\t\tsuper(name);\n\t}\n\n\tprotected override doParseRaw(raw: any, configurationParseOptions?: ConfigurationParseOptions): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst scopedContents = Object.create(null);\n\t\tscopedContents[this.scope] = contents;\n\t\tconst keys = Object.keys(raw).map(key => `${this.scope}.${key}`);\n\t\treturn { contents: scopedContents, keys, overrides: [] };\n\t}\n\n}\n\nexport class Configuration extends BaseConfiguration {\n\n\tconstructor(\n\t\tdefaults: ConfigurationModel,\n\t\tlocalUser: ConfigurationModel,\n\t\tremoteUser: ConfigurationModel,\n\t\tworkspaceConfiguration: ConfigurationModel,\n\t\tfolders: ResourceMap<ConfigurationModel>,\n\t\tmemoryConfiguration: ConfigurationModel,\n\t\tmemoryConfigurationByResource: ResourceMap<ConfigurationModel>,\n\t\tprivate readonly _workspace?: Workspace) {\n\t\tsuper(defaults, localUser, remoteUser, workspaceConfiguration, folders, memoryConfiguration, memoryConfigurationByResource);\n\t}\n\n\toverride getValue(key: string | undefined, overrides: IConfigurationOverrides = {}): any {\n\t\treturn super.getValue(key, overrides, this._workspace);\n\t}\n\n\toverride inspect<C>(key: string, overrides: IConfigurationOverrides = {}): IConfigurationValue<C> {\n\t\treturn super.inspect(key, overrides, this._workspace);\n\t}\n\n\toverride keys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn super.keys(this._workspace);\n\t}\n\n\toverride compareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tif (this._workspace && this._workspace.folders.length > 0 && this._workspace.folders[0].uri.toString() === folder.toString()) {\n\t\t\t// Do not remove workspace configuration\n\t\t\treturn { keys: [], overrides: [] };\n\t\t}\n\t\treturn super.compareAndDeleteFolderConfiguration(folder);\n\t}\n\n\tcompare(other: Configuration): IConfigurationChange {\n\t\tconst compare = (fromKeys: string[], toKeys: string[], overrideIdentifier?: string): string[] => {\n\t\t\tconst keys: string[] = [];\n\t\t\tkeys.push(...toKeys.filter(key => fromKeys.indexOf(key) === -1));\n\t\t\tkeys.push(...fromKeys.filter(key => toKeys.indexOf(key) === -1));\n\t\t\tkeys.push(...fromKeys.filter(key => {\n\t\t\t\t// Ignore if the key does not exist in both models\n\t\t\t\tif (toKeys.indexOf(key) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Compare workspace value\n\t\t\t\tif (!equals(this.getValue(key, { overrideIdentifier }), other.getValue(key, { overrideIdentifier }))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// Compare workspace folder value\n\t\t\t\treturn this._workspace && this._workspace.folders.some(folder => !equals(this.getValue(key, { resource: folder.uri, overrideIdentifier }), other.getValue(key, { resource: folder.uri, overrideIdentifier })));\n\t\t\t}));\n\t\t\treturn keys;\n\t\t};\n\t\tconst keys = compare(this.allKeys(), other.allKeys());\n\t\tconst overrides: [string, string[]][] = [];\n\t\tfor (const key of keys) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\toverrides.push([overrideIdentifier, compare(this.getAllKeysForOverrideIdentifier(overrideIdentifier), other.getAllKeysForOverrideIdentifier(overrideIdentifier), overrideIdentifier)]);\n\t\t\t}\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n}\n"]}