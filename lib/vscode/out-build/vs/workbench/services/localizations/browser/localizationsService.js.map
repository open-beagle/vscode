{"version":3,"file":"localizationsService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/services/localizations/browser/localizationsService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,iDAAiD;IACjD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;QAIhC,YACsB,kBAAuC;YAE5D,OAAO,kBAAY,CAAC,SAAS,CAAwB,kBAAkB,CAAC,aAAa,EAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;QACvH,CAAC;KACD,CAAA;IATY,oBAAoB;QAK9B,WAAA,wCAAmB,CAAA;OALT,oBAAoB,CAShC;IATY,oDAAoB;IAWjC,CAAA,GAAA,8BAAiB,CAAA,CAAC,qCAAqB,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Coder Technologies. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\n// @ts-ignore: interface is implemented via proxy\nexport class LocalizationsService implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t) {\n\t\treturn ProxyChannel.toService<ILocalizationsService>(remoteAgentService.getConnection()!.getChannel('localizations'));\n\t}\n}\n\nregisterSingleton(ILocalizationsService, LocalizationsService, true);\n"]}