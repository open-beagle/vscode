{"version":3,"sources":["vs/workbench/common/resources.ts"],"names":[],"mappings":"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","file":"resources.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { deepClone, equals } from 'vs/base/common/objects';\nimport { Emitter } from 'vs/base/common/event';\nimport { basename, dirname, extname, relativePath } from 'vs/base/common/resources';\nimport { RawContextKey, IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class ResourceContextKey extends Disposable implements IContextKey<URI> {\n\n\t// NOTE: DO NOT CHANGE THE DEFAULT VALUE TO ANYTHING BUT\n\t// UNDEFINED! IT IS IMPORTANT THAT DEFAULTS ARE INHERITED\n\t// FROM THE PARENT CONTEXT AND ONLY UNDEFINED DOES THIS\n\n\tstatic readonly Scheme = new RawContextKey<string>('resourceScheme', undefined, { type: 'string', description: localize('resourceScheme', \"The scheme of the rsource\") });\n\tstatic readonly Filename = new RawContextKey<string>('resourceFilename', undefined, { type: 'string', description: localize('resourceFilename', \"The file name of the resource\") });\n\tstatic readonly Dirname = new RawContextKey<string>('resourceDirname', undefined, { type: 'string', description: localize('resourceDirname', \"The folder name the resource is contained in\") });\n\tstatic readonly Path = new RawContextKey<string>('resourcePath', undefined, { type: 'string', description: localize('resourcePath', \"The full path of the resource\") });\n\tstatic readonly LangId = new RawContextKey<string>('resourceLangId', undefined, { type: 'string', description: localize('resourceLangId', \"The language identifier of the resource\") });\n\tstatic readonly Resource = new RawContextKey<URI>('resource', undefined, { type: 'URI', description: localize('resource', \"The full value of the resource including scheme and path\") });\n\tstatic readonly Extension = new RawContextKey<string>('resourceExtname', undefined, { type: 'string', description: localize('resourceExtname', \"The extension name of the resource\") });\n\tstatic readonly HasResource = new RawContextKey<boolean>('resourceSet', undefined, { type: 'boolean', description: localize('resourceSet', \"Whether a resource is present or not\") });\n\tstatic readonly IsFileSystemResource = new RawContextKey<boolean>('isFileSystemResource', undefined, { type: 'boolean', description: localize('isFileSystemResource', \"Whether the resource is backed by a file system provider\") });\n\n\tprivate readonly _resourceKey: IContextKey<URI | null>;\n\tprivate readonly _schemeKey: IContextKey<string | null>;\n\tprivate readonly _filenameKey: IContextKey<string | null>;\n\tprivate readonly _dirnameKey: IContextKey<string | null>;\n\tprivate readonly _pathKey: IContextKey<string | null>;\n\tprivate readonly _langIdKey: IContextKey<string | null>;\n\tprivate readonly _extensionKey: IContextKey<string | null>;\n\tprivate readonly _hasResource: IContextKey<boolean>;\n\tprivate readonly _isFileSystemResource: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IModeService private readonly _modeService: IModeService\n\t) {\n\t\tsuper();\n\n\t\tthis._schemeKey = ResourceContextKey.Scheme.bindTo(this._contextKeyService);\n\t\tthis._filenameKey = ResourceContextKey.Filename.bindTo(this._contextKeyService);\n\t\tthis._dirnameKey = ResourceContextKey.Dirname.bindTo(this._contextKeyService);\n\t\tthis._pathKey = ResourceContextKey.Path.bindTo(this._contextKeyService);\n\t\tthis._langIdKey = ResourceContextKey.LangId.bindTo(this._contextKeyService);\n\t\tthis._resourceKey = ResourceContextKey.Resource.bindTo(this._contextKeyService);\n\t\tthis._extensionKey = ResourceContextKey.Extension.bindTo(this._contextKeyService);\n\t\tthis._hasResource = ResourceContextKey.HasResource.bindTo(this._contextKeyService);\n\t\tthis._isFileSystemResource = ResourceContextKey.IsFileSystemResource.bindTo(this._contextKeyService);\n\n\t\tthis._register(_fileService.onDidChangeFileSystemProviderRegistrations(() => {\n\t\t\tconst resource = this._resourceKey.get();\n\t\t\tthis._isFileSystemResource.set(Boolean(resource && _fileService.canHandleResource(resource)));\n\t\t}));\n\n\t\tthis._register(_modeService.onDidCreateMode(() => {\n\t\t\tconst value = this._resourceKey.get();\n\t\t\tthis._langIdKey.set(value ? this._modeService.getModeIdByFilepathOrFirstLine(value) : null);\n\t\t}));\n\t}\n\n\tset(value: URI | null) {\n\t\tif (!ResourceContextKey._uriEquals(this._resourceKey.get(), value)) {\n\t\t\tthis._contextKeyService.bufferChangeEvents(() => {\n\t\t\t\tthis._resourceKey.set(value);\n\t\t\t\t// NOTE@coder: Fixes source control context menus (#1104).\n\t\t\t\tthis._schemeKey.set(value ? (value.scheme === Schemas.vscodeRemote ? Schemas.file : value.scheme) : null);\n\t\t\t\tthis._filenameKey.set(value ? basename(value) : null);\n\t\t\t\tthis._dirnameKey.set(value ? dirname(value).fsPath : null);\n\t\t\t\tthis._pathKey.set(value ? value.fsPath : null);\n\t\t\t\tthis._langIdKey.set(value ? this._modeService.getModeIdByFilepathOrFirstLine(value) : null);\n\t\t\t\tthis._extensionKey.set(value ? extname(value) : null);\n\t\t\t\tthis._hasResource.set(!!value);\n\t\t\t\tthis._isFileSystemResource.set(value ? this._fileService.canHandleResource(value) : false);\n\t\t\t});\n\t\t}\n\t}\n\n\treset(): void {\n\t\tthis._contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._resourceKey.reset();\n\t\t\tthis._schemeKey.reset();\n\t\t\tthis._filenameKey.reset();\n\t\t\tthis._dirnameKey.reset();\n\t\t\tthis._pathKey.reset();\n\t\t\tthis._langIdKey.reset();\n\t\t\tthis._extensionKey.reset();\n\t\t\tthis._hasResource.reset();\n\t\t\tthis._isFileSystemResource.reset();\n\t\t});\n\t}\n\n\tget(): URI | undefined {\n\t\treturn withNullAsUndefined(this._resourceKey.get());\n\t}\n\n\tprivate static _uriEquals(a: URI | undefined | null, b: URI | undefined | null): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.scheme === b.scheme // checks for not equals (fail fast)\n\t\t\t&& a.authority === b.authority\n\t\t\t&& a.path === b.path\n\t\t\t&& a.query === b.query\n\t\t\t&& a.fragment === b.fragment\n\t\t\t&& a.toString() === b.toString(); // for equal we use the normalized toString-form\n\t}\n}\n\nexport class ResourceGlobMatcher extends Disposable {\n\n\tprivate static readonly NO_ROOT: string | null = null;\n\n\tprivate readonly _onExpressionChange = this._register(new Emitter<void>());\n\treadonly onExpressionChange = this._onExpressionChange.event;\n\n\tprivate readonly mapRootToParsedExpression = new Map<string | null, ParsedExpression>();\n\tprivate readonly mapRootToExpressionConfig = new Map<string | null, IExpression>();\n\n\tconstructor(\n\t\tprivate globFn: (root?: URI) => IExpression,\n\t\tprivate shouldUpdate: (event: IConfigurationChangeEvent) => boolean,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateExcludes(false);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (this.shouldUpdate(e)) {\n\t\t\t\tthis.updateExcludes(true);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.updateExcludes(true)));\n\t}\n\n\tprivate updateExcludes(fromEvent: boolean): void {\n\t\tlet changed = false;\n\n\t\t// Add excludes per workspaces that got added\n\t\tthis.contextService.getWorkspace().folders.forEach(folder => {\n\t\t\tconst rootExcludes = this.globFn(folder.uri);\n\t\t\tif (!this.mapRootToExpressionConfig.has(folder.uri.toString()) || !equals(this.mapRootToExpressionConfig.get(folder.uri.toString()), rootExcludes)) {\n\t\t\t\tchanged = true;\n\n\t\t\t\tthis.mapRootToParsedExpression.set(folder.uri.toString(), parse(rootExcludes));\n\t\t\t\tthis.mapRootToExpressionConfig.set(folder.uri.toString(), deepClone(rootExcludes));\n\t\t\t}\n\t\t});\n\n\t\t// Remove excludes per workspace no longer present\n\t\tthis.mapRootToExpressionConfig.forEach((value, root) => {\n\t\t\tif (root === ResourceGlobMatcher.NO_ROOT) {\n\t\t\t\treturn; // always keep this one\n\t\t\t}\n\n\t\t\tif (root && !this.contextService.getWorkspaceFolder(URI.parse(root))) {\n\t\t\t\tthis.mapRootToParsedExpression.delete(root);\n\t\t\t\tthis.mapRootToExpressionConfig.delete(root);\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\n\t\t// Always set for resources outside root as well\n\t\tconst globalExcludes = this.globFn();\n\t\tif (!this.mapRootToExpressionConfig.has(ResourceGlobMatcher.NO_ROOT) || !equals(this.mapRootToExpressionConfig.get(ResourceGlobMatcher.NO_ROOT), globalExcludes)) {\n\t\t\tchanged = true;\n\n\t\t\tthis.mapRootToParsedExpression.set(ResourceGlobMatcher.NO_ROOT, parse(globalExcludes));\n\t\t\tthis.mapRootToExpressionConfig.set(ResourceGlobMatcher.NO_ROOT, deepClone(globalExcludes));\n\t\t}\n\n\t\tif (fromEvent && changed) {\n\t\t\tthis._onExpressionChange.fire();\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst folder = this.contextService.getWorkspaceFolder(resource);\n\n\t\tlet expressionForRoot: ParsedExpression | undefined;\n\t\tif (folder && this.mapRootToParsedExpression.has(folder.uri.toString())) {\n\t\t\texpressionForRoot = this.mapRootToParsedExpression.get(folder.uri.toString());\n\t\t} else {\n\t\t\texpressionForRoot = this.mapRootToParsedExpression.get(ResourceGlobMatcher.NO_ROOT);\n\t\t}\n\n\t\t// If the resource if from a workspace, convert its absolute path to a relative\n\t\t// path so that glob patterns have a higher probability to match. For example\n\t\t// a glob pattern of \"src/**\" will not match on an absolute path \"/folder/src/file.txt\"\n\t\t// but can match on \"src/file.txt\"\n\t\tlet resourcePathToMatch: string | undefined;\n\t\tif (folder) {\n\t\t\tresourcePathToMatch = relativePath(folder.uri, resource); // always uses forward slashes\n\t\t} else {\n\t\t\tresourcePathToMatch = resource.fsPath; // TODO@isidor: support non-file URIs\n\t\t}\n\n\t\treturn !!expressionForRoot && typeof resourcePathToMatch === 'string' && !!expressionForRoot(resourcePathToMatch);\n\t}\n}\n"]}