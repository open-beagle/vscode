{"version":3,"sources":["vs/workbench/common/panel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,kBAAkB,GAAG,IAAI,0BAAa,CAAS,aAAa,EAAE,EAAE,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAa,EAAE,IAAoC,CAAC,CAAC,CAAC;IACjI,QAAA,iBAAiB,GAAG,IAAI,0BAAa,CAAU,YAAY,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAY,EAAE,IAAsC,CAAC,CAAC,CAAC;IACpI,QAAA,oBAAoB,GAAG,IAAI,0BAAa,CAAS,eAAe,EAAE,QAAQ,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAe,EAAE,IAA+D,CAAC,CAAC,CAAC;IACxK,QAAA,mBAAmB,GAAG,IAAI,0BAAa,CAAU,cAAc,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAc,EAAE,IAA8B,CAAC,CAAC,CAAC;IAClI,QAAA,qBAAqB,GAAG,IAAI,0BAAa,CAAU,gBAAgB,EAAE,KAAK,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAgB,EAAE,IAAgC,CAAC,CAAC,CAAC","file":"panel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IComposite } from 'vs/workbench/common/composite';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const ActivePanelContext = new RawContextKey<string>('activePanel', '', localize('activePanel', \"The identifier of the active panel\"));\nexport const PanelFocusContext = new RawContextKey<boolean>('panelFocus', false, localize('panelFocus', \"Whether the panel has keyboard focus\"));\nexport const PanelPositionContext = new RawContextKey<string>('panelPosition', 'bottom', localize('panelPosition', \"The position of the panel, either 'left', 'right' or 'bottom'\"));\nexport const PanelVisibleContext = new RawContextKey<boolean>('panelVisible', false, localize('panelVisible', \"Whether the panel is visible\"));\nexport const PanelMaximizedContext = new RawContextKey<boolean>('panelMaximized', false, localize('panelMaximized', \"Whether the panel is maximized\"));\n\nexport interface IPanel extends IComposite { }\n"]}