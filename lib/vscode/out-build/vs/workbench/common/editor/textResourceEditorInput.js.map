{"version":3,"file":"textResourceEditorInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/common/editor/textResourceEditorInput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorInput, Verbosity, GroupIdentifier, IEditorInput, IRevertOptions, IEditorInputWithPreferredResource } from 'vs/workbench/common/editor';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextFileService, ITextFileSaveOptions } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IFileService, FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IFilesConfigurationService, AutoSaveMode } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { Schemas } from 'vs/base/common/network';\nimport { dirname, isEqual } from 'vs/base/common/resources';\n\n/**\n * The base class for all editor inputs that open in text editors.\n */\nexport abstract class AbstractTextResourceEditorInput extends EditorInput implements IEditorInputWithPreferredResource {\n\n\tprivate _preferredResource: URI;\n\tget preferredResource(): URI { return this._preferredResource; }\n\n\tconstructor(\n\t\tpublic readonly resource: URI,\n\t\tpreferredResource: URI | undefined,\n\t\t@IEditorService protected readonly editorService: IEditorService,\n\t\t@IEditorGroupsService protected readonly editorGroupService: IEditorGroupsService,\n\t\t@ITextFileService protected readonly textFileService: ITextFileService,\n\t\t@ILabelService protected readonly labelService: ILabelService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IFilesConfigurationService protected readonly filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis._preferredResource = preferredResource || resource;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected registerListeners(): void {\n\n\t\t// Clear label memoizer on certain events that have impact\n\t\tthis._register(this.labelService.onDidChangeFormatters(e => this.onLabelEvent(e.scheme)));\n\t\tthis._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e => this.onLabelEvent(e.scheme)));\n\t\tthis._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e => this.onLabelEvent(e.scheme)));\n\t}\n\n\tprivate onLabelEvent(scheme: string): void {\n\t\tif (scheme === this._preferredResource.scheme) {\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate updateLabel(): void {\n\n\t\t// Clear any cached labels from before\n\t\tthis._name = undefined;\n\t\tthis._shortDescription = undefined;\n\t\tthis._mediumDescription = undefined;\n\t\tthis._longDescription = undefined;\n\t\tthis._shortTitle = undefined;\n\t\tthis._mediumTitle = undefined;\n\t\tthis._longTitle = undefined;\n\n\t\t// Trigger recompute of label\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tsetPreferredResource(preferredResource: URI): void {\n\t\tif (!isEqual(preferredResource, this._preferredResource)) {\n\t\t\tthis._preferredResource = preferredResource;\n\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate _name: string | undefined = undefined;\n\toverride getName(): string {\n\t\tif (typeof this._name !== 'string') {\n\t\t\tthis._name = this.labelService.getUriBasenameLabel(this._preferredResource);\n\t\t}\n\n\t\treturn this._name;\n\t}\n\n\toverride getDescription(verbosity: Verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.mediumDescription;\n\t\t}\n\t}\n\n\tprivate _shortDescription: string | undefined = undefined;\n\tprivate get shortDescription(): string {\n\t\tif (typeof this._shortDescription !== 'string') {\n\t\t\tthis._shortDescription = this.labelService.getUriBasenameLabel(dirname(this._preferredResource));\n\t\t}\n\n\t\treturn this._shortDescription;\n\t}\n\n\tprivate _mediumDescription: string | undefined = undefined;\n\tprivate get mediumDescription(): string {\n\t\tif (typeof this._mediumDescription !== 'string') {\n\t\t\tthis._mediumDescription = this.labelService.getUriLabel(dirname(this._preferredResource), { relative: true });\n\t\t}\n\n\t\treturn this._mediumDescription;\n\t}\n\n\tprivate _longDescription: string | undefined = undefined;\n\tprivate get longDescription(): string {\n\t\tif (typeof this._longDescription !== 'string') {\n\t\t\tthis._longDescription = this.labelService.getUriLabel(dirname(this._preferredResource));\n\t\t}\n\n\t\treturn this._longDescription;\n\t}\n\n\tprivate _shortTitle: string | undefined = undefined;\n\tprivate get shortTitle(): string {\n\t\tif (typeof this._shortTitle !== 'string') {\n\t\t\tthis._shortTitle = this.getName();\n\t\t}\n\n\t\treturn this._shortTitle;\n\t}\n\n\tprivate _mediumTitle: string | undefined = undefined;\n\tprivate get mediumTitle(): string {\n\t\tif (typeof this._mediumTitle !== 'string') {\n\t\t\tthis._mediumTitle = this.labelService.getUriLabel(this._preferredResource, { relative: true });\n\t\t}\n\n\t\treturn this._mediumTitle;\n\t}\n\n\tprivate _longTitle: string | undefined = undefined;\n\tprivate get longTitle(): string {\n\t\tif (typeof this._longTitle !== 'string') {\n\t\t\tthis._longTitle = this.labelService.getUriLabel(this._preferredResource);\n\t\t}\n\n\t\treturn this._longTitle;\n\t}\n\n\toverride getTitle(verbosity: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.mediumTitle;\n\t\t}\n\t}\n\n\toverride isUntitled(): boolean {\n\t\t//  any file: is never untitled as it can be saved\n\t\t//  untitled: is untitled by definition\n\t\t// any other: is untitled because it cannot be saved, as such we expect a \"Save As\" dialog\n\t\treturn !this.fileService.canHandleResource(this.resource);\n\t}\n\n\toverride isReadonly(): boolean {\n\t\tif (this.isUntitled()) {\n\t\t\treturn false; // untitled is never readonly\n\t\t}\n\n\t\treturn this.fileService.hasCapability(this.resource, FileSystemProviderCapabilities.Readonly);\n\t}\n\n\toverride isSaving(): boolean {\n\t\tif (this.isUntitled()) {\n\t\t\treturn false; // untitled is never saving automatically\n\t\t}\n\n\t\tif (this.filesConfigurationService.getAutoSaveMode() === AutoSaveMode.AFTER_SHORT_DELAY) {\n\t\t\treturn true; // a short auto save is configured, treat this as being saved\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride save(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<IEditorInput | undefined> {\n\n\t\t// If this is neither an `untitled` resource, nor a resource\n\t\t// we can handle with the file service, we can only \"Save As...\"\n\t\tif (this.resource.scheme !== Schemas.untitled && !this.fileService.canHandleResource(this.resource)) {\n\t\t\treturn this.saveAs(group, options);\n\t\t}\n\n\t\t// Normal save\n\t\treturn this.doSave(options, false);\n\t}\n\n\toverride saveAs(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.doSave(options, true);\n\t}\n\n\tprivate async doSave(options: ITextFileSaveOptions | undefined, saveAs: boolean): Promise<IEditorInput | undefined> {\n\n\t\t// Save / Save As\n\t\tlet target: URI | undefined;\n\t\tif (saveAs) {\n\t\t\ttarget = await this.textFileService.saveAs(this.resource, undefined, { ...options, suggestedTarget: this.preferredResource });\n\t\t} else {\n\t\t\ttarget = await this.textFileService.save(this.resource, options);\n\t\t}\n\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\t// If this save operation results in a new editor, either\n\t\t// because it was saved to disk (e.g. from untitled) or\n\t\t// through an explicit \"Save As\", make sure to replace it.\n\t\tif (\n\t\t\ttarget.scheme !== this.resource.scheme ||\n\t\t\t(saveAs && !isEqual(target, this.preferredResource))\n\t\t) {\n\t\t\treturn this.editorService.createEditorInput({ resource: target });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tawait this.textFileService.revert(this.resource, options);\n\t}\n}\n"]}