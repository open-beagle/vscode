{"version":3,"file":"resourceEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/common/editor/resourceEditorModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG;;OAEG;IACH,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,qCAAmB;QAE3D,YACC,QAAa,EACC,WAAyB,EACxB,YAA2B;YAE1C,KAAK,CAAC,YAAY,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC5C,CAAC;QAEQ,OAAO;YAEf,mDAAmD;YACnD,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC3D;YAED,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IAnBY,mBAAmB;QAI7B,WAAA,0BAAY,CAAA;QACZ,WAAA,4BAAa,CAAA;OALH,mBAAmB,CAmB/B;IAnBY,kDAAmB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BaseTextEditorModel } from 'vs/workbench/common/editor/textEditorModel';\nimport { URI } from 'vs/base/common/uri';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\n/**\n * An editor model for in-memory, readonly content that is backed by an existing editor model.\n */\nexport class ResourceEditorModel extends BaseTextEditorModel {\n\n\tconstructor(\n\t\tresource: URI,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService\n\t) {\n\t\tsuper(modelService, modeService, resource);\n\t}\n\n\toverride dispose(): void {\n\n\t\t// force this class to dispose the underlying model\n\t\tif (this.textEditorModelHandle) {\n\t\t\tthis.modelService.destroyModel(this.textEditorModelHandle);\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n"]}