{"version":3,"file":"textDiffEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/common/editor/textDiffEditorModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG;;;OAGG;IACH,MAAa,mBAAoB,SAAQ,iCAAe;QAWvD,YAAY,aAAkC,EAAE,aAAkC;YACjF,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAJ7B,yBAAoB,GAAiC,SAAS,CAAC;YAMtE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YAEpC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAClC,CAAC;QAfD,IAAa,aAAa,KAAsC,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAG7F,IAAa,aAAa,KAAsC,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAG7F,IAAI,mBAAmB,KAAmC,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAWpF,KAAK,CAAC,OAAO;YACrB,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAClC,CAAC;QAEO,yBAAyB;;YAChC,IAAI,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,MAAI,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAA,EAAE;gBAEzE,aAAa;gBACb,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC/B,IAAI,CAAC,oBAAoB,GAAG;wBAC3B,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;wBAC5C,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;qBAC5C,CAAC;iBACF;gBAED,kBAAkB;qBACb;oBACJ,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;oBACxE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;iBACxE;aACD;QACF,CAAC;QAEQ,UAAU;YAClB,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;QACpC,CAAC;QAED,UAAU;YACT,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChE,CAAC;QAEQ,OAAO;YAEf,uFAAuF;YACvF,wFAAwF;YACxF,0FAA0F;YAC1F,gDAAgD;YAChD,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;YAEtC,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IA/DD,kDA+DC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffEditorModel } from 'vs/editor/common/editorCommon';\nimport { BaseTextEditorModel } from 'vs/workbench/common/editor/textEditorModel';\nimport { DiffEditorModel } from 'vs/workbench/common/editor/diffEditorModel';\n\n/**\n * The base text editor model for the diff editor. It is made up of two text editor models, the original version\n * and the modified version.\n */\nexport class TextDiffEditorModel extends DiffEditorModel {\n\n\tprotected override readonly _originalModel: BaseTextEditorModel | undefined;\n\toverride get originalModel(): BaseTextEditorModel | undefined { return this._originalModel; }\n\n\tprotected override readonly _modifiedModel: BaseTextEditorModel | undefined;\n\toverride get modifiedModel(): BaseTextEditorModel | undefined { return this._modifiedModel; }\n\n\tprivate _textDiffEditorModel: IDiffEditorModel | undefined = undefined;\n\tget textDiffEditorModel(): IDiffEditorModel | undefined { return this._textDiffEditorModel; }\n\n\tconstructor(originalModel: BaseTextEditorModel, modifiedModel: BaseTextEditorModel) {\n\t\tsuper(originalModel, modifiedModel);\n\n\t\tthis._originalModel = originalModel;\n\t\tthis._modifiedModel = modifiedModel;\n\n\t\tthis.updateTextDiffEditorModel();\n\t}\n\n\toverride async resolve(): Promise<void> {\n\t\tawait super.resolve();\n\n\t\tthis.updateTextDiffEditorModel();\n\t}\n\n\tprivate updateTextDiffEditorModel(): void {\n\t\tif (this.originalModel?.isResolved() && this.modifiedModel?.isResolved()) {\n\n\t\t\t// Create new\n\t\t\tif (!this._textDiffEditorModel) {\n\t\t\t\tthis._textDiffEditorModel = {\n\t\t\t\t\toriginal: this.originalModel.textEditorModel,\n\t\t\t\t\tmodified: this.modifiedModel.textEditorModel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Update existing\n\t\t\telse {\n\t\t\t\tthis._textDiffEditorModel.original = this.originalModel.textEditorModel;\n\t\t\t\tthis._textDiffEditorModel.modified = this.modifiedModel.textEditorModel;\n\t\t\t}\n\t\t}\n\t}\n\n\toverride isResolved(): boolean {\n\t\treturn !!this._textDiffEditorModel;\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn !!this.modifiedModel && this.modifiedModel.isReadonly();\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Free the diff editor model but do not propagate the dispose() call to the two models\n\t\t// inside. We never created the two models (original and modified) so we can not dispose\n\t\t// them without sideeffects. Rather rely on the models getting disposed when their related\n\t\t// inputs get disposed from the diffEditorInput.\n\t\tthis._textDiffEditorModel = undefined;\n\n\t\tsuper.dispose();\n\t}\n}\n"]}