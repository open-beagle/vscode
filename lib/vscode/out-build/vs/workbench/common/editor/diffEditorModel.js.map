{"version":3,"file":"diffEditorModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/workbench/common/editor/diffEditorModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG;;;OAGG;IACH,MAAa,eAAgB,SAAQ,oBAAW;QAQ/C,YAAY,aAAuC,EAAE,aAAuC;YAC3F,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACrC,CAAC;QAVD,IAAI,aAAa,KAA+B,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAG7E,IAAI,aAAa,KAA+B,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QASpE,KAAK,CAAC,OAAO;;YACrB,MAAM,OAAO,CAAC,GAAG,CAAC;gBACjB,MAAA,IAAI,CAAC,cAAc,0CAAE,OAAO,EAAE;gBAC9B,MAAA,IAAI,CAAC,cAAc,0CAAE,OAAO,EAAE;aAC9B,CAAC,CAAC;QACJ,CAAC;QAEQ,UAAU;;YAClB,OAAO,CAAC,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,MAAI,MAAA,IAAI,CAAC,aAAa,0CAAE,UAAU,EAAE,CAAA,CAAC,CAAC;QACjF,CAAC;QAEQ,OAAO;YAEf,gGAAgG;YAChG,6FAA6F;YAC7F,2FAA2F;YAE3F,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IAlCD,0CAkCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorModel } from 'vs/workbench/common/editor';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\n\n/**\n * The base editor model for the diff editor. It is made up of two editor models, the original version\n * and the modified version.\n */\nexport class DiffEditorModel extends EditorModel {\n\n\tprotected readonly _originalModel: IEditorModel | undefined;\n\tget originalModel(): IEditorModel | undefined { return this._originalModel; }\n\n\tprotected readonly _modifiedModel: IEditorModel | undefined;\n\tget modifiedModel(): IEditorModel | undefined { return this._modifiedModel; }\n\n\tconstructor(originalModel: IEditorModel | undefined, modifiedModel: IEditorModel | undefined) {\n\t\tsuper();\n\n\t\tthis._originalModel = originalModel;\n\t\tthis._modifiedModel = modifiedModel;\n\t}\n\n\toverride async resolve(): Promise<void> {\n\t\tawait Promise.all([\n\t\t\tthis._originalModel?.resolve(),\n\t\t\tthis._modifiedModel?.resolve()\n\t\t]);\n\t}\n\n\toverride isResolved(): boolean {\n\t\treturn !!(this.originalModel?.isResolved() && this.modifiedModel?.isResolved());\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Do not propagate the dispose() call to the two models inside. We never created the two models\n\t\t// (original and modified) so we can not dispose them without sideeffects. Rather rely on the\n\t\t// models getting disposed when their related inputs get disposed from the diffEditorInput.\n\n\t\tsuper.dispose();\n\t}\n}\n"]}