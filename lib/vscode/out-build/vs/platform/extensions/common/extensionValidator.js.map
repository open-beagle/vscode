{"version":3,"sources":["vs/platform/extensions/common/extensionValidator.ts"],"names":[],"mappings":"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","file":"extensionValidator.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"]}