{"version":3,"sources":["vs/platform/windows/electron-main/window.ts"],"names":[],"mappings":"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","file":"window.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { getMarks, mark } from 'vs/base/common/performance';\nimport { Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { screen, BrowserWindow, systemPreferences, app, TouchBar, nativeImage, Rectangle, Display, TouchBarSegmentedControl, NativeImage, BrowserWindowConstructorOptions, SegmentedControlSegment, Event, RenderProcessGoneDetails, WebFrameMain } from 'electron';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { WindowMinimumSize, IWindowSettings, MenuBarVisibility, getTitleBarStyle, getMenuBarVisibility, zoomLevelToZoomFactor, INativeWindowConfiguration } from 'vs/platform/windows/common/windows';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { browserCodeLoadingCacheStrategy, isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { defaultWindowState, ICodeWindow, ILoadEvent, IWindowState, WindowError, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { resolveMarketplaceHeaders } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { IStorageMainService } from 'vs/platform/storage/electron-main/storageMainService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\n\nexport interface IWindowCreationOptions {\n\tstate: IWindowState;\n\textensionDevelopmentPath?: string[];\n\tisExtensionTestHost?: boolean;\n}\n\ninterface ITouchBarSegment extends SegmentedControlSegment {\n\tid: string;\n}\n\ninterface ILoadOptions {\n\tisReload?: boolean;\n\tdisableExtensions?: boolean;\n}\n\nconst enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport class CodeWindow extends Disposable implements ICodeWindow {\n\n\t//#region Events\n\n\tprivate readonly _onWillLoad = this._register(new Emitter<ILoadEvent>());\n\treadonly onWillLoad = this._onWillLoad.event;\n\n\tprivate readonly _onDidSignalReady = this._register(new Emitter<void>());\n\treadonly onDidSignalReady = this._onDidSignalReady.event;\n\n\tprivate readonly _onDidClose = this._register(new Emitter<void>());\n\treadonly onDidClose = this._onDidClose.event;\n\n\tprivate readonly _onDidDestroy = this._register(new Emitter<void>());\n\treadonly onDidDestroy = this._onDidDestroy.event;\n\n\t//#endregion\n\n\tprivate hiddenTitleBarStyle: boolean | undefined;\n\tprivate showTimeoutHandle: NodeJS.Timeout | undefined;\n\tprivate windowState: IWindowState;\n\tprivate currentMenuBarVisibility: MenuBarVisibility | undefined;\n\n\tprivate representedFilename: string | undefined;\n\tprivate documentEdited: boolean | undefined;\n\n\tprivate readonly whenReadyCallbacks: { (window: ICodeWindow): void }[] = [];\n\n\tprivate marketplaceHeadersPromise: Promise<object>;\n\n\tprivate readonly touchBarGroups: TouchBarSegmentedControl[] = [];\n\n\tprivate currentHttpProxy: string | undefined = undefined;\n\tprivate currentNoProxy: string | undefined = undefined;\n\n\tprivate _id: number;\n\tget id(): number { return this._id; }\n\n\tprivate _win: BrowserWindow;\n\tget win(): BrowserWindow | null { return this._win; }\n\n\tprivate _lastFocusTime = -1;\n\tget lastFocusTime(): number { return this._lastFocusTime; }\n\n\tget backupPath(): string | undefined { return this.currentConfig?.backupPath; }\n\n\tget openedWorkspace(): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined { return this.currentConfig?.workspace; }\n\n\tget remoteAuthority(): string | undefined { return this.currentConfig?.remoteAuthority; }\n\n\tprivate pendingLoadConfig: INativeWindowConfiguration | undefined;\n\n\tprivate currentConfig: INativeWindowConfiguration | undefined;\n\tget config(): INativeWindowConfiguration | undefined { return this.currentConfig; }\n\n\tprivate readonly configObjectUrl = this._register(this.protocolMainService.createIPCObjectUrl<INativeWindowConfiguration>());\n\n\tget hasHiddenTitleBarStyle(): boolean { return !!this.hiddenTitleBarStyle; }\n\n\tget isExtensionDevelopmentHost(): boolean { return !!(this.currentConfig?.extensionDevelopmentPath); }\n\n\tget isExtensionTestHost(): boolean { return !!(this.currentConfig?.extensionTestsPath); }\n\n\tget isExtensionDevelopmentTestFromCli(): boolean { return this.isExtensionDevelopmentHost && this.isExtensionTestHost && !this.currentConfig?.debugId; }\n\n\tconstructor(\n\t\tconfig: IWindowCreationOptions,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IStorageMainService storageMainService: IStorageMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService\n\t) {\n\t\tsuper();\n\n\t\t//#region create browser window\n\t\t{\n\t\t\t// Load window state\n\t\t\tconst [state, hasMultipleDisplays] = this.restoreWindowState(config.state);\n\t\t\tthis.windowState = state;\n\t\t\tthis.logService.trace('window#ctor: using window state', state);\n\n\t\t\t// in case we are maximized or fullscreen, only show later after the call to maximize/fullscreen (see below)\n\t\t\tconst isFullscreenOrMaximized = (this.windowState.mode === WindowMode.Maximized || this.windowState.mode === WindowMode.Fullscreen);\n\n\t\t\tconst windowSettings = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\n\t\t\tconst options: BrowserWindowConstructorOptions = {\n\t\t\t\twidth: this.windowState.width,\n\t\t\t\theight: this.windowState.height,\n\t\t\t\tx: this.windowState.x,\n\t\t\t\ty: this.windowState.y,\n\t\t\t\tbackgroundColor: this.themeMainService.getBackgroundColor(),\n\t\t\t\tminWidth: WindowMinimumSize.WIDTH,\n\t\t\t\tminHeight: WindowMinimumSize.HEIGHT,\n\t\t\t\tshow: !isFullscreenOrMaximized,\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\twebPreferences: {\n\t\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-browser/preload.js', require).fsPath,\n\t\t\t\t\tadditionalArguments: this.environmentMainService.sandbox ?\n\t\t\t\t\t\t[`--vscode-window-config=${this.configObjectUrl.resource.toString()}`, '--context-isolation' /* TODO@bpasero: Use process.contextIsolateed when 13-x-y is adopted (https://github.com/electron/electron/pull/28030) */] :\n\t\t\t\t\t\t[`--vscode-window-config=${this.configObjectUrl.resource.toString()}`],\n\t\t\t\t\tv8CacheOptions: browserCodeLoadingCacheStrategy,\n\t\t\t\t\tenableWebSQL: false,\n\t\t\t\t\tenableRemoteModule: false,\n\t\t\t\t\tspellcheck: false,\n\t\t\t\t\tnativeWindowOpen: true,\n\t\t\t\t\twebviewTag: true,\n\t\t\t\t\tzoomFactor: zoomLevelToZoomFactor(windowSettings?.zoomLevel),\n\t\t\t\t\t...this.environmentMainService.sandbox ?\n\n\t\t\t\t\t\t// Sandbox\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsandbox: true\n\t\t\t\t\t\t} :\n\n\t\t\t\t\t\t// No Sandbox\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnodeIntegration: true,\n\t\t\t\t\t\t\tcontextIsolation: false\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (browserCodeLoadingCacheStrategy) {\n\t\t\t\tthis.logService.info(`window#ctor: using vscode-file:// protocol and V8 cache options: ${browserCodeLoadingCacheStrategy}`);\n\t\t\t} else {\n\t\t\t\tthis.logService.trace(`window#ctor: vscode-file:// protocol is explicitly disabled`);\n\t\t\t}\n\n\t\t\t// Apply icon to window\n\t\t\t// Linux: always\n\t\t\t// Windows: only when running out of sources, otherwise an icon is set by us on the executable\n\t\t\tif (isLinux) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/linux/code.png');\n\t\t\t} else if (isWindows && !this.environmentMainService.isBuilt) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/win32/code_150x150.png');\n\t\t\t}\n\n\t\t\tif (isMacintosh && !this.useNativeFullScreen()) {\n\t\t\t\toptions.fullscreenable = false; // enables simple fullscreen mode\n\t\t\t}\n\n\t\t\tif (isMacintosh) {\n\t\t\t\toptions.acceptFirstMouse = true; // enabled by default\n\n\t\t\t\tif (windowSettings?.clickThroughInactive === false) {\n\t\t\t\t\toptions.acceptFirstMouse = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst useNativeTabs = isMacintosh && windowSettings?.nativeTabs === true;\n\t\t\tif (useNativeTabs) {\n\t\t\t\toptions.tabbingIdentifier = this.productService.nameShort; // this opts in to sierra tabs\n\t\t\t}\n\n\t\t\tconst useCustomTitleStyle = getTitleBarStyle(this.configurationService) === 'custom';\n\t\t\tif (useCustomTitleStyle) {\n\t\t\t\toptions.titleBarStyle = 'hidden';\n\t\t\t\tthis.hiddenTitleBarStyle = true;\n\t\t\t\tif (!isMacintosh) {\n\t\t\t\t\toptions.frame = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create the browser window\n\t\t\tmark('code/willCreateCodeBrowserWindow');\n\t\t\tthis._win = new BrowserWindow(options);\n\t\t\tmark('code/didCreateCodeBrowserWindow');\n\n\t\t\tthis._id = this._win.id;\n\n\t\t\t// Open devtools if instructed from command line args\n\t\t\tif (this.environmentMainService.args['open-devtools'] === true) {\n\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t}\n\n\t\t\tif (isMacintosh && useCustomTitleStyle) {\n\t\t\t\tthis._win.setSheetOffset(22); // offset dialogs by the height of the custom title bar if we have any\n\t\t\t}\n\n\t\t\t// TODO@electron (Electron 4 regression): when running on multiple displays where the target display\n\t\t\t// to open the window has a larger resolution than the primary display, the window will not size\n\t\t\t// correctly unless we set the bounds again (https://github.com/microsoft/vscode/issues/74872)\n\t\t\t//\n\t\t\t// However, when running with native tabs with multiple windows we cannot use this workaround\n\t\t\t// because there is a potential that the new window will be added as native tab instead of being\n\t\t\t// a window on its own. In that case calling setBounds() would cause https://github.com/microsoft/vscode/issues/75830\n\t\t\tif (isMacintosh && hasMultipleDisplays && (!useNativeTabs || BrowserWindow.getAllWindows().length === 1)) {\n\t\t\t\tif ([this.windowState.width, this.windowState.height, this.windowState.x, this.windowState.y].every(value => typeof value === 'number')) {\n\t\t\t\t\tconst ensuredWindowState = this.windowState as Required<IWindowState>;\n\t\t\t\t\tthis._win.setBounds({\n\t\t\t\t\t\twidth: ensuredWindowState.width,\n\t\t\t\t\t\theight: ensuredWindowState.height,\n\t\t\t\t\t\tx: ensuredWindowState.x,\n\t\t\t\t\t\ty: ensuredWindowState.y\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isFullscreenOrMaximized) {\n\t\t\t\tmark('code/willMaximizeCodeWindow');\n\t\t\t\tthis._win.maximize();\n\n\t\t\t\tif (this.windowState.mode === WindowMode.Fullscreen) {\n\t\t\t\t\tthis.setFullScreen(true);\n\t\t\t\t}\n\n\t\t\t\tif (!this._win.isVisible()) {\n\t\t\t\t\tthis._win.show(); // to reduce flicker from the default window size to maximize, we only show after maximize\n\t\t\t\t}\n\t\t\t\tmark('code/didMaximizeCodeWindow');\n\t\t\t}\n\n\t\t\tthis._lastFocusTime = Date.now(); // since we show directly, we need to set the last focus time too\n\t\t}\n\t\t//#endregion\n\n\t\t// respect configured menu bar visibility\n\t\tthis.onConfigurationUpdated();\n\n\t\t// macOS: touch bar support\n\t\tthis.createTouchBar();\n\n\t\t// Request handling\n\t\tthis.marketplaceHeadersPromise = resolveMarketplaceHeaders(this.productService.version, this.environmentMainService, this.fileService, {\n\t\t\tget: key => storageMainService.globalStorage.get(key),\n\t\t\tstore: (key, value) => storageMainService.globalStorage.set(key, value)\n\t\t});\n\n\t\t// Eventing\n\t\tthis.registerListeners();\n\t}\n\n\tsetRepresentedFilename(filename: string): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setRepresentedFilename(filename);\n\t\t} else {\n\t\t\tthis.representedFilename = filename;\n\t\t}\n\t}\n\n\tgetRepresentedFilename(): string | undefined {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.getRepresentedFilename();\n\t\t}\n\n\t\treturn this.representedFilename;\n\t}\n\n\tsetDocumentEdited(edited: boolean): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setDocumentEdited(edited);\n\t\t}\n\n\t\tthis.documentEdited = edited;\n\t}\n\n\tisDocumentEdited(): boolean {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.isDocumentEdited();\n\t\t}\n\n\t\treturn !!this.documentEdited;\n\t}\n\n\tfocus(options?: { force: boolean }): void {\n\t\t// macOS: Electron > 7.x changed its behaviour to not\n\t\t// bring the application to the foreground when a window\n\t\t// is focused programmatically. Only via `app.focus` and\n\t\t// the option `steal: true` can you get the previous\n\t\t// behaviour back. The only reason to use this option is\n\t\t// when a window is getting focused while the application\n\t\t// is not in the foreground.\n\t\tif (isMacintosh && options?.force) {\n\t\t\tapp.focus({ steal: true });\n\t\t}\n\n\t\tif (!this._win) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._win.isMinimized()) {\n\t\t\tthis._win.restore();\n\t\t}\n\n\t\tthis._win.focus();\n\t}\n\n\tprivate readyState = ReadyState.NONE;\n\n\tsetReady(): void {\n\t\tthis.readyState = ReadyState.READY;\n\n\t\t// inform all waiting promises that we are ready now\n\t\twhile (this.whenReadyCallbacks.length) {\n\t\t\tthis.whenReadyCallbacks.pop()!(this);\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidSignalReady.fire();\n\t}\n\n\tready(): Promise<ICodeWindow> {\n\t\treturn new Promise<ICodeWindow>(resolve => {\n\t\t\tif (this.isReady) {\n\t\t\t\treturn resolve(this);\n\t\t\t}\n\n\t\t\t// otherwise keep and call later when we are ready\n\t\t\tthis.whenReadyCallbacks.push(resolve);\n\t\t});\n\t}\n\n\tget isReady(): boolean {\n\t\treturn this.readyState === ReadyState.READY;\n\t}\n\n\tget whenClosedOrLoaded(): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\n\t\t\tfunction handle() {\n\t\t\t\tcloseListener.dispose();\n\t\t\t\tloadListener.dispose();\n\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tconst closeListener = this.onDidClose(() => handle());\n\t\t\tconst loadListener = this.onWillLoad(() => handle());\n\t\t});\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Crashes & Unresponsive & Failed to load\n\t\tthis._win.on('unresponsive', () => this.onWindowError(WindowError.UNRESPONSIVE));\n\t\tthis._win.webContents.on('render-process-gone', (event, details) => this.onWindowError(WindowError.CRASHED, details));\n\t\tthis._win.webContents.on('did-fail-load', (event, errorCode, errorDescription) => this.onWindowError(WindowError.LOAD, errorDescription));\n\n\t\t// Prevent windows/iframes from blocking the unload\n\t\t// through DOM events. We have our own logic for\n\t\t// unloading a window that should not be confused\n\t\t// with the DOM way.\n\t\t// (https://github.com/microsoft/vscode/issues/122736)\n\t\tthis._win.webContents.on('will-prevent-unload', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Window close\n\t\tthis._win.on('closed', () => {\n\t\t\tthis._onDidClose.fire();\n\n\t\t\tthis.dispose();\n\t\t});\n\n\t\t// Block all SVG requests from unsupported origins\n\t\tconst supportedSvgSchemes = new Set([Schemas.file, Schemas.vscodeFileResource, Schemas.vscodeRemoteResource, 'devtools']); // TODO: handle webview origin\n\n\t\t// But allow them if the are made from inside an webview\n\t\tconst isSafeFrame = (requestFrame: WebFrameMain | undefined): boolean => {\n\t\t\tfor (let frame: WebFrameMain | null | undefined = requestFrame; frame; frame = frame.parent) {\n\t\t\t\tif (frame.url.startsWith(`${Schemas.vscodeWebview}://`)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tthis._win.webContents.session.webRequest.onBeforeRequest((details, callback) => {\n\t\t\tconst uri = URI.parse(details.url);\n\t\t\tif (uri.path.endsWith('.svg')) {\n\t\t\t\tconst isSafeResourceUrl = supportedSvgSchemes.has(uri.scheme) || uri.path.includes(Schemas.vscodeRemoteResource);\n\t\t\t\tif (!isSafeResourceUrl) {\n\t\t\t\t\tconst isSafeContext = isSafeFrame(details.frame);\n\t\t\t\t\treturn callback({ cancel: !isSafeContext });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn callback({ cancel: false });\n\t\t});\n\n\t\t// Configure SVG header content type properly\n\t\t// https://github.com/microsoft/vscode/issues/97564\n\t\tthis._win.webContents.session.webRequest.onHeadersReceived((details, callback) => {\n\t\t\tconst responseHeaders = details.responseHeaders as Record<string, (string) | (string[])>;\n\t\t\tconst contentTypes = (responseHeaders['content-type'] || responseHeaders['Content-Type']);\n\n\t\t\tif (contentTypes && Array.isArray(contentTypes)) {\n\t\t\t\tconst uri = URI.parse(details.url);\n\t\t\t\tif (uri.path.endsWith('.svg')) {\n\t\t\t\t\tif (supportedSvgSchemes.has(uri.scheme)) {\n\t\t\t\t\t\tresponseHeaders['Content-Type'] = ['image/svg+xml'];\n\n\t\t\t\t\t\treturn callback({ cancel: false, responseHeaders });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remote extension schemes have the following format\n\t\t\t\t// http://127.0.0.1:<port>/vscode-remote-resource?path=\n\t\t\t\tif (!uri.path.includes(Schemas.vscodeRemoteResource) && contentTypes.some(contentType => contentType.toLowerCase().includes('image/svg'))) {\n\t\t\t\t\tconst isSafeContext = isSafeFrame(details.frame);\n\t\t\t\t\treturn callback({ cancel: !isSafeContext });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn callback({ cancel: false });\n\t\t});\n\n\t\t// Remember that we loaded\n\t\tthis._win.webContents.on('did-finish-load', () => {\n\t\t\tthis.readyState = ReadyState.LOADING;\n\n\t\t\t// Associate properties from the load request if provided\n\t\t\tif (this.pendingLoadConfig) {\n\t\t\t\tthis.currentConfig = this.pendingLoadConfig;\n\n\t\t\t\tthis.pendingLoadConfig = undefined;\n\t\t\t}\n\t\t});\n\n\t\t// Window Focus\n\t\tthis._win.on('focus', () => {\n\t\t\tthis._lastFocusTime = Date.now();\n\t\t});\n\n\t\tif (isMacintosh) {\n\t\t\tthis._register(this.nativeHostMainService.onDidChangeDisplay(() => {\n\t\t\t\tif (!this._win) {\n\t\t\t\t\treturn; // disposed\n\t\t\t\t}\n\n\t\t\t\t// Simple fullscreen doesn't resize automatically when the resolution changes so as a workaround\n\t\t\t\t// we need to detect when display metrics change or displays are added/removed and toggle the\n\t\t\t\t// fullscreen manually.\n\t\t\t\tif (!this.useNativeFullScreen() && this.isFullScreen) {\n\t\t\t\t\tthis.setFullScreen(false);\n\t\t\t\t\tthis.setFullScreen(true);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// Window (Un)Maximize\n\t\tthis._win.on('maximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = true;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-maximize', e, this._win);\n\t\t});\n\n\t\tthis._win.on('unmaximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = false;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-unmaximize', e, this._win);\n\t\t});\n\n\t\t// Window Fullscreen\n\t\tthis._win.on('enter-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:enterFullScreen', CancellationToken.None);\n\t\t});\n\n\t\tthis._win.on('leave-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:leaveFullScreen', CancellationToken.None);\n\t\t});\n\n\t\t// Handle configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(() => this.onConfigurationUpdated()));\n\n\t\t// Handle Workspace events\n\t\tthis._register(this.workspacesManagementMainService.onDidDeleteUntitledWorkspace(e => this.onDidDeleteUntitledWorkspace(e)));\n\n\t\t// Inject headers when requests are incoming\n\t\tconst urls = ['https://marketplace.visualstudio.com/*', 'https://*.vsassets.io/*'];\n\t\tthis._win.webContents.session.webRequest.onBeforeSendHeaders({ urls }, async (details, cb) => {\n\t\t\tconst headers = await this.marketplaceHeadersPromise;\n\n\t\t\tcb({ cancel: false, requestHeaders: Object.assign(details.requestHeaders, headers) });\n\t\t});\n\t}\n\n\tprivate async onWindowError(error: WindowError.UNRESPONSIVE): Promise<void>;\n\tprivate async onWindowError(error: WindowError.CRASHED, details: RenderProcessGoneDetails): Promise<void>;\n\tprivate async onWindowError(error: WindowError.LOAD, details: string): Promise<void>;\n\tprivate async onWindowError(type: WindowError, details?: string | RenderProcessGoneDetails): Promise<void> {\n\n\t\tswitch (type) {\n\t\t\tcase WindowError.CRASHED:\n\t\t\t\tthis.logService.error(`CodeWindow: renderer process crashed (detail: ${typeof details === 'string' ? details : details?.reason})`);\n\t\t\t\tbreak;\n\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\t\tthis.logService.error('CodeWindow: detected unresponsive');\n\t\t\t\tbreak;\n\t\t\tcase WindowError.LOAD:\n\t\t\t\tthis.logService.error(`CodeWindow: failed to load workbench window: ${typeof details === 'string' ? details : details?.reason}`);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// If we run extension tests from CLI, showing a dialog is not\n\t\t// very helpful in this case. Rather, we bring down the test run\n\t\t// to signal back a failing run.\n\t\tif (this.isExtensionDevelopmentTestFromCli) {\n\t\t\tthis.lifecycleMainService.kill(1);\n\t\t\treturn;\n\t\t}\n\n\t\t// Telemetry\n\t\ttype WindowErrorClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\treason: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t};\n\t\ttype WindowErrorEvent = {\n\t\t\ttype: WindowError;\n\t\t\treason: string | undefined;\n\t\t};\n\t\tthis.telemetryService.publicLog2<WindowErrorEvent, WindowErrorClassification>('windowerror', { type, reason: typeof details !== 'string' ? details?.reason : undefined });\n\n\t\t// Unresponsive\n\t\tif (type === WindowError.UNRESPONSIVE) {\n\t\t\tif (this.isExtensionDevelopmentHost || this.isExtensionTestHost || (this._win && this._win.webContents && this._win.webContents.isDevToolsOpened())) {\n\t\t\t\t// TODO@electron Workaround for https://github.com/microsoft/vscode/issues/56994\n\t\t\t\t// In certain cases the window can report unresponsiveness because a breakpoint was hit\n\t\t\t\t// and the process is stopped executing. The most typical cases are:\n\t\t\t\t// - devtools are opened and debugging happens\n\t\t\t\t// - window is an extensions development host that is being debugged\n\t\t\t\t// - window is an extension test development host that is being debugged\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Show Dialog\n\t\t\tconst result = await this.dialogMainService.showMessageBox({\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")), mnemonicButtonLabel(localize({ key: 'wait', comment: ['&& denotes a mnemonic'] }, \"&&Keep Waiting\")), mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\t\t\tmessage: localize('appStalled', \"The window is no longer responding\"),\n\t\t\t\tdetail: localize('appStalledDetail', \"You can reopen or close the window or keep waiting.\"),\n\t\t\t\tnoLink: true\n\t\t\t}, this._win);\n\n\t\t\tif (!this._win) {\n\t\t\t\treturn; // Return early if the window has been going down already\n\t\t\t}\n\n\t\t\tif (result.response === 0) {\n\t\t\t\tthis._win.webContents.forcefullyCrashRenderer(); // Calling reload() immediately after calling this method will force the reload to occur in a new process\n\t\t\t\tthis.reload();\n\t\t\t} else if (result.response === 2) {\n\t\t\t\tthis.destroyWindow();\n\t\t\t}\n\t\t}\n\n\t\t// Crashed\n\t\telse if (type === WindowError.CRASHED) {\n\t\t\tlet message: string;\n\t\t\tif (typeof details === 'string' || !details) {\n\t\t\t\tmessage = localize('appCrashed', \"The window has crashed\");\n\t\t\t} else {\n\t\t\t\tmessage = localize('appCrashedDetails', \"The window has crashed (reason: '{0}')\", details.reason);\n\t\t\t}\n\n\t\t\tconst result = await this.dialogMainService.showMessageBox({\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")), mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\t\t\tmessage,\n\t\t\t\tdetail: localize('appCrashedDetail', \"We are sorry for the inconvenience! You can reopen the window to continue where you left off.\"),\n\t\t\t\tnoLink: true\n\t\t\t}, this._win);\n\n\t\t\tif (!this._win) {\n\t\t\t\treturn; // Return early if the window has been going down already\n\t\t\t}\n\n\t\t\tif (result.response === 0) {\n\t\t\t\tthis.reload();\n\t\t\t} else if (result.response === 1) {\n\t\t\t\tthis.destroyWindow();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate destroyWindow(): void {\n\t\tthis._onDidDestroy.fire(); // 'close' event will not be fired on destroy(), so signal crash via explicit event\n\t\tthis._win.destroy(); \t// make sure to destroy the window as it has crashed\n\t}\n\n\tprivate onDidDeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): void {\n\n\t\t// Make sure to update our workspace config if we detect that it\n\t\t// was deleted\n\t\tif (this.openedWorkspace?.id === workspace.id && this.currentConfig) {\n\t\t\tthis.currentConfig.workspace = undefined;\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(): void {\n\n\t\t// Menubar\n\t\tconst newMenuBarVisibility = this.getMenuBarVisibility();\n\t\tif (newMenuBarVisibility !== this.currentMenuBarVisibility) {\n\t\t\tthis.currentMenuBarVisibility = newMenuBarVisibility;\n\t\t\tthis.setMenuBarVisibility(newMenuBarVisibility);\n\t\t}\n\n\t\t// Proxy\n\t\tlet newHttpProxy = (this.configurationService.getValue<string>('http.proxy') || '').trim()\n\t\t\t|| (process.env['https_proxy'] || process.env['HTTPS_PROXY'] || process.env['http_proxy'] || process.env['HTTP_PROXY'] || '').trim() // Not standardized.\n\t\t\t|| undefined;\n\n\t\tif (newHttpProxy?.endsWith('/')) {\n\t\t\tnewHttpProxy = newHttpProxy.substr(0, newHttpProxy.length - 1);\n\t\t}\n\n\t\tconst newNoProxy = (process.env['no_proxy'] || process.env['NO_PROXY'] || '').trim() || undefined; // Not standardized.\n\t\tif ((newHttpProxy || '').indexOf('@') === -1 && (newHttpProxy !== this.currentHttpProxy || newNoProxy !== this.currentNoProxy)) {\n\t\t\tthis.currentHttpProxy = newHttpProxy;\n\t\t\tthis.currentNoProxy = newNoProxy;\n\n\t\t\tconst proxyRules = newHttpProxy || '';\n\t\t\tconst proxyBypassRules = newNoProxy ? `${newNoProxy},<local>` : '<local>';\n\t\t\tthis.logService.trace(`Setting proxy to '${proxyRules}', bypassing '${proxyBypassRules}'`);\n\t\t\tthis._win.webContents.session.setProxy({ proxyRules, proxyBypassRules, pacScript: '' });\n\t\t}\n\t}\n\n\taddTabbedWindow(window: ICodeWindow): void {\n\t\tif (isMacintosh && window.win) {\n\t\t\tthis._win.addTabbedWindow(window.win);\n\t\t}\n\t}\n\n\tload(configuration: INativeWindowConfiguration, options: ILoadOptions = Object.create(null)): void {\n\n\t\t// Clear Document Edited if needed\n\t\tif (this.isDocumentEdited()) {\n\t\t\tif (!options.isReload || !this.backupMainService.isHotExitEnabled()) {\n\t\t\t\tthis.setDocumentEdited(false);\n\t\t\t}\n\t\t}\n\n\t\t// Clear Title and Filename if needed\n\t\tif (!options.isReload) {\n\t\t\tif (this.getRepresentedFilename()) {\n\t\t\t\tthis.setRepresentedFilename('');\n\t\t\t}\n\n\t\t\tthis._win.setTitle(this.productService.nameLong);\n\t\t}\n\n\t\t// Update configuration values based on our window context\n\t\t// and set it into the config object URL for usage.\n\t\tthis.updateConfiguration(configuration, options);\n\n\t\t// If this is the first time the window is loaded, we associate the paths\n\t\t// directly with the window because we assume the loading will just work\n\t\tif (this.readyState === ReadyState.NONE) {\n\t\t\tthis.currentConfig = configuration;\n\t\t}\n\n\t\t// Otherwise, the window is currently showing a folder and if there is an\n\t\t// unload handler preventing the load, we cannot just associate the paths\n\t\t// because the loading might be vetoed. Instead we associate it later when\n\t\t// the window load event has fired.\n\t\telse {\n\t\t\tthis.pendingLoadConfig = configuration;\n\t\t\tthis.readyState = ReadyState.NAVIGATING;\n\t\t}\n\n\t\t// Load URL\n\t\tthis._win.loadURL(FileAccess.asBrowserUri(this.environmentMainService.sandbox ?\n\t\t\t'vs/code/electron-sandbox/workbench/workbench.html' :\n\t\t\t'vs/code/electron-browser/workbench/workbench.html', require\n\t\t).toString(true));\n\n\t\t// Make window visible if it did not open in N seconds because this indicates an error\n\t\t// Only do this when running out of sources and not when running tests\n\t\tif (!this.environmentMainService.isBuilt && !this.environmentMainService.extensionTestsLocationURI) {\n\t\t\tthis.showTimeoutHandle = setTimeout(() => {\n\t\t\t\tif (this._win && !this._win.isVisible() && !this._win.isMinimized()) {\n\t\t\t\t\tthis._win.show();\n\t\t\t\t\tthis.focus({ force: true });\n\t\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t\t}\n\t\t\t}, 10000);\n\t\t}\n\n\t\t// Event\n\t\tthis._onWillLoad.fire({ workspace: configuration.workspace });\n\t}\n\n\tprivate updateConfiguration(configuration: INativeWindowConfiguration, options: ILoadOptions): void {\n\n\t\t// If this window was loaded before from the command line\n\t\t// (as indicated by VSCODE_CLI environment), make sure to\n\t\t// preserve that user environment in subsequent loads,\n\t\t// unless the new configuration context was also a CLI\n\t\t// (for https://github.com/microsoft/vscode/issues/108571)\n\t\tconst currentUserEnv = (this.currentConfig ?? this.pendingLoadConfig)?.userEnv;\n\t\tif (currentUserEnv && isLaunchedFromCli(currentUserEnv) && !isLaunchedFromCli(configuration.userEnv)) {\n\t\t\tconfiguration.userEnv = { ...currentUserEnv, ...configuration.userEnv }; // still allow to override certain environment as passed in\n\t\t}\n\n\t\t// If named pipe was instantiated for the crashpad_handler process, reuse the same\n\t\t// pipe for new app instances connecting to the original app instance.\n\t\t// Ref: https://github.com/microsoft/vscode/issues/115874\n\t\tif (process.env['CHROME_CRASHPAD_PIPE_NAME']) {\n\t\t\tObject.assign(configuration.userEnv, {\n\t\t\t\tCHROME_CRASHPAD_PIPE_NAME: process.env['CHROME_CRASHPAD_PIPE_NAME']\n\t\t\t});\n\t\t}\n\n\t\t// Add disable-extensions to the config, but do not preserve it on currentConfig or\n\t\t// pendingLoadConfig so that it is applied only on this load\n\t\tif (options.disableExtensions !== undefined) {\n\t\t\tconfiguration['disable-extensions'] = options.disableExtensions;\n\t\t}\n\n\t\t// Update window related properties\n\t\tconfiguration.fullscreen = this.isFullScreen;\n\t\tconfiguration.maximized = this._win.isMaximized();\n\n\t\t// Update with latest perf marks\n\t\tmark('code/willOpenNewWindow');\n\t\tconfiguration.perfMarks = getMarks();\n\n\t\t// Update in config object URL for usage in renderer\n\t\tthis.configObjectUrl.update(configuration);\n\t}\n\n\tasync reload(cli?: NativeParsedArgs): Promise<void> {\n\n\t\t// Copy our current config for reuse\n\t\tconst configuration = Object.assign({}, this.currentConfig);\n\n\t\t// Validate workspace\n\t\tconfiguration.workspace = await this.validateWorkspace(configuration);\n\n\t\t// Delete some properties we do not want during reload\n\t\tdelete configuration.filesToOpenOrCreate;\n\t\tdelete configuration.filesToDiff;\n\t\tdelete configuration.filesToWait;\n\n\t\t// Some configuration things get inherited if the window is being reloaded and we are\n\t\t// in extension development mode. These options are all development related.\n\t\tif (this.isExtensionDevelopmentHost && cli) {\n\t\t\tconfiguration.verbose = cli.verbose;\n\t\t\tconfiguration.debugId = cli.debugId;\n\t\t\tconfiguration['inspect-extensions'] = cli['inspect-extensions'];\n\t\t\tconfiguration['inspect-brk-extensions'] = cli['inspect-brk-extensions'];\n\t\t\tconfiguration['extensions-dir'] = cli['extensions-dir'];\n\t\t}\n\n\t\tconfiguration.isInitialStartup = false; // since this is a reload\n\n\t\t// Load config\n\t\tthis.load(configuration, { isReload: true, disableExtensions: cli?.['disable-extensions'] });\n\t}\n\n\tprivate async validateWorkspace(configuration: INativeWindowConfiguration): Promise<IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined> {\n\n\t\t// Multi folder\n\t\tif (isWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst configPath = configuration.workspace.configPath;\n\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\tconst workspaceExists = await this.fileService.exists(configPath);\n\t\t\t\tif (!workspaceExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Single folder\n\t\telse if (isSingleFolderWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst uri = configuration.workspace.uri;\n\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\tconst folderExists = await this.fileService.exists(uri);\n\t\t\t\tif (!folderExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Workspace is valid\n\t\treturn configuration.workspace;\n\t}\n\n\tserializeWindowState(): IWindowState {\n\t\tif (!this._win) {\n\t\t\treturn defaultWindowState();\n\t\t}\n\n\t\t// fullscreen gets special treatment\n\t\tif (this.isFullScreen) {\n\t\t\tlet display: Display | undefined;\n\t\t\ttry {\n\t\t\t\tdisplay = screen.getDisplayMatching(this.getBounds());\n\t\t\t} catch (error) {\n\t\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t\t// large numbers are passed in\n\t\t\t}\n\n\t\t\tconst defaultState = defaultWindowState();\n\n\t\t\tconst res = {\n\t\t\t\tmode: WindowMode.Fullscreen,\n\t\t\t\tdisplay: display ? display.id : undefined,\n\n\t\t\t\t// Still carry over window dimensions from previous sessions\n\t\t\t\t// if we can compute it in fullscreen state.\n\t\t\t\t// does not seem possible in all cases on Linux for example\n\t\t\t\t// (https://github.com/microsoft/vscode/issues/58218) so we\n\t\t\t\t// fallback to the defaults in that case.\n\t\t\t\twidth: this.windowState.width || defaultState.width,\n\t\t\t\theight: this.windowState.height || defaultState.height,\n\t\t\t\tx: this.windowState.x || 0,\n\t\t\t\ty: this.windowState.y || 0\n\t\t\t};\n\n\t\t\treturn res;\n\t\t}\n\n\t\tconst state: IWindowState = Object.create(null);\n\t\tlet mode: WindowMode;\n\n\t\t// get window mode\n\t\tif (!isMacintosh && this._win.isMaximized()) {\n\t\t\tmode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tmode = WindowMode.Normal;\n\t\t}\n\n\t\t// we don't want to save minimized state, only maximized or normal\n\t\tif (mode === WindowMode.Maximized) {\n\t\t\tstate.mode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\t// only consider non-minimized window states\n\t\tif (mode === WindowMode.Normal || mode === WindowMode.Maximized) {\n\t\t\tlet bounds: Rectangle;\n\t\t\tif (mode === WindowMode.Normal) {\n\t\t\t\tbounds = this.getBounds();\n\t\t\t} else {\n\t\t\t\tbounds = this._win.getNormalBounds(); // make sure to persist the normal bounds when maximized to be able to restore them\n\t\t\t}\n\n\t\t\tstate.x = bounds.x;\n\t\t\tstate.y = bounds.y;\n\t\t\tstate.width = bounds.width;\n\t\t\tstate.height = bounds.height;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate restoreWindowState(state?: IWindowState): [IWindowState, boolean? /* has multiple displays */] {\n\t\tmark('code/willRestoreCodeWindowState');\n\n\t\tlet hasMultipleDisplays = false;\n\t\tif (state) {\n\t\t\ttry {\n\t\t\t\tconst displays = screen.getAllDisplays();\n\t\t\t\thasMultipleDisplays = displays.length > 1;\n\n\t\t\t\tstate = this.validateWindowState(state, displays);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.warn(`Unexpected error validating window state: ${err}\\n${err.stack}`); // somehow display API can be picky about the state to validate\n\t\t\t}\n\t\t}\n\n\t\tmark('code/didRestoreCodeWindowState');\n\n\t\treturn [state || defaultWindowState(), hasMultipleDisplays];\n\t}\n\n\tprivate validateWindowState(state: IWindowState, displays: Display[]): IWindowState | undefined {\n\t\tthis.logService.trace(`window#validateWindowState: validating window state on ${displays.length} display(s)`, state);\n\n\t\tif (typeof state.x !== 'number'\n\t\t\t|| typeof state.y !== 'number'\n\t\t\t|| typeof state.width !== 'number'\n\t\t\t|| typeof state.height !== 'number'\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected type of state values');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (state.width <= 0 || state.height <= 0) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected negative values');\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Single Monitor: be strict about x/y positioning\n\t\t// macOS & Linux: these OS seem to be pretty good in ensuring that a window is never outside of it's bounds.\n\t\t// Windows: it is possible to have a window with a size that makes it fall out of the window. our strategy\n\t\t//          is to try as much as possible to keep the window in the monitor bounds. we are not as strict as\n\t\t//          macOS and Linux and allow the window to exceed the monitor bounds as long as the window is still\n\t\t//          some pixels (128) visible on the screen for the user to drag it back.\n\t\tif (displays.length === 1) {\n\t\t\tconst displayWorkingArea = this.getWorkingArea(displays[0]);\n\t\t\tif (displayWorkingArea) {\n\t\t\t\tthis.logService.trace('window#validateWindowState: 1 monitor working area', displayWorkingArea);\n\n\t\t\t\tfunction ensureStateInDisplayWorkingArea(): void {\n\t\t\t\t\tif (!state || typeof state.x !== 'number' || typeof state.y !== 'number' || !displayWorkingArea) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.x < displayWorkingArea.x) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\t\t\t\tstate.x = displayWorkingArea.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.y < displayWorkingArea.y) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\t\t\t\tstate.y = displayWorkingArea.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ensure state is not outside display working area (top, left)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\n\t\t\t\tif (state.width > displayWorkingArea.width) {\n\t\t\t\t\t// prevent window from exceeding display bounds width\n\t\t\t\t\tstate.width = displayWorkingArea.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.height > displayWorkingArea.height) {\n\t\t\t\t\t// prevent window from exceeding display bounds height\n\t\t\t\t\tstate.height = displayWorkingArea.height;\n\t\t\t\t}\n\n\t\t\t\tif (state.x > (displayWorkingArea.x + displayWorkingArea.width - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the right with\n\t\t\t\t\t// 128px margin by positioning the window to the far right edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.x = displayWorkingArea.x + displayWorkingArea.width - state.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.y > (displayWorkingArea.y + displayWorkingArea.height - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the bottom with\n\t\t\t\t\t// 128px margin by positioning the window to the far bottom edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.y = displayWorkingArea.y + displayWorkingArea.height - state.height;\n\t\t\t\t}\n\n\t\t\t\t// again ensure state is not outside display working area\n\t\t\t\t// (it may have changed from the previous validation step)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\t// Multi Montior (fullscreen): try to find the previously used display\n\t\tif (state.display && state.mode === WindowMode.Fullscreen) {\n\t\t\tconst display = displays.find(d => d.id === state.display);\n\t\t\tif (display && typeof display.bounds?.x === 'number' && typeof display.bounds?.y === 'number') {\n\t\t\t\tthis.logService.trace('window#validateWindowState: restoring fullscreen to previous display');\n\n\t\t\t\tconst defaults = defaultWindowState(WindowMode.Fullscreen); // make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = display.bounds.x; // carefull to use displays x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = display.bounds.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\t\t}\n\n\t\t// Multi Monitor (non-fullscreen): ensure window is within display bounds\n\t\tlet display: Display | undefined;\n\t\tlet displayWorkingArea: Rectangle | undefined;\n\t\ttry {\n\t\t\tdisplay = screen.getDisplayMatching({ x: state.x, y: state.y, width: state.width, height: state.height });\n\t\t\tdisplayWorkingArea = this.getWorkingArea(display);\n\t\t} catch (error) {\n\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t// large numbers are passed in\n\t\t}\n\n\t\tif (\n\t\t\tdisplay &&\t\t\t\t\t\t\t\t\t\t\t\t\t\t// we have a display matching the desired bounds\n\t\t\tdisplayWorkingArea &&\t\t\t\t\t\t\t\t\t\t\t// we have valid working area bounds\n\t\t\tstate.x + state.width > displayWorkingArea.x &&\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\tstate.y + state.height > displayWorkingArea.y &&\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\tstate.x < displayWorkingArea.x + displayWorkingArea.width &&\t// prevent window from falling out of the screen to the right\n\t\t\tstate.y < displayWorkingArea.y + displayWorkingArea.height\t\t// prevent window from falling out of the screen to the bottom\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: multi-monitor working area', displayWorkingArea);\n\n\t\t\treturn state;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getWorkingArea(display: Display): Rectangle | undefined {\n\n\t\t// Prefer the working area of the display to account for taskbars on the\n\t\t// desktop being positioned somewhere (https://github.com/microsoft/vscode/issues/50830).\n\t\t//\n\t\t// Linux X11 sessions sometimes report wrong display bounds, so we validate\n\t\t// the reported sizes are positive.\n\t\tif (display.workArea.width > 0 && display.workArea.height > 0) {\n\t\t\treturn display.workArea;\n\t\t}\n\n\t\tif (display.bounds.width > 0 && display.bounds.height > 0) {\n\t\t\treturn display.bounds;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetBounds(): Rectangle {\n\t\tconst [x, y] = this._win.getPosition();\n\t\tconst [width, height] = this._win.getSize();\n\n\t\treturn { x, y, width, height };\n\t}\n\n\ttoggleFullScreen(): void {\n\t\tthis.setFullScreen(!this.isFullScreen);\n\t}\n\n\tprivate setFullScreen(fullscreen: boolean): void {\n\n\t\t// Set fullscreen state\n\t\tif (this.useNativeFullScreen()) {\n\t\t\tthis.setNativeFullScreen(fullscreen);\n\t\t} else {\n\t\t\tthis.setSimpleFullScreen(fullscreen);\n\t\t}\n\n\t\t// Events\n\t\tthis.sendWhenReady(fullscreen ? 'vscode:enterFullScreen' : 'vscode:leaveFullScreen', CancellationToken.None);\n\n\t\t// Respect configured menu bar visibility or default to toggle if not set\n\t\tif (this.currentMenuBarVisibility) {\n\t\t\tthis.setMenuBarVisibility(this.currentMenuBarVisibility, false);\n\t\t}\n\t}\n\n\tget isFullScreen(): boolean { return this._win.isFullScreen() || this._win.isSimpleFullScreen(); }\n\n\tprivate setNativeFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isSimpleFullScreen()) {\n\t\t\tthis._win.setSimpleFullScreen(false);\n\t\t}\n\n\t\tthis._win.setFullScreen(fullscreen);\n\t}\n\n\tprivate setSimpleFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isFullScreen()) {\n\t\t\tthis._win.setFullScreen(false);\n\t\t}\n\n\t\tthis._win.setSimpleFullScreen(fullscreen);\n\t\tthis._win.webContents.focus(); // workaround issue where focus is not going into window\n\t}\n\n\tprivate useNativeFullScreen(): boolean {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tif (!windowConfig || typeof windowConfig.nativeFullScreen !== 'boolean') {\n\t\t\treturn true; // default\n\t\t}\n\n\t\tif (windowConfig.nativeTabs) {\n\t\t\treturn true; // https://github.com/electron/electron/issues/16142\n\t\t}\n\n\t\treturn windowConfig.nativeFullScreen !== false;\n\t}\n\n\tisMinimized(): boolean {\n\t\treturn this._win.isMinimized();\n\t}\n\n\tprivate getMenuBarVisibility(): MenuBarVisibility {\n\t\tlet menuBarVisibility = getMenuBarVisibility(this.configurationService);\n\t\tif (['visible', 'toggle', 'hidden'].indexOf(menuBarVisibility) < 0) {\n\t\t\tmenuBarVisibility = 'classic';\n\t\t}\n\n\t\treturn menuBarVisibility;\n\t}\n\n\tprivate setMenuBarVisibility(visibility: MenuBarVisibility, notify: boolean = true): void {\n\t\tif (isMacintosh) {\n\t\t\treturn; // ignore for macOS platform\n\t\t}\n\n\t\tif (visibility === 'toggle') {\n\t\t\tif (notify) {\n\t\t\t\tthis.send('vscode:showInfoMessage', localize('hiddenMenuBar', \"You can still access the menu bar by pressing the Alt-key.\"));\n\t\t\t}\n\t\t}\n\n\t\tif (visibility === 'hidden') {\n\t\t\t// for some weird reason that I have no explanation for, the menu bar is not hiding when calling\n\t\t\t// this without timeout (see https://github.com/microsoft/vscode/issues/19777). there seems to be\n\t\t\t// a timing issue with us opening the first window and the menu bar getting created. somehow the\n\t\t\t// fact that we want to hide the menu without being able to bring it back via Alt key makes Electron\n\t\t\t// still show the menu. Unable to reproduce from a simple Hello World application though...\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t}\n\t}\n\n\tprivate doSetMenuBarVisibility(visibility: MenuBarVisibility): void {\n\t\tconst isFullscreen = this.isFullScreen;\n\n\t\tswitch (visibility) {\n\t\t\tcase ('classic'):\n\t\t\t\tthis._win.setMenuBarVisibility(!isFullscreen);\n\t\t\t\tthis._win.autoHideMenuBar = isFullscreen;\n\t\t\t\tbreak;\n\n\t\t\tcase ('visible'):\n\t\t\t\tthis._win.setMenuBarVisibility(true);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ('toggle'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = true;\n\t\t\t\tbreak;\n\n\t\t\tcase ('hidden'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleTitleDoubleClick(): void {\n\n\t\t// Respect system settings on mac with regards to title click on windows title\n\t\tif (isMacintosh) {\n\t\t\tconst action = systemPreferences.getUserDefault('AppleActionOnDoubleClick', 'string');\n\t\t\tswitch (action) {\n\t\t\t\tcase 'Minimize':\n\t\t\t\t\tthis._win.minimize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'None':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Maximize':\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._win.isMaximized()) {\n\t\t\t\t\t\tthis._win.unmaximize();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._win.maximize();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Linux/Windows: just toggle maximize/minimized state\n\t\telse {\n\t\t\tif (this._win.isMaximized()) {\n\t\t\t\tthis._win.unmaximize();\n\t\t\t} else {\n\t\t\t\tthis._win.maximize();\n\t\t\t}\n\t\t}\n\t}\n\n\tclose(): void {\n\t\tif (this._win) {\n\t\t\tthis._win.close();\n\t\t}\n\t}\n\n\tsendWhenReady(channel: string, token: CancellationToken, ...args: any[]): void {\n\t\tif (this.isReady) {\n\t\t\tthis.send(channel, ...args);\n\t\t} else {\n\t\t\tthis.ready().then(() => {\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tthis.send(channel, ...args);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsend(channel: string, ...args: any[]): void {\n\t\tif (this._win) {\n\t\t\tif (this._win.isDestroyed() || this._win.webContents.isDestroyed()) {\n\t\t\t\tthis.logService.warn(`Sending IPC message to channel ${channel} for window that is destroyed`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._win.webContents.send(channel, ...args);\n\t\t}\n\t}\n\n\tupdateTouchBar(groups: ISerializableCommandAction[][]): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// Update segments for all groups. Setting the segments property\n\t\t// of the group directly prevents ugly flickering from happening\n\t\tthis.touchBarGroups.forEach((touchBarGroup, index) => {\n\t\t\tconst commands = groups[index];\n\t\t\ttouchBarGroup.segments = this.createTouchBarGroupSegments(commands);\n\t\t});\n\t}\n\n\tprivate createTouchBar(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// To avoid flickering, we try to reuse the touch bar group\n\t\t// as much as possible by creating a large number of groups\n\t\t// for reusing later.\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst groupTouchBar = this.createTouchBarGroup();\n\t\t\tthis.touchBarGroups.push(groupTouchBar);\n\t\t}\n\n\t\tthis._win.setTouchBar(new TouchBar({ items: this.touchBarGroups }));\n\t}\n\n\tprivate createTouchBarGroup(items: ISerializableCommandAction[] = []): TouchBarSegmentedControl {\n\n\t\t// Group Segments\n\t\tconst segments = this.createTouchBarGroupSegments(items);\n\n\t\t// Group Control\n\t\tconst control = new TouchBar.TouchBarSegmentedControl({\n\t\t\tsegments,\n\t\t\tmode: 'buttons',\n\t\t\tsegmentStyle: 'automatic',\n\t\t\tchange: (selectedIndex) => {\n\t\t\t\tthis.sendWhenReady('vscode:runAction', CancellationToken.None, { id: (control.segments[selectedIndex] as ITouchBarSegment).id, from: 'touchbar' });\n\t\t\t}\n\t\t});\n\n\t\treturn control;\n\t}\n\n\tprivate createTouchBarGroupSegments(items: ISerializableCommandAction[] = []): ITouchBarSegment[] {\n\t\tconst segments: ITouchBarSegment[] = items.map(item => {\n\t\t\tlet icon: NativeImage | undefined;\n\t\t\tif (item.icon && !ThemeIcon.isThemeIcon(item.icon) && item.icon?.dark?.scheme === Schemas.file) {\n\t\t\t\ticon = nativeImage.createFromPath(URI.revive(item.icon.dark).fsPath);\n\t\t\t\tif (icon.isEmpty()) {\n\t\t\t\t\ticon = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet title: string;\n\t\t\tif (typeof item.title === 'string') {\n\t\t\t\ttitle = item.title;\n\t\t\t} else {\n\t\t\t\ttitle = item.title.value;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tlabel: !icon ? title : undefined,\n\t\t\t\ticon\n\t\t\t};\n\t\t});\n\n\t\treturn segments;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.showTimeoutHandle) {\n\t\t\tclearTimeout(this.showTimeoutHandle);\n\t\t}\n\n\t\tthis._win = null!; // Important to dereference the window object to allow for GC\n\t}\n}\n"]}