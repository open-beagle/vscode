{"version":3,"file":"windowsStateHandler.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/windows/test/electron-main/windowsStateHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\nimport { restoreWindowsState, getWindowsStateStoreData, IWindowsState, IWindowState } from 'vs/platform/windows/electron-main/windowsStateHandler';\nimport { IWindowState as IWindowUIState, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\n\nsuite('Windows State Storing', () => {\n\n\tfunction getUIState(): IWindowUIState {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 10,\n\t\t\twidth: 100,\n\t\t\theight: 200,\n\t\t\tmode: 0\n\t\t};\n\t}\n\n\tfunction toWorkspace(uri: URI): IWorkspaceIdentifier {\n\t\treturn {\n\t\t\tid: '1234',\n\t\t\tconfigPath: uri\n\t\t};\n\t}\n\tfunction assertEqualURI(u1: URI | undefined, u2: URI | undefined, message?: string): void {\n\t\tassert.strictEqual(u1 && u1.toString(), u2 && u2.toString(), message);\n\t}\n\n\tfunction assertEqualWorkspace(w1: IWorkspaceIdentifier | undefined, w2: IWorkspaceIdentifier | undefined, message?: string): void {\n\t\tif (!w1 || !w2) {\n\t\t\tassert.strictEqual(w1, w2, message);\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(w1.id, w2.id, message);\n\t\tassertEqualURI(w1.configPath, w2.configPath, message);\n\t}\n\n\tfunction assertEqualWindowState(expected: IWindowState | undefined, actual: IWindowState | undefined, message?: string) {\n\t\tif (!expected || !actual) {\n\t\t\tassert.deepStrictEqual(expected, actual, message);\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(expected.backupPath, actual.backupPath, message);\n\t\tassertEqualURI(expected.folderUri, actual.folderUri, message);\n\t\tassert.strictEqual(expected.remoteAuthority, actual.remoteAuthority, message);\n\t\tassertEqualWorkspace(expected.workspace, actual.workspace, message);\n\t\tassert.deepStrictEqual(expected.uiState, actual.uiState, message);\n\t}\n\n\tfunction assertEqualWindowsState(expected: IWindowsState, actual: IWindowsState, message?: string) {\n\t\tassertEqualWindowState(expected.lastPluginDevelopmentHostWindow, actual.lastPluginDevelopmentHostWindow, message);\n\t\tassertEqualWindowState(expected.lastActiveWindow, actual.lastActiveWindow, message);\n\t\tassert.strictEqual(expected.openedWindows.length, actual.openedWindows.length, message);\n\t\tfor (let i = 0; i < expected.openedWindows.length; i++) {\n\t\t\tassertEqualWindowState(expected.openedWindows[i], actual.openedWindows[i], message);\n\t\t}\n\t}\n\n\tfunction assertRestoring(state: IWindowsState, message?: string) {\n\t\tconst stored = getWindowsStateStoreData(state);\n\t\tconst restored = restoreWindowsState(stored);\n\t\tassertEqualWindowsState(state, restored, message);\n\t}\n\n\tconst testBackupPath1 = join(tmpdir(), 'windowStateTest', 'backupFolder1');\n\tconst testBackupPath2 = join(tmpdir(), 'windowStateTest', 'backupFolder2');\n\n\tconst testWSPath = URI.file(join(tmpdir(), 'windowStateTest', 'test.code-workspace'));\n\tconst testFolderURI = URI.file(join(tmpdir(), 'windowStateTest', 'testFolder'));\n\n\tconst testRemoteFolderURI = URI.parse('foo://bar/c/d');\n\n\ttest('storing and restoring', () => {\n\t\tlet windowState: IWindowsState;\n\t\twindowState = {\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'no windows');\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState() }]\n\t\t};\n\t\tassertRestoring(windowState, 'empty workspace');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState(), workspace: toWorkspace(testWSPath) }]\n\t\t};\n\t\tassertRestoring(windowState, 'workspace');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI }]\n\t\t};\n\t\tassertRestoring(windowState, 'folder');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState(), folderUri: testFolderURI }, { backupPath: testBackupPath1, uiState: getUIState(), folderUri: testRemoteFolderURI, remoteAuthority: 'bar' }]\n\t\t};\n\t\tassertRestoring(windowState, 'multiple windows');\n\n\t\twindowState = {\n\t\t\tlastActiveWindow: { backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI },\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'lastActiveWindow');\n\n\t\twindowState = {\n\t\t\tlastPluginDevelopmentHostWindow: { backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI },\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'lastPluginDevelopmentHostWindow');\n\t});\n\n\ttest('open 1_32', () => {\n\t\tconst v1_32_workspace = `{\n\t\t\t\"openedWindows\": [],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"workspaceIdentifier\": {\n\t\t\t\t\t\"id\": \"53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\t\"configURIPath\": \"file:///home/user/workspaces/testing/custom.code-workspace\"\n\t\t\t\t},\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 0,\n\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\"y\": 27,\n\t\t\t\t\t\"width\": 2560,\n\t\t\t\t\t\"height\": 1364\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\tlet windowsState = restoreWindowsState(JSON.parse(v1_32_workspace));\n\t\tlet expected: IWindowsState = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/53b714b46ef1a2d4346568b4f591028c',\n\t\t\t\tuiState: { mode: WindowMode.Maximized, x: 0, y: 27, width: 2560, height: 1364 },\n\t\t\t\tworkspace: { id: '53b714b46ef1a2d4346568b4f591028c', configPath: URI.parse('file:///home/user/workspaces/testing/custom.code-workspace') }\n\t\t\t}\n\t\t};\n\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_workspace');\n\n\t\tconst v1_32_folder = `{\n\t\t\t\"openedWindows\": [],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"folder\": \"file:///home/user/workspaces/testing/folding\",\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/1daac1621c6c06f9e916ac8062e5a1b5\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 1,\n\t\t\t\t\t\"x\": 625,\n\t\t\t\t\t\"y\": 263,\n\t\t\t\t\t\"width\": 1718,\n\t\t\t\t\t\"height\": 953\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\twindowsState = restoreWindowsState(JSON.parse(v1_32_folder));\n\t\texpected = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/1daac1621c6c06f9e916ac8062e5a1b5',\n\t\t\t\tuiState: { mode: WindowMode.Normal, x: 625, y: 263, width: 1718, height: 953 },\n\t\t\t\tfolderUri: URI.parse('file:///home/user/workspaces/testing/folding')\n\t\t\t}\n\t\t};\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_folder');\n\n\t\tconst v1_32_empty_window = ` {\n\t\t\t\"openedWindows\": [\n\t\t\t],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/1549539668998\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 1,\n\t\t\t\t\t\"x\": 768,\n\t\t\t\t\t\"y\": 336,\n\t\t\t\t\t\"width\": 1024,\n\t\t\t\t\t\"height\": 768\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\twindowsState = restoreWindowsState(JSON.parse(v1_32_empty_window));\n\t\texpected = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/1549539668998',\n\t\t\t\tuiState: { mode: WindowMode.Normal, x: 768, y: 336, width: 1024, height: 768 }\n\t\t\t}\n\t\t};\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_empty_window');\n\t});\n});\n"]}