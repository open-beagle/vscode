{"version":3,"file":"nativeHostService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/native/electron-sandbox/nativeHostService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAMhG,iDAAiD;IACjD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;QAI7B,YACU,QAAgB,EACJ,kBAAuC;YADnD,aAAQ,GAAR,QAAQ,CAAQ;YAGzB,OAAO,kBAAY,CAAC,SAAS,CAAqB,kBAAkB,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;gBAC9F,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,CAAC,GAAG,EAAE;oBACjB,MAAM,UAAU,GAAG,IAAI,GAAG,EAAmB,CAAC;oBAC9C,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAErC,OAAO,UAAU,CAAC;gBACnB,CAAC,CAAC,EAAE;aACJ,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAlBY,iBAAiB;QAM3B,WAAA,8BAAmB,CAAA;OANT,iBAAiB,CAkB7B;IAlBY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\n\n// @ts-ignore: interface is implemented via proxy\nexport class NativeHostService implements INativeHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\treadonly windowId: number,\n\t\t@IMainProcessService mainProcessService: IMainProcessService\n\t) {\n\t\treturn ProxyChannel.toService<INativeHostService>(mainProcessService.getChannel('nativeHost'), {\n\t\t\tcontext: windowId,\n\t\t\tproperties: (() => {\n\t\t\t\tconst properties = new Map<string, unknown>();\n\t\t\t\tproperties.set('windowId', windowId);\n\n\t\t\t\treturn properties;\n\t\t\t})()\n\t\t});\n\t}\n}\n"]}