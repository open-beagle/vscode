{"version":3,"file":"nativeHostMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/native/electron-main/nativeHostMainService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IWindowsMainService, ICodeWindow, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { MessageBoxOptions, MessageBoxReturnValue, shell, OpenDevToolsOptions, SaveDialogOptions, SaveDialogReturnValue, OpenDialogOptions, OpenDialogReturnValue, Menu, BrowserWindow, app, clipboard, powerMonitor, nativeTheme, screen, Display } from 'electron';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { IOpenedWindow, IOpenWindowOptions, IWindowOpenable, IOpenEmptyWindowOptions, IColorScheme } from 'vs/platform/windows/common/windows';\nimport { INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { isMacintosh, isWindows, isLinux, isLinuxSnap } from 'vs/base/common/platform';\nimport { ICommonNativeHostService, IOSProperties, IOSStatistics } from 'vs/platform/native/common/native';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { AddFirstParameterToFunctions } from 'vs/base/common/types';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { SymlinkSupport } from 'vs/base/node/pfs';\nimport { URI } from 'vs/base/common/uri';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { MouseInputEvent } from 'vs/base/parts/sandbox/common/electronTypes';\nimport { arch, totalmem, release, platform, type, loadavg, freemem, cpus } from 'os';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { dirname, join } from 'vs/base/common/path';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ISharedProcess } from 'vs/platform/sharedProcess/node/sharedProcess';\n\nexport interface INativeHostMainService extends AddFirstParameterToFunctions<ICommonNativeHostService, Promise<unknown> /* only methods, not events */, number | undefined /* window ID */> { }\n\nexport const INativeHostMainService = createDecorator<INativeHostMainService>('nativeHostMainService');\n\ninterface ChunkedPassword {\n\tcontent: string;\n\thasNextChunk: boolean;\n}\n\nexport class NativeHostMainService extends Disposable implements INativeHostMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate sharedProcess: ISharedProcess,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Color Scheme changes\n\t\tnativeTheme.on('updated', () => {\n\t\t\tthis._onDidChangeColorScheme.fire({\n\t\t\t\thighContrast: nativeTheme.shouldUseInvertedColorScheme || nativeTheme.shouldUseHighContrastColors,\n\t\t\t\tdark: nativeTheme.shouldUseDarkColors\n\t\t\t});\n\t\t});\n\t}\n\n\n\t//#region Properties\n\n\tget windowId(): never { throw new Error('Not implemented in electron-main'); }\n\n\t//#endregion\n\n\n\t//#region Events\n\n\treadonly onDidOpenWindow = Event.map(this.windowsMainService.onDidOpenWindow, window => window.id);\n\n\treadonly onDidMaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-maximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidUnmaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-unmaximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\n\treadonly onDidBlurWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-blur', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidFocusWindow = Event.any(\n\t\tEvent.map(Event.filter(Event.map(this.windowsMainService.onDidChangeWindowsCount, () => this.windowsMainService.getLastActiveWindow()), window => !!window), window => window!.id),\n\t\tEvent.filter(Event.fromNodeEventEmitter(app, 'browser-window-focus', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId))\n\t);\n\n\treadonly onDidResumeOS = Event.fromNodeEventEmitter(powerMonitor, 'resume');\n\n\tprivate readonly _onDidChangeColorScheme = this._register(new Emitter<IColorScheme>());\n\treadonly onDidChangeColorScheme = this._onDidChangeColorScheme.event;\n\n\tprivate readonly _onDidChangePassword = this._register(new Emitter<{ account: string, service: string }>());\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\treadonly onDidChangeDisplay = Event.debounce(Event.any(\n\t\tEvent.filter(Event.fromNodeEventEmitter(screen, 'display-metrics-changed', (event: Electron.Event, display: Display, changedMetrics?: string[]) => changedMetrics), changedMetrics => {\n\t\t\t// Electron will emit 'display-metrics-changed' events even when actually\n\t\t\t// going fullscreen, because the dock hides. However, we do not want to\n\t\t\t// react on this event as there is no change in display bounds.\n\t\t\treturn !(Array.isArray(changedMetrics) && changedMetrics.length === 1 && changedMetrics[0] === 'workArea');\n\t\t}),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-added'),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-removed')\n\t), () => { }, 100);\n\n\t//#endregion\n\n\n\t//#region Window\n\n\tasync getWindows(): Promise<IOpenedWindow[]> {\n\t\tconst windows = this.windowsMainService.getWindows();\n\n\t\treturn windows.map(window => ({\n\t\t\tid: window.id,\n\t\t\tworkspace: window.openedWorkspace,\n\t\t\ttitle: window.win?.getTitle() ?? '',\n\t\t\tfilename: window.getRepresentedFilename(),\n\t\t\tdirty: window.isDocumentEdited()\n\t\t}));\n\t}\n\n\tasync getWindowCount(windowId: number | undefined): Promise<number> {\n\t\treturn this.windowsMainService.getWindowCount();\n\t}\n\n\tasync getActiveWindowId(windowId: number | undefined): Promise<number | undefined> {\n\t\tconst activeWindow = BrowserWindow.getFocusedWindow() || this.windowsMainService.getLastActiveWindow();\n\t\tif (activeWindow) {\n\t\t\treturn activeWindow.id;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\topenWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(windowId, arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(windowId, arg1);\n\t}\n\n\tprivate async doOpenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options: IOpenWindowOptions = Object.create(null)): Promise<void> {\n\t\tif (toOpen.length > 0) {\n\t\t\tthis.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tcontextWindowId: windowId,\n\t\t\t\turisToOpen: toOpen,\n\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tforceReuseWindow: options.forceReuseWindow,\n\t\t\t\tpreferNewWindow: options.preferNewWindow,\n\t\t\t\tdiffMode: options.diffMode,\n\t\t\t\taddMode: options.addMode,\n\t\t\t\tgotoLineMode: options.gotoLineMode,\n\t\t\t\tnoRecentEntry: options.noRecentEntry,\n\t\t\t\twaitMarkerFileURI: options.waitMarkerFileURI,\n\t\t\t\tremoteAuthority: options.remoteAuthority || undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async doOpenEmptyWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void> {\n\t\tthis.windowsMainService.openEmptyWindow({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcontextWindowId: windowId\n\t\t}, options);\n\t}\n\n\tasync toggleFullScreen(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.toggleFullScreen();\n\t\t}\n\t}\n\n\tasync handleTitleDoubleClick(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.handleTitleDoubleClick();\n\t\t}\n\t}\n\n\tasync isMaximized(windowId: number | undefined): Promise<boolean> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.isMaximized();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync maximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.maximize();\n\t\t}\n\t}\n\n\tasync unmaximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.unmaximize();\n\t\t}\n\t}\n\n\tasync minimizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.minimize();\n\t\t}\n\t}\n\n\tasync focusWindow(windowId: number | undefined, options?: { windowId?: number; force?: boolean; }): Promise<void> {\n\t\tif (options && typeof options.windowId === 'number') {\n\t\t\twindowId = options.windowId;\n\t\t}\n\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.focus({ force: options?.force ?? false });\n\t\t}\n\t}\n\n\tasync setMinimumSize(windowId: number | undefined, width: number | undefined, height: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst [windowWidth, windowHeight] = window.win.getSize();\n\t\t\tconst [minWindowWidth, minWindowHeight] = window.win.getMinimumSize();\n\t\t\tconst [newMinWindowWidth, newMinWindowHeight] = [width ?? minWindowWidth, height ?? minWindowHeight];\n\t\t\tconst [newWindowWidth, newWindowHeight] = [Math.max(windowWidth, newMinWindowWidth), Math.max(windowHeight, newMinWindowHeight)];\n\n\t\t\tif (minWindowWidth !== newMinWindowWidth || minWindowHeight !== newMinWindowHeight) {\n\t\t\t\twindow.win.setMinimumSize(newMinWindowWidth, newMinWindowHeight);\n\t\t\t}\n\t\t\tif (windowWidth !== newWindowWidth || windowHeight !== newWindowHeight) {\n\t\t\t\twindow.win.setSize(newWindowWidth, newWindowHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Dialog\n\n\tasync showMessageBox(windowId: number | undefined, options: MessageBoxOptions): Promise<MessageBoxReturnValue> {\n\t\treturn this.dialogMainService.showMessageBox(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showSaveDialog(windowId: number | undefined, options: SaveDialogOptions): Promise<SaveDialogReturnValue> {\n\t\treturn this.dialogMainService.showSaveDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showOpenDialog(windowId: number | undefined, options: OpenDialogOptions): Promise<OpenDialogReturnValue> {\n\t\treturn this.dialogMainService.showOpenDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tprivate toBrowserWindow(windowId: number | undefined): BrowserWindow | undefined {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync pickFileFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFileFolder(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFileFolder', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(await Promise.all(paths.map(async path => (await SymlinkSupport.existsDirectory(path)) ? { folderUri: URI.file(path) } : { fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFolder(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFolder', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ folderUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFileAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFile(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFile', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickWorkspaceAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickWorkspace(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openWorkspace', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ workspaceUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tprivate doOpenPicked(openable: IWindowOpenable[], options: INativeOpenDialogOptions, windowId: number | undefined): void {\n\t\tthis.windowsMainService.open({\n\t\t\tcontext: OpenContext.DIALOG,\n\t\t\tcontextWindowId: windowId,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\turisToOpen: openable,\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t/* remoteAuthority will be determined based on openable */\n\t\t});\n\t}\n\n\tprivate sendPickerTelemetry(paths: string[], telemetryEventName: string, telemetryExtraData?: ITelemetryData) {\n\t\tconst numberOfPaths = paths ? paths.length : 0;\n\n\t\t// Telemetry\n\t\t// __GDPR__TODO__ Dynamic event names and dynamic properties. Can not be registered statically.\n\t\tthis.telemetryService.publicLog(telemetryEventName, {\n\t\t\t...telemetryExtraData,\n\t\t\toutcome: numberOfPaths ? 'success' : 'canceled',\n\t\t\tnumberOfPaths\n\t\t});\n\t}\n\n\t//#endregion\n\n\n\t//#region OS\n\n\tasync showItemInFolder(windowId: number | undefined, path: string): Promise<void> {\n\t\tshell.showItemInFolder(path);\n\t}\n\n\tasync setRepresentedFilename(windowId: number | undefined, path: string): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setRepresentedFilename(path);\n\t\t}\n\t}\n\n\tasync setDocumentEdited(windowId: number | undefined, edited: boolean): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setDocumentEdited(edited);\n\t\t}\n\t}\n\n\tasync openExternal(windowId: number | undefined, url: string): Promise<boolean> {\n\t\tif (isLinuxSnap) {\n\t\t\tthis.safeSnapOpenExternal(url);\n\t\t} else {\n\t\t\tshell.openExternal(url);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate safeSnapOpenExternal(url: string): void {\n\n\t\t// Remove some environment variables before opening to avoid issues...\n\t\tconst gdkPixbufModuleFile = process.env['GDK_PIXBUF_MODULE_FILE'];\n\t\tconst gdkPixbufModuleDir = process.env['GDK_PIXBUF_MODULEDIR'];\n\t\tdelete process.env['GDK_PIXBUF_MODULE_FILE'];\n\t\tdelete process.env['GDK_PIXBUF_MODULEDIR'];\n\n\t\tshell.openExternal(url);\n\n\t\t// ...but restore them after\n\t\tprocess.env['GDK_PIXBUF_MODULE_FILE'] = gdkPixbufModuleFile;\n\t\tprocess.env['GDK_PIXBUF_MODULEDIR'] = gdkPixbufModuleDir;\n\t}\n\n\tasync moveItemToTrash(windowId: number | undefined, fullPath: string): Promise<boolean> {\n\t\treturn shell.moveItemToTrash(fullPath);\n\t}\n\n\tasync isAdmin(): Promise<boolean> {\n\t\tlet isAdmin: boolean;\n\t\tif (isWindows) {\n\t\t\tisAdmin = (await import('native-is-elevated'))();\n\t\t} else {\n\t\t\tisAdmin = process.getuid() === 0;\n\t\t}\n\n\t\treturn isAdmin;\n\t}\n\n\tasync writeElevated(windowId: number | undefined, source: URI, target: URI, options?: { unlock?: boolean }): Promise<void> {\n\t\tconst sudoPrompt = await import('sudo-prompt');\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst sudoCommand: string[] = [`\"${this.cliPath}\"`];\n\t\t\tif (options?.unlock) {\n\t\t\t\tsudoCommand.push('--file-chmod');\n\t\t\t}\n\n\t\t\tsudoCommand.push('--file-write', `\"${source.fsPath}\"`, `\"${target.fsPath}\"`);\n\n\t\t\tconst promptOptions = {\n\t\t\t\tname: this.productService.nameLong.replace('-', ''),\n\t\t\t\ticns: (isMacintosh && this.environmentMainService.isBuilt) ? join(dirname(this.environmentMainService.appRoot), `${this.productService.nameShort}.icns`) : undefined\n\t\t\t};\n\n\t\t\tsudoPrompt.exec(sudoCommand.join(' '), promptOptions, (error?, stdout?, stderr?) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stdout: ${stdout}`);\n\t\t\t\t}\n\n\t\t\t\tif (stderr) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stderr: ${stderr}`);\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t@memoize\n\tprivate get cliPath(): string {\n\n\t\t// Windows\n\t\tif (isWindows) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}.cmd`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.bat');\n\t\t}\n\n\t\t// Linux\n\t\tif (isLinux) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t\t}\n\n\t\t// macOS\n\t\tif (this.environmentMainService.isBuilt) {\n\t\t\treturn join(this.environmentMainService.appRoot, 'bin', 'code');\n\t\t}\n\n\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\tasync getOSStatistics(): Promise<IOSStatistics> {\n\t\treturn {\n\t\t\ttotalmem: totalmem(),\n\t\t\tfreemem: freemem(),\n\t\t\tloadavg: loadavg()\n\t\t};\n\t}\n\n\tasync getOSProperties(): Promise<IOSProperties> {\n\t\treturn {\n\t\t\tarch: arch(),\n\t\t\tplatform: platform(),\n\t\t\trelease: release(),\n\t\t\ttype: type(),\n\t\t\tcpus: cpus()\n\t\t};\n\t}\n\n\tasync getOSVirtualMachineHint(): Promise<number> {\n\t\treturn virtualMachineHint.value();\n\t}\n\n\t//#endregion\n\n\n\t//#region Process\n\n\tasync killProcess(windowId: number | undefined, pid: number, code: string): Promise<void> {\n\t\tprocess.kill(pid, code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Clipboard\n\n\tasync readClipboardText(windowId: number | undefined, type?: 'selection' | 'clipboard'): Promise<string> {\n\t\treturn clipboard.readText(type);\n\t}\n\n\tasync writeClipboardText(windowId: number | undefined, text: string, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeText(text, type);\n\t}\n\n\tasync readClipboardFindText(windowId: number | undefined,): Promise<string> {\n\t\treturn clipboard.readFindText();\n\t}\n\n\tasync writeClipboardFindText(windowId: number | undefined, text: string): Promise<void> {\n\t\treturn clipboard.writeFindText(text);\n\t}\n\n\tasync writeClipboardBuffer(windowId: number | undefined, format: string, buffer: Uint8Array, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeBuffer(format, Buffer.from(buffer), type);\n\t}\n\n\tasync readClipboardBuffer(windowId: number | undefined, format: string): Promise<Uint8Array> {\n\t\treturn clipboard.readBuffer(format);\n\t}\n\n\tasync hasClipboard(windowId: number | undefined, format: string, type?: 'selection' | 'clipboard'): Promise<boolean> {\n\t\treturn clipboard.has(format, type);\n\t}\n\n\t//#endregion\n\n\n\t//#region macOS Touchbar\n\n\tasync newWindowTab(): Promise<void> {\n\t\tthis.windowsMainService.open({ context: OpenContext.API, cli: this.environmentMainService.args, forceNewTabbedWindow: true, forceEmpty: true, remoteAuthority: this.environmentMainService.args.remote || undefined });\n\t}\n\n\tasync showPreviousWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectPreviousTab:');\n\t}\n\n\tasync showNextWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectNextTab:');\n\t}\n\n\tasync moveWindowTabToNewWindow(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('moveTabToNewWindow:');\n\t}\n\n\tasync mergeAllWindowTabs(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('mergeAllWindows:');\n\t}\n\n\tasync toggleWindowTabsBar(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('toggleTabBar:');\n\t}\n\n\tasync updateTouchBar(windowId: number | undefined, items: ISerializableCommandAction[][]): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.updateTouchBar(items);\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Lifecycle\n\n\tasync notifyReady(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setReady();\n\t\t}\n\t}\n\n\tasync relaunch(windowId: number | undefined, options?: { addArgs?: string[], removeArgs?: string[] }): Promise<void> {\n\t\treturn this.lifecycleMainService.relaunch(options);\n\t}\n\n\tasync reload(windowId: number | undefined, options?: { disableExtensions?: boolean }): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\treturn this.lifecycleMainService.reload(window, options?.disableExtensions !== undefined ? { _: [], 'disable-extensions': options?.disableExtensions } : undefined);\n\t\t}\n\t}\n\n\tasync closeWindow(windowId: number | undefined): Promise<void> {\n\t\tthis.closeWindowById(windowId, windowId);\n\t}\n\n\tasync closeWindowById(currentWindowId: number | undefined, targetWindowId?: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(targetWindowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.close();\n\t\t}\n\t}\n\n\tasync quit(windowId: number | undefined): Promise<void> {\n\n\t\t// If the user selected to exit from an extension development host window, do not quit, but just\n\t\t// close the window unless this is the last window that is opened.\n\t\tconst window = this.windowsMainService.getLastActiveWindow();\n\t\tif (window?.isExtensionDevelopmentHost && this.windowsMainService.getWindowCount() > 1 && window.win) {\n\t\t\twindow.win.close();\n\t\t}\n\n\t\t// Otherwise: normal quit\n\t\telse {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.lifecycleMainService.quit();\n\t\t\t}, 10 /* delay to unwind callback stack (IPC) */);\n\t\t}\n\t}\n\n\tasync exit(windowId: number | undefined, code: number): Promise<void> {\n\t\tawait this.lifecycleMainService.kill(code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Connectivity\n\n\tasync resolveProxy(windowId: number | undefined, url: string): Promise<string | undefined> {\n\t\tconst window = this.windowById(windowId);\n\t\tconst session = window?.win?.webContents?.session;\n\t\tif (session) {\n\t\t\treturn session.resolveProxy(url);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Development\n\n\tasync openDevTools(windowId: number | undefined, options?: OpenDevToolsOptions): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.webContents.openDevTools(options);\n\t\t}\n\t}\n\n\tasync toggleDevTools(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst contents = window.win.webContents;\n\t\t\tcontents.toggleDevTools();\n\t\t}\n\t}\n\n\tasync sendInputEvent(windowId: number | undefined, event: MouseInputEvent): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win && (event.type === 'mouseDown' || event.type === 'mouseUp')) {\n\t\t\twindow.win.webContents.sendInputEvent(event);\n\t\t}\n\t}\n\n\tasync toggleSharedProcessWindow(): Promise<void> {\n\t\treturn this.sharedProcess.toggle();\n\t}\n\n\t//#endregion\n\n\n\t//#region Registry (windows)\n\n\tasync windowsGetStringRegKey(windowId: number | undefined, hive: 'HKEY_CURRENT_USER' | 'HKEY_LOCAL_MACHINE' | 'HKEY_CLASSES_ROOT' | 'HKEY_USERS' | 'HKEY_CURRENT_CONFIG', path: string, name: string): Promise<string | undefined> {\n\t\tif (!isWindows) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst Registry = await import('vscode-windows-registry');\n\t\ttry {\n\t\t\treturn Registry.GetStringRegKey(hive, path, name);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Credentials\n\n\tprivate static readonly MAX_PASSWORD_LENGTH = 2500;\n\tprivate static readonly PASSWORD_CHUNK_SIZE = NativeHostMainService.MAX_PASSWORD_LENGTH - 100;\n\n\tasync getPassword(windowId: number | undefined, service: string, account: string): Promise<string | null> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\tconst password = await keytar.getPassword(service, account);\n\t\tif (password) {\n\t\t\ttry {\n\t\t\t\tlet { content, hasNextChunk }: ChunkedPassword = JSON.parse(password);\n\t\t\t\tif (!content || !hasNextChunk) {\n\t\t\t\t\treturn password;\n\t\t\t\t}\n\n\t\t\t\tlet index = 1;\n\t\t\t\twhile (hasNextChunk) {\n\t\t\t\t\tconst nextChunk = await keytar.getPassword(service, `${account}-${index}`);\n\t\t\t\t\tconst result: ChunkedPassword = JSON.parse(nextChunk!);\n\t\t\t\t\tcontent += result.content;\n\t\t\t\t\thasNextChunk = result.hasNextChunk;\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\t\t\t} catch {\n\t\t\t\treturn password;\n\t\t\t}\n\t\t}\n\n\t\treturn password;\n\t}\n\n\tasync setPassword(windowId: number | undefined, service: string, account: string, password: string): Promise<void> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\tif (isWindows && password.length > NativeHostMainService.MAX_PASSWORD_LENGTH) {\n\t\t\tlet index = 0;\n\t\t\tlet chunk = 0;\n\t\t\tlet hasNextChunk = true;\n\t\t\twhile (hasNextChunk) {\n\t\t\t\tconst passwordChunk = password.substring(index, index + NativeHostMainService.PASSWORD_CHUNK_SIZE);\n\t\t\t\tindex += NativeHostMainService.PASSWORD_CHUNK_SIZE;\n\t\t\t\thasNextChunk = password.length - index > 0;\n\n\t\t\t\tconst content: ChunkedPassword = {\n\t\t\t\t\tcontent: passwordChunk,\n\t\t\t\t\thasNextChunk: hasNextChunk\n\t\t\t\t};\n\n\t\t\t\tawait keytar.setPassword(service, chunk ? `${account}-${chunk}` : account, JSON.stringify(content));\n\t\t\t\tchunk++;\n\t\t\t}\n\n\t\t} else {\n\t\t\tawait keytar.setPassword(service, account, password);\n\t\t}\n\n\t\tthis._onDidChangePassword.fire({ service, account });\n\t}\n\n\tasync deletePassword(windowId: number | undefined, service: string, account: string): Promise<boolean> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\tconst didDelete = await keytar.deletePassword(service, account);\n\t\tif (didDelete) {\n\t\t\tthis._onDidChangePassword.fire({ service, account });\n\t\t}\n\n\t\treturn didDelete;\n\t}\n\n\tasync findPassword(windowId: number | undefined, service: string): Promise<string | null> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\treturn keytar.findPassword(service);\n\t}\n\n\tasync findCredentials(windowId: number | undefined, service: string): Promise<Array<{ account: string, password: string }>> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\treturn keytar.findCredentials(service);\n\t}\n\n\tprivate async withKeytar(): Promise<typeof import('keytar')> {\n\t\tif (this.environmentMainService.disableKeytar) {\n\t\t\tthrow new Error('keytar has been disabled via --disable-keytar option');\n\t\t}\n\n\t\treturn await import('keytar');\n\t}\n\n\t//#endregion\n\n\tprivate windowById(windowId: number | undefined): ICodeWindow | undefined {\n\t\tif (typeof windowId !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.windowsMainService.getWindowById(windowId);\n\t}\n}\n"]}