{"version":3,"file":"configurationRegistry.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/configuration/test/common/configurationRegistry.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAEnC,MAAM,qBAAqB,GAAG,mBAAQ,CAAC,EAAE,CAAyB,kCAAuB,CAAC,aAAa,CAAC,CAAC;QAEzG,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;YACzC,qBAAqB,CAAC,qBAAqB,CAAC;gBAC3C,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,QAAQ;gBAChB,YAAY,EAAE;oBACb,QAAQ,EAAE;wBACT,MAAM,EAAE,QAAQ;qBAChB;iBACD;aACD,CAAC,CAAC;YACH,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACpF,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEpF,MAAM,CAAC,eAAe,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7G,MAAM,CAAC,eAAe,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACpE,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACpF,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEpF,MAAM,CAAC,eAAe,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC9D,qBAAqB,CAAC,qBAAqB,CAAC;gBAC3C,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,QAAQ;gBAChB,YAAY,EAAE;oBACb,QAAQ,EAAE;wBACT,MAAM,EAAE,QAAQ;qBAChB;iBACD;aACD,CAAC,CAAC;YACH,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACpF,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEpF,MAAM,CAAC,eAAe,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\n\nsuite('ConfigurationRegistry', () => {\n\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\n\ttest('configuration override', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ 'config': { a: 1, b: 2 } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ '[lang]': { a: 2, c: 3 } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 1, b: 2 });\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, c: 3 });\n\t});\n\n\ttest('configuration override defaults - merges defaults', async () => {\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ '[lang]': { a: 1, b: 2 } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ '[lang]': { a: 2, c: 3 } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, b: 2, c: 3 });\n\t});\n\n\ttest('configuration defaults - overrides defaults', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ 'config': { a: 1, b: 2 } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ 'config': { a: 2, c: 3 } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 2, c: 3 });\n\t});\n});\n"]}