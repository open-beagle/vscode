{"version":3,"file":"inMemoryFilesystemProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/files/common/inMemoryFilesystemProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport * as resources from 'vs/base/common/resources';\nimport { FileChangeType, FileType, IWatchOptions, IStat, FileSystemProviderErrorCode, FileSystemProviderError, FileWriteOptions, IFileChange, FileDeleteOptions, FileSystemProviderCapabilities, FileOverwriteOptions, IFileSystemProviderWithFileReadWriteCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\n\nclass File implements IStat {\n\n\ttype: FileType.File;\n\tctime: number;\n\tmtime: number;\n\tsize: number;\n\n\tname: string;\n\tdata?: Uint8Array;\n\n\tconstructor(name: string) {\n\t\tthis.type = FileType.File;\n\t\tthis.ctime = Date.now();\n\t\tthis.mtime = Date.now();\n\t\tthis.size = 0;\n\t\tthis.name = name;\n\t}\n}\n\nclass Directory implements IStat {\n\n\ttype: FileType.Directory;\n\tctime: number;\n\tmtime: number;\n\tsize: number;\n\n\tname: string;\n\tentries: Map<string, File | Directory>;\n\n\tconstructor(name: string) {\n\t\tthis.type = FileType.Directory;\n\t\tthis.ctime = Date.now();\n\t\tthis.mtime = Date.now();\n\t\tthis.size = 0;\n\t\tthis.name = name;\n\t\tthis.entries = new Map();\n\t}\n}\n\nexport type Entry = File | Directory;\n\nexport class InMemoryFileSystemProvider extends Disposable implements IFileSystemProviderWithFileReadWriteCapability {\n\n\treadonly capabilities: FileSystemProviderCapabilities =\n\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t| FileSystemProviderCapabilities.PathCaseSensitive;\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\troot = new Directory('');\n\n\t// --- manage file metadata\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\treturn this._lookup(resource, false);\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\tconst entry = this._lookupAsDirectory(resource, false);\n\t\tlet result: [string, FileType][] = [];\n\t\tentry.entries.forEach((child, name) => result.push([name, child.type]));\n\t\treturn result;\n\t}\n\n\t// --- manage file contents\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst data = this._lookupAsFile(resource, false).data;\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\tthrow new FileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet basename = resources.basename(resource);\n\t\tlet parent = this._lookupParentDirectory(resource);\n\t\tlet entry = parent.entries.get(basename);\n\t\tif (entry instanceof Directory) {\n\t\t\tthrow new FileSystemProviderError('file is directory', FileSystemProviderErrorCode.FileIsADirectory);\n\t\t}\n\t\tif (!entry && !opts.create) {\n\t\t\tthrow new FileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n\t\t}\n\t\tif (entry && opts.create && !opts.overwrite) {\n\t\t\tthrow new FileSystemProviderError('file exists already', FileSystemProviderErrorCode.FileExists);\n\t\t}\n\t\tif (!entry) {\n\t\t\tentry = new File(basename);\n\t\t\tparent.entries.set(basename, entry);\n\t\t\tthis._fireSoon({ type: FileChangeType.ADDED, resource });\n\t\t}\n\t\tentry.mtime = Date.now();\n\t\tentry.size = content.byteLength;\n\t\tentry.data = content;\n\n\t\tthis._fireSoon({ type: FileChangeType.UPDATED, resource });\n\t}\n\n\t// --- manage files/folders\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tif (!opts.overwrite && this._lookup(to, true)) {\n\t\t\tthrow new FileSystemProviderError('file exists already', FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\tlet entry = this._lookup(from, false);\n\t\tlet oldParent = this._lookupParentDirectory(from);\n\n\t\tlet newParent = this._lookupParentDirectory(to);\n\t\tlet newName = resources.basename(to);\n\n\t\toldParent.entries.delete(entry.name);\n\t\tentry.name = newName;\n\t\tnewParent.entries.set(newName, entry);\n\n\t\tthis._fireSoon(\n\t\t\t{ type: FileChangeType.DELETED, resource: from },\n\t\t\t{ type: FileChangeType.ADDED, resource: to }\n\t\t);\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\tlet dirname = resources.dirname(resource);\n\t\tlet basename = resources.basename(resource);\n\t\tlet parent = this._lookupAsDirectory(dirname, false);\n\t\tif (parent.entries.has(basename)) {\n\t\t\tparent.entries.delete(basename);\n\t\t\tparent.mtime = Date.now();\n\t\t\tparent.size -= 1;\n\t\t\tthis._fireSoon({ type: FileChangeType.UPDATED, resource: dirname }, { resource, type: FileChangeType.DELETED });\n\t\t}\n\t}\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\tlet basename = resources.basename(resource);\n\t\tlet dirname = resources.dirname(resource);\n\t\tlet parent = this._lookupAsDirectory(dirname, false);\n\n\t\tlet entry = new Directory(basename);\n\t\tparent.entries.set(entry.name, entry);\n\t\tparent.mtime = Date.now();\n\t\tparent.size += 1;\n\t\tthis._fireSoon({ type: FileChangeType.UPDATED, resource: dirname }, { type: FileChangeType.ADDED, resource });\n\t}\n\n\t// --- lookup\n\n\tprivate _lookup(uri: URI, silent: false): Entry;\n\tprivate _lookup(uri: URI, silent: boolean): Entry | undefined;\n\tprivate _lookup(uri: URI, silent: boolean): Entry | undefined {\n\t\tlet parts = uri.path.split('/');\n\t\tlet entry: Entry = this.root;\n\t\tfor (const part of parts) {\n\t\t\tif (!part) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet child: Entry | undefined;\n\t\t\tif (entry instanceof Directory) {\n\t\t\t\tchild = entry.entries.get(part);\n\t\t\t}\n\t\t\tif (!child) {\n\t\t\t\tif (!silent) {\n\t\t\t\t\tthrow new FileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry = child;\n\t\t}\n\t\treturn entry;\n\t}\n\n\tprivate _lookupAsDirectory(uri: URI, silent: boolean): Directory {\n\t\tlet entry = this._lookup(uri, silent);\n\t\tif (entry instanceof Directory) {\n\t\t\treturn entry;\n\t\t}\n\t\tthrow new FileSystemProviderError('file not a directory', FileSystemProviderErrorCode.FileNotADirectory);\n\t}\n\n\tprivate _lookupAsFile(uri: URI, silent: boolean): File {\n\t\tlet entry = this._lookup(uri, silent);\n\t\tif (entry instanceof File) {\n\t\t\treturn entry;\n\t\t}\n\t\tthrow new FileSystemProviderError('file is a directory', FileSystemProviderErrorCode.FileIsADirectory);\n\t}\n\n\tprivate _lookupParentDirectory(uri: URI): Directory {\n\t\tconst dirname = resources.dirname(uri);\n\t\treturn this._lookupAsDirectory(dirname, false);\n\t}\n\n\t// --- manage file events\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChangeFile.event;\n\n\tprivate _bufferedChanges: IFileChange[] = [];\n\tprivate _fireSoonHandle?: any;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\t// ignore, fires for all changes...\n\t\treturn Disposable.None;\n\t}\n\n\tprivate _fireSoon(...changes: IFileChange[]): void {\n\t\tthis._bufferedChanges.push(...changes);\n\n\t\tif (this._fireSoonHandle) {\n\t\t\tclearTimeout(this._fireSoonHandle);\n\t\t}\n\n\t\tthis._fireSoonHandle = setTimeout(() => {\n\t\t\tthis._onDidChangeFile.fire(this._bufferedChanges);\n\t\t\tthis._bufferedChanges.length = 0;\n\t\t}, 5);\n\t}\n}\n"]}