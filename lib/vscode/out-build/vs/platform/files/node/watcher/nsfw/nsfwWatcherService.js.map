{"version":3,"file":"nsfwWatcherService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/files/node/watcher/nsfw/nsfwWatcherService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nsfw from 'nsfw';\nimport * as glob from 'vs/base/common/glob';\nimport { join } from 'vs/base/common/path';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { IWatcherService, IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nconst nsfwActionToRawChangeType: { [key: number]: number } = [];\nnsfwActionToRawChangeType[nsfw.actions.CREATED] = FileChangeType.ADDED;\nnsfwActionToRawChangeType[nsfw.actions.MODIFIED] = FileChangeType.UPDATED;\nnsfwActionToRawChangeType[nsfw.actions.DELETED] = FileChangeType.DELETED;\n\ninterface IWatcherObjet {\n\tstart(): void;\n\tstop(): void;\n}\n\ninterface IPathWatcher {\n\tready: Promise<IWatcherObjet>;\n\twatcher?: IWatcherObjet;\n\tignored: glob.ParsedPattern[];\n}\n\nexport class NsfwWatcherService extends Disposable implements IWatcherService {\n\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage: Event<ILogMessage> = this._onDidLogMessage.event;\n\n\tprivate pathWatchers: { [watchPath: string]: IPathWatcher } = {};\n\tprivate verboseLogging: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tasync setRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\tconst normalizedRoots = this._normalizeRoots(roots);\n\n\t\t// Gather roots that are not currently being watched\n\t\tconst rootsToStartWatching = normalizedRoots.filter(r => {\n\t\t\treturn !(r.path in this.pathWatchers);\n\t\t});\n\n\t\t// Gather current roots that don't exist in the new roots array\n\t\tconst rootsToStopWatching = Object.keys(this.pathWatchers).filter(r => {\n\t\t\treturn normalizedRoots.every(normalizedRoot => normalizedRoot.path !== r);\n\t\t});\n\n\t\t// Logging\n\t\tthis.debug(`Start watching: [${rootsToStartWatching.map(r => r.path).join(',')}]\\nStop watching: [${rootsToStopWatching.join(',')}]`);\n\n\t\t// Stop watching some roots\n\t\trootsToStopWatching.forEach(root => {\n\t\t\tthis.pathWatchers[root].ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[root];\n\t\t});\n\n\t\t// Start watching some roots\n\t\trootsToStartWatching.forEach(root => this.doWatch(root));\n\n\t\t// Refresh ignored arrays in case they changed\n\t\troots.forEach(root => {\n\t\t\tif (root.path in this.pathWatchers) {\n\t\t\t\tthis.pathWatchers[root.path].ignored = Array.isArray(root.excludes) ? root.excludes.map(ignored => glob.parse(ignored)) : [];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWatch(request: IWatcherRequest): void {\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tconst fileEventDelayer = new ThrottledDelayer<void>(NsfwWatcherService.FS_EVENT_DELAY);\n\n\t\tlet readyPromiseResolve: (watcher: IWatcherObjet) => void;\n\t\tthis.pathWatchers[request.path] = {\n\t\t\tready: new Promise<IWatcherObjet>(resolve => readyPromiseResolve = resolve),\n\t\t\tignored: Array.isArray(request.excludes) ? request.excludes.map(ignored => glob.parse(ignored)) : []\n\t\t};\n\n\t\tprocess.on('uncaughtException', (e: Error | string) => {\n\n\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t// we are running into a limit. We only want to warn\n\t\t\t// once in this case to avoid log spam.\n\t\t\t// See https://github.com/microsoft/vscode/issues/7950\n\t\t\tif (e === 'Inotify limit reached' && !this.enospcErrorLogged) {\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t}\n\t\t});\n\n\t\t// NSFW does not report file changes in the path provided on macOS if\n\t\t// - the path uses wrong casing\n\t\t// - the path is a symbolic link\n\t\t// We have to detect this case and massage the events to correct this.\n\t\tlet realBasePathDiffers = false;\n\t\tlet realBasePathLength = request.path.length;\n\t\tif (isMacintosh) {\n\t\t\ttry {\n\n\t\t\t\t// First check for symbolic link\n\t\t\t\tlet realBasePath = realpathSync(request.path);\n\n\t\t\t\t// Second check for casing difference\n\t\t\t\tif (request.path === realBasePath) {\n\t\t\t\t\trealBasePath = (realcaseSync(request.path) || request.path);\n\t\t\t\t}\n\n\t\t\t\tif (request.path !== realBasePath) {\n\t\t\t\t\trealBasePathLength = realBasePath.length;\n\t\t\t\t\trealBasePathDiffers = true;\n\n\t\t\t\t\tthis.warn(`Watcher basePath does not match version on disk and will be corrected (original: ${request.path}, real: ${realBasePath})`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\tthis.debug(`Start watching with nsfw: ${request.path}`);\n\n\t\tnsfw(request.path, events => {\n\t\t\tfor (const e of events) {\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tconst logPath = e.action === nsfw.actions.RENAMED ? join(e.directory, e.oldFile || '') + ' -> ' + e.newFile : join(e.directory, e.file || '');\n\t\t\t\t\tthis.log(`${e.action === nsfw.actions.CREATED ? '[CREATED]' : e.action === nsfw.actions.DELETED ? '[DELETED]' : e.action === nsfw.actions.MODIFIED ? '[CHANGED]' : '[RENAMED]'} ${logPath}`);\n\t\t\t\t}\n\n\t\t\t\t// Convert nsfw event to IRawFileChange and add to queue\n\t\t\t\tlet absolutePath: string;\n\t\t\t\tif (e.action === nsfw.actions.RENAMED) {\n\t\t\t\t\t// Rename fires when a file's name changes within a single directory\n\t\t\t\t\tabsolutePath = join(e.directory, e.oldFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.DELETED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t\tabsolutePath = join(e.newDirectory || e.directory, e.newFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.ADDED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tabsolutePath = join(e.directory, e.file || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({\n\t\t\t\t\t\t\ttype: nsfwActionToRawChangeType[e.action],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delay and send buffer\n\t\t\tfileEventDelayer.trigger(async () => {\n\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tevents.forEach(e => {\n\n\t\t\t\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\te.path = normalizeNFC(e.path);\n\n\t\t\t\t\t\t// Convert paths back to original form in case it differs\n\t\t\t\t\t\tif (realBasePathDiffers) {\n\t\t\t\t\t\t\te.path = request.path + e.path.substr(realBasePathLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Broadcast to clients normalized\n\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\tthis._onDidChangeFile.fire(res);\n\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\tthis.log(` >> normalized ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(watcher => {\n\t\t\tthis.pathWatchers[request.path].watcher = watcher;\n\t\t\tconst startPromise = watcher.start();\n\t\t\tstartPromise.then(() => readyPromiseResolve(watcher));\n\n\t\t\treturn startPromise;\n\t\t});\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (let path in this.pathWatchers) {\n\t\t\tlet watcher = this.pathWatchers[path];\n\t\t\twatcher.ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[path];\n\t\t}\n\n\t\tthis.pathWatchers = Object.create(null);\n\t}\n\n\tprotected _normalizeRoots(roots: IWatcherRequest[]): IWatcherRequest[] {\n\t\t// Normalizes a set of root paths by removing any root paths that are\n\t\t// sub-paths of other roots.\n\t\treturn roots.filter(r => roots.every(other => {\n\t\t\treturn !(r.path.length > other.path.length && isEqualOrParent(r.path, other.path));\n\t\t}));\n\t}\n\n\tprivate isPathIgnored(absolutePath: string, ignored: glob.ParsedPattern[]): boolean {\n\t\treturn ignored && ignored.some(i => i(absolutePath));\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'trace', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'error', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate debug(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'debug', message: `[File Watcher (nsfw)] ` + message });\n\t}\n}\n"]}