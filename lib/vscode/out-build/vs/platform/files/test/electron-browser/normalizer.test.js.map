{"version":3,"file":"normalizer.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/files/test/electron-browser/normalizer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as platform from 'vs/base/common/platform';\nimport { FileChangeType, FileChangesEvent } from 'vs/platform/files/common/files';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IDiskFileChange, normalizeFileChanges, toFileChanges } from 'vs/platform/files/node/watcher/watcher';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nfunction toFileChangesEvent(changes: IDiskFileChange[]): FileChangesEvent {\n\treturn new FileChangesEvent(toFileChanges(changes), !platform.isLinux);\n}\n\nclass TestFileWatcher {\n\tprivate readonly _onDidFilesChange: Emitter<FileChangesEvent>;\n\n\tconstructor() {\n\t\tthis._onDidFilesChange = new Emitter<FileChangesEvent>();\n\t}\n\n\tget onDidFilesChange(): Event<FileChangesEvent> {\n\t\treturn this._onDidFilesChange.event;\n\t}\n\n\treport(changes: IDiskFileChange[]): void {\n\t\tthis.onRawFileEvents(changes);\n\t}\n\n\tprivate onRawFileEvents(events: IDiskFileChange[]): void {\n\n\t\t// Normalize\n\t\tlet normalizedEvents = normalizeFileChanges(events);\n\n\t\t// Emit through event emitter\n\t\tif (normalizedEvents.length > 0) {\n\t\t\tthis._onDidFilesChange.fire(toFileChangesEvent(normalizedEvents));\n\t\t}\n\t}\n}\n\nenum Path {\n\tUNIX,\n\tWINDOWS,\n\tUNC\n}\n\nsuite('Normalizer', () => {\n\n\ttest('simple add/update/delete', function (done: () => void) {\n\t\tconst watch = new TestFileWatcher();\n\n\t\tconst added = uri.file('/users/data/src/added.txt');\n\t\tconst updated = uri.file('/users/data/src/updated.txt');\n\t\tconst deleted = uri.file('/users/data/src/deleted.txt');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: added.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t];\n\n\t\twatch.onDidFilesChange(e => {\n\t\t\tassert.ok(e);\n\t\t\tassert.strictEqual(e.changes.length, 3);\n\t\t\tassert.ok(e.contains(added, FileChangeType.ADDED));\n\t\t\tassert.ok(e.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.DELETED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\tlet pathSpecs = platform.isWindows ? [Path.WINDOWS, Path.UNC] : [Path.UNIX];\n\tpathSpecs.forEach((p) => {\n\t\ttest('delete only reported for top level folder (' + p + ')', function (done: () => void) {\n\t\t\tconst watch = new TestFileWatcher();\n\n\t\t\tconst deletedFolderA = uri.file(p === Path.UNIX ? '/users/data/src/todelete1' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete1' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete1');\n\t\t\tconst deletedFolderB = uri.file(p === Path.UNIX ? '/users/data/src/todelete2' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2');\n\t\t\tconst deletedFolderBF1 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/file.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt');\n\t\t\tconst deletedFolderBF2 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/more/test.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt');\n\t\t\tconst deletedFolderBF3 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/super/bar/foo.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt');\n\t\t\tconst deletedFileA = uri.file(p === Path.UNIX ? '/users/data/src/deleteme.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\deleteme.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\deleteme.txt');\n\n\t\t\tconst addedFile = uri.file(p === Path.UNIX ? '/users/data/src/added.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\added.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\added.txt');\n\t\t\tconst updatedFile = uri.file(p === Path.UNIX ? '/users/data/src/updated.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\updated.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\updated.txt');\n\n\t\t\tconst raw: IDiskFileChange[] = [\n\t\t\t\t{ path: deletedFolderA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderB.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF1.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF2.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF3.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFileA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: addedFile.fsPath, type: FileChangeType.ADDED },\n\t\t\t\t{ path: updatedFile.fsPath, type: FileChangeType.UPDATED }\n\t\t\t];\n\n\t\t\twatch.onDidFilesChange(e => {\n\t\t\t\tassert.ok(e);\n\t\t\t\tassert.strictEqual(e.changes.length, 5);\n\n\t\t\t\tassert.ok(e.contains(deletedFolderA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(deletedFolderB, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(deletedFileA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(addedFile, FileChangeType.ADDED));\n\t\t\t\tassert.ok(e.contains(updatedFile, FileChangeType.UPDATED));\n\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\twatch.report(raw);\n\t\t});\n\t});\n\n\ttest('event normalization: ignore CREATE followed by DELETE', function (done: () => void) {\n\t\tconst watch = new TestFileWatcher();\n\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\twatch.onDidFilesChange(e => {\n\t\t\tassert.ok(e);\n\t\t\tassert.strictEqual(e.changes.length, 1);\n\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event normalization: flatten DELETE followed by CREATE into CHANGE', function (done: () => void) {\n\t\tconst watch = new TestFileWatcher();\n\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\twatch.onDidFilesChange(e => {\n\t\t\tassert.ok(e);\n\t\t\tassert.strictEqual(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event normalization: ignore UPDATE when CREATE received', function (done: () => void) {\n\t\tconst watch = new TestFileWatcher();\n\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst updated = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\twatch.onDidFilesChange(e => {\n\t\t\tassert.ok(e);\n\t\t\tassert.strictEqual(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(created, FileChangeType.ADDED));\n\t\t\tassert.ok(!e.contains(created, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event normalization: apply DELETE', function (done: () => void) {\n\t\tconst watch = new TestFileWatcher();\n\n\t\tconst updated = uri.file('/users/data/src/related');\n\t\tconst updated2 = uri.file('/users/data/src/related');\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated2.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.DELETED }\n\t\t];\n\n\t\twatch.onDidFilesChange(e => {\n\t\t\tassert.ok(e);\n\t\t\tassert.strictEqual(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.DELETED));\n\t\t\tassert.ok(!e.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n});\n"]}