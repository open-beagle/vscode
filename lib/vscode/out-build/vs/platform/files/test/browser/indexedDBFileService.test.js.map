{"version":3,"file":"indexedDBFileService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/files/test/browser/indexedDBFileService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FileSystemProviderErrorCode, FileType, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IIndexedDBFileSystemProvider, IndexedDB, INDEXEDDB_LOGS_OBJECT_STORE, INDEXEDDB_USERDATA_OBJECT_STORE } from 'vs/platform/files/browser/indexedDBFileSystemProvider';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { basename, joinPath } from 'vs/base/common/resources';\nimport { bufferToReadable, bufferToStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\n\nsuite('IndexedDB File Service', function () {\n\n\t// IDB sometimes under pressure in build machines.\n\tthis.retries(3);\n\n\tconst logSchema = 'logs';\n\n\tlet service: FileService;\n\tlet logFileProvider: IIndexedDBFileSystemProvider;\n\tlet userdataFileProvider: IIndexedDBFileSystemProvider;\n\tconst testDir = '/';\n\n\tconst logfileURIFromPaths = (paths: string[]) => joinPath(URI.from({ scheme: logSchema, path: testDir }), ...paths);\n\tconst userdataURIFromPaths = (paths: readonly string[]) => joinPath(URI.from({ scheme: Schemas.userData, path: testDir }), ...paths);\n\n\tconst disposables = new DisposableStore();\n\n\tconst initFixtures = async () => {\n\t\tawait Promise.all(\n\t\t\t[['fixtures', 'resolver', 'examples'],\n\t\t\t['fixtures', 'resolver', 'other', 'deep'],\n\t\t\t['fixtures', 'service', 'deep'],\n\t\t\t['batched']]\n\t\t\t\t.map(path => userdataURIFromPaths(path))\n\t\t\t\t.map(uri => service.createFolder(uri)));\n\t\tawait Promise.all(\n\t\t\t([\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'resolver', 'index.html'], '<p>p</p>'],\n\t\t\t\t[['fixtures', 'resolver', 'site.css'], '.p {color: red;}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'service', 'binary.txt'], '<p>p</p>'],\n\t\t\t] as const)\n\t\t\t\t.map(([path, contents]) => [userdataURIFromPaths(path), contents] as const)\n\t\t\t\t.map(([uri, contents]) => service.createFile(uri, VSBuffer.fromString(contents)))\n\t\t);\n\t};\n\n\tconst reload = async () => {\n\t\tconst logService = new NullLogService();\n\n\t\tservice = new FileService(logService);\n\t\tdisposables.add(service);\n\n\t\tlogFileProvider = assertIsDefined(await new IndexedDB().createFileSystemProvider(Schemas.file, INDEXEDDB_LOGS_OBJECT_STORE));\n\t\tdisposables.add(service.registerProvider(logSchema, logFileProvider));\n\t\tdisposables.add(logFileProvider);\n\n\t\tuserdataFileProvider = assertIsDefined(await new IndexedDB().createFileSystemProvider(logSchema, INDEXEDDB_USERDATA_OBJECT_STORE));\n\t\tdisposables.add(service.registerProvider(Schemas.userData, userdataFileProvider));\n\t\tdisposables.add(userdataFileProvider);\n\t};\n\n\tsetup(async function () {\n\t\tthis.timeout(15000);\n\t\tawait reload();\n\t});\n\n\tteardown(async () => {\n\t\tdisposables.clear();\n\t\tawait logFileProvider.delete(logfileURIFromPaths([]), { recursive: true, useTrash: false });\n\t\tawait userdataFileProvider.delete(userdataURIFromPaths([]), { recursive: true, useTrash: false });\n\t});\n\n\ttest('root is always present', async () => {\n\t\tassert.strictEqual((await userdataFileProvider.stat(userdataURIFromPaths([]))).type, FileType.Directory);\n\t\tawait userdataFileProvider.delete(userdataURIFromPaths([]), { recursive: true, useTrash: false });\n\t\tassert.strictEqual((await userdataFileProvider.stat(userdataURIFromPaths([]))).type, FileType.Directory);\n\t});\n\n\ttest('createFolder', async () => {\n\t\tlet event: FileOperationEvent | undefined;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst newFolderResource = joinPath(parent.resource, 'newFolder');\n\n\t\tassert.strictEqual((await userdataFileProvider.readdir(parent.resource)).length, 0);\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\t\tassert.strictEqual(newFolder.name, 'newFolder');\n\t\tassert.strictEqual((await userdataFileProvider.readdir(parent.resource)).length, 1);\n\t\tassert.strictEqual((await userdataFileProvider.stat(newFolderResource)).type, FileType.Directory);\n\n\t\tassert.ok(event);\n\t\tassert.strictEqual(event!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('createFolder: creating multiple folders at once', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst multiFolderPaths = ['a', 'couple', 'of', 'folders'];\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst newFolderResource = joinPath(parent.resource, ...multiFolderPaths);\n\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\n\t\tconst lastFolderName = multiFolderPaths[multiFolderPaths.length - 1];\n\t\tassert.strictEqual(newFolder.name, lastFolderName);\n\t\tassert.strictEqual((await userdataFileProvider.stat(newFolderResource)).type, FileType.Directory);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('exists', async () => {\n\t\tlet exists = await service.exists(userdataURIFromPaths([]));\n\t\tassert.strictEqual(exists, true);\n\n\t\texists = await service.exists(userdataURIFromPaths(['hello']));\n\t\tassert.strictEqual(exists, false);\n\t});\n\n\ttest('resolve - file', async () => {\n\t\tawait initFixtures();\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'resolver', 'index.html']);\n\t\tconst resolved = await service.resolve(resource);\n\n\t\tassert.strictEqual(resolved.name, 'index.html');\n\t\tassert.strictEqual(resolved.isFile, true);\n\t\tassert.strictEqual(resolved.isDirectory, false);\n\t\tassert.strictEqual(resolved.isSymbolicLink, false);\n\t\tassert.strictEqual(resolved.resource.toString(), resource.toString());\n\t\tassert.strictEqual(resolved.children, undefined);\n\t\tassert.ok(resolved.size! > 0);\n\t});\n\n\ttest('resolve - directory', async () => {\n\t\tawait initFixtures();\n\n\t\tconst testsElements = ['examples', 'other', 'index.html', 'site.css'];\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'resolver']);\n\t\tconst result = await service.resolve(resource);\n\n\t\tassert.ok(result);\n\t\tassert.strictEqual(result.resource.toString(), resource.toString());\n\t\tassert.strictEqual(result.name, 'resolver');\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result!.isDirectory);\n\t\tassert.strictEqual(result.children!.length, testsElements.length);\n\n\t\tassert.ok(result.children!.every(entry => {\n\t\t\treturn testsElements.some(name => {\n\t\t\t\treturn basename(entry.resource) === name;\n\t\t\t});\n\t\t}));\n\n\t\tresult.children!.forEach(value => {\n\t\t\tassert.ok(basename(value.resource));\n\t\t\tif (['examples', 'other'].indexOf(basename(value.resource)) >= 0) {\n\t\t\t\tassert.ok(value.isDirectory);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource) === 'index.html') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource) === 'site.css') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else {\n\t\t\t\tassert.ok(!'Unexpected value ' + basename(value.resource));\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('createFile', async () => {\n\t\treturn assertCreateFile(contents => VSBuffer.fromString(contents));\n\t});\n\n\ttest('createFile (readable)', async () => {\n\t\treturn assertCreateFile(contents => bufferToReadable(VSBuffer.fromString(contents)));\n\t});\n\n\ttest('createFile (stream)', async () => {\n\t\treturn assertCreateFile(contents => bufferToStream(VSBuffer.fromString(contents)));\n\t});\n\n\tasync function assertCreateFile(converter: (content: string) => VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst contents = 'Hello World';\n\t\tconst resource = userdataURIFromPaths(['test.txt']);\n\n\t\tassert.strictEqual(await service.canCreateFile(resource), true);\n\t\tconst fileStat = await service.createFile(resource, converter(contents));\n\t\tassert.strictEqual(fileStat.name, 'test.txt');\n\t\tassert.strictEqual((await userdataFileProvider.stat(fileStat.resource)).type, FileType.File);\n\t\tassert.strictEqual(new TextDecoder().decode(await userdataFileProvider.readFile(fileStat.resource)), contents);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, resource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, resource.path);\n\t}\n\n\tconst makeBatchTester = (size: number, name: string) => {\n\t\tconst batch = Array.from({ length: 50 }).map((_, i) => ({ contents: `Hello${i}`, resource: userdataURIFromPaths(['batched', name, `Hello${i}.txt`]) }));\n\t\tlet stats: Promise<IFileStatWithMetadata[]> | undefined = undefined;\n\t\treturn {\n\t\t\tasync create() {\n\t\t\t\treturn stats = Promise.all(batch.map(entry => service.createFile(entry.resource, VSBuffer.fromString(entry.contents))));\n\t\t\t},\n\t\t\tasync assertContentsCorrect() {\n\t\t\t\tawait Promise.all(batch.map(async (entry, i) => {\n\t\t\t\t\tif (!stats) { throw Error('read called before create'); }\n\t\t\t\t\tconst stat = (await stats!)[i];\n\t\t\t\t\tassert.strictEqual(stat.name, `Hello${i}.txt`);\n\t\t\t\t\tassert.strictEqual((await userdataFileProvider.stat(stat.resource)).type, FileType.File);\n\t\t\t\t\tassert.strictEqual(new TextDecoder().decode(await userdataFileProvider.readFile(stat.resource)), entry.contents);\n\t\t\t\t}));\n\t\t\t},\n\t\t\tasync delete() {\n\t\t\t\tawait service.del(userdataURIFromPaths(['batched', name]), { recursive: true, useTrash: false });\n\t\t\t},\n\t\t\tasync assertContentsEmpty() {\n\t\t\t\tif (!stats) { throw Error('assertContentsEmpty called before create'); }\n\t\t\t\tawait Promise.all((await stats).map(async stat => {\n\t\t\t\t\tconst newStat = await userdataFileProvider.stat(stat.resource).catch(e => e.code);\n\t\t\t\t\tassert.strictEqual(newStat, FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t}));\n\t\t\t}\n\t\t};\n\t};\n\n\ttest('createFile (small batch)', async () => {\n\t\tconst tester = makeBatchTester(50, 'smallBatch');\n\t\tawait tester.create();\n\t\tawait tester.assertContentsCorrect();\n\t\tawait tester.delete();\n\t\tawait tester.assertContentsEmpty();\n\t});\n\n\ttest('createFile (mixed parallel/sequential)', async () => {\n\t\tconst single1 = makeBatchTester(1, 'single1');\n\t\tconst single2 = makeBatchTester(1, 'single2');\n\n\t\tconst batch1 = makeBatchTester(20, 'batch1');\n\t\tconst batch2 = makeBatchTester(20, 'batch2');\n\n\t\tsingle1.create();\n\t\tbatch1.create();\n\t\tawait Promise.all([single1.assertContentsCorrect(), batch1.assertContentsCorrect()]);\n\t\tsingle2.create();\n\t\tbatch2.create();\n\t\tawait Promise.all([single2.assertContentsCorrect(), batch2.assertContentsCorrect()]);\n\t\tawait Promise.all([single1.assertContentsCorrect(), batch1.assertContentsCorrect()]);\n\n\t\tawait (Promise.all([single1.delete(), single2.delete(), batch1.delete(), batch2.delete()]));\n\t\tawait (Promise.all([single1.assertContentsEmpty(), single2.assertContentsEmpty(), batch1.assertContentsEmpty(), batch2.assertContentsEmpty()]));\n\t});\n\n\ttest('deleteFile', async () => {\n\t\tawait initFixtures();\n\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst anotherResource = userdataURIFromPaths(['fixtures', 'service', 'deep', 'company.js']);\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep', 'conway.js']);\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { useTrash: false }), true);\n\t\tawait service.del(source.resource, { useTrash: false });\n\n\t\tassert.strictEqual(await service.exists(source.resource), false);\n\t\tassert.strictEqual(await service.exists(anotherResource), true);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, resource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\n\t\t{\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait service.del(source.resource, { useTrash: false });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\t\tawait reload();\n\t\t{\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait service.del(source.resource, { useTrash: false });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\t});\n\n\ttest('deleteFolder (recursive)', async () => {\n\t\tawait initFixtures();\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep']);\n\t\tconst subResource1 = userdataURIFromPaths(['fixtures', 'service', 'deep', 'company.js']);\n\t\tconst subResource2 = userdataURIFromPaths(['fixtures', 'service', 'deep', 'conway.js']);\n\t\tassert.strictEqual(await service.exists(subResource1), true);\n\t\tassert.strictEqual(await service.exists(subResource2), true);\n\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { recursive: true, useTrash: false }), true);\n\t\tawait service.del(source.resource, { recursive: true, useTrash: false });\n\n\t\tassert.strictEqual(await service.exists(source.resource), false);\n\t\tassert.strictEqual(await service.exists(subResource1), false);\n\t\tassert.strictEqual(await service.exists(subResource2), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\t});\n\n\n\ttest('deleteFolder (non recursive)', async () => {\n\t\tawait initFixtures();\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep']);\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.ok((await service.canDelete(source.resource)) instanceof Error);\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.del(source.resource);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tassert.ok(error);\n\t});\n});\n"]}