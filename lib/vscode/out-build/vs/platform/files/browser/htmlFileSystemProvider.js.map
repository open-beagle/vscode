{"version":3,"file":"htmlFileSystemProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/files/browser/htmlFileSystemProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IFileSystemProviderWithFileReadWriteCapability, FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileOverwriteOptions, FileType, FileDeleteOptions, FileWriteOptions } from 'vs/platform/files/common/files';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { extUri } from 'vs/base/common/resources';\n\nfunction split(path: string): [string, string] | undefined {\n\tconst match = /^(.*)\\/([^/]+)$/.exec(path);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tconst [, parentPath, name] = match;\n\treturn [parentPath, name];\n}\n\nfunction getRootUUID(uri: URI): string | undefined {\n\tconst match = /^\\/([^/]+)\\/[^/]+\\/?$/.exec(uri.path);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\treturn match[1];\n}\n\nexport class HTMLFileSystemProvider implements IFileSystemProviderWithFileReadWriteCapability {\n\n\tprivate readonly files = new Map<string, FileSystemFileHandle>();\n\tprivate readonly directories = new Map<string, FileSystemDirectoryHandle>();\n\n\treadonly capabilities: FileSystemProviderCapabilities =\n\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t| FileSystemProviderCapabilities.PathCaseSensitive;\n\n\treadonly onDidChangeCapabilities = Event.None;\n\n\tprivate readonly _onDidChangeFile = new Emitter<readonly IFileChange[]>();\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidErrorOccur = new Emitter<string>();\n\treadonly onDidErrorOccur = this._onDidErrorOccur.event;\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst handle = await this.getFileHandle(resource);\n\n\t\tif (!handle) {\n\t\t\tthrow new Error('File not found.');\n\t\t}\n\n\t\tconst file = await handle.getFile();\n\t\treturn new Uint8Array(await file.arrayBuffer());\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tconst handle = await this.getFileHandle(resource);\n\n\t\tif (!handle) {\n\t\t\tthrow new Error('File not found.');\n\t\t}\n\n\t\tconst writable = await handle.createWritable();\n\t\tawait writable.write(content);\n\t\tawait writable.close();\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\tconst rootUUID = getRootUUID(resource);\n\n\t\tif (rootUUID) {\n\t\t\tconst fileHandle = this.files.get(rootUUID);\n\n\t\t\tif (fileHandle) {\n\t\t\t\tconst file = await fileHandle.getFile();\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\tmtime: file.lastModified,\n\t\t\t\t\tctime: 0,\n\t\t\t\t\tsize: file.size\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst directoryHandle = this.directories.get(rootUUID);\n\n\t\t\tif (directoryHandle) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: FileType.Directory,\n\t\t\t\t\tmtime: 0,\n\t\t\t\t\tctime: 0,\n\t\t\t\t\tsize: 0\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst parent = await this.getParentDirectoryHandle(resource);\n\n\t\tif (!parent) {\n\t\t\tthrow new Error('Stat error: no parent found');\n\t\t}\n\n\t\tconst name = extUri.basename(resource);\n\t\tfor await (const [childName, child] of parent) {\n\t\t\tif (childName === name) {\n\t\t\t\tif (child.kind === 'file') {\n\t\t\t\t\tconst file = await child.getFile();\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\t\tmtime: file.lastModified,\n\t\t\t\t\t\tctime: 0,\n\t\t\t\t\t\tsize: file.size\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: FileType.Directory,\n\t\t\t\t\t\tmtime: 0,\n\t\t\t\t\t\tctime: 0,\n\t\t\t\t\t\tsize: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Stat error: entry not found');\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\tconst parent = await this.getDirectoryHandle(resource);\n\n\t\tif (!parent) {\n\t\t\tthrow new Error('Stat error: no parent found');\n\t\t}\n\n\t\tconst result: [string, FileType][] = [];\n\n\t\tfor await (const [name, child] of parent) {\n\t\t\tresult.push([name, child.kind === 'file' ? FileType.File : FileType.Directory]);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\tthrow new Error('Method not implemented: delete');\n\t}\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tthrow new Error('Method not implemented: rename');\n\t}\n\n\tprivate async getDirectoryHandle(uri: URI): Promise<FileSystemDirectoryHandle | undefined> {\n\t\tconst rootUUID = getRootUUID(uri);\n\n\t\tif (rootUUID) {\n\t\t\treturn this.directories.get(rootUUID);\n\t\t}\n\n\t\tconst splitResult = split(uri.path);\n\n\t\tif (!splitResult) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst parent = await this.getDirectoryHandle(URI.from({ ...uri, path: splitResult[0] }));\n\t\treturn await parent?.getDirectoryHandle(extUri.basename(uri));\n\t}\n\n\tprivate async getParentDirectoryHandle(uri: URI): Promise<FileSystemDirectoryHandle | undefined> {\n\t\treturn this.getDirectoryHandle(URI.from({ ...uri, path: extUri.dirname(uri).path }));\n\t}\n\n\tprivate async getFileHandle(uri: URI): Promise<FileSystemFileHandle | undefined> {\n\t\tconst rootUUID = getRootUUID(uri);\n\n\t\tif (rootUUID) {\n\t\t\treturn this.files.get(rootUUID);\n\t\t}\n\n\t\tconst parent = await this.getParentDirectoryHandle(uri);\n\t\tconst name = extUri.basename(uri);\n\t\treturn await parent?.getFileHandle(name);\n\t}\n\n\tregisterFileHandle(uuid: string, handle: FileSystemFileHandle): void {\n\t\tthis.files.set(uuid, handle);\n\t}\n\n\tregisterDirectoryHandle(uuid: string, handle: FileSystemDirectoryHandle): void {\n\t\tthis.directories.set(uuid, handle);\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChangeFile.dispose();\n\t}\n}\n"]}