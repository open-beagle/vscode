{"version":3,"file":"appInsightsAppender.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/telemetry/test/electron-browser/appInsightsAppender.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { TelemetryClient, Contracts } from 'applicationinsights';\n\nclass AppInsightsMock extends TelemetryClient {\n\tpublic override config: any;\n\tpublic override channel: any;\n\tpublic events: Contracts.EventTelemetry[] = [];\n\tpublic IsTrackingPageView: boolean = false;\n\tpublic exceptions: any[] = [];\n\n\tconstructor() {\n\t\tsuper('testKey');\n\t}\n\n\tpublic override trackEvent(event: any) {\n\t\tthis.events.push(event);\n\t}\n\n\tpublic override flush(options: any): void {\n\t\t// called on dispose\n\t}\n}\n\nsuite('AIAdapter', () => {\n\tlet appInsightsMock: AppInsightsMock;\n\tlet adapter: AppInsightsAppender;\n\tlet prefix = 'prefix';\n\n\n\tsetup(() => {\n\t\tappInsightsMock = new AppInsightsMock();\n\t\tadapter = new AppInsightsAppender(prefix, undefined!, () => appInsightsMock);\n\t});\n\n\tteardown(() => {\n\t\tadapter.flush();\n\t});\n\n\ttest('Simple event', () => {\n\t\tadapter.log('testEvent');\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\t});\n\n\ttest('addional data', () => {\n\t\tadapter = new AppInsightsAppender(prefix, { first: '1st', second: 2, third: true }, () => appInsightsMock);\n\t\tadapter.log('testEvent');\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tlet [first] = appInsightsMock.events;\n\t\tassert.strictEqual(first.name, `${prefix}/testEvent`);\n\t\tassert.strictEqual(first.properties!['first'], '1st');\n\t\tassert.strictEqual(first.measurements!['second'], 2);\n\t\tassert.strictEqual(first.measurements!['third'], 1);\n\t});\n\n\ttest('property limits', () => {\n\t\tlet reallyLongPropertyName = 'abcdefghijklmnopqrstuvwxyz';\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\treallyLongPropertyName += 'abcdefghijklmnopqrstuvwxyz';\n\t\t}\n\t\tassert(reallyLongPropertyName.length > 150);\n\n\t\tlet reallyLongPropertyValue = 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\tfor (let i = 0; i < 21; i++) {\n\t\t\treallyLongPropertyValue += 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\t}\n\t\tassert(reallyLongPropertyValue.length > 1024);\n\n\t\tlet data = Object.create(null);\n\t\tdata[reallyLongPropertyName] = '1234';\n\t\tdata['reallyLongPropertyValue'] = reallyLongPropertyValue;\n\t\tadapter.log('testEvent', data);\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\n\t\tfor (let prop in appInsightsMock.events[0].properties!) {\n\t\t\tassert(prop.length < 150);\n\t\t\tassert(appInsightsMock.events[0].properties![prop].length < 1024);\n\t\t}\n\t});\n\n\ttest('Different data types', () => {\n\t\tlet date = new Date();\n\t\tadapter.log('testEvent', { favoriteDate: date, likeRed: false, likeBlue: true, favoriteNumber: 1, favoriteColor: 'blue', favoriteCars: ['bmw', 'audi', 'ford'] });\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteColor'], 'blue');\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['likeRed'], 0);\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['likeBlue'], 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteDate'], date.toISOString());\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteCars'], JSON.stringify(['bmw', 'audi', 'ford']));\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['favoriteNumber'], 1);\n\t});\n\n\ttest('Nested data', () => {\n\t\tadapter.log('testEvent', {\n\t\t\twindow: {\n\t\t\t\ttitle: 'some title',\n\t\t\t\tmeasurements: {\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 200\n\t\t\t\t}\n\t\t\t},\n\t\t\tnestedObj: {\n\t\t\t\tnestedObj2: {\n\t\t\t\t\tnestedObj3: {\n\t\t\t\t\t\ttestProperty: 'test',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttestMeasurement: 1\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['window.title'], 'some title');\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['window.measurements.width'], 100);\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['window.measurements.height'], 200);\n\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['nestedObj.nestedObj2.nestedObj3'], JSON.stringify({ 'testProperty': 'test' }));\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['nestedObj.testMeasurement'], 1);\n\t});\n\n});\n"]}