{"version":3,"file":"telemetryUtils.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/telemetry/common/telemetryUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData, ICustomEndpointTelemetryService, ITelemetryEndpoint } from 'vs/platform/telemetry/common/telemetry';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/common/async';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n};\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promises.settled(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n"]}