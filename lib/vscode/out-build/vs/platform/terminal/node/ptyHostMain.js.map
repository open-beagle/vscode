{"version":3,"file":"ptyHostMain.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/terminal/node/ptyHostMain.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAUhG,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,SAAS,CAAC,CAAC;IAErC,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,GAAG,CAAC,CAAC;IAClE,OAAO,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;IAEtC,MAAM,UAAU,GAAG,IAAI,gBAAU,CAAC,IAAI,mBAAa,EAAE,CAAC,CAAC;IACvD,MAAM,UAAU,GAAG,IAAI,wBAAe,CAAC,UAAU,CAAC,CAAC;IACnD,MAAM,CAAC,eAAe,CAAC,8BAAmB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAE5D,MAAM,gBAAgB,GAAG,IAAI,mCAAgB,EAAE,CAAC;IAChD,MAAM,CAAC,eAAe,CAAC,8BAAmB,CAAC,SAAS,EAAE,kBAAY,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAElG,MAAM,UAAU,GAAG,IAAI,uBAAU,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACzD,MAAM,CAAC,eAAe,CAAC,8BAAmB,CAAC,OAAO,EAAE,kBAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAE1F,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;QACzB,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC3B,UAAU,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { PtyService } from 'vs/platform/terminal/node/ptyService';\nimport { TerminalIpcChannels } from 'vs/platform/terminal/common/terminal';\nimport { ConsoleLogger, LogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { HeartbeatService } from 'vs/platform/terminal/node/heartbeatService';\n\nconst server = new Server('ptyHost');\n\nconst lastPtyId = parseInt(process.env.VSCODE_LAST_PTY_ID || '0');\ndelete process.env.VSCODE_LAST_PTY_ID;\n\nconst logService = new LogService(new ConsoleLogger());\nconst logChannel = new LogLevelChannel(logService);\nserver.registerChannel(TerminalIpcChannels.Log, logChannel);\n\nconst heartbeatService = new HeartbeatService();\nserver.registerChannel(TerminalIpcChannels.Heartbeat, ProxyChannel.fromService(heartbeatService));\n\nconst ptyService = new PtyService(lastPtyId, logService);\nserver.registerChannel(TerminalIpcChannels.PtyHost, ProxyChannel.fromService(ptyService));\n\nprocess.once('exit', () => {\n\tlogService.dispose();\n\theartbeatService.dispose();\n\tptyService.dispose();\n});\n"]}