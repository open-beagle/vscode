{"version":3,"file":"ptyHostService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/terminal/node/ptyHostService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IPtyService, IProcessDataEvent, IShellLaunchConfig, ITerminalDimensionsOverride, ITerminalLaunchError, ITerminalsLayoutInfo, TerminalIpcChannels, IHeartbeatService, HeartbeatConstants, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { Emitter } from 'vs/base/common/event';\nimport { LogLevelChannelClient } from 'vs/platform/log/common/logIpc';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nenum Constants {\n\tMaxRestarts = 5\n}\n\n/**\n * Tracks the last terminal ID from the pty host so we can give it to the new pty host if it's\n * restarted and avoid ID conflicts.\n */\nlet lastPtyId = 0;\n\n/**\n * This service implements IPtyService by launching a pty host process, forwarding messages to and\n * from the pty host process and manages the connection.\n */\nexport class PtyHostService extends Disposable implements IPtyService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _client: Client;\n\t// ProxyChannel is not used here because events get lost when forwarding across multiple proxies\n\tprivate _proxy: IPtyService;\n\n\tprivate _restartCount = 0;\n\tprivate _isResponsive = true;\n\tprivate _isDisposed = false;\n\n\tprivate _heartbeatFirstTimeout?: NodeJS.Timeout;\n\tprivate _heartbeatSecondTimeout?: NodeJS.Timeout;\n\n\tprivate readonly _onPtyHostExit = this._register(new Emitter<number>());\n\treadonly onPtyHostExit = this._onPtyHostExit.event;\n\tprivate readonly _onPtyHostStart = this._register(new Emitter<void>());\n\treadonly onPtyHostStart = this._onPtyHostStart.event;\n\tprivate readonly _onPtyHostUnresponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostUnresponsive = this._onPtyHostUnresponsive.event;\n\tprivate readonly _onPtyHostResponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostResponsive = this._onPtyHostResponsive.event;\n\tprivate readonly _onProcessData = this._register(new Emitter<{ id: number, event: IProcessDataEvent | string }>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<{ id: number, event: number | undefined }>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ id: number, event: { pid: number, cwd: string } }>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onProcessReplay = this._register(new Emitter<{ id: number, event: IPtyHostProcessReplayEvent }>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessTitleChanged = this._register(new Emitter<{ id: number, event: string }>());\n\treadonly onProcessTitleChanged = this._onProcessTitleChanged.event;\n\tprivate readonly _onProcessShellTypeChanged = this._register(new Emitter<{ id: number, event: TerminalShellType }>());\n\treadonly onProcessShellTypeChanged = this._onProcessShellTypeChanged.event;\n\tprivate readonly _onProcessOverrideDimensions = this._register(new Emitter<{ id: number, event: ITerminalDimensionsOverride | undefined }>());\n\treadonly onProcessOverrideDimensions = this._onProcessOverrideDimensions.event;\n\tprivate readonly _onProcessResolvedShellLaunchConfig = this._register(new Emitter<{ id: number, event: IShellLaunchConfig }>());\n\treadonly onProcessResolvedShellLaunchConfig = this._onProcessResolvedShellLaunchConfig.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<{ id: number }>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => this._disposePtyHost()));\n\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _startPtyHost(): [Client, IPtyService] {\n\t\tconst client = new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'Pty Host',\n\t\t\t\targs: ['--type=ptyHost'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_LAST_PTY_ID: lastPtyId,\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/terminal/node/ptyHostMain',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tthis._onPtyHostStart.fire();\n\n\t\t// Setup heartbeat service and trigger a heartbeat immediately to reset the timeouts\n\t\tconst heartbeatService = ProxyChannel.toService<IHeartbeatService>(client.getChannel(TerminalIpcChannels.Heartbeat));\n\t\theartbeatService.onBeat(() => this._handleHeartbeat());\n\t\tthis._handleHeartbeat();\n\n\t\t// Handle exit\n\t\tthis._register(client.onDidProcessExit(e => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/exit\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/exit');\n\t\t\tthis._onPtyHostExit.fire(e.code);\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tif (this._restartCount <= Constants.MaxRestarts) {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}`);\n\t\t\t\t\tthis._restartCount++;\n\t\t\t\t\tthis.restartPtyHost();\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}, giving up`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Setup logging\n\t\tconst logChannel = client.getChannel(TerminalIpcChannels.Log);\n\t\tthis._register(this._logService.onDidChangeLogLevel(() => {\n\t\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\t}));\n\n\t\t// Create proxy and forward events\n\t\tconst proxy = ProxyChannel.toService<IPtyService>(client.getChannel(TerminalIpcChannels.PtyHost));\n\t\tthis._register(proxy.onProcessData(e => this._onProcessData.fire(e)));\n\t\tthis._register(proxy.onProcessExit(e => this._onProcessExit.fire(e)));\n\t\tthis._register(proxy.onProcessReady(e => this._onProcessReady.fire(e)));\n\t\tthis._register(proxy.onProcessTitleChanged(e => this._onProcessTitleChanged.fire(e)));\n\t\tthis._register(proxy.onProcessShellTypeChanged(e => this._onProcessShellTypeChanged.fire(e)));\n\t\tthis._register(proxy.onProcessOverrideDimensions(e => this._onProcessOverrideDimensions.fire(e)));\n\t\tthis._register(proxy.onProcessResolvedShellLaunchConfig(e => this._onProcessResolvedShellLaunchConfig.fire(e)));\n\t\tthis._register(proxy.onProcessReplay(e => this._onProcessReplay.fire(e)));\n\t\tthis._register(proxy.onProcessOrphanQuestion(e => this._onProcessOrphanQuestion.fire(e)));\n\n\t\treturn [client, proxy];\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tasync createProcess(shellLaunchConfig: IShellLaunchConfig, cwd: string, cols: number, rows: number, env: IProcessEnvironment, executableEnv: IProcessEnvironment, windowsEnableConpty: boolean, shouldPersist: boolean, workspaceId: string, workspaceName: string): Promise<number> {\n\t\tconst timeout = setTimeout(() => this._handleUnresponsiveCreateProcess(), HeartbeatConstants.CreateProcessTimeout);\n\t\tconst id = await this._proxy.createProcess(shellLaunchConfig, cwd, cols, rows, env, executableEnv, windowsEnableConpty, shouldPersist, workspaceId, workspaceName);\n\t\tclearTimeout(timeout);\n\t\tlastPtyId = Math.max(lastPtyId, id);\n\t\treturn id;\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._proxy.attachToProcess(id);\n\t}\n\tdetachFromProcess(id: number): Promise<void> {\n\t\treturn this._proxy.detachFromProcess(id);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._proxy.listProcesses();\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._proxy.reduceConnectionGraceTime();\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._proxy.start(id);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._proxy.shutdown(id, immediate);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.input(id, data);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.processBinary(id, data);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._proxy.resize(id, cols, rows);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._proxy.acknowledgeDataEvent(id, charCount);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getInitialCwd(id);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getCwd(id);\n\t}\n\tgetLatency(id: number): Promise<number> {\n\t\treturn this._proxy.getLatency(id);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._proxy.orphanQuestionReply(id);\n\t}\n\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._proxy.getDefaultSystemShell(osOverride);\n\t}\n\tgetShellEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._proxy.getShellEnvironment();\n\t}\n\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void> {\n\t\treturn this._proxy.setTerminalLayoutInfo(args);\n\t}\n\tasync getTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined> {\n\t\treturn await this._proxy.getTerminalLayoutInfo(args);\n\t}\n\n\tasync restartPtyHost(): Promise<void> {\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/restart\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/restart');\n\t\tthis._isResponsive = true;\n\t\tthis._disposePtyHost();\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _disposePtyHost(): void {\n\t\tif (this._proxy.shutdownAll) {\n\t\t\tthis._proxy.shutdownAll();\n\t\t}\n\t\tthis._client.dispose();\n\t}\n\n\tprivate _handleHeartbeat() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._heartbeatFirstTimeout = setTimeout(() => this._handleHeartbeatFirstTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier);\n\t\tif (!this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\t\tthis._isResponsive = true;\n\t\t}\n\t\tthis._onPtyHostResponsive.fire();\n\t}\n\n\tprivate _handleHeartbeatFirstTimeout() {\n\t\tthis._logService.warn(`No ptyHost heartbeat after ${HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier / 1000} seconds`);\n\t\tthis._heartbeatFirstTimeout = undefined;\n\t\tthis._heartbeatSecondTimeout = setTimeout(() => this._handleHeartbeatSecondTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.SecondWaitMultiplier);\n\t}\n\n\tprivate _handleHeartbeatSecondTimeout() {\n\t\tthis._logService.error(`No ptyHost heartbeat after ${(HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier + HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier) / 1000} seconds`);\n\t\tthis._heartbeatSecondTimeout = undefined;\n\t\tif (this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/unresponsive');\n\t\t\tthis._isResponsive = false;\n\t\t}\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _handleUnresponsiveCreateProcess() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._logService.error(`No ptyHost response to createProcess after ${HeartbeatConstants.CreateProcessTimeout / 1000} seconds`);\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/responsive\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _clearHeartbeatTimeouts() {\n\t\tif (this._heartbeatFirstTimeout) {\n\t\t\tclearTimeout(this._heartbeatFirstTimeout);\n\t\t\tthis._heartbeatFirstTimeout = undefined;\n\t\t}\n\t\tif (this._heartbeatSecondTimeout) {\n\t\t\tclearTimeout(this._heartbeatSecondTimeout);\n\t\t\tthis._heartbeatSecondTimeout = undefined;\n\t\t}\n\t}\n}\n"]}