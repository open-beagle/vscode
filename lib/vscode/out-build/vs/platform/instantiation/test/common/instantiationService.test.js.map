{"version":3,"file":"instantiationService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/instantiation/test/common/instantiationService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { createDecorator, IInstantiationService, optional, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\n\nlet IService1 = createDecorator<IService1>('service1');\n\ninterface IService1 {\n\treadonly _serviceBrand: undefined;\n\tc: number;\n}\n\nclass Service1 implements IService1 {\n\tdeclare readonly _serviceBrand: undefined;\n\tc = 1;\n}\n\nlet IService2 = createDecorator<IService2>('service2');\n\ninterface IService2 {\n\treadonly _serviceBrand: undefined;\n\td: boolean;\n}\n\nclass Service2 implements IService2 {\n\tdeclare readonly _serviceBrand: undefined;\n\td = true;\n}\n\nlet IService3 = createDecorator<IService3>('service3');\n\ninterface IService3 {\n\treadonly _serviceBrand: undefined;\n\ts: string;\n}\n\nclass Service3 implements IService3 {\n\tdeclare readonly _serviceBrand: undefined;\n\ts = 'farboo';\n}\n\nlet IDependentService = createDecorator<IDependentService>('dependentService');\n\ninterface IDependentService {\n\treadonly _serviceBrand: undefined;\n\tname: string;\n}\n\nclass DependentService implements IDependentService {\n\tdeclare readonly _serviceBrand: undefined;\n\tconstructor(@IService1 service: IService1) {\n\t\tassert.strictEqual(service.c, 1);\n\t}\n\n\tname = 'farboo';\n}\n\nclass Service1Consumer {\n\n\tconstructor(@IService1 service1: IService1) {\n\t\tassert.ok(service1);\n\t\tassert.strictEqual(service1.c, 1);\n\t}\n}\n\nclass Target2Dep {\n\n\tconstructor(@IService1 service1: IService1, @IService2 service2: Service2) {\n\t\tassert.ok(service1 instanceof Service1);\n\t\tassert.ok(service2 instanceof Service2);\n\t}\n}\n\nclass TargetWithStaticParam {\n\tconstructor(v: boolean, @IService1 service1: IService1) {\n\t\tassert.ok(v);\n\t\tassert.ok(service1);\n\t\tassert.strictEqual(service1.c, 1);\n\t}\n}\n\nclass TargetNotOptional {\n\tconstructor(@IService1 service1: IService1, @IService2 service2: IService2) {\n\n\t}\n}\nclass TargetOptional {\n\tconstructor(@IService1 service1: IService1, @optional(IService2) service2: IService2) {\n\t\tassert.ok(service1);\n\t\tassert.strictEqual(service1.c, 1);\n\t\tassert.ok(service2 === undefined);\n\t}\n}\n\nclass DependentServiceTarget {\n\tconstructor(@IDependentService d: IDependentService) {\n\t\tassert.ok(d);\n\t\tassert.strictEqual(d.name, 'farboo');\n\t}\n}\n\nclass DependentServiceTarget2 {\n\tconstructor(@IDependentService d: IDependentService, @IService1 s: IService1) {\n\t\tassert.ok(d);\n\t\tassert.strictEqual(d.name, 'farboo');\n\t\tassert.ok(s);\n\t\tassert.strictEqual(s.c, 1);\n\t}\n}\n\n\nclass ServiceLoop1 implements IService1 {\n\tdeclare readonly _serviceBrand: undefined;\n\tc = 1;\n\n\tconstructor(@IService2 s: IService2) {\n\n\t}\n}\n\nclass ServiceLoop2 implements IService2 {\n\tdeclare readonly _serviceBrand: undefined;\n\td = true;\n\n\tconstructor(@IService1 s: IService1) {\n\n\t}\n}\n\nsuite('Instantiation Service', () => {\n\n\ttest('service collection, cannot overwrite', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet result = collection.set(IService1, null!);\n\t\tassert.strictEqual(result, undefined);\n\t\tresult = collection.set(IService1, new Service1());\n\t\tassert.strictEqual(result, null);\n\t});\n\n\ttest('service collection, add/has', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tcollection.set(IService1, null!);\n\t\tassert.ok(collection.has(IService1));\n\n\t\tcollection.set(IService2, null!);\n\t\tassert.ok(collection.has(IService1));\n\t\tassert.ok(collection.has(IService2));\n\t});\n\n\ttest('@Param - simple clase', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\t\tcollection.set(IService3, new Service3());\n\n\t\tservice.createInstance(Service1Consumer);\n\t});\n\n\ttest('@Param - fixed args', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\t\tcollection.set(IService3, new Service3());\n\n\t\tservice.createInstance(TargetWithStaticParam, true);\n\t});\n\n\ttest('service collection is live', function () {\n\n\t\tlet collection = new ServiceCollection();\n\t\tcollection.set(IService1, new Service1());\n\n\t\tlet service = new InstantiationService(collection);\n\t\tservice.createInstance(Service1Consumer);\n\n\t\t// no IService2\n\t\tassert.throws(() => service.createInstance(Target2Dep));\n\t\tservice.invokeFunction(function (a) {\n\t\t\tassert.ok(a.get(IService1));\n\t\t\tassert.ok(!a.get(IService2, optional));\n\t\t});\n\n\t\tcollection.set(IService2, new Service2());\n\n\t\tservice.createInstance(Target2Dep);\n\t\tservice.invokeFunction(function (a) {\n\t\t\tassert.ok(a.get(IService1));\n\t\t\tassert.ok(a.get(IService2));\n\t\t});\n\t});\n\n\ttest('@Param - optional', function () {\n\t\tlet collection = new ServiceCollection([IService1, new Service1()]);\n\t\tlet service = new InstantiationService(collection, true);\n\n\t\tservice.createInstance(TargetOptional);\n\t\tassert.throws(() => service.createInstance(TargetNotOptional));\n\n\t\tservice = new InstantiationService(collection, false);\n\t\tservice.createInstance(TargetOptional);\n\t\tservice.createInstance(TargetNotOptional);\n\t});\n\n\t// we made this a warning\n\t// test('@Param - too many args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2, true, 2));\n\t// });\n\n\t// test('@Param - too few args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2));\n\t// });\n\n\ttest('SyncDesc - no dependencies', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\n\t\tservice.invokeFunction(accessor => {\n\n\t\t\tlet service1 = accessor.get(IService1);\n\t\t\tassert.ok(service1);\n\t\t\tassert.strictEqual(service1.c, 1);\n\n\t\t\tlet service2 = accessor.get(IService1);\n\t\t\tassert.ok(service1 === service2);\n\t\t});\n\t});\n\n\ttest('SyncDesc - service with service dependency', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tcollection.set(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tservice.invokeFunction(accessor => {\n\t\t\tlet d = accessor.get(IDependentService);\n\t\t\tassert.ok(d);\n\t\t\tassert.strictEqual(d.name, 'farboo');\n\t\t});\n\t});\n\n\ttest('SyncDesc - target depends on service future', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tcollection.set(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tlet d = service.createInstance(DependentServiceTarget);\n\t\tassert.ok(d instanceof DependentServiceTarget);\n\n\t\tlet d2 = service.createInstance(DependentServiceTarget2);\n\t\tassert.ok(d2 instanceof DependentServiceTarget2);\n\t});\n\n\ttest('SyncDesc - explode on loop', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(ServiceLoop1));\n\t\tcollection.set(IService2, new SyncDescriptor<IService2>(ServiceLoop2));\n\n\t\tassert.throws(() => {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService1);\n\t\t\t});\n\t\t});\n\t\tassert.throws(() => {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService2);\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService1);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tassert.ok(err.name);\n\t\t\tassert.ok(err.message);\n\t\t}\n\t});\n\n\ttest('Invoke - get services', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.strictEqual(accessor.get(IService1).c, 1);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\t});\n\n\ttest('Invoke - get service, optional', function () {\n\t\tlet collection = new ServiceCollection([IService1, new Service1()]);\n\t\tlet service = new InstantiationService(collection);\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.throws(() => accessor.get(IService2));\n\t\t\tassert.strictEqual(accessor.get(IService2, optional), undefined);\n\t\t\treturn true;\n\t\t}\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\t});\n\n\ttest('Invoke - keeping accessor NOT allowed', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tlet cached: ServicesAccessor;\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.strictEqual(accessor.get(IService1).c, 1);\n\t\t\tcached = accessor;\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\n\t\tassert.throws(() => cached.get(IService2));\n\t});\n\n\ttest('Invoke - throw error', function () {\n\t\tlet collection = new ServiceCollection();\n\t\tlet service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tthrow new Error();\n\t\t}\n\n\t\tassert.throws(() => service.invokeFunction(test));\n\t});\n\n\ttest('Create child', function () {\n\n\t\tlet serviceInstanceCount = 0;\n\n\t\tconst CtorCounter = class implements Service1 {\n\t\t\tdeclare readonly _serviceBrand: undefined;\n\t\t\tc = 1;\n\t\t\tconstructor() {\n\t\t\t\tserviceInstanceCount += 1;\n\t\t\t}\n\t\t};\n\n\t\t// creating the service instance BEFORE the child service\n\t\tlet service = new InstantiationService(new ServiceCollection([IService1, new SyncDescriptor(CtorCounter)]));\n\t\tservice.createInstance(Service1Consumer);\n\n\t\t// second instance must be earlier ONE\n\t\tlet child = service.createChild(new ServiceCollection([IService2, new Service2()]));\n\t\tchild.createInstance(Service1Consumer);\n\n\t\tassert.strictEqual(serviceInstanceCount, 1);\n\n\t\t// creating the service instance AFTER the child service\n\t\tserviceInstanceCount = 0;\n\t\tservice = new InstantiationService(new ServiceCollection([IService1, new SyncDescriptor(CtorCounter)]));\n\t\tchild = service.createChild(new ServiceCollection([IService2, new Service2()]));\n\n\t\t// second instance must be earlier ONE\n\t\tservice.createInstance(Service1Consumer);\n\t\tchild.createInstance(Service1Consumer);\n\n\t\tassert.strictEqual(serviceInstanceCount, 1);\n\t});\n\n\ttest('Remote window / integration tests is broken #105562', function () {\n\n\t\tconst Service1 = createDecorator<any>('service1');\n\t\tclass Service1Impl {\n\t\t\tconstructor(@IInstantiationService insta: IInstantiationService) {\n\t\t\t\tconst c = insta.invokeFunction(accessor => accessor.get(Service2)); // THIS is the recursive call\n\t\t\t\tassert.ok(c);\n\t\t\t}\n\t\t}\n\t\tconst Service2 = createDecorator<any>('service2');\n\t\tclass Service2Impl {\n\t\t\tconstructor() { }\n\t\t}\n\n\t\t// This service depends on Service1 and Service2 BUT creating Service1 creates Service2 (via recursive invocation)\n\t\t// and then Servce2 should not be created a second time\n\t\tconst Service21 = createDecorator<any>('service21');\n\t\tclass Service21Impl {\n\t\t\tconstructor(@Service2 readonly service2: Service2Impl, @Service1 readonly service1: Service1Impl) { }\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[Service1, new SyncDescriptor(Service1Impl)],\n\t\t\t[Service2, new SyncDescriptor(Service2Impl)],\n\t\t\t[Service21, new SyncDescriptor(Service21Impl)],\n\t\t));\n\n\t\tconst obj = insta.invokeFunction(accessor => accessor.get(Service21));\n\t\tassert.ok(obj);\n\t});\n\n});\n"]}