{"version":3,"file":"keyboardLayout.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/keyboardLayout/common/keyboardLayout.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IASnF,QAAA,sBAAsB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAyB,uBAAuB,CAAC,CAAC;IAgGvG,SAAgB,uBAAuB,CAAC,CAA6B,EAAE,CAA6B;QACnG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,KAAK,CAAC;SACb;QAED,IAAiC,CAAE,CAAC,IAAI,IAAiC,CAAE,CAAC,IAAI,IAAiC,CAAE,CAAC,IAAI,KAAkC,CAAE,CAAC,IAAI,EAAE;YAClK,OAAO,IAAI,CAAC;SACZ;QAED,IAA6B,CAAE,CAAC,EAAE,IAA6B,CAAE,CAAC,EAAE,IAA6B,CAAE,CAAC,EAAE,KAA8B,CAAE,CAAC,EAAE,EAAE;YAC1I,OAAO,IAAI,CAAC;SACZ;QAED,IAA+B,CAAE,CAAC,KAAK;YACX,CAAE,CAAC,KAAK;YACR,CAAE,CAAC,KAAK,KAAgC,CAAE,CAAC,KAAK;YAChD,CAAE,CAAC,MAAM,KAAgC,CAAE,CAAC,MAAM,EAC5E;YACD,OAAO,IAAI,CAAC;SACZ;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAtBD,0DAsBC;IAED,SAAgB,8BAA8B,CAAC,MAAkC;QAChF,IAAI,CAAC,MAAM,EAAE;YACZ,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;SACtC;QAED,IAAiC,MAAO,CAAC,IAAI,EAAE;YAC9C,UAAU;YACV,IAAI,aAAa,GAA+B,MAAM,CAAC;YACvD,OAAO;gBACN,KAAK,EAAE,aAAa,CAAC,IAAI;gBACzB,WAAW,EAAE,EAAE;aACf,CAAC;SACF;QAED,IAA6B,MAAO,CAAC,EAAE,EAAE;YACxC,IAAI,SAAS,GAA2B,MAAM,CAAC;YAC/C,IAAI,SAAS,CAAC,aAAa,EAAE;gBAC5B,OAAO;oBACN,KAAK,EAAE,SAAS,CAAC,aAAa;oBAC9B,WAAW,EAAE,EAAE;iBACf,CAAC;aACF;YAED,IAAI,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;gBAClD,OAAO;oBACN,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;oBAC7E,WAAW,EAAE,EAAE;iBACf,CAAC;aACF;YACD,IAAI,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;gBAC1C,OAAO;oBACN,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;oBACzE,WAAW,EAAE,iBAAiB,SAAS,CAAC,IAAI,GAAG;iBAC/C,CAAC;aACF;YAED,OAAO;gBACN,KAAK,EAAE,SAAS,CAAC,IAAI;gBACrB,WAAW,EAAE,EAAE;aACf,CAAC;SACF;QAED,IAAI,WAAW,GAA6B,MAAM,CAAC;QAEnD,OAAO;YACN,KAAK,EAAE,WAAW,CAAC,MAAM;YACzB,WAAW,EAAE,EAAE;SACf,CAAC;IACH,CAAC;IAhDD,wEAgDC;IAED,SAAgB,mBAAmB,CAAC,MAA2B;QAC9D,IAAiC,MAAO,CAAC,IAAI,EAAE;YAC9C,OAAoC,MAAO,CAAC,IAAI,CAAC;SACjD;QAED,IAA6B,MAAO,CAAC,EAAE,EAAE;YACxC,OAAgC,MAAO,CAAC,EAAE,CAAC;SAC3C;QAED,OAAkC,MAAO,CAAC,MAAM,CAAC;IAClD,CAAC;IAVD,kDAUC;IAED,SAAS,uBAAuB,CAAC,CAAqB,EAAE,CAAqB;QAC5E,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,KAAK,CAAC;SACb;QACD,OAAO,CACN,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;eACd,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;eACnB,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;eAC3B,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;eAC3B,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,cAAc,CACxC,CAAC;IACH,CAAC;IAED,SAAgB,4BAA4B,CAAC,CAAiC,EAAE,CAAiC;QAChH,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,KAAK,CAAC;SACb;QACD,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,sBAAqB,EAAE,QAAQ,EAAE,EAAE;YACjE,MAAM,WAAW,GAAG,wBAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9B,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC7C,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAhBD,oEAgBC;IAED,SAAS,wBAAwB,CAAC,CAAsB,EAAE,CAAsB;QAC/E,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,KAAK,CAAC;SACb;QACD,OAAO,CACN,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;eAChB,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;eAC3B,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;eAC3B,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,cAAc,CACxC,CAAC;IACH,CAAC;IAED,SAAgB,6BAA6B,CAAC,CAAkC,EAAE,CAAkC;QACnH,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACb,OAAO,KAAK,CAAC;SACb;QACD,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,sBAAqB,EAAE,QAAQ,EAAE,EAAE;YACjE,MAAM,WAAW,GAAG,wBAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;YAC9B,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC9C,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAhBD,sEAgBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ScanCode, ScanCodeUtils } from 'vs/base/common/scanCode';\nimport { IKeyboardMapper } from 'vs/platform/keyboardLayout/common/keyboardMapper';\nimport { DispatchConfig } from 'vs/platform/keyboardLayout/common/dispatchConfig';\nimport { IKeyboardEvent } from 'vs/platform/keybinding/common/keybinding';\n\nexport const IKeyboardLayoutService = createDecorator<IKeyboardLayoutService>('keyboardLayoutService');\n\nexport interface IWindowsKeyMapping {\n\tvkey: string;\n\tvalue: string;\n\twithShift: string;\n\twithAltGr: string;\n\twithShiftAltGr: string;\n}\nexport interface IWindowsKeyboardMapping {\n\t[code: string]: IWindowsKeyMapping;\n}\nexport interface ILinuxKeyMapping {\n\tvalue: string;\n\twithShift: string;\n\twithAltGr: string;\n\twithShiftAltGr: string;\n}\nexport interface ILinuxKeyboardMapping {\n\t[code: string]: ILinuxKeyMapping;\n}\nexport interface IMacKeyMapping {\n\tvalue: string;\n\tvalueIsDeadKey: boolean;\n\twithShift: string;\n\twithShiftIsDeadKey: boolean;\n\twithAltGr: string;\n\twithAltGrIsDeadKey: boolean;\n\twithShiftAltGr: string;\n\twithShiftAltGrIsDeadKey: boolean;\n}\nexport interface IMacKeyboardMapping {\n\t[code: string]: IMacKeyMapping;\n}\n\nexport type IMacLinuxKeyMapping = IMacKeyMapping | ILinuxKeyMapping;\nexport type IMacLinuxKeyboardMapping = IMacKeyboardMapping | ILinuxKeyboardMapping;\nexport type IKeyboardMapping = IWindowsKeyboardMapping | ILinuxKeyboardMapping | IMacKeyboardMapping;\n\n/* __GDPR__FRAGMENT__\n\t\"IKeyboardLayoutInfo\" : {\n\t\t\"name\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"id\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"text\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface IWindowsKeyboardLayoutInfo {\n\tname: string;\n\tid: string;\n\ttext: string;\n}\n\n/* __GDPR__FRAGMENT__\n\t\"IKeyboardLayoutInfo\" : {\n\t\t\"model\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"layout\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"variant\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"options\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"rules\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface ILinuxKeyboardLayoutInfo {\n\tmodel: string;\n\tlayout: string;\n\tvariant: string;\n\toptions: string;\n\trules: string;\n}\n\n/* __GDPR__FRAGMENT__\n\t\"IKeyboardLayoutInfo\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"lang\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"localizedName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface IMacKeyboardLayoutInfo {\n\tid: string;\n\tlang: string;\n\tlocalizedName?: string;\n}\n\nexport type IKeyboardLayoutInfo = (IWindowsKeyboardLayoutInfo | ILinuxKeyboardLayoutInfo | IMacKeyboardLayoutInfo) & { isUserKeyboardLayout?: boolean; isUSStandard?: true };\n\nexport interface IKeyboardLayoutService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeKeyboardLayout: Event<void>;\n\n\tgetRawKeyboardMapping(): IKeyboardMapping | null;\n\tgetCurrentKeyboardLayout(): IKeyboardLayoutInfo | null;\n\tgetAllKeyboardLayouts(): IKeyboardLayoutInfo[];\n\tgetKeyboardMapper(dispatchConfig: DispatchConfig): IKeyboardMapper;\n\tvalidateCurrentKeyboardMapping(keyboardEvent: IKeyboardEvent): void;\n}\n\nexport function areKeyboardLayoutsEqual(a: IKeyboardLayoutInfo | null, b: IKeyboardLayoutInfo | null): boolean {\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\n\tif ((<IWindowsKeyboardLayoutInfo>a).name && (<IWindowsKeyboardLayoutInfo>b).name && (<IWindowsKeyboardLayoutInfo>a).name === (<IWindowsKeyboardLayoutInfo>b).name) {\n\t\treturn true;\n\t}\n\n\tif ((<IMacKeyboardLayoutInfo>a).id && (<IMacKeyboardLayoutInfo>b).id && (<IMacKeyboardLayoutInfo>a).id === (<IMacKeyboardLayoutInfo>b).id) {\n\t\treturn true;\n\t}\n\n\tif ((<ILinuxKeyboardLayoutInfo>a).model &&\n\t\t(<ILinuxKeyboardLayoutInfo>b).model &&\n\t\t(<ILinuxKeyboardLayoutInfo>a).model === (<ILinuxKeyboardLayoutInfo>b).model &&\n\t\t(<ILinuxKeyboardLayoutInfo>a).layout === (<ILinuxKeyboardLayoutInfo>b).layout\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport function parseKeyboardLayoutDescription(layout: IKeyboardLayoutInfo | null): { label: string, description: string } {\n\tif (!layout) {\n\t\treturn { label: '', description: '' };\n\t}\n\n\tif ((<IWindowsKeyboardLayoutInfo>layout).name) {\n\t\t// windows\n\t\tlet windowsLayout = <IWindowsKeyboardLayoutInfo>layout;\n\t\treturn {\n\t\t\tlabel: windowsLayout.text,\n\t\t\tdescription: ''\n\t\t};\n\t}\n\n\tif ((<IMacKeyboardLayoutInfo>layout).id) {\n\t\tlet macLayout = <IMacKeyboardLayoutInfo>layout;\n\t\tif (macLayout.localizedName) {\n\t\t\treturn {\n\t\t\t\tlabel: macLayout.localizedName,\n\t\t\t\tdescription: ''\n\t\t\t};\n\t\t}\n\n\t\tif (/^com\\.apple\\.keylayout\\./.test(macLayout.id)) {\n\t\t\treturn {\n\t\t\t\tlabel: macLayout.id.replace(/^com\\.apple\\.keylayout\\./, '').replace(/-/, ' '),\n\t\t\t\tdescription: ''\n\t\t\t};\n\t\t}\n\t\tif (/^.*inputmethod\\./.test(macLayout.id)) {\n\t\t\treturn {\n\t\t\t\tlabel: macLayout.id.replace(/^.*inputmethod\\./, '').replace(/[-\\.]/, ' '),\n\t\t\t\tdescription: `Input Method (${macLayout.lang})`\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tlabel: macLayout.lang,\n\t\t\tdescription: ''\n\t\t};\n\t}\n\n\tlet linuxLayout = <ILinuxKeyboardLayoutInfo>layout;\n\n\treturn {\n\t\tlabel: linuxLayout.layout,\n\t\tdescription: ''\n\t};\n}\n\nexport function getKeyboardLayoutId(layout: IKeyboardLayoutInfo): string {\n\tif ((<IWindowsKeyboardLayoutInfo>layout).name) {\n\t\treturn (<IWindowsKeyboardLayoutInfo>layout).name;\n\t}\n\n\tif ((<IMacKeyboardLayoutInfo>layout).id) {\n\t\treturn (<IMacKeyboardLayoutInfo>layout).id;\n\t}\n\n\treturn (<ILinuxKeyboardLayoutInfo>layout).layout;\n}\n\nfunction windowsKeyMappingEquals(a: IWindowsKeyMapping, b: IWindowsKeyMapping): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn (\n\t\ta.vkey === b.vkey\n\t\t&& a.value === b.value\n\t\t&& a.withShift === b.withShift\n\t\t&& a.withAltGr === b.withAltGr\n\t\t&& a.withShiftAltGr === b.withShiftAltGr\n\t);\n}\n\nexport function windowsKeyboardMappingEquals(a: IWindowsKeyboardMapping | null, b: IWindowsKeyboardMapping | null): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\tfor (let scanCode = 0; scanCode < ScanCode.MAX_VALUE; scanCode++) {\n\t\tconst strScanCode = ScanCodeUtils.toString(scanCode);\n\t\tconst aEntry = a[strScanCode];\n\t\tconst bEntry = b[strScanCode];\n\t\tif (!windowsKeyMappingEquals(aEntry, bEntry)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction macLinuxKeyMappingEquals(a: IMacLinuxKeyMapping, b: IMacLinuxKeyMapping): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn (\n\t\ta.value === b.value\n\t\t&& a.withShift === b.withShift\n\t\t&& a.withAltGr === b.withAltGr\n\t\t&& a.withShiftAltGr === b.withShiftAltGr\n\t);\n}\n\nexport function macLinuxKeyboardMappingEquals(a: IMacLinuxKeyboardMapping | null, b: IMacLinuxKeyboardMapping | null): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\tfor (let scanCode = 0; scanCode < ScanCode.MAX_VALUE; scanCode++) {\n\t\tconst strScanCode = ScanCodeUtils.toString(scanCode);\n\t\tconst aEntry = a[strScanCode];\n\t\tconst bEntry = b[strScanCode];\n\t\tif (!macLinuxKeyMappingEquals(aEntry, bEntry)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"]}