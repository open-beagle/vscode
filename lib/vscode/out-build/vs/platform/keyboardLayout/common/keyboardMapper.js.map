{"version":3,"file":"keyboardMapper.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/keyboardLayout/common/keyboardMapper.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAahG,MAAa,oBAAoB;QAKhC,YAAY,MAAuB;YAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAgC,CAAC;QACvD,CAAC;QAEM,aAAa;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACrC,CAAC;QAEM,iBAAiB,CAAC,UAAsB;YAC9C,MAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC7B,OAAO,CAAC,CAAC;aACT;YACD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAEM,oBAAoB,CAAC,aAA6B;YACxD,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACzD,CAAC;QAEM,kBAAkB,CAAC,KAA6C;YACtE,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;KACD;IAhCD,oDAgCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Keybinding, ResolvedKeybinding, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { ScanCodeBinding } from 'vs/base/common/scanCode';\nimport { IKeyboardEvent } from 'vs/platform/keybinding/common/keybinding';\n\nexport interface IKeyboardMapper {\n\tdumpDebugInfo(): string;\n\tresolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[];\n\tresolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding;\n\tresolveUserBinding(firstPart: (SimpleKeybinding | ScanCodeBinding)[]): ResolvedKeybinding[];\n}\n\nexport class CachedKeyboardMapper implements IKeyboardMapper {\n\n\tprivate _actual: IKeyboardMapper;\n\tprivate _cache: Map<string, ResolvedKeybinding[]>;\n\n\tconstructor(actual: IKeyboardMapper) {\n\t\tthis._actual = actual;\n\t\tthis._cache = new Map<string, ResolvedKeybinding[]>();\n\t}\n\n\tpublic dumpDebugInfo(): string {\n\t\treturn this._actual.dumpDebugInfo();\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\tconst hashCode = keybinding.getHashCode();\n\t\tconst resolved = this._cache.get(hashCode);\n\t\tif (!resolved) {\n\t\t\tconst r = this._actual.resolveKeybinding(keybinding);\n\t\t\tthis._cache.set(hashCode, r);\n\t\t\treturn r;\n\t\t}\n\t\treturn resolved;\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\treturn this._actual.resolveKeyboardEvent(keyboardEvent);\n\t}\n\n\tpublic resolveUserBinding(parts: (SimpleKeybinding | ScanCodeBinding)[]): ResolvedKeybinding[] {\n\t\treturn this._actual.resolveUserBinding(parts);\n\t}\n}\n"]}