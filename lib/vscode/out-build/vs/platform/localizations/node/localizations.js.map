{"version":3,"file":"localizations.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/localizations/node/localizations.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { writeFile } from 'vs/base/node/pfs';\nimport { promises } from 'fs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n"]}