{"version":3,"sources":["vs/platform/theme/common/iconRegistry.ts"],"names":[],"mappings":"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","file":"iconRegistry.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as Codicons from 'vs/base/common/codicons';\nimport { URI } from 'vs/base/common/uri';\n\n//  ------ API types\n\n// icon registry\nexport const Extensions = {\n\tIconContribution: 'base.contributions.icons'\n};\n\nexport type IconDefaults = ThemeIcon | IconDefinition;\n\nexport interface IconDefinition {\n\tfontId?: string;\n\tfontCharacter: string;\n}\n\nexport interface IconContribution {\n\tid: string;\n\tdescription: string | undefined;\n\tdeprecationMessage?: string;\n\tdefaults: IconDefaults;\n}\n\nexport interface IconFontContribution {\n\tid: string;\n\tdefinition: IconFontDefinition;\n}\n\nexport interface IconFontDefinition {\n\tsrc: { location: URI, format: string; }[]\n}\n\nexport interface IIconRegistry {\n\n\treadonly onDidChange: Event<void>;\n\n\t/**\n\t * Register a icon to the registry.\n\t * @param id The icon id\n\t * @param defaults The default values\n\t * @param description The description\n\t */\n\tregisterIcon(id: string, defaults: IconDefaults, description?: string): ThemeIcon;\n\n\t/**\n\t * Deregister a icon from the registry.\n\t */\n\tderegisterIcon(id: string): void;\n\n\t/**\n\t * Get all icon contributions\n\t */\n\tgetIcons(): IconContribution[];\n\n\t/**\n\t * Get the icon for the given id\n\t */\n\tgetIcon(id: string): IconContribution | undefined;\n\n\t/**\n\t * JSON schema for an object to assign icon values to one of the icon contributions.\n\t */\n\tgetIconSchema(): IJSONSchema;\n\n\t/**\n\t * JSON schema to for a reference to a icon contribution.\n\t */\n\tgetIconReferenceSchema(): IJSONSchema;\n\n\t/**\n\t * Register a icon font to the registry.\n\t * @param id The icon font id\n\t * @param definition The iocn font definition\n\t */\n\tregisterIconFont(id: string, definition: IconFontDefinition): IconFontContribution;\n\n\t/**\n\t * Deregister an icon font to the registry.\n\t */\n\tderegisterIconFont(id: string): void;\n\n\t/**\n\t * Get all icon font contributions\n\t */\n\tgetIconFonts(): IconFontContribution[];\n\n\t/**\n\t * Get the icon font for the given id\n\t */\n\tgetIconFont(id: string): IconFontContribution | undefined;\n}\n\nclass IconRegistry implements IIconRegistry {\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate iconsById: { [key: string]: IconContribution };\n\tprivate iconSchema: IJSONSchema & { properties: IJSONSchemaMap } = {\n\t\tdefinitions: {\n\t\t\ticons: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tfontId: { type: 'string', description: localize('iconDefintion.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n\t\t\t\t\tfontCharacter: { type: 'string', description: localize('iconDefintion.fontCharacter', 'The font character associated with the icon definition.') }\n\t\t\t\t},\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdefaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n\t\t\t}\n\t\t},\n\t\ttype: 'object',\n\t\tproperties: {}\n\t};\n\tprivate iconReferenceSchema: IJSONSchema & { enum: string[], enumDescriptions: string[] } = { type: 'string', pattern: `^${Codicons.CSSIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n\n\tprivate iconFontsById: { [key: string]: IconFontContribution };\n\n\tconstructor() {\n\t\tthis.iconsById = {};\n\t\tthis.iconFontsById = {};\n\t}\n\n\tpublic registerIcon(id: string, defaults: IconDefaults, description?: string, deprecationMessage?: string): ThemeIcon {\n\t\tconst existing = this.iconsById[id];\n\t\tif (existing) {\n\t\t\tif (description && !existing.description) {\n\t\t\t\texisting.description = description;\n\t\t\t\tthis.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n\t\t\t\tconst enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n\t\t\t\tif (enumIndex !== -1) {\n\t\t\t\t\tthis.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n\t\t\t\t}\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t\treturn existing;\n\t\t}\n\t\tlet iconContribution: IconContribution = { id, description, defaults, deprecationMessage };\n\t\tthis.iconsById[id] = iconContribution;\n\t\tlet propertySchema: IJSONSchema = { $ref: '#/definitions/icons' };\n\t\tif (deprecationMessage) {\n\t\t\tpropertySchema.deprecationMessage = deprecationMessage;\n\t\t}\n\t\tif (description) {\n\t\t\tpropertySchema.markdownDescription = `${description}: $(${id})`;\n\t\t}\n\t\tthis.iconSchema.properties[id] = propertySchema;\n\t\tthis.iconReferenceSchema.enum.push(id);\n\t\tthis.iconReferenceSchema.enumDescriptions.push(description || '');\n\n\t\tthis._onDidChange.fire();\n\t\treturn { id };\n\t}\n\n\n\tpublic deregisterIcon(id: string): void {\n\t\tdelete this.iconsById[id];\n\t\tdelete this.iconSchema.properties[id];\n\t\tconst index = this.iconReferenceSchema.enum.indexOf(id);\n\t\tif (index !== -1) {\n\t\t\tthis.iconReferenceSchema.enum.splice(index, 1);\n\t\t\tthis.iconReferenceSchema.enumDescriptions.splice(index, 1);\n\t\t}\n\t\tthis._onDidChange.fire();\n\t}\n\n\tpublic getIcons(): IconContribution[] {\n\t\treturn Object.keys(this.iconsById).map(id => this.iconsById[id]);\n\t}\n\n\tpublic getIcon(id: string): IconContribution | undefined {\n\t\treturn this.iconsById[id];\n\t}\n\n\tpublic getIconSchema(): IJSONSchema {\n\t\treturn this.iconSchema;\n\t}\n\n\tpublic getIconReferenceSchema(): IJSONSchema {\n\t\treturn this.iconReferenceSchema;\n\t}\n\n\tpublic registerIconFont(id: string, definition: IconFontDefinition): IconFontContribution {\n\t\tconst existing = this.iconFontsById[id];\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tlet iconFontContribution: IconFontContribution = { id, definition };\n\t\tthis.iconFontsById[id] = iconFontContribution;\n\t\tthis._onDidChange.fire();\n\t\treturn iconFontContribution;\n\t}\n\n\tpublic deregisterIconFont(id: string): void {\n\t\tdelete this.iconFontsById[id];\n\t}\n\n\tpublic getIconFonts(): IconFontContribution[] {\n\t\treturn Object.keys(this.iconFontsById).map(id => this.iconFontsById[id]);\n\t}\n\n\tpublic getIconFont(id: string): IconFontContribution | undefined {\n\t\treturn this.iconFontsById[id];\n\t}\n\n\tpublic toString() {\n\t\tconst sorter = (i1: IconContribution, i2: IconContribution) => {\n\t\t\treturn i1.id.localeCompare(i2.id);\n\t\t};\n\t\tconst classNames = (i: IconContribution) => {\n\t\t\twhile (ThemeIcon.isThemeIcon(i.defaults)) {\n\t\t\t\ti = this.iconsById[i.defaults.id];\n\t\t\t}\n\t\t\treturn `codicon codicon-${i ? i.id : ''}`;\n\t\t};\n\n\t\tlet reference = [];\n\n\t\treference.push(`| preview     | identifier                        | default codicon ID                | description`);\n\t\treference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n\t\tconst contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n\n\t\tfor (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n\t\t\treference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n\t\t}\n\n\t\treference.push(`| preview     | identifier                        `);\n\t\treference.push(`| ----------- | --------------------------------- |`);\n\n\t\tfor (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n\t\t\treference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n\n\t\t}\n\n\t\treturn reference.join('\\n');\n\t}\n\n}\n\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\n\nexport function registerIcon(id: string, defaults: IconDefaults, description: string, deprecationMessage?: string): ThemeIcon {\n\treturn iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\n\nexport function getIconRegistry(): IIconRegistry {\n\treturn iconRegistry;\n}\n\nfunction initialize() {\n\tfor (const icon of Codicons.iconRegistry.all) {\n\t\ticonRegistry.registerIcon(icon.id, icon.definition, icon.description);\n\t}\n\tCodicons.iconRegistry.onDidRegister(icon => iconRegistry.registerIcon(icon.id, icon.definition, icon.description));\n}\ninitialize();\n\nexport const iconsSchemaId = 'vscode://schemas/icons';\n\nlet schemaRegistry = platform.Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\n\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n\tif (!delayer.isScheduled()) {\n\t\tdelayer.schedule();\n\t}\n});\n\n\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n\n\n// common icons\n\nexport const widgetClose = registerIcon('widget-close', Codicons.Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\n\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicons.Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicons.Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\n\nexport const syncing = ThemeIcon.modify(Codicons.Codicon.sync, 'spin');\n"]}