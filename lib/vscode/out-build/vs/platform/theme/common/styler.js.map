{"version":3,"file":"styler.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/theme/common/styler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IColorTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { focusBorder, inputBackground, inputForeground, ColorIdentifier, selectForeground, selectBackground, selectListBackground, selectBorder, inputBorder, contrastBorder, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, pickerGroupForeground, widgetShadow, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationErrorBorder, inputValidationErrorBackground, activeContrastBorder, buttonForeground, buttonBackground, buttonHoverBackground, ColorFunction, badgeBackground, badgeForeground, progressBarBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, breadcrumbsBackground, editorWidgetBorder, inputValidationInfoForeground, inputValidationWarningForeground, inputValidationErrorForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, editorWidgetBackground, treeIndentGuidesStroke, editorWidgetForeground, simpleCheckboxBackground, simpleCheckboxBorder, simpleCheckboxForeground, ColorValue, resolveColorValue, textLinkForeground, problemsWarningIconForeground, problemsErrorIconForeground, problemsInfoIconForeground, buttonSecondaryBackground, buttonSecondaryForeground, buttonSecondaryHoverBackground, listFocusOutline, listInactiveFocusOutline, tableColumnsBorder, quickInputListFocusBackground, buttonBorder, keybindingLabelForeground, keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Color } from 'vs/base/common/color';\nimport { IThemable, styleFn } from 'vs/base/common/styler';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport interface IStyleOverrides {\n\t[color: string]: ColorIdentifier | undefined;\n}\n\nexport interface IColorMapping {\n\t[optionsKey: string]: ColorValue | undefined;\n}\n\nexport interface IComputedStyles {\n\t[color: string]: Color | undefined;\n}\n\nexport function computeStyles(theme: IColorTheme, styleMap: IColorMapping): IComputedStyles {\n\tconst styles = Object.create(null) as IComputedStyles;\n\tfor (let key in styleMap) {\n\t\tconst value = styleMap[key];\n\t\tif (value) {\n\t\t\tstyles[key] = resolveColorValue(value, theme);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\nexport function attachStyler<T extends IColorMapping>(themeService: IThemeService, styleMap: T, widgetOrCallback: IThemable | styleFn): IDisposable {\n\tfunction applyStyles(theme: IColorTheme): void {\n\t\tconst styles = computeStyles(themeService.getColorTheme(), styleMap);\n\n\t\tif (typeof widgetOrCallback === 'function') {\n\t\t\twidgetOrCallback(styles);\n\t\t} else {\n\t\t\twidgetOrCallback.style(styles);\n\t\t}\n\t}\n\n\tapplyStyles(themeService.getColorTheme());\n\n\treturn themeService.onDidColorThemeChange(applyStyles);\n}\n\nexport interface ICheckboxStyleOverrides extends IStyleOverrides {\n\tinputActiveOptionBorderColor?: ColorIdentifier;\n\tinputActiveOptionForegroundColor?: ColorIdentifier;\n\tinputActiveOptionBackgroundColor?: ColorIdentifier;\n}\n\nexport function attachCheckboxStyler(widget: IThemable, themeService: IThemeService, style?: ICheckboxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputActiveOptionBorder: style?.inputActiveOptionBorderColor || inputActiveOptionBorder,\n\t\tinputActiveOptionForeground: style?.inputActiveOptionForegroundColor || inputActiveOptionForeground,\n\t\tinputActiveOptionBackground: style?.inputActiveOptionBackgroundColor || inputActiveOptionBackground\n\t} as ICheckboxStyleOverrides, widget);\n}\n\nexport interface IBadgeStyleOverrides extends IStyleOverrides {\n\tbadgeBackground?: ColorIdentifier;\n\tbadgeForeground?: ColorIdentifier;\n}\n\nexport function attachBadgeStyler(widget: IThemable, themeService: IThemeService, style?: IBadgeStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tbadgeBackground: style?.badgeBackground || badgeBackground,\n\t\tbadgeForeground: style?.badgeForeground || badgeForeground,\n\t\tbadgeBorder: contrastBorder\n\t} as IBadgeStyleOverrides, widget);\n}\n\nexport interface IInputBoxStyleOverrides extends IStyleOverrides {\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n\tinputActiveOptionBorder?: ColorIdentifier;\n\tinputActiveOptionForeground?: ColorIdentifier;\n\tinputActiveOptionBackground?: ColorIdentifier;\n\tinputValidationInfoBorder?: ColorIdentifier;\n\tinputValidationInfoBackground?: ColorIdentifier;\n\tinputValidationInfoForeground?: ColorIdentifier;\n\tinputValidationWarningBorder?: ColorIdentifier;\n\tinputValidationWarningBackground?: ColorIdentifier;\n\tinputValidationWarningForeground?: ColorIdentifier;\n\tinputValidationErrorBorder?: ColorIdentifier;\n\tinputValidationErrorBackground?: ColorIdentifier;\n\tinputValidationErrorForeground?: ColorIdentifier;\n}\n\nexport function attachInputBoxStyler(widget: IThemable, themeService: IThemeService, style?: IInputBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputBackground: style?.inputBackground || inputBackground,\n\t\tinputForeground: style?.inputForeground || inputForeground,\n\t\tinputBorder: style?.inputBorder || inputBorder,\n\t\tinputValidationInfoBorder: style?.inputValidationInfoBorder || inputValidationInfoBorder,\n\t\tinputValidationInfoBackground: style?.inputValidationInfoBackground || inputValidationInfoBackground,\n\t\tinputValidationInfoForeground: style?.inputValidationInfoForeground || inputValidationInfoForeground,\n\t\tinputValidationWarningBorder: style?.inputValidationWarningBorder || inputValidationWarningBorder,\n\t\tinputValidationWarningBackground: style?.inputValidationWarningBackground || inputValidationWarningBackground,\n\t\tinputValidationWarningForeground: style?.inputValidationWarningForeground || inputValidationWarningForeground,\n\t\tinputValidationErrorBorder: style?.inputValidationErrorBorder || inputValidationErrorBorder,\n\t\tinputValidationErrorBackground: style?.inputValidationErrorBackground || inputValidationErrorBackground,\n\t\tinputValidationErrorForeground: style?.inputValidationErrorForeground || inputValidationErrorForeground\n\t} as IInputBoxStyleOverrides, widget);\n}\n\nexport interface ISelectBoxStyleOverrides extends IStyleOverrides, IListStyleOverrides {\n\tselectBackground?: ColorIdentifier;\n\tselectListBackground?: ColorIdentifier;\n\tselectForeground?: ColorIdentifier;\n\tdecoratorRightForeground?: ColorIdentifier;\n\tselectBorder?: ColorIdentifier;\n\tfocusBorder?: ColorIdentifier;\n}\n\nexport function attachSelectBoxStyler(widget: IThemable, themeService: IThemeService, style?: ISelectBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tselectBackground: style?.selectBackground || selectBackground,\n\t\tselectListBackground: style?.selectListBackground || selectListBackground,\n\t\tselectForeground: style?.selectForeground || selectForeground,\n\t\tdecoratorRightForeground: style?.pickerGroupForeground || pickerGroupForeground,\n\t\tselectBorder: style?.selectBorder || selectBorder,\n\t\tfocusBorder: style?.focusBorder || focusBorder,\n\t\tlistFocusBackground: style?.listFocusBackground || quickInputListFocusBackground,\n\t\tlistFocusForeground: style?.listFocusForeground || listFocusForeground,\n\t\tlistFocusOutline: style?.listFocusOutline || ((theme: IColorTheme) => theme.type === ColorScheme.HIGH_CONTRAST ? activeContrastBorder : Color.transparent),\n\t\tlistHoverBackground: style?.listHoverBackground || listHoverBackground,\n\t\tlistHoverForeground: style?.listHoverForeground || listHoverForeground,\n\t\tlistHoverOutline: style?.listFocusOutline || activeContrastBorder,\n\t\tselectListBorder: style?.selectListBorder || editorWidgetBorder\n\t} as ISelectBoxStyleOverrides, widget);\n}\n\nexport function attachFindReplaceInputBoxStyler(widget: IThemable, themeService: IThemeService, style?: IInputBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputBackground: style?.inputBackground || inputBackground,\n\t\tinputForeground: style?.inputForeground || inputForeground,\n\t\tinputBorder: style?.inputBorder || inputBorder,\n\t\tinputActiveOptionBorder: style?.inputActiveOptionBorder || inputActiveOptionBorder,\n\t\tinputActiveOptionForeground: style?.inputActiveOptionForeground || inputActiveOptionForeground,\n\t\tinputActiveOptionBackground: style?.inputActiveOptionBackground || inputActiveOptionBackground,\n\t\tinputValidationInfoBorder: style?.inputValidationInfoBorder || inputValidationInfoBorder,\n\t\tinputValidationInfoBackground: style?.inputValidationInfoBackground || inputValidationInfoBackground,\n\t\tinputValidationInfoForeground: style?.inputValidationInfoForeground || inputValidationInfoForeground,\n\t\tinputValidationWarningBorder: style?.inputValidationWarningBorder || inputValidationWarningBorder,\n\t\tinputValidationWarningBackground: style?.inputValidationWarningBackground || inputValidationWarningBackground,\n\t\tinputValidationWarningForeground: style?.inputValidationWarningForeground || inputValidationWarningForeground,\n\t\tinputValidationErrorBorder: style?.inputValidationErrorBorder || inputValidationErrorBorder,\n\t\tinputValidationErrorBackground: style?.inputValidationErrorBackground || inputValidationErrorBackground,\n\t\tinputValidationErrorForeground: style?.inputValidationErrorForeground || inputValidationErrorForeground\n\t} as IInputBoxStyleOverrides, widget);\n}\n\nexport interface IListStyleOverrides extends IStyleOverrides {\n\tlistBackground?: ColorIdentifier;\n\tlistFocusBackground?: ColorIdentifier;\n\tlistFocusForeground?: ColorIdentifier;\n\tlistFocusOutline?: ColorIdentifier;\n\tlistActiveSelectionBackground?: ColorIdentifier;\n\tlistActiveSelectionForeground?: ColorIdentifier;\n\tlistFocusAndSelectionBackground?: ColorIdentifier;\n\tlistFocusAndSelectionForeground?: ColorIdentifier;\n\tlistInactiveSelectionBackground?: ColorIdentifier;\n\tlistInactiveSelectionForeground?: ColorIdentifier;\n\tlistInactiveFocusBackground?: ColorIdentifier;\n\tlistInactiveFocusOutline?: ColorIdentifier;\n\tlistHoverBackground?: ColorIdentifier;\n\tlistHoverForeground?: ColorIdentifier;\n\tlistDropBackground?: ColorIdentifier;\n\tlistSelectionOutline?: ColorIdentifier;\n\tlistHoverOutline?: ColorIdentifier;\n\tlistFilterWidgetBackground?: ColorIdentifier;\n\tlistFilterWidgetOutline?: ColorIdentifier;\n\tlistFilterWidgetNoMatchesOutline?: ColorIdentifier;\n\tlistMatchesShadow?: ColorIdentifier;\n\ttreeIndentGuidesStroke?: ColorIdentifier;\n\ttableColumnsBorder?: ColorIdentifier;\n}\n\nexport function attachListStyler(widget: IThemable, themeService: IThemeService, overrides?: IColorMapping): IDisposable {\n\treturn attachStyler(themeService, { ...defaultListStyles, ...(overrides || {}) }, widget);\n}\n\nexport const defaultListStyles: IColorMapping = {\n\tlistFocusBackground,\n\tlistFocusForeground,\n\tlistFocusOutline,\n\tlistActiveSelectionBackground,\n\tlistActiveSelectionForeground,\n\tlistFocusAndSelectionBackground: listActiveSelectionBackground,\n\tlistFocusAndSelectionForeground: listActiveSelectionForeground,\n\tlistInactiveSelectionBackground,\n\tlistInactiveSelectionForeground,\n\tlistInactiveFocusBackground,\n\tlistInactiveFocusOutline,\n\tlistHoverBackground,\n\tlistHoverForeground,\n\tlistDropBackground,\n\tlistSelectionOutline: activeContrastBorder,\n\tlistHoverOutline: activeContrastBorder,\n\tlistFilterWidgetBackground,\n\tlistFilterWidgetOutline,\n\tlistFilterWidgetNoMatchesOutline,\n\tlistMatchesShadow: widgetShadow,\n\ttreeIndentGuidesStroke,\n\ttableColumnsBorder\n};\n\nexport interface IButtonStyleOverrides extends IStyleOverrides {\n\tbuttonForeground?: ColorIdentifier;\n\tbuttonBackground?: ColorIdentifier;\n\tbuttonHoverBackground?: ColorIdentifier;\n\tbuttonSecondaryForeground?: ColorIdentifier;\n\tbuttonSecondaryBackground?: ColorIdentifier;\n\tbuttonSecondaryHoverBackground?: ColorIdentifier;\n\tbuttonBorder?: ColorIdentifier;\n}\n\nexport function attachButtonStyler(widget: IThemable, themeService: IThemeService, style?: IButtonStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tbuttonForeground: style?.buttonForeground || buttonForeground,\n\t\tbuttonBackground: style?.buttonBackground || buttonBackground,\n\t\tbuttonHoverBackground: style?.buttonHoverBackground || buttonHoverBackground,\n\t\tbuttonSecondaryForeground: style?.buttonSecondaryForeground || buttonSecondaryForeground,\n\t\tbuttonSecondaryBackground: style?.buttonSecondaryBackground || buttonSecondaryBackground,\n\t\tbuttonSecondaryHoverBackground: style?.buttonSecondaryHoverBackground || buttonSecondaryHoverBackground,\n\t\tbuttonBorder: style?.buttonBorder || buttonBorder,\n\t} as IButtonStyleOverrides, widget);\n}\n\nexport interface IKeybindingLabelStyleOverrides extends IStyleOverrides {\n\tkeybindingLabelBackground?: ColorIdentifier;\n\tkeybindingLabelForeground?: ColorIdentifier;\n\tkeybindingLabelBorder?: ColorIdentifier;\n\tkeybindingLabelBottomBorder?: ColorIdentifier;\n\tkeybindingLabelShadow?: ColorIdentifier;\n}\n\nexport function attachKeybindingLabelStyler(widget: IThemable, themeService: IThemeService, style?: IKeybindingLabelStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tkeybindingLabelBackground: (style && style.keybindingLabelBackground) || keybindingLabelBackground,\n\t\tkeybindingLabelForeground: (style && style.keybindingLabelForeground) || keybindingLabelForeground,\n\t\tkeybindingLabelBorder: (style && style.keybindingLabelBorder) || keybindingLabelBorder,\n\t\tkeybindingLabelBottomBorder: (style && style.keybindingLabelBottomBorder) || keybindingLabelBottomBorder,\n\t\tkeybindingLabelShadow: (style && style.keybindingLabelShadow) || widgetShadow\n\t} as IKeybindingLabelStyleOverrides, widget);\n}\n\nexport interface ILinkStyleOverrides extends IStyleOverrides {\n\ttextLinkForeground?: ColorIdentifier;\n}\n\nexport function attachLinkStyler(widget: IThemable, themeService: IThemeService, style?: ILinkStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\ttextLinkForeground: style?.textLinkForeground || textLinkForeground,\n\t} as ILinkStyleOverrides, widget);\n}\n\nexport interface IProgressBarStyleOverrides extends IStyleOverrides {\n\tprogressBarBackground?: ColorIdentifier;\n}\n\nexport function attachProgressBarStyler(widget: IThemable, themeService: IThemeService, style?: IProgressBarStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tprogressBarBackground: style?.progressBarBackground || progressBarBackground\n\t} as IProgressBarStyleOverrides, widget);\n}\n\nexport function attachStylerCallback(themeService: IThemeService, colors: { [name: string]: ColorIdentifier }, callback: styleFn): IDisposable {\n\treturn attachStyler(themeService, colors, callback);\n}\n\nexport interface IBreadcrumbsWidgetStyleOverrides extends IColorMapping {\n\tbreadcrumbsBackground?: ColorIdentifier | ColorFunction;\n\tbreadcrumbsForeground?: ColorIdentifier;\n\tbreadcrumbsHoverForeground?: ColorIdentifier;\n\tbreadcrumbsFocusForeground?: ColorIdentifier;\n\tbreadcrumbsFocusAndSelectionForeground?: ColorIdentifier;\n}\n\nexport const defaultBreadcrumbsStyles = <IBreadcrumbsWidgetStyleOverrides>{\n\tbreadcrumbsBackground: breadcrumbsBackground,\n\tbreadcrumbsForeground: breadcrumbsForeground,\n\tbreadcrumbsHoverForeground: breadcrumbsFocusForeground,\n\tbreadcrumbsFocusForeground: breadcrumbsFocusForeground,\n\tbreadcrumbsFocusAndSelectionForeground: breadcrumbsActiveSelectionForeground,\n};\n\nexport function attachBreadcrumbsStyler(widget: IThemable, themeService: IThemeService, style?: IBreadcrumbsWidgetStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultBreadcrumbsStyles, ...style }, widget);\n}\n\nexport interface IMenuStyleOverrides extends IColorMapping {\n\tshadowColor?: ColorIdentifier;\n\tborderColor?: ColorIdentifier;\n\tforegroundColor?: ColorIdentifier;\n\tbackgroundColor?: ColorIdentifier;\n\tselectionForegroundColor?: ColorIdentifier;\n\tselectionBackgroundColor?: ColorIdentifier;\n\tselectionBorderColor?: ColorIdentifier;\n\tseparatorColor?: ColorIdentifier;\n}\n\nexport const defaultMenuStyles = <IMenuStyleOverrides>{\n\tshadowColor: widgetShadow,\n\tborderColor: menuBorder,\n\tforegroundColor: menuForeground,\n\tbackgroundColor: menuBackground,\n\tselectionForegroundColor: menuSelectionForeground,\n\tselectionBackgroundColor: menuSelectionBackground,\n\tselectionBorderColor: menuSelectionBorder,\n\tseparatorColor: menuSeparatorBackground\n};\n\nexport function attachMenuStyler(widget: IThemable, themeService: IThemeService, style?: IMenuStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultMenuStyles, ...style }, widget);\n}\n\nexport interface IDialogStyleOverrides extends IButtonStyleOverrides, ILinkStyleOverrides {\n\tdialogForeground?: ColorIdentifier;\n\tdialogBackground?: ColorIdentifier;\n\tdialogShadow?: ColorIdentifier;\n\tdialogBorder?: ColorIdentifier;\n\tcheckboxBorder?: ColorIdentifier;\n\tcheckboxBackground?: ColorIdentifier;\n\tcheckboxForeground?: ColorIdentifier;\n\terrorIconForeground?: ColorIdentifier;\n\twarningIconForeground?: ColorIdentifier;\n\tinfoIconForeground?: ColorIdentifier;\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n}\n\nexport const defaultDialogStyles = <IDialogStyleOverrides>{\n\tdialogBackground: editorWidgetBackground,\n\tdialogForeground: editorWidgetForeground,\n\tdialogShadow: widgetShadow,\n\tdialogBorder: contrastBorder,\n\tbuttonForeground: buttonForeground,\n\tbuttonBackground: buttonBackground,\n\tbuttonSecondaryBackground: buttonSecondaryBackground,\n\tbuttonSecondaryForeground: buttonSecondaryForeground,\n\tbuttonSecondaryHoverBackground: buttonSecondaryHoverBackground,\n\tbuttonHoverBackground: buttonHoverBackground,\n\tbuttonBorder: buttonBorder,\n\tcheckboxBorder: simpleCheckboxBorder,\n\tcheckboxBackground: simpleCheckboxBackground,\n\tcheckboxForeground: simpleCheckboxForeground,\n\terrorIconForeground: problemsErrorIconForeground,\n\twarningIconForeground: problemsWarningIconForeground,\n\tinfoIconForeground: problemsInfoIconForeground,\n\tinputBackground: inputBackground,\n\tinputForeground: inputForeground,\n\tinputBorder: inputBorder,\n\ttextLinkForeground: textLinkForeground\n};\n\n\nexport function attachDialogStyler(widget: IThemable, themeService: IThemeService, style?: IDialogStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultDialogStyles, ...style }, widget);\n}\n"]}