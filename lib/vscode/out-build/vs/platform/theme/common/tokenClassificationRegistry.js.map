{"version":3,"sources":["vs/platform/theme/common/tokenClassificationRegistry.ts"],"names":[],"mappings":"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","file":"tokenClassificationRegistry.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Color } from 'vs/base/common/color';\nimport { IColorTheme } from 'vs/platform/theme/common/themeService';\nimport * as nls from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\n\nexport const TOKEN_TYPE_WILDCARD = '*';\nexport const TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR = ':';\nexport const CLASSIFIER_MODIFIER_SEPARATOR = '.';\n\n// qualified string [type|*](.modifier)*(/language)!\nexport type TokenClassificationString = string;\n\nexport const idPattern = '\\\\w+[-_\\\\w+]*';\nexport const typeAndModifierIdPattern = `^${idPattern}$`;\n\nexport const selectorPattern = `^(${idPattern}|\\\\*)(\\\\${CLASSIFIER_MODIFIER_SEPARATOR}${idPattern})*(\\\\${TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR}${idPattern})?$`;\n\nexport const fontStylePattern = '^(\\\\s*(italic|bold|underline))*\\\\s*$';\n\nexport interface TokenSelector {\n\tmatch(type: string, modifiers: string[], language: string): number;\n\treadonly id: string;\n}\n\nexport interface TokenTypeOrModifierContribution {\n\treadonly num: number;\n\treadonly id: string;\n\treadonly superType?: string;\n\treadonly description: string;\n\treadonly deprecationMessage?: string;\n}\n\n\nexport interface TokenStyleData {\n\tforeground?: Color;\n\tbold?: boolean;\n\tunderline?: boolean;\n\titalic?: boolean;\n}\n\nexport class TokenStyle implements Readonly<TokenStyleData> {\n\tconstructor(\n\t\tpublic readonly foreground?: Color,\n\t\tpublic readonly bold?: boolean,\n\t\tpublic readonly underline?: boolean,\n\t\tpublic readonly italic?: boolean,\n\t) {\n\t}\n}\n\nexport namespace TokenStyle {\n\texport function toJSONObject(style: TokenStyle): any {\n\t\treturn {\n\t\t\t_foreground: style.foreground === undefined ? null : Color.Format.CSS.formatHexA(style.foreground, true),\n\t\t\t_bold: style.bold === undefined ? null : style.bold,\n\t\t\t_underline: style.underline === undefined ? null : style.underline,\n\t\t\t_italic: style.italic === undefined ? null : style.italic,\n\t\t};\n\t}\n\texport function fromJSONObject(obj: any): TokenStyle | undefined {\n\t\tif (obj) {\n\t\t\tconst boolOrUndef = (b: any) => (typeof b === 'boolean') ? b : undefined;\n\t\t\tconst colorOrUndef = (s: any) => (typeof s === 'string') ? Color.fromHex(s) : undefined;\n\t\t\treturn new TokenStyle(colorOrUndef(obj._foreground), boolOrUndef(obj._bold), boolOrUndef(obj._underline), boolOrUndef(obj._italic));\n\t\t}\n\t\treturn undefined;\n\t}\n\texport function equals(s1: any, s2: any): boolean {\n\t\tif (s1 === s2) {\n\t\t\treturn true;\n\t\t}\n\t\treturn s1 !== undefined && s2 !== undefined\n\t\t\t&& (s1.foreground instanceof Color ? s1.foreground.equals(s2.foreground) : s2.foreground === undefined)\n\t\t\t&& s1.bold === s2.bold\n\t\t\t&& s1.underline === s2.underline\n\t\t\t&& s1.italic === s2.italic;\n\t}\n\texport function is(s: any): s is TokenStyle {\n\t\treturn s instanceof TokenStyle;\n\t}\n\texport function fromData(data: { foreground?: Color, bold?: boolean, underline?: boolean, italic?: boolean }): TokenStyle {\n\t\treturn new TokenStyle(data.foreground, data.bold, data.underline, data.italic);\n\t}\n\texport function fromSettings(foreground: string | undefined, fontStyle: string | undefined, bold?: boolean, underline?: boolean, italic?: boolean): TokenStyle {\n\t\tlet foregroundColor = undefined;\n\t\tif (foreground !== undefined) {\n\t\t\tforegroundColor = Color.fromHex(foreground);\n\t\t}\n\t\tif (fontStyle !== undefined) {\n\t\t\tbold = italic = underline = false;\n\t\t\tconst expression = /italic|bold|underline/g;\n\t\t\tlet match;\n\t\t\twhile ((match = expression.exec(fontStyle))) {\n\t\t\t\tswitch (match[0]) {\n\t\t\t\t\tcase 'bold': bold = true; break;\n\t\t\t\t\tcase 'italic': italic = true; break;\n\t\t\t\t\tcase 'underline': underline = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new TokenStyle(foregroundColor, bold, underline, italic);\n\t}\n}\n\nexport type ProbeScope = string[];\n\nexport interface TokenStyleFunction {\n\t(theme: IColorTheme): TokenStyle | undefined;\n}\n\nexport interface TokenStyleDefaults {\n\tscopesToProbe?: ProbeScope[];\n\tlight?: TokenStyleValue;\n\tdark?: TokenStyleValue;\n\thc?: TokenStyleValue;\n}\n\nexport interface SemanticTokenDefaultRule {\n\tselector: TokenSelector;\n\tdefaults: TokenStyleDefaults;\n}\n\nexport interface SemanticTokenRule {\n\tstyle: TokenStyle;\n\tselector: TokenSelector;\n}\n\nexport namespace SemanticTokenRule {\n\texport function fromJSONObject(registry: ITokenClassificationRegistry, o: any): SemanticTokenRule | undefined {\n\t\tif (o && typeof o._selector === 'string' && o._style) {\n\t\t\tconst style = TokenStyle.fromJSONObject(o._style);\n\t\t\tif (style) {\n\t\t\t\ttry {\n\t\t\t\t\treturn { selector: registry.parseTokenSelector(o._selector), style };\n\t\t\t\t} catch (_ignore) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\texport function toJSONObject(rule: SemanticTokenRule): any {\n\t\treturn {\n\t\t\t_selector: rule.selector.id,\n\t\t\t_style: TokenStyle.toJSONObject(rule.style)\n\t\t};\n\t}\n\texport function equals(r1: SemanticTokenRule | undefined, r2: SemanticTokenRule | undefined) {\n\t\tif (r1 === r2) {\n\t\t\treturn true;\n\t\t}\n\t\treturn r1 !== undefined && r2 !== undefined\n\t\t\t&& r1.selector && r2.selector && r1.selector.id === r2.selector.id\n\t\t\t&& TokenStyle.equals(r1.style, r2.style);\n\t}\n\texport function is(r: any): r is SemanticTokenRule {\n\t\treturn r && r.selector && typeof r.selector.id === 'string' && TokenStyle.is(r.style);\n\t}\n}\n\n/**\n * A TokenStyle Value is either a token style literal, or a TokenClassificationString\n */\nexport type TokenStyleValue = TokenStyle | TokenClassificationString;\n\n// TokenStyle registry\nexport const Extensions = {\n\tTokenClassificationContribution: 'base.contributions.tokenClassification'\n};\n\nexport interface ITokenClassificationRegistry {\n\n\treadonly onDidChangeSchema: Event<void>;\n\n\t/**\n\t * Register a token type to the registry.\n\t * @param id The TokenType id as used in theme description files\n\t * @param description the description\n\t */\n\tregisterTokenType(id: string, description: string, superType?: string, deprecationMessage?: string): void;\n\n\t/**\n\t * Register a token modifier to the registry.\n\t * @param id The TokenModifier id as used in theme description files\n\t * @param description the description\n\t */\n\tregisterTokenModifier(id: string, description: string): void;\n\n\t/**\n\t * Parses a token selector from a selector string.\n\t * @param selectorString selector string in the form (*|type)(.modifier)*\n\t * @param language language to which the selector applies or undefined if the selector is for all languafe\n\t * @returns the parsesd selector\n\t * @throws an error if the string is not a valid selector\n\t */\n\tparseTokenSelector(selectorString: string, language?: string): TokenSelector;\n\n\t/**\n\t * Register a TokenStyle default to the registry.\n\t * @param selector The rule selector\n\t * @param defaults The default values\n\t */\n\tregisterTokenStyleDefault(selector: TokenSelector, defaults: TokenStyleDefaults): void;\n\n\t/**\n\t * Deregister a TokenStyle default to the registry.\n\t * @param selector The rule selector\n\t */\n\tderegisterTokenStyleDefault(selector: TokenSelector): void;\n\n\t/**\n\t * Deregister a TokenType from the registry.\n\t */\n\tderegisterTokenType(id: string): void;\n\n\t/**\n\t * Deregister a TokenModifier from the registry.\n\t */\n\tderegisterTokenModifier(id: string): void;\n\n\t/**\n\t * Get all TokenType contributions\n\t */\n\tgetTokenTypes(): TokenTypeOrModifierContribution[];\n\n\t/**\n\t * Get all TokenModifier contributions\n\t */\n\tgetTokenModifiers(): TokenTypeOrModifierContribution[];\n\n\t/**\n\t * The styling rules to used when a schema does not define any styling rules.\n\t */\n\tgetTokenStylingDefaultRules(): SemanticTokenDefaultRule[];\n\n\t/**\n\t * JSON schema for an object to assign styling to token classifications\n\t */\n\tgetTokenStylingSchema(): IJSONSchema;\n}\n\nclass TokenClassificationRegistry implements ITokenClassificationRegistry {\n\n\tprivate readonly _onDidChangeSchema = new Emitter<void>();\n\treadonly onDidChangeSchema: Event<void> = this._onDidChangeSchema.event;\n\n\tprivate currentTypeNumber = 0;\n\tprivate currentModifierBit = 1;\n\n\tprivate tokenTypeById: { [key: string]: TokenTypeOrModifierContribution };\n\tprivate tokenModifierById: { [key: string]: TokenTypeOrModifierContribution };\n\n\tprivate tokenStylingDefaultRules: SemanticTokenDefaultRule[] = [];\n\n\tprivate typeHierarchy: { [id: string]: string[] };\n\n\tprivate tokenStylingSchema: IJSONSchema & { properties: IJSONSchemaMap, patternProperties: IJSONSchemaMap } = {\n\t\ttype: 'object',\n\t\tproperties: {},\n\t\tpatternProperties: {\n\t\t\t[selectorPattern]: getStylingSchemeEntry()\n\t\t},\n\t\t//errorMessage: nls.localize('schema.token.errors', 'Valid token selectors have the form (*|tokenType)(.tokenModifier)*(:tokenLanguage)?.'),\n\t\tadditionalProperties: false,\n\t\tdefinitions: {\n\t\t\tstyle: {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('schema.token.settings', 'Colors and styles for the token.'),\n\t\t\t\tproperties: {\n\t\t\t\t\tforeground: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.token.foreground', 'Foreground color for the token.'),\n\t\t\t\t\t\tformat: 'color-hex',\n\t\t\t\t\t\tdefault: '#ff0000'\n\t\t\t\t\t},\n\t\t\t\t\tbackground: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdeprecationMessage: nls.localize('schema.token.background.warning', 'Token background colors are currently not supported.')\n\t\t\t\t\t},\n\t\t\t\t\tfontStyle: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.token.fontStyle', 'Sets the all font styles of the rule: \\'italic\\', \\'bold\\' or \\'underline\\' or a combination. All styles that are not listed are unset. The empty string unsets all styles.'),\n\t\t\t\t\t\tpattern: fontStylePattern,\n\t\t\t\t\t\tpatternErrorMessage: nls.localize('schema.fontStyle.error', 'Font style must be \\'italic\\', \\'bold\\' or \\'underline\\' or a combination. The empty string unsets all styles.'),\n\t\t\t\t\t\tdefaultSnippets: [{ label: nls.localize('schema.token.fontStyle.none', 'None (clear inherited style)'), bodyText: '\"\"' }, { body: 'italic' }, { body: 'bold' }, { body: 'underline' }, { body: 'italic underline' }, { body: 'bold underline' }, { body: 'italic bold underline' }]\n\t\t\t\t\t},\n\t\t\t\t\tbold: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('schema.token.bold', 'Sets or unsets the font style to bold. Note, the presence of \\'fontStyle\\' overrides this setting.'),\n\t\t\t\t\t},\n\t\t\t\t\titalic: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('schema.token.italic', 'Sets or unsets the font style to italic. Note, the presence of \\'fontStyle\\' overrides this setting.'),\n\t\t\t\t\t},\n\t\t\t\t\tunderline: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('schema.token.underline', 'Sets or unsets the font style to underline. Note, the presence of \\'fontStyle\\' overrides this setting.'),\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tdefaultSnippets: [{ body: { foreground: '${1:#FF0000}', fontStyle: '${2:bold}' } }]\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.tokenTypeById = Object.create(null);\n\t\tthis.tokenModifierById = Object.create(null);\n\t\tthis.typeHierarchy = Object.create(null);\n\t}\n\n\tpublic registerTokenType(id: string, description: string, superType?: string, deprecationMessage?: string): void {\n\t\tif (!id.match(typeAndModifierIdPattern)) {\n\t\t\tthrow new Error('Invalid token type id.');\n\t\t}\n\t\tif (superType && !superType.match(typeAndModifierIdPattern)) {\n\t\t\tthrow new Error('Invalid token super type id.');\n\t\t}\n\n\t\tconst num = this.currentTypeNumber++;\n\t\tlet tokenStyleContribution: TokenTypeOrModifierContribution = { num, id, superType, description, deprecationMessage };\n\t\tthis.tokenTypeById[id] = tokenStyleContribution;\n\n\t\tconst stylingSchemeEntry = getStylingSchemeEntry(description, deprecationMessage);\n\t\tthis.tokenStylingSchema.properties[id] = stylingSchemeEntry;\n\t\tthis.typeHierarchy = Object.create(null);\n\t}\n\n\tpublic registerTokenModifier(id: string, description: string, deprecationMessage?: string): void {\n\t\tif (!id.match(typeAndModifierIdPattern)) {\n\t\t\tthrow new Error('Invalid token modifier id.');\n\t\t}\n\n\t\tconst num = this.currentModifierBit;\n\t\tthis.currentModifierBit = this.currentModifierBit * 2;\n\t\tlet tokenStyleContribution: TokenTypeOrModifierContribution = { num, id, description, deprecationMessage };\n\t\tthis.tokenModifierById[id] = tokenStyleContribution;\n\n\t\tthis.tokenStylingSchema.properties[`*.${id}`] = getStylingSchemeEntry(description, deprecationMessage);\n\t}\n\n\tpublic parseTokenSelector(selectorString: string, language?: string): TokenSelector {\n\t\tconst selector = parseClassifierString(selectorString, language);\n\n\t\tif (!selector.type) {\n\t\t\treturn {\n\t\t\t\tmatch: () => -1,\n\t\t\t\tid: '$invalid'\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmatch: (type: string, modifiers: string[], language: string) => {\n\t\t\t\tlet score = 0;\n\t\t\t\tif (selector.language !== undefined) {\n\t\t\t\t\tif (selector.language !== language) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tscore += 10;\n\t\t\t\t}\n\t\t\t\tif (selector.type !== TOKEN_TYPE_WILDCARD) {\n\t\t\t\t\tconst hierarchy = this.getTypeHierarchy(type);\n\t\t\t\t\tconst level = hierarchy.indexOf(selector.type);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tscore += (100 - level);\n\t\t\t\t}\n\t\t\t\t// all selector modifiers must be present\n\t\t\t\tfor (const selectorModifier of selector.modifiers) {\n\t\t\t\t\tif (modifiers.indexOf(selectorModifier) === -1) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn score + selector.modifiers.length * 100;\n\t\t\t},\n\t\t\tid: `${[selector.type, ...selector.modifiers.sort()].join('.')}${selector.language !== undefined ? ':' + selector.language : ''}`\n\t\t};\n\t}\n\n\tpublic registerTokenStyleDefault(selector: TokenSelector, defaults: TokenStyleDefaults): void {\n\t\tthis.tokenStylingDefaultRules.push({ selector, defaults });\n\t}\n\n\tpublic deregisterTokenStyleDefault(selector: TokenSelector): void {\n\t\tconst selectorString = selector.id;\n\t\tthis.tokenStylingDefaultRules = this.tokenStylingDefaultRules.filter(r => r.selector.id !== selectorString);\n\t}\n\n\tpublic deregisterTokenType(id: string): void {\n\t\tdelete this.tokenTypeById[id];\n\t\tdelete this.tokenStylingSchema.properties[id];\n\t\tthis.typeHierarchy = Object.create(null);\n\t}\n\n\tpublic deregisterTokenModifier(id: string): void {\n\t\tdelete this.tokenModifierById[id];\n\t\tdelete this.tokenStylingSchema.properties[`*.${id}`];\n\t}\n\n\tpublic getTokenTypes(): TokenTypeOrModifierContribution[] {\n\t\treturn Object.keys(this.tokenTypeById).map(id => this.tokenTypeById[id]);\n\t}\n\n\tpublic getTokenModifiers(): TokenTypeOrModifierContribution[] {\n\t\treturn Object.keys(this.tokenModifierById).map(id => this.tokenModifierById[id]);\n\t}\n\n\tpublic getTokenStylingSchema(): IJSONSchema {\n\t\treturn this.tokenStylingSchema;\n\t}\n\n\tpublic getTokenStylingDefaultRules(): SemanticTokenDefaultRule[] {\n\t\treturn this.tokenStylingDefaultRules;\n\t}\n\n\tprivate getTypeHierarchy(typeId: string): string[] {\n\t\tlet hierarchy = this.typeHierarchy[typeId];\n\t\tif (!hierarchy) {\n\t\t\tthis.typeHierarchy[typeId] = hierarchy = [typeId];\n\t\t\tlet type = this.tokenTypeById[typeId];\n\t\t\twhile (type && type.superType) {\n\t\t\t\thierarchy.push(type.superType);\n\t\t\t\ttype = this.tokenTypeById[type.superType];\n\t\t\t}\n\t\t}\n\t\treturn hierarchy;\n\t}\n\n\n\tpublic toString() {\n\t\tlet sorter = (a: string, b: string) => {\n\t\t\tlet cat1 = a.indexOf('.') === -1 ? 0 : 1;\n\t\t\tlet cat2 = b.indexOf('.') === -1 ? 0 : 1;\n\t\t\tif (cat1 !== cat2) {\n\t\t\t\treturn cat1 - cat2;\n\t\t\t}\n\t\t\treturn a.localeCompare(b);\n\t\t};\n\n\t\treturn Object.keys(this.tokenTypeById).sort(sorter).map(k => `- \\`${k}\\`: ${this.tokenTypeById[k].description}`).join('\\n');\n\t}\n\n}\n\nconst CHAR_LANGUAGE = TOKEN_CLASSIFIER_LANGUAGE_SEPARATOR.charCodeAt(0);\nconst CHAR_MODIFIER = CLASSIFIER_MODIFIER_SEPARATOR.charCodeAt(0);\n\nexport function parseClassifierString(s: string, defaultLanguage: string): { type: string, modifiers: string[], language: string; };\nexport function parseClassifierString(s: string, defaultLanguage?: string): { type: string, modifiers: string[], language: string | undefined; };\nexport function parseClassifierString(s: string, defaultLanguage: string | undefined): { type: string, modifiers: string[], language: string | undefined; } {\n\tlet k = s.length;\n\tlet language: string | undefined = defaultLanguage;\n\tconst modifiers = [];\n\n\tfor (let i = k - 1; i >= 0; i--) {\n\t\tconst ch = s.charCodeAt(i);\n\t\tif (ch === CHAR_LANGUAGE || ch === CHAR_MODIFIER) {\n\t\t\tconst segment = s.substring(i + 1, k);\n\t\t\tk = i;\n\t\t\tif (ch === CHAR_LANGUAGE) {\n\t\t\t\tlanguage = segment;\n\t\t\t} else {\n\t\t\t\tmodifiers.push(segment);\n\t\t\t}\n\t\t}\n\t}\n\tconst type = s.substring(0, k);\n\treturn { type, modifiers, language };\n}\n\n\nlet tokenClassificationRegistry = createDefaultTokenClassificationRegistry();\nplatform.Registry.add(Extensions.TokenClassificationContribution, tokenClassificationRegistry);\n\n\nfunction createDefaultTokenClassificationRegistry(): TokenClassificationRegistry {\n\n\tconst registry = new TokenClassificationRegistry();\n\n\tfunction registerTokenType(id: string, description: string, scopesToProbe: ProbeScope[] = [], superType?: string, deprecationMessage?: string): string {\n\t\tregistry.registerTokenType(id, description, superType, deprecationMessage);\n\t\tif (scopesToProbe) {\n\t\t\tregisterTokenStyleDefault(id, scopesToProbe);\n\t\t}\n\t\treturn id;\n\t}\n\n\tfunction registerTokenStyleDefault(selectorString: string, scopesToProbe: ProbeScope[]) {\n\t\ttry {\n\t\t\tconst selector = registry.parseTokenSelector(selectorString);\n\t\t\tregistry.registerTokenStyleDefault(selector, { scopesToProbe });\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// default token types\n\n\tregisterTokenType('comment', nls.localize('comment', \"Style for comments.\"), [['comment']]);\n\tregisterTokenType('string', nls.localize('string', \"Style for strings.\"), [['string']]);\n\tregisterTokenType('keyword', nls.localize('keyword', \"Style for keywords.\"), [['keyword.control']]);\n\tregisterTokenType('number', nls.localize('number', \"Style for numbers.\"), [['constant.numeric']]);\n\tregisterTokenType('regexp', nls.localize('regexp', \"Style for expressions.\"), [['constant.regexp']]);\n\tregisterTokenType('operator', nls.localize('operator', \"Style for operators.\"), [['keyword.operator']]);\n\n\tregisterTokenType('namespace', nls.localize('namespace', \"Style for namespaces.\"), [['entity.name.namespace']]);\n\n\tregisterTokenType('type', nls.localize('type', \"Style for types.\"), [['entity.name.type'], ['support.type']]);\n\tregisterTokenType('struct', nls.localize('struct', \"Style for structs.\"), [['entity.name.type.struct']]);\n\tregisterTokenType('class', nls.localize('class', \"Style for classes.\"), [['entity.name.type.class'], ['support.class']]);\n\tregisterTokenType('interface', nls.localize('interface', \"Style for interfaces.\"), [['entity.name.type.interface']]);\n\tregisterTokenType('enum', nls.localize('enum', \"Style for enums.\"), [['entity.name.type.enum']]);\n\tregisterTokenType('typeParameter', nls.localize('typeParameter', \"Style for type parameters.\"), [['entity.name.type.parameter']]);\n\n\tregisterTokenType('function', nls.localize('function', \"Style for functions\"), [['entity.name.function'], ['support.function']]);\n\tregisterTokenType('member', nls.localize('member', \"Style for member functions\"), [], 'method', 'Deprecated use `method` instead');\n\tregisterTokenType('method', nls.localize('method', \"Style for method (member functions)\"), [['entity.name.function.member'], ['support.function']]);\n\tregisterTokenType('macro', nls.localize('macro', \"Style for macros.\"), [['entity.name.function.preprocessor']]);\n\n\tregisterTokenType('variable', nls.localize('variable', \"Style for variables.\"), [['variable.other.readwrite'], ['entity.name.variable']]);\n\tregisterTokenType('parameter', nls.localize('parameter', \"Style for parameters.\"), [['variable.parameter']]);\n\tregisterTokenType('property', nls.localize('property', \"Style for properties.\"), [['variable.other.property']]);\n\tregisterTokenType('enumMember', nls.localize('enumMember', \"Style for enum members.\"), [['variable.other.enummember']]);\n\tregisterTokenType('event', nls.localize('event', \"Style for events.\"), [['variable.other.event']]);\n\n\tregisterTokenType('label', nls.localize('labels', \"Style for labels. \"), undefined);\n\n\t// default token modifiers\n\n\tregistry.registerTokenModifier('declaration', nls.localize('declaration', \"Style for all symbol declarations.\"), undefined);\n\tregistry.registerTokenModifier('documentation', nls.localize('documentation', \"Style to use for references in documentation.\"), undefined);\n\tregistry.registerTokenModifier('static', nls.localize('static', \"Style to use for symbols that are static.\"), undefined);\n\tregistry.registerTokenModifier('abstract', nls.localize('abstract', \"Style to use for symbols that are abstract.\"), undefined);\n\tregistry.registerTokenModifier('deprecated', nls.localize('deprecated', \"Style to use for symbols that are deprecated.\"), undefined);\n\tregistry.registerTokenModifier('modification', nls.localize('modification', \"Style to use for write accesses.\"), undefined);\n\tregistry.registerTokenModifier('async', nls.localize('async', \"Style to use for symbols that are async.\"), undefined);\n\tregistry.registerTokenModifier('readonly', nls.localize('readonly', \"Style to use for symbols that are readonly.\"), undefined);\n\n\n\tregisterTokenStyleDefault('variable.readonly', [['variable.other.constant']]);\n\tregisterTokenStyleDefault('property.readonly', [['variable.other.constant.property']]);\n\tregisterTokenStyleDefault('type.defaultLibrary', [['support.type']]);\n\tregisterTokenStyleDefault('class.defaultLibrary', [['support.class']]);\n\tregisterTokenStyleDefault('interface.defaultLibrary', [['support.class']]);\n\tregisterTokenStyleDefault('variable.defaultLibrary', [['support.variable'], ['support.other.variable']]);\n\tregisterTokenStyleDefault('variable.defaultLibrary.readonly', [['support.constant']]);\n\tregisterTokenStyleDefault('property.defaultLibrary', [['support.variable.property']]);\n\tregisterTokenStyleDefault('property.defaultLibrary.readonly', [['support.constant.property']]);\n\tregisterTokenStyleDefault('function.defaultLibrary', [['support.function']]);\n\tregisterTokenStyleDefault('member.defaultLibrary', [['support.function']]);\n\treturn registry;\n}\n\nexport function getTokenClassificationRegistry(): ITokenClassificationRegistry {\n\treturn tokenClassificationRegistry;\n}\n\nfunction getStylingSchemeEntry(description?: string, deprecationMessage?: string): IJSONSchema {\n\treturn {\n\t\tdescription,\n\t\tdeprecationMessage,\n\t\tdefaultSnippets: [{ body: '${1:#ff0000}' }],\n\t\tanyOf: [\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tformat: 'color-hex'\n\t\t\t},\n\t\t\t{\n\t\t\t\t$ref: '#definitions/style'\n\t\t\t}\n\t\t]\n\t};\n}\n\nexport const tokenStylingSchemaId = 'vscode://schemas/token-styling';\n\nlet schemaRegistry = platform.Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(tokenStylingSchemaId, tokenClassificationRegistry.getTokenStylingSchema());\n\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(tokenStylingSchemaId), 200);\ntokenClassificationRegistry.onDidChangeSchema(() => {\n\tif (!delayer.isScheduled()) {\n\t\tdelayer.schedule();\n\t}\n});\n"]}