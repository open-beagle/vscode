{"version":3,"file":"testThemeService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/theme/test/common/testThemeService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,cAAc;QAI1B,YACS,SAAoC,EAAE,EACvC,OAAO,mBAAW,CAAC,IAAI,EACd,uBAAuB,KAAK;YAFpC,WAAM,GAAN,MAAM,CAAgC;YACvC,SAAI,GAAJ,IAAI,CAAmB;YACd,yBAAoB,GAApB,oBAAoB,CAAQ;YAL7B,UAAK,GAAG,MAAM,CAAC;QAM3B,CAAC;QAEL,QAAQ,CAAC,KAAa,EAAE,UAAoB;YAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,KAAK,EAAE;gBACV,OAAO,aAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC5B;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,CAAC,KAAa;YACpB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC5C,CAAC;QAED,qBAAqB,CAAC,IAAY,EAAE,SAAmB,EAAE,aAAqB;YAC7E,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,IAAI,aAAa;YAChB,OAAO,EAAE,CAAC;QACX,CAAC;KACD;IA7BD,wCA6BC;IAED,MAAa,iBAAiB;QAA9B;YACC,iBAAY,GAAG,KAAK,CAAC;YACrB,mBAAc,GAAG,KAAK,CAAC;YACvB,wBAAmB,GAAG,KAAK,CAAC;QAC7B,CAAC;KAAA;IAJD,8CAIC;IAED,MAAa,gBAAgB;QAQ5B,YAAY,KAAK,GAAG,IAAI,cAAc,EAAE,EAAE,SAAS,GAAG,IAAI,iBAAiB,EAAE;YAH7E,mBAAc,GAAG,IAAI,eAAO,EAAe,CAAC;YAC5C,2BAAsB,GAAG,IAAI,eAAO,EAAkB,CAAC;YAGtD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QACjC,CAAC;QAED,aAAa;YACZ,OAAO,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;QAED,QAAQ,CAAC,KAAkB;YAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC;QAED,eAAe;YACd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5C,CAAC;QAED,IAAW,qBAAqB;YAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAClC,CAAC;QAED,gBAAgB;YACf,OAAO,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;QAED,IAAW,wBAAwB;YAClC,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAC1C,CAAC;KACD;IArCD,4CAqCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IThemeService, IColorTheme, IFileIconTheme, ITokenStyle } from 'vs/platform/theme/common/themeService';\nimport { Color } from 'vs/base/common/color';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport class TestColorTheme implements IColorTheme {\n\n\tpublic readonly label = 'test';\n\n\tconstructor(\n\t\tprivate colors: { [id: string]: string; } = {},\n\t\tpublic type = ColorScheme.DARK,\n\t\tpublic readonly semanticHighlighting = false\n\t) { }\n\n\tgetColor(color: string, useDefault?: boolean): Color | undefined {\n\t\tlet value = this.colors[color];\n\t\tif (value) {\n\t\t\treturn Color.fromHex(value);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tdefines(color: string): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined {\n\t\treturn undefined;\n\t}\n\n\tget tokenColorMap(): string[] {\n\t\treturn [];\n\t}\n}\n\nexport class TestFileIconTheme implements IFileIconTheme {\n\thasFileIcons = false;\n\thasFolderIcons = false;\n\thidesExplorerArrows = false;\n}\n\nexport class TestThemeService implements IThemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\t_colorTheme: IColorTheme;\n\t_fileIconTheme: IFileIconTheme;\n\t_onThemeChange = new Emitter<IColorTheme>();\n\t_onFileIconThemeChange = new Emitter<IFileIconTheme>();\n\n\tconstructor(theme = new TestColorTheme(), iconTheme = new TestFileIconTheme()) {\n\t\tthis._colorTheme = theme;\n\t\tthis._fileIconTheme = iconTheme;\n\t}\n\n\tgetColorTheme(): IColorTheme {\n\t\treturn this._colorTheme;\n\t}\n\n\tsetTheme(theme: IColorTheme) {\n\t\tthis._colorTheme = theme;\n\t\tthis.fireThemeChange();\n\t}\n\n\tfireThemeChange() {\n\t\tthis._onThemeChange.fire(this._colorTheme);\n\t}\n\n\tpublic get onDidColorThemeChange(): Event<IColorTheme> {\n\t\treturn this._onThemeChange.event;\n\t}\n\n\tgetFileIconTheme(): IFileIconTheme {\n\t\treturn this._fileIconTheme;\n\t}\n\n\tpublic get onDidFileIconThemeChange(): Event<IFileIconTheme> {\n\t\treturn this._onFileIconThemeChange.event;\n\t}\n}\n"]}