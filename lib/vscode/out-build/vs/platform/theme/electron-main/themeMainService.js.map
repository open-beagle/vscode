{"version":3,"file":"themeMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/theme/electron-main/themeMainService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,MAAM,gBAAgB,GAAG,SAAS,CAAC;IACnC,MAAM,eAAe,GAAG,SAAS,CAAC;IAClC,MAAM,mBAAmB,GAAG,SAAS,CAAC;IAEtC,MAAM,iBAAiB,GAAG,OAAO,CAAC;IAClC,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;IAElC,QAAA,iBAAiB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAoB,kBAAkB,CAAC,CAAC;IAQxF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;QAI5B,YAAmC,YAA2B;YAA3B,iBAAY,GAAZ,YAAY,CAAe;YAC7D,kBAAO,CAAC,EAAE,CAAC,yBAAyB,EAAE,CAAC,CAAQ,EAAE,QAAgB,EAAE,SAAiB,EAAE,EAAE;gBACvF,gBAAgB;gBAChB,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;oBAClC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;iBACjD;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,oBAAoB,CAAC,IAA+C;YAC3E,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAClE,CAAC;QAED,kBAAkB;YACjB,IAAI,CAAC,oBAAS,IAAI,sBAAW,CAAC,IAAI,sBAAW,CAAC,4BAA4B,EAAE;gBAC3E,OAAO,mBAAmB,CAAC;aAC3B;YAED,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAgB,oBAAoB,EAAE,IAAI,CAAC,CAAC;YACtF,IAAI,CAAC,UAAU,EAAE;gBAChB,IAAI,SAAiB,CAAC;gBACtB,IAAI,CAAC,oBAAS,IAAI,sBAAW,CAAC,IAAI,sBAAW,CAAC,4BAA4B,EAAE;oBAC3E,SAAS,GAAG,UAAU,CAAC;iBACvB;qBAAM;oBACN,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAS,iBAAiB,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1F;gBAED,UAAU,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;aAC1H;YAED,IAAI,sBAAW,IAAI,UAAU,CAAC,WAAW,EAAE,KAAK,eAAe,EAAE;gBAChE,UAAU,GAAG,SAAS,CAAC,CAAC,mDAAmD;aAC3E;YAED,OAAO,UAAU,CAAC;QACnB,CAAC;KACD,CAAA;IAzCY,gBAAgB;QAIf,WAAA,qBAAa,CAAA;OAJd,gBAAgB,CAyC5B;IAzCY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { ipcMain, nativeTheme } from 'electron';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nconst DEFAULT_BG_LIGHT = '#FFFFFF';\nconst DEFAULT_BG_DARK = '#1E1E1E';\nconst DEFAULT_BG_HC_BLACK = '#000000';\n\nconst THEME_STORAGE_KEY = 'theme';\nconst THEME_BG_STORAGE_KEY = 'themeBackground';\n\nexport const IThemeMainService = createDecorator<IThemeMainService>('themeMainService');\n\nexport interface IThemeMainService {\n\treadonly _serviceBrand: undefined;\n\n\tgetBackgroundColor(): string;\n}\n\nexport class ThemeMainService implements IThemeMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(@IStateService private stateService: IStateService) {\n\t\tipcMain.on('vscode:changeColorTheme', (e: Event, windowId: number, broadcast: string) => {\n\t\t\t// Theme changes\n\t\t\tif (typeof broadcast === 'string') {\n\t\t\t\tthis.storeBackgroundColor(JSON.parse(broadcast));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate storeBackgroundColor(data: { baseTheme: string, background: string }): void {\n\t\tthis.stateService.setItem(THEME_STORAGE_KEY, data.baseTheme);\n\t\tthis.stateService.setItem(THEME_BG_STORAGE_KEY, data.background);\n\t}\n\n\tgetBackgroundColor(): string {\n\t\tif ((isWindows || isMacintosh) && nativeTheme.shouldUseInvertedColorScheme) {\n\t\t\treturn DEFAULT_BG_HC_BLACK;\n\t\t}\n\n\t\tlet background = this.stateService.getItem<string | null>(THEME_BG_STORAGE_KEY, null);\n\t\tif (!background) {\n\t\t\tlet baseTheme: string;\n\t\t\tif ((isWindows || isMacintosh) && nativeTheme.shouldUseInvertedColorScheme) {\n\t\t\t\tbaseTheme = 'hc-black';\n\t\t\t} else {\n\t\t\t\tbaseTheme = this.stateService.getItem<string>(THEME_STORAGE_KEY, 'vs-dark').split(' ')[0];\n\t\t\t}\n\n\t\t\tbackground = (baseTheme === 'hc-black') ? DEFAULT_BG_HC_BLACK : (baseTheme === 'vs' ? DEFAULT_BG_LIGHT : DEFAULT_BG_DARK);\n\t\t}\n\n\t\tif (isMacintosh && background.toUpperCase() === DEFAULT_BG_DARK) {\n\t\t\tbackground = '#171717'; // https://github.com/electron/electron/issues/5150\n\t\t}\n\n\t\treturn background;\n\t}\n}\n"]}