{"version":3,"file":"iconsStyleSheet.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/theme/browser/iconsStyleSheet.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAahG,SAAgB,kBAAkB;QACjC,MAAM,kBAAkB,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC/C,MAAM,YAAY,GAAG,CAAA,GAAA,8BAAe,CAAA,EAAE,CAAC;QACvC,YAAY,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;QAE1D,OAAO;YACN,WAAW,EAAE,kBAAkB,CAAC,KAAK;YACrC,MAAM;gBACL,MAAM,WAAW,GAA2C,EAAE,CAAC;gBAC/D,MAAM,cAAc,GAAG,CAAC,YAA8B,EAAsB,EAAE;oBAC7E,IAAI,UAAU,GAAG,YAAY,CAAC,QAAQ,CAAC;oBACvC,OAAO,wBAAS,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;wBACzC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;wBAC9C,IAAI,CAAC,CAAC,EAAE;4BACP,OAAO,SAAS,CAAC;yBACjB;wBACD,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC;qBACxB;oBACD,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;oBACjC,IAAI,MAAM,EAAE;wBACX,MAAM,gBAAgB,GAAG,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,gBAAgB,EAAE;4BACrB,WAAW,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC;4BACvC,OAAO,YAAY,YAAY,CAAC,EAAE,uBAAuB,UAAU,CAAC,aAAa,mBAAmB,CAAA,GAAA,wBAAkB,CAAA,CAAC,MAAM,CAAC,KAAK,CAAC;yBACpI;qBACD;oBACD,OAAO,YAAY,YAAY,CAAC,EAAE,uBAAuB,UAAU,CAAC,aAAa,MAAM,CAAC;gBACzF,CAAC,CAAC;gBAEF,MAAM,KAAK,GAAG,EAAE,CAAC;gBACjB,KAAK,IAAI,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE;oBACjD,MAAM,IAAI,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;oBAC1C,IAAI,IAAI,EAAE;wBACT,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACjB;iBACD;gBACD,KAAK,IAAI,EAAE,IAAI,WAAW,EAAE;oBAC3B,MAAM,gBAAgB,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;oBACzC,MAAM,GAAG,GAAG,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjH,KAAK,CAAC,IAAI,CAAC,qBAAqB,GAAG,kBAAkB,CAAA,GAAA,wBAAkB,CAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;iBAClF;gBACD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;SACD,CAAC;IACH,CAAC;IA5CD,gDA4CC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { getIconRegistry, IconContribution, IconFontContribution } from 'vs/platform/theme/common/iconRegistry';\nimport { asCSSPropertyValue, asCSSUrl } from 'vs/base/browser/dom';\nimport { Event, Emitter } from 'vs/base/common/event';\n\n\nexport interface IIconsStyleSheet {\n\tgetCSS(): string;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(): IIconsStyleSheet {\n\tconst onDidChangeEmmiter = new Emitter<void>();\n\tconst iconRegistry = getIconRegistry();\n\ticonRegistry.onDidChange(() => onDidChangeEmmiter.fire());\n\n\treturn {\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS() {\n\t\t\tconst usedFontIds: { [id: string]: IconFontContribution } = {};\n\t\t\tconst formatIconRule = (contribution: IconContribution): string | undefined => {\n\t\t\t\tlet definition = contribution.defaults;\n\t\t\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\t\t\tif (!c) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tdefinition = c.defaults;\n\t\t\t\t}\n\t\t\t\tconst fontId = definition.fontId;\n\t\t\t\tif (fontId) {\n\t\t\t\t\tconst fontContribution = iconRegistry.getIconFont(fontId);\n\t\t\t\t\tif (fontContribution) {\n\t\t\t\t\t\tusedFontIds[fontId] = fontContribution;\n\t\t\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontId)}; }`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n\t\t\t};\n\n\t\t\tconst rules = [];\n\t\t\tfor (let contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst rule = formatIconRule(contribution);\n\t\t\t\tif (rule) {\n\t\t\t\t\trules.push(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let id in usedFontIds) {\n\t\t\t\tconst fontContribution = usedFontIds[id];\n\t\t\t\tconst src = fontContribution.definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n\t\t\t\trules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)}; }`);\n\t\t\t}\n\t\t\treturn rules.join('\\n');\n\t\t}\n\t};\n}\n"]}