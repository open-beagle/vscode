{"version":3,"file":"contextkey.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/contextkey/test/common/contextkey.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { isMacintosh, isLinux, isWindows } from 'vs/base/common/platform';\n\nfunction createContext(ctx: any) {\n\treturn {\n\t\tgetValue: (key: string) => {\n\t\t\treturn ctx[key];\n\t\t}\n\t};\n}\n\nsuite('ContextKeyExpr', () => {\n\ttest('ContextKeyExpr.equals', () => {\n\t\tlet a = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.has('a1'),\n\t\t\tContextKeyExpr.and(ContextKeyExpr.has('and.a')),\n\t\t\tContextKeyExpr.has('a2'),\n\t\t\tContextKeyExpr.regex('d3', /d.*/),\n\t\t\tContextKeyExpr.regex('d4', /\\*\\*3*/),\n\t\t\tContextKeyExpr.equals('b1', 'bb1'),\n\t\t\tContextKeyExpr.equals('b2', 'bb2'),\n\t\t\tContextKeyExpr.notEquals('c1', 'cc1'),\n\t\t\tContextKeyExpr.notEquals('c2', 'cc2'),\n\t\t\tContextKeyExpr.not('d1'),\n\t\t\tContextKeyExpr.not('d2')\n\t\t)!;\n\t\tlet b = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals('b2', 'bb2'),\n\t\t\tContextKeyExpr.notEquals('c1', 'cc1'),\n\t\t\tContextKeyExpr.not('d1'),\n\t\t\tContextKeyExpr.regex('d4', /\\*\\*3*/),\n\t\t\tContextKeyExpr.notEquals('c2', 'cc2'),\n\t\t\tContextKeyExpr.has('a2'),\n\t\t\tContextKeyExpr.equals('b1', 'bb1'),\n\t\t\tContextKeyExpr.regex('d3', /d.*/),\n\t\t\tContextKeyExpr.has('a1'),\n\t\t\tContextKeyExpr.and(ContextKeyExpr.equals('and.a', true)),\n\t\t\tContextKeyExpr.not('d2')\n\t\t)!;\n\t\tassert(a.equals(b), 'expressions should be equal');\n\t});\n\n\ttest('normalize', () => {\n\t\tlet key1IsTrue = ContextKeyExpr.equals('key1', true);\n\t\tlet key1IsNotFalse = ContextKeyExpr.notEquals('key1', false);\n\t\tlet key1IsFalse = ContextKeyExpr.equals('key1', false);\n\t\tlet key1IsNotTrue = ContextKeyExpr.notEquals('key1', true);\n\n\t\tassert.ok(key1IsTrue.equals(ContextKeyExpr.has('key1')));\n\t\tassert.ok(key1IsNotFalse.equals(ContextKeyExpr.has('key1')));\n\t\tassert.ok(key1IsFalse.equals(ContextKeyExpr.not('key1')));\n\t\tassert.ok(key1IsNotTrue.equals(ContextKeyExpr.not('key1')));\n\t});\n\n\ttest('evaluate', () => {\n\t\tlet context = createContext({\n\t\t\t'a': true,\n\t\t\t'b': false,\n\t\t\t'c': '5',\n\t\t\t'd': 'd'\n\t\t});\n\t\tfunction testExpression(expr: string, expected: boolean): void {\n\t\t\t// console.log(expr + ' ' + expected);\n\t\t\tlet rules = ContextKeyExpr.deserialize(expr);\n\t\t\tassert.strictEqual(rules!.evaluate(context), expected, expr);\n\t\t}\n\t\tfunction testBatch(expr: string, value: any): void {\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\ttestExpression(expr, !!value);\n\t\t\ttestExpression(expr + ' == true', !!value);\n\t\t\ttestExpression(expr + ' != true', !value);\n\t\t\ttestExpression(expr + ' == false', !value);\n\t\t\ttestExpression(expr + ' != false', !!value);\n\t\t\ttestExpression(expr + ' == 5', value == <any>'5');\n\t\t\ttestExpression(expr + ' != 5', value != <any>'5');\n\t\t\ttestExpression('!' + expr, !value);\n\t\t\ttestExpression(expr + ' =~ /d.*/', /d.*/.test(value));\n\t\t\ttestExpression(expr + ' =~ /D/i', /D/i.test(value));\n\t\t\t/* eslint-enable eqeqeq */\n\t\t}\n\n\t\ttestBatch('a', true);\n\t\ttestBatch('b', false);\n\t\ttestBatch('c', '5');\n\t\ttestBatch('d', 'd');\n\t\ttestBatch('z', undefined);\n\n\t\ttestExpression('true', true);\n\t\ttestExpression('false', false);\n\t\ttestExpression('a && !b', true && !false);\n\t\ttestExpression('a && b', true && false);\n\t\ttestExpression('a && !b && c == 5', true && !false && '5' === '5');\n\t\ttestExpression('d =~ /e.*/', false);\n\n\t\t// precedence test: false && true || true === true because && is evaluated first\n\t\ttestExpression('b && a || a', true);\n\n\t\ttestExpression('a || b', true);\n\t\ttestExpression('b || b', false);\n\t\ttestExpression('b && a || a && b', false);\n\t});\n\n\ttest('negate', () => {\n\t\tfunction testNegate(expr: string, expected: string): void {\n\t\t\tconst actual = ContextKeyExpr.deserialize(expr)!.negate().serialize();\n\t\t\tassert.strictEqual(actual, expected);\n\t\t}\n\t\ttestNegate('true', 'false');\n\t\ttestNegate('false', 'true');\n\t\ttestNegate('a', '!a');\n\t\ttestNegate('a && b || c', '!a && !c || !b && !c');\n\t\ttestNegate('a && b || c || d', '!a && !c && !d || !b && !c && !d');\n\t\ttestNegate('!a && !b || !c && !d', 'a && c || a && d || b && c || b && d');\n\t\ttestNegate('!a && !b || !c && !d || !e && !f', 'a && c && e || a && c && f || a && d && e || a && d && f || b && c && e || b && c && f || b && d && e || b && d && f');\n\t});\n\n\ttest('false, true', () => {\n\t\tfunction testNormalize(expr: string, expected: string): void {\n\t\t\tconst actual = ContextKeyExpr.deserialize(expr)!.serialize();\n\t\t\tassert.strictEqual(actual, expected);\n\t\t}\n\t\ttestNormalize('true', 'true');\n\t\ttestNormalize('!true', 'false');\n\t\ttestNormalize('false', 'false');\n\t\ttestNormalize('!false', 'true');\n\t\ttestNormalize('a && true', 'a');\n\t\ttestNormalize('a && false', 'false');\n\t\ttestNormalize('a || true', 'true');\n\t\ttestNormalize('a || false', 'a');\n\t\ttestNormalize('isMac', isMacintosh ? 'true' : 'false');\n\t\ttestNormalize('isLinux', isLinux ? 'true' : 'false');\n\t\ttestNormalize('isWindows', isWindows ? 'true' : 'false');\n\t});\n\n\ttest('issue #101015: distribute OR', () => {\n\t\tfunction t(expr1: string, expr2: string, expected: string | undefined): void {\n\t\t\tconst e1 = ContextKeyExpr.deserialize(expr1);\n\t\t\tconst e2 = ContextKeyExpr.deserialize(expr2);\n\t\t\tconst actual = ContextKeyExpr.and(e1, e2)?.serialize();\n\t\t\tassert.strictEqual(actual, expected);\n\t\t}\n\t\tt('a', 'b', 'a && b');\n\t\tt('a || b', 'c', 'a && c || b && c');\n\t\tt('a || b', 'c || d', 'a && c || a && d || b && c || b && d');\n\t\tt('a || b', 'c && d', 'a && c && d || b && c && d');\n\t\tt('a || b', 'c && d || e', 'a && e || b && e || a && c && d || b && c && d');\n\t});\n\n\ttest('ContextKeyInExpr', () => {\n\t\tconst ainb = ContextKeyExpr.deserialize('a in b')!;\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 3, 'b': [3, 2, 1] })), true);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 3, 'b': [1, 2, 3] })), true);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 3, 'b': [1, 2] })), false);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 3 })), false);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 3, 'b': null })), false);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'x', 'b': ['x'] })), true);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'x', 'b': ['y'] })), false);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'x', 'b': {} })), false);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'x', 'b': { 'x': false } })), true);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'x', 'b': { 'x': true } })), true);\n\t\tassert.strictEqual(ainb.evaluate(createContext({ 'a': 'prototype', 'b': {} })), false);\n\t});\n\n\ttest('issue #106524: distributing AND should normalize', () => {\n\t\tconst actual = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.or(\n\t\t\t\tContextKeyExpr.has('a'),\n\t\t\t\tContextKeyExpr.has('b')\n\t\t\t),\n\t\t\tContextKeyExpr.has('c')\n\t\t);\n\t\tconst expected = ContextKeyExpr.or(\n\t\t\tContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.has('a'),\n\t\t\t\tContextKeyExpr.has('c')\n\t\t\t),\n\t\t\tContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.has('b'),\n\t\t\t\tContextKeyExpr.has('c')\n\t\t\t)\n\t\t);\n\t\tassert.strictEqual(actual!.equals(expected!), true);\n\t});\n\n\ttest('Greater, GreaterEquals, Smaller, SmallerEquals evaluate', () => {\n\t\tfunction checkEvaluate(expr: string, ctx: any, expected: any): void {\n\t\t\tconst _expr = ContextKeyExpr.deserialize(expr)!;\n\t\t\tassert.strictEqual(_expr.evaluate(createContext(ctx)), expected);\n\t\t}\n\n\t\tcheckEvaluate('a>1', {}, false);\n\t\tcheckEvaluate('a>1', { a: 0 }, false);\n\t\tcheckEvaluate('a>1', { a: 1 }, false);\n\t\tcheckEvaluate('a>1', { a: 2 }, true);\n\t\tcheckEvaluate('a>1', { a: '0' }, false);\n\t\tcheckEvaluate('a>1', { a: '1' }, false);\n\t\tcheckEvaluate('a>1', { a: '2' }, true);\n\t\tcheckEvaluate('a>1', { a: 'a' }, false);\n\n\t\tcheckEvaluate('a>10', { a: 2 }, false);\n\t\tcheckEvaluate('a>10', { a: 11 }, true);\n\t\tcheckEvaluate('a>10', { a: '11' }, true);\n\t\tcheckEvaluate('a>10', { a: '2' }, false);\n\t\tcheckEvaluate('a>10', { a: '11' }, true);\n\n\t\tcheckEvaluate('a>1.1', { a: 1 }, false);\n\t\tcheckEvaluate('a>1.1', { a: 2 }, true);\n\t\tcheckEvaluate('a>1.1', { a: 11 }, true);\n\t\tcheckEvaluate('a>1.1', { a: '1.1' }, false);\n\t\tcheckEvaluate('a>1.1', { a: '2' }, true);\n\t\tcheckEvaluate('a>1.1', { a: '11' }, true);\n\n\t\tcheckEvaluate('a>b', { a: 'b' }, false);\n\t\tcheckEvaluate('a>b', { a: 'c' }, false);\n\t\tcheckEvaluate('a>b', { a: 1000 }, false);\n\n\t\tcheckEvaluate('a >= 2', { a: '1' }, false);\n\t\tcheckEvaluate('a >= 2', { a: '2' }, true);\n\t\tcheckEvaluate('a >= 2', { a: '3' }, true);\n\n\t\tcheckEvaluate('a < 2', { a: '1' }, true);\n\t\tcheckEvaluate('a < 2', { a: '2' }, false);\n\t\tcheckEvaluate('a < 2', { a: '3' }, false);\n\n\t\tcheckEvaluate('a <= 2', { a: '1' }, true);\n\t\tcheckEvaluate('a <= 2', { a: '2' }, true);\n\t\tcheckEvaluate('a <= 2', { a: '3' }, false);\n\t});\n\n\ttest('Greater, GreaterEquals, Smaller, SmallerEquals negate', () => {\n\t\tfunction checkNegate(expr: string, expected: string): void {\n\t\t\tconst a = ContextKeyExpr.deserialize(expr)!;\n\t\t\tconst b = a.negate();\n\t\t\tassert.strictEqual(b.serialize(), expected);\n\t\t}\n\n\t\tcheckNegate('a>1', 'a <= 1');\n\t\tcheckNegate('a>1.1', 'a <= 1.1');\n\t\tcheckNegate('a>b', 'a <= b');\n\n\t\tcheckNegate('a>=1', 'a < 1');\n\t\tcheckNegate('a>=1.1', 'a < 1.1');\n\t\tcheckNegate('a>=b', 'a < b');\n\n\t\tcheckNegate('a<1', 'a >= 1');\n\t\tcheckNegate('a<1.1', 'a >= 1.1');\n\t\tcheckNegate('a<b', 'a >= b');\n\n\t\tcheckNegate('a<=1', 'a > 1');\n\t\tcheckNegate('a<=1.1', 'a > 1.1');\n\t\tcheckNegate('a<=b', 'a > b');\n\t});\n\n\ttest('issue #111899: context keys can use `<` or `>` ', () => {\n\t\tconst actual = ContextKeyExpr.deserialize('editorTextFocus && vim.active && vim.use<C-r>')!;\n\t\tassert.ok(actual.equals(\n\t\t\tContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.has('editorTextFocus'),\n\t\t\t\tContextKeyExpr.has('vim.active'),\n\t\t\t\tContextKeyExpr.has('vim.use<C-r>'),\n\t\t\t)!\n\t\t));\n\t});\n});\n"]}