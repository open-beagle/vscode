{"version":3,"sources":["vs/platform/contextkey/browser/contextKeyService.ts"],"names":[],"mappings":"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","file":"contextKeyService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event, PauseableEmitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { IDisposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { distinct } from 'vs/base/common/objects';\nimport { localize } from 'vs/nls';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContext, IContextKey, IContextKeyChangeEvent, IContextKeyService, IContextKeyServiceTarget, IReadableSet, SET_CONTEXT_COMMAND_ID, ContextKeyExpression, RawContextKey, ContextKeyInfo } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\n\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\n\nexport class Context implements IContext {\n\n\tprotected _parent: Context | null;\n\tprotected _value: { [key: string]: any; };\n\tprotected _id: number;\n\n\tconstructor(id: number, parent: Context | null) {\n\t\tthis._id = id;\n\t\tthis._parent = parent;\n\t\tthis._value = Object.create(null);\n\t\tthis._value['_contextId'] = id;\n\t}\n\n\tpublic setValue(key: string, value: any): boolean {\n\t\t// console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n\t\tif (this._value[key] !== value) {\n\t\t\tthis._value[key] = value;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic removeValue(key: string): boolean {\n\t\t// console.log('REMOVE ' + key + ' FROM ' + this._id);\n\t\tif (key in this._value) {\n\t\t\tdelete this._value[key];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getValue<T>(key: string): T | undefined {\n\t\tconst ret = this._value[key];\n\t\tif (typeof ret === 'undefined' && this._parent) {\n\t\t\treturn this._parent.getValue<T>(key);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic updateParent(parent: Context): void {\n\t\tthis._parent = parent;\n\t}\n\n\tpublic collectAllValues(): { [key: string]: any; } {\n\t\tlet result = this._parent ? this._parent.collectAllValues() : Object.create(null);\n\t\tresult = { ...result, ...this._value };\n\t\tdelete result['_contextId'];\n\t\treturn result;\n\t}\n}\n\nclass NullContext extends Context {\n\n\tstatic readonly INSTANCE = new NullContext();\n\n\tconstructor() {\n\t\tsuper(-1, null);\n\t}\n\n\tpublic override setValue(key: string, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tpublic override removeValue(key: string): boolean {\n\t\treturn false;\n\t}\n\n\tpublic override getValue<T>(key: string): T | undefined {\n\t\treturn undefined;\n\t}\n\n\toverride collectAllValues(): { [key: string]: any; } {\n\t\treturn Object.create(null);\n\t}\n}\n\nclass ConfigAwareContextValuesContainer extends Context {\n\tprivate static readonly _keyPrefix = 'config.';\n\n\tprivate readonly _values = TernarySearchTree.forConfigKeys<any>();\n\tprivate readonly _listener: IDisposable;\n\n\tconstructor(\n\t\tid: number,\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\temitter: Emitter<IContextKeyChangeEvent>\n\t) {\n\t\tsuper(id, null);\n\n\t\tthis._listener = this._configurationService.onDidChangeConfiguration(event => {\n\t\t\tif (event.source === ConfigurationTarget.DEFAULT) {\n\t\t\t\t// new setting, reset everything\n\t\t\t\tconst allKeys = Array.from(Iterable.map(this._values, ([k]) => k));\n\t\t\t\tthis._values.clear();\n\t\t\t\temitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n\t\t\t} else {\n\t\t\t\tconst changedKeys: string[] = [];\n\t\t\t\tfor (const configKey of event.affectedKeys) {\n\t\t\t\t\tconst contextKey = `config.${configKey}`;\n\n\t\t\t\t\tconst cachedItems = this._values.findSuperstr(contextKey);\n\t\t\t\t\tif (cachedItems !== undefined) {\n\t\t\t\t\t\tchangedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n\t\t\t\t\t\tthis._values.deleteSuperstr(contextKey);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._values.has(contextKey)) {\n\t\t\t\t\t\tchangedKeys.push(contextKey);\n\t\t\t\t\t\tthis._values.delete(contextKey);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\temitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._listener.dispose();\n\t}\n\n\toverride getValue(key: string): any {\n\n\t\tif (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n\t\t\treturn super.getValue(key);\n\t\t}\n\n\t\tif (this._values.has(key)) {\n\t\t\treturn this._values.get(key);\n\t\t}\n\n\t\tconst configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n\t\tconst configValue = this._configurationService.getValue(configKey);\n\t\tlet value: any = undefined;\n\t\tswitch (typeof configValue) {\n\t\t\tcase 'number':\n\t\t\tcase 'boolean':\n\t\t\tcase 'string':\n\t\t\t\tvalue = configValue;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (Array.isArray(configValue)) {\n\t\t\t\t\tvalue = JSON.stringify(configValue);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = configValue;\n\t\t\t\t}\n\t\t}\n\n\t\tthis._values.set(key, value);\n\t\treturn value;\n\t}\n\n\toverride setValue(key: string, value: any): boolean {\n\t\treturn super.setValue(key, value);\n\t}\n\n\toverride removeValue(key: string): boolean {\n\t\treturn super.removeValue(key);\n\t}\n\n\toverride collectAllValues(): { [key: string]: any; } {\n\t\tconst result: { [key: string]: any } = Object.create(null);\n\t\tthis._values.forEach((value, index) => result[index] = value);\n\t\treturn { ...result, ...super.collectAllValues() };\n\t}\n}\n\nclass ContextKey<T> implements IContextKey<T> {\n\n\tprivate _service: AbstractContextKeyService;\n\tprivate _key: string;\n\tprivate _defaultValue: T | undefined;\n\n\tconstructor(service: AbstractContextKeyService, key: string, defaultValue: T | undefined) {\n\t\tthis._service = service;\n\t\tthis._key = key;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis.reset();\n\t}\n\n\tpublic set(value: T): void {\n\t\tthis._service.setContext(this._key, value);\n\t}\n\n\tpublic reset(): void {\n\t\tif (typeof this._defaultValue === 'undefined') {\n\t\t\tthis._service.removeContext(this._key);\n\t\t} else {\n\t\t\tthis._service.setContext(this._key, this._defaultValue);\n\t\t}\n\t}\n\n\tpublic get(): T | undefined {\n\t\treturn this._service.getContextKeyValue<T>(this._key);\n\t}\n}\n\nclass SimpleContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly key: string) { }\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\treturn keys.has(this.key);\n\t}\n}\n\nclass ArrayContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly keys: string[]) { }\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\tfor (const key of this.keys) {\n\t\t\tif (keys.has(key)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass CompositeContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly events: IContextKeyChangeEvent[]) { }\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\tfor (const e of this.events) {\n\t\t\tif (e.affectsSome(keys)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport abstract class AbstractContextKeyService implements IContextKeyService {\n\tdeclare _serviceBrand: undefined;\n\n\tprotected _isDisposed: boolean;\n\tprotected _myContextId: number;\n\n\tprotected _onDidChangeContext = new PauseableEmitter<IContextKeyChangeEvent>({ merge: input => new CompositeContextKeyChangeEvent(input) });\n\treadonly onDidChangeContext = this._onDidChangeContext.event;\n\n\tconstructor(myContextId: number) {\n\t\tthis._isDisposed = false;\n\t\tthis._myContextId = myContextId;\n\t}\n\n\tpublic get contextId(): number {\n\t\treturn this._myContextId;\n\t}\n\n\tabstract dispose(): void;\n\n\tpublic createKey<T>(key: string, defaultValue: T | undefined): IContextKey<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new ContextKey(this, key, defaultValue);\n\t}\n\n\n\tbufferChangeEvents(callback: Function): void {\n\t\tthis._onDidChangeContext.pause();\n\t\ttry {\n\t\t\tcallback();\n\t\t} finally {\n\t\t\tthis._onDidChangeContext.resume();\n\t\t}\n\t}\n\n\tpublic createScoped(domNode: IContextKeyServiceTarget): IContextKeyService {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new ScopedContextKeyService(this, domNode);\n\t}\n\n\tcreateOverlay(overlay: Iterable<[string, any]> = Iterable.empty()): IContextKeyService {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new OverlayContextKeyService(this, overlay);\n\t}\n\n\tpublic contextMatchesRules(rules: ContextKeyExpression | undefined): boolean {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\tconst context = this.getContextValuesContainer(this._myContextId);\n\t\tconst result = KeybindingResolver.contextMatchesRules(context, rules);\n\t\t// console.group(rules.serialize() + ' -> ' + result);\n\t\t// rules.keys().forEach(key => { console.log(key, ctx[key]); });\n\t\t// console.groupEnd();\n\t\treturn result;\n\t}\n\n\tpublic getContextKeyValue<T>(key: string): T | undefined {\n\t\tif (this._isDisposed) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.getContextValuesContainer(this._myContextId).getValue<T>(key);\n\t}\n\n\tpublic setContext(key: string, value: any): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst myContext = this.getContextValuesContainer(this._myContextId);\n\t\tif (!myContext) {\n\t\t\treturn;\n\t\t}\n\t\tif (myContext.setValue(key, value)) {\n\t\t\tthis._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n\t\t}\n\t}\n\n\tpublic removeContext(key: string): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n\t\t\tthis._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n\t\t}\n\t}\n\n\tpublic getContext(target: IContextKeyServiceTarget | null): IContext {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this.getContextValuesContainer(findContextAttr(target));\n\t}\n\n\tpublic abstract getContextValuesContainer(contextId: number): Context;\n\tpublic abstract createChildContext(parentContextId?: number): number;\n\tpublic abstract disposeContext(contextId: number): void;\n\tpublic abstract updateParent(parentContextKeyService?: IContextKeyService): void;\n}\n\nexport class ContextKeyService extends AbstractContextKeyService implements IContextKeyService {\n\n\tprivate _lastContextId: number;\n\tprivate readonly _contexts = new Map<number, Context>();\n\n\tprivate readonly _toDispose = new DisposableStore();\n\n\tconstructor(@IConfigurationService configurationService: IConfigurationService) {\n\t\tsuper(0);\n\t\tthis._lastContextId = 0;\n\n\n\t\tconst myContext = new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext);\n\t\tthis._contexts.set(this._myContextId, myContext);\n\t\tthis._toDispose.add(myContext);\n\n\t\t// Uncomment this to see the contexts continuously logged\n\t\t// let lastLoggedValue: string | null = null;\n\t\t// setInterval(() => {\n\t\t// \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n\t\t// \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n\t\t// \tif (lastLoggedValue !== logValue) {\n\t\t// \t\tlastLoggedValue = logValue;\n\t\t// \t\tconsole.log(lastLoggedValue);\n\t\t// \t}\n\t\t// }, 2000);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._onDidChangeContext.dispose();\n\t\tthis._isDisposed = true;\n\t\tthis._toDispose.dispose();\n\t}\n\n\tpublic getContextValuesContainer(contextId: number): Context {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this._contexts.get(contextId) || NullContext.INSTANCE;\n\t}\n\n\tpublic createChildContext(parentContextId: number = this._myContextId): number {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`ContextKeyService has been disposed`);\n\t\t}\n\t\tlet id = (++this._lastContextId);\n\t\tthis._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n\t\treturn id;\n\t}\n\n\tpublic disposeContext(contextId: number): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._contexts.delete(contextId);\n\t\t}\n\t}\n\n\tpublic updateParent(_parentContextKeyService: IContextKeyService): void {\n\t\tthrow new Error('Cannot update parent of root ContextKeyService');\n\t}\n}\n\nclass ScopedContextKeyService extends AbstractContextKeyService {\n\n\tprivate _parent: AbstractContextKeyService;\n\tprivate _domNode: IContextKeyServiceTarget;\n\n\tprivate readonly _parentChangeListener = new MutableDisposable();\n\n\tconstructor(parent: AbstractContextKeyService, domNode: IContextKeyServiceTarget) {\n\t\tsuper(parent.createChildContext());\n\t\tthis._parent = parent;\n\t\tthis._updateParentChangeListener();\n\n\t\tthis._domNode = domNode;\n\t\tif (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n\t\t\tlet extraInfo = '';\n\t\t\tif ((this._domNode as HTMLElement).classList) {\n\t\t\t\textraInfo = Array.from((this._domNode as HTMLElement).classList.values()).join(', ');\n\t\t\t}\n\n\t\t\tconsole.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n\t\t}\n\t\tthis._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n\t}\n\n\tprivate _updateParentChangeListener(): void {\n\t\t// Forward parent events to this listener. Parent will change.\n\t\tthis._parentChangeListener.value = this._parent.onDidChangeContext(this._onDidChangeContext.fire, this._onDidChangeContext);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onDidChangeContext.dispose();\n\t\tthis._parent.disposeContext(this._myContextId);\n\t\tthis._parentChangeListener.dispose();\n\t\tthis._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic getContextValuesContainer(contextId: number): Context {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this._parent.getContextValuesContainer(contextId);\n\t}\n\n\tpublic createChildContext(parentContextId: number = this._myContextId): number {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`ScopedContextKeyService has been disposed`);\n\t\t}\n\t\treturn this._parent.createChildContext(parentContextId);\n\t}\n\n\tpublic disposeContext(contextId: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._parent.disposeContext(contextId);\n\t}\n\n\tpublic updateParent(parentContextKeyService: AbstractContextKeyService): void {\n\t\tconst thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n\t\tconst oldAllValues = thisContainer.collectAllValues();\n\t\tthis._parent = parentContextKeyService;\n\t\tthis._updateParentChangeListener();\n\t\tconst newParentContainer = this._parent.getContextValuesContainer(this._parent.contextId);\n\t\tthisContainer.updateParent(newParentContainer);\n\n\t\tconst newAllValues = thisContainer.collectAllValues();\n\t\tconst allValuesDiff = {\n\t\t\t...distinct(oldAllValues, newAllValues),\n\t\t\t...distinct(newAllValues, oldAllValues)\n\t\t};\n\t\tconst changedKeys = Object.keys(allValuesDiff);\n\n\t\tthis._onDidChangeContext.fire(new ArrayContextKeyChangeEvent(changedKeys));\n\t}\n}\n\nclass OverlayContext implements IContext {\n\n\tconstructor(private parent: IContext, private overlay: ReadonlyMap<string, any>) { }\n\n\tgetValue<T>(key: string): T | undefined {\n\t\treturn this.overlay.has(key) ? this.overlay.get(key) : this.parent.getValue(key);\n\t}\n}\n\nclass OverlayContextKeyService implements IContextKeyService {\n\n\tdeclare _serviceBrand: undefined;\n\tprivate overlay: Map<string, any>;\n\n\tget contextId(): number {\n\t\treturn this.parent.contextId;\n\t}\n\n\tget onDidChangeContext(): Event<IContextKeyChangeEvent> {\n\t\treturn this.parent.onDidChangeContext;\n\t}\n\n\tconstructor(private parent: AbstractContextKeyService | OverlayContextKeyService, overlay: Iterable<[string, any]>) {\n\t\tthis.overlay = new Map(overlay);\n\t}\n\n\tbufferChangeEvents(callback: Function): void {\n\t\tthis.parent.bufferChangeEvents(callback);\n\t}\n\n\tcreateKey<T>(): IContextKey<T> {\n\t\tthrow new Error('Not supported.');\n\t}\n\n\tgetContext(target: IContextKeyServiceTarget | null): IContext {\n\t\treturn new OverlayContext(this.parent.getContext(target), this.overlay);\n\t}\n\n\tgetContextValuesContainer(contextId: number): IContext {\n\t\tconst parentContext = this.parent.getContextValuesContainer(contextId);\n\t\treturn new OverlayContext(parentContext, this.overlay);\n\t}\n\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean {\n\t\tconst context = this.getContextValuesContainer(this.contextId);\n\t\tconst result = KeybindingResolver.contextMatchesRules(context, rules);\n\t\treturn result;\n\t}\n\n\tgetContextKeyValue<T>(key: string): T | undefined {\n\t\treturn this.overlay.has(key) ? this.overlay.get(key) : this.parent.getContextKeyValue(key);\n\t}\n\n\tcreateScoped(): IContextKeyService {\n\t\tthrow new Error('Not supported.');\n\t}\n\n\tcreateOverlay(overlay: Iterable<[string, any]> = Iterable.empty()): IContextKeyService {\n\t\treturn new OverlayContextKeyService(this, overlay);\n\t}\n\n\tupdateParent(): void {\n\t\tthrow new Error('Not supported.');\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nfunction findContextAttr(domNode: IContextKeyServiceTarget | null): number {\n\twhile (domNode) {\n\t\tif (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n\t\t\tconst attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n\t\t\tif (attr) {\n\t\t\t\treturn parseInt(attr, 10);\n\t\t\t}\n\t\t\treturn NaN;\n\t\t}\n\t\tdomNode = domNode.parentElement;\n\t}\n\treturn 0;\n}\n\nCommandsRegistry.registerCommand(SET_CONTEXT_COMMAND_ID, function (accessor, contextKey: any, contextValue: any) {\n\taccessor.get(IContextKeyService).createKey(String(contextKey), contextValue);\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'getContextKeyInfo',\n\thandler() {\n\t\treturn [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n\t},\n\tdescription: {\n\t\tdescription: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n\t\targs: []\n\t}\n});\n\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n\tconst result: ContextKeyInfo[] = [];\n\tconst seen = new Set<string>();\n\tfor (let info of RawContextKey.all()) {\n\t\tif (!seen.has(info.key)) {\n\t\t\tseen.add(info.key);\n\t\t\tresult.push(info);\n\t\t}\n\t}\n\tresult.sort((a, b) => a.key.localeCompare(b.key));\n\tconsole.log(JSON.stringify(result, undefined, 2));\n});\n"]}