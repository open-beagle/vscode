{"version":3,"file":"mainProcessService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/ipc/electron-browser/mainProcessService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG;;OAEG;IACH,MAAa,6BAA6B;QAIzC,YACS,MAAyB,EACzB,MAAoB;YADpB,WAAM,GAAN,MAAM,CAAmB;YACzB,WAAM,GAAN,MAAM,CAAc;QACzB,CAAC;QAEL,UAAU,CAAC,WAAmB;YAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzD,CAAC;QAED,eAAe,CAAC,WAAmB,EAAE,OAA+B;YACnE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;KACD;IAhBD,sEAgBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { Server as MessagePortServer } from 'vs/base/parts/ipc/electron-browser/ipc.mp';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\n\n/**\n * An implementation of `IMainProcessService` that leverages MessagePorts.\n */\nexport class MessagePortMainProcessService implements IMainProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate server: MessagePortServer,\n\t\tprivate router: StaticRouter\n\t) { }\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.router);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n"]}