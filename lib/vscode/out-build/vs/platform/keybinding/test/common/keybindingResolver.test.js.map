{"version":3,"file":"keybindingResolver.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/keybinding/test/common/keybindingResolver.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { KeyChord, KeyCode, KeyMod, SimpleKeybinding, createKeybinding, createSimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OS } from 'vs/base/common/platform';\nimport { ContextKeyExpr, IContext, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\n\nfunction createContext(ctx: any) {\n\treturn {\n\t\tgetValue: (key: string) => {\n\t\t\treturn ctx[key];\n\t\t}\n\t};\n}\n\nsuite('KeybindingResolver', () => {\n\n\tfunction kbItem(keybinding: number, command: string, commandArgs: any, when: ContextKeyExpression | undefined, isDefault: boolean): ResolvedKeybindingItem {\n\t\tconst resolvedKeybinding = (keybinding !== 0 ? new USLayoutResolvedKeybinding(createKeybinding(keybinding, OS)!, OS) : undefined);\n\t\treturn new ResolvedKeybindingItem(\n\t\t\tresolvedKeybinding,\n\t\t\tcommand,\n\t\t\tcommandArgs,\n\t\t\twhen,\n\t\t\tisDefault,\n\t\t\tnull,\n\t\t\tfalse\n\t\t);\n\t}\n\n\tfunction getDispatchStr(runtimeKb: SimpleKeybinding): string {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(runtimeKb)!;\n\t}\n\n\ttest('resolve key', function () {\n\t\tlet keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z;\n\t\tlet runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tlet contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tlet keybindingItem = kbItem(keybinding, 'yes', null, contextRules, true);\n\n\t\tassert.strictEqual(KeybindingResolver.contextMatchesRules(createContext({ bar: 'baz' }), contextRules), true);\n\t\tassert.strictEqual(KeybindingResolver.contextMatchesRules(createContext({ bar: 'bz' }), contextRules), false);\n\n\t\tlet resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\t\tassert.strictEqual(resolver.resolve(createContext({ bar: 'baz' }), null, getDispatchStr(runtimeKeybinding))!.commandId, 'yes');\n\t\tassert.strictEqual(resolver.resolve(createContext({ bar: 'bz' }), null, getDispatchStr(runtimeKeybinding)), null);\n\t});\n\n\ttest('resolve key with arguments', function () {\n\t\tlet commandArgs = { text: 'no' };\n\t\tlet keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z;\n\t\tlet runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tlet contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tlet keybindingItem = kbItem(keybinding, 'yes', commandArgs, contextRules, true);\n\n\t\tlet resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\t\tassert.strictEqual(resolver.resolve(createContext({ bar: 'baz' }), null, getDispatchStr(runtimeKeybinding))!.commandArgs, commandArgs);\n\t});\n\n\ttest('KeybindingResolver.combine simple 1', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false),\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine simple 2', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_C, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true),\n\t\t\tkbItem(KeyCode.KEY_C, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false),\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with not matching when', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_A, '-yes1', null, ContextKeyExpr.equals('1', 'b'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with not matching keybinding', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_B, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with matching keybinding and when', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_A, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with unspecified keybinding', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(0, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with unspecified when', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_A, '-yes1', null, null!, false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('KeybindingResolver.combine removal with unspecified when and unspecified keybinding', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(0, '-yes1', null, null!, false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^', function () {\n\t\tlet defaults = [\n\t\t\tkbItem(KeyCode.KEY_A, '^yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t];\n\t\tlet overrides = [\n\t\t\tkbItem(KeyCode.KEY_A, '-yes1', null, null!, false)\n\t\t];\n\t\tlet actual = KeybindingResolver.combine(defaults, overrides);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tkbItem(KeyCode.KEY_B, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t]);\n\t});\n\n\ttest('contextIsEntirelyIncluded', () => {\n\t\tconst assertIsIncluded = (a: string | null, b: string | null) => {\n\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(ContextKeyExpr.deserialize(a), ContextKeyExpr.deserialize(b)), true);\n\t\t};\n\t\tconst assertIsNotIncluded = (a: string | null, b: string | null) => {\n\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(ContextKeyExpr.deserialize(a), ContextKeyExpr.deserialize(b)), false);\n\t\t};\n\n\t\tassertIsIncluded('key1', null);\n\t\tassertIsIncluded('key1', '');\n\t\tassertIsIncluded('key1', 'key1');\n\t\tassertIsIncluded('!key1', '');\n\t\tassertIsIncluded('!key1', '!key1');\n\t\tassertIsIncluded('key2', '');\n\t\tassertIsIncluded('key2', 'key2');\n\t\tassertIsIncluded('key1 && key1 && key2 && key2', 'key2');\n\t\tassertIsIncluded('key1 && key2', 'key2');\n\t\tassertIsIncluded('key1 && key2', 'key1');\n\t\tassertIsIncluded('key1 && key2', '');\n\t\tassertIsIncluded('key1', 'key1 || key2');\n\t\tassertIsIncluded('key1 || !key1', 'key2 || !key2');\n\t\tassertIsIncluded('key1', 'key1 || key2 && key3');\n\n\t\tassertIsNotIncluded('key1', '!key1');\n\t\tassertIsNotIncluded('!key1', 'key1');\n\t\tassertIsNotIncluded('key1 && key2', 'key3');\n\t\tassertIsNotIncluded('key1 && key2', 'key4');\n\t\tassertIsNotIncluded('key1', 'key2');\n\t\tassertIsNotIncluded('key1 || key2', 'key2');\n\t\tassertIsNotIncluded('', 'key2');\n\t\tassertIsNotIncluded(null, 'key2');\n\t});\n\n\ttest('resolve command', function () {\n\n\t\tfunction _kbItem(keybinding: number, command: string, when: ContextKeyExpression | undefined): ResolvedKeybindingItem {\n\t\t\treturn kbItem(keybinding, command, null, when, true);\n\t\t}\n\n\t\tlet items = [\n\t\t\t// This one will never match because its \"when\" is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KEY_X,\n\t\t\t\t'first',\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('key1', true),\n\t\t\t\t\tContextKeyExpr.notEquals('key2', false)\n\t\t\t\t)\n\t\t\t),\n\t\t\t// This one always overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KEY_X,\n\t\t\t\t'second',\n\t\t\t\tContextKeyExpr.equals('key2', true)\n\t\t\t),\n\t\t\t// This one is a secondary mapping for `second`\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KEY_Z,\n\t\t\t\t'second',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t// This one sometimes overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KEY_X,\n\t\t\t\t'third',\n\t\t\t\tContextKeyExpr.equals('key3', true)\n\t\t\t),\n\t\t\t// This one is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_Y,\n\t\t\t\t'fourth',\n\t\t\t\tContextKeyExpr.equals('key4', true)\n\t\t\t),\n\t\t\t// This one overwrites with a chord the previous one\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_Y, KeyCode.KEY_Z),\n\t\t\t\t'fifth',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t// This one has no keybinding\n\t\t\t_kbItem(\n\t\t\t\t0,\n\t\t\t\t'sixth',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_U),\n\t\t\t\t'seventh',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_K),\n\t\t\t\t'seventh',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_U),\n\t\t\t\t'uncomment lines',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_C),\n\t\t\t\t'comment lines',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KEY_G, KeyMod.CtrlCmd | KeyCode.KEY_C),\n\t\t\t\t'unreachablechord',\n\t\t\t\tnull!\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KEY_G,\n\t\t\t\t'eleven',\n\t\t\t\tnull!\n\t\t\t)\n\t\t];\n\n\t\tlet resolver = new KeybindingResolver(items, [], () => { });\n\n\t\tlet testKey = (commandId: string, expectedKeys: number[]) => {\n\t\t\t// Test lookup\n\t\t\tlet lookupResult = resolver.lookupKeybindings(commandId);\n\t\t\tassert.strictEqual(lookupResult.length, expectedKeys.length, 'Length mismatch @ commandId ' + commandId + '; GOT: ' + JSON.stringify(lookupResult, null, '\\t'));\n\t\t\tfor (let i = 0, len = lookupResult.length; i < len; i++) {\n\t\t\t\tconst expected = new USLayoutResolvedKeybinding(createKeybinding(expectedKeys[i], OS)!, OS);\n\n\t\t\t\tassert.strictEqual(lookupResult[i].resolvedKeybinding!.getUserSettingsLabel(), expected.getUserSettingsLabel(), 'value mismatch @ commandId ' + commandId);\n\t\t\t}\n\t\t};\n\n\t\tlet testResolve = (ctx: IContext, _expectedKey: number, commandId: string) => {\n\t\t\tconst expectedKey = createKeybinding(_expectedKey, OS)!;\n\n\t\t\tlet previousPart: (string | null) = null;\n\t\t\tfor (let i = 0, len = expectedKey.parts.length; i < len; i++) {\n\t\t\t\tlet part = getDispatchStr(expectedKey.parts[i]);\n\t\t\t\tlet result = resolver.resolve(ctx, previousPart, part);\n\t\t\t\tif (i === len - 1) {\n\t\t\t\t\t// if it's the final part, then we should find a valid command,\n\t\t\t\t\t// and there should not be a chord.\n\t\t\t\t\tassert.ok(result !== null, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t\tassert.strictEqual(result!.commandId, commandId, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t\tassert.strictEqual(result!.enterChord, false, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t} else {\n\t\t\t\t\t// if it's not the final part, then we should not find a valid command,\n\t\t\t\t\t// and there should be a chord.\n\t\t\t\t\tassert.ok(result !== null, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t\tassert.strictEqual(result!.commandId, null, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t\tassert.strictEqual(result!.enterChord, true, `Enters chord for ${commandId} at part ${i}`);\n\t\t\t\t}\n\t\t\t\tpreviousPart = part;\n\t\t\t}\n\t\t};\n\n\t\ttestKey('first', []);\n\n\t\ttestKey('second', [KeyCode.KEY_Z, KeyCode.KEY_X]);\n\t\ttestResolve(createContext({ key2: true }), KeyCode.KEY_X, 'second');\n\t\ttestResolve(createContext({}), KeyCode.KEY_Z, 'second');\n\n\t\ttestKey('third', [KeyCode.KEY_X]);\n\t\ttestResolve(createContext({ key3: true }), KeyCode.KEY_X, 'third');\n\n\t\ttestKey('fourth', []);\n\n\t\ttestKey('fifth', [KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_Y, KeyCode.KEY_Z)]);\n\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_Y, KeyCode.KEY_Z), 'fifth');\n\n\t\ttestKey('seventh', [KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_K)]);\n\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_K), 'seventh');\n\n\t\ttestKey('uncomment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_U)]);\n\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_U), 'uncomment lines');\n\n\t\ttestKey('comment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_C)]);\n\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_C), 'comment lines');\n\n\t\ttestKey('unreachablechord', []);\n\n\t\ttestKey('eleven', [KeyMod.CtrlCmd | KeyCode.KEY_G]);\n\t\ttestResolve(createContext({}), KeyMod.CtrlCmd | KeyCode.KEY_G, 'eleven');\n\n\t\ttestKey('sixth', []);\n\t});\n});\n"]}