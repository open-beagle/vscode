{"version":3,"file":"usLayoutResolvedKeybinding.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/keybinding/common/usLayoutResolvedKeybinding.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyCodeUtils, Keybinding, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { BaseResolvedKeybinding } from 'vs/platform/keybinding/common/baseResolvedKeybinding';\n\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding<SimpleKeybinding> {\n\n\tconstructor(actual: Keybinding, os: OperatingSystem) {\n\t\tsuper(os, actual.parts);\n\t}\n\n\tprivate _keyCodeToUILabel(keyCode: KeyCode): string {\n\t\tif (this._os === OperatingSystem.Macintosh) {\n\t\t\tswitch (keyCode) {\n\t\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\t\treturn '←';\n\t\t\t\tcase KeyCode.UpArrow:\n\t\t\t\t\treturn '↑';\n\t\t\t\tcase KeyCode.RightArrow:\n\t\t\t\t\treturn '→';\n\t\t\t\tcase KeyCode.DownArrow:\n\t\t\t\t\treturn '↓';\n\t\t\t}\n\t\t}\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._keyCodeToUILabel(keybinding.keyCode);\n\t}\n\n\tprotected _getAriaLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn KeyCodeUtils.toString(keybinding.keyCode);\n\t}\n\n\tprivate _keyCodeToElectronAccelerator(keyCode: KeyCode): string | null {\n\t\tif (keyCode >= KeyCode.NUMPAD_0 && keyCode <= KeyCode.NUMPAD_DIVIDE) {\n\t\t\t// Electron cannot handle numpad keys\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getElectronAccelerator(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._keyCodeToElectronAccelerator(keybinding.keyCode);\n\t}\n\n\tprotected _getUserSettingsLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\tconst result = KeyCodeUtils.toUserSettingsUS(keybinding.keyCode);\n\t\treturn (result ? result.toLowerCase() : result);\n\t}\n\n\tprotected _isWYSIWYG(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected _getDispatchPart(keybinding: SimpleKeybinding): string | null {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n\t}\n\n\tpublic static getDispatchStr(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isModifierKey()) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result = '';\n\n\t\tif (keybinding.ctrlKey) {\n\t\t\tresult += 'ctrl+';\n\t\t}\n\t\tif (keybinding.shiftKey) {\n\t\t\tresult += 'shift+';\n\t\t}\n\t\tif (keybinding.altKey) {\n\t\t\tresult += 'alt+';\n\t\t}\n\t\tif (keybinding.metaKey) {\n\t\t\tresult += 'meta+';\n\t\t}\n\t\tresult += KeyCodeUtils.toString(keybinding.keyCode);\n\n\t\treturn result;\n\t}\n\n\tprotected _getSingleModifierDispatchPart(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.keyCode === KeyCode.Ctrl && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'ctrl';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Shift && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'shift';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Alt && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\n\t\t\treturn 'alt';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Meta && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\n\t\t\treturn 'meta';\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}