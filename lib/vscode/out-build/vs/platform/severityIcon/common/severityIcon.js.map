{"version":3,"file":"severityIcon.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/severityIcon/common/severityIcon.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,IAAiB,YAAY,CAgB5B;IAhBD,WAAiB,YAAY;QAE5B,SAAgB,SAAS,CAAC,QAAkB;YAC3C,QAAQ,QAAQ,EAAE;gBACjB,KAAK,kBAAQ,CAAC,MAAM;oBACnB,OAAO,kBAAkB,GAAG,kBAAO,CAAC,IAAI,CAAC,UAAU,CAAC;gBACrD,KAAK,kBAAQ,CAAC,IAAI;oBACjB,OAAO,kBAAO,CAAC,IAAI,CAAC,UAAU,CAAC;gBAChC,KAAK,kBAAQ,CAAC,OAAO;oBACpB,OAAO,kBAAO,CAAC,OAAO,CAAC,UAAU,CAAC;gBACnC,KAAK,kBAAQ,CAAC,KAAK;oBAClB,OAAO,kBAAO,CAAC,KAAK,CAAC,UAAU,CAAC;gBACjC;oBACC,OAAO,EAAE,CAAC;aACX;QACF,CAAC;QAbe,sBAAS,YAaxB,CAAA;IACF,CAAC,EAhBgB,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAgB5B;IAED,CAAA,GAAA,yCAA0B,CAAA,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;QAE/C,MAAM,mBAAmB,GAAG,KAAK,CAAC,QAAQ,CAAC,2CAA2B,CAAC,CAAC;QACxE,IAAI,mBAAmB,EAAE;YACxB,MAAM,oBAAoB,GAAG,kBAAO,CAAC,KAAK,CAAC,WAAW,CAAC;YACvD,SAAS,CAAC,OAAO,CAAC;iCACa,oBAAoB;gCACrB,oBAAoB;uCACb,oBAAoB;aAC9C,mBAAmB;;GAE7B,CAAC,CAAC;SACH;QAED,MAAM,qBAAqB,GAAG,KAAK,CAAC,QAAQ,CAAC,6CAA6B,CAAC,CAAC;QAC5E,IAAI,qBAAqB,EAAE;YAC1B,MAAM,sBAAsB,GAAG,kBAAO,CAAC,OAAO,CAAC,WAAW,CAAC;YAC3D,SAAS,CAAC,OAAO,CAAC;iCACa,sBAAsB;gCACvB,sBAAsB;uCACf,sBAAsB;uBACtC,sBAAsB;aAChC,qBAAqB;;GAE/B,CAAC,CAAC;SACH;QAED,MAAM,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,0CAA0B,CAAC,CAAC;QACtE,IAAI,kBAAkB,EAAE;YACvB,MAAM,mBAAmB,GAAG,kBAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACrD,SAAS,CAAC,OAAO,CAAC;iCACa,mBAAmB;gCACpB,mBAAmB;uCACZ,mBAAmB;uBACnC,mBAAmB;aAC7B,kBAAkB;;GAE5B,CAAC,CAAC;SACH;IACF,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { Codicon } from 'vs/base/common/codicons';\n\nexport namespace SeverityIcon {\n\n\texport function className(severity: Severity): string {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Ignore:\n\t\t\t\treturn 'severity-ignore ' + Codicon.info.classNames;\n\t\t\tcase Severity.Info:\n\t\t\t\treturn Codicon.info.classNames;\n\t\t\tcase Severity.Warning:\n\t\t\t\treturn Codicon.warning.classNames;\n\t\t\tcase Severity.Error:\n\t\t\t\treturn Codicon.error.classNames;\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst errorIconForeground = theme.getColor(problemsErrorIconForeground);\n\tif (errorIconForeground) {\n\t\tconst errorCodiconSelector = Codicon.error.cssSelector;\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst warningIconForeground = theme.getColor(problemsWarningIconForeground);\n\tif (warningIconForeground) {\n\t\tconst warningCodiconSelector = Codicon.warning.cssSelector;\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst infoIconForeground = theme.getColor(problemsInfoIconForeground);\n\tif (infoIconForeground) {\n\t\tconst infoCodiconSelector = Codicon.info.cssSelector;\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\n\t}\n});\n"]}