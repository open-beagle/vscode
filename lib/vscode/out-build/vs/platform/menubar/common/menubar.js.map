{"version":3,"file":"menubar.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/menubar/common/menubar.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAkDhG,SAAgB,wBAAwB,CAAC,QAAyB;QACjE,OAAiC,QAAS,CAAC,OAAO,KAAK,SAAS,CAAC;IAClE,CAAC;IAFD,4DAEC;IAED,SAAgB,0BAA0B,CAAC,QAAyB;QACnE,OAAmC,QAAS,CAAC,EAAE,KAAK,0BAA0B,CAAC;IAChF,CAAC;IAFD,gEAEC;IAED,SAAgB,6BAA6B,CAAC,QAAyB;QACtE,OAAsC,QAAS,CAAC,GAAG,KAAK,SAAS,CAAC;IACnE,CAAC;IAFD,sEAEC;IAED,SAAgB,uBAAuB,CAAC,QAAyB;QAChE,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,QAAQ,CAAC,CAAC;IACjI,CAAC;IAFD,0DAEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ICommonMenubarService {\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void>;\n}\n\nexport interface IMenubarData {\n\tmenus: { [id: string]: IMenubarMenu };\n\tkeybindings: { [id: string]: IMenubarKeybinding };\n}\n\nexport interface IMenubarMenu {\n\titems: Array<MenubarMenuItem>;\n}\n\nexport interface IMenubarKeybinding {\n\tlabel: string;\n\tuserSettingsLabel?: string;\n\tisNative?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuItemAction {\n\tid: string;\n\tlabel: string;\n\tchecked?: boolean; // Assumed false if missing\n\tenabled?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuRecentItemAction {\n\tid: string;\n\tlabel: string;\n\turi: URI;\n\tremoteAuthority?: string;\n\tenabled?: boolean;\n}\n\nexport interface IMenubarMenuItemSubmenu {\n\tid: string;\n\tlabel: string;\n\tsubmenu: IMenubarMenu;\n}\n\nexport interface IMenubarMenuItemSeparator {\n\tid: 'vscode.menubar.separator';\n}\n\nexport type MenubarMenuItem = IMenubarMenuItemAction | IMenubarMenuItemSubmenu | IMenubarMenuItemSeparator | IMenubarMenuRecentItemAction;\n\nexport function isMenubarMenuItemSubmenu(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSubmenu {\n\treturn (<IMenubarMenuItemSubmenu>menuItem).submenu !== undefined;\n}\n\nexport function isMenubarMenuItemSeparator(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSeparator {\n\treturn (<IMenubarMenuItemSeparator>menuItem).id === 'vscode.menubar.separator';\n}\n\nexport function isMenubarMenuItemRecentAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuRecentItemAction {\n\treturn (<IMenubarMenuRecentItemAction>menuItem).uri !== undefined;\n}\n\nexport function isMenubarMenuItemAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemAction {\n\treturn !isMenubarMenuItemSubmenu(menuItem) && !isMenubarMenuItemSeparator(menuItem) && !isMenubarMenuItemRecentAction(menuItem);\n}\n"]}