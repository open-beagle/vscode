{"version":3,"file":"menubarMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/menubar/electron-main/menubarMainService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQnF,QAAA,mBAAmB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAsB,oBAAoB,CAAC,CAAC;IAM9F,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;QAM9B,YACyC,oBAA2C,EAC3C,oBAA2C,EACrD,UAAuB;YAFb,yBAAoB,GAApB,oBAAoB,CAAuB;YAC3C,yBAAoB,GAApB,oBAAoB,CAAuB;YACrD,eAAU,GAAV,UAAU,CAAa;YAErD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrD,CAAC;QAEO,KAAK,CAAC,6BAA6B;YAC1C,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,yBAAoC,CAAC;YAEzE,OAAO,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,iBAAO,CAAC,CAAC;QAC1D,CAAC;QAED,KAAK,CAAC,aAAa,CAAC,QAAgB,EAAE,KAAmB;YACxD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;YAEhE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC;YACnC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,CAAC;KACD,CAAA;IA1BY,kBAAkB;QAO5B,WAAA,qCAAqB,CAAA;QACrB,WAAA,4CAAqB,CAAA;QACrB,WAAA,iBAAW,CAAA;OATD,kBAAkB,CA0B9B;IA1BY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICommonMenubarService, IMenubarData } from 'vs/platform/menubar/common/menubar';\nimport { Menubar } from 'vs/platform/menubar/electron-main/menubar';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IInstantiationService, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\n\nexport const IMenubarMainService = createDecorator<IMenubarMainService>('menubarMainService');\n\nexport interface IMenubarMainService extends ICommonMenubarService {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class MenubarMainService implements IMenubarMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate menubar: Promise<Menubar>;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.menubar = this.installMenuBarAfterWindowOpen();\n\t}\n\n\tprivate async installMenuBarAfterWindowOpen(): Promise<Menubar> {\n\t\tawait this.lifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen);\n\n\t\treturn this.instantiationService.createInstance(Menubar);\n\t}\n\n\tasync updateMenubar(windowId: number, menus: IMenubarData): Promise<void> {\n\t\tthis.logService.trace('menubarService#updateMenubar', windowId);\n\n\t\tconst menubar = await this.menubar;\n\t\tmenubar.updateMenu(menus, windowId);\n\t}\n}\n"]}