{"version":3,"file":"storageService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/storage/test/common/storageService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { strictEqual, ok } from 'assert';\nimport { StorageScope, InMemoryStorageService, StorageTarget, IStorageValueChangeEvent, IStorageTargetChangeEvent, IStorageService } from 'vs/platform/storage/common/storage';\n\nexport function createSuite<T extends IStorageService>(params: { setup: () => Promise<T>, teardown: (service: T) => Promise<void> }): void {\n\n\tlet storageService: T;\n\n\tsetup(async () => {\n\t\tstorageService = await params.setup();\n\t});\n\n\tteardown(() => {\n\t\treturn params.teardown(storageService);\n\t});\n\n\ttest('Get Data, Integer, Boolean (global)', () => {\n\t\tstoreData(StorageScope.GLOBAL);\n\t});\n\n\ttest('Get Data, Integer, Boolean (workspace)', () => {\n\t\tstoreData(StorageScope.WORKSPACE);\n\t});\n\n\tfunction storeData(scope: StorageScope): void {\n\t\tlet storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(e => storageValueChangeEvents.push(e));\n\n\t\tstrictEqual(storageService.get('test.get', scope, 'foobar'), 'foobar');\n\t\tstrictEqual(storageService.get('test.get', scope, ''), '');\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, 5), 5);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, 0), 0);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, true), true);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, false), false);\n\n\t\tstorageService.store('test.get', 'foobar', scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.get('test.get', scope, (undefined)!), 'foobar');\n\t\tlet storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.get');\n\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent?.key, 'test.get');\n\t\tstorageValueChangeEvents = [];\n\n\t\tstorageService.store('test.get', '', scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.get('test.get', scope, (undefined)!), '');\n\t\tstorageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.get');\n\t\tstrictEqual(storageValueChangeEvent!.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent!.key, 'test.get');\n\n\t\tstorageService.store('test.getNumber', 5, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, (undefined)!), 5);\n\n\t\tstorageService.store('test.getNumber', 0, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, (undefined)!), 0);\n\n\t\tstorageService.store('test.getBoolean', true, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, (undefined)!), true);\n\n\t\tstorageService.store('test.getBoolean', false, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, (undefined)!), false);\n\n\t\tstrictEqual(storageService.get('test.getDefault', scope, 'getDefault'), 'getDefault');\n\t\tstrictEqual(storageService.getNumber('test.getNumberDefault', scope, 5), 5);\n\t\tstrictEqual(storageService.getBoolean('test.getBooleanDefault', scope, true), true);\n\t}\n\n\ttest('Remove Data (global)', () => {\n\t\tremoveData(StorageScope.GLOBAL);\n\t});\n\n\ttest('Remove Data (workspace)', () => {\n\t\tremoveData(StorageScope.WORKSPACE);\n\t});\n\n\tfunction removeData(scope: StorageScope): void {\n\t\tlet storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(e => storageValueChangeEvents.push(e));\n\n\t\tstorageService.store('test.remove', 'foobar', scope, StorageTarget.MACHINE);\n\t\tstrictEqual('foobar', storageService.get('test.remove', scope, (undefined)!));\n\n\t\tstorageService.remove('test.remove', scope);\n\t\tok(!storageService.get('test.remove', scope, (undefined)!));\n\t\tlet storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.remove');\n\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent?.key, 'test.remove');\n\t}\n\n\ttest('Keys (in-memory)', () => {\n\t\tlet storageTargetEvent: IStorageTargetChangeEvent | undefined = undefined;\n\t\tstorageService.onDidChangeTarget(e => storageTargetEvent = e);\n\n\t\tlet storageValueChangeEvent: IStorageValueChangeEvent | undefined = undefined;\n\t\tstorageService.onDidChangeValue(e => storageValueChangeEvent = e);\n\n\t\t// Empty\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.GLOBAL]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Add values\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.GLOBAL]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target1');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.target, target);\n\n\t\t\t\tstorageTargetEvent = undefined;\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', 'otherValue1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\t\t\t\tstrictEqual(storageTargetEvent, undefined);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target1');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.target, target);\n\n\t\t\t\tstorageService.store('test.target2', 'value2', scope, target);\n\t\t\t\tstorageService.store('test.target3', 'value3', scope, target);\n\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 3);\n\t\t\t}\n\t\t}\n\n\t\t// Remove values\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.GLOBAL]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tconst keysLength = storageService.keys(scope, target).length;\n\n\t\t\t\tstorageService.store('test.target4', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, keysLength + 1);\n\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.remove('test.target4', scope);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, keysLength);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target4');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t}\n\t\t}\n\n\t\t// Remove all\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.GLOBAL]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tconst keys = storageService.keys(scope, target);\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tstorageService.remove(key, scope);\n\t\t\t\t}\n\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Adding undefined or null removes value\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.GLOBAL]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstorageService.store('test.target1', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', undefined, scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\n\t\t\t\tstorageService.store('test.target1', '', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\n\t\t\t\tstorageService.store('test.target1', null, scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Target change\n\t\tstorageTargetEvent = undefined;\n\t\tstorageService.store('test.target5', 'value1', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tok(storageTargetEvent);\n\t\tstorageTargetEvent = undefined;\n\t\tstorageService.store('test.target5', 'value1', StorageScope.GLOBAL, StorageTarget.USER);\n\t\tok(storageTargetEvent);\n\t\tstorageTargetEvent = undefined;\n\t\tstorageService.store('test.target5', 'value1', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tok(storageTargetEvent);\n\t\tstorageTargetEvent = undefined;\n\t\tstorageService.store('test.target5', 'value1', StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tok(!storageTargetEvent); // no change in target\n\t});\n}\n\nsuite('StorageService (in-memory)', function () {\n\tcreateSuite<InMemoryStorageService>({\n\t\tsetup: async () => new InMemoryStorageService(),\n\t\tteardown: async () => { }\n\t});\n});\n"]}