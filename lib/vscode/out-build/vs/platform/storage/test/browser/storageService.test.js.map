{"version":3,"file":"storageService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/storage/test/browser/storageService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { strictEqual } from 'assert';\nimport { BrowserStorageService, FileStorageDatabase } from 'vs/platform/storage/browser/storageService';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { Storage } from 'vs/base/parts/storage/common/storage';\nimport { URI } from 'vs/base/common/uri';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { createSuite } from 'vs/platform/storage/test/common/storageService.test';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nsuite('StorageService (browser)', function () {\n\n\tconst disposables = new DisposableStore();\n\tlet storageService: BrowserStorageService;\n\n\tcreateSuite<BrowserStorageService>({\n\t\tsetup: async () => {\n\t\t\tconst logService = new NullLogService();\n\n\t\t\tconst fileService = disposables.add(new FileService(logService));\n\n\t\t\tconst userDataProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\t\tdisposables.add(fileService.registerProvider(Schemas.userData, userDataProvider));\n\n\t\t\tstorageService = disposables.add(new BrowserStorageService({ id: String(Date.now()) }, { userRoamingDataHome: URI.file('/User').with({ scheme: Schemas.userData }) } as unknown as IEnvironmentService, fileService));\n\n\t\t\tawait storageService.initialize();\n\n\t\t\treturn storageService;\n\t\t},\n\t\tteardown: async storage => {\n\t\t\tawait storageService.flush();\n\t\t\tdisposables.clear();\n\t\t}\n\t});\n});\n\nsuite('FileStorageDatabase (browser)', () => {\n\n\tlet fileService: FileService;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(async () => {\n\t\tconst logService = new NullLogService();\n\n\t\tfileService = disposables.add(new FileService(logService));\n\n\t\tconst userDataProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(Schemas.userData, userDataProvider));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('Basics', async () => {\n\t\tconst testDir = URI.file('/User/storage.json').with({ scheme: Schemas.userData });\n\n\t\tlet storage = new Storage(new FileStorageDatabase(testDir, false, fileService));\n\n\t\tawait storage.init();\n\n\t\tstorage.set('bar', 'foo');\n\t\tstorage.set('barNumber', 55);\n\t\tstorage.set('barBoolean', true);\n\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\tstrictEqual(storage.get('barNumber'), '55');\n\t\tstrictEqual(storage.get('barBoolean'), 'true');\n\n\t\tawait storage.close();\n\n\t\tstorage = new Storage(new FileStorageDatabase(testDir, false, fileService));\n\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\tstrictEqual(storage.get('barNumber'), '55');\n\t\tstrictEqual(storage.get('barBoolean'), 'true');\n\n\t\tstorage.delete('bar');\n\t\tstorage.delete('barNumber');\n\t\tstorage.delete('barBoolean');\n\n\t\tstrictEqual(storage.get('bar', 'undefined'), 'undefined');\n\t\tstrictEqual(storage.get('barNumber', 'undefinedNumber'), 'undefinedNumber');\n\t\tstrictEqual(storage.get('barBoolean', 'undefinedBoolean'), 'undefinedBoolean');\n\n\t\tawait storage.close();\n\n\t\tstorage = new Storage(new FileStorageDatabase(testDir, false, fileService));\n\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('bar', 'undefined'), 'undefined');\n\t\tstrictEqual(storage.get('barNumber', 'undefinedNumber'), 'undefinedNumber');\n\t\tstrictEqual(storage.get('barBoolean', 'undefinedBoolean'), 'undefinedBoolean');\n\t});\n});\n"]}