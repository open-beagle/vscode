{"version":3,"sources":["vs/platform/actions/browser/menuEntryActionViewItem.ts"],"names":[],"mappings":"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","file":"menuEntryActionViewItem.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./menuEntryActionViewItem';\nimport { asCSSUrl, ModifierKeyEmitter } from 'vs/base/browser/dom';\nimport { domEvent } from 'vs/base/browser/event';\nimport { IAction, Separator, SubmenuAction } from 'vs/base/common/actions';\nimport { IDisposable, toDisposable, MutableDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ICommandAction, IMenu, IMenuActionOptions, MenuItemAction, SubmenuItemAction, Icon } from 'vs/platform/actions/common/actions';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { UILabelProvider } from 'vs/base/common/keybindingLabels';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { DropdownMenuActionViewItem } from 'vs/base/browser/ui/dropdown/dropdownActionViewItem';\nimport { isWindows, isLinux, OS } from 'vs/base/common/platform';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport function createAndFillInContextMenuActions(menu: IMenu, options: IMenuActionOptions | undefined, target: IAction[] | { primary: IAction[]; secondary: IAction[]; }, primaryGroup?: string): IDisposable {\n\tconst groups = menu.getActions(options);\n\tconst modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n\tconst useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n\tfillInActions(groups, target, useAlternativeActions, primaryGroup);\n\treturn asDisposable(groups);\n}\n\nexport function createAndFillInActionBarActions(menu: IMenu, options: IMenuActionOptions | undefined, target: IAction[] | { primary: IAction[]; secondary: IAction[]; }, primaryGroup?: string, primaryMaxCount?: number, shouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean): IDisposable {\n\tconst groups = menu.getActions(options);\n\t// Action bars handle alternative actions on their own so the alternative actions should be ignored\n\tfillInActions(groups, target, false, primaryGroup, primaryMaxCount, shouldInlineSubmenu);\n\treturn asDisposable(groups);\n}\n\nfunction asDisposable(groups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>): IDisposable {\n\tconst disposables = new DisposableStore();\n\tfor (const [, actions] of groups) {\n\t\tfor (const action of actions) {\n\t\t\tdisposables.add(action);\n\t\t}\n\t}\n\treturn disposables;\n}\n\n\nfunction fillInActions(\n\tgroups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>, target: IAction[] | { primary: IAction[]; secondary: IAction[]; },\n\tuseAlternativeActions: boolean,\n\tprimaryGroup = 'navigation',\n\tprimaryMaxCount: number = Number.MAX_SAFE_INTEGER,\n\tshouldInlineSubmenu: (action: SubmenuAction, group: string, groupSize: number) => boolean = () => false\n): void {\n\n\tlet primaryBucket: IAction[];\n\tlet secondaryBucket: IAction[];\n\tif (Array.isArray(target)) {\n\t\tprimaryBucket = target;\n\t\tsecondaryBucket = target;\n\t} else {\n\t\tprimaryBucket = target.primary;\n\t\tsecondaryBucket = target.secondary;\n\t}\n\n\tconst submenuInfo = new Set<{ group: string, action: SubmenuAction, index: number }>();\n\n\tfor (const [group, actions] of groups) {\n\n\t\tlet target: IAction[];\n\t\tif (group === primaryGroup) {\n\t\t\ttarget = primaryBucket;\n\t\t} else {\n\t\t\ttarget = secondaryBucket;\n\t\t\tif (target.length > 0) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t}\n\n\t\tfor (let action of actions) {\n\t\t\tif (useAlternativeActions) {\n\t\t\t\taction = action instanceof MenuItemAction && action.alt ? action.alt : action;\n\t\t\t}\n\t\t\tconst newLen = target.push(action);\n\t\t\t// keep submenu info for later inlining\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\tsubmenuInfo.add({ group, action, index: newLen - 1 });\n\t\t\t}\n\t\t}\n\t}\n\n\t// ask the outside if submenu should be inlined or not. only ask when\n\t// there would be enough space\n\tfor (const { group, action, index } of submenuInfo) {\n\t\tconst target = group === primaryGroup ? primaryBucket : secondaryBucket;\n\n\t\t// inlining submenus with length 0 or 1 is easy,\n\t\t// larger submenus need to be checked with the overall limit\n\t\tconst submenuActions = action.actions;\n\t\tif ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\n\t\t\ttarget.splice(index, 1, ...submenuActions);\n\t\t}\n\t}\n\n\t// overflow items from the primary group into the secondary bucket\n\tif (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\n\t\tconst overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\n\t\tsecondaryBucket.unshift(...overflow, new Separator());\n\t}\n}\n\nexport class MenuEntryActionViewItem extends ActionViewItem {\n\n\tprivate _wantsAltCommand: boolean = false;\n\tprivate readonly _itemClassDispose = this._register(new MutableDisposable());\n\tprivate readonly _altKey: ModifierKeyEmitter;\n\n\tconstructor(\n\t\t_action: MenuItemAction,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService protected _notificationService: INotificationService\n\t) {\n\t\tsuper(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon });\n\t\tthis._altKey = ModifierKeyEmitter.getInstance();\n\t}\n\n\tprotected get _menuItemAction(): MenuItemAction {\n\t\treturn <MenuItemAction>this._action;\n\t}\n\n\tprotected get _commandAction(): MenuItemAction {\n\t\treturn this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n\t}\n\n\toverride onClick(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.actionRunner\n\t\t\t.run(this._commandAction, this._context)\n\t\t\t.catch(err => this._notificationService.error(err));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('menu-entry');\n\n\t\tthis._updateItemClass(this._menuItemAction.item);\n\n\t\tlet mouseOver = false;\n\n\t\tlet alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\n\n\t\tconst updateAltState = () => {\n\t\t\tconst wantsAltCommand = mouseOver && alternativeKeyDown;\n\t\t\tif (wantsAltCommand !== this._wantsAltCommand) {\n\t\t\t\tthis._wantsAltCommand = wantsAltCommand;\n\t\t\t\tthis.updateLabel();\n\t\t\t\tthis.updateTooltip();\n\t\t\t\tthis.updateClass();\n\t\t\t}\n\t\t};\n\n\t\tif (this._menuItemAction.alt) {\n\t\t\tthis._register(this._altKey.event(value => {\n\t\t\t\talternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\n\t\t\t\tupdateAltState();\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(domEvent(container, 'mouseleave')(_ => {\n\t\t\tmouseOver = false;\n\t\t\tupdateAltState();\n\t\t}));\n\n\t\tthis._register(domEvent(container, 'mouseenter')(e => {\n\t\t\tmouseOver = true;\n\t\t\tupdateAltState();\n\t\t}));\n\t}\n\n\toverride updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.textContent = this._commandAction.label;\n\t\t}\n\t}\n\n\toverride updateTooltip(): void {\n\t\tif (this.label) {\n\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id);\n\t\t\tconst keybindingLabel = keybinding && keybinding.getLabel();\n\n\t\t\tconst tooltip = this._commandAction.tooltip || this._commandAction.label;\n\t\t\tlet title = keybindingLabel\n\t\t\t\t? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n\t\t\t\t: tooltip;\n\t\t\tif (!this._wantsAltCommand && this._menuItemAction.alt) {\n\t\t\t\tconst altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n\t\t\t\tconst altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id);\n\t\t\t\tconst altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n\t\t\t\tconst altTitleSection = altKeybindingLabel\n\t\t\t\t\t? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n\t\t\t\t\t: altTooltip;\n\t\t\t\ttitle += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\n\t\t\t}\n\t\t\tthis.label.title = title;\n\t\t}\n\t}\n\n\toverride updateClass(): void {\n\t\tif (this.options.icon) {\n\t\t\tif (this._commandAction !== this._menuItemAction) {\n\t\t\t\tif (this._menuItemAction.alt) {\n\t\t\t\t\tthis._updateItemClass(this._menuItemAction.alt.item);\n\t\t\t\t}\n\t\t\t} else if (this._menuItemAction.alt) {\n\t\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateItemClass(item: ICommandAction): void {\n\t\tthis._itemClassDispose.value = undefined;\n\n\t\tconst { element, label } = this;\n\t\tif (!element || !label) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst icon = this._commandAction.checked && (item.toggled as { icon?: Icon })?.icon ? (item.toggled as { icon: Icon }).icon : item.icon;\n\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t// theme icons\n\t\t\tconst iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\t\tlabel.classList.add(...iconClasses);\n\t\t\tthis._itemClassDispose.value = toDisposable(() => {\n\t\t\t\tlabel.classList.remove(...iconClasses);\n\t\t\t});\n\n\t\t} else {\n\t\t\t// icon path/url\n\t\t\tif (icon.light) {\n\t\t\t\tlabel.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n\t\t\t}\n\t\t\tif (icon.dark) {\n\t\t\t\tlabel.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n\t\t\t}\n\t\t\tlabel.classList.add('icon');\n\t\t\tthis._itemClassDispose.value = toDisposable(() => {\n\t\t\t\tlabel.classList.remove('icon');\n\t\t\t\tlabel.style.removeProperty('--menu-entry-icon-light');\n\t\t\t\tlabel.style.removeProperty('--menu-entry-icon-dark');\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\t@IContextMenuService contextMenuService: IContextMenuService\n\t) {\n\t\tsuper(action, { getActions: () => action.actions }, contextMenuService, {\n\t\t\tmenuAsChild: true,\n\t\t\tclassNames: ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined,\n\t\t});\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tif (this.element) {\n\t\t\tcontainer.classList.add('menu-entry');\n\t\t\tconst { icon } = (<SubmenuItemAction>this._action).item;\n\t\t\tif (icon && !ThemeIcon.isThemeIcon(icon)) {\n\t\t\t\tthis.element.classList.add('icon');\n\t\t\t\tif (icon.light) {\n\t\t\t\t\tthis.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n\t\t\t\t}\n\t\t\t\tif (icon.dark) {\n\t\t\t\t\tthis.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService: IInstantiationService, action: IAction): undefined | MenuEntryActionViewItem | SubmenuEntryActionViewItem {\n\tif (action instanceof MenuItemAction) {\n\t\treturn instaService.createInstance(MenuEntryActionViewItem, action);\n\t} else if (action instanceof SubmenuItemAction) {\n\t\treturn instaService.createInstance(SubmenuEntryActionViewItem, action);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n"]}