{"version":3,"file":"actions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/actions/common/actions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action, IAction, Separator, SubmenuAction } from 'vs/base/common/actions';\nimport { SyncDescriptor0, createSyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IConstructorSignature2, createDecorator, BrandedService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindings, KeybindingsRegistry, IKeybindingRule } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ContextKeyExpr, IContextKeyService, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService, CommandsRegistry, ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { IDisposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { UriDto } from 'vs/base/common/types';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CSSIcon } from 'vs/base/common/codicons';\n\nexport interface ILocalizedString {\n\t/**\n\t * The localized value of the string.\n\t */\n\tvalue: string;\n\t/**\n\t * The original (non localized value of the string)\n\t */\n\toriginal: string;\n}\n\nexport interface ICommandActionTitle extends ILocalizedString {\n\t/**\n\t * The title with a mnemonic designation. && precedes the mnemonic.\n\t */\n\tmnemonicTitle?: string;\n}\n\nexport type Icon = { dark?: URI; light?: URI; } | ThemeIcon;\n\nexport interface ICommandAction {\n\tid: string;\n\ttitle: string | ICommandActionTitle;\n\tcategory?: string | ILocalizedString;\n\ttooltip?: string;\n\ticon?: Icon;\n\tprecondition?: ContextKeyExpression;\n\ttoggled?: ContextKeyExpression | { condition: ContextKeyExpression, icon?: Icon, tooltip?: string, title?: string | ILocalizedString };\n}\n\nexport type ISerializableCommandAction = UriDto<ICommandAction>;\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n}\n\nexport function isIMenuItem(item: IMenuItem | ISubmenuItem): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: IMenuItem | ISubmenuItem): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\n\tprivate static _idPool = 0;\n\n\tstatic readonly CommandPalette = new MenuId('CommandPalette');\n\tstatic readonly DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n\tstatic readonly DebugCallStackContext = new MenuId('DebugCallStackContext');\n\tstatic readonly DebugConsoleContext = new MenuId('DebugConsoleContext');\n\tstatic readonly DebugVariablesContext = new MenuId('DebugVariablesContext');\n\tstatic readonly DebugWatchContext = new MenuId('DebugWatchContext');\n\tstatic readonly DebugToolBar = new MenuId('DebugToolBar');\n\tstatic readonly EditorContext = new MenuId('EditorContext');\n\tstatic readonly EditorContextCopy = new MenuId('EditorContextCopy');\n\tstatic readonly EditorContextPeek = new MenuId('EditorContextPeek');\n\tstatic readonly EditorTitle = new MenuId('EditorTitle');\n\tstatic readonly EditorTitleRun = new MenuId('EditorTitleRun');\n\tstatic readonly EditorTitleContext = new MenuId('EditorTitleContext');\n\tstatic readonly EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n\tstatic readonly ExplorerContext = new MenuId('ExplorerContext');\n\tstatic readonly ExtensionContext = new MenuId('ExtensionContext');\n\tstatic readonly GlobalActivity = new MenuId('GlobalActivity');\n\tstatic readonly MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n\tstatic readonly MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n\tstatic readonly MenubarEditMenu = new MenuId('MenubarEditMenu');\n\tstatic readonly MenubarCopy = new MenuId('MenubarCopy');\n\tstatic readonly MenubarFileMenu = new MenuId('MenubarFileMenu');\n\tstatic readonly MenubarGoMenu = new MenuId('MenubarGoMenu');\n\tstatic readonly MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n\tstatic readonly MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n\tstatic readonly MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n\tstatic readonly MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n\tstatic readonly MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n\tstatic readonly MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n\tstatic readonly MenubarViewMenu = new MenuId('MenubarViewMenu');\n\tstatic readonly MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n\tstatic readonly OpenEditorsContext = new MenuId('OpenEditorsContext');\n\tstatic readonly ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n\tstatic readonly SCMChangeContext = new MenuId('SCMChangeContext');\n\tstatic readonly SCMResourceContext = new MenuId('SCMResourceContext');\n\tstatic readonly SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n\tstatic readonly SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n\tstatic readonly SCMSourceControl = new MenuId('SCMSourceControl');\n\tstatic readonly SCMTitle = new MenuId('SCMTitle');\n\tstatic readonly SearchContext = new MenuId('SearchContext');\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n\tstatic readonly TestItem = new MenuId('TestItem');\n\tstatic readonly TouchBarContext = new MenuId('TouchBarContext');\n\tstatic readonly TitleBarContext = new MenuId('TitleBarContext');\n\tstatic readonly TunnelContext = new MenuId('TunnelContext');\n\tstatic readonly TunnelPortInline = new MenuId('TunnelInline');\n\tstatic readonly TunnelTitle = new MenuId('TunnelTitle');\n\tstatic readonly TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n\tstatic readonly TunnelOriginInline = new MenuId('TunnelOriginInline');\n\tstatic readonly ViewItemContext = new MenuId('ViewItemContext');\n\tstatic readonly ViewContainerTitle = new MenuId('ViewContainerTitle');\n\tstatic readonly ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n\tstatic readonly ViewTitle = new MenuId('ViewTitle');\n\tstatic readonly ViewTitleContext = new MenuId('ViewTitleContext');\n\tstatic readonly CommentThreadTitle = new MenuId('CommentThreadTitle');\n\tstatic readonly CommentThreadActions = new MenuId('CommentThreadActions');\n\tstatic readonly CommentTitle = new MenuId('CommentTitle');\n\tstatic readonly CommentActions = new MenuId('CommentActions');\n\tstatic readonly NotebookToolbar = new MenuId('NotebookToolbar');\n\tstatic readonly NotebookCellTitle = new MenuId('NotebookCellTitle');\n\tstatic readonly NotebookCellInsert = new MenuId('NotebookCellInsert');\n\tstatic readonly NotebookCellBetween = new MenuId('NotebookCellBetween');\n\tstatic readonly NotebookCellListTop = new MenuId('NotebookCellTop');\n\tstatic readonly NotebookCellExecute = new MenuId('NotebookCellExecute');\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n\tstatic readonly BulkEditTitle = new MenuId('BulkEditTitle');\n\tstatic readonly BulkEditContext = new MenuId('BulkEditContext');\n\tstatic readonly TimelineItemContext = new MenuId('TimelineItemContext');\n\tstatic readonly TimelineTitle = new MenuId('TimelineTitle');\n\tstatic readonly TimelineTitleContext = new MenuId('TimelineTitleContext');\n\tstatic readonly AccountsContext = new MenuId('AccountsContext');\n\tstatic readonly PanelTitle = new MenuId('PanelTitle');\n\tstatic readonly TerminalContainerContext = new MenuId('TerminalContainerContext');\n\tstatic readonly TerminalToolbarContext = new MenuId('TerminalToolbarContext');\n\tstatic readonly TerminalTabsWidgetContext = new MenuId('TerminalTabsWidgetContext');\n\tstatic readonly TerminalTabsWidgetEmptyContext = new MenuId('TerminalTabsWidgetEmptyContext');\n\tstatic readonly TerminalSingleTabContext = new MenuId('TerminalSingleTabContext');\n\n\treadonly id: number;\n\treadonly _debugName: string;\n\n\tconstructor(debugName: string) {\n\t\tthis.id = MenuId._idPool++;\n\t\tthis._debugName = debugName;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenu>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuService {\n\n\treadonly _serviceBrand: undefined;\n\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, emitEventsForSubmenuChanges?: boolean): IMenu;\n}\n\nexport type ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommands(newCommands: Iterable<ICommandAction>): IDisposable;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tgetCommand(id: string): ICommandAction | undefined;\n\tgetCommands(): ICommandsMap;\n\tappendMenuItems(items: Iterable<{ id: MenuId, item: IMenuItem | ISubmenuItem }>): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<MenuId, LinkedList<IMenuItem | ISubmenuItem>>();\n\tprivate readonly _onDidChangeMenu = new Emitter<IMenuRegistryChangeEvent>();\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\treturn this.addCommands(Iterable.single(command));\n\t}\n\n\tprivate readonly _commandPaletteChangeEvent: IMenuRegistryChangeEvent = {\n\t\thas: id => id === MenuId.CommandPalette\n\t};\n\n\taddCommands(commands: Iterable<ICommandAction>): IDisposable {\n\t\tfor (const command of commands) {\n\t\t\tthis._commands.set(command.id, command);\n\t\t}\n\t\tthis._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n\t\treturn toDisposable(() => {\n\t\t\tlet didChange = false;\n\t\t\tfor (const command of commands) {\n\t\t\t\tdidChange = this._commands.delete(command.id) || didChange;\n\t\t\t}\n\t\t\tif (didChange) {\n\t\t\t\tthis._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\treturn this.appendMenuItems(Iterable.single({ id, item }));\n\t}\n\n\tappendMenuItems(items: Iterable<{ id: MenuId, item: IMenuItem | ISubmenuItem }>): IDisposable {\n\n\t\tconst changedIds = new Set<MenuId>();\n\t\tconst toRemove = new LinkedList<Function>();\n\n\t\tfor (const { id, item } of items) {\n\t\t\tlet list = this._menuItems.get(id);\n\t\t\tif (!list) {\n\t\t\t\tlist = new LinkedList();\n\t\t\t\tthis._menuItems.set(id, list);\n\t\t\t}\n\t\t\ttoRemove.push(list.push(item));\n\t\t\tchangedIds.add(id);\n\t\t}\n\n\t\tthis._onDidChangeMenu.fire(changedIds);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (toRemove.size > 0) {\n\t\t\t\tfor (let fn of toRemove) {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t\tthis._onDidChangeMenu.fire(changedIds);\n\t\t\t\ttoRemove.clear();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport class ExecuteCommandAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly _commandService: ICommandService) {\n\n\t\tsuper(id, label);\n\t}\n\n\toverride run(...args: any[]): Promise<any> {\n\t\treturn this._commandService.executeCommand(this.id, ...args);\n\t}\n}\n\nexport class SubmenuItemAction extends SubmenuAction {\n\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\tprivate readonly _menuService: IMenuService,\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\tprivate readonly _options?: IMenuActionOptions\n\t) {\n\t\tsuper(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, [], 'submenu');\n\t}\n\n\toverride get actions(): readonly IAction[] {\n\t\tconst result: IAction[] = [];\n\t\tconst menu = this._menuService.createMenu(this.item.submenu, this._contextKeyService);\n\t\tconst groups = menu.getActions(this._options);\n\t\tmenu.dispose();\n\t\tfor (const [, actions] of groups) {\n\t\t\tif (actions.length > 0) {\n\t\t\t\tresult.push(...actions);\n\t\t\t\tresult.push(new Separator());\n\t\t\t}\n\t\t}\n\t\tif (result.length) {\n\t\t\tresult.pop(); // remove last separator\n\t\t}\n\t\treturn result;\n\t}\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = typeof item.title === 'string' ? item.title : item.title.value;\n\t\tthis.tooltip = item.tooltip ?? '';\n\t\tthis.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = false;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = ((item.toggled as { condition: ContextKeyExpression }).condition ? item.toggled : { condition: item.toggled }) as {\n\t\t\t\tcondition: ContextKeyExpression, icon?: Icon, tooltip?: string | ILocalizedString, title?: string | ILocalizedString\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(toggled.condition);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (toggled.title) {\n\t\t\t\tthis.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, options, contextKeyService, _commandService) : undefined;\n\t\tthis._options = options;\n\t\tif (ThemeIcon.isThemeIcon(item.icon)) {\n\t\t\tthis.class = CSSIcon.asClassName(item.icon);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// there is NOTHING to dispose and the MenuItemAction should\n\t\t// never have anything to dispose as it is a convenience type\n\t\t// to bridge into the rendering world.\n\t}\n\n\trun(...args: any[]): Promise<any> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\nexport class SyncActionDescriptor {\n\n\tprivate readonly _descriptor: SyncDescriptor0<Action>;\n\n\tprivate readonly _id: string;\n\tprivate readonly _label?: string;\n\tprivate readonly _keybindings: IKeybindings | undefined;\n\tprivate readonly _keybindingContext: ContextKeyExpression | undefined;\n\tprivate readonly _keybindingWeight: number | undefined;\n\n\tpublic static create<Services extends BrandedService[]>(ctor: { new(id: string, label: string, ...services: Services): Action },\n\t\tid: string, label: string | undefined, keybindings?: IKeybindings, keybindingContext?: ContextKeyExpression, keybindingWeight?: number\n\t): SyncActionDescriptor {\n\t\treturn new SyncActionDescriptor(ctor as IConstructorSignature2<string, string | undefined, Action>, id, label, keybindings, keybindingContext, keybindingWeight);\n\t}\n\n\tpublic static from<Services extends BrandedService[]>(\n\t\tctor: {\n\t\t\tnew(id: string, label: string, ...services: Services): Action;\n\t\t\treadonly ID: string;\n\t\t\treadonly LABEL: string;\n\t\t},\n\t\tkeybindings?: IKeybindings, keybindingContext?: ContextKeyExpression, keybindingWeight?: number\n\t): SyncActionDescriptor {\n\t\treturn SyncActionDescriptor.create(ctor, ctor.ID, ctor.LABEL, keybindings, keybindingContext, keybindingWeight);\n\t}\n\n\tprivate constructor(ctor: IConstructorSignature2<string, string | undefined, Action>,\n\t\tid: string, label: string | undefined, keybindings?: IKeybindings, keybindingContext?: ContextKeyExpression, keybindingWeight?: number\n\t) {\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._keybindings = keybindings;\n\t\tthis._keybindingContext = keybindingContext;\n\t\tthis._keybindingWeight = keybindingWeight;\n\t\tthis._descriptor = createSyncDescriptor(ctor, this._id, this._label);\n\t}\n\n\tpublic get syncDescriptor(): SyncDescriptor0<Action> {\n\t\treturn this._descriptor;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tpublic get keybindings(): IKeybindings | undefined {\n\t\treturn this._keybindings;\n\t}\n\n\tpublic get keybindingContext(): ContextKeyExpression | undefined {\n\t\treturn this._keybindingContext;\n\t}\n\n\tpublic get keybindingWeight(): number | undefined {\n\t\treturn this._keybindingWeight;\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\nexport interface IAction2Options extends ICommandAction {\n\n\t/**\n\t * Shorthand to add this command to the command palette\n\t */\n\tf1?: boolean;\n\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<{ id: MenuId } & Omit<IMenuItem, 'command'>>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, 'id'>>;\n\n\t/**\n\t * Metadata about this command, used for API commands or when\n\t * showing keybindings that have no other UX.\n\t */\n\tdescription?: ICommandHandlerDescription;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) { }\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): any;\n}\n\nexport function registerAction2(ctor: { new(): Action2 }): IDisposable {\n\tconst disposables = new DisposableStore();\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, description, ...command } = action.desc;\n\n\t// command\n\tdisposables.add(CommandsRegistry.registerCommand({\n\t\tid: command.id,\n\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\tdescription: description,\n\t}));\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tdisposables.add(MenuRegistry.appendMenuItems(menu.map(item => ({ id: item.id, item: { command, ...item } }))));\n\n\t} else if (menu) {\n\t\tdisposables.add(MenuRegistry.appendMenuItem(menu.id, { command, ...menu }));\n\t}\n\tif (f1) {\n\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n\t\tdisposables.add(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (let item of keybinding) {\n\t\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...item,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n\t\t\t});\n\t\t}\n\t} else if (keybinding) {\n\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\t...keybinding,\n\t\t\tid: command.id,\n\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n\t\t});\n\t}\n\n\treturn disposables;\n}\n//#endregion\n"]}