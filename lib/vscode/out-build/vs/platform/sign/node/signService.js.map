{"version":3,"file":"signService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/sign/node/signService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYhG,MAAa,WAAW;QAGf,IAAI;YACX,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,KAAK,CAAC,IAAI,CAAC,KAAa;YACvB,IAAI;gBACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC/B,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBACjC,IAAI,MAAM,EAAE;oBACX,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B;aACD;YAAC,OAAO,CAAC,EAAE;gBACX,yBAAyB;aACzB;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD;IAnBD,kCAmBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\ndeclare module vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: any): any;\n\t}\n}\n\nexport class SignService implements ISignService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate vsda(): Promise<typeof vsda> {\n\t\treturn new Promise((resolve, reject) => require(['vsda'], resolve, reject));\n\t}\n\n\tasync sign(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst vsda = await this.vsda();\n\t\t\tconst signer = new vsda.signer();\n\t\t\tif (signer) {\n\t\t\t\treturn signer.sign(value);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t}\n\t\treturn value;\n\t}\n}\n"]}