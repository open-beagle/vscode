{"version":3,"file":"remoteAuthorityResolverService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/remote/electron-sandbox/remoteAuthorityResolverService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n//\nimport { ResolvedAuthority, IRemoteAuthorityResolverService, ResolverResult, ResolvedOptions, IRemoteConnectionData } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport * as errors from 'vs/base/common/errors';\nimport { RemoteAuthorities } from 'vs/base/common/network';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\n\nclass PendingResolveAuthorityRequest {\n\n\tpublic value: ResolverResult | null;\n\n\tconstructor(\n\t\tprivate readonly _resolve: (value: ResolverResult) => void,\n\t\tprivate readonly _reject: (err: any) => void,\n\t\tpublic readonly promise: Promise<ResolverResult>,\n\t) {\n\t\tthis.value = null;\n\t}\n\n\tresolve(value: ResolverResult): void {\n\t\tthis.value = value;\n\t\tthis._resolve(this.value);\n\t}\n\n\treject(err: any): void {\n\t\tthis._reject(err);\n\t}\n}\n\nexport class RemoteAuthorityResolverService extends Disposable implements IRemoteAuthorityResolverService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConnectionData = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeConnectionData = this._onDidChangeConnectionData.event;\n\n\tprivate readonly _resolveAuthorityRequests: Map<string, PendingResolveAuthorityRequest>;\n\tprivate readonly _connectionTokens: Map<string, string>;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._resolveAuthorityRequests = new Map<string, PendingResolveAuthorityRequest>();\n\t\tthis._connectionTokens = new Map<string, string>();\n\t}\n\n\tresolveAuthority(authority: string): Promise<ResolverResult> {\n\t\tif (!this._resolveAuthorityRequests.has(authority)) {\n\t\t\tlet resolve: (value: ResolverResult) => void;\n\t\t\tlet reject: (err: any) => void;\n\t\t\tconst promise = new Promise<ResolverResult>((_resolve, _reject) => {\n\t\t\t\tresolve = _resolve;\n\t\t\t\treject = _reject;\n\t\t\t});\n\t\t\tthis._resolveAuthorityRequests.set(authority, new PendingResolveAuthorityRequest(resolve!, reject!, promise));\n\t\t}\n\t\treturn this._resolveAuthorityRequests.get(authority)!.promise;\n\t}\n\n\tgetConnectionData(authority: string): IRemoteConnectionData | null {\n\t\tif (!this._resolveAuthorityRequests.has(authority)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst request = this._resolveAuthorityRequests.get(authority)!;\n\t\tif (!request.value) {\n\t\t\treturn null;\n\t\t}\n\t\tconst connectionToken = this._connectionTokens.get(authority);\n\t\treturn {\n\t\t\thost: request.value.authority.host,\n\t\t\tport: request.value.authority.port,\n\t\t\tconnectionToken: connectionToken\n\t\t};\n\t}\n\n\t_clearResolvedAuthority(authority: string): void {\n\t\tif (this._resolveAuthorityRequests.has(authority)) {\n\t\t\tthis._resolveAuthorityRequests.get(authority)!.reject(errors.canceled());\n\t\t\tthis._resolveAuthorityRequests.delete(authority);\n\t\t}\n\t}\n\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, options?: ResolvedOptions): void {\n\t\tif (this._resolveAuthorityRequests.has(resolvedAuthority.authority)) {\n\t\t\tconst request = this._resolveAuthorityRequests.get(resolvedAuthority.authority)!;\n\t\t\tRemoteAuthorities.set(resolvedAuthority.authority, resolvedAuthority.host, resolvedAuthority.port);\n\t\t\tif (resolvedAuthority.connectionToken) {\n\t\t\t\tRemoteAuthorities.setConnectionToken(resolvedAuthority.authority, resolvedAuthority.connectionToken);\n\t\t\t}\n\t\t\trequest.resolve({ authority: resolvedAuthority, options });\n\t\t\tthis._onDidChangeConnectionData.fire();\n\t\t}\n\t}\n\n\t_setResolvedAuthorityError(authority: string, err: any): void {\n\t\tif (this._resolveAuthorityRequests.has(authority)) {\n\t\t\tconst request = this._resolveAuthorityRequests.get(authority)!;\n\t\t\trequest.reject(err);\n\t\t}\n\t}\n\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens.set(authority, connectionToken);\n\t\tRemoteAuthorities.setConnectionToken(authority, connectionToken);\n\t\tthis._onDidChangeConnectionData.fire();\n\t}\n}\n"]}