{"version":3,"file":"remoteHosts.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/remote/common/remoteHosts.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,SAAgB,kBAAkB,CAAC,GAAQ;QAC1C,OAAO,GAAG,CAAC,MAAM,KAAK,iBAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACxE,CAAC;IAFD,gDAEC;IAKD,SAAgB,aAAa,CAAC,SAA6B;QAC1D,IAAI,CAAC,SAAS,EAAE;YACf,OAAO,SAAS,CAAC;SACjB;QACD,MAAM,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,CAAC,EAAE;YACZ,sBAAsB;YACtB,OAAO,SAAS,CAAC;SACjB;QACD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC;IAVD,sCAUC;IAED,SAAS,iBAAiB,CAAC,QAAa;QACvC,OAAO,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,YAAY,CAAC;IACrF,CAAC;IAED,SAAgB,2BAA2B,CAAC,SAAqB;QAChE,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YAC7B,OAAO,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;SACrG;aAAM,IAAI,SAAS,CAAC,aAAa,IAAI,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YACjF,OAAO,SAAS,CAAC,aAAa,CAAC;SAC/B;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAPD,kEAOC;IAED,SAAgB,yBAAyB,CAAC,SAAqB;;QAC9D,OAAO,MAAA,2BAA2B,CAAC,SAAS,CAAC,0CAAE,MAAM,CAAC;IACvD,CAAC;IAFD,8DAEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// e.g. localhost:8000\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n\nfunction isVirtualResource(resource: URI) {\n\treturn resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\n\nexport function getVirtualWorkspaceLocation(workspace: IWorkspace): { scheme: string, authority: string } | undefined {\n\tif (workspace.folders.length) {\n\t\treturn workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n\t} else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n\t\treturn workspace.configuration;\n\t}\n\treturn undefined;\n}\n\nexport function getVirtualWorkspaceScheme(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.scheme;\n}\n"]}