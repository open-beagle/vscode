{"version":3,"sources":["vs/platform/extensionManagement/node/extensionManagementService.ts"],"names":[],"mappings":"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","file":"extensionManagementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError,\n\tInstallOptions,\n\tUninstallOptions\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createCancelablePromise, CancelablePromise, Promises } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { joinPath } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, ILocalExtensionManifest, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { ExtensionsWatcher } from 'vs/platform/extensionManagement/node/extensionsWatcher';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tconst extensionsWatcher = this._register(new ExtensionsWatcher(this, fileService, environmentService, logService));\n\n\t\tthis._register(extensionsWatcher.onDidChangeExtensionsByAnotherSource(({ added, removed }) => {\n\t\t\tadded.forEach(extension => this._onDidInstallExtension.fire({ identifier: extension.identifier, operation: InstallOperation.None, local: extension }));\n\t\t\tremoved.forEach(extension => this._onDidUninstallExtension.fire({ identifier: extension }));\n\t\t}));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => fs.promises.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n\tasync install(vsix: URI, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(async token => {\n\n\t\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version));\n\t\t\t}\n\n\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\tconst installedExtensions = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existing = installedExtensions.find(i => areSameExtensions(identifier, i.identifier));\n\t\t\tif (existing) {\n\t\t\t\toptions.isMachineScoped = options.isMachineScoped || existing.isMachineScoped;\n\t\t\t\toptions.isBuiltin = options.isBuiltin || existing.isBuiltin;\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\tawait this.uninstallExtension(existing);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\t\tif (existing) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\n\t\t\tlet metadata: IGalleryMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tmetadata = await this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t\t} catch (e) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tconst local = await this.installFromZipPath(identifierWithVersion, zipPath, { ...(metadata || {}), ...options }, options, operation, token);\n\t\t\t\tthis.logService.info('Successfully installed the extension:', identifier.id);\n\t\t\t\treturn local;\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprivate async installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, options: InstallOptions, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, identifierWithVersion, metadata }, token);\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, undefined, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, local, operation });\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, operation, error });\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(InstallOperation.Install), getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\t\t\tcancellablePromise = createCancelablePromise(token => this.doInstallFromGallery(extension, options, token));\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\tcancellablePromise.finally(() => this.installingExtensions.delete(key));\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async doInstallFromGallery(extension: IGalleryExtension, options: InstallOptions, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst startTime = new Date().getTime();\n\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\ttry {\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (existingExtension) {\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t}\n\n\t\t\tconst installableExtension = await this.downloadInstallableExtension(extension, operation);\n\t\t\tinstallableExtension.metadata.isMachineScoped = options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\tinstallableExtension.metadata.isBuiltin = options.isBuiltin || existingExtension?.isBuiltin;\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\n\t\t\ttry { await this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)); } catch (error) { /* Ignore */ }\n\n\t\t\tif (!options.donotIncludePackAndDependencies) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.installDependenciesAndPackExtensions(local, existingExtension, options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.uninstall(local); } catch (error) { /* Ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existingExtension);\n\t\t\t}\n\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t\treturn local;\n\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS);\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\t\tif (!compatibleExtension) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.extensionsScanner.setUninstalled(extension);\n\t\ttry {\n\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t} catch (e) {\n\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t}\n\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate async isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst report = await this.getExtensionsReport();\n\t\treturn getMaliciousExtensionsSet(report).has(extension.identifier.id);\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath: string | undefined;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tzipPath = (await this.extensionsDownloader.downloadExtension(extension, operation)).fsPath;\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING);\n\t\t}\n\t}\n\n\tprivate async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, installableExtension.metadata) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t}\n\t\t}\n\t\treturn this.extractAndInstall(installableExtension, token);\n\t}\n\n\tprivate async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tconst local = await this.extensionsScanner.setInstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\treturn local;\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifierWithVersion.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined, options: InstallOptions): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\tif (installed.manifest.extensionPack) {\n\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\tconst installed = await this.getInstalled();\n\t\t\t// filter out installed extensions\n\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\tif (names.length) {\n\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.settled(extensionsToInstall.map(e => this.installFromGallery(e, options)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.rollback(extensionsToInstall); } catch (e) { /* ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionsToUninstall = installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))); // Check with version because we want to rollback the exact version\n\t\tawait Promises.settled(extensionsToUninstall.map(local => this.uninstall(local)));\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name));\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.checkForDependenciesAndUninstall(extensionToUninstall, installed, options);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate async getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\tconst galleryExtension = await this.findGalleryExtensionByName(extensionName);\n\t\treturn galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined;\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate async checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tconst packedExtensions = options.donotIncludePack ? [] : this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\tawait this.uninstallExtensions(extension, packedExtensions, installed, options);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], options: UninstallOptions): Promise<void> {\n\t\tconst extensionsToUninstall = [extension, ...otherExtensionsToUninstall];\n\t\tif (!options.donotCheckDependents) {\n\t\t\tfor (const e of extensionsToUninstall) {\n\t\t\t\tthis.checkForDependents(e, extensionsToUninstall, installed, extension);\n\t\t\t}\n\t\t}\n\t\tawait Promises.settled([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]);\n\t}\n\n\tprivate checkForDependents(extension: ILocalExtension, extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async doUninstall(extension: ILocalExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tawait this.uninstallExtension(extension);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst exists = await pfs.exists(extension.location.fsPath);\n\t\tif (!exists) {\n\t\t\tthrow new Error(nls.localize('notExists', \"Could not find extension\"));\n\t\t}\n\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t}\n\n\tprivate async uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(async () => {\n\t\t\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\t\t\tawait this.extensionsScanner.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier)));\n\t\t\t});\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t\tpromise.finally(() => this.uninstallingExtensions.delete(local.identifier.id));\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.filterUninstalled(identifier);\n\t\treturn uninstalled.length === 1;\n\t}\n\n\tprivate async filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\tconst uninstalled: string[] = [];\n\t\tconst allUninstalled = await this.extensionsScanner.getUninstalledExtensions();\n\t\tfor (const identifier of identifiers) {\n\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t}\n\t\t}\n\t\treturn uninstalled;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate async updateReportCache(): Promise<IReportedExtension[]> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst result = await this.galleryService.getExtensionsReport();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n\t}\n}\n"]}