{"version":3,"file":"extensionEnablementService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/extensionManagement/common/extensionEnablementService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtensionIdentifier, IGlobalExtensionEnablementService, DISABLED_EXTENSIONS_STORAGE_PATH } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IStorageService, StorageScope, IStorageValueChangeEvent, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport class GlobalExtensionEnablementService extends Disposable implements IGlobalExtensionEnablementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeEnablement = new Emitter<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>();\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }> = this._onDidChangeEnablement.event;\n\tprivate readonly storageManger: StorageManager;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManger = this._register(new StorageManager(storageService));\n\t\tthis._register(this.storageManger.onDidChange(extensions => this._onDidChangeEnablement.fire({ extensions, source: 'storage' })));\n\t}\n\n\tasync enableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._removeFromDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync disableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._addToDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tasync getDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]> {\n\t\treturn this.getDisabledExtensions();\n\t}\n\n\tprivate _addToDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tlet disabledExtensions = this.getDisabledExtensions();\n\t\tif (disabledExtensions.every(e => !areSameExtensions(e, identifier))) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tlet disabledExtensions = this.getDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _setDisabledExtensions(disabledExtensions: IExtensionIdentifier[]): void {\n\t\tthis._setExtensions(DISABLED_EXTENSIONS_STORAGE_PATH, disabledExtensions);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\treturn this.storageManger.get(storageId, StorageScope.GLOBAL);\n\t}\n\n\tprivate _setExtensions(storageId: string, extensions: IExtensionIdentifier[]): void {\n\t\tthis.storageManger.set(storageId, extensions, StorageScope.GLOBAL);\n\t}\n\n}\n\nexport class StorageManager extends Disposable {\n\n\tprivate storage: { [key: string]: string } = Object.create(null);\n\n\tprivate _onDidChange: Emitter<IExtensionIdentifier[]> = this._register(new Emitter<IExtensionIdentifier[]>());\n\treadonly onDidChange: Event<IExtensionIdentifier[]> = this._onDidChange.event;\n\n\tconstructor(private storageService: IStorageService) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\t}\n\n\tget(key: string, scope: StorageScope): IExtensionIdentifier[] {\n\t\tlet value: string;\n\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\tif (isUndefinedOrNull(this.storage[key])) {\n\t\t\t\tthis.storage[key] = this._get(key, scope);\n\t\t\t}\n\t\t\tvalue = this.storage[key];\n\t\t} else {\n\t\t\tvalue = this._get(key, scope);\n\t\t}\n\t\treturn JSON.parse(value);\n\t}\n\n\tset(key: string, value: IExtensionIdentifier[], scope: StorageScope): void {\n\t\tlet newValue: string = JSON.stringify(value.map(({ id, uuid }) => (<IExtensionIdentifier>{ id, uuid })));\n\t\tconst oldValue = this._get(key, scope);\n\t\tif (oldValue !== newValue) {\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tif (value.length) {\n\t\t\t\t\tthis.storage[key] = newValue;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.storage[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._set(key, value.length ? newValue : undefined, scope);\n\t\t}\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IStorageValueChangeEvent): void {\n\t\tif (storageChangeEvent.scope === StorageScope.GLOBAL) {\n\t\t\tif (!isUndefinedOrNull(this.storage[storageChangeEvent.key])) {\n\t\t\t\tconst newValue = this._get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\tif (newValue !== this.storage[storageChangeEvent.key]) {\n\t\t\t\t\tconst oldValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\t\tdelete this.storage[storageChangeEvent.key];\n\t\t\t\t\tconst newValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\t\tconst added = oldValues.filter(oldValue => !newValues.some(newValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\t\tconst removed = newValues.filter(newValue => !oldValues.some(oldValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\t\tif (added.length || removed.length) {\n\t\t\t\t\t\tthis._onDidChange.fire([...added, ...removed]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _get(key: string, scope: StorageScope): string {\n\t\treturn this.storageService.get(key, scope, '[]');\n\t}\n\n\tprivate _set(key: string, value: string | undefined, scope: StorageScope): void {\n\t\tif (value) {\n\t\t\t// Enablement state is synced separately through extensions\n\t\t\tthis.storageService.store(key, value, scope, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(key, scope);\n\t\t}\n\t}\n}\n"]}