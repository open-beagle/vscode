{"version":3,"sources":["vs/platform/environment/node/argv.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG;;OAEG;IACH,MAAM,cAAc,GAAG;QACtB,CAAC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAkB,EAAE,IAAS,CAAC;QAC1C,CAAC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAsB,EAAE,IAAuB,CAAC;QAC5D,CAAC,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAiB,EAAE,IAAiB,CAAC;KACjD,CAAC;IAsBW,QAAA,OAAO,GAAmD;QACtE,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAoC,CAAC,EAAE;QAC9I,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAK,EAAE,IAA0C,CAAC,EAAE;QAC1I,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,uBAAuB,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAuE,CAAC,EAAE;QACxL,YAAY,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAW,EAAE,IAA6B,CAAC,EAAE;QAC1H,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAa,EAAE,IAA6D,CAAC,EAAE;QAC9J,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAM,EAAE,IAAmD,CAAC,EAAE;QACrI,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACxC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,CAAQ,EAAE,IAA0C,CAAC,EAAE;QACnI,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAa,EAAE,IAA6G,CAAC,EAAE;QAC/M,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAM,EAAE,IAAc,CAAC,EAAE;QAEhG,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,mBAAmB,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAmB,EAAE,IAAmC,CAAC,EAAE;QAC7K,yBAAyB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7C,wBAAwB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5C,8BAA8B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,+CAA+C,EAAE;QAC5H,sBAAsB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,4CAA4C,EAAE;QACjH,iBAAiB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAgB,EAAE,IAAgC,CAAC,EAAE;QAC3H,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAc,EAAE,IAAsE,CAAC,EAAE;QAC7J,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAU,EAAE,IAAkF,CAAC,EAAE;QAC/J,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,uCAAuC,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAkB,EAAE,IAAkP,CAAC,EAAE;QACjY,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAoB,EAAE,IAA0B,CAAC,EAAE;QACpJ,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAkB,EAAE,IAA6G,CAAC,EAAE;QAErO,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAS,EAAE,IAAgB,CAAC,EAAE;QACxG,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAS,EAAE,IAAwC,CAAC,EAAE;QACpH,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAK,EAAE,IAAuH,CAAC,EAAE;QACzM,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAQ,EAAE,IAAkD,CAAC,EAAE;QACxI,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAc,EAAE,IAAiC,CAAC,EAAE;QACvH,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACxC,qBAAqB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACzC,oBAAoB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACzC,oBAAoB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,mBAAmB,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAmB,EAAE,IAAmC,CAAC,EAAE;QACrK,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAkB,EAAE,IAAuB,CAAC,EAAE;QAC7I,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAW,EAAE,IAAqB,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;QAEpH,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,iBAAiB,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAoB,EAAE,IAAgG,CAAC,EAAE;QAC9O,wBAAwB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,oBAAoB,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAwB,EAAE,IAAiJ,CAAC,EAAE;QAC1S,aAAa,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAY,EAAE,IAAoC,CAAC,EAAE;QACvH,YAAY,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAW,EAAE,IAA2C,CAAC,EAAE;QAC3H,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAW,EAAE,IAAoD,CAAC,EAAE;QAEpI,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5B,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;QACzD,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;QAEvD,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QACxC,0BAA0B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QAChD,0BAA0B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QAChD,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACxC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7B,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACpC,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE;QAC/D,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,gBAAgB,EAAE;QACtE,8BAA8B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClD,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACpC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5B,+BAA+B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACpD,oBAAoB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACzC,mBAAmB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACxC,iBAAiB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACtC,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACrC,wBAAwB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC7C,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC9C,mBAAmB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACvC,6BAA6B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAClD,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACnC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC/B,YAAY,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACjC,YAAY,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACjC,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACrC,2BAA2B,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QACjD,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC5B,aAAa,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAClC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC5B,uBAAuB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC3C,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACnC,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACrC,wBAAwB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC7C,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACpC,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAChC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAE9B,iBAAiB;QACjB,iBAAiB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACtC,cAAc,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClC,mBAAmB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACvC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACnC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC9B,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7B,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC7B,2BAA2B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC/C,8BAA8B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACnD,2BAA2B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAChD,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC/C,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACjC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7B,OAAO,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;QAE7B,CAAC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,iBAAiB;KACzC,CAAC;IAOF,MAAM,gBAAgB,GAAkB;QACvC,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,gBAAgB,EAAE,GAAG,EAAE,GAAG,CAAC;KAC3B,CAAC;IAEF,SAAgB,SAAS,CAAI,IAAc,EAAE,OAA8B,EAAE,gBAA+B,gBAAgB;QAC3H,MAAM,KAAK,GAA8B,EAAE,CAAC;QAC5C,MAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC7B,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,KAAK,EAAE;gBACZ,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;aAC1B;YAED,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;gBACjD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,CAAC,UAAU,EAAE;oBACjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBAC1B;aACD;iBAAM,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE;gBAChC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvB,IAAI,CAAC,CAAC,UAAU,EAAE;oBACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBAC3B;aACD;SACD;QACD,oCAAoC;QACpC,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAE9D,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,MAAM,aAAa,GAAQ,UAAU,CAAC;QAEtC,sGAAsG;QACtG,WAAW,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEnF,OAAO,aAAa,CAAC,CAAC,CAAC;QAEvB,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC7B,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,KAAK,EAAE;gBACZ,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aAC9B;YAED,IAAI,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,CAAC,UAAU,IAAI,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;gBAC/D,IAAI,CAAC,GAAG,EAAE;oBACT,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBAClC;gBACD,OAAO,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACnC;YAED,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;gBAC/B,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;oBAC1B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBAC/B,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;qBACZ;iBACD;qBAAM,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC/B,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,gBAAgB;wBACjC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;qBAC9C;iBACD;gBACD,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;aAC5B;YACD,OAAO,aAAa,CAAC,QAAQ,CAAC,CAAC;SAC/B;QAED,KAAK,IAAI,GAAG,IAAI,aAAa,EAAE;YAC9B,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SACnC;QAED,OAAO,WAAW,CAAC;IACpB,CAAC;IApED,8BAoEC;IAED,SAAS,WAAW,CAAC,QAAgB,EAAE,MAAmB;QACzD,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,MAAM,CAAC,IAAI,EAAE;YAChB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,GAAG,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;aACvC;iBAAM;gBACN,IAAI,GAAG,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC;aAC3B;SACD;QACD,IAAI,MAAM,CAAC,KAAK,EAAE;YACjB,OAAO,IAAI,MAAM,CAAC,KAAK,MAAM,QAAQ,GAAG,IAAI,EAAE,CAAC;SAC/C;QACD,OAAO,KAAK,QAAQ,GAAG,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,4BAA4B;IAC5B,SAAgB,aAAa,CAAC,OAAgC,EAAE,OAAe;QAC9E,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,UAAU,GAAuB,EAAE,CAAC;QACxC,KAAK,MAAM,QAAQ,IAAI,OAAO,EAAE;YAC/B,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC3C,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YAClD,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,WAAY,CAAC,CAAC,CAAC;SAC7C;QACD,IAAI,SAAS,GAAG,SAAS,GAAG,CAAC,CAAA,gBAAgB,GAAG,CAAC,CAAA,iBAAiB,CAAC;QACnE,IAAI,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE;YAC7B,8CAA8C;YAC9C,OAAO,UAAU,CAAC,MAAM,CAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SAC9F;QACD,IAAI,kBAAkB,GAAG,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;QACjD,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,KAAK,MAAM,EAAE,IAAI,UAAU,EAAE;YAC5B,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,kBAAkB,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAC7D,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA,gBAAgB,CAAC,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,UAAU,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;SACD;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IA1BD,sCA0BC;IAED,SAAS,MAAM,CAAC,KAAa;QAC5B,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,SAAS,QAAQ,CAAC,IAAY,EAAE,OAAe;QAC9C,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,MAAM,EAAE;YACnB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACjF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;YACvC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjB;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,SAAgB,gBAAgB,CAAC,WAAmB,EAAE,cAAsB,EAAE,OAAe,EAAE,OAAgC,EAAE,eAAe,GAAG,IAAI;QACtJ,MAAM,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;QAEzE,IAAI,IAAI,GAAG,CAAC,GAAG,WAAW,IAAI,OAAO,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAO,EAAE,IAAO,CAAC,KAAK,cAAc,KAAK,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAS,EAAE,IAAS,CAAC,KAAK,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAO,EAAE,IAAO,CAAC,MAAM,CAAC,CAAC;QACpI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACd,IAAI,eAAe,EAAE;YACpB,IAAI,oBAAS,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAc,EAAE,IAAmF,EAAE,cAAc,CAAC,CAAC,CAAC;aACzI;iBAAM;gBACN,IAAI,CAAC,IAAI,CAAC,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAW,EAAE,IAAoE,EAAE,cAAc,CAAC,CAAC,CAAC;aACvH;YACD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;QACD,MAAM,iBAAiB,GAAqE,EAAE,CAAC;QAC/F,KAAK,MAAM,QAAQ,IAAI,OAAO,EAAE;YAC/B,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC3B,IAAI,YAAY,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC5C,IAAI,CAAC,YAAY,EAAE;oBAClB,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC;iBAC7C;gBACD,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC3B;SACD;QAED,KAAK,IAAI,eAAe,IAAI,iBAAiB,EAAE;YAC9C,MAAM,GAAG,GAAgC,eAAe,CAAC;YAEzD,IAAI,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,eAAe,EAAE;gBACpB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACd;SACD;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAtCD,4CAsCC;IAED,SAAgB,mBAAmB,CAAC,OAA2B,EAAE,MAA0B;QAC1F,OAAO,GAAG,OAAO,IAAI,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAgB,EAAE,IAAiB,CAAC,KAAK,MAAM,IAAI,CAAA,GAAA,cAAQ,CAAA,CAAC,EAAe,EAAE,IAAgB,CAAC,KAAK,OAAO,CAAC,IAAI,EAAE,CAAC;IACjJ,CAAC;IAFD,kDAEC","file":"argv.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { localize } from 'vs/nls';\nimport { isWindows } from 'vs/base/common/platform';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'extra-builtin-extensions-dir': { type: 'string[]', cat: 'o', description: 'Path to an extra builtin extension directory.' },\n\t'extra-extensions-dir': { type: 'string[]', cat: 'o', description: 'Path to an extra user extension directory.' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\") },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'extension-id[@version] | path-to-vsix', description: localize('installExtension', \"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup\") },\n\t'prof-append-timers': { type: 'string' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off\"), args: ['on', 'off'] },\n\n\t'inspect-extensions': { type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\") },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string' },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-search': { type: 'string', deprecates: 'debugSearch' },\n\t'inspect-brk-search': { type: 'string', deprecates: 'debugBrkSearch' },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'driver': { type: 'string' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'driver-verbose': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'__sandbox': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string' },\n\t'inspect-brk': { type: 'string' },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates && remainingArgs.hasOwnProperty(o.deprecates)) {\n\t\t\tif (!val) {\n\t\t\t\tval = remainingArgs[o.deprecates];\n\t\t\t}\n\t\t\tdelete remainingArgs[o.deprecates];\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (val && !Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (let key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tlet usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tlet argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tlet usage = ut[0];\n\t\tlet wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, isPipeSupported = true): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tlet help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}][${localize('paths', 'paths')}...]`);\n\thelp.push('');\n\tif (isPipeSupported) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (let helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tlet categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n"]}