{"version":3,"file":"url.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/url/common/url.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,WAAW,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAc,YAAY,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport const IURLService = createDecorator<IURLService>('urlService');\n\nexport interface IOpenURLOptions {\n\n\t/**\n\t * If not provided or `false`, signals that the\n\t * URL to open did not originate from the product\n\t * but outside. As such, a confirmation dialog\n\t * might be shown to the user.\n\t */\n\ttrusted?: boolean;\n\n\toriginalUrl?: string;\n}\n\nexport interface IURLHandler {\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean>;\n}\n\nexport interface IURLService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Create a URL that can be called to trigger IURLhandlers.\n\t * The URL that gets passed to the IURLHandlers carries over\n\t * any of the provided IURLCreateOption values.\n\t */\n\tcreate(options?: Partial<UriComponents>): URI;\n\n\topen(url: URI, options?: IOpenURLOptions): Promise<boolean>;\n\n\tregisterHandler(handler: IURLHandler): IDisposable;\n}\n"]}