{"version":3,"file":"webviewMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/webview/electron-main/webviewMainService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,sBAAU;QAIjD,YACiB,aAA6B,EACP,kBAAuC;YAE7E,KAAK,EAAE,CAAC;YAF8B,uBAAkB,GAAlB,kBAAkB,CAAqB;YAG7E,IAAI,CAAC,SAAS,CAAC,IAAI,iDAAuB,EAAE,CAAC,CAAC;YAE9C,MAAM,IAAI,GAAG,kBAAO,CAAC,aAAa,CAAC,0CAAkB,CAAC,CAAC;YACvD,IAAI,CAAC,2BAA2B,CAAC,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE;gBACvE,IAAI,UAAU,KAAK,gBAAgB,EAAE;oBACpC,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACtB;gBAED,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,yBAAyB,CAAC,CAAC,YAAY,EAAE,UAAU,CAAC,aAAa,EAAE,EAAE;gBACzE,OAAO,UAAU,KAAK,gBAAgB,CAAC;YACxC,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,KAAK,CAAC,sBAAsB,CAAC,EAA0C,EAAE,OAAgB;YAC/F,IAAI,QAAiC,CAAC;YAEtC,IAAI,OAAQ,EAAsB,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACzD,MAAM,EAAE,QAAQ,EAAE,GAAI,EAAsB,CAAC;gBAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC/D,IAAI,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,CAAA,EAAE;oBACjB,MAAM,IAAI,KAAK,CAAC,qBAAqB,QAAQ,EAAE,CAAC,CAAC;iBACjD;gBACD,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC;aAClC;iBAAM;gBACN,MAAM,EAAE,aAAa,EAAE,GAAI,EAA2B,CAAC;gBACvD,QAAQ,GAAG,sBAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC7C,IAAI,CAAC,QAAQ,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,aAAa,EAAE,CAAC,CAAC;iBAC3D;aACD;YAED,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE;gBAC5B,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;aACzC;QACF,CAAC;KACD,CAAA;IA/CY,kBAAkB;QAK5B,WAAA,uBAAc,CAAA;QACd,WAAA,6BAAmB,CAAA;OANT,kBAAkB,CA+C9B;IA/CY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { session, WebContents, webContents } from 'electron';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ITunnelService } from 'vs/platform/remote/common/tunnel';\nimport { IWebviewManagerService, webviewPartitionId, WebviewWebContentsId, WebviewWindowId } from 'vs/platform/webview/common/webviewManagerService';\nimport { WebviewProtocolProvider } from 'vs/platform/webview/electron-main/webviewProtocolProvider';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\n\nexport class WebviewMainService extends Disposable implements IWebviewManagerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ITunnelService tunnelService: ITunnelService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tsuper();\n\t\tthis._register(new WebviewProtocolProvider());\n\n\t\tconst sess = session.fromPartition(webviewPartitionId);\n\t\tsess.setPermissionRequestHandler((_webContents, permission, callback) => {\n\t\t\tif (permission === 'clipboard-read') {\n\t\t\t\treturn callback(true);\n\t\t\t}\n\n\t\t\treturn callback(false);\n\t\t});\n\n\t\tsess.setPermissionCheckHandler((_webContents, permission /* 'media' */) => {\n\t\t\treturn permission === 'clipboard-read';\n\t\t});\n\t}\n\n\tpublic async setIgnoreMenuShortcuts(id: WebviewWebContentsId | WebviewWindowId, enabled: boolean): Promise<void> {\n\t\tlet contents: WebContents | undefined;\n\n\t\tif (typeof (id as WebviewWindowId).windowId === 'number') {\n\t\t\tconst { windowId } = (id as WebviewWindowId);\n\t\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\t\tif (!window?.win) {\n\t\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t\t}\n\t\t\tcontents = window.win.webContents;\n\t\t} else {\n\t\t\tconst { webContentsId } = (id as WebviewWebContentsId);\n\t\t\tcontents = webContents.fromId(webContentsId);\n\t\t\tif (!contents) {\n\t\t\t\tthrow new Error(`Invalid webContentsId: ${webContentsId}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!contents.isDestroyed()) {\n\t\t\tcontents.setIgnoreMenuShortcuts(enabled);\n\t\t}\n\t}\n}\n"]}