{"version":3,"file":"fileLog.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/log/common/fileLog.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogger, ILoggerService, ILogger, AbstractLoggerService } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { ByteSize, FileOperationError, FileOperationResult, IFileService, whenProviderRegistered } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { dirname, joinPath, basename } from 'vs/base/common/resources';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\n\nconst MAX_FILE_SIZE = 5 * ByteSize.MB;\n\nexport class FileLogger extends AbstractLogger implements ILogger {\n\n\tprivate readonly initializePromise: Promise<void>;\n\tprivate readonly queue: Queue<void>;\n\tprivate backupIndex: number = 1;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly resource: URI,\n\t\tlevel: LogLevel,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis.queue = this._register(new Queue<void>());\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format(arguments));\n\t\t}\n\t}\n\n\tflush(): void {\n\t}\n\n\tlog(level: LogLevel, args: any[]): void {\n\t\tthis._log(level, this.format(args));\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.createFile(this.resource);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tthis.queue.queue(async () => {\n\t\t\tawait this.initializePromise;\n\t\t\tlet content = await this.loadContent();\n\t\t\tif (content.length > MAX_FILE_SIZE) {\n\t\t\t\tawait this.fileService.writeFile(this.getBackupResource(), VSBuffer.fromString(content));\n\t\t\t\tcontent = '';\n\t\t\t}\n\t\t\tcontent += `[${this.getCurrentTimestamp()}] [${this.name}] [${this.stringifyLogLevel(level)}] ${message}\\n`;\n\t\t\tawait this.fileService.writeFile(this.resource, VSBuffer.fromString(content));\n\t\t});\n\t}\n\n\tprivate getCurrentTimestamp(): string {\n\t\tconst toTwoDigits = (v: number) => v < 10 ? `0${v}` : v;\n\t\tconst toThreeDigits = (v: number) => v < 10 ? `00${v}` : v < 100 ? `0${v}` : v;\n\t\tconst currentTime = new Date();\n\t\treturn `${currentTime.getFullYear()}-${toTwoDigits(currentTime.getMonth() + 1)}-${toTwoDigits(currentTime.getDate())} ${toTwoDigits(currentTime.getHours())}:${toTwoDigits(currentTime.getMinutes())}:${toTwoDigits(currentTime.getSeconds())}.${toThreeDigits(currentTime.getMilliseconds())}`;\n\t}\n\n\tprivate getBackupResource(): URI {\n\t\tthis.backupIndex = this.backupIndex > 5 ? 1 : this.backupIndex;\n\t\treturn joinPath(dirname(this.resource), `${basename(this.resource)}_${this.backupIndex++}`);\n\t}\n\n\tprivate async loadContent(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.resource);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate stringifyLogLevel(level: LogLevel): string {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Critical: return 'critical';\n\t\t\tcase LogLevel.Debug: return 'debug';\n\t\t\tcase LogLevel.Error: return 'error';\n\t\t\tcase LogLevel.Info: return 'info';\n\t\t\tcase LogLevel.Trace: return 'trace';\n\t\t\tcase LogLevel.Warning: return 'warning';\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport class FileLoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel): ILogger {\n\t\tconst logger = new BufferLogService(logLevel);\n\t\twhenProviderRegistered(resource, this.fileService).then(() => (<BufferLogService>logger).logger = this.instantiationService.createInstance(FileLogger, basename(resource), resource, logger.getLevel()));\n\t\treturn logger;\n\t}\n}\n"]}