{"version":3,"file":"log.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/log/common/log.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n\n"]}