{"version":3,"file":"loggerService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/log/node/loggerService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWhG,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,2BAAqB;QAEvD,YACc,UAAuB,EACL,WAAyB;YAExD,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,mBAAmB,CAAC,CAAC;YAF9B,gBAAW,GAAX,WAAW,CAAc;QAGzD,CAAC;QAES,cAAc,CAAC,QAAa,EAAE,QAAkB,EAAE,OAAwB;;YACnF,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,EAAE;gBACrC,MAAM,MAAM,GAAG,IAAI,wBAAY,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,KAAI,CAAA,GAAA,mBAAY,CAAA,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,CAAA,EAAE,QAAQ,CAAC,CAAC;gBACnH,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB,EAAE;oBACjB,MAAO,CAAC,eAAe,EAAE,CAAC;iBACzC;gBACD,OAAO,MAAM,CAAC;aACd;iBAAM;gBACN,OAAO,IAAI,oBAAU,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,mCAAI,CAAA,GAAA,oBAAQ,CAAA,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aACjG;QACF,CAAC;KACD,CAAA;IApBY,aAAa;QAGvB,WAAA,iBAAW,CAAA;QACX,WAAA,oBAAY,CAAA;OAJF,aAAa,CAoBzB;IApBY,sCAAa","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, ILoggerService, ILogger, ILoggerOptions, AbstractLoggerService, LogLevel } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { basename } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { FileLogger } from 'vs/platform/log/common/fileLog';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { generateUuid } from 'vs/base/common/uuid';\n\nexport class LoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst logger = new SpdLogLogger(options?.name || generateUuid(), resource.fsPath, !options?.donotRotate, logLevel);\n\t\t\tif (options?.donotUseFormatters) {\n\t\t\t\t(<SpdLogLogger>logger).clearFormatters();\n\t\t\t}\n\t\t\treturn logger;\n\t\t} else {\n\t\t\treturn new FileLogger(options?.name ?? basename(resource), resource, logLevel, this.fileService);\n\t\t}\n\t}\n}\n\n"]}