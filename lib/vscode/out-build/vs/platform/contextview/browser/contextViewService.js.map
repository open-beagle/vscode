{"version":3,"file":"contextViewService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/contextview/browser/contextViewService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,sBAAU;QAOjD,YAC0B,aAA6B;YAEtD,KAAK,EAAE,CAAC;YAFiB,kBAAa,GAAb,aAAa,CAAgB;YAL/C,0BAAqB,GAAgB,sBAAU,CAAC,IAAI,CAAC;YAS5D,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,yBAAW,CAAC,IAAI,CAAC,SAAS,mBAAkC,CAAC,CAAC;YACpG,IAAI,CAAC,MAAM,EAAE,CAAC;YAEd,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC;QAED,cAAc;QAEd,YAAY,CAAC,SAAsB,EAAE,WAAoC;YACxE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,WAAW,oBAAmC,CAAC,CAAC;QAC1F,CAAC;QAED,eAAe,CAAC,QAA8B,EAAE,SAAuB,EAAE,UAAoB;YAC5F,IAAI,SAAS,EAAE;gBACd,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,sBAAqC,CAAC,cAA6B,CAAC,CAAC;iBAC9G;aACD;iBAAM;gBACN,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;oBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,mBAAkC,CAAC;iBACnE;aACD;YAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEhC,MAAM,UAAU,GAAG,CAAA,GAAA,wBAAY,CAAA,CAAC,GAAG,EAAE;gBACpC,IAAI,IAAI,CAAC,qBAAqB,KAAK,UAAU,EAAE;oBAC9C,IAAI,CAAC,eAAe,EAAE,CAAC;iBACvB;YACF,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC;YACxC,OAAO,UAAU,CAAC;QACnB,CAAC;QAED,qBAAqB;YACpB,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QAED,MAAM;YACL,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC;QAED,eAAe,CAAC,IAAU;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;KACD,CAAA;IA7DY,kBAAkB;QAQ5B,WAAA,8BAAc,CAAA;OARJ,kBAAkB,CA6D9B;IA7DY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextViewService, IContextViewDelegate } from './contextView';\nimport { ContextView, ContextViewDOMPosition } from 'vs/base/browser/ui/contextview/contextview';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\n\nexport class ContextViewService extends Disposable implements IContextViewService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate currentViewDisposable: IDisposable = Disposable.None;\n\tprivate contextView: ContextView;\n\tprivate container: HTMLElement;\n\n\tconstructor(\n\t\t@ILayoutService readonly layoutService: ILayoutService\n\t) {\n\t\tsuper();\n\n\t\tthis.container = layoutService.container;\n\t\tthis.contextView = this._register(new ContextView(this.container, ContextViewDOMPosition.ABSOLUTE));\n\t\tthis.layout();\n\n\t\tthis._register(layoutService.onDidLayout(() => this.layout()));\n\t}\n\n\t// ContextView\n\n\tsetContainer(container: HTMLElement, domPosition?: ContextViewDOMPosition): void {\n\t\tthis.contextView.setContainer(container, domPosition || ContextViewDOMPosition.ABSOLUTE);\n\t}\n\n\tshowContextView(delegate: IContextViewDelegate, container?: HTMLElement, shadowRoot?: boolean): IDisposable {\n\t\tif (container) {\n\t\t\tif (container !== this.container) {\n\t\t\t\tthis.container = container;\n\t\t\t\tthis.setContainer(container, shadowRoot ? ContextViewDOMPosition.FIXED_SHADOW : ContextViewDOMPosition.FIXED);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.container !== this.layoutService.container) {\n\t\t\t\tthis.container = this.layoutService.container;\n\t\t\t\tthis.setContainer(this.container, ContextViewDOMPosition.ABSOLUTE);\n\t\t\t}\n\t\t}\n\n\t\tthis.contextView.show(delegate);\n\n\t\tconst disposable = toDisposable(() => {\n\t\t\tif (this.currentViewDisposable === disposable) {\n\t\t\t\tthis.hideContextView();\n\t\t\t}\n\t\t});\n\n\t\tthis.currentViewDisposable = disposable;\n\t\treturn disposable;\n\t}\n\n\tgetContextViewElement(): HTMLElement {\n\t\treturn this.contextView.getViewElement();\n\t}\n\n\tlayout(): void {\n\t\tthis.contextView.layout();\n\t}\n\n\thideContextView(data?: any): void {\n\t\tthis.contextView.hide(data);\n\t}\n}\n"]}