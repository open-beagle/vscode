{"version":3,"file":"contextMenuService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/contextview/browser/contextMenuService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAYhG,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,sBAAU;QAKjD,YACoB,gBAAmC,EAChC,mBAAyC,EAC1C,kBAAuC,EACxC,iBAAqC,EAC1C,YAA2B;YAE1C,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,kBAAkB,GAAG,IAAI,uCAAkB,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;QAC9I,CAAC;QAED,SAAS,CAAC,OAAmC;YAC5C,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;QAED,cAAc;QAEd,eAAe,CAAC,QAA8B;YAC7C,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAClD,wBAAkB,CAAC,WAAW,EAAE,CAAC,cAAc,EAAE,CAAC;QACnD,CAAC;KACD,CAAA;IA3BY,kBAAkB;QAM5B,WAAA,6BAAiB,CAAA;QACjB,WAAA,mCAAoB,CAAA;QACpB,WAAA,iCAAmB,CAAA;QACnB,WAAA,+BAAkB,CAAA;QAClB,WAAA,4BAAa,CAAA;OAVH,kBAAkB,CA2B9B;IA3BY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextMenuHandler, IContextMenuHandlerOptions } from './contextMenuHandler';\nimport { IContextViewService, IContextMenuService } from './contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IContextMenuDelegate } from 'vs/base/browser/contextmenu';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ModifierKeyEmitter } from 'vs/base/browser/dom';\n\nexport class ContextMenuService extends Disposable implements IContextMenuService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate contextMenuHandler: ContextMenuHandler;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\tthis.contextMenuHandler = new ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService);\n\t}\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.contextMenuHandler.configure(options);\n\t}\n\n\t// ContextMenu\n\n\tshowContextMenu(delegate: IContextMenuDelegate): void {\n\t\tthis.contextMenuHandler.showContextMenu(delegate);\n\t\tModifierKeyEmitter.getInstance().resetKeyStatus();\n\t}\n}\n"]}