{"version":3,"file":"workspacesHistoryStorage.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/workspaces/test/electron-main/workspacesHistoryStorage.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\nimport { IWorkspaceIdentifier, IRecentlyOpened, isRecentFolder, IRecentFolder, IRecentWorkspace, toStoreData, restoreRecentlyOpened } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nsuite('History Storage', () => {\n\n\tfunction toWorkspace(uri: URI): IWorkspaceIdentifier {\n\t\treturn {\n\t\t\tid: '1234',\n\t\t\tconfigPath: uri\n\t\t};\n\t}\n\tfunction assertEqualURI(u1: URI | undefined, u2: URI | undefined, message?: string): void {\n\t\tassert.strictEqual(u1 && u1.toString(), u2 && u2.toString(), message);\n\t}\n\n\tfunction assertEqualWorkspace(w1: IWorkspaceIdentifier | undefined, w2: IWorkspaceIdentifier | undefined, message?: string): void {\n\t\tif (!w1 || !w2) {\n\t\t\tassert.strictEqual(w1, w2, message);\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(w1.id, w2.id, message);\n\t\tassertEqualURI(w1.configPath, w2.configPath, message);\n\t}\n\n\tfunction assertEqualRecentlyOpened(actual: IRecentlyOpened, expected: IRecentlyOpened, message?: string) {\n\t\tassert.strictEqual(actual.files.length, expected.files.length, message);\n\t\tfor (let i = 0; i < actual.files.length; i++) {\n\t\t\tassertEqualURI(actual.files[i].fileUri, expected.files[i].fileUri, message);\n\t\t\tassert.strictEqual(actual.files[i].label, expected.files[i].label);\n\t\t\tassert.strictEqual(actual.files[i].remoteAuthority, expected.files[i].remoteAuthority);\n\t\t}\n\t\tassert.strictEqual(actual.workspaces.length, expected.workspaces.length, message);\n\t\tfor (let i = 0; i < actual.workspaces.length; i++) {\n\t\t\tlet expectedRecent = expected.workspaces[i];\n\t\t\tlet actualRecent = actual.workspaces[i];\n\t\t\tif (isRecentFolder(actualRecent)) {\n\t\t\t\tassertEqualURI(actualRecent.folderUri, (<IRecentFolder>expectedRecent).folderUri, message);\n\t\t\t} else {\n\t\t\t\tassertEqualWorkspace(actualRecent.workspace, (<IRecentWorkspace>expectedRecent).workspace, message);\n\t\t\t}\n\t\t\tassert.strictEqual(actualRecent.label, expectedRecent.label);\n\t\t\tassert.strictEqual(actualRecent.remoteAuthority, actualRecent.remoteAuthority);\n\t\t}\n\t}\n\n\tfunction assertRestoring(state: IRecentlyOpened, message?: string) {\n\t\tconst stored = toStoreData(state);\n\t\tconst restored = restoreRecentlyOpened(stored, new NullLogService());\n\t\tassertEqualRecentlyOpened(state, restored, message);\n\t}\n\n\tconst testWSPath = URI.file(join(tmpdir(), 'windowStateTest', 'test.code-workspace'));\n\tconst testFileURI = URI.file(join(tmpdir(), 'windowStateTest', 'testFile.txt'));\n\tconst testFolderURI = URI.file(join(tmpdir(), 'windowStateTest', 'testFolder'));\n\n\tconst testRemoteFolderURI = URI.parse('foo://bar/c/e');\n\tconst testRemoteFileURI = URI.parse('foo://bar/c/d.txt');\n\tconst testRemoteWSURI = URI.parse('foo://bar/c/test.code-workspace');\n\n\ttest('storing and restoring', () => {\n\t\tlet ro: IRecentlyOpened;\n\t\tro = {\n\t\t\tfiles: [],\n\t\t\tworkspaces: []\n\t\t};\n\t\tassertRestoring(ro, 'empty');\n\t\tro = {\n\t\t\tfiles: [{ fileUri: testFileURI }],\n\t\t\tworkspaces: []\n\t\t};\n\t\tassertRestoring(ro, 'file');\n\t\tro = {\n\t\t\tfiles: [],\n\t\t\tworkspaces: [{ folderUri: testFolderURI }]\n\t\t};\n\t\tassertRestoring(ro, 'folder');\n\t\tro = {\n\t\t\tfiles: [],\n\t\t\tworkspaces: [{ workspace: toWorkspace(testWSPath) }, { folderUri: testFolderURI }]\n\t\t};\n\t\tassertRestoring(ro, 'workspaces and folders');\n\n\t\tro = {\n\t\t\tfiles: [{ fileUri: testRemoteFileURI }],\n\t\t\tworkspaces: [{ workspace: toWorkspace(testRemoteWSURI) }, { folderUri: testRemoteFolderURI }]\n\t\t};\n\t\tassertRestoring(ro, 'remote workspaces and folders');\n\t\tro = {\n\t\t\tfiles: [{ label: 'abc', fileUri: testFileURI }],\n\t\t\tworkspaces: [{ label: 'def', workspace: toWorkspace(testWSPath) }, { folderUri: testRemoteFolderURI }]\n\t\t};\n\t\tassertRestoring(ro, 'labels');\n\t\tro = {\n\t\t\tfiles: [{ label: 'abc', remoteAuthority: 'test', fileUri: testRemoteFileURI }],\n\t\t\tworkspaces: [{ label: 'def', remoteAuthority: 'test', workspace: toWorkspace(testWSPath) }, { folderUri: testRemoteFolderURI, remoteAuthority: 'test' }]\n\t\t};\n\t\tassertRestoring(ro, 'authority');\n\t});\n\n\ttest('open 1_33', () => {\n\t\tconst v1_33 = `{\n\t\t\t\"workspaces3\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\t\"configURIPath\": \"file:///home/user/workspaces/testing/custom.code-workspace\"\n\t\t\t\t},\n\t\t\t\t\"file:///home/user/workspaces/testing/folding\"\n\t\t\t],\n\t\t\t\"files2\": [\n\t\t\t\t\"file:///home/user/.config/code-oss-dev/storage.json\"\n\t\t\t],\n\t\t\t\"workspaceLabels\": [\n\t\t\t\tnull,\n\t\t\t\t\"abc\"\n\t\t\t],\n\t\t\t\"fileLabels\": [\n\t\t\t\t\"def\"\n\t\t\t]\n\t\t}`;\n\n\t\tlet windowsState = restoreRecentlyOpened(JSON.parse(v1_33), new NullLogService());\n\t\tlet expected: IRecentlyOpened = {\n\t\t\tfiles: [{ label: 'def', fileUri: URI.parse('file:///home/user/.config/code-oss-dev/storage.json') }],\n\t\t\tworkspaces: [\n\t\t\t\t{ workspace: { id: '53b714b46ef1a2d4346568b4f591028c', configPath: URI.parse('file:///home/user/workspaces/testing/custom.code-workspace') } },\n\t\t\t\t{ label: 'abc', folderUri: URI.parse('file:///home/user/workspaces/testing/folding') }\n\t\t\t]\n\t\t};\n\n\t\tassertEqualRecentlyOpened(windowsState, expected, 'v1_33');\n\t});\n\n\ttest('open 1_55', () => {\n\t\tconst v1_55 = `{\n\t\t\t\"entries\": [\n\t\t\t\t{\n\t\t\t\t\t\"folderUri\": \"foo://bar/23/43\",\n\t\t\t\t\t\"remoteAuthority\": \"test+test\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"workspace\": {\n\t\t\t\t\t\t\"id\": \"53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\t\t\"configPath\": \"file:///home/user/workspaces/testing/custom.code-workspace\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"folderUri\": \"file:///home/user/workspaces/testing/folding\",\n\t\t\t\t\t\"label\": \"abc\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"fileUri\": \"file:///home/user/.config/code-oss-dev/storage.json\",\n\t\t\t\t\t\"label\": \"def\"\n\t\t\t\t}\n\t\t\t]\n\t\t}`;\n\n\t\tlet windowsState = restoreRecentlyOpened(JSON.parse(v1_55), new NullLogService());\n\t\tlet expected: IRecentlyOpened = {\n\t\t\tfiles: [{ label: 'def', fileUri: URI.parse('file:///home/user/.config/code-oss-dev/storage.json') }],\n\t\t\tworkspaces: [\n\t\t\t\t{ folderUri: URI.parse('foo://bar/23/43'), remoteAuthority: 'test+test' },\n\t\t\t\t{ workspace: { id: '53b714b46ef1a2d4346568b4f591028c', configPath: URI.parse('file:///home/user/workspaces/testing/custom.code-workspace') } },\n\t\t\t\t{ label: 'abc', folderUri: URI.parse('file:///home/user/workspaces/testing/folding') }\n\t\t\t]\n\t\t};\n\n\t\tassertEqualRecentlyOpened(windowsState, expected, 'v1_33');\n\t});\n});\n"]}