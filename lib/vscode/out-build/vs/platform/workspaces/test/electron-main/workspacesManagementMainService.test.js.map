{"version":3,"file":"workspacesManagementMainService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/workspaces/test/electron-main/workspacesManagementMainService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { EnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { parseArgs, OPTIONS } from 'vs/platform/environment/node/argv';\nimport { WorkspacesManagementMainService, IStoredWorkspace, getSingleFolderWorkspaceIdentifier, getWorkspaceIdentifier } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\nimport { WORKSPACE_EXTENSION, IRawFileWorkspaceFolder, IWorkspaceFolderCreationData, IRawUriWorkspaceFolder, rewriteWorkspaceFileForNewLocation, IWorkspaceIdentifier, IStoredWorkspaceFolder } from 'vs/platform/workspaces/common/workspaces';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { flakySuite, getRandomTestPath } from 'vs/base/test/node/testUtils';\nimport { isWindows } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { IBackupMainService, IWorkspaceBackupInfo } from 'vs/platform/backup/electron-main/backup';\nimport { IEmptyWindowBackupInfo } from 'vs/platform/backup/node/backup';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nflakySuite('WorkspacesManagementMainService', () => {\n\n\tclass TestDialogMainService implements IDialogMainService {\n\n\t\tdeclare readonly _serviceBrand: undefined;\n\n\t\tpickFileFolder(options: INativeOpenDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<string[] | undefined> { throw new Error('Method not implemented.'); }\n\t\tpickFolder(options: INativeOpenDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<string[] | undefined> { throw new Error('Method not implemented.'); }\n\t\tpickFile(options: INativeOpenDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<string[] | undefined> { throw new Error('Method not implemented.'); }\n\t\tpickWorkspace(options: INativeOpenDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<string[] | undefined> { throw new Error('Method not implemented.'); }\n\t\tshowMessageBox(options: Electron.MessageBoxOptions, window?: Electron.BrowserWindow | undefined): Promise<Electron.MessageBoxReturnValue> { throw new Error('Method not implemented.'); }\n\t\tshowSaveDialog(options: Electron.SaveDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<Electron.SaveDialogReturnValue> { throw new Error('Method not implemented.'); }\n\t\tshowOpenDialog(options: Electron.OpenDialogOptions, window?: Electron.BrowserWindow | undefined): Promise<Electron.OpenDialogReturnValue> { throw new Error('Method not implemented.'); }\n\t}\n\n\tclass TestBackupMainService implements IBackupMainService {\n\n\t\tdeclare readonly _serviceBrand: undefined;\n\n\t\tisHotExitEnabled(): boolean { throw new Error('Method not implemented.'); }\n\t\tgetWorkspaceBackups(): IWorkspaceBackupInfo[] { throw new Error('Method not implemented.'); }\n\t\tgetFolderBackupPaths(): URI[] { throw new Error('Method not implemented.'); }\n\t\tgetEmptyWindowBackupPaths(): IEmptyWindowBackupInfo[] { throw new Error('Method not implemented.'); }\n\t\tregisterWorkspaceBackupSync(workspace: IWorkspaceBackupInfo, migrateFrom?: string | undefined): string { throw new Error('Method not implemented.'); }\n\t\tregisterFolderBackupSync(folderUri: URI): string { throw new Error('Method not implemented.'); }\n\t\tregisterEmptyWindowBackupSync(backupFolder?: string | undefined, remoteAuthority?: string | undefined): string { throw new Error('Method not implemented.'); }\n\t\tunregisterWorkspaceBackupSync(workspace: IWorkspaceIdentifier): void { throw new Error('Method not implemented.'); }\n\t\tunregisterFolderBackupSync(folderUri: URI): void { throw new Error('Method not implemented.'); }\n\t\tunregisterEmptyWindowBackupSync(backupFolder: string): void { throw new Error('Method not implemented.'); }\n\t\tasync getDirtyWorkspaces(): Promise<(IWorkspaceIdentifier | URI)[]> { return []; }\n\t}\n\n\tfunction createUntitledWorkspace(folders: string[], names?: string[]) {\n\t\treturn service.createUntitledWorkspace(folders.map((folder, index) => ({ uri: URI.file(folder), name: names ? names[index] : undefined } as IWorkspaceFolderCreationData)));\n\t}\n\n\tfunction createWorkspace(workspaceConfigPath: string, folders: (string | URI)[], names?: string[]): void {\n\t\tconst ws: IStoredWorkspace = {\n\t\t\tfolders: []\n\t\t};\n\n\t\tfor (let i = 0; i < folders.length; i++) {\n\t\t\tconst f = folders[i];\n\t\t\tconst s: IStoredWorkspaceFolder = f instanceof URI ? { uri: f.toString() } : { path: f };\n\t\t\tif (names) {\n\t\t\t\ts.name = names[i];\n\t\t\t}\n\t\t\tws.folders.push(s);\n\t\t}\n\n\t\tfs.writeFileSync(workspaceConfigPath, JSON.stringify(ws));\n\t}\n\n\tfunction createUntitledWorkspaceSync(folders: string[], names?: string[]) {\n\t\treturn service.createUntitledWorkspaceSync(folders.map((folder, index) => ({ uri: URI.file(folder), name: names ? names[index] : undefined } as IWorkspaceFolderCreationData)));\n\t}\n\n\tlet testDir: string;\n\tlet untitledWorkspacesHomePath: string;\n\tlet environmentMainService: EnvironmentMainService;\n\tlet service: WorkspacesManagementMainService;\n\n\tconst cwd = process.cwd();\n\tconst tmpDir = os.tmpdir();\n\n\tsetup(async () => {\n\t\ttestDir = getRandomTestPath(tmpDir, 'vsctests', 'workspacesmanagementmainservice');\n\t\tuntitledWorkspacesHomePath = path.join(testDir, 'Workspaces');\n\n\t\tconst productService: IProductService = { _serviceBrand: undefined, ...product };\n\n\t\tenvironmentMainService = new class TestEnvironmentService extends EnvironmentMainService {\n\n\t\t\tconstructor() {\n\t\t\t\tsuper(parseArgs(process.argv, OPTIONS), productService);\n\t\t\t}\n\n\t\t\toverride get untitledWorkspacesHome(): URI {\n\t\t\t\treturn URI.file(untitledWorkspacesHomePath);\n\t\t\t}\n\t\t};\n\n\t\tservice = new WorkspacesManagementMainService(environmentMainService, new NullLogService(), new TestBackupMainService(), new TestDialogMainService(), productService);\n\n\t\treturn fs.promises.mkdir(untitledWorkspacesHomePath, { recursive: true });\n\t});\n\n\tteardown(() => {\n\t\tservice.dispose();\n\n\t\treturn pfs.rimraf(testDir);\n\t});\n\n\tfunction assertPathEquals(p1: string, p2: string): void {\n\t\tif (isWindows) {\n\t\t\tp1 = normalizeDriveLetter(p1);\n\t\t\tp2 = normalizeDriveLetter(p2);\n\t\t}\n\n\t\tassert.strictEqual(p1, p2);\n\t}\n\n\tfunction assertEqualURI(u1: URI, u2: URI): void {\n\t\tassert.strictEqual(u1.toString(), u2.toString());\n\t}\n\n\ttest('createWorkspace (folders)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = (JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, cwd);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, tmpDir);\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[0]).name);\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[1]).name);\n\t});\n\n\ttest('createWorkspace (folders with name)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir], ['currentworkingdirectory', 'tempdir']);\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = (JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, cwd);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, tmpDir);\n\t\tassert.strictEqual((<IRawFileWorkspaceFolder>ws.folders[0]).name, 'currentworkingdirectory');\n\t\tassert.strictEqual((<IRawFileWorkspaceFolder>ws.folders[1]).name, 'tempdir');\n\t});\n\n\ttest('createUntitledWorkspace (folders as other resource URIs)', async () => {\n\t\tconst folder1URI = URI.parse('myscheme://server/work/p/f1');\n\t\tconst folder2URI = URI.parse('myscheme://server/work/o/f3');\n\n\t\tconst workspace = await service.createUntitledWorkspace([{ uri: folder1URI }, { uri: folder2URI }], 'server');\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = (JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[0]).uri, folder1URI.toString(true));\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[1]).uri, folder2URI.toString(true));\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[0]).name);\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[1]).name);\n\t\tassert.strictEqual(ws.remoteAuthority, 'server');\n\t});\n\n\ttest('createWorkspaceSync (folders)', () => {\n\t\tconst workspace = createUntitledWorkspaceSync([cwd, tmpDir]);\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace;\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, cwd);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, tmpDir);\n\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[0]).name);\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[1]).name);\n\t});\n\n\ttest('createWorkspaceSync (folders with names)', () => {\n\t\tconst workspace = createUntitledWorkspaceSync([cwd, tmpDir], ['currentworkingdirectory', 'tempdir']);\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace;\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, cwd);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, tmpDir);\n\n\t\tassert.strictEqual((<IRawFileWorkspaceFolder>ws.folders[0]).name, 'currentworkingdirectory');\n\t\tassert.strictEqual((<IRawFileWorkspaceFolder>ws.folders[1]).name, 'tempdir');\n\t});\n\n\ttest('createUntitledWorkspaceSync (folders as other resource URIs)', () => {\n\t\tconst folder1URI = URI.parse('myscheme://server/work/p/f1');\n\t\tconst folder2URI = URI.parse('myscheme://server/work/o/f3');\n\n\t\tconst workspace = service.createUntitledWorkspaceSync([{ uri: folder1URI }, { uri: folder2URI }]);\n\t\tassert.ok(workspace);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tassert.ok(service.isUntitledWorkspace(workspace));\n\n\t\tconst ws = JSON.parse(fs.readFileSync(workspace.configPath.fsPath).toString()) as IStoredWorkspace;\n\t\tassert.strictEqual(ws.folders.length, 2);\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[0]).uri, folder1URI.toString(true));\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[1]).uri, folder2URI.toString(true));\n\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[0]).name);\n\t\tassert.ok(!(<IRawFileWorkspaceFolder>ws.folders[1]).name);\n\t});\n\n\ttest('resolveWorkspaceSync', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tassert.ok(service.resolveLocalWorkspaceSync(workspace.configPath));\n\n\t\t// make it a valid workspace path\n\t\tconst newPath = path.join(path.dirname(workspace.configPath.fsPath), `workspace.${WORKSPACE_EXTENSION}`);\n\t\tfs.renameSync(workspace.configPath.fsPath, newPath);\n\t\tworkspace.configPath = URI.file(newPath);\n\n\t\tconst resolved = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassert.strictEqual(2, resolved!.folders.length);\n\t\tassertEqualURI(resolved!.configPath, workspace.configPath);\n\t\tassert.ok(resolved!.id);\n\t\tfs.writeFileSync(workspace.configPath.fsPath, JSON.stringify({ something: 'something' })); // invalid workspace\n\n\t\tconst resolvedInvalid = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassert.ok(!resolvedInvalid);\n\t});\n\n\ttest('resolveWorkspaceSync (support relative paths)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tfs.writeFileSync(workspace.configPath.fsPath, JSON.stringify({ folders: [{ path: './ticino-playground/lib' }] }));\n\n\t\tconst resolved = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassertEqualURI(resolved!.folders[0].uri, URI.file(path.join(path.dirname(workspace.configPath.fsPath), 'ticino-playground', 'lib')));\n\t});\n\n\ttest('resolveWorkspaceSync (support relative paths #2)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tfs.writeFileSync(workspace.configPath.fsPath, JSON.stringify({ folders: [{ path: './ticino-playground/lib/../other' }] }));\n\n\t\tconst resolved = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassertEqualURI(resolved!.folders[0].uri, URI.file(path.join(path.dirname(workspace.configPath.fsPath), 'ticino-playground', 'other')));\n\t});\n\n\ttest('resolveWorkspaceSync (support relative paths #3)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tfs.writeFileSync(workspace.configPath.fsPath, JSON.stringify({ folders: [{ path: 'ticino-playground/lib' }] }));\n\n\t\tconst resolved = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassertEqualURI(resolved!.folders[0].uri, URI.file(path.join(path.dirname(workspace.configPath.fsPath), 'ticino-playground', 'lib')));\n\t});\n\n\ttest('resolveWorkspaceSync (support invalid JSON via fault tolerant parsing)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tfs.writeFileSync(workspace.configPath.fsPath, '{ \"folders\": [ { \"path\": \"./ticino-playground/lib\" } , ] }'); // trailing comma\n\n\t\tconst resolved = service.resolveLocalWorkspaceSync(workspace.configPath);\n\t\tassertEqualURI(resolved!.folders[0].uri, URI.file(path.join(path.dirname(workspace.configPath.fsPath), 'ticino-playground', 'lib')));\n\t});\n\n\ttest('rewriteWorkspaceFileForNewLocation', async () => {\n\t\tconst folder1 = cwd;  // absolute path because outside of tmpDir\n\t\tconst tmpInsideDir = path.join(tmpDir, 'inside');\n\n\t\tconst firstConfigPath = path.join(tmpDir, 'myworkspace0.code-workspace');\n\t\tcreateWorkspace(firstConfigPath, [folder1, 'inside', path.join('inside', 'somefolder')]);\n\t\tconst origContent = fs.readFileSync(firstConfigPath).toString();\n\n\t\tlet origConfigPath = URI.file(firstConfigPath);\n\t\tlet workspaceConfigPath = URI.file(path.join(tmpDir, 'inside', 'myworkspace1.code-workspace'));\n\t\tlet newContent = rewriteWorkspaceFileForNewLocation(origContent, origConfigPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tlet ws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 3);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, folder1); // absolute path because outside of tmpdir\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, '.');\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[2]).path, 'somefolder');\n\n\t\torigConfigPath = workspaceConfigPath;\n\t\tworkspaceConfigPath = URI.file(path.join(tmpDir, 'myworkspace2.code-workspace'));\n\t\tnewContent = rewriteWorkspaceFileForNewLocation(newContent, origConfigPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 3);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, folder1);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, 'inside');\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[2]).path, isWindows ? 'inside\\\\somefolder' : 'inside/somefolder');\n\n\t\torigConfigPath = workspaceConfigPath;\n\t\tworkspaceConfigPath = URI.file(path.join(tmpDir, 'other', 'myworkspace2.code-workspace'));\n\t\tnewContent = rewriteWorkspaceFileForNewLocation(newContent, origConfigPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 3);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, folder1);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, isWindows ? '..\\\\inside' : '../inside');\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[2]).path, isWindows ? '..\\\\inside\\\\somefolder' : '../inside/somefolder');\n\n\t\torigConfigPath = workspaceConfigPath;\n\t\tworkspaceConfigPath = URI.parse('foo://foo/bar/myworkspace2.code-workspace');\n\t\tnewContent = rewriteWorkspaceFileForNewLocation(newContent, origConfigPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassert.strictEqual(ws.folders.length, 3);\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[0]).uri, URI.file(folder1).toString(true));\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[1]).uri, URI.file(tmpInsideDir).toString(true));\n\t\tassert.strictEqual((<IRawUriWorkspaceFolder>ws.folders[2]).uri, URI.file(path.join(tmpInsideDir, 'somefolder')).toString(true));\n\n\t\tfs.unlinkSync(firstConfigPath);\n\t});\n\n\ttest('rewriteWorkspaceFileForNewLocation (preserves comments)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir, path.join(tmpDir, 'somefolder')]);\n\t\tconst workspaceConfigPath = URI.file(path.join(tmpDir, `myworkspace.${Date.now()}.${WORKSPACE_EXTENSION}`));\n\n\t\tlet origContent = fs.readFileSync(workspace.configPath.fsPath).toString();\n\t\torigContent = `// this is a comment\\n${origContent}`;\n\n\t\tlet newContent = rewriteWorkspaceFileForNewLocation(origContent, workspace.configPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tassert.strictEqual(0, newContent.indexOf('// this is a comment'));\n\t\tservice.deleteUntitledWorkspaceSync(workspace);\n\t});\n\n\ttest('rewriteWorkspaceFileForNewLocation (preserves forward slashes)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir, path.join(tmpDir, 'somefolder')]);\n\t\tconst workspaceConfigPath = URI.file(path.join(tmpDir, `myworkspace.${Date.now()}.${WORKSPACE_EXTENSION}`));\n\n\t\tlet origContent = fs.readFileSync(workspace.configPath.fsPath).toString();\n\t\torigContent = origContent.replace(/[\\\\]/g, '/'); // convert backslash to slash\n\n\t\tconst newContent = rewriteWorkspaceFileForNewLocation(origContent, workspace.configPath, false, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tconst ws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassert.ok(ws.folders.every(f => (<IRawFileWorkspaceFolder>f).path.indexOf('\\\\') < 0));\n\t\tservice.deleteUntitledWorkspaceSync(workspace);\n\t});\n\n\t(!isWindows ? test.skip : test)('rewriteWorkspaceFileForNewLocation (unc paths)', async () => {\n\t\tconst workspaceLocation = path.join(tmpDir, 'wsloc');\n\t\tconst folder1Location = 'x:\\\\foo';\n\t\tconst folder2Location = '\\\\\\\\server\\\\share2\\\\some\\\\path';\n\t\tconst folder3Location = path.join(workspaceLocation, 'inner', 'more');\n\n\t\tconst workspace = await createUntitledWorkspace([folder1Location, folder2Location, folder3Location]);\n\t\tconst workspaceConfigPath = URI.file(path.join(workspaceLocation, `myworkspace.${Date.now()}.${WORKSPACE_EXTENSION}`));\n\t\tlet origContent = fs.readFileSync(workspace.configPath.fsPath).toString();\n\t\tconst newContent = rewriteWorkspaceFileForNewLocation(origContent, workspace.configPath, true, workspaceConfigPath, extUriBiasedIgnorePathCase);\n\t\tconst ws = (JSON.parse(newContent) as IStoredWorkspace);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[0]).path, folder1Location);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[1]).path, folder2Location);\n\t\tassertPathEquals((<IRawFileWorkspaceFolder>ws.folders[2]).path, 'inner\\\\more');\n\n\t\tservice.deleteUntitledWorkspaceSync(workspace);\n\t});\n\n\ttest('deleteUntitledWorkspaceSync (untitled)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tassert.ok(fs.existsSync(workspace.configPath.fsPath));\n\t\tservice.deleteUntitledWorkspaceSync(workspace);\n\t\tassert.ok(!fs.existsSync(workspace.configPath.fsPath));\n\t});\n\n\ttest('deleteUntitledWorkspaceSync (saved)', async () => {\n\t\tconst workspace = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tservice.deleteUntitledWorkspaceSync(workspace);\n\t});\n\n\ttest('getUntitledWorkspaceSync', async function () {\n\t\tlet untitled = service.getUntitledWorkspacesSync();\n\t\tassert.strictEqual(untitled.length, 0);\n\n\t\tconst untitledOne = await createUntitledWorkspace([cwd, tmpDir]);\n\t\tassert.ok(fs.existsSync(untitledOne.configPath.fsPath));\n\n\t\tuntitled = service.getUntitledWorkspacesSync();\n\t\tassert.strictEqual(1, untitled.length);\n\t\tassert.strictEqual(untitledOne.id, untitled[0].workspace.id);\n\n\t\tservice.deleteUntitledWorkspaceSync(untitledOne);\n\t\tuntitled = service.getUntitledWorkspacesSync();\n\t\tassert.strictEqual(0, untitled.length);\n\t});\n\n\ttest('getSingleWorkspaceIdentifier', async function () {\n\t\tconst nonLocalUri = URI.parse('myscheme://server/work/p/f1');\n\t\tconst nonLocalUriId = getSingleFolderWorkspaceIdentifier(nonLocalUri);\n\t\tassert.ok(nonLocalUriId?.id);\n\n\t\tconst localNonExistingUri = URI.file(path.join(testDir, 'f1'));\n\t\tconst localNonExistingUriId = getSingleFolderWorkspaceIdentifier(localNonExistingUri);\n\t\tassert.ok(!localNonExistingUriId);\n\n\t\tfs.mkdirSync(path.join(testDir, 'f1'));\n\n\t\tconst localExistingUri = URI.file(path.join(testDir, 'f1'));\n\t\tconst localExistingUriId = getSingleFolderWorkspaceIdentifier(localExistingUri);\n\t\tassert.ok(localExistingUriId?.id);\n\t});\n\n\ttest('workspace identifiers are stable', function () {\n\n\t\t// workspace identifier (local)\n\t\tassert.strictEqual(getWorkspaceIdentifier(URI.file('/hello/test')).id, isWindows  /* slash vs backslash */ ? '9f3efb614e2cd7924e4b8076e6c72233' : 'e36736311be12ff6d695feefe415b3e8');\n\n\t\t// single folder identifier (local)\n\t\tconst fakeStat = {\n\t\t\tino: 1611312115129,\n\t\t\tbirthtimeMs: 1611312115129,\n\t\t\tbirthtime: new Date(1611312115129)\n\t\t};\n\t\tassert.strictEqual(getSingleFolderWorkspaceIdentifier(URI.file('/hello/test'), fakeStat as fs.Stats)?.id, isWindows /* slash vs backslash */ ? '9a8441e897e5174fa388bc7ef8f7a710' : '1d726b3d516dc2a6d343abf4797eaaef');\n\n\t\t// workspace identifier (remote)\n\t\tassert.strictEqual(getWorkspaceIdentifier(URI.parse('vscode-remote:/hello/test')).id, '786de4f224d57691f218dc7f31ee2ee3');\n\n\t\t// single folder identifier (remote)\n\t\tassert.strictEqual(getSingleFolderWorkspaceIdentifier(URI.parse('vscode-remote:/hello/test'))?.id, '786de4f224d57691f218dc7f31ee2ee3');\n\t});\n});\n"]}