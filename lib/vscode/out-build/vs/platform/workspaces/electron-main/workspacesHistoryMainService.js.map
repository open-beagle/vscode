{"version":3,"sources":["vs/platform/workspaces/electron-main/workspacesHistoryMainService.ts"],"names":[],"mappings":"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","file":"workspacesHistoryMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { app, JumpListCategory, JumpListItem } from 'electron';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { normalizeDriveLetter, splitName } from 'vs/base/common/labels';\nimport { Event as CommonEvent, Emitter } from 'vs/base/common/event';\nimport { isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { IWorkspaceIdentifier, IRecentlyOpened, isRecentWorkspace, isRecentFolder, IRecent, isRecentFile, IRecentFolder, IRecentWorkspace, IRecentFile, toStoreData, restoreRecentlyOpened, RecentlyOpenedStorageData, WORKSPACE_EXTENSION, isWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { originalFSPath, basename, extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { exists } from 'vs/base/node/pfs';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeWindow } from 'vs/platform/windows/electron-main/windows';\n\nexport const IWorkspacesHistoryMainService = createDecorator<IWorkspacesHistoryMainService>('workspacesHistoryMainService');\n\nexport interface IWorkspacesHistoryMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeRecentlyOpened: CommonEvent<void>;\n\n\taddRecentlyOpened(recents: IRecent[]): void;\n\tgetRecentlyOpened(include?: ICodeWindow): IRecentlyOpened;\n\tremoveRecentlyOpened(paths: URI[]): void;\n\tclearRecentlyOpened(): void;\n\n\tupdateWindowsJumpList(): void;\n}\n\nexport class WorkspacesHistoryMainService extends Disposable implements IWorkspacesHistoryMainService {\n\n\tprivate static readonly MAX_TOTAL_RECENT_ENTRIES = 100;\n\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_WORKSPACES = 7; \t\t// prefer higher number of workspaces...\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_ENTRIES_TOTAL = 10; \t// ...over number of files\n\n\t// Exclude some very common files from the dock/taskbar\n\tprivate static readonly COMMON_FILES_FILTER = [\n\t\t'COMMIT_EDITMSG',\n\t\t'MERGE_MSG'\n\t];\n\n\tprivate static readonly recentlyOpenedStorageKey = 'openedPathsList';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeRecentlyOpened = this._register(new Emitter<void>());\n\treadonly onDidChangeRecentlyOpened: CommonEvent<void> = this._onDidChangeRecentlyOpened.event;\n\n\tprivate readonly macOSRecentDocumentsUpdater = this._register(new ThrottledDelayer<void>(800));\n\n\tconstructor(\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Install window jump list after opening window\n\t\tthis.lifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen).then(() => this.handleWindowsJumpList());\n\n\t\t// Add to history when entering workspace\n\t\tthis._register(this.workspacesManagementMainService.onDidEnterWorkspace(event => this.addRecentlyOpened([{ workspace: event.workspace }])));\n\t}\n\n\tprivate handleWindowsJumpList(): void {\n\t\tif (!isWindows) {\n\t\t\treturn; // only on windows\n\t\t}\n\n\t\tthis.updateWindowsJumpList();\n\t\tthis._register(this.onDidChangeRecentlyOpened(() => this.updateWindowsJumpList()));\n\t}\n\n\taddRecentlyOpened(recentToAdd: IRecent[]): void {\n\t\tconst workspaces: Array<IRecentFolder | IRecentWorkspace> = [];\n\t\tconst files: IRecentFile[] = [];\n\n\t\tfor (let recent of recentToAdd) {\n\n\t\t\t// Workspace\n\t\t\tif (isRecentWorkspace(recent)) {\n\t\t\t\tif (!this.workspacesManagementMainService.isUntitledWorkspace(recent.workspace) && indexOfWorkspace(workspaces, recent.workspace) === -1) {\n\t\t\t\t\tworkspaces.push(recent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse if (isRecentFolder(recent)) {\n\t\t\t\tif (indexOfFolder(workspaces, recent.folderUri) === -1) {\n\t\t\t\t\tworkspaces.push(recent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// File\n\t\t\telse {\n\t\t\t\tconst alreadyExistsInHistory = indexOfFile(files, recent.fileUri) >= 0;\n\t\t\t\tconst shouldBeFiltered = recent.fileUri.scheme === Schemas.file && WorkspacesHistoryMainService.COMMON_FILES_FILTER.indexOf(basename(recent.fileUri)) >= 0;\n\n\t\t\t\tif (!alreadyExistsInHistory && !shouldBeFiltered) {\n\t\t\t\t\tfiles.push(recent);\n\n\t\t\t\t\t// Add to recent documents (Windows only, macOS later)\n\t\t\t\t\tif (isWindows && recent.fileUri.scheme === Schemas.file) {\n\t\t\t\t\t\tapp.addRecentDocument(recent.fileUri.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.addEntriesFromStorage(workspaces, files);\n\n\t\tif (workspaces.length > WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES) {\n\t\t\tworkspaces.length = WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES;\n\t\t}\n\n\t\tif (files.length > WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES) {\n\t\t\tfiles.length = WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES;\n\t\t}\n\n\t\tthis.saveRecentlyOpened({ workspaces, files });\n\t\tthis._onDidChangeRecentlyOpened.fire();\n\n\t\t// Schedule update to recent documents on macOS dock\n\t\tif (isMacintosh) {\n\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t}\n\t}\n\n\tremoveRecentlyOpened(recentToRemove: URI[]): void {\n\t\tconst keep = (recent: IRecent) => {\n\t\t\tconst uri = location(recent);\n\t\t\tfor (const resourceToRemove of recentToRemove) {\n\t\t\t\tif (extUriBiasedIgnorePathCase.isEqual(resourceToRemove, uri)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tconst mru = this.getRecentlyOpened();\n\t\tconst workspaces = mru.workspaces.filter(keep);\n\t\tconst files = mru.files.filter(keep);\n\n\t\tif (workspaces.length !== mru.workspaces.length || files.length !== mru.files.length) {\n\t\t\tthis.saveRecentlyOpened({ files, workspaces });\n\t\t\tthis._onDidChangeRecentlyOpened.fire();\n\n\t\t\t// Schedule update to recent documents on macOS dock\n\t\t\tif (isMacintosh) {\n\t\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateMacOSRecentDocuments(): Promise<void> {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We clear all documents first to ensure an up-to-date view on the set. Since entries\n\t\t// can get deleted on disk, this ensures that the list is always valid\n\t\tapp.clearRecentDocuments();\n\n\t\tconst mru = this.getRecentlyOpened();\n\n\t\t// Collect max-N recent workspaces that are known to exist\n\t\tconst workspaceEntries: string[] = [];\n\t\tlet entries = 0;\n\t\tfor (let i = 0; i < mru.workspaces.length && entries < WorkspacesHistoryMainService.MAX_MACOS_DOCK_RECENT_WORKSPACES; i++) {\n\t\t\tconst loc = location(mru.workspaces[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst workspacePath = originalFSPath(loc);\n\t\t\t\tif (await exists(workspacePath)) {\n\t\t\t\t\tworkspaceEntries.push(workspacePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Collect max-N recent files that are known to exist\n\t\tconst fileEntries: string[] = [];\n\t\tfor (let i = 0; i < mru.files.length && entries < WorkspacesHistoryMainService.MAX_MACOS_DOCK_RECENT_ENTRIES_TOTAL; i++) {\n\t\t\tconst loc = location(mru.files[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst filePath = originalFSPath(loc);\n\t\t\t\tif (\n\t\t\t\t\tWorkspacesHistoryMainService.COMMON_FILES_FILTER.includes(basename(loc)) || // skip some well known file entries\n\t\t\t\t\tworkspaceEntries.includes(filePath)\t\t\t\t\t\t\t\t\t\t\t// prefer a workspace entry over a file entry (e.g. for .code-workspace)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (await exists(filePath)) {\n\t\t\t\t\tfileEntries.push(filePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The apple guidelines (https://developer.apple.com/design/human-interface-guidelines/macos/menus/menu-anatomy/)\n\t\t// explain that most recent entries should appear close to the interaction by the user (e.g. close to the\n\t\t// mouse click). Most native macOS applications that add recent documents to the dock, show the most recent document\n\t\t// to the bottom (because the dock menu is not appearing from top to bottom, but from the bottom to the top). As such\n\t\t// we fill in the entries in reverse order so that the most recent shows up at the bottom of the menu.\n\t\t//\n\t\t// On top of that, the maximum number of documents can be configured by the user (defaults to 10). To ensure that\n\t\t// we are not failing to show the most recent entries, we start by adding files first (in reverse order of recency)\n\t\t// and then add folders (in reverse order of recency). Given that strategy, we can ensure that the most recent\n\t\t// N folders are always appearing, even if the limit is low (https://github.com/microsoft/vscode/issues/74788)\n\t\tfileEntries.reverse().forEach(fileEntry => app.addRecentDocument(fileEntry));\n\t\tworkspaceEntries.reverse().forEach(workspaceEntry => app.addRecentDocument(workspaceEntry));\n\t}\n\n\tclearRecentlyOpened(): void {\n\t\tthis.saveRecentlyOpened({ workspaces: [], files: [] });\n\t\tapp.clearRecentDocuments();\n\n\t\t// Event\n\t\tthis._onDidChangeRecentlyOpened.fire();\n\t}\n\n\tgetRecentlyOpened(include?: ICodeWindow): IRecentlyOpened {\n\t\tconst workspaces: Array<IRecentFolder | IRecentWorkspace> = [];\n\t\tconst files: IRecentFile[] = [];\n\n\t\t// Add current workspace to beginning if set\n\t\tconst currentWorkspace = include?.config?.workspace;\n\t\tif (isWorkspaceIdentifier(currentWorkspace) && !this.workspacesManagementMainService.isUntitledWorkspace(currentWorkspace)) {\n\t\t\tworkspaces.push({ workspace: currentWorkspace });\n\t\t} else if (isSingleFolderWorkspaceIdentifier(currentWorkspace)) {\n\t\t\tworkspaces.push({ folderUri: currentWorkspace.uri });\n\t\t}\n\n\t\t// Add currently files to open to the beginning if any\n\t\tconst currentFiles = include?.config?.filesToOpenOrCreate;\n\t\tif (currentFiles) {\n\t\t\tfor (let currentFile of currentFiles) {\n\t\t\t\tconst fileUri = currentFile.fileUri;\n\t\t\t\tif (fileUri && indexOfFile(files, fileUri) === -1) {\n\t\t\t\t\tfiles.push({ fileUri });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.addEntriesFromStorage(workspaces, files);\n\n\t\treturn { workspaces, files };\n\t}\n\n\tprivate addEntriesFromStorage(workspaces: Array<IRecentFolder | IRecentWorkspace>, files: IRecentFile[]) {\n\n\t\t// Get from storage\n\t\tlet recents = this.getRecentlyOpenedFromStorage();\n\t\tfor (let recent of recents.workspaces) {\n\t\t\tlet index = isRecentFolder(recent) ? indexOfFolder(workspaces, recent.folderUri) : indexOfWorkspace(workspaces, recent.workspace);\n\t\t\tif (index >= 0) {\n\t\t\t\tworkspaces[index].label = workspaces[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tworkspaces.push(recent);\n\t\t\t}\n\t\t}\n\n\t\tfor (let recent of recents.files) {\n\t\t\tlet index = indexOfFile(files, recent.fileUri);\n\t\t\tif (index >= 0) {\n\t\t\t\tfiles[index].label = files[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tfiles.push(recent);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRecentlyOpenedFromStorage(): IRecentlyOpened {\n\t\tconst storedRecents = this.stateService.getItem<RecentlyOpenedStorageData>(WorkspacesHistoryMainService.recentlyOpenedStorageKey);\n\n\t\treturn restoreRecentlyOpened(storedRecents, this.logService);\n\t}\n\n\tprivate saveRecentlyOpened(recent: IRecentlyOpened): void {\n\t\tconst serialized = toStoreData(recent);\n\n\t\tthis.stateService.setItem(WorkspacesHistoryMainService.recentlyOpenedStorageKey, serialized);\n\t}\n\n\tupdateWindowsJumpList(): void {\n\t\tif (!isWindows) {\n\t\t\treturn; // only on windows\n\t\t}\n\n\t\tconst jumpList: JumpListCategory[] = [];\n\n\t\t// Tasks\n\t\tjumpList.push({\n\t\t\ttype: 'tasks',\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'task',\n\t\t\t\t\ttitle: localize('newWindow', \"New Window\"),\n\t\t\t\t\tdescription: localize('newWindowDesc', \"Opens a new window\"),\n\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\targs: '-n', // force new window\n\t\t\t\t\ticonPath: process.execPath,\n\t\t\t\t\ticonIndex: 0\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t// Recent Workspaces\n\t\tif (this.getRecentlyOpened().workspaces.length > 0) {\n\n\t\t\t// The user might have meanwhile removed items from the jump list and we have to respect that\n\t\t\t// so we need to update our list of recent paths with the choice of the user to not add them again\n\t\t\t// Also: Windows will not show our custom category at all if there is any entry which was removed\n\t\t\t// by the user! See https://github.com/microsoft/vscode/issues/15052\n\t\t\tlet toRemove: URI[] = [];\n\t\t\tfor (let item of app.getJumpListSettings().removedItems) {\n\t\t\t\tconst args = item.args;\n\t\t\t\tif (args) {\n\t\t\t\t\tconst match = /^--(folder|file)-uri\\s+\"([^\"]+)\"$/.exec(args);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\ttoRemove.push(URI.parse(match[2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.removeRecentlyOpened(toRemove);\n\n\t\t\t// Add entries\n\t\t\tlet hasWorkspaces = false;\n\t\t\tconst items: JumpListItem[] = coalesce(this.getRecentlyOpened().workspaces.slice(0, 7 /* limit number of entries here */).map(recent => {\n\t\t\t\tconst workspace = isRecentWorkspace(recent) ? recent.workspace : recent.folderUri;\n\n\t\t\t\tconst { title, description } = this.getWindowsJumpListLabel(workspace, recent.label);\n\t\t\t\tlet args;\n\t\t\t\tif (URI.isUri(workspace)) {\n\t\t\t\t\targs = `--folder-uri \"${workspace.toString()}\"`;\n\t\t\t\t} else {\n\t\t\t\t\thasWorkspaces = true;\n\t\t\t\t\targs = `--file-uri \"${workspace.configPath.toString()}\"`;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'task',\n\t\t\t\t\ttitle: title.substr(0, 255), \t\t\t\t// Windows seems to be picky around the length of entries\n\t\t\t\t\tdescription: description.substr(0, 255),\t// (see https://github.com/microsoft/vscode/issues/111177)\n\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\targs,\n\t\t\t\t\ticonPath: 'explorer.exe', // simulate folder icon\n\t\t\t\t\ticonIndex: 0\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tif (items.length > 0) {\n\t\t\t\tjumpList.push({\n\t\t\t\t\ttype: 'custom',\n\t\t\t\t\tname: hasWorkspaces ? localize('recentFoldersAndWorkspaces', \"Recent Folders & Workspaces\") : localize('recentFolders', \"Recent Folders\"),\n\t\t\t\t\titems\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Recent\n\t\tjumpList.push({\n\t\t\ttype: 'recent' // this enables to show files in the \"recent\" category\n\t\t});\n\n\t\ttry {\n\t\t\tapp.setJumpList(jumpList);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('updateWindowsJumpList#setJumpList', error); // since setJumpList is relatively new API, make sure to guard for errors\n\t\t}\n\t}\n\n\tprivate getWindowsJumpListLabel(workspace: IWorkspaceIdentifier | URI, recentLabel: string | undefined): { title: string; description: string } {\n\n\t\t// Prefer recent label\n\t\tif (recentLabel) {\n\t\t\treturn { title: splitName(recentLabel).name, description: recentLabel };\n\t\t}\n\n\t\t// Single Folder\n\t\tif (URI.isUri(workspace)) {\n\t\t\treturn { title: basename(workspace), description: renderJumpListPathDescription(workspace) };\n\t\t}\n\n\t\t// Workspace: Untitled\n\t\tif (this.workspacesManagementMainService.isUntitledWorkspace(workspace)) {\n\t\t\treturn { title: localize('untitledWorkspace', \"Untitled (Workspace)\"), description: '' };\n\t\t}\n\n\t\t// Workspace: normal\n\t\tlet filename = basename(workspace.configPath);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\n\t\treturn { title: localize('workspaceName', \"{0} (Workspace)\", filename), description: renderJumpListPathDescription(workspace.configPath) };\n\t}\n}\n\nfunction renderJumpListPathDescription(uri: URI) {\n\treturn uri.scheme === 'file' ? normalizeDriveLetter(uri.fsPath) : uri.toString();\n}\n\nfunction location(recent: IRecent): URI {\n\tif (isRecentFolder(recent)) {\n\t\treturn recent.folderUri;\n\t}\n\n\tif (isRecentFile(recent)) {\n\t\treturn recent.fileUri;\n\t}\n\n\treturn recent.workspace.configPath;\n}\n\nfunction indexOfWorkspace(arr: IRecent[], candidate: IWorkspaceIdentifier): number {\n\treturn arr.findIndex(workspace => isRecentWorkspace(workspace) && workspace.workspace.id === candidate.id);\n}\n\nfunction indexOfFolder(arr: IRecent[], candidate: URI): number {\n\treturn arr.findIndex(folder => isRecentFolder(folder) && extUriBiasedIgnorePathCase.isEqual(folder.folderUri, candidate));\n}\n\nfunction indexOfFile(arr: IRecentFile[], candidate: URI): number {\n\treturn arr.findIndex(file => extUriBiasedIgnorePathCase.isEqual(file.fileUri, candidate));\n}\n"]}