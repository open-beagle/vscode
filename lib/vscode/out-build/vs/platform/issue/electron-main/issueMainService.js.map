{"version":3,"sources":["vs/platform/issue/electron-main/issueMainService.ts"],"names":[],"mappings":"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","file":"issueMainService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { arch, release, type } from 'os';\nimport product from 'vs/platform/product/common/product';\nimport { ICommonIssueService, IssueReporterWindowConfiguration, IssueReporterData, ProcessExplorerData, ProcessExplorerWindowConfiguration } from 'vs/platform/issue/common/issue';\nimport { BrowserWindow, ipcMain, screen, IpcMainEvent, Display } from 'electron';\nimport { ILaunchMainService } from 'vs/platform/launch/electron-main/launchMainService';\nimport { IDiagnosticsService, PerformanceInfo, isRemoteDiagnosticError } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { isMacintosh, IProcessEnvironment, browserCodeLoadingCacheStrategy } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWindowState } from 'vs/platform/windows/electron-main/windows';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { zoomLevelToZoomFactor } from 'vs/platform/windows/common/windows';\nimport { FileAccess } from 'vs/base/common/network';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IIPCObjectUrl, IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nexport const IIssueMainService = createDecorator<IIssueMainService>('issueMainService');\n\nexport interface IIssueMainService extends ICommonIssueService { }\n\nexport class IssueMainService implements ICommonIssueService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\n\tprivate issueReporterWindow: BrowserWindow | null = null;\n\tprivate issueReporterParentWindow: BrowserWindow | null = null;\n\n\tprivate processExplorerWindow: BrowserWindow | null = null;\n\tprivate processExplorerParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILaunchMainService private readonly launchMainService: ILaunchMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDiagnosticsService private readonly diagnosticsService: IDiagnosticsService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService\n\t) {\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tipcMain.on('vscode:issueSystemInfoRequest', async event => {\n\t\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\t\t\tconst msg = await this.diagnosticsService.getSystemInfo(info, remoteData);\n\n\t\t\tthis.safeSend(event, 'vscode:issueSystemInfoResponse', msg);\n\t\t});\n\n\t\tipcMain.on('vscode:listProcesses', async event => {\n\t\t\tconst processes = [];\n\n\t\t\ttry {\n\t\t\t\tconst mainPid = await this.launchMainService.getMainProcessId();\n\t\t\t\tprocesses.push({ name: localize('local', \"Local\"), rootProcess: await listProcesses(mainPid) });\n\n\t\t\t\tconst remoteDiagnostics = await this.launchMainService.getRemoteDiagnostics({ includeProcesses: true });\n\t\t\t\tremoteDiagnostics.forEach(data => {\n\t\t\t\t\tif (isRemoteDiagnosticError(data)) {\n\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\trootProcess: data\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (data.processes) {\n\t\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\t\trootProcess: data.processes\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`Listing processes failed: ${e}`);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:listProcessesResponse', processes);\n\t\t});\n\n\t\tipcMain.on('vscode:issueReporterClipboard', async event => {\n\t\t\tconst messageOptions = {\n\t\t\t\tmessage: localize('issueReporterWriteToClipboard', \"There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.\"),\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize('ok', \"OK\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tconst result = await this.dialogMainService.showMessageBox(messageOptions, this.issueReporterWindow);\n\t\t\t\tthis.safeSend(event, 'vscode:issueReporterClipboardResponse', result.response === 0);\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:issuePerformanceInfoRequest', async event => {\n\t\t\tconst performanceInfo = await this.getPerformanceInfo();\n\t\t\tthis.safeSend(event, 'vscode:issuePerformanceInfoResponse', performanceInfo);\n\t\t});\n\n\t\tipcMain.on('vscode:issueReporterConfirmClose', async () => {\n\t\t\tconst messageOptions = {\n\t\t\t\tmessage: localize('confirmCloseIssueReporter', \"Your input will not be saved. Are you sure you want to close this window?\"),\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize('yes', \"Yes\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tconst result = await this.dialogMainService.showMessageBox(messageOptions, this.issueReporterWindow);\n\t\t\t\tif (result.response === 0) {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.destroy();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:workbenchCommand', (_: unknown, commandInfo: { id: any; from: any; args: any; }) => {\n\t\t\tconst { id, from, args } = commandInfo;\n\n\t\t\tlet parentWindow: BrowserWindow | null;\n\t\t\tswitch (from) {\n\t\t\t\tcase 'issueReporter':\n\t\t\t\t\tparentWindow = this.issueReporterParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'processExplorer':\n\t\t\t\t\tparentWindow = this.processExplorerParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected command source: ${from}`);\n\t\t\t}\n\n\t\t\tif (parentWindow) {\n\t\t\t\tparentWindow.webContents.send('vscode:runAction', { id, from, args });\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:openExternal', (_: unknown, arg: string) => {\n\t\t\tthis.nativeHostMainService.openExternal(undefined, arg);\n\t\t});\n\n\t\tipcMain.on('vscode:closeIssueReporter', event => {\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:closeProcessExplorer', event => {\n\t\t\tif (this.processExplorerWindow) {\n\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:windowsInfoRequest', async event => {\n\t\t\tconst mainProcessInfo = await this.launchMainService.getMainProcessInfo();\n\t\t\tthis.safeSend(event, 'vscode:windowsInfoResponse', mainProcessInfo.windows);\n\t\t});\n\t}\n\n\tprivate safeSend(event: IpcMainEvent, channel: string, ...args: unknown[]): void {\n\t\tif (!event.sender.isDestroyed()) {\n\t\t\tevent.sender.send(channel, ...args);\n\t\t}\n\t}\n\n\tasync openReporter(data: IssueReporterData): Promise<void> {\n\t\tif (!this.issueReporterWindow) {\n\t\t\tthis.issueReporterParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.issueReporterParentWindow) {\n\t\t\t\tconst issueReporterDisposables = new DisposableStore();\n\n\t\t\t\tconst issueReporterWindowConfigUrl = issueReporterDisposables.add(this.protocolMainService.createIPCObjectUrl<IssueReporterWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.issueReporterParentWindow, 700, 800);\n\n\t\t\t\tthis.issueReporterWindow = this.createBrowserWindow(position, issueReporterWindowConfigUrl, data.styles.backgroundColor, localize('issueReporter', \"Issue Reporter\"), data.zoomLevel);\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tissueReporterWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.issueReporterWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tdisableExtensions: !!this.environmentMainService.disableExtensions,\n\t\t\t\t\tos: {\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tarch: arch(),\n\t\t\t\t\t\trelease: release(),\n\t\t\t\t\t},\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri('vs/code/electron-sandbox/issue/issueReporter.html', require, true).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow.on('close', () => {\n\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterParentWindow.on('closed', () => {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.issueReporterWindow?.focus();\n\t}\n\n\tasync openProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\tif (!this.processExplorerWindow) {\n\t\t\tthis.processExplorerParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.processExplorerParentWindow) {\n\t\t\t\tconst processExplorerDisposables = new DisposableStore();\n\n\t\t\t\tconst processExplorerWindowConfigUrl = processExplorerDisposables.add(this.protocolMainService.createIPCObjectUrl<ProcessExplorerWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.processExplorerParentWindow, 800, 500);\n\n\t\t\t\tthis.processExplorerWindow = this.createBrowserWindow(position, processExplorerWindowConfigUrl, data.styles.backgroundColor, localize('processExplorer', \"Process Explorer\"), data.zoomLevel);\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tprocessExplorerWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.processExplorerWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri('vs/code/electron-sandbox/processExplorer/processExplorer.html', require, true).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.processExplorerWindow.on('close', () => {\n\t\t\t\t\tthis.processExplorerWindow = null;\n\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerParentWindow.on('close', () => {\n\t\t\t\t\tif (this.processExplorerWindow) {\n\t\t\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t\t\t\tthis.processExplorerWindow = null;\n\n\t\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.processExplorerWindow?.focus();\n\t}\n\n\tprivate createBrowserWindow<T>(position: IWindowState, ipcObjectUrl: IIPCObjectUrl<T>, backgroundColor: string | undefined, title: string, zoomLevel: number): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: true,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle,\n\t\t\tbackgroundColor: backgroundColor || IssueMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-browser/preload.js', require).fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${ipcObjectUrl.resource.toString()}`, '--context-isolation' /* TODO@bpasero: Use process.contextIsolateed when 13-x-y is adopted (https://github.com/electron/electron/pull/28030) */],\n\t\t\t\tv8CacheOptions: browserCodeLoadingCacheStrategy,\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tenableRemoteModule: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tnativeWindowOpen: true,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(zoomLevel),\n\t\t\t\tsandbox: true,\n\t\t\t\tcontextIsolation: true\n\t\t\t}\n\t\t});\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tasync getSystemStatus(): Promise<string> {\n\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\n\t\treturn this.diagnosticsService.getDiagnostics(info, remoteData);\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IWindowState {\n\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst state: IWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight\n\t\t};\n\n\t\tconst displayBounds = displayToUse.bounds;\n\t\tstate.x = displayBounds.x + (displayBounds.width / 2) - (state.width! / 2);\n\t\tstate.y = displayBounds.y + (displayBounds.height / 2) - (state.height! / 2);\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width! > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height! > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate async getPerformanceInfo(): Promise<PerformanceInfo> {\n\t\ttry {\n\t\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: true, includeWorkspaceMetadata: true })]);\n\t\t\treturn await this.diagnosticsService.getPerformanceInfo(info, remoteData);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('issueService#getPerformanceInfo ', error.message);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n"]}