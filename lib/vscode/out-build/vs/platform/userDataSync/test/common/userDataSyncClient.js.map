{"version":3,"file":"userDataSyncClient.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/userDataSyncClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IUserData, IUserDataManifest, ALL_SYNC_RESOURCES, IUserDataSyncLogService, IUserDataSyncStoreService, IUserDataSyncUtilService, IUserDataSyncResourceEnablementService, IUserDataSyncService, getDefaultIgnoredSettings, IUserDataSyncBackupStoreService, SyncResource, ServerResource, IUserDataSyncStoreManagementService, registerConfiguration, IUserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { UserDataSyncService } from 'vs/platform/userDataSync/common/userDataSyncService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { NullLogService, ILogService } from 'vs/platform/log/common/log';\nimport { UserDataSyncStoreService, UserDataSyncStoreManagementService } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IStorageService, InMemoryStorageService } from 'vs/platform/storage/common/storage';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { UserDataSyncResourceEnablementService } from 'vs/platform/userDataSync/common/userDataSyncResourceEnablementService';\nimport { IGlobalExtensionEnablementService, IExtensionManagementService, IExtensionGalleryService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { GlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\nimport { IUserDataSyncAccountService, UserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { UserDataSyncBackupStoreService } from 'vs/platform/userDataSync/common/userDataSyncBackupStoreService';\nimport { IUserDataSyncMachinesService, UserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\nimport { UserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataAutoSyncService';\nimport { IgnoredExtensionsManagementService, IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { ExtensionsStorageSyncService, IExtensionsStorageSyncService } from 'vs/platform/userDataSync/common/extensionsStorageSync';\n\nexport class UserDataSyncClient extends Disposable {\n\n\treadonly instantiationService: TestInstantiationService;\n\n\tconstructor(readonly testServer: UserDataSyncTestServer = new UserDataSyncTestServer()) {\n\t\tsuper();\n\t\tthis.instantiationService = new TestInstantiationService();\n\t}\n\n\tasync setUp(empty: boolean = false): Promise<void> {\n\t\tregisterConfiguration();\n\t\tconst userRoamingDataHome = URI.file('userdata').with({ scheme: Schemas.inMemory });\n\t\tconst userDataSyncHome = joinPath(userRoamingDataHome, '.sync');\n\t\tconst environmentService = this.instantiationService.stub(IEnvironmentService, <Partial<IEnvironmentService>>{\n\t\t\tuserDataSyncHome,\n\t\t\tuserRoamingDataHome,\n\t\t\tsettingsResource: joinPath(userRoamingDataHome, 'settings.json'),\n\t\t\tkeybindingsResource: joinPath(userRoamingDataHome, 'keybindings.json'),\n\t\t\tsnippetsHome: joinPath(userRoamingDataHome, 'snippets'),\n\t\t\targvResource: joinPath(userRoamingDataHome, 'argv.json'),\n\t\t\tsync: 'on',\n\t\t});\n\n\t\tconst logService = new NullLogService();\n\t\tthis.instantiationService.stub(ILogService, logService);\n\n\t\tthis.instantiationService.stub(IProductService, {\n\t\t\t_serviceBrand: undefined, ...product, ...{\n\t\t\t\t'configurationSync.store': {\n\t\t\t\t\turl: this.testServer.url,\n\t\t\t\t\tstableUrl: this.testServer.url,\n\t\t\t\t\tinsidersUrl: this.testServer.url,\n\t\t\t\t\tcanSwitch: false,\n\t\t\t\t\tauthenticationProviders: { 'test': { scopes: [] } }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tfileService.registerProvider(Schemas.inMemory, new InMemoryFileSystemProvider());\n\t\tthis.instantiationService.stub(IFileService, fileService);\n\n\t\tthis.instantiationService.stub(IStorageService, this._register(new InMemoryStorageService()));\n\n\t\tconst configurationService = this._register(new ConfigurationService(environmentService.settingsResource, fileService));\n\t\tawait configurationService.initialize();\n\t\tthis.instantiationService.stub(IConfigurationService, configurationService);\n\n\t\tthis.instantiationService.stub(IRequestService, this.testServer);\n\n\t\tthis.instantiationService.stub(IUserDataSyncLogService, logService);\n\t\tthis.instantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tthis.instantiationService.stub(IUserDataSyncStoreManagementService, this._register(this.instantiationService.createInstance(UserDataSyncStoreManagementService)));\n\t\tthis.instantiationService.stub(IUserDataSyncStoreService, this._register(this.instantiationService.createInstance(UserDataSyncStoreService)));\n\n\t\tconst userDataSyncAccountService: IUserDataSyncAccountService = this._register(this.instantiationService.createInstance(UserDataSyncAccountService));\n\t\tawait userDataSyncAccountService.updateAccount({ authenticationProviderId: 'authenticationProviderId', token: 'token' });\n\t\tthis.instantiationService.stub(IUserDataSyncAccountService, userDataSyncAccountService);\n\n\t\tthis.instantiationService.stub(IUserDataSyncMachinesService, this._register(this.instantiationService.createInstance(UserDataSyncMachinesService)));\n\t\tthis.instantiationService.stub(IUserDataSyncBackupStoreService, this._register(this.instantiationService.createInstance(UserDataSyncBackupStoreService)));\n\t\tthis.instantiationService.stub(IUserDataSyncUtilService, new TestUserDataSyncUtilService());\n\t\tthis.instantiationService.stub(IUserDataSyncResourceEnablementService, this._register(this.instantiationService.createInstance(UserDataSyncResourceEnablementService)));\n\n\t\tthis.instantiationService.stub(IGlobalExtensionEnablementService, this._register(this.instantiationService.createInstance(GlobalExtensionEnablementService)));\n\t\tthis.instantiationService.stub(IExtensionsStorageSyncService, this._register(this.instantiationService.createInstance(ExtensionsStorageSyncService)));\n\t\tthis.instantiationService.stub(IIgnoredExtensionsManagementService, this.instantiationService.createInstance(IgnoredExtensionsManagementService));\n\t\tthis.instantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\t\tasync getInstalled() { return []; },\n\t\t\tonDidInstallExtension: new Emitter<DidInstallExtensionEvent>().event,\n\t\t\tonDidUninstallExtension: new Emitter<DidUninstallExtensionEvent>().event,\n\t\t});\n\t\tthis.instantiationService.stub(IExtensionGalleryService, <Partial<IExtensionGalleryService>>{\n\t\t\tisEnabled() { return true; },\n\t\t\tasync getCompatibleExtension() { return null; }\n\t\t});\n\n\t\tthis.instantiationService.stub(IUserDataAutoSyncEnablementService, this._register(this.instantiationService.createInstance(UserDataAutoSyncEnablementService)));\n\t\tthis.instantiationService.stub(IUserDataSyncService, this._register(this.instantiationService.createInstance(UserDataSyncService)));\n\n\t\tif (!empty) {\n\t\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({})));\n\t\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify([])));\n\t\t\tawait fileService.writeFile(joinPath(environmentService.snippetsHome, 'c.json'), VSBuffer.fromString(`{}`));\n\t\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'en' })));\n\t\t}\n\t\tawait configurationService.reloadConfiguration();\n\t}\n\n\tasync sync(): Promise<void> {\n\t\tawait (await this.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\t}\n\n\tread(resource: SyncResource): Promise<IUserData> {\n\t\treturn this.instantiationService.get(IUserDataSyncStoreService).read(resource, null);\n\t}\n\n\tmanifest(): Promise<IUserDataManifest | null> {\n\t\treturn this.instantiationService.get(IUserDataSyncStoreService).manifest();\n\t}\n\n}\n\nconst ALL_SERVER_RESOURCES: ServerResource[] = [...ALL_SYNC_RESOURCES, 'machines'];\n\nexport class UserDataSyncTestServer implements IRequestService {\n\n\t_serviceBrand: any;\n\n\treadonly url: string = 'http://host:3000';\n\tprivate session: string | null = null;\n\tprivate readonly data: Map<ServerResource, IUserData> = new Map<SyncResource, IUserData>();\n\n\tprivate _requests: { url: string, type: string, headers?: IHeaders }[] = [];\n\tget requests(): { url: string, type: string, headers?: IHeaders }[] { return this._requests; }\n\n\tprivate _requestsWithAllHeaders: { url: string, type: string, headers?: IHeaders }[] = [];\n\tget requestsWithAllHeaders(): { url: string, type: string, headers?: IHeaders }[] { return this._requestsWithAllHeaders; }\n\n\tprivate _responses: { status: number }[] = [];\n\tget responses(): { status: number }[] { return this._responses; }\n\treset(): void { this._requests = []; this._responses = []; this._requestsWithAllHeaders = []; }\n\n\tconstructor(private readonly rateLimit = Number.MAX_SAFE_INTEGER, private readonly retryAfter?: number) { }\n\n\tasync resolveProxy(url: string): Promise<string | undefined> { return url; }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tif (this._requests.length === this.rateLimit) {\n\t\t\treturn this.toResponse(429, this.retryAfter ? { 'retry-after': `${this.retryAfter}` } : undefined);\n\t\t}\n\t\tconst headers: IHeaders = {};\n\t\tif (options.headers) {\n\t\t\tif (options.headers['If-None-Match']) {\n\t\t\t\theaders['If-None-Match'] = options.headers['If-None-Match'];\n\t\t\t}\n\t\t\tif (options.headers['If-Match']) {\n\t\t\t\theaders['If-Match'] = options.headers['If-Match'];\n\t\t\t}\n\t\t}\n\t\tthis._requests.push({ url: options.url!, type: options.type!, headers });\n\t\tthis._requestsWithAllHeaders.push({ url: options.url!, type: options.type!, headers: options.headers });\n\t\tconst requestContext = await this.doRequest(options);\n\t\tthis._responses.push({ status: requestContext.res.statusCode! });\n\t\treturn requestContext;\n\t}\n\n\tprivate async doRequest(options: IRequestOptions): Promise<IRequestContext> {\n\t\tconst versionUrl = `${this.url}/v1/`;\n\t\tconst relativePath = options.url!.indexOf(versionUrl) === 0 ? options.url!.substring(versionUrl.length) : undefined;\n\t\tconst segments = relativePath ? relativePath.split('/') : [];\n\t\tif (options.type === 'GET' && segments.length === 1 && segments[0] === 'manifest') {\n\t\t\treturn this.getManifest(options.headers);\n\t\t}\n\t\tif (options.type === 'GET' && segments.length === 3 && segments[0] === 'resource' && segments[2] === 'latest') {\n\t\t\treturn this.getLatestData(segments[1], options.headers);\n\t\t}\n\t\tif (options.type === 'POST' && segments.length === 2 && segments[0] === 'resource') {\n\t\t\treturn this.writeData(segments[1], options.data, options.headers);\n\t\t}\n\t\tif (options.type === 'DELETE' && segments.length === 1 && segments[0] === 'resource') {\n\t\t\treturn this.clear(options.headers);\n\t\t}\n\t\treturn this.toResponse(501);\n\t}\n\n\tprivate async getManifest(headers?: IHeaders): Promise<IRequestContext> {\n\t\tif (this.session) {\n\t\t\tconst latest: Record<ServerResource, string> = Object.create({});\n\t\t\tconst manifest: IUserDataManifest = { session: this.session, latest };\n\t\t\tthis.data.forEach((value, key) => latest[key] = value.ref);\n\t\t\treturn this.toResponse(200, { 'Content-Type': 'application/json' }, JSON.stringify(manifest));\n\t\t}\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate async getLatestData(resource: string, headers: IHeaders = {}): Promise<IRequestContext> {\n\t\tconst resourceKey = ALL_SERVER_RESOURCES.find(key => key === resource);\n\t\tif (resourceKey) {\n\t\t\tconst data = this.data.get(resourceKey);\n\t\t\tif (!data) {\n\t\t\t\treturn this.toResponse(204, { etag: '0' });\n\t\t\t}\n\t\t\tif (headers['If-None-Match'] === data.ref) {\n\t\t\t\treturn this.toResponse(304);\n\t\t\t}\n\t\t\treturn this.toResponse(200, { etag: data.ref }, data.content || '');\n\t\t}\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate async writeData(resource: string, content: string = '', headers: IHeaders = {}): Promise<IRequestContext> {\n\t\tif (!this.session) {\n\t\t\tthis.session = generateUuid();\n\t\t}\n\t\tconst resourceKey = ALL_SERVER_RESOURCES.find(key => key === resource);\n\t\tif (resourceKey) {\n\t\t\tconst data = this.data.get(resourceKey);\n\t\t\tif (headers['If-Match'] !== undefined && headers['If-Match'] !== (data ? data.ref : '0')) {\n\t\t\t\treturn this.toResponse(412);\n\t\t\t}\n\t\t\tconst ref = `${parseInt(data?.ref || '0') + 1}`;\n\t\t\tthis.data.set(resourceKey, { ref, content });\n\t\t\treturn this.toResponse(200, { etag: ref });\n\t\t}\n\t\treturn this.toResponse(204);\n\t}\n\n\tasync clear(headers?: IHeaders): Promise<IRequestContext> {\n\t\tthis.data.clear();\n\t\tthis.session = null;\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate toResponse(statusCode: number, headers?: IHeaders, data?: string): IRequestContext {\n\t\treturn {\n\t\t\tres: {\n\t\t\t\theaders: headers || {},\n\t\t\t\tstatusCode\n\t\t\t},\n\t\t\tstream: bufferToStream(VSBuffer.fromString(data || ''))\n\t\t};\n\t}\n}\n\nexport class TestUserDataSyncUtilService implements IUserDataSyncUtilService {\n\n\t_serviceBrand: any;\n\n\tasync resolveDefaultIgnoredSettings(): Promise<string[]> {\n\t\treturn getDefaultIgnoredSettings();\n\t}\n\n\tasync resolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>> {\n\t\tconst keys: IStringDictionary<string> = {};\n\t\tfor (const keybinding of userbindings) {\n\t\t\tkeys[keybinding] = keybinding;\n\t\t}\n\t\treturn keys;\n\t}\n\n\tasync resolveFormattingOptions(file?: URI): Promise<FormattingOptions> {\n\t\treturn { eol: '\\n', insertSpaces: false, tabSize: 4 };\n\t}\n\n}\n\n"]}