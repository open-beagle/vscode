{"version":3,"file":"keybindingsMerge.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/keybindingsMerge.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { merge } from 'vs/platform/userDataSync/common/keybindingsMerge';\nimport { TestUserDataSyncUtilService } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\n\nsuite('KeybindingsMerge - No Conflicts', () => {\n\n\ttest('merge when local and remote are same with one entry', async () => {\n\t\tconst localContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst remoteContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote are same with similar when contexts', async () => {\n\t\tconst localContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst remoteContent = stringify([{ key: 'alt+c', command: 'a', when: '!editorReadonly && editorTextFocus' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote has entries in different order', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+a', command: 'a', when: 'editorTextFocus' }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+a', command: 'a', when: 'editorTextFocus' },\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote are same with multiple entries', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote are same with different base content', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst baseContent = stringify([\n\t\t\t{ key: 'ctrl+c', command: 'e' },\n\t\t\t{ key: 'shift+d', command: 'd', args: { text: '`' } }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote are same with multiple entries in different order', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local and remote are same when remove entry is in different order', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(!actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when a new entry is added to remote', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when multiple new entries are added to remote', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'cmd+d', command: 'c' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when multiple new entries are added to remote from base and local has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'cmd+d', command: 'c' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when an entry is removed from remote from base and local has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when an entry (same command) is removed from remote from base and local has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when an entry is updated in remote from base and local has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when a command with multiple entries is updated from remote from base and local has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'shift+c', command: 'c' },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: 'b' },\n\t\t\t{ key: 'cmd+c', command: 'a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'shift+c', command: 'c' },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: 'b' },\n\t\t\t{ key: 'cmd+d', command: 'a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when remote has moved forwareded with multiple changes and local stays with base', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'alt+f', command: 'f' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, localContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, remoteContent);\n\t});\n\n\ttest('merge when a new entry is added to local', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when multiple new entries are added to local', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'cmd+d', command: 'c' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when multiple new entries are added to local from base and remote is not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'cmd+d', command: 'c' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when an entry is removed from local from base and remote has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when an entry (with same command) is removed from local from base and remote has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when an entry is updated in local from base and remote has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when a command with multiple entries is updated from local from base and remote has not changed', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'shift+c', command: 'c' },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: 'b' },\n\t\t\t{ key: 'cmd+c', command: 'a' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'shift+c', command: 'c' },\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+d', command: 'b' },\n\t\t\t{ key: 'cmd+d', command: 'a' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, localContent);\n\t});\n\n\ttest('merge when local has moved forwareded with multiple changes and remote stays with base', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'alt+f', command: 'f' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+c', command: 'b', args: { text: '`' } },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t]);\n\t\tconst expected = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'alt+d', command: '-a' },\n\t\t\t{ key: 'alt+f', command: 'f' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, remoteContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, expected);\n\t});\n\n\ttest('merge when local and remote has moved forwareded with conflicts', async () => {\n\t\tconst baseContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'ctrl+c', command: '-a' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t]);\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'alt+e', command: 'e' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t\t{ key: 'cmd+d', command: 'd' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'alt+c', command: 'c', when: 'context1' },\n\t\t\t{ key: 'alt+g', command: 'g', when: 'context2' },\n\t\t]);\n\t\tconst expected = stringify([\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'd' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t\t{ key: 'alt+c', command: 'c', when: 'context1' },\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'alt+e', command: 'e' },\n\t\t\t{ key: 'alt+g', command: 'g', when: 'context2' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(!actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent, expected);\n\t});\n\n\ttest('merge when local and remote with one entry but different value', async () => {\n\t\tconst localContent = stringify([{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst remoteContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+d\",\n\t\t\"command\": \"a\",\n\t\t\"when\": \"editorTextFocus && !editorReadonly\"\n\t}\n]`);\n\t});\n\n\ttest('merge when local and remote with different keybinding', async () => {\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+a', command: '-a', when: 'editorTextFocus && !editorReadonly' }\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+a', command: '-a', when: 'editorTextFocus && !editorReadonly' }\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, null);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+d\",\n\t\t\"command\": \"a\",\n\t\t\"when\": \"editorTextFocus && !editorReadonly\"\n\t},\n\t{\n\t\t\"key\": \"alt+a\",\n\t\t\"command\": \"-a\",\n\t\t\"when\": \"editorTextFocus && !editorReadonly\"\n\t}\n]`);\n\t});\n\n\ttest('merge when the entry is removed in local but updated in remote', async () => {\n\t\tconst baseContent = stringify([{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst localContent = stringify([]);\n\t\tconst remoteContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[]`);\n\t});\n\n\ttest('merge when the entry is removed in local but updated in remote and a new entry is added in local', async () => {\n\t\tconst baseContent = stringify([{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst localContent = stringify([{ key: 'alt+b', command: 'b' }]);\n\t\tconst remoteContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+b\",\n\t\t\"command\": \"b\"\n\t}\n]`);\n\t});\n\n\ttest('merge when the entry is removed in remote but updated in local', async () => {\n\t\tconst baseContent = stringify([{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst localContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst remoteContent = stringify([]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+c\",\n\t\t\"command\": \"a\",\n\t\t\"when\": \"editorTextFocus && !editorReadonly\"\n\t}\n]`);\n\t});\n\n\ttest('merge when the entry is removed in remote but updated in local and a new entry is added in remote', async () => {\n\t\tconst baseContent = stringify([{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst localContent = stringify([{ key: 'alt+c', command: 'a', when: 'editorTextFocus && !editorReadonly' }]);\n\t\tconst remoteContent = stringify([{ key: 'alt+b', command: 'b' }]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+c\",\n\t\t\"command\": \"a\",\n\t\t\"when\": \"editorTextFocus && !editorReadonly\"\n\t},\n\t{\n\t\t\"key\": \"alt+b\",\n\t\t\"command\": \"b\"\n\t}\n]`);\n\t});\n\n\ttest('merge when local and remote has moved forwareded with conflicts', async () => {\n\t\tconst baseContent = stringify([\n\t\t\t{ key: 'alt+d', command: 'a', when: 'editorTextFocus && !editorReadonly' },\n\t\t\t{ key: 'alt+c', command: '-a' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t]);\n\t\tconst localContent = stringify([\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'cmd+e', command: 'd' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t\t{ key: 'cmd+d', command: 'c', when: 'context1' },\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'alt+e', command: 'e' },\n\t\t]);\n\t\tconst remoteContent = stringify([\n\t\t\t{ key: 'alt+a', command: 'f' },\n\t\t\t{ key: 'cmd+c', command: '-c' },\n\t\t\t{ key: 'cmd+d', command: 'd' },\n\t\t\t{ key: 'alt+d', command: '-f' },\n\t\t\t{ key: 'alt+c', command: 'c', when: 'context1' },\n\t\t\t{ key: 'alt+g', command: 'g', when: 'context2' },\n\t\t]);\n\t\tconst actual = await mergeKeybindings(localContent, remoteContent, baseContent);\n\t\tassert.ok(actual.hasChanges);\n\t\tassert.ok(actual.hasConflicts);\n\t\tassert.strictEqual(actual.mergeContent,\n\t\t\t`[\n\t{\n\t\t\"key\": \"alt+d\",\n\t\t\"command\": \"-f\"\n\t},\n\t{\n\t\t\"key\": \"cmd+d\",\n\t\t\"command\": \"d\"\n\t},\n\t{\n\t\t\"key\": \"cmd+c\",\n\t\t\"command\": \"-c\"\n\t},\n\t{\n\t\t\"key\": \"cmd+d\",\n\t\t\"command\": \"c\",\n\t\t\"when\": \"context1\"\n\t},\n\t{\n\t\t\"key\": \"alt+a\",\n\t\t\"command\": \"f\"\n\t},\n\t{\n\t\t\"key\": \"alt+e\",\n\t\t\"command\": \"e\"\n\t},\n\t{\n\t\t\"key\": \"alt+g\",\n\t\t\"command\": \"g\",\n\t\t\"when\": \"context2\"\n\t}\n]`);\n\t});\n\n});\n\nasync function mergeKeybindings(localContent: string, remoteContent: string, baseContent: string | null) {\n\tconst userDataSyncUtilService = new TestUserDataSyncUtilService();\n\tconst formattingOptions = await userDataSyncUtilService.resolveFormattingOptions();\n\treturn merge(localContent, remoteContent, baseContent, formattingOptions, userDataSyncUtilService);\n}\n\nfunction stringify(value: any): string {\n\treturn JSON.stringify(value, null, '\\t');\n}\n"]}