{"version":3,"file":"settingsSync.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/settingsSync.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IUserDataSyncStoreService, IUserDataSyncService, SyncResource, UserDataSyncError, UserDataSyncErrorCode, ISyncData, SyncStatus } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { SettingsSynchroniser, ISettingsSyncContent, parseSettingsSyncContent } from 'vs/platform/userDataSync/common/settingsSync';\nimport { UserDataSyncService } from 'vs/platform/userDataSync/common/userDataSyncService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Event } from 'vs/base/common/event';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': 'settingsSync',\n\t'type': 'object',\n\t'properties': {\n\t\t'settingsSync.machine': {\n\t\t\t'type': 'string',\n\t\t\t'scope': ConfigurationScope.MACHINE\n\t\t},\n\t\t'settingsSync.machineOverridable': {\n\t\t\t'type': 'string',\n\t\t\t'scope': ConfigurationScope.MACHINE_OVERRIDABLE\n\t\t}\n\t}\n});\n\nsuite('SettingsSync - Auto', () => {\n\n\tconst disposableStore = new DisposableStore();\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\tlet testObject: SettingsSynchroniser;\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp(true);\n\t\ttestObject = (client.instantiationService.get(IUserDataSyncService) as UserDataSyncService).getSynchroniser(SyncResource.Settings) as SettingsSynchroniser;\n\t\tdisposableStore.add(toDisposable(() => client.instantiationService.get(IUserDataSyncStoreService).clear()));\n\t});\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('when settings file does not exist', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst settingResource = client.instantiationService.get(IEnvironmentService).settingsResource;\n\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await client.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\t\tassert.ok(!await fileService.exists(settingResource));\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await client.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await client.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('when settings file is empty and remote has no changes', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst settingsResource = client.instantiationService.get(IEnvironmentService).settingsResource;\n\t\tawait fileService.writeFile(settingsResource, VSBuffer.fromString(''));\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(parseSettingsSyncContent(lastSyncUserData!.syncData!.content!)?.settings, '{}');\n\t\tassert.strictEqual(parseSettingsSyncContent(remoteUserData!.syncData!.content!)?.settings, '{}');\n\t\tassert.strictEqual((await fileService.readFile(settingsResource)).value.toString(), '');\n\t});\n\n\ttest('when settings file is empty and remote has changes', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\t\"workbench.tree.indent\": 20,\n\t\"workbench.colorCustomizations\": {\n\t\t\"editorLineNumber.activeForeground\": \"#ff0000\",\n\t\t\"[GitHub Sharp]\": {\n\t\t\t\"statusBarItem.remoteBackground\": \"#24292E\",\n\t\t\t\"editorPane.background\": \"#f3f1f11a\"\n\t\t}\n\t},\n\n\t\"gitBranch.base\": \"remote-repo/master\",\n\n\t// Experimental\n\t\"workbench.view.experimental.allowMovingToNewContainer\": true,\n}`;\n\t\tawait client2.instantiationService.get(IFileService).writeFile(client2.instantiationService.get(IEnvironmentService).settingsResource, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst settingsResource = client.instantiationService.get(IEnvironmentService).settingsResource;\n\t\tawait fileService.writeFile(settingsResource, VSBuffer.fromString(''));\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(parseSettingsSyncContent(lastSyncUserData!.syncData!.content!)?.settings, content);\n\t\tassert.strictEqual(parseSettingsSyncContent(remoteUserData!.syncData!.content!)?.settings, content);\n\t\tassert.strictEqual((await fileService.readFile(settingsResource)).value.toString(), content);\n\t});\n\n\ttest('when settings file is created after first sync', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\n\t\tconst settingsResource = client.instantiationService.get(IEnvironmentService).settingsResource;\n\t\tawait testObject.sync(await client.manifest());\n\t\tawait fileService.createFile(settingsResource, VSBuffer.fromString('{}'));\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await client.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(parseSettingsSyncContent(lastSyncUserData!.syncData!.content!)?.settings, '{}');\n\t});\n\n\ttest('sync for first time to the server', async () => {\n\t\tconst expected =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\t\"workbench.tree.indent\": 20,\n\t\"workbench.colorCustomizations\": {\n\t\t\"editorLineNumber.activeForeground\": \"#ff0000\",\n\t\t\"[GitHub Sharp]\": {\n\t\t\t\"statusBarItem.remoteBackground\": \"#24292E\",\n\t\t\t\"editorPane.background\": \"#f3f1f11a\"\n\t\t}\n\t},\n\n\t\"gitBranch.base\": \"remote-repo/master\",\n\n\t// Experimental\n\t\"workbench.view.experimental.allowMovingToNewContainer\": true,\n}`;\n\n\t\tawait updateSettings(expected, client);\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n\n\ttest('do not sync machine settings', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Machine\n\t\"settingsSync.machine\": \"someValue\",\n\t\"settingsSync.machineOverridable\": \"someValue\"\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\"\n}`);\n\t});\n\n\ttest('do not sync machine settings when spread across file', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"settingsSync.machine\": \"someValue\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Machine\n\t\"settingsSync.machineOverridable\": \"someValue\"\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\"\n}`);\n\t});\n\n\ttest('do not sync machine settings when spread across file - 2', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"settingsSync.machine\": \"someValue\",\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Machine\n\t\"settingsSync.machineOverridable\": \"someValue\",\n\t\"files.simpleDialog.enable\": true,\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\t\"files.simpleDialog.enable\": true,\n}`);\n\t});\n\n\ttest('sync when all settings are machine settings', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Machine\n\t\"settingsSync.machine\": \"someValue\",\n\t\"settingsSync.machineOverridable\": \"someValue\"\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n}`);\n\t});\n\n\ttest('sync when all settings are machine settings with trailing comma', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Machine\n\t\"settingsSync.machine\": \"someValue\",\n\t\"settingsSync.machineOverridable\": \"someValue\",\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t,\n}`);\n\t});\n\n\ttest('local change event is triggered when settings are changed', async () => {\n\t\tconst content =\n\t\t\t`{\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n}`;\n\n\t\tawait updateSettings(content, client);\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst promise = Event.toPromise(testObject.onDidChangeLocal);\n\t\tawait updateSettings(`{\n\t\"files.autoSave\": \"off\",\n\t\"files.simpleDialog.enable\": true,\n}`, client);\n\t\tawait promise;\n\t});\n\n\ttest('do not sync ignored settings', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Editor\n\t\"editor.fontFamily\": \"Fira Code\",\n\n\t// Terminal\n\t\"terminal.integrated.shell.osx\": \"some path\",\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t]\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t]\n}`);\n\t});\n\n\ttest('do not sync ignored and machine settings', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Editor\n\t\"editor.fontFamily\": \"Fira Code\",\n\n\t// Terminal\n\t\"terminal.integrated.shell.osx\": \"some path\",\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t],\n\n\t// Machine\n\t\"settingsSync.machine\": \"someValue\",\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t],\n}`);\n\t});\n\n\ttest('sync throws invalid content error', async () => {\n\t\tconst expected =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\t\"workbench.tree.indent\": 20,\n\t\"workbench.colorCustomizations\": {\n\t\t\"editorLineNumber.activeForeground\": \"#ff0000\",\n\t\t\"[GitHub Sharp]\": {\n\t\t\t\"statusBarItem.remoteBackground\": \"#24292E\",\n\t\t\t\"editorPane.background\": \"#f3f1f11a\"\n\t\t}\n\t}\n\n\t\"gitBranch.base\": \"remote-repo/master\",\n\n\t// Experimental\n\t\"workbench.view.experimental.allowMovingToNewContainer\": true,\n}`;\n\n\t\tawait updateSettings(expected, client);\n\n\t\ttry {\n\t\t\tawait testObject.sync(await client.manifest());\n\t\t\tassert.fail('should fail with invalid content error');\n\t\t} catch (e) {\n\t\t\tassert.ok(e instanceof UserDataSyncError);\n\t\t\tassert.deepStrictEqual((<UserDataSyncError>e).code, UserDataSyncErrorCode.LocalInvalidContent);\n\t\t}\n\t});\n\n\ttest('sync when there are conflicts', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tawait updateSettings(JSON.stringify({\n\t\t\t'a': 1,\n\t\t\t'b': 2,\n\t\t\t'settingsSync.ignoredSettings': ['a']\n\t\t}), client2);\n\t\tawait client2.sync();\n\n\t\tawait updateSettings(JSON.stringify({\n\t\t\t'a': 2,\n\t\t\t'b': 1,\n\t\t\t'settingsSync.ignoredSettings': ['a']\n\t\t}), client);\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassert.strictEqual(testObject.conflicts[0].localResource.toString(), testObject.localResource.toString());\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst mergeContent = (await fileService.readFile(testObject.conflicts[0].previewResource)).value.toString();\n\t\tassert.deepStrictEqual(JSON.parse(mergeContent), {\n\t\t\t'b': 1,\n\t\t\t'settingsSync.ignoredSettings': ['a']\n\t\t});\n\t});\n\n});\n\nsuite('SettingsSync - Manual', () => {\n\n\tconst disposableStore = new DisposableStore();\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\tlet testObject: SettingsSynchroniser;\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp(true);\n\t\ttestObject = (client.instantiationService.get(IUserDataSyncService) as UserDataSyncService).getSynchroniser(SyncResource.Settings) as SettingsSynchroniser;\n\t\tdisposableStore.add(toDisposable(() => client.instantiationService.get(IUserDataSyncStoreService).clear()));\n\t});\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('do not sync ignored settings', async () => {\n\t\tconst settingsContent =\n\t\t\t`{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Editor\n\t\"editor.fontFamily\": \"Fira Code\",\n\n\t// Terminal\n\t\"terminal.integrated.shell.osx\": \"some path\",\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t]\n}`;\n\t\tawait updateSettings(settingsContent, client);\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Syncing);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tconst { content } = await client.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseSettings(content!);\n\t\tassert.deepStrictEqual(actual, `{\n\t// Always\n\t\"files.autoSave\": \"afterDelay\",\n\t\"files.simpleDialog.enable\": true,\n\n\t// Workbench\n\t\"workbench.colorTheme\": \"GitHub Sharp\",\n\n\t// Ignored\n\t\"settingsSync.ignoredSettings\": [\n\t\t\"editor.fontFamily\",\n\t\t\"terminal.integrated.shell.osx\"\n\t]\n}`);\n\t});\n\n});\n\nfunction parseSettings(content: string): string {\n\tconst syncData: ISyncData = JSON.parse(content);\n\tconst settingsSyncContent: ISettingsSyncContent = JSON.parse(syncData.content);\n\treturn settingsSyncContent.settings;\n}\n\nasync function updateSettings(content: string, client: UserDataSyncClient): Promise<void> {\n\tawait client.instantiationService.get(IFileService).writeFile(client.instantiationService.get(IEnvironmentService).settingsResource, VSBuffer.fromString(content));\n\tawait client.instantiationService.get(IConfigurationService).reloadConfiguration();\n}\n"]}