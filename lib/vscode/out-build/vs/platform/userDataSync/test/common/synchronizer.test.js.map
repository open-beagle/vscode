{"version":3,"file":"synchronizer.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/synchronizer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IUserDataSyncStoreService, SyncResource, SyncStatus, IUserDataSyncResourceEnablementService, IRemoteUserData, Change, USER_DATA_SYNC_SCHEME, IUserDataManifest, MergeState, IResourcePreview as IBaseResourcePreview } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { Barrier } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isEqual, joinPath } from 'vs/base/common/resources';\n\ninterface ITestResourcePreview extends IResourcePreview {\n\tref: string;\n}\n\nclass TestSynchroniser extends AbstractSynchroniser {\n\n\tsyncBarrier: Barrier = new Barrier();\n\tsyncResult: { hasConflicts: boolean, hasError: boolean } = { hasConflicts: false, hasError: false };\n\tonDoSyncCall: Emitter<void> = this._register(new Emitter<void>());\n\tfailWhenGettingLatestRemoteUserData: boolean = false;\n\n\toverride readonly resource: SyncResource = SyncResource.Settings;\n\tprotected readonly version: number = 1;\n\n\tprivate cancelled: boolean = false;\n\treadonly localResource = joinPath(this.environmentService.userRoamingDataHome, 'testResource.json');\n\n\tprotected override getLatestRemoteUserData(manifest: IUserDataManifest | null, lastSyncUserData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tif (this.failWhenGettingLatestRemoteUserData) {\n\t\t\tthrow new Error();\n\t\t}\n\t\treturn super.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t}\n\n\tprotected override async doSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean): Promise<SyncStatus> {\n\t\tthis.cancelled = false;\n\t\tthis.onDoSyncCall.fire();\n\t\tawait this.syncBarrier.wait();\n\n\t\tif (this.cancelled) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\treturn super.doSync(remoteUserData, lastSyncUserData, apply);\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, token: CancellationToken): Promise<ITestResourcePreview[]> {\n\t\tif (this.syncResult.hasError) {\n\t\t\tthrow new Error('failed');\n\t\t}\n\n\t\tlet fileContent = null;\n\t\ttry {\n\t\t\tfileContent = await this.fileService.readFile(this.localResource);\n\t\t} catch (error) { }\n\n\t\treturn [{\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tremoteResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' })),\n\t\t\tremoteContent: remoteUserData.syncData ? remoteUserData.syncData.content : null,\n\t\t\tpreviewResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'preview' })),\n\t\t\tref: remoteUserData.ref,\n\t\t\tlocalChange: Change.Modified,\n\t\t\tremoteChange: Change.Modified,\n\t\t\tacceptedResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })),\n\t\t}];\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ITestResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn {\n\t\t\tcontent: resourcePreview.ref,\n\t\t\tlocalChange: Change.Modified,\n\t\t\tremoteChange: Change.Modified,\n\t\t\thasConflicts: this.syncResult.hasConflicts,\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ITestResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\tif (isEqual(resource, resourcePreview.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.localContent,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: resourcePreview.localContent === null ? Change.Deleted : Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\tif (isEqual(resource, resourcePreview.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: resourcePreview.remoteContent === null ? Change.Deleted : Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\tif (isEqual(resource, resourcePreview.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.ref,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: content === null ? resourcePreview.localContent !== null ? Change.Deleted : Change.None : Change.Modified,\n\t\t\t\t\tremoteChange: content === null ? resourcePreview.remoteContent !== null ? Change.Deleted : Change.None : Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tif (resourcePreviews[0][1].localChange === Change.Deleted) {\n\t\t\tawait this.fileService.del(this.localResource);\n\t\t}\n\n\t\tif (resourcePreviews[0][1].localChange === Change.Added || resourcePreviews[0][1].localChange === Change.Modified) {\n\t\t\tawait this.fileService.writeFile(this.localResource, VSBuffer.fromString(resourcePreviews[0][1].content!));\n\t\t}\n\n\t\tif (resourcePreviews[0][1].remoteChange === Change.Deleted) {\n\t\t\tawait this.applyRef(null, remoteUserData.ref);\n\t\t}\n\n\t\tif (resourcePreviews[0][1].remoteChange === Change.Added || resourcePreviews[0][1].remoteChange === Change.Modified) {\n\t\t\tawait this.applyRef(resourcePreviews[0][1].content, remoteUserData.ref);\n\t\t}\n\t}\n\n\tasync applyRef(content: string | null, ref: string): Promise<void> {\n\t\tconst remoteUserData = await this.updateRemoteUserData(content === null ? '' : content, ref);\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\toverride async stop(): Promise<void> {\n\t\tthis.cancelled = true;\n\t\tthis.syncBarrier.open();\n\t\tsuper.stop();\n\t}\n\n\toverride async triggerLocalChange(): Promise<void> {\n\t\tsuper.triggerLocalChange();\n\t}\n\n\tonDidTriggerLocalChangeCall: Emitter<void> = this._register(new Emitter<void>());\n\tprotected override async doTriggerLocalChange(): Promise<void> {\n\t\tawait super.doTriggerLocalChange();\n\t\tthis.onDidTriggerLocalChangeCall.fire();\n\t}\n\n}\n\nsuite('TestSynchronizer - Auto Sync', () => {\n\n\tconst disposableStore = new DisposableStore();\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\tlet userDataSyncStoreService: IUserDataSyncStoreService;\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp();\n\t\tuserDataSyncStoreService = client.instantiationService.get(IUserDataSyncStoreService);\n\t\tdisposableStore.add(toDisposable(() => userDataSyncStoreService.clear()));\n\t\tclient.instantiationService.get(IFileService).registerProvider(USER_DATA_SYNC_SCHEME, new InMemoryFileSystemProvider());\n\t});\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('status is syncing', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\n\t\tconst promise = Event.toPromise(testObject.onDoSyncCall.event);\n\n\t\ttestObject.sync(await client.manifest());\n\t\tawait promise;\n\n\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing]);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\n\t\ttestObject.stop();\n\t});\n\n\ttest('status is set correctly when sync is finished', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing, SyncStatus.Idle]);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t});\n\n\ttest('status is set correctly when sync has errors', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasError: true, hasConflicts: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\n\t\ttry {\n\t\t\tawait testObject.sync(await client.manifest());\n\t\t\tassert.fail('Should fail');\n\t\t} catch (e) {\n\t\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing, SyncStatus.Idle]);\n\t\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\t}\n\t});\n\n\ttest('status is set to hasConflicts when asked to sync if there are conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertConflicts(testObject.conflicts, [testObject.localResource]);\n\t});\n\n\ttest('sync should not run if syncing already', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\tconst promise = Event.toPromise(testObject.onDoSyncCall.event);\n\n\t\ttestObject.sync(await client.manifest());\n\t\tawait promise;\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(actual, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\n\t\tawait testObject.stop();\n\t});\n\n\ttest('sync should not run if disabled', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\tclient.instantiationService.get(IUserDataSyncResourceEnablementService).setResourceEnablement(testObject.resource, false);\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(actual, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t});\n\n\ttest('sync should not run if there are conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(actual, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t});\n\n\ttest('accept preview during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].previewResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, (await fileService.readFile(testObject.localResource)).value.toString());\n\t});\n\n\ttest('accept remote during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst currentRemoteContent = (await testObject.getRemoteUserData(null)).syncData?.content;\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].remoteResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, currentRemoteContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), currentRemoteContent);\n\t});\n\n\ttest('accept local during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].localResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, newLocalContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), newLocalContent);\n\t});\n\n\ttest('accept new content during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tconst mergeContent = 'newContent';\n\t\tawait testObject.accept(testObject.conflicts[0].previewResource, mergeContent);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, mergeContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), mergeContent);\n\t});\n\n\ttest('accept delete during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].previewResource, null);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, '');\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t});\n\n\ttest('accept deleted local during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tawait fileService.del(testObject.localResource);\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].localResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, '');\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t});\n\n\ttest('accept deleted remote during conflicts', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString('some content'));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\n\t\tawait testObject.sync(await client.manifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts[0].remoteResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData, null);\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t});\n\n\ttest('request latest data on precondition failure', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\t// Sync once\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\t\ttestObject.syncBarrier = new Barrier();\n\n\t\t// update remote data before syncing so that 412 is thrown by server\n\t\tconst disposable = testObject.onDoSyncCall.event(async () => {\n\t\t\tdisposable.dispose();\n\t\t\tawait testObject.applyRef(ref, ref);\n\t\t\tserver.reset();\n\t\t\ttestObject.syncBarrier.open();\n\t\t});\n\n\t\t// Start sycing\n\t\tconst manifest = await client.manifest();\n\t\tconst ref = manifest!.latest![testObject.resource];\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': ref } },\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': `${parseInt(ref) + 1}` } },\n\t\t]);\n\t});\n\n\ttest('no requests are made to server when local change is triggered', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tserver.reset();\n\t\tconst promise = Event.toPromise(testObject.onDidTriggerLocalChangeCall.event);\n\t\tawait testObject.triggerLocalChange();\n\n\t\tawait promise;\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('status is reset when getting latest remote data fails', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.failWhenGettingLatestRemoteUserData = true;\n\n\t\ttry {\n\t\t\tawait testObject.sync(await client.manifest());\n\t\t\tassert.fail('Should throw an error');\n\t\t} catch (error) {\n\t\t}\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t});\n});\n\nsuite('TestSynchronizer - Manual Sync', () => {\n\n\tconst disposableStore = new DisposableStore();\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\tlet userDataSyncStoreService: IUserDataSyncStoreService;\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp();\n\t\tuserDataSyncStoreService = client.instantiationService.get(IUserDataSyncStoreService);\n\t\tdisposableStore.add(toDisposable(() => userDataSyncStoreService.clear()));\n\t\tclient.instantiationService.get(IFileService).registerProvider(USER_DATA_SYNC_SCHEME, new InMemoryFileSystemProvider());\n\t});\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('preview', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.manifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preview -> merge', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preview -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preview -> merge -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preview -> merge -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst manifest = await client.manifest();\n\t\tlet preview = await testObject.preview(manifest);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preview -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst manifest = await client.manifest();\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preview -> merge -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preview -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preview -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst manifest = await client.manifest();\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preivew -> merge -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> merge -> discard -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> accept -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> accept -> discard -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> accept -> discard -> merge', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> merge -> accept -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('preivew -> merge -> discard -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preivew -> accept -> discard -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('preivew -> accept -> discard -> merge -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst manifest = await client.manifest();\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('conflicts: preview', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.manifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preview -> merge', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t});\n\n\ttest('conflicts: preview -> merge -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.manifest());\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tawait testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preview -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tconst content = await testObject.resolveContent(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource, content);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preview -> merge -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tconst manifest = await client.manifest();\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest);\n\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('conflicts: preview -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tconst content = await testObject.resolveContent(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource, content);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preview -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tconst manifest = await client.manifest();\n\t\tconst expectedContent = manifest!.latest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest);\n\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('conflicts: preivew -> merge -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preivew -> merge -> discard -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preivew -> accept -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preivew -> accept -> discard -> accept', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preivew -> accept -> discard -> merge', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t});\n\n\ttest('conflicts: preivew -> merge -> discard -> merge', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t});\n\n\ttest('conflicts: preivew -> merge -> accept -> discard', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts, []);\n\t});\n\n\ttest('conflicts: preivew -> merge -> discard -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('conflicts: preivew -> accept -> discard -> accept -> apply', async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, SyncResource.Settings));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.manifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.manifest());\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t});\n\n});\n\nfunction assertConflicts(actual: IBaseResourcePreview[], expected: URI[]) {\n\tassert.deepStrictEqual(actual.map(({ localResource }) => localResource.toString()), expected.map(uri => uri.toString()));\n}\n\nfunction assertPreviews(actual: IBaseResourcePreview[], expected: URI[]) {\n\tassert.deepStrictEqual(actual.map(({ localResource }) => localResource.toString()), expected.map(uri => uri.toString()));\n}\n"]}