{"version":3,"file":"userDataSyncService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/userDataSyncService.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAWhG,KAAK,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAEjC,MAAM,eAAe,GAAG,IAAI,2BAAe,EAAE,CAAC;QAE9C,QAAQ,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC;QAExC,IAAI,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YAC5C,mBAAmB;YACnB,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAEzE,sBAAsB;YACtB,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,cAAc;gBACd,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,eAAe;gBACf,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,aAAa;gBACb,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,gCAAgC,EAAE,OAAO,EAAE,EAAE,EAAE;aAChF,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACzD,mBAAmB;YACnB,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAEzE,sBAAsB;YACtB,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,cAAc;gBACd,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,eAAe;gBACf,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,aAAa;gBACb,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,gCAAgC,EAAE,OAAO,EAAE,EAAE,EAAE;aAChF,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;YAC/E,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uCAAuC;YACvC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,wBAAwB;YACxB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAE7E,oCAAoC;YACpC,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,gCAAgC,EAAE,OAAO,EAAE,EAAE,EAAE;aAChF,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;YAC5E,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uCAAuC;YACvC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,qCAAqC;YACrC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,WAAW,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YACtE,MAAM,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YACpF,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClJ,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtH,MAAM,WAAW,CAAC,SAAS,CAAC,CAAA,GAAA,oBAAQ,CAAA,CAAC,kBAAkB,CAAC,YAAY,EAAE,WAAW,CAAC,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/G,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAE7E,oCAAoC;YACpC,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,gCAAgC,EAAE,OAAO,EAAE,EAAE,EAAE;aAChF,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACtD,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,iCAAiC;YACjC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YACzE,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,6BAA6B;YAC7B,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;aAC9D,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,iCAAiC;YACjC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YACzE,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAChD,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,2BAA2B;YAC3B,MAAM,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAClE,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAChF,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClJ,MAAM,WAAW,CAAC,SAAS,CAAC,CAAA,GAAA,oBAAQ,CAAA,CAAC,kBAAkB,CAAC,YAAY,EAAE,WAAW,CAAC,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/G,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtH,uBAAuB;YACvB,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,WAAW;gBACX,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,cAAc;gBACd,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,WAAW;gBACX,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,eAAe;gBACf,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;aAC5F,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,yBAAyB;YACzB,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,wBAAwB;YACxB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAC7E,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,sCAAsC;YACtC,MAAM,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAClE,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAChF,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClJ,MAAM,WAAW,CAAC,SAAS,CAAC,CAAA,GAAA,oBAAQ,CAAA,CAAC,kBAAkB,CAAC,YAAY,EAAE,WAAW,CAAC,EAAE,iBAAQ,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC/H,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtH,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,wBAAwB;YACxB,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE;gBACpG,cAAc;gBACd,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE;gBACvG,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE;gBACpG,eAAe;gBACf,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE;aACvG,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;YAC9B,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uBAAuB;YACvB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAC7E,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,wBAAwB;YACxB,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YAEzB,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;aACjE,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YACvC,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uBAAuB;YACvB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAC7E,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,wBAAwB;YACxB,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YAEzB,aAAa;YACb,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,cAAc;gBACd,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,8BAA8B,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBACzF,eAAe;gBACf,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACjF,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE;gBAC5F,aAAa;gBACb,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,gCAAgC,EAAE,OAAO,EAAE,EAAE,EAAE;aAChF,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,mBAAmB;YACnB,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAEzE,uBAAuB;YACvB,MAAM,cAAc,GAAiB,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACvF,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,MAAM,CAAC,eAAe,CAAC,cAAc,EAAE,4NAAyL,CAAC,CAAC;QACnO,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uCAAuC;YACvC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAChE,IAAI,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAC9E,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,wBAAwB;YACxB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,WAAW,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAChE,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAC9E,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAE7E,uBAAuB;YACvB,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,oCAA0B,CAAC;YACnE,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,EAAE,2BAAuB,CAAC,CAAC;QAC7G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uCAAuC;YACvC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAChE,IAAI,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAC9E,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,sDAAsD;YACtD,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,eAAe,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YACxE,IAAI,sBAAsB,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YACtF,MAAM,eAAe,CAAC,SAAS,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACzI,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAC7E,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,yDAAyD;YACzD,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClJ,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,4BAA4B;YAC5B,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,cAAc,GAAiB,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACvF,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,MAAM,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;YAC3C,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,oCAA0B,CAAC;YAEnE,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,WAAW;gBACX,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC9D,cAAc;gBACd,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,iCAAiC,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE;aACvG,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAE5C,uCAAuC;YACvC,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAChE,IAAI,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAC9E,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,CAAC,MAAM,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAE3F,wBAAwB;YACxB,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,WAAW,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAY,CAAC,CAAC;YAChE,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,iCAAmB,CAAC,CAAC;YAC9E,MAAM,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,iBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,UAAU,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAG7E,MAAM,QAAQ,GAAG,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;YACrD,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACzD,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEtB,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,oBAAkB,CAAC;YAC3D,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YACrD,mBAAmB;YACnB,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAEzE,MAAM,CAAC,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAEhD,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,sBAAsB,EAAE;gBACpD,MAAM,oBAAoB,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClI,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,iCAAiC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;aAChF;QAEF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YACnD,mBAAmB;YACnB,MAAM,MAAM,GAAG,IAAI,2CAAsB,EAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,mCAAoB,CAAC,CAAC;YAEzE,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC;YACnD,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC;YAErB,IAAI;gBACH,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;aAClD;YAAC,OAAO,KAAK,EAAE;gBACf,cAAc;aACd;QACF,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IUserDataSyncService, SyncStatus, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { joinPath } from 'vs/base/common/resources';\n\nsuite('UserDataSyncService', () => {\n\n\tconst disposableStore = new DisposableStore();\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('test first time sync ever', async () => {\n\t\t// Setup the client\n\t\tconst target = new UserDataSyncTestServer();\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\n\t\t// Sync for first time\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Settings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/settings`, headers: { 'If-Match': '0' } },\n\t\t\t// Keybindings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/keybindings`, headers: { 'If-Match': '0' } },\n\t\t\t// Snippets\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/snippets`, headers: { 'If-Match': '0' } },\n\t\t\t// Global state\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/globalState`, headers: { 'If-Match': '0' } },\n\t\t\t// Extensions\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/extensions/latest`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test first time sync ever with no data', async () => {\n\t\t// Setup the client\n\t\tconst target = new UserDataSyncTestServer();\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp(true);\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\n\t\t// Sync for first time\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Settings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: {} },\n\t\t\t// Keybindings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: {} },\n\t\t\t// Snippets\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: {} },\n\t\t\t// Global state\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: {} },\n\t\t\t// Extensions\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/extensions/latest`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test first time sync from the client with no changes - merge', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Setup the test client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\n\t\t// Sync (merge) from the test client\n\t\ttarget.reset();\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/extensions/latest`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test first time sync from the client with changes - merge', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Setup the test client with changes\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tconst fileService = testClient.instantiationService.get(IFileService);\n\t\tconst environmentService = testClient.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify([{ 'command': 'abcd', 'key': 'cmd+c' }])));\n\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'de' })));\n\t\tawait fileService.writeFile(joinPath(environmentService.snippetsHome, 'html.json'), VSBuffer.fromString(`{}`));\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\n\t\t// Sync (merge) from the test client\n\t\ttarget.reset();\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/settings`, headers: { 'If-Match': '1' } },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/keybindings`, headers: { 'If-Match': '1' } },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/snippets`, headers: { 'If-Match': '1' } },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: {} },\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/extensions/latest`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test sync when there are no changes', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\t// sync from the client again\n\t\ttarget.reset();\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t]);\n\t});\n\n\ttest('test sync when there are local changes', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\t\ttarget.reset();\n\n\t\t// Do changes in the client\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify([{ 'command': 'abcd', 'key': 'cmd+c' }])));\n\t\tawait fileService.writeFile(joinPath(environmentService.snippetsHome, 'html.json'), VSBuffer.fromString(`{}`));\n\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'de' })));\n\n\t\t// Sync from the client\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Settings\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/settings`, headers: { 'If-Match': '1' } },\n\t\t\t// Keybindings\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/keybindings`, headers: { 'If-Match': '1' } },\n\t\t\t// Snippets\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/snippets`, headers: { 'If-Match': '1' } },\n\t\t\t// Global state\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/globalState`, headers: { 'If-Match': '1' } },\n\t\t]);\n\t});\n\n\ttest('test sync when there are remote changes', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Sync from first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Sync from test client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\t// Do changes in first client and sync\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify([{ 'command': 'abcd', 'key': 'cmd+c' }])));\n\t\tawait fileService.writeFile(joinPath(environmentService.snippetsHome, 'html.json'), VSBuffer.fromString(`{ \"a\": \"changed\" }`));\n\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'de' })));\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Sync from test client\n\t\ttarget.reset();\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Settings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: { 'If-None-Match': '1' } },\n\t\t\t// Keybindings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: { 'If-None-Match': '1' } },\n\t\t\t// Snippets\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: { 'If-None-Match': '1' } },\n\t\t\t// Global state\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: { 'If-None-Match': '1' } },\n\t\t]);\n\n\t});\n\n\ttest('test delete', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Sync from the client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\t// Reset from the client\n\t\ttarget.reset();\n\t\tawait testObject.reset();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'DELETE', url: `${target.url}/v1/resource`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test delete and sync', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Sync from the client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\t// Reset from the client\n\t\tawait testObject.reset();\n\n\t\t// Sync again\n\t\ttarget.reset();\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Settings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/settings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/settings`, headers: { 'If-Match': '0' } },\n\t\t\t// Keybindings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/keybindings`, headers: { 'If-Match': '0' } },\n\t\t\t// Snippets\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/snippets/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/snippets`, headers: { 'If-Match': '0' } },\n\t\t\t// Global state\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/globalState/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${target.url}/v1/resource/globalState`, headers: { 'If-Match': '0' } },\n\t\t\t// Extensions\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/extensions/latest`, headers: {} },\n\t\t]);\n\n\t});\n\n\ttest('test sync status', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup the client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\n\t\t// sync from the client\n\t\tconst actualStatuses: SyncStatus[] = [];\n\t\tconst disposable = testObject.onDidChangeStatus(status => actualStatuses.push(status));\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tdisposable.dispose();\n\t\tassert.deepStrictEqual(actualStatuses, [SyncStatus.Syncing, SyncStatus.Idle, SyncStatus.Syncing, SyncStatus.Idle, SyncStatus.Syncing, SyncStatus.Idle, SyncStatus.Syncing, SyncStatus.Idle, SyncStatus.Syncing, SyncStatus.Idle]);\n\t});\n\n\ttest('test sync conflicts status', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tlet fileService = client.instantiationService.get(IFileService);\n\t\tlet environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Setup the test client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tfileService = testClient.instantiationService.get(IFileService);\n\t\tenvironmentService = testClient.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 16 })));\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\n\t\t// sync from the client\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassert.deepStrictEqual(testObject.conflicts.map(([syncResource]) => syncResource), [SyncResource.Settings]);\n\t});\n\n\ttest('test sync will sync other non conflicted areas', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tlet fileService = client.instantiationService.get(IFileService);\n\t\tlet environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Setup the test client and get conflicts in settings\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tlet testFileService = testClient.instantiationService.get(IFileService);\n\t\tlet testEnvironmentService = testClient.instantiationService.get(IEnvironmentService);\n\t\tawait testFileService.writeFile(testEnvironmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 16 })));\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\t// sync from the first client with changes in keybindings\n\t\tawait fileService.writeFile(environmentService.keybindingsResource, VSBuffer.fromString(JSON.stringify([{ 'command': 'abcd', 'key': 'cmd+c' }])));\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// sync from the test client\n\t\ttarget.reset();\n\t\tconst actualStatuses: SyncStatus[] = [];\n\t\tconst disposable = testObject.onDidChangeStatus(status => actualStatuses.push(status));\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tdisposable.dispose();\n\t\tassert.deepStrictEqual(actualStatuses, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tassert.deepStrictEqual(target.requests, [\n\t\t\t// Manifest\n\t\t\t{ type: 'GET', url: `${target.url}/v1/manifest`, headers: {} },\n\t\t\t// Keybindings\n\t\t\t{ type: 'GET', url: `${target.url}/v1/resource/keybindings/latest`, headers: { 'If-None-Match': '1' } },\n\t\t]);\n\t});\n\n\ttest('test stop sync reset status', async () => {\n\t\tconst target = new UserDataSyncTestServer();\n\n\t\t// Setup and sync from the first client\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tlet fileService = client.instantiationService.get(IFileService);\n\t\tlet environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 14 })));\n\t\tawait (await client.instantiationService.get(IUserDataSyncService).createSyncTask()).run();\n\n\t\t// Setup the test client\n\t\tconst testClient = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait testClient.setUp();\n\t\tfileService = testClient.instantiationService.get(IFileService);\n\t\tenvironmentService = testClient.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.settingsResource, VSBuffer.fromString(JSON.stringify({ 'editor.fontSize': 16 })));\n\t\tconst testObject = testClient.instantiationService.get(IUserDataSyncService);\n\n\n\t\tconst syncTask = (await testObject.createSyncTask());\n\t\tsyncTask.run().then(null, () => null /* ignore error */);\n\t\tawait syncTask.stop();\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\t});\n\n\ttest('test sync send execution id header', async () => {\n\t\t// Setup the client\n\t\tconst target = new UserDataSyncTestServer();\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\n\t\tawait (await testObject.createSyncTask()).run();\n\n\t\tfor (const request of target.requestsWithAllHeaders) {\n\t\t\tconst hasExecutionIdHeader = request.headers && request.headers['X-Execution-Id'] && request.headers['X-Execution-Id'].length > 0;\n\t\t\tassert.ok(hasExecutionIdHeader, `Should have execution header: ${request.url}`);\n\t\t}\n\n\t});\n\n\ttest('test can run sync taks only once', async () => {\n\t\t// Setup the client\n\t\tconst target = new UserDataSyncTestServer();\n\t\tconst client = disposableStore.add(new UserDataSyncClient(target));\n\t\tawait client.setUp();\n\t\tconst testObject = client.instantiationService.get(IUserDataSyncService);\n\n\t\tconst syncTask = await testObject.createSyncTask();\n\t\tawait syncTask.run();\n\n\t\ttry {\n\t\t\tawait syncTask.run();\n\t\t\tassert.fail('Should fail running the task again');\n\t\t} catch (error) {\n\t\t\t/* expected */\n\t\t}\n\t});\n\n});\n"]}