{"version":3,"file":"globalStateSync.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/test/common/globalStateSync.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IUserDataSyncStoreService, IUserDataSyncService, SyncResource, SyncStatus, IGlobalState, ISyncData } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { UserDataSyncService } from 'vs/platform/userDataSync/common/userDataSyncService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { GlobalStateSynchroniser } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n\nsuite('GlobalStateSync', () => {\n\n\tconst disposableStore = new DisposableStore();\n\tconst server = new UserDataSyncTestServer();\n\tlet testClient: UserDataSyncClient;\n\tlet client2: UserDataSyncClient;\n\n\tlet testObject: GlobalStateSynchroniser;\n\n\tsetup(async () => {\n\t\ttestClient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait testClient.setUp(true);\n\t\ttestObject = (testClient.instantiationService.get(IUserDataSyncService) as UserDataSyncService).getSynchroniser(SyncResource.GlobalState) as GlobalStateSynchroniser;\n\t\tdisposableStore.add(toDisposable(() => testClient.instantiationService.get(IUserDataSyncStoreService).clear()));\n\n\t\tclient2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t});\n\n\tteardown(() => disposableStore.clear());\n\n\ttest('when global state does not exist', async () => {\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await testClient.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await testClient.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await testClient.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('when global state is created after first sync', async () => {\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tupdateUserStorage('a', 'value1', testClient);\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await testClient.manifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.deepStrictEqual(JSON.parse(lastSyncUserData!.syncData!.content).storage, { 'a': { version: 1, value: 'value1' } });\n\t});\n\n\ttest('first time sync - outgoing to server (no state)', async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tupdateMachineStorage('b', 'value1', testClient);\n\t\tawait updateLocale(testClient);\n\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'globalState.argv.locale': { version: 1, value: 'en' }, 'a': { version: 1, value: 'value1' } });\n\t});\n\n\ttest('first time sync - incoming from server (no state)', async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait updateLocale(client2);\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(await readLocale(testClient), 'en');\n\t});\n\n\ttest('first time sync when storage exists', async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait client2.sync();\n\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' }, 'b': { version: 1, value: 'value2' } });\n\t});\n\n\ttest('first time sync when storage exists - has conflicts', async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait client2.sync();\n\n\t\tupdateUserStorage('a', 'value2', client2);\n\t\tawait testObject.sync(await testClient.manifest());\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' } });\n\t});\n\n\ttest('sync adding a storage value', async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' }, 'b': { version: 1, value: 'value2' } });\n\t});\n\n\ttest('sync updating a storage value', async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\n\t\tupdateUserStorage('a', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value2' } });\n\t});\n\n\ttest('sync removing a storage value', async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\n\t\tremoveStorage('b', testClient);\n\t\tawait testObject.sync(await testClient.manifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), undefined);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' } });\n\t});\n\n\tfunction parseGlobalState(content: string): IGlobalState {\n\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tasync function updateLocale(client: UserDataSyncClient): Promise<void> {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'en' })));\n\t}\n\n\tfunction updateUserStorage(key: string, value: string, client: UserDataSyncClient): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.store(key, value, StorageScope.GLOBAL, StorageTarget.USER);\n\t}\n\n\tfunction updateMachineStorage(key: string, value: string, client: UserDataSyncClient): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.store(key, value, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tfunction removeStorage(key: string, client: UserDataSyncClient): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.remove(key, StorageScope.GLOBAL);\n\t}\n\n\tfunction readStorage(key: string, client: UserDataSyncClient): string | undefined {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\treturn storageService.get(key, StorageScope.GLOBAL);\n\t}\n\n\tasync function readLocale(client: UserDataSyncClient): Promise<string | undefined> {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tconst content = await fileService.readFile(environmentService.argvResource);\n\t\treturn JSON.parse(content.value.toString()).locale;\n\t}\n\n});\n"]}