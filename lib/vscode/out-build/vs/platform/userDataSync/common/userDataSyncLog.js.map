{"version":3,"file":"userDataSyncLog.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/userDataSyncLog.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAMhG,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,oBAAc;QAKzD,YACiB,aAA6B,EACxB,kBAAuC;YAE5D,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QAChI,CAAC;QAED,KAAK,CAAC,OAAe,EAAE,GAAG,IAAW;YACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACrC,CAAC;QAED,KAAK,CAAC,OAAe,EAAE,GAAG,IAAW;YACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,OAAe,EAAE,GAAG,IAAW;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,OAAe,EAAE,GAAG,IAAW;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,KAAK,CAAC,OAAuB,EAAE,GAAG,IAAW;YAC5C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACrC,CAAC;QAED,QAAQ,CAAC,OAAuB,EAAE,GAAG,IAAW;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACxC,CAAC;QAED,KAAK;YACJ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;KAED,CAAA;IAzCY,sBAAsB;QAMhC,WAAA,oBAAc,CAAA;QACd,WAAA,iCAAmB,CAAA;OAPT,sBAAsB,CAyClC;IAzCY,wDAAsB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataSyncLogService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { AbstractLogger, ILoggerService, ILogger } from 'vs/platform/log/common/log';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class UserDataSyncLogService extends AbstractLogger implements IUserDataSyncLogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.logger = this._register(loggerService.createLogger(environmentService.userDataSyncLogResource, { name: 'settingssync' }));\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n\n}\n"]}