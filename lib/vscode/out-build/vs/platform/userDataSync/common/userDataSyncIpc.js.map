{"version":3,"file":"userDataSyncIpc.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/userDataSyncIpc.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IUserDataSyncUtilService, IUserDataAutoSyncService, IUserDataSyncStoreManagementService, UserDataSyncStoreType, IUserDataSyncStore } from 'vs/platform/userDataSync/common/userDataSync';\nimport { URI } from 'vs/base/common/uri';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IUserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport class UserDataAutoSyncChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataAutoSyncService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onError': return this.service.onError;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'triggerSync': return this.service.triggerSync(args[0], args[1], args[2]);\n\t\t\tcase 'turnOn': return this.service.turnOn();\n\t\t\tcase 'turnOff': return this.service.turnOff(args[0]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSycnUtilServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataSyncUtilService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'resolveDefaultIgnoredSettings': return this.service.resolveDefaultIgnoredSettings();\n\t\t\tcase 'resolveUserKeybindings': return this.service.resolveUserBindings(args[0]);\n\t\t\tcase 'resolveFormattingOptions': return this.service.resolveFormattingOptions(URI.revive(args[0]));\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncUtilServiceClient implements IUserDataSyncUtilService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) {\n\t}\n\n\tasync resolveDefaultIgnoredSettings(): Promise<string[]> {\n\t\treturn this.channel.call('resolveDefaultIgnoredSettings');\n\t}\n\n\tasync resolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>> {\n\t\treturn this.channel.call('resolveUserKeybindings', [userbindings]);\n\t}\n\n\tasync resolveFormattingOptions(file: URI): Promise<FormattingOptions> {\n\t\treturn this.channel.call('resolveFormattingOptions', [file]);\n\t}\n\n}\n\nexport class UserDataSyncMachinesServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataSyncMachinesService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChange': return this.service.onDidChange;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getMachines': return this.service.getMachines();\n\t\t\tcase 'addCurrentMachine': return this.service.addCurrentMachine();\n\t\t\tcase 'removeCurrentMachine': return this.service.removeCurrentMachine();\n\t\t\tcase 'renameMachine': return this.service.renameMachine(args[0], args[1]);\n\t\t\tcase 'setEnablement': return this.service.setEnablement(args[0], args[1]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n\n}\n\nexport class UserDataSyncAccountServiceChannel implements IServerChannel {\n\tconstructor(private readonly service: IUserDataSyncAccountService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeAccount': return this.service.onDidChangeAccount;\n\t\t\tcase 'onTokenFailed': return this.service.onTokenFailed;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase '_getInitialData': return Promise.resolve(this.service.account);\n\t\t\tcase 'updateAccount': return this.service.updateAccount(args);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncStoreManagementServiceChannel implements IServerChannel {\n\tconstructor(private readonly service: IUserDataSyncStoreManagementService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeUserDataSyncStore': return this.service.onDidChangeUserDataSyncStore;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'switch': return this.service.switch(args[0]);\n\t\t\tcase 'getPreviousUserDataSyncStore': return this.service.getPreviousUserDataSyncStore();\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncStoreManagementServiceChannelClient extends Disposable {\n\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\t\tthis.onDidChangeUserDataSyncStore = this.channel.listen<void>('onDidChangeUserDataSyncStore');\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\treturn this.channel.call('switch', [type]);\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore> {\n\t\tconst userDataSyncStore = await this.channel.call<IUserDataSyncStore>('getPreviousUserDataSyncStore');\n\t\treturn this.revive(userDataSyncStore);\n\t}\n\n\tprivate revive(userDataSyncStore: IUserDataSyncStore): IUserDataSyncStore {\n\t\treturn {\n\t\t\turl: URI.revive(userDataSyncStore.url),\n\t\t\ttype: userDataSyncStore.type,\n\t\t\tdefaultUrl: URI.revive(userDataSyncStore.defaultUrl),\n\t\t\tinsidersUrl: URI.revive(userDataSyncStore.insidersUrl),\n\t\t\tstableUrl: URI.revive(userDataSyncStore.stableUrl),\n\t\t\tcanSwitch: userDataSyncStore.canSwitch,\n\t\t\tauthenticationProviders: userDataSyncStore.authenticationProviders,\n\t\t};\n\t}\n}\n"]}