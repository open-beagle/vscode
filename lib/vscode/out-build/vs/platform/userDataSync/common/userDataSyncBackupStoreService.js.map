{"version":3,"file":"userDataSyncBackupStoreService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/userDataSyncBackupStoreService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, } from 'vs/base/common/lifecycle';\nimport { IUserDataSyncLogService, ALL_SYNC_RESOURCES, IUserDataSyncBackupStoreService, IResourceRefHandle, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFileService, IFileStat } from 'vs/platform/files/common/files';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Promises } from 'vs/base/common/async';\n\nexport class UserDataSyncBackupStoreService extends Disposable implements IUserDataSyncBackupStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t\tALL_SYNC_RESOURCES.forEach(resourceKey => this.cleanUpBackup(resourceKey));\n\t}\n\n\tasync getAllRefs(resource: SyncResource): Promise<IResourceRefHandle[]> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resource);\n\t\tconst stat = await this.fileService.resolve(folder);\n\t\tif (stat.children) {\n\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort().reverse();\n\t\t\treturn all.map(stat => ({\n\t\t\t\tref: stat.name,\n\t\t\t\tcreated: this.getCreationTime(stat)\n\t\t\t}));\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveContent(resource: SyncResource, ref?: string): Promise<string | null> {\n\t\tif (!ref) {\n\t\t\tconst refs = await this.getAllRefs(resource);\n\t\t\tif (refs.length) {\n\t\t\t\tref = refs[refs.length - 1].ref;\n\t\t\t}\n\t\t}\n\t\tif (ref) {\n\t\t\tconst file = joinPath(this.environmentService.userDataSyncHome, resource, ref);\n\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\treturn content.value.toString();\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync backup(resourceKey: SyncResource, content: string): Promise<void> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resourceKey);\n\t\tconst resource = joinPath(folder, `${toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '')}.json`);\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(content));\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\ttry {\n\t\t\tthis.cleanUpBackup(resourceKey);\n\t\t} catch (e) { /* Ignore */ }\n\t}\n\n\tprivate async cleanUpBackup(resource: SyncResource): Promise<void> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resource);\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (!(await this.fileService.exists(folder))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort();\n\t\t\t\tconst backUpMaxAge = 1000 * 60 * 60 * 24 * (this.configurationService.getValue<number>('sync.localBackupDuration') || 30 /* Default 30 days */);\n\t\t\t\tlet toDelete = all.filter(stat => Date.now() - this.getCreationTime(stat) > backUpMaxAge);\n\t\t\t\tconst remaining = all.length - toDelete.length;\n\t\t\t\tif (remaining < 10) {\n\t\t\t\t\ttoDelete = toDelete.slice(10 - remaining);\n\t\t\t\t}\n\t\t\t\tawait Promises.settled(toDelete.map(async stat => {\n\t\t\t\t\tthis.logService.info('Deleting from backup', stat.resource.path);\n\t\t\t\t\tawait this.fileService.del(stat.resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getCreationTime(stat: IFileStat) {\n\t\treturn stat.ctime || new Date(\n\t\t\tparseInt(stat.name.substring(0, 4)),\n\t\t\tparseInt(stat.name.substring(4, 6)) - 1,\n\t\t\tparseInt(stat.name.substring(6, 8)),\n\t\t\tparseInt(stat.name.substring(9, 11)),\n\t\t\tparseInt(stat.name.substring(11, 13)),\n\t\t\tparseInt(stat.name.substring(13, 15))\n\t\t).getTime();\n\t}\n}\n"]}