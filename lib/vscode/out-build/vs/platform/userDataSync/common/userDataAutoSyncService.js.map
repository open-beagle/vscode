{"version":3,"sources":["vs/platform/userDataSync/common/userDataAutoSyncService.ts"],"names":[],"mappings":"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","file":"userDataAutoSyncService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer, disposableTimeout, CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable, MutableDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IUserDataSyncLogService, IUserDataSyncService, IUserDataAutoSyncService, UserDataSyncError, UserDataSyncErrorCode, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, UserDataAutoSyncError, ISyncTask, IUserDataSyncStoreManagementService, IUserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStorageService, StorageScope, IStorageValueChangeEvent, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IUserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\nimport { localize } from 'vs/nls';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { URI } from 'vs/base/common/uri';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\ntype AutoSyncClassification = {\n\tsources: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\ntype AutoSyncEnablementClassification = {\n\tenabled?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\ntype AutoSyncErrorClassification = {\n\tcode: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tservice: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nconst enablementKey = 'sync.enable';\nconst disableMachineEventuallyKey = 'sync.disableMachineEventually';\nconst sessionIdKey = 'sync.sessionId';\nconst storeUrlKey = 'sync.storeUrl';\nconst productQualityKey = 'sync.productQuality';\n\ninterface _IUserDataAutoSyncEnablementService extends IUserDataAutoSyncEnablementService {\n\tcanToggleEnablement(): boolean;\n\tsetEnablement(enabled: boolean): void;\n}\n\nexport class UserDataAutoSyncEnablementService extends Disposable implements _IUserDataAutoSyncEnablementService {\n\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this._onDidChangeEnablement.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\t}\n\n\tisEnabled(defaultEnablement?: boolean): boolean {\n\t\tswitch (this.environmentService.sync) {\n\t\t\tcase 'on':\n\t\t\t\treturn true;\n\t\t\tcase 'off':\n\t\t\t\treturn false;\n\t\t}\n\t\treturn this.storageService.getBoolean(enablementKey, StorageScope.GLOBAL, !!defaultEnablement);\n\t}\n\n\tcanToggleEnablement(): boolean {\n\t\treturn this.userDataSyncStoreManagementService.userDataSyncStore !== undefined && this.environmentService.sync === undefined;\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (enabled && !this.canToggleEnablement()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.storageService.store(enablementKey, enabled, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IStorageValueChangeEvent): void {\n\t\tif (storageChangeEvent.scope !== StorageScope.GLOBAL) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (enablementKey === storageChangeEvent.key) {\n\t\t\tthis._onDidChangeEnablement.fire(this.isEnabled());\n\t\t\treturn;\n\t\t}\n\t}\n\n}\n\nexport class UserDataAutoSyncService extends Disposable implements IUserDataAutoSyncService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly userDataAutoSyncEnablementService: _IUserDataAutoSyncEnablementService;\n\n\tprivate readonly autoSync = this._register(new MutableDisposable<AutoSync>());\n\tprivate successiveFailures: number = 0;\n\tprivate lastSyncTriggerTime: number | undefined = undefined;\n\tprivate readonly syncTriggerDelayer: Delayer<void>;\n\n\tprivate readonly _onError: Emitter<UserDataSyncError> = this._register(new Emitter<UserDataSyncError>());\n\treadonly onError: Event<UserDataSyncError> = this._onError.event;\n\n\tprivate lastSyncUrl: URI | undefined;\n\tprivate get syncUrl(): URI | undefined {\n\t\tconst value = this.storageService.get(storeUrlKey, StorageScope.GLOBAL);\n\t\treturn value ? URI.parse(value) : undefined;\n\t}\n\tprivate set syncUrl(syncUrl: URI | undefined) {\n\t\tif (syncUrl) {\n\t\t\tthis.storageService.store(storeUrlKey, syncUrl.toString(), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(storeUrlKey, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tprivate previousProductQuality: string | undefined;\n\tprivate get productQuality(): string | undefined {\n\t\treturn this.storageService.get(productQualityKey, StorageScope.GLOBAL);\n\t}\n\tprivate set productQuality(productQuality: string | undefined) {\n\t\tif (productQuality) {\n\t\t\tthis.storageService.store(productQualityKey, productQuality, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(productQualityKey, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncResourceEnablementService private readonly userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncMachinesService private readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataAutoSyncEnablementService userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService\n\t) {\n\t\tsuper();\n\t\tthis.userDataAutoSyncEnablementService = userDataAutoSyncEnablementService as _IUserDataAutoSyncEnablementService;\n\t\tthis.syncTriggerDelayer = this._register(new Delayer<void>(0));\n\n\t\tthis.lastSyncUrl = this.syncUrl;\n\t\tthis.syncUrl = userDataSyncStoreManagementService.userDataSyncStore?.url;\n\n\t\tthis.previousProductQuality = this.productQuality;\n\t\tthis.productQuality = productService.quality;\n\n\t\tif (this.syncUrl) {\n\n\t\t\tthis.logService.info('Using settings sync service', this.syncUrl.toString());\n\t\t\tthis._register(userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => {\n\t\t\t\tif (!isEqual(this.syncUrl, userDataSyncStoreManagementService.userDataSyncStore?.url)) {\n\t\t\t\t\tthis.lastSyncUrl = this.syncUrl;\n\t\t\t\t\tthis.syncUrl = userDataSyncStoreManagementService.userDataSyncStore?.url;\n\t\t\t\t\tif (this.syncUrl) {\n\t\t\t\t\t\tthis.logService.info('Using settings sync service', this.syncUrl.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\t\tthis.logService.info('Auto Sync is enabled.');\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Auto Sync is disabled.');\n\t\t\t}\n\t\t\tthis.updateAutoSync();\n\n\t\t\tif (this.hasToDisableMachineEventually()) {\n\t\t\t\tthis.disableMachineEventually();\n\t\t\t}\n\n\t\t\tthis._register(userDataSyncAccountService.onDidChangeAccount(() => this.updateAutoSync()));\n\t\t\tthis._register(userDataSyncStoreService.onDidChangeDonotMakeRequestsUntil(() => this.updateAutoSync()));\n\t\t\tthis._register(Event.debounce<string, string[]>(userDataSyncService.onDidChangeLocal, (last, source) => last ? [...last, source] : [source], 1000)(sources => this.triggerSync(sources, false, false)));\n\t\t\tthis._register(Event.filter(this.userDataSyncResourceEnablementService.onDidChangeResourceEnablement, ([, enabled]) => enabled)(() => this.triggerSync(['resourceEnablement'], false, false)));\n\t\t\tthis._register(this.userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => this.triggerSync(['userDataSyncStoreChanged'], false, false)));\n\t\t}\n\t}\n\n\tprivate updateAutoSync(): void {\n\t\tconst { enabled, message } = this.isAutoSyncEnabled();\n\t\tif (enabled) {\n\t\t\tif (this.autoSync.value === undefined) {\n\t\t\t\tthis.autoSync.value = new AutoSync(this.lastSyncUrl, 1000 * 60 * 5 /* 5 miutes */, this.userDataSyncStoreManagementService, this.userDataSyncStoreService, this.userDataSyncService, this.userDataSyncMachinesService, this.logService, this.storageService);\n\t\t\t\tthis.autoSync.value.register(this.autoSync.value.onDidStartSync(() => this.lastSyncTriggerTime = new Date().getTime()));\n\t\t\t\tthis.autoSync.value.register(this.autoSync.value.onDidFinishSync(e => this.onDidFinishSync(e)));\n\t\t\t\tif (this.startAutoSync()) {\n\t\t\t\t\tthis.autoSync.value.start();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.syncTriggerDelayer.cancel();\n\t\t\tif (this.autoSync.value !== undefined) {\n\t\t\t\tif (message) {\n\t\t\t\t\tthis.logService.info(message);\n\t\t\t\t}\n\t\t\t\tthis.autoSync.clear();\n\t\t\t}\n\n\t\t\t/* log message when auto sync is not disabled by user */\n\t\t\telse if (message && this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\t\tthis.logService.info(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t// For tests purpose only\n\tprotected startAutoSync(): boolean { return true; }\n\n\tprivate isAutoSyncEnabled(): { enabled: boolean, message?: string } {\n\t\tif (!this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\treturn { enabled: false, message: 'Auto Sync: Disabled.' };\n\t\t}\n\t\tif (!this.userDataSyncAccountService.account) {\n\t\t\treturn { enabled: false, message: 'Auto Sync: Suspended until auth token is available.' };\n\t\t}\n\t\tif (this.userDataSyncStoreService.donotMakeRequestsUntil) {\n\t\t\treturn { enabled: false, message: `Auto Sync: Suspended until ${toLocalISOString(this.userDataSyncStoreService.donotMakeRequestsUntil)} because server is not accepting requests until then.` };\n\t\t}\n\t\treturn { enabled: true };\n\t}\n\n\tasync turnOn(): Promise<void> {\n\t\tthis.stopDisableMachineEventually();\n\t\tthis.lastSyncUrl = this.syncUrl;\n\t\tthis.updateEnablement(true);\n\t}\n\n\tasync turnOff(everywhere: boolean, softTurnOffOnError?: boolean, donotRemoveMachine?: boolean): Promise<void> {\n\t\ttry {\n\n\t\t\t// Remove machine\n\t\t\tif (this.userDataSyncAccountService.account && !donotRemoveMachine) {\n\t\t\t\tawait this.userDataSyncMachinesService.removeCurrentMachine();\n\t\t\t}\n\n\t\t\t// Disable Auto Sync\n\t\t\tthis.updateEnablement(false);\n\n\t\t\t// Reset Session\n\t\t\tthis.storageService.remove(sessionIdKey, StorageScope.GLOBAL);\n\n\t\t\t// Reset\n\t\t\tif (everywhere) {\n\t\t\t\tthis.telemetryService.publicLog2('sync/turnOffEveryWhere');\n\t\t\t\tawait this.userDataSyncService.reset();\n\t\t\t} else {\n\t\t\t\tawait this.userDataSyncService.resetLocal();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (softTurnOffOnError) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t\tthis.updateEnablement(false);\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateEnablement(enabled: boolean): void {\n\t\tif (this.userDataAutoSyncEnablementService.isEnabled() !== enabled) {\n\t\t\tthis.telemetryService.publicLog2<{ enabled: boolean }, AutoSyncEnablementClassification>(enablementKey, { enabled });\n\t\t\tthis.userDataAutoSyncEnablementService.setEnablement(enabled);\n\t\t\tthis.updateAutoSync();\n\t\t}\n\t}\n\n\tprivate hasProductQualityChanged(): boolean {\n\t\treturn !!this.previousProductQuality && !!this.productQuality && this.previousProductQuality !== this.productQuality;\n\t}\n\n\tprivate async onDidFinishSync(error: Error | undefined): Promise<void> {\n\t\tif (!error) {\n\t\t\t// Sync finished without errors\n\t\t\tthis.successiveFailures = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// Error while syncing\n\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\n\t\t// Log to telemetry\n\t\tif (userDataSyncError instanceof UserDataAutoSyncError) {\n\t\t\tthis.telemetryService.publicLog2<{ code: string, service: string }, AutoSyncErrorClassification>(`autosync/error`, { code: userDataSyncError.code, service: this.userDataSyncStoreManagementService.userDataSyncStore!.url.toString() });\n\t\t}\n\n\t\t// Session got expired\n\t\tif (userDataSyncError.code === UserDataSyncErrorCode.SessionExpired) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because current session is expired');\n\t\t}\n\n\t\t// Turned off from another device\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.TurnedOff) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because sync is turned off in the cloud');\n\t\t}\n\n\t\t// Exceeded Rate Limit\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.LocalTooManyRequests || userDataSyncError.code === UserDataSyncErrorCode.TooManyRequests) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */,\n\t\t\t\ttrue /* do not disable machine because disabling a machine makes request to server and can fail with TooManyRequests */);\n\t\t\tthis.disableMachineEventually();\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because of making too many requests to server');\n\t\t}\n\n\t\t// Upgrade Required or Gone\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.UpgradeRequired || userDataSyncError.code === UserDataSyncErrorCode.Gone) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */,\n\t\t\t\ttrue /* do not disable machine because disabling a machine makes request to server and can fail with upgrade required or gone */);\n\t\t\tthis.disableMachineEventually();\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because current client is not compatible with server. Requires client upgrade.');\n\t\t}\n\n\t\t// Incompatible Local Content\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.IncompatibleLocalContent) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info(`Auto Sync: Turned off sync because server has ${userDataSyncError.resource} content with newer version than of client. Requires client upgrade.`);\n\t\t}\n\n\t\t// Incompatible Remote Content\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.IncompatibleRemoteContent) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info(`Auto Sync: Turned off sync because server has ${userDataSyncError.resource} content with older version than of client. Requires server reset.`);\n\t\t}\n\n\t\t// Service changed\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.ServiceChanged || userDataSyncError.code === UserDataSyncErrorCode.DefaultServiceChanged) {\n\n\t\t\t// Check if default settings sync service has changed in web without changing the product quality\n\t\t\t// Then turn off settings sync and ask user to turn on again\n\t\t\tif (isWeb && userDataSyncError.code === UserDataSyncErrorCode.DefaultServiceChanged && !this.hasProductQualityChanged()) {\n\t\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\t\tthis.logService.info('Auto Sync: Turned off sync because default sync service is changed.');\n\t\t\t}\n\n\t\t\t// Service has changed by the user. So turn off and turn on sync.\n\t\t\t// Show a prompt to the user about service change.\n\t\t\telse {\n\t\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */, true /* do not disable machine */);\n\t\t\t\tawait this.turnOn();\n\t\t\t\tthis.logService.info('Auto Sync: Sync Service changed. Turned off auto sync, reset local state and turned on auto sync.');\n\t\t\t}\n\n\t\t}\n\n\t\telse {\n\t\t\tthis.logService.error(userDataSyncError);\n\t\t\tthis.successiveFailures++;\n\t\t}\n\n\t\tthis._onError.fire(userDataSyncError);\n\t}\n\n\tprivate async disableMachineEventually(): Promise<void> {\n\t\tthis.storageService.store(disableMachineEventuallyKey, true, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tawait timeout(1000 * 60 * 10);\n\n\t\t// Return if got stopped meanwhile.\n\t\tif (!this.hasToDisableMachineEventually()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stopDisableMachineEventually();\n\n\t\t// disable only if sync is disabled\n\t\tif (!this.userDataAutoSyncEnablementService.isEnabled() && this.userDataSyncAccountService.account) {\n\t\t\tawait this.userDataSyncMachinesService.removeCurrentMachine();\n\t\t}\n\t}\n\n\tprivate hasToDisableMachineEventually(): boolean {\n\t\treturn this.storageService.getBoolean(disableMachineEventuallyKey, StorageScope.GLOBAL, false);\n\t}\n\n\tprivate stopDisableMachineEventually(): void {\n\t\tthis.storageService.remove(disableMachineEventuallyKey, StorageScope.GLOBAL);\n\t}\n\n\tprivate sources: string[] = [];\n\tasync triggerSync(sources: string[], skipIfSyncedRecently: boolean, disableCache: boolean): Promise<void> {\n\t\tif (this.autoSync.value === undefined) {\n\t\t\treturn this.syncTriggerDelayer.cancel();\n\t\t}\n\n\t\tif (skipIfSyncedRecently && this.lastSyncTriggerTime\n\t\t\t&& Math.round((new Date().getTime() - this.lastSyncTriggerTime) / 1000) < 10) {\n\t\t\tthis.logService.debug('Auto Sync: Skipped. Limited to once per 10 seconds.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sources.push(...sources);\n\t\treturn this.syncTriggerDelayer.trigger(async () => {\n\t\t\tthis.logService.trace('activity sources', ...this.sources);\n\t\t\tthis.telemetryService.publicLog2<{ sources: string[] }, AutoSyncClassification>('sync/triggered', { sources: this.sources });\n\t\t\tthis.sources = [];\n\t\t\tif (this.autoSync.value) {\n\t\t\t\tawait this.autoSync.value.sync('Activity', disableCache);\n\t\t\t}\n\t\t}, this.successiveFailures\n\t\t\t? this.getSyncTriggerDelayTime() * 1 * Math.min(Math.pow(2, this.successiveFailures), 60) /* Delay exponentially until max 1 minute */\n\t\t\t: this.getSyncTriggerDelayTime());\n\n\t}\n\n\tprotected getSyncTriggerDelayTime(): number {\n\t\treturn 1000; /* Debounce for a second if there are no failures */\n\t}\n\n}\n\nclass AutoSync extends Disposable {\n\n\tprivate static readonly INTERVAL_SYNCING = 'Interval';\n\n\tprivate readonly intervalHandler = this._register(new MutableDisposable<IDisposable>());\n\n\tprivate readonly _onDidStartSync = this._register(new Emitter<void>());\n\treadonly onDidStartSync = this._onDidStartSync.event;\n\n\tprivate readonly _onDidFinishSync = this._register(new Emitter<Error | undefined>());\n\treadonly onDidFinishSync = this._onDidFinishSync.event;\n\n\tprivate syncTask: ISyncTask | undefined;\n\tprivate syncPromise: CancelablePromise<void> | undefined;\n\n\tconstructor(\n\t\tprivate readonly lastSyncUrl: URI | undefined,\n\t\tprivate readonly interval: number /* in milliseconds */,\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\tprivate readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\tprivate readonly userDataSyncService: IUserDataSyncService,\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t\tprivate readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t}\n\n\tstart(): void {\n\t\tthis._register(this.onDidFinishSync(() => this.waitUntilNextIntervalAndSync()));\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.syncPromise) {\n\t\t\t\tthis.syncPromise.cancel();\n\t\t\t\tthis.logService.info('Auto sync: Cancelled sync that is in progress');\n\t\t\t\tthis.syncPromise = undefined;\n\t\t\t}\n\t\t\tif (this.syncTask) {\n\t\t\t\tthis.syncTask.stop();\n\t\t\t}\n\t\t\tthis.logService.info('Auto Sync: Stopped');\n\t\t}));\n\t\tthis.logService.info('Auto Sync: Started');\n\t\tthis.sync(AutoSync.INTERVAL_SYNCING, false);\n\t}\n\n\tprivate waitUntilNextIntervalAndSync(): void {\n\t\tthis.intervalHandler.value = disposableTimeout(() => this.sync(AutoSync.INTERVAL_SYNCING, false), this.interval);\n\t}\n\n\tsync(reason: string, disableCache: boolean): Promise<void> {\n\t\tconst syncPromise = createCancelablePromise(async token => {\n\t\t\tif (this.syncPromise) {\n\t\t\t\ttry {\n\t\t\t\t\t// Wait until existing sync is finished\n\t\t\t\t\tthis.logService.debug('Auto Sync: Waiting until sync is finished.');\n\t\t\t\t\tawait this.syncPromise;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\t// Cancelled => Disposed. Donot continue sync.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.doSync(reason, disableCache, token);\n\t\t});\n\t\tthis.syncPromise = syncPromise;\n\t\tthis.syncPromise.finally(() => this.syncPromise = undefined);\n\t\treturn this.syncPromise;\n\t}\n\n\tprivate hasSyncServiceChanged(): boolean {\n\t\treturn this.lastSyncUrl !== undefined && !isEqual(this.lastSyncUrl, this.userDataSyncStoreManagementService.userDataSyncStore?.url);\n\t}\n\n\tprivate async hasDefaultServiceChanged(): Promise<boolean> {\n\t\tconst previous = await this.userDataSyncStoreManagementService.getPreviousUserDataSyncStore();\n\t\tconst current = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\t// check if defaults changed\n\t\treturn !!current && !!previous &&\n\t\t\t(!isEqual(current.defaultUrl, previous.defaultUrl) ||\n\t\t\t\t!isEqual(current.insidersUrl, previous.insidersUrl) ||\n\t\t\t\t!isEqual(current.stableUrl, previous.stableUrl));\n\t}\n\n\tprivate async doSync(reason: string, disableCache: boolean, token: CancellationToken): Promise<void> {\n\t\tthis.logService.info(`Auto Sync: Triggered by ${reason}`);\n\t\tthis._onDidStartSync.fire();\n\t\tlet error: Error | undefined;\n\t\ttry {\n\t\t\tthis.syncTask = await this.userDataSyncService.createSyncTask(disableCache);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet manifest = this.syncTask.manifest;\n\n\t\t\t// Server has no data but this machine was synced before\n\t\t\tif (manifest === null && await this.userDataSyncService.hasPreviouslySynced()) {\n\t\t\t\tif (this.hasSyncServiceChanged()) {\n\t\t\t\t\tif (await this.hasDefaultServiceChanged()) {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('default service changed', \"Cannot sync because default service has changed\"), UserDataSyncErrorCode.DefaultServiceChanged);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('service changed', \"Cannot sync because sync service has changed\"), UserDataSyncErrorCode.ServiceChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Sync was turned off in the cloud\n\t\t\t\t\tthrow new UserDataAutoSyncError(localize('turned off', \"Cannot sync because syncing is turned off in the cloud\"), UserDataSyncErrorCode.TurnedOff);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sessionId = this.storageService.get(sessionIdKey, StorageScope.GLOBAL);\n\t\t\t// Server session is different from client session\n\t\t\tif (sessionId && manifest && sessionId !== manifest.session) {\n\t\t\t\tif (this.hasSyncServiceChanged()) {\n\t\t\t\t\tif (await this.hasDefaultServiceChanged()) {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('default service changed', \"Cannot sync because default service has changed\"), UserDataSyncErrorCode.DefaultServiceChanged);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('service changed', \"Cannot sync because sync service has changed\"), UserDataSyncErrorCode.ServiceChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new UserDataAutoSyncError(localize('session expired', \"Cannot sync because current session is expired\"), UserDataSyncErrorCode.SessionExpired);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst machines = await this.userDataSyncMachinesService.getMachines(manifest || undefined);\n\t\t\t// Return if cancellation is requested\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentMachine = machines.find(machine => machine.isCurrent);\n\t\t\t// Check if sync was turned off from other machine\n\t\t\tif (currentMachine?.disabled) {\n\t\t\t\t// Throw TurnedOff error\n\t\t\t\tthrow new UserDataAutoSyncError(localize('turned off machine', \"Cannot sync because syncing is turned off on this machine from another machine.\"), UserDataSyncErrorCode.TurnedOff);\n\t\t\t}\n\n\t\t\tawait this.syncTask.run();\n\n\t\t\t// After syncing, get the manifest if it was not available before\n\t\t\tif (manifest === null) {\n\t\t\t\tmanifest = await this.userDataSyncStoreService.manifest();\n\t\t\t}\n\n\t\t\t// Update local session id\n\t\t\tif (manifest && manifest.session !== sessionId) {\n\t\t\t\tthis.storageService.store(sessionIdKey, manifest.session, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t}\n\n\t\t\t// Return if cancellation is requested\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add current machine\n\t\t\tif (!currentMachine) {\n\t\t\t\tawait this.userDataSyncMachinesService.addCurrentMachine(manifest || undefined);\n\t\t\t}\n\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\terror = e;\n\t\t}\n\n\t\tthis._onDidFinishSync.fire(error);\n\t}\n\n\tregister<T extends IDisposable>(t: T): T {\n\t\treturn super._register(t);\n\t}\n\n}\n"]}