{"version":3,"file":"extensionsSync.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/extensionsSync.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tIUserDataSyncStoreService, ISyncExtension, IUserDataSyncLogService, IUserDataSynchroniser, SyncResource, IUserDataSyncResourceEnablementService,\n\tIUserDataSyncBackupStoreService, ISyncResourceHandle, USER_DATA_SYNC_SCHEME, IRemoteUserData, ISyncData, Change, ISyncExtensionWithVersion\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, IExtensionGalleryService, IGlobalExtensionEnablementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, getExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { merge } from 'vs/platform/userDataSync/common/extensionsMerge';\nimport { AbstractInitializer, AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { URI } from 'vs/base/common/uri';\nimport { format } from 'vs/base/common/jsonFormatter';\nimport { applyEdits } from 'vs/base/common/jsonEdit';\nimport { compare } from 'vs/base/common/strings';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IExtensionsStorageSyncService } from 'vs/platform/userDataSync/common/extensionsStorageSync';\nimport { Promises } from 'vs/base/common/async';\n\ninterface IExtensionResourceMergeResult extends IAcceptResult {\n\treadonly added: ISyncExtension[];\n\treadonly removed: IExtensionIdentifier[];\n\treadonly updated: ISyncExtension[];\n\treadonly remote: ISyncExtension[] | null;\n}\n\ninterface IExtensionResourcePreview extends IResourcePreview {\n\treadonly localExtensions: ISyncExtensionWithVersion[];\n\treadonly skippedExtensions: ISyncExtension[];\n\treadonly previewResult: IExtensionResourceMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tskippedExtensions: ISyncExtension[] | undefined;\n}\n\nasync function parseAndMigrateExtensions(syncData: ISyncData, extensionManagementService: IExtensionManagementService): Promise<ISyncExtension[]> {\n\tconst extensions = JSON.parse(syncData.content);\n\tif (syncData.version === 1\n\t\t|| syncData.version === 2\n\t) {\n\t\tconst builtinExtensions = (await extensionManagementService.getInstalled(ExtensionType.System)).filter(e => e.isBuiltin);\n\t\tfor (const extension of extensions) {\n\t\t\t// #region Migration from v1 (enabled -> disabled)\n\t\t\tif (syncData.version === 1) {\n\t\t\t\tif ((<any>extension).enabled === false) {\n\t\t\t\t\textension.disabled = true;\n\t\t\t\t}\n\t\t\t\tdelete (<any>extension).enabled;\n\t\t\t}\n\t\t\t// #endregion\n\n\t\t\t// #region Migration from v2 (set installed property on extension)\n\t\t\tif (syncData.version === 2) {\n\t\t\t\tif (builtinExtensions.every(installed => !areSameExtensions(installed.identifier, extension.identifier))) {\n\t\t\t\t\textension.installed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// #endregion\n\t\t}\n\t}\n\treturn extensions;\n}\n\nexport function getExtensionStorageState(publisher: string, name: string, storageService: IStorageService): IStringDictionary<any> {\n\tconst extensionStorageValue = storageService.get(getExtensionId(publisher, name) /* use the same id used in extension host */, StorageScope.GLOBAL) || '{}';\n\treturn JSON.parse(extensionStorageValue);\n}\n\nexport function storeExtensionStorageState(publisher: string, name: string, extensionState: IStringDictionary<any>, storageService: IStorageService): void {\n\tstorageService.store(getExtensionId(publisher, name) /* use the same id used in extension host */, JSON.stringify(extensionState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n}\n\nexport class ExtensionsSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprivate static readonly EXTENSIONS_DATA_URI = URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'extensions', path: `/extensions.json` });\n\n\t/*\n\t\tVersion 3 - Introduce installed property to skip installing built in extensions\n\t\tprotected readonly version: number = 3;\n\t*/\n\t/* Version 4: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\t/* Version 5: Introduce extension state */\n\tprotected readonly version: number = 5;\n\n\tprotected override isEnabled(): boolean { return super.isEnabled() && this.extensionGalleryService.isEnabled(); }\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'extensions.json');\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionsStorageSyncService private readonly extensionsStorageSyncService: IExtensionsStorageSyncService,\n\t) {\n\t\tsuper(SyncResource.Extensions, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService);\n\t\tthis._register(\n\t\t\tEvent.debounce(\n\t\t\t\tEvent.any<any>(\n\t\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtension, (e => !!e.gallery)),\n\t\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)),\n\t\t\t\t\tthis.extensionEnablementService.onDidChangeEnablement,\n\t\t\t\t\tthis.extensionsStorageSyncService.onDidChangeExtensionsStorage),\n\t\t\t\t() => undefined, 500)(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: ILastSyncUserData | null): Promise<IExtensionResourcePreview[]> {\n\t\tconst remoteExtensions: ISyncExtension[] | null = remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t\tconst skippedExtensions: ISyncExtension[] = lastSyncUserData?.skippedExtensions || [];\n\t\tconst lastSyncExtensions: ISyncExtension[] | null = lastSyncUserData?.syncData ? await parseAndMigrateExtensions(lastSyncUserData.syncData, this.extensionManagementService) : null;\n\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst localExtensions = this.getLocalExtensions(installedExtensions);\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\n\t\tif (remoteExtensions) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote extensions with local extensions...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote extensions does not exist. Synchronizing extensions for the first time.`);\n\t\t}\n\n\t\tconst { added, removed, updated, remote } = merge(localExtensions, remoteExtensions, lastSyncExtensions, skippedExtensions, ignoredExtensions);\n\t\tconst previewResult: IExtensionResourceMergeResult = {\n\t\t\tadded,\n\t\t\tremoved,\n\t\t\tupdated,\n\t\t\tremote,\n\t\t\tcontent: this.getPreviewContent(localExtensions, added, updated, removed),\n\t\t\tlocalChange: added.length > 0 || removed.length > 0 || updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\treturn [{\n\t\t\tskippedExtensions,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: this.format(localExtensions),\n\t\t\tlocalExtensions,\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteExtensions ? this.format(remoteExtensions) : null,\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tlocalChange: previewResult.localChange,\n\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprivate getPreviewContent(localExtensions: ISyncExtension[], added: ISyncExtension[], updated: ISyncExtension[], removed: IExtensionIdentifier[]): string {\n\t\tconst preview: ISyncExtension[] = [...added, ...updated];\n\n\t\tconst idsOrUUIDs: Set<string> = new Set<string>();\n\t\tconst addIdentifier = (identifier: IExtensionIdentifier) => {\n\t\t\tidsOrUUIDs.add(identifier.id.toLowerCase());\n\t\t\tif (identifier.uuid) {\n\t\t\t\tidsOrUUIDs.add(identifier.uuid);\n\t\t\t}\n\t\t};\n\t\tpreview.forEach(({ identifier }) => addIdentifier(identifier));\n\t\tremoved.forEach(addIdentifier);\n\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tif (idsOrUUIDs.has(localExtension.identifier.id.toLowerCase()) || (localExtension.identifier.uuid && idsOrUUIDs.has(localExtension.identifier.uuid))) {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreview.push(localExtension);\n\t\t}\n\n\t\treturn this.format(preview);\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IExtensionResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IExtensionResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IExtensionResourceMergeResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst mergeResult = merge(resourcePreview.localExtensions, null, null, resourcePreview.skippedExtensions, ignoredExtensions);\n\t\tconst { added, removed, updated, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tadded,\n\t\t\tremoved,\n\t\t\tupdated,\n\t\t\tremote,\n\t\t\tlocalChange: added.length > 0 || removed.length > 0 || updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst remoteExtensions = resourcePreview.remoteContent ? JSON.parse(resourcePreview.remoteContent) : null;\n\t\tif (remoteExtensions !== null) {\n\t\t\tconst mergeResult = merge(resourcePreview.localExtensions, remoteExtensions, resourcePreview.localExtensions, [], ignoredExtensions);\n\t\t\tconst { added, removed, updated, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tupdated,\n\t\t\t\tremote,\n\t\t\t\tlocalChange: added.length > 0 || removed.length > 0 || updated.length > 0 ? Change.Modified : Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tadded: [], removed: [], updated: [], remote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IExtensionResourcePreview, IExtensionResourceMergeResult][], force: boolean): Promise<void> {\n\t\tlet { skippedExtensions, localExtensions } = resourcePreviews[0][0];\n\t\tlet { added, removed, updated, remote, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing extensions.`);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(JSON.stringify(localExtensions));\n\t\t\tskippedExtensions = await this.updateLocalExtensions(added, removed, updated, skippedExtensions);\n\t\t}\n\n\t\tif (remote) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote extensions...`);\n\t\t\tconst content = JSON.stringify(remote);\n\t\t\tremoteUserData = await this.updateRemoteUserData(content, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote extensions`);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized extensions...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, { skippedExtensions });\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized extensions`);\n\t\t}\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'extensions.json'), comparableResource: ExtensionsSynchroniser.EXTENSIONS_DATA_URI }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(uri, ExtensionsSynchroniser.EXTENSIONS_DATA_URI)) {\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\t\tconst localExtensions = this.getLocalExtensions(installedExtensions).filter(e => !ignoredExtensions.some(id => areSameExtensions({ id }, e.identifier)));\n\t\t\treturn this.format(localExtensions);\n\t\t}\n\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\tcase 'extensions.json':\n\t\t\t\t\t\treturn this.format(this.parseExtensions(syncData));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate format(extensions: ISyncExtension[]): string {\n\t\textensions.sort((e1, e2) => {\n\t\t\tif (!e1.identifier.uuid && e2.identifier.uuid) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (e1.identifier.uuid && !e2.identifier.uuid) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn compare(e1.identifier.id, e2.identifier.id);\n\t\t});\n\t\tconst content = JSON.stringify(extensions);\n\t\tconst edits = format(content, undefined, {});\n\t\treturn applyEdits(content, edits);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\t\tconst localExtensions = this.getLocalExtensions(installedExtensions);\n\t\t\tif (localExtensions.some(e => e.installed || e.disabled)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateLocalExtensions(added: ISyncExtension[], removed: IExtensionIdentifier[], updated: ISyncExtension[], skippedExtensions: ISyncExtension[]): Promise<ISyncExtension[]> {\n\t\tconst removeFromSkipped: IExtensionIdentifier[] = [];\n\t\tconst addToSkipped: ISyncExtension[] = [];\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\n\t\tif (removed.length) {\n\t\t\tconst extensionsToRemove = installedExtensions.filter(({ identifier, isBuiltin }) => !isBuiltin && removed.some(r => areSameExtensions(identifier, r)));\n\t\t\tawait Promises.settled(extensionsToRemove.map(async extensionToRemove => {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Uninstalling local extension...`, extensionToRemove.identifier.id);\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToRemove, { donotIncludePack: true, donotCheckDependents: true });\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Uninstalled local extension.`, extensionToRemove.identifier.id);\n\t\t\t\tremoveFromSkipped.push(extensionToRemove.identifier);\n\t\t\t}));\n\t\t}\n\n\t\tif (added.length || updated.length) {\n\t\t\tawait Promises.settled([...added, ...updated].map(async e => {\n\t\t\t\tconst installedExtension = installedExtensions.find(installed => areSameExtensions(installed.identifier, e.identifier));\n\n\t\t\t\t// Builtin Extension Sync: Enablement & State\n\t\t\t\tif (installedExtension && installedExtension.isBuiltin) {\n\t\t\t\t\tif (e.state && installedExtension.manifest.version === e.version) {\n\t\t\t\t\t\tthis.updateExtensionState(e.state, installedExtension.manifest.publisher, installedExtension.manifest.name, installedExtension.manifest.version);\n\t\t\t\t\t}\n\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Disabling extension...`, e.identifier.id);\n\t\t\t\t\t\tawait this.extensionEnablementService.disableExtension(e.identifier);\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Disabled extension`, e.identifier.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Enabling extension...`, e.identifier.id);\n\t\t\t\t\t\tawait this.extensionEnablementService.enableExtension(e.identifier);\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Enabled extension`, e.identifier.id);\n\t\t\t\t\t}\n\t\t\t\t\tremoveFromSkipped.push(e.identifier);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// User Extension Sync: Install/Update, Enablement & State\n\t\t\t\tconst extension = await this.extensionGalleryService.getCompatibleExtension(e.identifier);\n\n\t\t\t\t/* Update extension state only if\n\t\t\t\t *\textension is installed and version is same as synced version or\n\t\t\t\t *\textension is not installed and installable\n\t\t\t\t */\n\t\t\t\tif (e.state &&\n\t\t\t\t\t(installedExtension ? installedExtension.manifest.version === e.version /* Installed and has same version */\n\t\t\t\t\t\t: !!extension /* Installable */)\n\t\t\t\t) {\n\t\t\t\t\tconst publisher = installedExtension ? installedExtension.manifest.publisher : extension!.publisher;\n\t\t\t\t\tconst name = installedExtension ? installedExtension.manifest.name : extension!.name;\n\t\t\t\t\tthis.updateExtensionState(e.state, publisher, name, installedExtension?.manifest.version);\n\t\t\t\t}\n\n\t\t\t\tif (extension) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Disabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\tawait this.extensionEnablementService.disableExtension(extension.identifier);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Disabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Enabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\tawait this.extensionEnablementService.enableExtension(extension.identifier);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Enabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Install only if the extension does not exist\n\t\t\t\t\t\tif (!installedExtension) {\n\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Installing extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\tawait this.extensionManagementService.installFromGallery(extension, { isMachineScoped: false, donotIncludePackAndDependencies: true } /* pass options to prevent install and sync dialog in web */);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Installed extension.`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\tremoveFromSkipped.push(extension.identifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing extension`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst newSkippedExtensions: ISyncExtension[] = [];\n\t\tfor (const skippedExtension of skippedExtensions) {\n\t\t\tif (!removeFromSkipped.some(e => areSameExtensions(e, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\tfor (const skippedExtension of addToSkipped) {\n\t\t\tif (!newSkippedExtensions.some(e => areSameExtensions(e.identifier, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\treturn newSkippedExtensions;\n\t}\n\n\tprivate updateExtensionState(state: IStringDictionary<any>, publisher: string, name: string, version: string | undefined): void {\n\t\tconst extensionState = getExtensionStorageState(publisher, name, this.storageService);\n\t\tconst keys = version ? this.extensionsStorageSyncService.getKeysForSync({ id: getGalleryExtensionId(publisher, name), version }) : undefined;\n\t\tif (keys) {\n\t\t\tkeys.forEach(key => { extensionState[key] = state[key]; });\n\t\t} else {\n\t\t\tObject.keys(state).forEach(key => extensionState[key] = state[key]);\n\t\t}\n\t\tstoreExtensionStorageState(publisher, name, extensionState, this.storageService);\n\t}\n\n\tprivate parseExtensions(syncData: ISyncData): ISyncExtension[] {\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tprivate getLocalExtensions(installedExtensions: ILocalExtension[]): ISyncExtensionWithVersion[] {\n\t\tconst disabledExtensions = this.extensionEnablementService.getDisabledExtensions();\n\t\treturn installedExtensions\n\t\t\t.map(({ identifier, isBuiltin, manifest }) => {\n\t\t\t\tconst syncExntesion: ISyncExtensionWithVersion = { identifier, version: manifest.version };\n\t\t\t\tif (disabledExtensions.some(disabledExtension => areSameExtensions(disabledExtension, identifier))) {\n\t\t\t\t\tsyncExntesion.disabled = true;\n\t\t\t\t}\n\t\t\t\tif (!isBuiltin) {\n\t\t\t\t\tsyncExntesion.installed = true;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst keys = this.extensionsStorageSyncService.getKeysForSync({ id: identifier.id, version: manifest.version });\n\t\t\t\t\tif (keys) {\n\t\t\t\t\t\tconst extensionStorageState = getExtensionStorageState(manifest.publisher, manifest.name, this.storageService);\n\t\t\t\t\t\tsyncExntesion.state = Object.keys(extensionStorageState).reduce((state: IStringDictionary<any>, key) => {\n\t\t\t\t\t\t\tif (keys.includes(key)) {\n\t\t\t\t\t\t\t\tstate[key] = extensionStorageState[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}, {});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Error while parsing extension state`, getErrorMessage(error));\n\t\t\t\t}\n\t\t\t\treturn syncExntesion;\n\t\t\t});\n\t}\n\n}\n\nexport interface IExtensionsInitializerPreviewResult {\n\treadonly installedExtensions: ILocalExtension[];\n\treadonly disabledExtensions: IExtensionIdentifier[];\n\treadonly newExtensions: IExtensionIdentifier[];\n\treadonly remoteExtensions: ISyncExtension[];\n}\n\nexport abstract class AbstractExtensionsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IExtensionManagementService protected readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper(SyncResource.Extensions, environmentService, logService, fileService);\n\t}\n\n\tprotected async parseExtensions(remoteUserData: IRemoteUserData): Promise<ISyncExtension[] | null> {\n\t\treturn remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t}\n\n\tprotected generatePreview(remoteExtensions: ISyncExtension[], localExtensions: ILocalExtension[]): IExtensionsInitializerPreviewResult {\n\t\tconst installedExtensions: ILocalExtension[] = [];\n\t\tconst newExtensions: IExtensionIdentifier[] = [];\n\t\tconst disabledExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const extension of remoteExtensions) {\n\t\t\tif (this.ignoredExtensionsManagementService.hasToNeverSyncExtension(extension.identifier.id)) {\n\t\t\t\t// Skip extension ignored to sync\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst installedExtension = localExtensions.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (installedExtension) {\n\t\t\t\tinstalledExtensions.push(installedExtension);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t} else if (extension.installed) {\n\t\t\t\tnewExtensions.push(extension.identifier);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { installedExtensions, newExtensions, disabledExtensions, remoteExtensions };\n\t}\n\n}\n"]}