{"version":3,"file":"keybindingsMerge.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/keybindingsMerge.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport { parse } from 'vs/base/common/json';\nimport { IUserFriendlyKeybinding } from 'vs/platform/keybinding/common/keybinding';\nimport { equals } from 'vs/base/common/arrays';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport * as contentUtil from 'vs/platform/userDataSync/common/content';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IUserDataSyncUtilService } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ICompareResult {\n\tadded: Set<string>;\n\tremoved: Set<string>;\n\tupdated: Set<string>;\n}\n\ninterface IMergeResult {\n\thasLocalForwarded: boolean;\n\thasRemoteForwarded: boolean;\n\tadded: Set<string>;\n\tremoved: Set<string>;\n\tupdated: Set<string>;\n\tconflicts: Set<string>;\n}\n\nexport function parseKeybindings(content: string): IUserFriendlyKeybinding[] {\n\treturn parse(content) || [];\n}\n\nexport async function merge(localContent: string, remoteContent: string, baseContent: string | null, formattingOptions: FormattingOptions, userDataSyncUtilService: IUserDataSyncUtilService): Promise<{ mergeContent: string, hasChanges: boolean, hasConflicts: boolean }> {\n\tconst local = parseKeybindings(localContent);\n\tconst remote = parseKeybindings(remoteContent);\n\tconst base = baseContent ? parseKeybindings(baseContent) : null;\n\n\tconst userbindings: string[] = [...local, ...remote, ...(base || [])].map(keybinding => keybinding.key);\n\tconst normalizedKeys = await userDataSyncUtilService.resolveUserBindings(userbindings);\n\tlet keybindingsMergeResult = computeMergeResultByKeybinding(local, remote, base, normalizedKeys);\n\n\tif (!keybindingsMergeResult.hasLocalForwarded && !keybindingsMergeResult.hasRemoteForwarded) {\n\t\t// No changes found between local and remote.\n\t\treturn { mergeContent: localContent, hasChanges: false, hasConflicts: false };\n\t}\n\n\tif (!keybindingsMergeResult.hasLocalForwarded && keybindingsMergeResult.hasRemoteForwarded) {\n\t\treturn { mergeContent: remoteContent, hasChanges: true, hasConflicts: false };\n\t}\n\n\tif (keybindingsMergeResult.hasLocalForwarded && !keybindingsMergeResult.hasRemoteForwarded) {\n\t\t// Local has moved forward and remote has not. Return local.\n\t\treturn { mergeContent: localContent, hasChanges: true, hasConflicts: false };\n\t}\n\n\t// Both local and remote has moved forward.\n\tconst localByCommand = byCommand(local);\n\tconst remoteByCommand = byCommand(remote);\n\tconst baseByCommand = base ? byCommand(base) : null;\n\tconst localToRemoteByCommand = compareByCommand(localByCommand, remoteByCommand, normalizedKeys);\n\tconst baseToLocalByCommand = baseByCommand ? compareByCommand(baseByCommand, localByCommand, normalizedKeys) : { added: [...localByCommand.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tconst baseToRemoteByCommand = baseByCommand ? compareByCommand(baseByCommand, remoteByCommand, normalizedKeys) : { added: [...remoteByCommand.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\n\tconst commandsMergeResult = computeMergeResult(localToRemoteByCommand, baseToLocalByCommand, baseToRemoteByCommand);\n\tlet mergeContent = localContent;\n\n\t// Removed commands in Remote\n\tfor (const command of commandsMergeResult.removed.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = removeKeybindings(mergeContent, command, formattingOptions);\n\t}\n\n\t// Added commands in remote\n\tfor (const command of commandsMergeResult.added.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst keybindings = remoteByCommand.get(command)!;\n\t\t// Ignore negated commands\n\t\tif (keybindings.some(keybinding => keybinding.command !== `-${command}` && keybindingsMergeResult.conflicts.has(normalizedKeys[keybinding.key]))) {\n\t\t\tcommandsMergeResult.conflicts.add(command);\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = addKeybindings(mergeContent, keybindings, formattingOptions);\n\t}\n\n\t// Updated commands in Remote\n\tfor (const command of commandsMergeResult.updated.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst keybindings = remoteByCommand.get(command)!;\n\t\t// Ignore negated commands\n\t\tif (keybindings.some(keybinding => keybinding.command !== `-${command}` && keybindingsMergeResult.conflicts.has(normalizedKeys[keybinding.key]))) {\n\t\t\tcommandsMergeResult.conflicts.add(command);\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = updateKeybindings(mergeContent, command, keybindings, formattingOptions);\n\t}\n\n\treturn { mergeContent, hasChanges: true, hasConflicts: commandsMergeResult.conflicts.size > 0 };\n}\n\nfunction computeMergeResult(localToRemote: ICompareResult, baseToLocal: ICompareResult, baseToRemote: ICompareResult): { added: Set<string>, removed: Set<string>, updated: Set<string>, conflicts: Set<string> } {\n\tconst added: Set<string> = new Set<string>();\n\tconst removed: Set<string> = new Set<string>();\n\tconst updated: Set<string> = new Set<string>();\n\tconst conflicts: Set<string> = new Set<string>();\n\n\t// Removed keys in Local\n\tfor (const key of baseToLocal.removed.values()) {\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\tconflicts.add(key);\n\t\t}\n\t}\n\n\t// Removed keys in Remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\tconflicts.add(key);\n\t\t} else {\n\t\t\t// remove the key\n\t\t\tremoved.add(key);\n\t\t}\n\t}\n\n\t// Added keys in Local\n\tfor (const key of baseToLocal.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in remote\n\t\tif (baseToRemote.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Added keys in remote\n\tfor (const key of baseToRemote.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in local\n\t\tif (baseToLocal.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\tadded.add(key);\n\t\t}\n\t}\n\n\t// Updated keys in Local\n\tfor (const key of baseToLocal.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Updated keys in Remote\n\tfor (const key of baseToRemote.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\t// updated key\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\treturn { added, removed, updated, conflicts };\n}\n\nfunction computeMergeResultByKeybinding(local: IUserFriendlyKeybinding[], remote: IUserFriendlyKeybinding[], base: IUserFriendlyKeybinding[] | null, normalizedKeys: IStringDictionary<string>): IMergeResult {\n\tconst empty = new Set<string>();\n\tconst localByKeybinding = byKeybinding(local, normalizedKeys);\n\tconst remoteByKeybinding = byKeybinding(remote, normalizedKeys);\n\tconst baseByKeybinding = base ? byKeybinding(base, normalizedKeys) : null;\n\n\tconst localToRemoteByKeybinding = compareByKeybinding(localByKeybinding, remoteByKeybinding);\n\tif (localToRemoteByKeybinding.added.size === 0 && localToRemoteByKeybinding.removed.size === 0 && localToRemoteByKeybinding.updated.size === 0) {\n\t\treturn { hasLocalForwarded: false, hasRemoteForwarded: false, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst baseToLocalByKeybinding = baseByKeybinding ? compareByKeybinding(baseByKeybinding, localByKeybinding) : { added: [...localByKeybinding.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tif (baseToLocalByKeybinding.added.size === 0 && baseToLocalByKeybinding.removed.size === 0 && baseToLocalByKeybinding.updated.size === 0) {\n\t\t// Remote has moved forward and local has not.\n\t\treturn { hasLocalForwarded: false, hasRemoteForwarded: true, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst baseToRemoteByKeybinding = baseByKeybinding ? compareByKeybinding(baseByKeybinding, remoteByKeybinding) : { added: [...remoteByKeybinding.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tif (baseToRemoteByKeybinding.added.size === 0 && baseToRemoteByKeybinding.removed.size === 0 && baseToRemoteByKeybinding.updated.size === 0) {\n\t\treturn { hasLocalForwarded: true, hasRemoteForwarded: false, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst { added, removed, updated, conflicts } = computeMergeResult(localToRemoteByKeybinding, baseToLocalByKeybinding, baseToRemoteByKeybinding);\n\treturn { hasLocalForwarded: true, hasRemoteForwarded: true, added, removed, updated, conflicts };\n}\n\nfunction byKeybinding(keybindings: IUserFriendlyKeybinding[], keys: IStringDictionary<string>) {\n\tconst map: Map<string, IUserFriendlyKeybinding[]> = new Map<string, IUserFriendlyKeybinding[]>();\n\tfor (const keybinding of keybindings) {\n\t\tconst key = keys[keybinding.key];\n\t\tlet value = map.get(key);\n\t\tif (!value) {\n\t\t\tvalue = [];\n\t\t\tmap.set(key, value);\n\t\t}\n\t\tvalue.push(keybinding);\n\n\t}\n\treturn map;\n}\n\nfunction byCommand(keybindings: IUserFriendlyKeybinding[]): Map<string, IUserFriendlyKeybinding[]> {\n\tconst map: Map<string, IUserFriendlyKeybinding[]> = new Map<string, IUserFriendlyKeybinding[]>();\n\tfor (const keybinding of keybindings) {\n\t\tconst command = keybinding.command[0] === '-' ? keybinding.command.substring(1) : keybinding.command;\n\t\tlet value = map.get(command);\n\t\tif (!value) {\n\t\t\tvalue = [];\n\t\t\tmap.set(command, value);\n\t\t}\n\t\tvalue.push(keybinding);\n\t}\n\treturn map;\n}\n\n\nfunction compareByKeybinding(from: Map<string, IUserFriendlyKeybinding[]>, to: Map<string, IUserFriendlyKeybinding[]>): ICompareResult {\n\tconst fromKeys = [...from.keys()];\n\tconst toKeys = [...to.keys()];\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1: IUserFriendlyKeybinding[] = from.get(key)!.map(keybinding => ({ ...keybinding, ...{ key } }));\n\t\tconst value2: IUserFriendlyKeybinding[] = to.get(key)!.map(keybinding => ({ ...keybinding, ...{ key } }));\n\t\tif (!equals(value1, value2, (a, b) => isSameKeybinding(a, b))) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction compareByCommand(from: Map<string, IUserFriendlyKeybinding[]>, to: Map<string, IUserFriendlyKeybinding[]>, normalizedKeys: IStringDictionary<string>): ICompareResult {\n\tconst fromKeys = [...from.keys()];\n\tconst toKeys = [...to.keys()];\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1: IUserFriendlyKeybinding[] = from.get(key)!.map(keybinding => ({ ...keybinding, ...{ key: normalizedKeys[keybinding.key] } }));\n\t\tconst value2: IUserFriendlyKeybinding[] = to.get(key)!.map(keybinding => ({ ...keybinding, ...{ key: normalizedKeys[keybinding.key] } }));\n\t\tif (!areSameKeybindingsWithSameCommand(value1, value2)) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction areSameKeybindingsWithSameCommand(value1: IUserFriendlyKeybinding[], value2: IUserFriendlyKeybinding[]): boolean {\n\t// Compare entries adding keybindings\n\tif (!equals(value1.filter(({ command }) => command[0] !== '-'), value2.filter(({ command }) => command[0] !== '-'), (a, b) => isSameKeybinding(a, b))) {\n\t\treturn false;\n\t}\n\t// Compare entries removing keybindings\n\tif (!equals(value1.filter(({ command }) => command[0] === '-'), value2.filter(({ command }) => command[0] === '-'), (a, b) => isSameKeybinding(a, b))) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction isSameKeybinding(a: IUserFriendlyKeybinding, b: IUserFriendlyKeybinding): boolean {\n\tif (a.command !== b.command) {\n\t\treturn false;\n\t}\n\tif (a.key !== b.key) {\n\t\treturn false;\n\t}\n\tconst whenA = ContextKeyExpr.deserialize(a.when);\n\tconst whenB = ContextKeyExpr.deserialize(b.when);\n\tif ((whenA && !whenB) || (!whenA && whenB)) {\n\t\treturn false;\n\t}\n\tif (whenA && whenB && !whenA.equals(whenB)) {\n\t\treturn false;\n\t}\n\tif (!objects.equals(a.args, b.args)) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction addKeybindings(content: string, keybindings: IUserFriendlyKeybinding[], formattingOptions: FormattingOptions): string {\n\tfor (const keybinding of keybindings) {\n\t\tcontent = contentUtil.edit(content, [-1], keybinding, formattingOptions);\n\t}\n\treturn content;\n}\n\nfunction removeKeybindings(content: string, command: string, formattingOptions: FormattingOptions): string {\n\tconst keybindings = parseKeybindings(content);\n\tfor (let index = keybindings.length - 1; index >= 0; index--) {\n\t\tif (keybindings[index].command === command || keybindings[index].command === `-${command}`) {\n\t\t\tcontent = contentUtil.edit(content, [index], undefined, formattingOptions);\n\t\t}\n\t}\n\treturn content;\n}\n\nfunction updateKeybindings(content: string, command: string, keybindings: IUserFriendlyKeybinding[], formattingOptions: FormattingOptions): string {\n\tconst allKeybindings = parseKeybindings(content);\n\tconst location = allKeybindings.findIndex(keybinding => keybinding.command === command || keybinding.command === `-${command}`);\n\t// Remove all entries with this command\n\tfor (let index = allKeybindings.length - 1; index >= 0; index--) {\n\t\tif (allKeybindings[index].command === command || allKeybindings[index].command === `-${command}`) {\n\t\t\tcontent = contentUtil.edit(content, [index], undefined, formattingOptions);\n\t\t}\n\t}\n\t// add all entries at the same location where the entry with this command was located.\n\tfor (let index = keybindings.length - 1; index >= 0; index--) {\n\t\tcontent = contentUtil.edit(content, [location], keybindings[index], formattingOptions);\n\t}\n\treturn content;\n}\n"]}