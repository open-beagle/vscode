{"version":3,"sources":["vs/platform/userDataSync/common/settingsSync.ts"],"names":[],"mappings":"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","file":"settingsSync.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport {\n\tUserDataSyncError, UserDataSyncErrorCode, IUserDataSyncStoreService, IUserDataSyncLogService, IUserDataSyncUtilService, CONFIGURATION_SYNC_STORE_KEY,\n\tSyncResource, IUserDataSyncResourceEnablementService, IUserDataSyncBackupStoreService, USER_DATA_SYNC_SCHEME, ISyncResourceHandle, IUserDataSynchroniser,\n\tIRemoteUserData, ISyncData, Change\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { updateIgnoredSettings, merge, getIgnoredSettings, isEmpty } from 'vs/platform/userDataSync/common/settingsMerge';\nimport { edit } from 'vs/platform/userDataSync/common/content';\nimport { AbstractInitializer, AbstractJsonFileSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { Edit } from 'vs/base/common/jsonFormatter';\nimport { setProperty, applyEdits } from 'vs/base/common/jsonEdit';\n\ninterface ISettingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport interface ISettingsSyncContent {\n\tsettings: string;\n}\n\nfunction isSettingsSyncContent(thing: any): thing is ISettingsSyncContent {\n\treturn thing\n\t\t&& (thing.settings && typeof thing.settings === 'string')\n\t\t&& Object.keys(thing).length === 1;\n}\n\nexport function parseSettingsSyncContent(syncContent: string): ISettingsSyncContent {\n\tconst parsed = <ISettingsSyncContent>JSON.parse(syncContent);\n\treturn isSettingsSyncContent(parsed) ? parsed : /* migrate */ { settings: syncContent };\n}\n\nexport class SettingsSynchroniser extends AbstractJsonFileSynchroniser implements IUserDataSynchroniser {\n\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'settings.json');\n\treadonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\treadonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\treadonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper(environmentService.settingsResource, SyncResource.Settings, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService);\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, token: CancellationToken): Promise<ISettingsResourcePreview[]> {\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null = lastSyncUserData ? this.getSettingsSyncContent(lastSyncUserData) : null;\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteSettingsSyncContent) {\n\t\t\tlet localContent: string = fileContent ? fileContent.value.toString().trim() : '{}';\n\t\t\tlocalContent = localContent || '{}';\n\t\t\tthis.validateContent(localContent);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote settings with local settings...`);\n\t\t\tconst result = merge(localContent, remoteSettingsSyncContent.settings, lastSettingsSyncContent ? lastSettingsSyncContent.settings : null, ignoredSettings, [], formattingOptions);\n\t\t\tmergedContent = result.localContent || result.remoteContent;\n\t\t\thasLocalChanged = result.localContent !== null;\n\t\t\thasRemoteChanged = result.remoteContent !== null;\n\t\t\thasConflicts = result.hasConflicts;\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote settings does not exist. Synchronizing settings for the first time.`);\n\t\t\tmergedContent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult = {\n\t\t\tcontent: mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? Change.Modified : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\treturn [{\n\t\t\tfileContent,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : null,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ISettingsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\tconst formatUtils = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\treturn {\n\t\t\t...resourcePreview.previewResult,\n\n\t\t\t// remove ignored settings from the preview content\n\t\t\tcontent: resourcePreview.previewResult.content ? updateIgnoredSettings(resourcePreview.previewResult.content, '{}', ignoredSettings, formatUtils) : null\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ISettingsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\t/* Remove ignored settings */\n\t\t\t\tcontent: resourcePreview.fileContent ? updateIgnoredSettings(resourcePreview.fileContent.value.toString(), '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\t/* Update ignored settings from local file content */\n\t\t\t\tcontent: resourcePreview.remoteContent !== null ? updateIgnoredSettings(resourcePreview.remoteContent, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t/* Add ignored settings from local file content */\n\t\t\t\t\tcontent: content !== null ? updateIgnoredSettings(content, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ISettingsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing settings.`);\n\t\t}\n\n\t\tcontent = content ? content.trim() : '{}';\n\t\tcontent = content || '{}';\n\t\tthis.validateContent(content);\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local settings...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(JSON.stringify(this.toSettingsSyncContent(fileContent.value.toString())));\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\tawait this.configurationService.reloadConfiguration(ConfigurationTarget.USER_LOCAL);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local settings`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// Update ignored settings from remote\n\t\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings(content);\n\t\t\tcontent = updateIgnoredSettings(content, remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : '{}', ignoredSettings, formatUtils);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote settings...`);\n\t\t\tremoteUserData = await this.updateRemoteUserData(JSON.stringify(this.toSettingsSyncContent(content)), force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote settings`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized settings...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized settings`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t\tconst content = edit(localFileContent.value.toString(), [CONFIGURATION_SYNC_STORE_KEY], undefined, formatUtils);\n\t\t\t\treturn !isEmpty(content);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tconst comparableResource = (await this.fileService.exists(this.file)) ? this.file : this.localResource;\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'settings.json'), comparableResource }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst settingsSyncContent = this.parseSettingsSyncContent(syncData.content);\n\t\t\t\tif (settingsSyncContent) {\n\t\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\t\tcase 'settings.json':\n\t\t\t\t\t\t\treturn settingsSyncContent.settings;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected override async resolvePreviewContent(resource: URI): Promise<string | null> {\n\t\tlet content = await super.resolvePreviewContent(resource);\n\t\tif (content) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// remove ignored settings from the preview content\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\t\tcontent = updateIgnoredSettings(content, '{}', ignoredSettings, formatUtils);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate getSettingsSyncContent(remoteUserData: IRemoteUserData): ISettingsSyncContent | null {\n\t\treturn remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toSettingsSyncContent(settings: string): ISettingsSyncContent {\n\t\treturn { settings };\n\t}\n\n\tprivate _defaultIgnoredSettings: Promise<string[]> | undefined = undefined;\n\tprivate async getIgnoredSettings(content?: string): Promise<string[]> {\n\t\tif (!this._defaultIgnoredSettings) {\n\t\t\tthis._defaultIgnoredSettings = this.userDataSyncUtilService.resolveDefaultIgnoredSettings();\n\t\t\tconst disposable = Event.any<any>(\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtension, (e => !!e.gallery)),\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)))(() => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis._defaultIgnoredSettings = undefined;\n\t\t\t\t});\n\t\t}\n\t\tconst defaultIgnoredSettings = await this._defaultIgnoredSettings;\n\t\treturn getIgnoredSettings(defaultIgnoredSettings, this.configurationService, content);\n\t}\n\n\tprivate validateContent(content: string): void {\n\t\tif (this.hasErrors(content)) {\n\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync settings as there are errors/warning in settings file.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t}\n\t}\n\n\tasync recoverSettings(): Promise<void> {\n\t\ttry {\n\t\t\tconst fileContent = await this.getLocalFileContent();\n\t\t\tif (!fileContent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst syncData: ISyncData = JSON.parse(fileContent.value.toString());\n\t\t\tif (!isSyncData(syncData)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.telemetryService.publicLog2('sync/settingsCorrupted');\n\t\t\tconst settingsSyncContent = this.parseSettingsSyncContent(syncData.content);\n\t\t\tif (!settingsSyncContent || !settingsSyncContent.settings) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet settings = settingsSyncContent.settings;\n\t\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\t\tfor (const key in syncData) {\n\t\t\t\tif (['version', 'content', 'machineId'].indexOf(key) === -1 && (syncData as any)[key] !== undefined) {\n\t\t\t\t\tconst edits: Edit[] = setProperty(settings, [key], (syncData as any)[key], formattingOptions);\n\t\t\t\t\tif (edits.length) {\n\t\t\t\t\t\tsettings = applyEdits(settings, edits);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.fileService.writeFile(this.file, VSBuffer.fromString(settings));\n\t\t} catch (e) {/* ignore */ }\n\t}\n}\n\nexport class SettingsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper(SyncResource.Settings, environmentService, logService, fileService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst settingsSyncContent = remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t\tif (!settingsSyncContent) {\n\t\t\tthis.logService.info('Skipping initializing settings because remote settings does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing settings because local settings exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, VSBuffer.fromString(settingsSyncContent.settings));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(this.environmentService.settingsResource);\n\t\t\treturn isEmpty(fileContent.value.toString().trim());\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\nfunction isSyncData(thing: any): thing is ISyncData {\n\tif (thing\n\t\t&& (thing.version !== undefined && typeof thing.version === 'number')\n\t\t&& (thing.content !== undefined && typeof thing.content === 'string')\n\t\t&& (thing.machineId !== undefined && typeof thing.machineId === 'string')\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"]}