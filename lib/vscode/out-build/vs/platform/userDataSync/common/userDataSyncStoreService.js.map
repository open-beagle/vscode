{"version":3,"file":"userDataSyncStoreService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/userDataSyncStoreService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, toDisposable, } from 'vs/base/common/lifecycle';\nimport { IUserData, IUserDataSyncStoreService, UserDataSyncErrorCode, IUserDataSyncStore, ServerResource, UserDataSyncStoreError, IUserDataSyncLogService, IUserDataManifest, IResourceRefHandle, HEADER_OPERATION_ID, HEADER_EXECUTION_ID, CONFIGURATION_SYNC_STORE_KEY, IAuthenticationProvider, IUserDataSyncStoreManagementService, UserDataSyncStoreType, IUserDataSyncStoreClient, SYNC_SERVICE_URL_TYPE } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IRequestService, asText, isSuccess as isSuccessContext, asJson } from 'vs/platform/request/common/request';\nimport { joinPath, relativePath } from 'vs/base/common/resources';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IHeaders, IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConfigurationSyncStore } from 'vs/base/common/product';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { isWeb } from 'vs/base/common/platform';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createCancelablePromise, timeout, CancelablePromise } from 'vs/base/common/async';\nimport { isString, isObject, isArray } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { getErrorMessage, isPromiseCanceledError } from 'vs/base/common/errors';\n\nconst SYNC_PREVIOUS_STORE = 'sync.previous.store';\nconst DONOT_MAKE_REQUESTS_UNTIL_KEY = 'sync.donot-make-requests-until';\nconst USER_SESSION_ID_KEY = 'sync.user-session-id';\nconst MACHINE_SESSION_ID_KEY = 'sync.machine-session-id';\nconst REQUEST_SESSION_LIMIT = 100;\nconst REQUEST_SESSION_INTERVAL = 1000 * 60 * 5; /* 5 minutes */\n\ntype UserDataSyncStore = IUserDataSyncStore & { defaultType: UserDataSyncStoreType; };\n\nexport abstract class AbstractUserDataSyncStoreManagementService extends Disposable implements IUserDataSyncStoreManagementService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChangeUserDataSyncStore = this._register(new Emitter<void>());\n\treadonly onDidChangeUserDataSyncStore = this._onDidChangeUserDataSyncStore.event;\n\tprivate _userDataSyncStore: UserDataSyncStore | undefined;\n\tget userDataSyncStore(): UserDataSyncStore | undefined { return this._userDataSyncStore; }\n\n\tprotected get userDataSyncStoreType(): UserDataSyncStoreType | undefined {\n\t\treturn this.storageService.get(SYNC_SERVICE_URL_TYPE, StorageScope.GLOBAL) as UserDataSyncStoreType;\n\t}\n\tprotected set userDataSyncStoreType(type: UserDataSyncStoreType | undefined) {\n\t\tthis.storageService.store(SYNC_SERVICE_URL_TYPE, type, StorageScope.GLOBAL, isWeb ? StorageTarget.USER /* sync in web */ : StorageTarget.MACHINE);\n\t}\n\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStore();\n\t\tthis._register(Event.filter(storageService.onDidChangeValue, e => e.key === SYNC_SERVICE_URL_TYPE && e.scope === StorageScope.GLOBAL && this.userDataSyncStoreType !== this.userDataSyncStore?.type)(() => this.updateUserDataSyncStore()));\n\t}\n\n\tprotected updateUserDataSyncStore(): void {\n\t\tthis._userDataSyncStore = this.toUserDataSyncStore(this.productService[CONFIGURATION_SYNC_STORE_KEY], this.configurationService.getValue<ConfigurationSyncStore>(CONFIGURATION_SYNC_STORE_KEY));\n\t\tthis._onDidChangeUserDataSyncStore.fire();\n\t}\n\n\tprotected toUserDataSyncStore(productStore: ConfigurationSyncStore & { web?: ConfigurationSyncStore } | undefined, configuredStore?: ConfigurationSyncStore): UserDataSyncStore | undefined {\n\t\t// Check for web overrides for backward compatibility while reading previous store\n\t\tproductStore = isWeb && productStore?.web ? { ...productStore, ...productStore.web } : productStore;\n\t\tconst value: Partial<ConfigurationSyncStore> = { ...(productStore || {}), ...(configuredStore || {}) };\n\t\tif (value\n\t\t\t&& isString(value.url)\n\t\t\t&& isObject(value.authenticationProviders)\n\t\t\t&& Object.keys(value.authenticationProviders).every(authenticationProviderId => isArray(value!.authenticationProviders![authenticationProviderId].scopes))\n\t\t) {\n\t\t\tconst syncStore = value as ConfigurationSyncStore;\n\t\t\tconst canSwitch = !!syncStore.canSwitch && !configuredStore?.url;\n\t\t\tconst defaultType: UserDataSyncStoreType = syncStore.url === syncStore.insidersUrl ? 'insiders' : 'stable';\n\t\t\tconst type: UserDataSyncStoreType = (canSwitch ? this.userDataSyncStoreType : undefined) || defaultType;\n\t\t\tconst url = configuredStore?.url ||\n\t\t\t\t(type === 'insiders' ? syncStore.insidersUrl\n\t\t\t\t\t: type === 'stable' ? syncStore.stableUrl\n\t\t\t\t\t\t: syncStore.url);\n\t\t\treturn {\n\t\t\t\turl: URI.parse(url),\n\t\t\t\ttype,\n\t\t\t\tdefaultType,\n\t\t\t\tdefaultUrl: URI.parse(syncStore.url),\n\t\t\t\tstableUrl: URI.parse(syncStore.stableUrl),\n\t\t\t\tinsidersUrl: URI.parse(syncStore.insidersUrl),\n\t\t\t\tcanSwitch,\n\t\t\t\tauthenticationProviders: Object.keys(syncStore.authenticationProviders).reduce<IAuthenticationProvider[]>((result, id) => {\n\t\t\t\t\tresult.push({ id, scopes: syncStore!.authenticationProviders[id].scopes });\n\t\t\t\t\treturn result;\n\t\t\t\t}, [])\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tabstract switch(type: UserDataSyncStoreType): Promise<void>;\n\tabstract getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n\n}\n\nexport class UserDataSyncStoreManagementService extends AbstractUserDataSyncStoreManagementService implements IUserDataSyncStoreManagementService {\n\n\tprivate readonly previousConfigurationSyncStore: ConfigurationSyncStore | undefined;\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(productService, configurationService, storageService);\n\n\t\tconst previousConfigurationSyncStore = this.storageService.get(SYNC_PREVIOUS_STORE, StorageScope.GLOBAL);\n\t\tif (previousConfigurationSyncStore) {\n\t\t\tthis.previousConfigurationSyncStore = JSON.parse(previousConfigurationSyncStore);\n\t\t}\n\n\t\tconst syncStore = this.productService[CONFIGURATION_SYNC_STORE_KEY];\n\t\tif (syncStore) {\n\t\t\tthis.storageService.store(SYNC_PREVIOUS_STORE, JSON.stringify(syncStore), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(SYNC_PREVIOUS_STORE, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\tif (type !== this.userDataSyncStoreType) {\n\t\t\tthis.userDataSyncStoreType = type;\n\t\t\tthis.updateUserDataSyncStore();\n\t\t}\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined> {\n\t\treturn this.toUserDataSyncStore(this.previousConfigurationSyncStore);\n\t}\n}\n\nexport class UserDataSyncStoreClient extends Disposable implements IUserDataSyncStoreClient {\n\n\tprivate userDataSyncStoreUrl: URI | undefined;\n\n\tprivate authToken: { token: string, type: string } | undefined;\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\tprivate readonly session: RequestsSession;\n\n\tprivate _onTokenFailed: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTokenFailed: Event<void> = this._onTokenFailed.event;\n\n\tprivate _onTokenSucceed: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTokenSucceed: Event<void> = this._onTokenSucceed.event;\n\n\tprivate _donotMakeRequestsUntil: Date | undefined = undefined;\n\tget donotMakeRequestsUntil() { return this._donotMakeRequestsUntil; }\n\tprivate _onDidChangeDonotMakeRequestsUntil = this._register(new Emitter<void>());\n\treadonly onDidChangeDonotMakeRequestsUntil = this._onDidChangeDonotMakeRequestsUntil.event;\n\n\tconstructor(\n\t\tuserDataSyncStoreUrl: URI | undefined,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStoreUrl(userDataSyncStoreUrl);\n\t\tthis.commonHeadersPromise = getServiceMachineId(environmentService, fileService, storageService)\n\t\t\t.then(uuid => {\n\t\t\t\tconst headers: IHeaders = {\n\t\t\t\t\t'X-Client-Name': `${productService.applicationName}${isWeb ? '-web' : ''}`,\n\t\t\t\t\t'X-Client-Version': productService.version,\n\t\t\t\t\t'X-Machine-Id': uuid\n\t\t\t\t};\n\t\t\t\tif (productService.commit) {\n\t\t\t\t\theaders['X-Client-Commit'] = productService.commit;\n\t\t\t\t}\n\t\t\t\treturn headers;\n\t\t\t});\n\n\t\t/* A requests session that limits requests per sessions */\n\t\tthis.session = new RequestsSession(REQUEST_SESSION_LIMIT, REQUEST_SESSION_INTERVAL, this.requestService, this.logService);\n\t\tthis.initDonotMakeRequestsUntil();\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetAuthToken(token: string, type: string): void {\n\t\tthis.authToken = { token, type };\n\t}\n\n\tprotected updateUserDataSyncStoreUrl(userDataSyncStoreUrl: URI | undefined): void {\n\t\tthis.userDataSyncStoreUrl = userDataSyncStoreUrl ? joinPath(userDataSyncStoreUrl, 'v1') : undefined;\n\t}\n\n\tprivate initDonotMakeRequestsUntil(): void {\n\t\tconst donotMakeRequestsUntil = this.storageService.getNumber(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.GLOBAL);\n\t\tif (donotMakeRequestsUntil && Date.now() < donotMakeRequestsUntil) {\n\t\t\tthis.setDonotMakeRequestsUntil(new Date(donotMakeRequestsUntil));\n\t\t}\n\t}\n\n\tprivate resetDonotMakeRequestsUntilPromise: CancelablePromise<void> | undefined = undefined;\n\tprivate setDonotMakeRequestsUntil(donotMakeRequestsUntil: Date | undefined): void {\n\t\tif (this._donotMakeRequestsUntil?.getTime() !== donotMakeRequestsUntil?.getTime()) {\n\t\t\tthis._donotMakeRequestsUntil = donotMakeRequestsUntil;\n\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\n\t\t\tif (this._donotMakeRequestsUntil) {\n\t\t\t\tthis.storageService.store(DONOT_MAKE_REQUESTS_UNTIL_KEY, this._donotMakeRequestsUntil.getTime(), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = createCancelablePromise(token => timeout(this._donotMakeRequestsUntil!.getTime() - Date.now(), token).then(() => this.setDonotMakeRequestsUntil(undefined)));\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.then(null, e => null /* ignore error */);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.GLOBAL);\n\t\t\t}\n\n\t\t\tthis._onDidChangeDonotMakeRequestsUntil.fire();\n\t\t}\n\t}\n\n\tasync getAllRefs(resource: ServerResource): Promise<IResourceRefHandle[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst uri = joinPath(this.userDataSyncStoreUrl, 'resource', resource);\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(uri.toString(), { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\tconst result = await asJson<{ url: string, created: number }[]>(context) || [];\n\t\treturn result.map(({ url, created }) => ({ ref: relativePath(uri, uri.with({ path: url }))!, created: created * 1000 /* Server returns in seconds */ }));\n\t}\n\n\tasync resolveContent(resource: ServerResource, ref: string): Promise<string | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource, ref).toString();\n\t\tconst headers: IHeaders = {};\n\t\theaders['Cache-Control'] = 'no-cache';\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\t\tconst content = await asText(context);\n\t\treturn content;\n\t}\n\n\tasync delete(resource: ServerResource): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource).toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\t}\n\n\tasync read(resource: ServerResource, oldValue: IUserData | null, headers: IHeaders = {}): Promise<IUserData> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource, 'latest').toString();\n\t\theaders = { ...headers };\n\t\t// Disable caching as they are cached by synchronisers\n\t\theaders['Cache-Control'] = 'no-cache';\n\t\tif (oldValue) {\n\t\t\theaders['If-None-Match'] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [304], CancellationToken.None);\n\n\t\tif (context.res.statusCode === 304) {\n\t\t\t// There is no new value. Hence return the old value.\n\t\t\treturn oldValue!;\n\t\t}\n\n\t\tconst ref = context.res.headers['etag'];\n\t\tif (!ref) {\n\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\t\tconst content = await asText(context);\n\t\treturn { ref, content };\n\t}\n\n\tasync write(resource: ServerResource, data: string, ref: string | null, headers: IHeaders = {}): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource).toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = 'text/plain';\n\t\tif (ref) {\n\t\t\theaders['If-Match'] = ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'POST', data, headers }, [], CancellationToken.None);\n\n\t\tconst newRef = context.res.headers['etag'];\n\t\tif (!newRef) {\n\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\t\treturn newRef;\n\t}\n\n\tasync manifest(headers: IHeaders = {}): Promise<IUserDataManifest | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'manifest').toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = 'application/json';\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\tconst manifest = await asJson<IUserDataManifest>(context);\n\t\tconst currentSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\n\t\tif (currentSessionId && manifest && currentSessionId !== manifest.session) {\n\t\t\t// Server session is different from client session so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest === null && currentSessionId) {\n\t\t\t// server session is cleared so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest) {\n\t\t\t// update session\n\t\t\tthis.storageService.store(USER_SESSION_ID_KEY, manifest.session, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}\n\n\t\treturn manifest;\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource').toString();\n\t\tconst headers: IHeaders = { 'Content-Type': 'text/plain' };\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\n\t\t// clear cached session.\n\t\tthis.clearSession();\n\t}\n\n\tprivate clearSession(): void {\n\t\tthis.storageService.remove(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tthis.storageService.remove(MACHINE_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t}\n\n\tprivate async request(url: string, options: IRequestOptions, successCodes: number[], token: CancellationToken): Promise<IRequestContext> {\n\t\tif (!this.authToken) {\n\t\t\tthrow new UserDataSyncStoreError('No Auth Token Available', url, UserDataSyncErrorCode.Unauthorized, undefined);\n\t\t}\n\n\t\tif (this._donotMakeRequestsUntil && Date.now() < this._donotMakeRequestsUntil.getTime()) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, undefined);\n\t\t}\n\t\tthis.setDonotMakeRequestsUntil(undefined);\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\toptions.headers = {\n\t\t\t...(options.headers || {}),\n\t\t\t...commonHeaders,\n\t\t\t'X-Account-Type': this.authToken.type,\n\t\t\t'authorization': `Bearer ${this.authToken.token}`,\n\t\t};\n\n\t\t// Add session headers\n\t\tthis.addSessionHeaders(options.headers);\n\n\t\tthis.logService.trace('Sending request to server', { url, type: options.type, headers: { ...options.headers, ...{ authorization: undefined } } });\n\n\t\tlet context;\n\t\ttry {\n\t\t\tcontext = await this.session.request(url, options, token);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof UserDataSyncStoreError)) {\n\t\t\t\tconst code = isPromiseCanceledError(e) ? UserDataSyncErrorCode.RequestCanceled\n\t\t\t\t\t: getErrorMessage(e).startsWith('XHR timeout') ? UserDataSyncErrorCode.RequestTimeout : UserDataSyncErrorCode.RequestFailed;\n\t\t\t\te = new UserDataSyncStoreError(`Connection refused for the request '${url}'.`, url, code, undefined);\n\t\t\t}\n\t\t\tthis.logService.info('Request failed', url);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst operationId = context.res.headers[HEADER_OPERATION_ID];\n\t\tconst requestInfo = { url, status: context.res.statusCode, 'execution-id': options.headers[HEADER_EXECUTION_ID], 'operation-id': operationId };\n\t\tconst isSuccess = isSuccessContext(context) || (context.res.statusCode && successCodes.indexOf(context.res.statusCode) !== -1);\n\t\tif (isSuccess) {\n\t\t\tthis.logService.trace('Request succeeded', requestInfo);\n\t\t} else {\n\t\t\tthis.logService.info('Request failed', requestInfo);\n\t\t}\n\n\t\tif (context.res.statusCode === 401) {\n\t\t\tthis.authToken = undefined;\n\t\t\tthis._onTokenFailed.fire();\n\t\t\tthrow new UserDataSyncStoreError(`Request '${url}' failed because of Unauthorized (401).`, url, UserDataSyncErrorCode.Unauthorized, operationId);\n\t\t}\n\n\t\tthis._onTokenSucceed.fire();\n\n\t\tif (context.res.statusCode === 409) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Conflict (409). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.Conflict, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 410) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the requested resource is not longer available (410).`, url, UserDataSyncErrorCode.Gone, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 412) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Precondition Failed (412). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.PreconditionFailed, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 413) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too large payload (413).`, url, UserDataSyncErrorCode.TooLarge, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 426) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed with status Upgrade Required (426). Please upgrade the client and try again.`, url, UserDataSyncErrorCode.UpgradeRequired, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 429) {\n\t\t\tconst retryAfter = context.res.headers['retry-after'];\n\t\t\tif (retryAfter) {\n\t\t\t\tthis.setDonotMakeRequestsUntil(new Date(Date.now() + (parseInt(retryAfter) * 1000)));\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, operationId);\n\t\t\t} else {\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequests, operationId);\n\t\t\t}\n\t\t}\n\n\t\tif (!isSuccess) {\n\t\t\tthrow new UserDataSyncStoreError('Server returned ' + context.res.statusCode, url, UserDataSyncErrorCode.Unknown, operationId);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tprivate addSessionHeaders(headers: IHeaders): void {\n\t\tlet machineSessionId = this.storageService.get(MACHINE_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tif (machineSessionId === undefined) {\n\t\t\tmachineSessionId = generateUuid();\n\t\t\tthis.storageService.store(MACHINE_SESSION_ID_KEY, machineSessionId, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}\n\t\theaders['X-Machine-Session-Id'] = machineSessionId;\n\n\t\tconst userSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tif (userSessionId !== undefined) {\n\t\t\theaders['X-User-Session-Id'] = userSessionId;\n\t\t}\n\t}\n\n}\n\nexport class UserDataSyncStoreService extends UserDataSyncStoreClient implements IUserDataSyncStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreManagementService userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(userDataSyncStoreManagementService.userDataSyncStore?.url, productService, requestService, logService, environmentService, fileService, storageService);\n\t\tthis._register(userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => this.updateUserDataSyncStoreUrl(userDataSyncStoreManagementService.userDataSyncStore?.url)));\n\t}\n}\n\nexport class RequestsSession {\n\n\tprivate requests: string[] = [];\n\tprivate startTime: Date | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly limit: number,\n\t\tprivate readonly interval: number, /* in ms */\n\t\tprivate readonly requestService: IRequestService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) { }\n\n\trequest(url: string, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tif (this.isExpired()) {\n\t\t\tthis.reset();\n\t\t}\n\n\t\toptions.url = url;\n\n\t\tif (this.requests.length >= this.limit) {\n\t\t\tthis.logService.info('Too many requests', ...this.requests);\n\t\t\tthrow new UserDataSyncStoreError(`Too many requests. Only ${this.limit} requests allowed in ${this.interval / (1000 * 60)} minutes.`, url, UserDataSyncErrorCode.LocalTooManyRequests, undefined);\n\t\t}\n\n\t\tthis.startTime = this.startTime || new Date();\n\t\tthis.requests.push(url);\n\n\t\treturn this.requestService.request(options, token);\n\t}\n\n\tprivate isExpired(): boolean {\n\t\treturn this.startTime !== undefined && new Date().getTime() - this.startTime.getTime() > this.interval;\n\t}\n\n\tprivate reset(): void {\n\t\tthis.requests = [];\n\t\tthis.startTime = undefined;\n\t}\n\n}\n"]}