{"version":3,"sources":["vs/platform/userDataSync/common/keybindingsSync.ts"],"names":[],"mappings":"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","file":"keybindingsSync.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport {\n\tUserDataSyncError, UserDataSyncErrorCode, IUserDataSyncStoreService, IUserDataSyncLogService, IUserDataSyncUtilService, SyncResource,\n\tIUserDataSynchroniser, IUserDataSyncResourceEnablementService, IUserDataSyncBackupStoreService, USER_DATA_SYNC_SCHEME, ISyncResourceHandle,\n\tIRemoteUserData, Change\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { merge } from 'vs/platform/userDataSync/common/keybindingsMerge';\nimport { parse } from 'vs/base/common/json';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { OS, OperatingSystem } from 'vs/base/common/platform';\nimport { isUndefined } from 'vs/base/common/types';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { AbstractInitializer, AbstractJsonFileSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { URI } from 'vs/base/common/uri';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Event } from 'vs/base/common/event';\n\ninterface ISyncContent {\n\tmac?: string;\n\tlinux?: string;\n\twindows?: string;\n\tall?: string;\n}\n\ninterface IKeybindingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tplatformSpecific?: boolean;\n}\n\nexport function getKeybindingsContentFromSyncContent(syncContent: string, platformSpecific: boolean): string | null {\n\tconst parsed = <ISyncContent>JSON.parse(syncContent);\n\tif (!platformSpecific) {\n\t\treturn isUndefined(parsed.all) ? null : parsed.all;\n\t}\n\tswitch (OS) {\n\t\tcase OperatingSystem.Macintosh:\n\t\t\treturn isUndefined(parsed.mac) ? null : parsed.mac;\n\t\tcase OperatingSystem.Linux:\n\t\t\treturn isUndefined(parsed.linux) ? null : parsed.linux;\n\t\tcase OperatingSystem.Windows:\n\t\t\treturn isUndefined(parsed.windows) ? null : parsed.windows;\n\t}\n}\n\nexport class KeybindingsSynchroniser extends AbstractJsonFileSynchroniser implements IUserDataSynchroniser {\n\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'keybindings.json');\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(environmentService.keybindingsResource, SyncResource.Keybindings, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService);\n\t\tthis._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('settingsSync.keybindingsPerPlatform'))(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: ILastSyncUserData | null, token: CancellationToken): Promise<IKeybindingsResourcePreview[]> {\n\t\tconst remoteContent = remoteUserData.syncData ? this.getKeybindingsContentFromSyncContent(remoteUserData.syncData.content) : null;\n\t\tconst lastSyncContent: string | null = lastSyncUserData ? this.getKeybindingsContentFromLastSyncUserData(lastSyncUserData) : null;\n\n\t\t// Get file content last to get the latest\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteContent) {\n\t\t\tlet localContent: string = fileContent ? fileContent.value.toString() : '[]';\n\t\t\tlocalContent = localContent || '[]';\n\t\t\tif (this.hasErrors(localContent)) {\n\t\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t\t}\n\n\t\t\tif (!lastSyncContent // First time sync\n\t\t\t\t|| lastSyncContent !== localContent // Local has forwarded\n\t\t\t\t|| lastSyncContent !== remoteContent // Remote has forwarded\n\t\t\t) {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote keybindings with local keybindings...`);\n\t\t\t\tconst result = await merge(localContent, remoteContent, lastSyncContent, formattingOptions, this.userDataSyncUtilService);\n\t\t\t\t// Sync only if there are changes\n\t\t\t\tif (result.hasChanges) {\n\t\t\t\t\tmergedContent = result.mergeContent;\n\t\t\t\t\thasConflicts = result.hasConflicts;\n\t\t\t\t\thasLocalChanged = hasConflicts || result.mergeContent !== localContent;\n\t\t\t\t\thasRemoteChanged = hasConflicts || result.mergeContent !== remoteContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote keybindings does not exist. Synchronizing keybindings for the first time.`);\n\t\t\tmergedContent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult: IMergeResult = {\n\t\t\tcontent: mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? fileContent ? Change.Modified : Change.Added : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\treturn [{\n\t\t\tfileContent,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IKeybindingsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IKeybindingsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IKeybindingsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing keybindings.`);\n\t\t}\n\n\t\tif (content !== null) {\n\t\t\tcontent = content.trim();\n\t\t\tcontent = content || '[]';\n\t\t\tif (this.hasErrors(content)) {\n\t\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t\t}\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local keybindings...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(this.toSyncContent(fileContent.value.toString()));\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content || '[]', fileContent, force);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local keybindings`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote keybindings...`);\n\t\t\tconst remoteContents = this.toSyncContent(content || '[]', remoteUserData.syncData?.content);\n\t\t\tremoteUserData = await this.updateRemoteUserData(remoteContents, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote keybindings`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized keybindings...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, { platformSpecific: this.syncKeybindingsPerPlatform() });\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized keybindings`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\tconst keybindings = parse(localFileContent.value.toString());\n\t\t\t\tif (isNonEmptyArray(keybindings)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tconst comparableResource = (await this.fileService.exists(this.file)) ? this.file : this.localResource;\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'keybindings.json'), comparableResource }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\tcase 'keybindings.json':\n\t\t\t\t\t\treturn this.getKeybindingsContentFromSyncContent(syncData.content);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getKeybindingsContentFromLastSyncUserData(lastSyncUserData: ILastSyncUserData): string | null {\n\t\tif (!lastSyncUserData.syncData) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Return null if there is a change in platform specific property from last time sync.\n\t\tif (lastSyncUserData.platformSpecific !== undefined && lastSyncUserData.platformSpecific !== this.syncKeybindingsPerPlatform()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getKeybindingsContentFromSyncContent(lastSyncUserData.syncData.content);\n\t}\n\n\tprivate getKeybindingsContentFromSyncContent(syncContent: string): string | null {\n\t\ttry {\n\t\t\treturn getKeybindingsContentFromSyncContent(syncContent, this.syncKeybindingsPerPlatform());\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate toSyncContent(keybindingsContent: string, syncContent?: string): string {\n\t\tlet parsed: ISyncContent = {};\n\t\ttry {\n\t\t\tparsed = JSON.parse(syncContent || '{}');\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tif (!this.syncKeybindingsPerPlatform()) {\n\t\t\tparsed.all = keybindingsContent;\n\t\t} else {\n\t\t\tdelete parsed.all;\n\t\t}\n\t\tswitch (OS) {\n\t\t\tcase OperatingSystem.Macintosh:\n\t\t\t\tparsed.mac = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Linux:\n\t\t\t\tparsed.linux = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Windows:\n\t\t\t\tparsed.windows = keybindingsContent;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn JSON.stringify(parsed);\n\t}\n\n\tprivate syncKeybindingsPerPlatform(): boolean {\n\t\tlet userValue = this.configurationService.inspect<boolean>('settingsSync.keybindingsPerPlatform').userValue;\n\t\tif (userValue !== undefined) {\n\t\t\treturn userValue;\n\t\t}\n\t\tuserValue = this.configurationService.inspect<boolean>('sync.keybindingsPerPlatform').userValue;\n\t\tif (userValue !== undefined) {\n\t\t\treturn userValue;\n\t\t}\n\t\treturn this.configurationService.getValue<boolean>('settingsSync.keybindingsPerPlatform');\n\t}\n\n}\n\nexport class KeybindingsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper(SyncResource.Keybindings, environmentService, logService, fileService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst keybindingsContent = remoteUserData.syncData ? this.getKeybindingsContentFromSyncContent(remoteUserData.syncData.content) : null;\n\t\tif (!keybindingsContent) {\n\t\t\tthis.logService.info('Skipping initializing keybindings because remote keybindings does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing keybindings because local keybindings exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.environmentService.keybindingsResource, VSBuffer.fromString(keybindingsContent));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(this.environmentService.settingsResource);\n\t\t\tconst keybindings = parse(fileContent.value.toString());\n\t\t\treturn !isNonEmptyArray(keybindings);\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n\tprivate getKeybindingsContentFromSyncContent(syncContent: string): string | null {\n\t\ttry {\n\t\t\treturn getKeybindingsContentFromSyncContent(syncContent, true);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n"]}