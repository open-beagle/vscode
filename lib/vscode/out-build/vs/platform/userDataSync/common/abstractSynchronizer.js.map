{"version":3,"sources":["vs/platform/userDataSync/common/abstractSynchronizer.ts"],"names":[],"mappings":"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","file":"abstractSynchronizer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileContent, FileChangesEvent, FileOperationResult, FileOperationError, FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { URI } from 'vs/base/common/uri';\nimport {\n\tSyncResource, SyncStatus, IUserData, IUserDataSyncStoreService, UserDataSyncErrorCode, UserDataSyncError, IUserDataSyncLogService, IUserDataSyncUtilService,\n\tIUserDataSyncResourceEnablementService, IUserDataSyncBackupStoreService, ISyncResourceHandle, USER_DATA_SYNC_SCHEME, ISyncResourcePreview as IBaseSyncResourcePreview,\n\tIUserDataManifest, ISyncData, IRemoteUserData, PREVIEW_DIR_NAME, IResourcePreview as IBaseResourcePreview, Change, MergeState, IUserDataInitializer\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { CancelablePromise, RunOnceScheduler, createCancelablePromise } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ParseError, parse } from 'vs/base/common/json';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { isString } from 'vs/base/common/types';\nimport { uppercaseFirstLetter } from 'vs/base/common/strings';\nimport { equals } from 'vs/base/common/arrays';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\n\ntype SyncSourceClassification = {\n\tsource?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nexport function isSyncData(thing: any): thing is ISyncData {\n\tif (thing\n\t\t&& (thing.version !== undefined && typeof thing.version === 'number')\n\t\t&& (thing.content !== undefined && typeof thing.content === 'string')) {\n\n\t\t// backward compatibility\n\t\tif (Object.keys(thing).length === 2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Object.keys(thing).length === 3\n\t\t\t&& (thing.machineId !== undefined && typeof thing.machineId === 'string')) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getLastSyncResourceUri(syncResource: SyncResource, environmentService: IEnvironmentService, extUri: IExtUri): URI {\n\treturn extUri.joinPath(environmentService.userDataSyncHome, syncResource, `lastSync${syncResource}.json`);\n}\n\nexport interface IResourcePreview {\n\n\treadonly remoteResource: URI;\n\treadonly remoteContent: string | null;\n\treadonly remoteChange: Change;\n\n\treadonly localResource: URI;\n\treadonly localContent: string | null;\n\treadonly localChange: Change;\n\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n}\n\nexport interface IAcceptResult {\n\treadonly content: string | null;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n}\n\nexport interface IMergeResult extends IAcceptResult {\n\treadonly hasConflicts: boolean;\n}\n\ninterface IEditableResourcePreview extends IBaseResourcePreview, IResourcePreview {\n\tlocalChange: Change;\n\tremoteChange: Change;\n\tmergeState: MergeState;\n\tacceptResult?: IAcceptResult;\n}\n\ninterface ISyncResourcePreview extends IBaseSyncResourcePreview {\n\treadonly remoteUserData: IRemoteUserData;\n\treadonly lastSyncUserData: IRemoteUserData | null;\n\treadonly resourcePreviews: IEditableResourcePreview[];\n}\n\nexport abstract class AbstractSynchroniser extends Disposable {\n\n\tprivate syncPreviewPromise: CancelablePromise<ISyncResourcePreview> | null = null;\n\n\tprotected readonly syncFolder: URI;\n\tprotected readonly syncPreviewFolder: URI;\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly currentMachineIdPromise: Promise<string>;\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangStatus.event;\n\n\tprivate _conflicts: IBaseResourcePreview[] = [];\n\tget conflicts(): IBaseResourcePreview[] { return this._conflicts; }\n\tprivate _onDidChangeConflicts: Emitter<IBaseResourcePreview[]> = this._register(new Emitter<IBaseResourcePreview[]>());\n\treadonly onDidChangeConflicts: Event<IBaseResourcePreview[]> = this._onDidChangeConflicts.event;\n\n\tprivate readonly localChangeTriggerScheduler = new RunOnceScheduler(() => this.doTriggerLocalChange(), 50);\n\tprivate readonly _onDidChangeLocal: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeLocal: Event<void> = this._onDidChangeLocal.event;\n\n\tprotected readonly lastSyncResource: URI;\n\tprivate hasSyncResourceStateVersionChanged: boolean = false;\n\tprotected readonly syncResourceLogLabel: string;\n\n\tprivate syncHeaders: IHeaders = {};\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService protected readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService protected readonly userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService protected readonly userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService protected readonly logService: IUserDataSyncLogService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.syncResourceLogLabel = uppercaseFirstLetter(this.resource);\n\t\tthis.extUri = this.fileService.hasCapability(environmentService.userDataSyncHome, FileSystemProviderCapabilities.PathCaseSensitive) ? extUri : extUriIgnorePathCase;\n\t\tthis.syncFolder = this.extUri.joinPath(environmentService.userDataSyncHome, resource);\n\t\tthis.syncPreviewFolder = this.extUri.joinPath(this.syncFolder, PREVIEW_DIR_NAME);\n\t\tthis.lastSyncResource = getLastSyncResourceUri(resource, environmentService, this.extUri);\n\t\tthis.currentMachineIdPromise = getServiceMachineId(environmentService, fileService, storageService);\n\t}\n\n\tprotected isEnabled(): boolean { return this.userDataSyncResourceEnablementService.isResourceEnabled(this.resource); }\n\n\tprotected async triggerLocalChange(): Promise<void> {\n\t\tif (this.isEnabled()) {\n\t\t\tthis.localChangeTriggerScheduler.schedule();\n\t\t}\n\t}\n\n\tprotected async doTriggerLocalChange(): Promise<void> {\n\n\t\t// Sync again if current status is in conflicts\n\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: In conflicts state and local change detected. Syncing again...`);\n\t\t\tconst preview = await this.syncPreviewPromise!;\n\t\t\tthis.syncPreviewPromise = null;\n\t\t\tconst status = await this.performSync(preview.remoteUserData, preview.lastSyncUserData, true);\n\t\t\tthis.setStatus(status);\n\t\t}\n\n\t\t// Check if local change causes remote change\n\t\telse {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Checking for local changes...`);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst hasRemoteChanged = lastSyncUserData ? (await this.doGenerateSyncResourcePreview(lastSyncUserData, lastSyncUserData, true, CancellationToken.None)).resourcePreviews.some(({ remoteChange }) => remoteChange !== Change.None) : true;\n\t\t\tif (hasRemoteChanged) {\n\t\t\t\tthis._onDidChangeLocal.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tconst oldStatus = this._status;\n\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t// Log to telemetry when there is a sync conflict\n\t\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/conflictsDetected', { source: this.resource });\n\t\t\t}\n\t\t\tif (oldStatus === SyncStatus.HasConflicts && status === SyncStatus.Idle) {\n\t\t\t\t// Log to telemetry when conflicts are resolved\n\t\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/conflictsResolved', { source: this.resource });\n\t\t\t}\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangStatus.fire(status);\n\t\t}\n\t}\n\n\tasync sync(manifest: IUserDataManifest | null, headers: IHeaders = {}): Promise<void> {\n\t\tawait this._sync(manifest, true, headers);\n\t}\n\n\tasync preview(manifest: IUserDataManifest | null, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\treturn this._sync(manifest, false, headers);\n\t}\n\n\tasync apply(force: boolean, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tconst status = await this.doApply(force);\n\t\t\tthis.setStatus(status);\n\n\t\t\treturn this.syncPreviewPromise;\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tprivate async _sync(manifest: IUserDataManifest | null, apply: boolean, headers: IHeaders): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tif (!this.isEnabled()) {\n\t\t\t\tif (this.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait this.stop();\n\t\t\t\t}\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is disabled.`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as there are conflicts.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.Syncing) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is running already.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started synchronizing ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\n\t\t\tlet status: SyncStatus = SyncStatus.Idle;\n\t\t\ttry {\n\t\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\t\t\tstatus = await this.performSync(remoteUserData, lastSyncUserData, apply);\n\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Detected conflicts while synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t} else if (status === SyncStatus.Idle) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Finished synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t}\n\t\t\t\treturn this.syncPreviewPromise || null;\n\t\t\t} finally {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tasync replace(uri: URI): Promise<boolean> {\n\t\tconst content = await this.resolveContent(uri);\n\t\tif (!content) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait this.stop();\n\n\t\ttry {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started resetting ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(null, lastSyncUserData);\n\n\t\t\t/* use replace sync data */\n\t\t\tconst resourcePreviewResults = await this.generateSyncPreview({ ref: remoteUserData.ref, syncData }, lastSyncUserData, CancellationToken.None);\n\n\t\t\tconst resourcePreviews: [IResourcePreview, IAcceptResult][] = [];\n\t\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\t\t/* Accept remote resource */\n\t\t\t\tconst acceptResult: IAcceptResult = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.remoteResource, undefined, CancellationToken.None);\n\t\t\t\t/* compute remote change */\n\t\t\t\tconst { remoteChange } = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, resourcePreviewResult.remoteContent, CancellationToken.None);\n\t\t\t\tresourcePreviews.push([resourcePreviewResult, { ...acceptResult, remoteChange: remoteChange !== Change.None ? remoteChange : Change.Modified }]);\n\t\t\t}\n\n\t\t\tawait this.applyResult(remoteUserData, lastSyncUserData, resourcePreviews, false);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Finished resetting ${this.resource.toLowerCase()}.`);\n\t\t} finally {\n\t\t\tthis.setStatus(SyncStatus.Idle);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async getLatestRemoteUserData(manifest: IUserDataManifest | null, lastSyncUserData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tif (lastSyncUserData) {\n\n\t\t\tconst latestRef = manifest && manifest.latest ? manifest.latest[this.resource] : undefined;\n\n\t\t\t// Last time synced resource and latest resource on server are same\n\t\t\tif (lastSyncUserData.ref === latestRef) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\n\t\t\t// There is no resource on server and last time it was synced with no resource\n\t\t\tif (latestRef === undefined && lastSyncUserData.syncData === null) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\t\t}\n\t\treturn this.getRemoteUserData(lastSyncUserData);\n\t}\n\n\tprivate async performSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean): Promise<SyncStatus> {\n\t\tif (remoteUserData.syncData && remoteUserData.syncData.version > this.version) {\n\t\t\t// current version is not compatible with cloud version\n\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/incompatible', { source: this.resource });\n\t\t\tthrow new UserDataSyncError(localize({ key: 'incompatible', comment: ['This is an error while syncing a resource that its local version is not compatible with its remote version.'] }, \"Cannot sync {0} as its local version {1} is not compatible with its remote version {2}\", this.resource, this.version, remoteUserData.syncData.version), UserDataSyncErrorCode.IncompatibleLocalContent, this.resource);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.doSync(remoteUserData, lastSyncUserData, apply);\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\n\t\t\t\t\tcase UserDataSyncErrorCode.LocalPreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new local version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize ${this.syncResourceLogLabel} as there is a new local version available. Synchronizing again...`);\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply);\n\n\t\t\t\t\tcase UserDataSyncErrorCode.Conflict:\n\t\t\t\t\tcase UserDataSyncErrorCode.PreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new remote version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize as there is a new remote version available. Synchronizing again...`);\n\n\t\t\t\t\t\t// Avoid cache and get latest remote user data - https://github.com/microsoft/vscode/issues/90624\n\t\t\t\t\t\tremoteUserData = await this.getRemoteUserData(null);\n\n\t\t\t\t\t\t// Get the latest last sync user data. Because multiples parallel syncs (in Web) could share same last sync data\n\t\t\t\t\t\t// and one of them successfully updated remote and last sync state.\n\t\t\t\t\t\tlastSyncUserData = await this.getLastSyncUserData();\n\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprotected async doSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean): Promise<SyncStatus> {\n\t\ttry {\n\t\t\t// generate or use existing preview\n\t\t\tif (!this.syncPreviewPromise) {\n\t\t\t\tthis.syncPreviewPromise = createCancelablePromise(token => this.doGenerateSyncResourcePreview(remoteUserData, lastSyncUserData, apply, token));\n\t\t\t}\n\n\t\t\tconst preview = await this.syncPreviewPromise;\n\t\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\t\treturn SyncStatus.HasConflicts;\n\t\t\t}\n\n\t\t\tif (apply) {\n\t\t\t\treturn await this.doApply(false);\n\t\t\t}\n\n\t\t\treturn SyncStatus.Syncing;\n\n\t\t} catch (error) {\n\n\t\t\t// reset preview on error\n\t\t\tthis.syncPreviewPromise = null;\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\t\t\tconst acceptResult: IAcceptResult | undefined = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t? await this.getAcceptResult(resourcePreview, resourcePreview.previewResource, undefined, CancellationToken.None)\n\t\t\t\t: undefined;\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = mergeResult.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview;\n\t\t\tresourcePreview.localChange = acceptResult ? acceptResult.localChange : mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult ? acceptResult.remoteChange : mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst acceptResult = await this.getAcceptResult(resourcePreview, resource, content, CancellationToken.None);\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = MergeState.Accepted;\n\t\t\tresourcePreview.localChange = acceptResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync discard(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult.content || ''));\n\t\t\tresourcePreview.acceptResult = undefined;\n\t\t\tresourcePreview.mergeState = MergeState.Preview;\n\t\t\tresourcePreview.localChange = mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tprivate async updateSyncResourcePreview(resource: URI, updateResourcePreview: (resourcePreview: IEditableResourcePreview) => Promise<IEditableResourcePreview>): Promise<void> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet preview = await this.syncPreviewPromise;\n\t\tconst index = preview.resourcePreviews.findIndex(({ localResource, remoteResource, previewResource }) =>\n\t\t\tthis.extUri.isEqual(localResource, resource) || this.extUri.isEqual(remoteResource, resource) || this.extUri.isEqual(previewResource, resource));\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.syncPreviewPromise = createCancelablePromise(async token => {\n\t\t\tconst resourcePreviews = [...preview.resourcePreviews];\n\t\t\tresourcePreviews[index] = await updateResourcePreview(resourcePreviews[index]);\n\t\t\treturn {\n\t\t\t\t...preview,\n\t\t\t\tresourcePreviews\n\t\t\t};\n\t\t});\n\n\t\tpreview = await this.syncPreviewPromise;\n\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\tthis.setStatus(SyncStatus.HasConflicts);\n\t\t} else {\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t}\n\t}\n\n\tprivate async doApply(force: boolean): Promise<SyncStatus> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\tconst preview = await this.syncPreviewPromise;\n\n\t\t// check for conflicts\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\n\t\t// check if all are accepted\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState !== MergeState.Accepted)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\n\t\t// apply preview\n\t\tawait this.applyResult(preview.remoteUserData, preview.lastSyncUserData, preview.resourcePreviews.map(resourcePreview => ([resourcePreview, resourcePreview.acceptResult!])), force);\n\n\t\t// reset preview\n\t\tthis.syncPreviewPromise = null;\n\n\t\t// reset preview folder\n\t\tawait this.clearPreviewFolder();\n\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate async clearPreviewFolder(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.syncPreviewFolder, { recursive: true });\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tprivate updateConflicts(resourcePreviews: IEditableResourcePreview[]): void {\n\t\tconst conflicts = resourcePreviews.filter(({ mergeState }) => mergeState === MergeState.Conflict);\n\t\tif (!equals(this._conflicts, conflicts, (a, b) => this.extUri.isEqual(a.previewResource, b.previewResource))) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst lastSyncData = await this.getLastSyncUserData();\n\t\treturn !!lastSyncData;\n\t}\n\n\tasync getRemoteSyncResourceHandles(): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncStoreService.getAllRefs(this.resource);\n\t\treturn handles.map(({ created, ref }) => ({ created, uri: this.toRemoteBackupResource(ref) }));\n\t}\n\n\tasync getLocalSyncResourceHandles(): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncBackupStoreService.getAllRefs(this.resource);\n\t\treturn handles.map(({ created, ref }) => ({ created, uri: this.toLocalBackupResource(ref) }));\n\t}\n\n\tprivate toRemoteBackupResource(ref: string): URI {\n\t\treturn URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote-backup', path: `/${this.resource}/${ref}` });\n\t}\n\n\tprivate toLocalBackupResource(ref: string): URI {\n\t\treturn URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local-backup', path: `/${this.resource}/${ref}` });\n\t}\n\n\tasync getMachineId({ uri }: ISyncResourceHandle): Promise<string | undefined> {\n\t\tconst ref = this.extUri.basename(uri);\n\t\tif (this.extUri.isEqual(uri, this.toRemoteBackupResource(ref))) {\n\t\t\tconst { content } = await this.getUserData(ref);\n\t\t\tif (content) {\n\t\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\t\treturn syncData?.machineId;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tconst ref = this.extUri.basename(uri);\n\t\tif (this.extUri.isEqual(uri, this.toRemoteBackupResource(ref))) {\n\t\t\tconst { content } = await this.getUserData(ref);\n\t\t\treturn content;\n\t\t}\n\t\tif (this.extUri.isEqual(uri, this.toLocalBackupResource(ref))) {\n\t\t\treturn this.userDataSyncBackupStoreService.resolveContent(this.resource, ref);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected async resolvePreviewContent(uri: URI): Promise<string | null> {\n\t\tconst syncPreview = this.syncPreviewPromise ? await this.syncPreviewPromise : null;\n\t\tif (syncPreview) {\n\t\t\tfor (const resourcePreview of syncPreview.resourcePreviews) {\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.acceptedResource, uri)) {\n\t\t\t\t\treturn resourcePreview.acceptResult ? resourcePreview.acceptResult.content : null;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.remoteResource, uri)) {\n\t\t\t\t\treturn resourcePreview.remoteContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.localResource, uri)) {\n\t\t\t\t\treturn resourcePreview.localContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t} catch (e) { /* ignore */ }\n\t}\n\n\tprivate async doGenerateSyncResourcePreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, token: CancellationToken): Promise<ISyncResourcePreview> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\tconst isLastSyncFromCurrentMachine = !!remoteUserData.syncData?.machineId && remoteUserData.syncData.machineId === machineId;\n\n\t\tconst lastSyncUserDataForPreview = lastSyncUserData === null && isLastSyncFromCurrentMachine && !this.hasSyncResourceStateVersionChanged ? remoteUserData : lastSyncUserData;\n\t\tconst resourcePreviewResults = await this.generateSyncPreview(remoteUserData, lastSyncUserDataForPreview, token);\n\n\t\tconst resourcePreviews: IEditableResourcePreview[] = [];\n\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\tconst acceptedResource = resourcePreviewResult.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\t\t\t/* No change -> Accept */\n\t\t\tif (resourcePreviewResult.localChange === Change.None && resourcePreviewResult.remoteChange === Change.None) {\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptedResource,\n\t\t\t\t\tacceptResult: { content: null, localChange: Change.None, remoteChange: Change.None },\n\t\t\t\t\tmergeState: MergeState.Accepted\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* Changed -> Apply ? (Merge ? Conflict | Accept) : Preview */\n\t\t\telse {\n\t\t\t\t/* Merge */\n\t\t\t\tconst mergeResult = apply ? await this.getMergeResult(resourcePreviewResult, token) : undefined;\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait this.fileService.writeFile(resourcePreviewResult.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\n\t\t\t\t/* Conflict | Accept */\n\t\t\t\tconst acceptResult = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t\t/* Accept if merged and there are no conflicts */\n\t\t\t\t\t? await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, undefined, token)\n\t\t\t\t\t: undefined;\n\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptResult,\n\t\t\t\t\tmergeState: mergeResult?.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview,\n\t\t\t\t\tlocalChange: acceptResult ? acceptResult.localChange : mergeResult ? mergeResult.localChange : resourcePreviewResult.localChange,\n\t\t\t\t\tremoteChange: acceptResult ? acceptResult.remoteChange : mergeResult ? mergeResult.remoteChange : resourcePreviewResult.remoteChange\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { remoteUserData, lastSyncUserData, resourcePreviews, isLastSyncFromCurrentMachine };\n\t}\n\n\tasync getLastSyncUserData<T extends IRemoteUserData>(): Promise<T | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.lastSyncResource);\n\t\t\tconst parsed = JSON.parse(content.value.toString());\n\t\t\tconst resourceSyncStateVersion = this.userDataSyncResourceEnablementService.getResourceSyncStateVersion(this.resource);\n\t\t\tthis.hasSyncResourceStateVersionChanged = parsed.version && resourceSyncStateVersion && parsed.version !== resourceSyncStateVersion;\n\t\t\tif (this.hasSyncResourceStateVersionChanged) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Reset last sync state because last sync state version ${parsed.version} is not compatible with current sync state version ${resourceSyncStateVersion}.`);\n\t\t\t\tawait this.resetLocal();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst userData: IUserData = parsed as IUserData;\n\t\t\tif (userData.content === null) {\n\t\t\t\treturn { ref: parsed.ref, syncData: null } as T;\n\t\t\t}\n\t\t\tconst syncData: ISyncData = JSON.parse(userData.content);\n\n\t\t\t/* Check if syncData is of expected type. Return only if matches */\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn { ...parsed, ...{ syncData, content: undefined } };\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND)) {\n\t\t\t\t// log error always except when file does not exist\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tif (additionalProps['ref'] || additionalProps['content'] || additionalProps['version']) {\n\t\t\tthrow new Error('Cannot have core properties as additional');\n\t\t}\n\n\t\tconst version = this.userDataSyncResourceEnablementService.getResourceSyncStateVersion(this.resource);\n\t\tconst lastSyncUserData = { ref: lastSyncRemoteUserData.ref, content: lastSyncRemoteUserData.syncData ? JSON.stringify(lastSyncRemoteUserData.syncData) : null, version, ...additionalProps };\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncUserData)));\n\t}\n\n\tasync getRemoteUserData(lastSyncData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tconst { ref, content } = await this.getUserData(lastSyncData);\n\t\tlet syncData: ISyncData | null = null;\n\t\tif (content !== null) {\n\t\t\tsyncData = this.parseSyncData(content);\n\t\t}\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected parseSyncData(content: string): ISyncData {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthrow new UserDataSyncError(localize('incompatible sync data', \"Cannot parse sync data as it is not compatible with the current version.\"), UserDataSyncErrorCode.IncompatibleRemoteContent, this.resource);\n\t}\n\n\tprivate async getUserData(refOrLastSyncData: string | IRemoteUserData | null): Promise<IUserData> {\n\t\tif (isString(refOrLastSyncData)) {\n\t\t\tconst content = await this.userDataSyncStoreService.resolveContent(this.resource, refOrLastSyncData);\n\t\t\treturn { ref: refOrLastSyncData, content };\n\t\t} else {\n\t\t\tconst lastSyncUserData: IUserData | null = refOrLastSyncData ? { ref: refOrLastSyncData.ref, content: refOrLastSyncData.syncData ? JSON.stringify(refOrLastSyncData.syncData) : null } : null;\n\t\t\treturn this.userDataSyncStoreService.read(this.resource, lastSyncUserData, this.syncHeaders);\n\t\t}\n\t}\n\n\tprotected async updateRemoteUserData(content: string, ref: string | null): Promise<IRemoteUserData> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\tconst syncData: ISyncData = { version: this.version, machineId, content };\n\t\tref = await this.userDataSyncStoreService.write(this.resource, JSON.stringify(syncData), ref, this.syncHeaders);\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected async backupLocal(content: string): Promise<void> {\n\t\tconst syncData: ISyncData = { version: this.version, content };\n\t\treturn this.userDataSyncBackupStoreService.backup(this.resource, JSON.stringify(syncData));\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Stopping synchronizing ${this.resource.toLowerCase()}.`);\n\t\tif (this.syncPreviewPromise) {\n\t\t\tthis.syncPreviewPromise.cancel();\n\t\t\tthis.syncPreviewPromise = null;\n\t\t}\n\n\t\tthis.updateConflicts([]);\n\t\tawait this.clearPreviewFolder();\n\n\t\tthis.setStatus(SyncStatus.Idle);\n\t\tthis.logService.info(`${this.syncResourceLogLabel}: Stopped synchronizing ${this.resource.toLowerCase()}.`);\n\t}\n\n\tprotected abstract readonly version: number;\n\tprotected abstract generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, token: CancellationToken): Promise<IResourcePreview[]>;\n\tprotected abstract getMergeResult(resourcePreview: IResourcePreview, token: CancellationToken): Promise<IMergeResult>;\n\tprotected abstract getAcceptResult(resourcePreview: IResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult>;\n\tprotected abstract applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, result: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void>;\n}\n\nexport interface IFileResourcePreview extends IResourcePreview {\n\treadonly fileContent: IFileContent | null;\n}\n\nexport abstract class AbstractFileSynchroniser extends AbstractSynchroniser {\n\n\tconstructor(\n\t\tprotected readonly file: URI,\n\t\tresource: SyncResource,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(resource, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService);\n\t\tthis._register(this.fileService.watch(this.extUri.dirname(file)));\n\t\tthis._register(this.fileService.onDidFilesChange(e => this.onFileChanges(e)));\n\t}\n\n\tprotected async getLocalFileContent(): Promise<IFileContent | null> {\n\t\ttry {\n\t\t\treturn await this.fileService.readFile(this.file);\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprotected async updateLocalFileContent(newContent: string, oldContent: IFileContent | null, force: boolean): Promise<void> {\n\t\ttry {\n\t\t\tif (oldContent) {\n\t\t\t\t// file exists already\n\t\t\t\tawait this.fileService.writeFile(this.file, VSBuffer.fromString(newContent), force ? undefined : oldContent);\n\t\t\t} else {\n\t\t\t\t// file does not exist\n\t\t\t\tawait this.fileService.createFile(this.file, VSBuffer.fromString(newContent), { overwrite: force });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif ((e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) ||\n\t\t\t\t(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE)) {\n\t\t\t\tthrow new UserDataSyncError(e.message, UserDataSyncErrorCode.LocalPreconditionFailed);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\t\tif (!e.contains(this.file)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.triggerLocalChange();\n\t}\n\n}\n\nexport abstract class AbstractJsonFileSynchroniser extends AbstractFileSynchroniser {\n\n\tconstructor(\n\t\tfile: URI,\n\t\tresource: SyncResource,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService protected readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(file, resource, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService);\n\t}\n\n\tprotected hasErrors(content: string): boolean {\n\t\tconst parseErrors: ParseError[] = [];\n\t\tparse(content, parseErrors, { allowEmptyContent: true, allowTrailingComma: true });\n\t\treturn parseErrors.length > 0;\n\t}\n\n\tprivate _formattingOptions: Promise<FormattingOptions> | undefined = undefined;\n\tprotected getFormattingOptions(): Promise<FormattingOptions> {\n\t\tif (!this._formattingOptions) {\n\t\t\tthis._formattingOptions = this.userDataSyncUtilService.resolveFormattingOptions(this.file);\n\t\t}\n\t\treturn this._formattingOptions;\n\t}\n\n}\n\nexport abstract class AbstractInitializer implements IUserDataInitializer {\n\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly lastSyncResource: URI;\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService protected readonly logService: IUserDataSyncLogService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t) {\n\t\tthis.extUri = this.fileService.hasCapability(environmentService.userDataSyncHome, FileSystemProviderCapabilities.PathCaseSensitive) ? extUri : extUriIgnorePathCase;\n\t\tthis.lastSyncResource = getLastSyncResourceUri(this.resource, environmentService, extUri);\n\t}\n\n\tasync initialize({ ref, content }: IUserData): Promise<void> {\n\t\tif (!content) {\n\t\t\tthis.logService.info('Remote content does not exist.', this.resource);\n\t\t\treturn;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isPreviouslySynced = await this.fileService.exists(this.lastSyncResource);\n\t\tif (isPreviouslySynced) {\n\t\t\tthis.logService.info('Remote content does not exist.', this.resource);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.doInitialize({ ref, syncData });\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate parseSyncData(content: string): ISyncData | undefined {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis.logService.info('Cannot parse sync data as it is not compatible with the current version.', this.resource);\n\t\treturn undefined;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tconst lastSyncUserData: IUserData = { ref: lastSyncRemoteUserData.ref, content: lastSyncRemoteUserData.syncData ? JSON.stringify(lastSyncRemoteUserData.syncData) : null, ...additionalProps };\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncUserData)));\n\t}\n\n\tprotected abstract doInitialize(remoteUserData: IRemoteUserData): Promise<void>;\n\n}\n"]}