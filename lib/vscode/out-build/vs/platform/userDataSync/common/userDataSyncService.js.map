{"version":3,"file":"userDataSyncService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/userDataSyncService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tIUserDataSyncService, SyncStatus, IUserDataSyncStoreService, SyncResource, IUserDataSyncLogService, IUserDataSynchroniser, UserDataSyncErrorCode,\n\tUserDataSyncError, ISyncResourceHandle, IUserDataManifest, ISyncTask, IResourcePreview, IManualSyncTask, ISyncResourcePreview, MergeState, Change, IUserDataSyncStoreManagementService, UserDataSyncStoreError, createSyncHeaders\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ExtensionsSynchroniser } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { KeybindingsSynchroniser } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { GlobalStateSynchroniser } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { equals } from 'vs/base/common/arrays';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { URI } from 'vs/base/common/uri';\nimport { SettingsSynchroniser } from 'vs/platform/userDataSync/common/settingsSync';\nimport { isEqual } from 'vs/base/common/resources';\nimport { SnippetsSynchroniser } from 'vs/platform/userDataSync/common/snippetsSync';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\n\ntype SyncErrorClassification = {\n\tcode: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tservice: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\turl?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tresource?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\texecutionId?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nconst LAST_SYNC_TIME_KEY = 'sync.lastSyncTime';\n\nexport class UserDataSyncService extends Disposable implements IUserDataSyncService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly synchronisers: IUserDataSynchroniser[];\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\n\tprivate _conflicts: [SyncResource, IResourcePreview[]][] = [];\n\tget conflicts(): [SyncResource, IResourcePreview[]][] { return this._conflicts; }\n\tprivate _onDidChangeConflicts: Emitter<[SyncResource, IResourcePreview[]][]> = this._register(new Emitter<[SyncResource, IResourcePreview[]][]>());\n\treadonly onDidChangeConflicts: Event<[SyncResource, IResourcePreview[]][]> = this._onDidChangeConflicts.event;\n\n\tprivate _syncErrors: [SyncResource, UserDataSyncError][] = [];\n\tprivate _onSyncErrors: Emitter<[SyncResource, UserDataSyncError][]> = this._register(new Emitter<[SyncResource, UserDataSyncError][]>());\n\treadonly onSyncErrors: Event<[SyncResource, UserDataSyncError][]> = this._onSyncErrors.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined { return this._lastSyncTime; }\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(new Emitter<number>());\n\treadonly onDidChangeLastSyncTime: Event<number> = this._onDidChangeLastSyncTime.event;\n\n\tprivate _onDidResetLocal = this._register(new Emitter<void>());\n\treadonly onDidResetLocal = this._onDidResetLocal.event;\n\tprivate _onDidResetRemote = this._register(new Emitter<void>());\n\treadonly onDidResetRemote = this._onDidResetRemote.event;\n\n\tprivate readonly settingsSynchroniser: SettingsSynchroniser;\n\tprivate readonly keybindingsSynchroniser: KeybindingsSynchroniser;\n\tprivate readonly snippetsSynchroniser: SnippetsSynchroniser;\n\tprivate readonly extensionsSynchroniser: ExtensionsSynchroniser;\n\tprivate readonly globalStateSynchroniser: GlobalStateSynchroniser;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.settingsSynchroniser = this._register(this.instantiationService.createInstance(SettingsSynchroniser));\n\t\tthis.keybindingsSynchroniser = this._register(this.instantiationService.createInstance(KeybindingsSynchroniser));\n\t\tthis.snippetsSynchroniser = this._register(this.instantiationService.createInstance(SnippetsSynchroniser));\n\t\tthis.globalStateSynchroniser = this._register(this.instantiationService.createInstance(GlobalStateSynchroniser));\n\t\tthis.extensionsSynchroniser = this._register(this.instantiationService.createInstance(ExtensionsSynchroniser));\n\t\tthis.synchronisers = [this.settingsSynchroniser, this.keybindingsSynchroniser, this.snippetsSynchroniser, this.globalStateSynchroniser, this.extensionsSynchroniser];\n\t\tthis.updateStatus();\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthis._register(Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeStatus, () => undefined)))(() => this.updateStatus()));\n\t\t\tthis._register(Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeConflicts, () => undefined)))(() => this.updateConflicts()));\n\t\t}\n\n\t\tthis._lastSyncTime = this.storageService.getNumber(LAST_SYNC_TIME_KEY, StorageScope.GLOBAL, undefined);\n\t\tthis.onDidChangeLocal = Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeLocal, () => s.resource)));\n\t}\n\n\tasync createSyncTask(disableCache?: boolean): Promise<ISyncTask> {\n\t\tawait this.checkEnablement();\n\n\t\tconst executionId = generateUuid();\n\t\tlet manifest: IUserDataManifest | null;\n\t\ttry {\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tif (disableCache) {\n\t\t\t\tsyncHeaders['Cache-Control'] = 'no-cache';\n\t\t\t}\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\tlet executed = false;\n\t\tconst that = this;\n\t\tlet cancellablePromise: CancelablePromise<void> | undefined;\n\t\treturn {\n\t\t\tmanifest,\n\t\t\trun(): Promise<void> {\n\t\t\t\tif (executed) {\n\t\t\t\t\tthrow new Error('Can run a task only once');\n\t\t\t\t}\n\t\t\t\tcancellablePromise = createCancelablePromise(token => that.sync(manifest, executionId, token));\n\t\t\t\treturn cancellablePromise.finally(() => cancellablePromise = undefined);\n\t\t\t},\n\t\t\tasync stop(): Promise<void> {\n\t\t\t\tif (cancellablePromise) {\n\t\t\t\t\tcancellablePromise.cancel();\n\t\t\t\t}\n\t\t\t\tif (that.status !== SyncStatus.Idle) {\n\t\t\t\t\treturn that.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tasync createManualSyncTask(): Promise<IManualSyncTask> {\n\t\tawait this.checkEnablement();\n\n\t\tconst executionId = generateUuid();\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\n\t\tlet manifest: IUserDataManifest | null;\n\t\ttry {\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\treturn new ManualSyncTask(executionId, manifest, syncHeaders, this.synchronisers, this.logService);\n\t}\n\n\tprivate recoveredSettings: boolean = false;\n\tprivate async sync(manifest: IUserDataManifest | null, executionId: string, token: CancellationToken): Promise<void> {\n\t\tif (!this.recoveredSettings) {\n\t\t\tawait this.settingsSynchroniser.recoverSettings();\n\t\t\tthis.recoveredSettings = true;\n\t\t}\n\n\t\t// Return if cancellation is requested\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startTime = new Date().getTime();\n\t\tthis._syncErrors = [];\n\t\ttry {\n\t\t\tthis.logService.trace('Sync started.');\n\t\t\tif (this.status !== SyncStatus.HasConflicts) {\n\t\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\t}\n\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\n\t\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\t\t// Return if cancellation is requested\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tawait synchroniser.sync(manifest, syncHeaders);\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\t\t\t// Bail out for following errors\n\t\t\t\t\t\tswitch (e.code) {\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\t\t\t\t\tthrow new UserDataSyncError(e.message, e.code, synchroniser.resource);\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooManyRequests:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooManyRequestsAndRetryAfter:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.LocalTooManyRequests:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.UpgradeRequired:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Log and report other errors and continue\n\t\t\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(e);\n\t\t\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\t\tthis._syncErrors.push([synchroniser.resource, userDataSyncError]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info(`Sync done. Took ${new Date().getTime() - startTime}ms`);\n\t\t\tthis.updateLastSyncTime();\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t} finally {\n\t\t\tthis.updateStatus();\n\t\t\tthis._onSyncErrors.fire(this._syncErrors);\n\t\t}\n\t}\n\n\tprivate async stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tif (synchroniser.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait synchroniser.stop();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tasync replace(uri: URI): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (await synchroniser.replace(uri)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync accept(syncResource: SyncResource, resource: URI, content: string | null | undefined, apply: boolean): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tconst synchroniser = this.getSynchroniser(syncResource);\n\t\tawait synchroniser.accept(resource, content);\n\t\tif (apply) {\n\t\t\tawait synchroniser.apply(false, createSyncHeaders(generateUuid()));\n\t\t}\n\t}\n\n\tasync resolveContent(resource: URI): Promise<string | null> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tconst content = await synchroniser.resolveContent(resource);\n\t\t\tif (content) {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetRemoteSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\treturn this.getSynchroniser(resource).getRemoteSyncResourceHandles();\n\t}\n\n\tgetLocalSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\treturn this.getSynchroniser(resource).getLocalSyncResourceHandles();\n\t}\n\n\tgetAssociatedResources(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\treturn this.getSynchroniser(resource).getAssociatedResources(syncResourceHandle);\n\t}\n\n\tgetMachineId(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<string | undefined> {\n\t\treturn this.getSynchroniser(resource).getMachineId(syncResourceHandle);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\t// skip global state synchronizer\n\t\tconst synchronizers = [this.settingsSynchroniser, this.keybindingsSynchroniser, this.snippetsSynchroniser, this.extensionsSynchroniser];\n\t\tfor (const synchroniser of synchronizers) {\n\t\t\tif (await synchroniser.hasLocalData()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tawait this.resetRemote();\n\t\tawait this.resetLocal();\n\t}\n\n\tasync resetRemote(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\ttry {\n\t\t\tawait this.userDataSyncStoreService.clear();\n\t\t\tthis.logService.info('Cleared data on server');\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tthis._onDidResetRemote.fire();\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tthis.storageService.remove(LAST_SYNC_TIME_KEY, StorageScope.GLOBAL);\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tthis._onDidResetLocal.fire();\n\t\tthis.logService.info('Did reset the local sync state.');\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (await synchroniser.hasPreviouslySynced()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tconst oldStatus = this._status;\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t\tif (oldStatus === SyncStatus.HasConflicts) {\n\t\t\t\tthis.updateLastSyncTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateStatus(): void {\n\t\tthis.updateConflicts();\n\t\tconst status = this.computeStatus();\n\t\tthis.setStatus(status);\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.computeConflicts();\n\t\tif (!equals(this._conflicts, conflicts, ([syncResourceA, conflictsA], [syncResourceB, conflictsB]) => syncResourceA === syncResourceA && equals(conflictsA, conflictsB, (a, b) => isEqual(a.previewResource, b.previewResource)))) {\n\t\t\tthis._conflicts = this.computeConflicts();\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate computeStatus(): SyncStatus {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\treturn SyncStatus.Uninitialized;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.Syncing)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate updateLastSyncTime(): void {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\tthis._lastSyncTime = new Date().getTime();\n\t\t\tthis.storageService.store(LAST_SYNC_TIME_KEY, this._lastSyncTime, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tthis._onDidChangeLastSyncTime.fire(this._lastSyncTime);\n\t\t}\n\t}\n\n\tprivate reportUserDataSyncError(userDataSyncError: UserDataSyncError, executionId: string) {\n\t\tthis.telemetryService.publicLog2<{ code: string, service: string, url?: string, resource?: string, executionId?: string }, SyncErrorClassification>('sync/error',\n\t\t\t{ code: userDataSyncError.code, url: userDataSyncError instanceof UserDataSyncStoreError ? userDataSyncError.url : undefined, resource: userDataSyncError.resource, executionId, service: this.userDataSyncStoreManagementService.userDataSyncStore!.url.toString() });\n\t}\n\n\tprivate computeConflicts(): [SyncResource, IResourcePreview[]][] {\n\t\treturn this.synchronisers.filter(s => s.status === SyncStatus.HasConflicts)\n\t\t\t.map(s => ([s.resource, s.conflicts.map(toStrictResourcePreview)]));\n\t}\n\n\tgetSynchroniser(source: SyncResource): IUserDataSynchroniser {\n\t\treturn this.synchronisers.find(s => s.resource === source)!;\n\t}\n\n\tprivate async checkEnablement(): Promise<void> {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthrow new Error('Not enabled');\n\t\t}\n\t}\n\n}\n\nclass ManualSyncTask extends Disposable implements IManualSyncTask {\n\n\tprivate previewsPromise: CancelablePromise<[SyncResource, ISyncResourcePreview][]> | undefined;\n\tprivate previews: [SyncResource, ISyncResourcePreview][] | undefined;\n\n\tprivate synchronizingResources: [SyncResource, URI[]][] = [];\n\tprivate _onSynchronizeResources = this._register(new Emitter<[SyncResource, URI[]][]>());\n\treadonly onSynchronizeResources = this._onSynchronizeResources.event;\n\n\tprivate isDisposed: boolean = false;\n\n\tget status(): SyncStatus {\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.Syncing)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly manifest: IUserDataManifest | null,\n\t\tprivate readonly syncHeaders: IHeaders,\n\t\tprivate readonly synchronisers: IUserDataSynchroniser[],\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync preview(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (this.isDisposed) {\n\t\t\t\tthrow new Error('Disposed');\n\t\t\t}\n\t\t\tif (!this.previewsPromise) {\n\t\t\t\tthis.previewsPromise = createCancelablePromise(token => this.getPreviews(token));\n\t\t\t}\n\t\t\tif (!this.previews) {\n\t\t\t\tthis.previews = await this.previewsPromise;\n\t\t\t}\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.accept(resource, content));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource?: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (resource) {\n\t\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.merge(resource));\n\t\t\t} else {\n\t\t\t\treturn await this.mergeAll();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync discard(resource: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.discard(resource));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync discardConflicts(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('Missing preview. Create preview and try again.');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot discard while synchronizing resources');\n\t\t\t}\n\n\t\t\tconst conflictResources: URI[] = [];\n\t\t\tfor (const [, syncResourcePreview] of this.previews) {\n\t\t\t\tfor (const resourcePreview of syncResourcePreview.resourcePreviews) {\n\t\t\t\t\tif (resourcePreview.mergeState === MergeState.Conflict) {\n\t\t\t\t\t\tconflictResources.push(resourcePreview.previewResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const resource of conflictResources) {\n\t\t\t\tawait this.discard(resource);\n\t\t\t}\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync apply(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tconst previews: [SyncResource, ISyncResourcePreview][] = [];\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\n\t\t\t\t/* merge those which are not yet merged */\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tif ((resourcePreview.localChange !== Change.None || resourcePreview.remoteChange !== Change.None) && resourcePreview.mergeState === MergeState.Preview) {\n\t\t\t\t\t\tawait synchroniser.merge(resourcePreview.previewResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* apply */\n\t\t\t\tconst newPreview = await synchroniser.apply(false, this.syncHeaders);\n\t\t\t\tif (newPreview) {\n\t\t\t\t\tpreviews.push(this.toSyncResourcePreview(synchroniser.resource, newPreview));\n\t\t\t\t}\n\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = previews;\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync pull(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tawait synchroniser.accept(resourcePreview.remoteResource);\n\t\t\t\t}\n\t\t\t\tawait synchroniser.apply(true, this.syncHeaders);\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = [];\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync push(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tawait synchroniser.accept(resourcePreview.localResource);\n\t\t\t\t}\n\t\t\t\tawait synchroniser.apply(true, this.syncHeaders);\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = [];\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.stop();\n\t\t\t} catch (error) {\n\t\t\t\tif (!isPromiseCanceledError(error)) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.reset();\n\t}\n\n\tprivate async performAction(resource: URI, action: (synchroniser: IUserDataSynchroniser) => Promise<ISyncResourcePreview | null>): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tif (!this.previews) {\n\t\t\tthrow new Error('Missing preview. Create preview and try again.');\n\t\t}\n\n\t\tconst index = this.previews.findIndex(([, preview]) => preview.resourcePreviews.some(({ localResource, previewResource, remoteResource }) =>\n\t\t\tisEqual(resource, localResource) || isEqual(resource, previewResource) || isEqual(resource, remoteResource)));\n\t\tif (index === -1) {\n\t\t\treturn this.previews;\n\t\t}\n\n\t\tconst [syncResource, previews] = this.previews[index];\n\t\tconst resourcePreview = previews.resourcePreviews.find(({ localResource, remoteResource, previewResource }) => isEqual(localResource, resource) || isEqual(remoteResource, resource) || isEqual(previewResource, resource));\n\t\tif (!resourcePreview) {\n\t\t\treturn this.previews;\n\t\t}\n\n\t\tlet synchronizingResources = this.synchronizingResources.find(s => s[0] === syncResource);\n\t\tif (!synchronizingResources) {\n\t\t\tsynchronizingResources = [syncResource, []];\n\t\t\tthis.synchronizingResources.push(synchronizingResources);\n\t\t}\n\t\tif (!synchronizingResources[1].some(s => isEqual(s, resourcePreview.localResource))) {\n\t\t\tsynchronizingResources[1].push(resourcePreview.localResource);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\n\t\tconst synchroniser = this.synchronisers.find(s => s.resource === this.previews![index][0])!;\n\t\tconst preview = await action(synchroniser);\n\t\tpreview ? this.previews.splice(index, 1, this.toSyncResourcePreview(synchroniser.resource, preview)) : this.previews.splice(index, 1);\n\n\t\tconst i = this.synchronizingResources.findIndex(s => s[0] === syncResource);\n\t\tthis.synchronizingResources[i][1].splice(synchronizingResources[1].findIndex(r => isEqual(r, resourcePreview.localResource)), 1);\n\t\tif (!synchronizingResources[1].length) {\n\t\t\tthis.synchronizingResources.splice(i, 1);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\n\t\treturn this.previews;\n\t}\n\n\tprivate async mergeAll(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tif (!this.previews) {\n\t\t\tthrow new Error('You need to create preview before merging or applying');\n\t\t}\n\t\tif (this.synchronizingResources.length) {\n\t\t\tthrow new Error('Cannot merge or apply while synchronizing resources');\n\t\t}\n\t\tconst previews: [SyncResource, ISyncResourcePreview][] = [];\n\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\n\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\n\t\t\t/* merge those which are not yet merged */\n\t\t\tlet newPreview: ISyncResourcePreview | null = preview;\n\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\tif ((resourcePreview.localChange !== Change.None || resourcePreview.remoteChange !== Change.None) && resourcePreview.mergeState === MergeState.Preview) {\n\t\t\t\t\tnewPreview = await synchroniser.merge(resourcePreview.previewResource);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newPreview) {\n\t\t\t\tpreviews.push(this.toSyncResourcePreview(synchroniser.resource, newPreview));\n\t\t\t}\n\n\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\t\tthis.previews = previews;\n\t\treturn this.previews;\n\t}\n\n\tprivate async getPreviews(token: CancellationToken): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst result: [SyncResource, ISyncResourcePreview][] = [];\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst preview = await synchroniser.preview(this.manifest, this.syncHeaders);\n\t\t\tif (preview) {\n\t\t\t\tresult.push(this.toSyncResourcePreview(synchroniser.resource, preview));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate toSyncResourcePreview(syncResource: SyncResource, preview: ISyncResourcePreview): [SyncResource, ISyncResourcePreview] {\n\t\treturn [\n\t\t\tsyncResource,\n\t\t\t{\n\t\t\t\tisLastSyncFromCurrentMachine: preview.isLastSyncFromCurrentMachine,\n\t\t\t\tresourcePreviews: preview.resourcePreviews.map(toStrictResourcePreview)\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate reset(): void {\n\t\tif (this.previewsPromise) {\n\t\t\tthis.previewsPromise.cancel();\n\t\t\tthis.previewsPromise = undefined;\n\t\t}\n\t\tthis.previews = undefined;\n\t\tthis.synchronizingResources = [];\n\t}\n\n\toverride dispose(): void {\n\t\tthis.reset();\n\t\tthis.isDisposed = true;\n\t}\n\n}\n\nfunction toStrictResourcePreview(resourcePreview: IResourcePreview): IResourcePreview {\n\treturn {\n\t\tlocalResource: resourcePreview.localResource,\n\t\tpreviewResource: resourcePreview.previewResource,\n\t\tremoteResource: resourcePreview.remoteResource,\n\t\tacceptedResource: resourcePreview.acceptedResource,\n\t\tlocalChange: resourcePreview.localChange,\n\t\tremoteChange: resourcePreview.remoteChange,\n\t\tmergeState: resourcePreview.mergeState,\n\t};\n}\n"]}