{"version":3,"file":"snippetsSync.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/platform/userDataSync/common/snippetsSync.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IA4BhG,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,2CAAoB;QAK7D,YACsB,kBAAuC,EAC9C,WAAyB,EACtB,cAA+B,EACrB,wBAAmD,EAC7C,8BAA+D,EACvE,UAAmC,EACrC,oBAA2C,EAC1B,qCAA6E,EAClG,gBAAmC;YAEtD,KAAK,4BAAwB,WAAW,EAAE,kBAAkB,EAAE,cAAc,EAAE,wBAAwB,EAAE,8BAA8B,EAAE,qCAAqC,EAAE,gBAAgB,EAAE,UAAU,EAAE,oBAAoB,CAAC,CAAC;YAdjN,YAAO,GAAW,CAAC,CAAC;YAetC,IAAI,CAAC,cAAc,GAAG,kBAAkB,CAAC,YAAY,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,aAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QACvI,CAAC;QAES,KAAK,CAAC,mBAAmB,CAAC,cAA+B,EAAE,gBAAwC,EAAE,KAAwB;YACtI,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACnD,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACrD,MAAM,cAAc,GAAqC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtI,MAAM,gBAAgB,GAAqC,gBAAgB,IAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAEhK,IAAI,cAAc,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,kDAAkD,CAAC,CAAC;aACtG;iBAAM;gBACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,8EAA8E,CAAC,CAAC;aAClI;YAED,MAAM,WAAW,GAAG,CAAA,GAAA,qBAAK,CAAA,CAAC,aAAa,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;YAC3E,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,IAAI,EAAE,CAAC,CAAC;QAC3E,CAAC;QAES,KAAK,CAAC,cAAc,CAAC,eAAyC,EAAE,KAAwB;YACjG,OAAO,eAAe,CAAC,aAAa,CAAC;QACtC,CAAC;QAES,KAAK,CAAC,eAAe,CAAC,eAAyC,EAAE,QAAa,EAAE,OAAkC,EAAE,KAAwB;YAErJ,2BAA2B;YAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;gBAC9H,OAAO;oBACN,OAAO,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI;oBAC1F,WAAW,cAAa;oBACxB,YAAY,EAAE,eAAe,CAAC,WAAW;wBACxC,CAAC,CAAC,eAAe,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,kBAAiB,CAAC,cAAa;wBACzE,CAAC,gBAAe;iBACjB,CAAC;aACF;YAED,4BAA4B;YAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE;gBAC/H,OAAO;oBACN,OAAO,EAAE,eAAe,CAAC,aAAa;oBACtC,WAAW,EAAE,eAAe,CAAC,aAAa,KAAK,IAAI;wBAClD,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,kBAAiB,CAAC,cAAa;wBAC9D,CAAC,gBAAe;oBACjB,YAAY,cAAa;iBACzB,CAAC;aACF;YAED,6BAA6B;YAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBAClE,IAAI,OAAO,KAAK,SAAS,EAAE;oBAC1B,OAAO;wBACN,OAAO,EAAE,eAAe,CAAC,aAAa,CAAC,OAAO;wBAC9C,WAAW,EAAE,eAAe,CAAC,aAAa,CAAC,WAAW;wBACtD,YAAY,EAAE,eAAe,CAAC,aAAa,CAAC,YAAY;qBACxD,CAAC;iBACF;qBAAM;oBACN,OAAO;wBACN,OAAO;wBACP,WAAW,EAAE,OAAO,KAAK,IAAI;4BAC5B,CAAC,CAAC,eAAe,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,iBAAgB,CAAC,aAAY;4BACrE,CAAC,iBAAgB;wBAClB,YAAY,EAAE,OAAO,KAAK,IAAI;4BAC7B,CAAC,CAAC,eAAe,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,iBAAgB,CAAC,aAAY;4BACvE,CAAC,iBAAgB;qBAClB,CAAC;iBACF;aACD;YAED,MAAM,IAAI,KAAK,CAAC,qBAAqB,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC7D,CAAC;QAES,KAAK,CAAC,WAAW,CAAC,cAA+B,EAAE,gBAAwC,EAAE,gBAA6D,EAAE,KAAc;YACnL,MAAM,uBAAuB,GAAuC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,iCAAM,eAAe,KAAE,YAAY,IAAG,CAAC,CAAC;YACtK,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,WAAW,iBAAgB,IAAI,YAAY,iBAAgB,CAAC,EAAE;gBAClI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,mDAAmD,CAAC,CAAC;aACtG;YAED,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,WAAW,iBAAgB,CAAC,EAAE;gBACnF,uBAAuB;gBACvB,MAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;gBACtD,MAAM,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;aAC/D;YAED,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,YAAY,iBAAgB,CAAC,EAAE;gBACrF,cAAc,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;aACjG;YAED,IAAI,CAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,GAAG,MAAK,cAAc,CAAC,GAAG,EAAE;gBACjD,mBAAmB;gBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,0CAA0C,CAAC,CAAC;gBAC9F,MAAM,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;gBAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,sCAAsC,CAAC,CAAC;aACzF;YAED,KAAK,MAAM,EAAE,eAAe,EAAE,IAAI,uBAAuB,EAAE;gBAC1D,qBAAqB;gBACrB,IAAI;oBACH,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;iBAC5C;gBAAC,OAAO,CAAC,EAAE,EAAE,YAAY,EAAE;aAC5B;QAEF,CAAC;QAEO,mBAAmB,CAAC,mBAAyC,EAAE,gBAAiD,EAAE,cAAyC;YAClK,MAAM,gBAAgB,GAA0C,IAAI,GAAG,EAAoC,CAAC;YAE5G,4CAA4C;YAC5C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC/D,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC7C,YAAY,EAAE,KAAK;oBACnB,WAAW,eAAc;oBACzB,YAAY,cAAa;iBACzB,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,WAAW,EAAE,IAAI;oBACjB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,YAAY,EAAE,IAAI;oBAClB,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC;oBAClC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,iDAAiD;YACjD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBACjE,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;oBAC/C,YAAY,EAAE,KAAK;oBACnB,WAAW,kBAAiB;oBAC5B,YAAY,cAAa;iBACzB,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC;oBAClC,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACpD,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC;oBAClC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,iDAAiD;YACjD,KAAK,MAAM,GAAG,IAAI,mBAAmB,CAAC,KAAK,CAAC,OAAO,EAAE;gBACpD,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,IAAI;oBACb,YAAY,EAAE,KAAK;oBACnB,WAAW,iBAAgB;oBAC3B,YAAY,cAAa;iBACzB,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC;oBAClC,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACpD,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,IAAI;oBACnB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,4CAA4C;YAC5C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAChE,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC9C,YAAY,EAAE,KAAK;oBACnB,WAAW,cAAa;oBACxB,YAAY,eAAc;iBAC1B,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC;oBAClC,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACpD,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,IAAI;oBACnB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,iDAAiD;YACjD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;gBAClE,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;oBAChD,YAAY,EAAE,KAAK;oBACnB,WAAW,cAAa;oBACxB,YAAY,kBAAiB;iBAC7B,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC;oBAClC,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACpD,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC;oBAClC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,iDAAiD;YACjD,KAAK,MAAM,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,OAAO,EAAE;gBACrD,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,IAAI;oBACb,YAAY,EAAE,KAAK;oBACnB,WAAW,cAAa;oBACxB,YAAY,iBAAgB;iBAC5B,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,IAAI;oBACjB,YAAY,EAAE,IAAI;oBAClB,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC;oBAClC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,6BAA6B;YAC7B,KAAK,MAAM,GAAG,IAAI,mBAAmB,CAAC,SAAS,EAAE;gBAChD,MAAM,aAAa,GAAiB;oBACnC,OAAO,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI;oBAC9E,YAAY,EAAE,IAAI;oBAClB,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAiB,CAAC,cAAa;oBACnE,YAAY,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAiB,CAAC,cAAa;iBAClE,CAAC;gBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;oBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;oBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC,IAAI,IAAI;oBAC1C,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI;oBACnF,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI;oBAC1C,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;oBAClE,aAAa;oBACb,WAAW,EAAE,aAAa,CAAC,WAAW;oBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;iBAClI,CAAC,CAAC;aACH;YAED,yBAAyB;YACzB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;gBAChD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBAC/B,MAAM,aAAa,GAAiB;wBACnC,OAAO,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI;wBAC9E,YAAY,EAAE,KAAK;wBACnB,WAAW,cAAa;wBACxB,YAAY,cAAa;qBACzB,CAAC;oBACF,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE;wBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;wBAC5H,WAAW,EAAE,gBAAgB,CAAC,GAAG,CAAC,IAAI,IAAI;wBAC1C,YAAY,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI;wBACnF,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;wBAC9H,aAAa,EAAE,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI;wBAC1C,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;wBAClE,aAAa;wBACb,WAAW,EAAE,aAAa,CAAC,WAAW;wBACtC,YAAY,EAAE,aAAa,CAAC,YAAY;wBACxC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;qBAClI,CAAC,CAAC;iBACH;aACD;YAED,OAAO,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;QACvC,CAAC;QAED,KAAK,CAAC,sBAAsB,CAAC,EAAE,GAAG,EAAuB;YACxD,IAAI,OAAO,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,OAAO,EAAE;gBACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,QAAQ,EAAE;oBACb,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC9C,MAAM,MAAM,GAAG,EAAE,CAAC;oBAClB,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;wBAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;wBACpD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;wBAC9E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;wBACjE,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;qBAC/L;oBACD,OAAO,MAAM,CAAC;iBACd;aACD;YACD,OAAO,EAAE,CAAC;QACX,CAAC;QAEQ,KAAK,CAAC,cAAc,CAAC,GAAQ;YACrC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;mBACrH,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;mBACpH,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,oCAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE;gBAC5H,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;aACvC;YAED,IAAI,OAAO,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,OAAO,EAAE;gBACZ,OAAO,OAAO,CAAC;aACf;YAED,OAAO,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,IAAI,OAAO,EAAE;gBACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,QAAQ,EAAE;oBACb,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;iBACnD;aACD;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QAED,KAAK,CAAC,YAAY;YACjB,IAAI;gBACH,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC3D,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;oBACtC,OAAO,IAAI,CAAC;iBACZ;aACD;YAAC,OAAO,KAAK,EAAE;gBACf,kBAAkB;aAClB;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,KAAK,CAAC,iBAAiB,CAAC,gBAAwC;YACvE,MAAM,KAAK,GAAoC,EAAE,CAAC;YAClD,KAAK,MAAM,eAAe,IAAI,gBAAgB,EAAE;gBAC/C,IAAI,eAAe,CAAC,WAAW,EAAE;oBAChC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,aAAc,CAAC,CAAC,GAAG,eAAe,CAAC,WAAW,CAAC;iBAC1F;aACD;YACD,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC;QAEO,KAAK,CAAC,mBAAmB,CAAC,gBAAoD,EAAE,KAAc;YACrG,KAAK,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,IAAI,gBAAgB,EAAE;gBACzG,IAAI,WAAW,iBAAgB,EAAE;oBAChC,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAc,CAAC,CAAC;oBACzG,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;oBAEhE,UAAU;oBACV,IAAI,WAAW,oBAAmB,EAAE;wBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3G,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACtG;oBAED,QAAQ;yBACH,IAAI,WAAW,kBAAiB,EAAE;wBACtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3G,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,OAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;wBAC9G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACtG;oBAED,UAAU;yBACL;wBACJ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3G,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,iBAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,OAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAY,CAAC,CAAC;wBACzH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACtG;iBACD;aACD;QACF,CAAC;QAEO,KAAK,CAAC,oBAAoB,CAAC,gBAAoD,EAAE,cAA+B,EAAE,SAAkB;YAC3I,MAAM,eAAe,GAA8B,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9H,MAAM,WAAW,GAA8B,CAAA,GAAA,mBAAS,CAAA,CAAC,eAAe,CAAC,CAAC;YAE1E,KAAK,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,gBAAgB,EAAE;gBAC7F,IAAI,YAAY,iBAAgB,EAAE;oBACjC,MAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAe,CAAC,CAAC;oBACxG,IAAI,YAAY,oBAAmB,EAAE;wBACpC,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;qBACxB;yBAAM;wBACN,WAAW,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,OAAQ,CAAC;qBACzC;iBACD;aACD;YAED,IAAI,CAAC,CAAA,GAAA,uBAAO,CAAA,CAAC,eAAe,EAAE,WAAW,CAAC,EAAE;gBAC3C,gBAAgB;gBAChB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,+BAA+B,CAAC,CAAC;gBACnF,cAAc,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBACrH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,2BAA2B,CAAC,CAAC;aAC9E;YACD,OAAO,cAAc,CAAC;QACvB,CAAC;QAEO,aAAa,CAAC,QAAmB;YACxC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QAEO,kBAAkB,CAAC,oBAAqD;YAC/E,MAAM,QAAQ,GAA8B,EAAE,CAAC;YAC/C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE;gBACpD,QAAQ,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC3D;YACD,OAAO,QAAQ,CAAC;QACjB,CAAC;QAEO,KAAK,CAAC,uBAAuB;YACpC,MAAM,QAAQ,GAAoC,EAAE,CAAC;YACrD,IAAI,IAAe,CAAC;YACpB,IAAI;gBACH,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC3D;YAAC,OAAO,CAAC,EAAE;gBACX,cAAc;gBACd,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;oBACpG,OAAO,QAAQ,CAAC;iBAChB;qBAAM;oBACN,MAAM,CAAC,CAAC;iBACR;aACD;YACD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;gBACxC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;gBAChC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,gBAAgB,EAAE;oBAC5D,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAE,CAAC;oBACrE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC1D,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;iBACxB;aACD;YACD,OAAO,QAAQ,CAAC;QACjB,CAAC;KACD,CAAA;IA9cY,oBAAoB;QAM9B,WAAA,iCAAmB,CAAA;QACnB,WAAA,oBAAY,CAAA;QACZ,WAAA,yBAAe,CAAA;QACf,WAAA,wCAAyB,CAAA;QACzB,WAAA,8CAA+B,CAAA;QAC/B,WAAA,sCAAuB,CAAA;QACvB,WAAA,qCAAqB,CAAA;QACrB,WAAA,qDAAsC,CAAA;QACtC,WAAA,6BAAiB,CAAA;OAdP,oBAAoB,CA8chC;IA9cY,oDAAoB;IAgdjC,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,0CAAmB;QAE3D,YACe,WAAyB,EAClB,kBAAuC,EACnC,UAAmC;YAE5D,KAAK,4BAAwB,kBAAkB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QAC3E,CAAC;QAED,KAAK,CAAC,YAAY,CAAC,cAA+B;YACjD,MAAM,cAAc,GAAqC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtI,IAAI,CAAC,cAAc,EAAE;gBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;gBAC/F,OAAO;aACP;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,EAAE;gBACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;gBACrF,OAAO;aACP;YAED,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAC9C,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,OAAO,EAAE;oBACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;oBACjF,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC1E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACxE;aACD;YAED,MAAM,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACnD,CAAC;QAEO,KAAK,CAAC,OAAO;;YACpB,IAAI;gBACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBAClF,OAAO,CAAC,CAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,MAAM,CAAA,CAAC;aAC9B;YAAC,OAAO,KAAK,EAAE;gBACf,OAA4B,KAAM,CAAC,mBAAmB,2BAAuC,CAAC;aAC9F;QACF,CAAC;KAED,CAAA;IA5CY,mBAAmB;QAG7B,WAAA,oBAAY,CAAA;QACZ,WAAA,iCAAmB,CAAA;QACnB,WAAA,sCAAuB,CAAA;OALb,mBAAmB,CA4C/B;IA5CY,kDAAmB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tIUserDataSyncStoreService, IUserDataSyncLogService, IUserDataSynchroniser, SyncResource, IUserDataSyncResourceEnablementService, IUserDataSyncBackupStoreService,\n\tUSER_DATA_SYNC_SCHEME, ISyncResourceHandle, IRemoteUserData, ISyncData, Change\n} from 'vs/platform/userDataSync/common/userDataSync';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService, IFileStat, IFileContent, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { AbstractInitializer, AbstractSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { merge, IMergeResult as ISnippetsMergeResult, areSame } from 'vs/platform/userDataSync/common/snippetsMerge';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Event } from 'vs/base/common/event';\n\ninterface ISnippetsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ISnippetsAcceptedResourcePreview extends IFileResourcePreview {\n\tacceptResult: IAcceptResult;\n}\n\nexport class SnippetsSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprotected readonly version: number = 1;\n\tprivate readonly snippetsFolder: URI;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(SyncResource.Snippets, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService);\n\t\tthis.snippetsFolder = environmentService.snippetsHome;\n\t\tthis._register(this.fileService.watch(environmentService.userRoamingDataHome));\n\t\tthis._register(this.fileService.watch(this.snippetsFolder));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.affects(this.snippetsFolder))(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, token: CancellationToken): Promise<ISnippetsResourcePreview[]> {\n\t\tconst local = await this.getSnippetsFileContents();\n\t\tconst localSnippets = this.toSnippetsContents(local);\n\t\tconst remoteSnippets: IStringDictionary<string> | null = remoteUserData.syncData ? this.parseSnippets(remoteUserData.syncData) : null;\n\t\tconst lastSyncSnippets: IStringDictionary<string> | null = lastSyncUserData && lastSyncUserData.syncData ? this.parseSnippets(lastSyncUserData.syncData) : null;\n\n\t\tif (remoteSnippets) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote snippets with local snippets...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote snippets does not exist. Synchronizing snippets for the first time.`);\n\t\t}\n\n\t\tconst mergeResult = merge(localSnippets, remoteSnippets, lastSyncSnippets);\n\t\treturn this.getResourcePreviews(mergeResult, local, remoteSnippets || {});\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ISnippetsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ISnippetsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }))) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.remoteContent !== null ? Change.Modified : Change.Added\n\t\t\t\t\t: Change.Deleted\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }))) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: resourcePreview.remoteContent !== null\n\t\t\t\t\t? resourcePreview.fileContent ? Change.Modified : Change.Added\n\t\t\t\t\t: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: content === null\n\t\t\t\t\t\t? resourcePreview.fileContent !== null ? Change.Deleted : Change.None\n\t\t\t\t\t\t: Change.Modified,\n\t\t\t\t\tremoteChange: content === null\n\t\t\t\t\t\t? resourcePreview.remoteContent !== null ? Change.Deleted : Change.None\n\t\t\t\t\t\t: Change.Modified\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ISnippetsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst accptedResourcePreviews: ISnippetsAcceptedResourcePreview[] = resourcePreviews.map(([resourcePreview, acceptResult]) => ({ ...resourcePreview, acceptResult }));\n\t\tif (accptedResourcePreviews.every(({ localChange, remoteChange }) => localChange === Change.None && remoteChange === Change.None)) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing snippets.`);\n\t\t}\n\n\t\tif (accptedResourcePreviews.some(({ localChange }) => localChange !== Change.None)) {\n\t\t\t// back up all snippets\n\t\t\tawait this.updateLocalBackup(accptedResourcePreviews);\n\t\t\tawait this.updateLocalSnippets(accptedResourcePreviews, force);\n\t\t}\n\n\t\tif (accptedResourcePreviews.some(({ remoteChange }) => remoteChange !== Change.None)) {\n\t\t\tremoteUserData = await this.updateRemoteSnippets(accptedResourcePreviews, remoteUserData, force);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized snippets...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized snippets`);\n\t\t}\n\n\t\tfor (const { previewResource } of accptedResourcePreviews) {\n\t\t\t// Delete the preview\n\t\t\ttry {\n\t\t\t\tawait this.fileService.del(previewResource);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t}\n\n\t}\n\n\tprivate getResourcePreviews(snippetsMergeResult: ISnippetsMergeResult, localFileContent: IStringDictionary<IFileContent>, remoteSnippets: IStringDictionary<string>): ISnippetsResourcePreview[] {\n\t\tconst resourcePreviews: Map<string, ISnippetsResourcePreview> = new Map<string, ISnippetsResourcePreview>();\n\n\t\t/* Snippets added remotely -> add locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Added,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated remotely -> update locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed remotely -> remove locally */\n\t\tfor (const key of snippetsMergeResult.local.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets added locally -> add remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Added,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated locally -> update remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed locally -> remove remotely */\n\t\tfor (const key of snippetsMergeResult.remote.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Deleted,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets with conflicts */\n\t\tfor (const key of snippetsMergeResult.conflicts) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\thasConflicts: true,\n\t\t\t\tlocalChange: localFileContent[key] ? Change.Modified : Change.Added,\n\t\t\t\tremoteChange: remoteSnippets[key] ? Change.Modified : Change.Added\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\tlocalContent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Unmodified Snippets */\n\t\tfor (const key of Object.keys(localFileContent)) {\n\t\t\tif (!resourcePreviews.has(key)) {\n\t\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\t\tcontent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\t\thasConflicts: false,\n\t\t\t\t\tlocalChange: Change.None,\n\t\t\t\t\tremoteChange: Change.None\n\t\t\t\t};\n\t\t\t\tresourcePreviews.set(key, {\n\t\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\t\tlocalContent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\t\tpreviewResult,\n\t\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn [...resourcePreviews.values()];\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst snippets = this.parseSnippets(syncData);\n\t\t\t\tconst result = [];\n\t\t\t\tfor (const snippet of Object.keys(snippets)) {\n\t\t\t\t\tconst resource = this.extUri.joinPath(uri, snippet);\n\t\t\t\t\tconst comparableResource = this.extUri.joinPath(this.snippetsFolder, snippet);\n\t\t\t\t\tconst exists = await this.fileService.exists(comparableResource);\n\t\t\t\t\tresult.push({ resource, comparableResource: exists ? comparableResource : this.extUri.joinPath(this.syncPreviewFolder, snippet).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }) });\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }))\n\t\t\t|| this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }))\n\t\t\t|| this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' }))) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst snippets = this.parseSnippets(syncData);\n\t\t\t\treturn snippets[this.extUri.basename(uri)] || null;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localSnippets = await this.getSnippetsFileContents();\n\t\t\tif (Object.keys(localSnippets).length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateLocalBackup(resourcePreviews: IFileResourcePreview[]): Promise<void> {\n\t\tconst local: IStringDictionary<IFileContent> = {};\n\t\tfor (const resourcePreview of resourcePreviews) {\n\t\t\tif (resourcePreview.fileContent) {\n\t\t\t\tlocal[this.extUri.basename(resourcePreview.localResource!)] = resourcePreview.fileContent;\n\t\t\t}\n\t\t}\n\t\tawait this.backupLocal(JSON.stringify(this.toSnippetsContents(local)));\n\t}\n\n\tprivate async updateLocalSnippets(resourcePreviews: ISnippetsAcceptedResourcePreview[], force: boolean): Promise<void> {\n\t\tfor (const { fileContent, acceptResult, localResource, remoteResource, localChange } of resourcePreviews) {\n\t\t\tif (localChange !== Change.None) {\n\t\t\t\tconst key = remoteResource ? this.extUri.basename(remoteResource) : this.extUri.basename(localResource!);\n\t\t\t\tconst resource = this.extUri.joinPath(this.snippetsFolder, key);\n\n\t\t\t\t// Removed\n\t\t\t\tif (localChange === Change.Deleted) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Deleting snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.del(resource);\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Deleted snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\n\t\t\t\t// Added\n\t\t\t\telse if (localChange === Change.Added) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Creating snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.createFile(resource, VSBuffer.fromString(acceptResult.content!), { overwrite: force });\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Created snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\n\t\t\t\t// Updated\n\t\t\t\telse {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(acceptResult.content!), force ? undefined : fileContent!);\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateRemoteSnippets(resourcePreviews: ISnippetsAcceptedResourcePreview[], remoteUserData: IRemoteUserData, forcePush: boolean): Promise<IRemoteUserData> {\n\t\tconst currentSnippets: IStringDictionary<string> = remoteUserData.syncData ? this.parseSnippets(remoteUserData.syncData) : {};\n\t\tconst newSnippets: IStringDictionary<string> = deepClone(currentSnippets);\n\n\t\tfor (const { acceptResult, localResource, remoteResource, remoteChange } of resourcePreviews) {\n\t\t\tif (remoteChange !== Change.None) {\n\t\t\t\tconst key = localResource ? this.extUri.basename(localResource) : this.extUri.basename(remoteResource!);\n\t\t\t\tif (remoteChange === Change.Deleted) {\n\t\t\t\t\tdelete newSnippets[key];\n\t\t\t\t} else {\n\t\t\t\t\tnewSnippets[key] = acceptResult.content!;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!areSame(currentSnippets, newSnippets)) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote snippets...`);\n\t\t\tremoteUserData = await this.updateRemoteUserData(JSON.stringify(newSnippets), forcePush ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote snippets`);\n\t\t}\n\t\treturn remoteUserData;\n\t}\n\n\tprivate parseSnippets(syncData: ISyncData): IStringDictionary<string> {\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tprivate toSnippetsContents(snippetsFileContents: IStringDictionary<IFileContent>): IStringDictionary<string> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tfor (const key of Object.keys(snippetsFileContents)) {\n\t\t\tsnippets[key] = snippetsFileContents[key].value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tprivate async getSnippetsFileContents(): Promise<IStringDictionary<IFileContent>> {\n\t\tconst snippets: IStringDictionary<IFileContent> = {};\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(this.snippetsFolder);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const entry of stat.children || []) {\n\t\t\tconst resource = entry.resource;\n\t\t\tconst extension = this.extUri.extname(resource);\n\t\t\tif (extension === '.json' || extension === '.code-snippets') {\n\t\t\t\tconst key = this.extUri.relativePath(this.snippetsFolder, resource)!;\n\t\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\t\tsnippets[key] = content;\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper(SyncResource.Snippets, environmentService, logService, fileService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteSnippets: IStringDictionary<string> | null = remoteUserData.syncData ? JSON.parse(remoteUserData.syncData.content) : null;\n\t\tif (!remoteSnippets) {\n\t\t\tthis.logService.info('Skipping initializing snippets because remote snippets does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing snippets because local snippets exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const key of Object.keys(remoteSnippets)) {\n\t\t\tconst content = remoteSnippets[key];\n\t\t\tif (content) {\n\t\t\t\tconst resource = this.extUri.joinPath(this.environmentService.snippetsHome, key);\n\t\t\t\tawait this.fileService.createFile(resource, VSBuffer.fromString(content));\n\t\t\t\tthis.logService.info('Created snippet', this.extUri.basename(resource));\n\t\t\t}\n\t\t}\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(this.environmentService.snippetsHome);\n\t\t\treturn !stat.children?.length;\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n}\n"]}