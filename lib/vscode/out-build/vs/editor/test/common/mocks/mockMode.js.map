{"version":3,"file":"mockMode.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/mocks/mockMode.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,QAAS,SAAQ,sBAAU;QAGvC,YAAY,kBAAsC;YACjD,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC/C,CAAC;QAEM,KAAK;YACX,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QAC1C,CAAC;QAEM,qBAAqB;YAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACjC,CAAC;KACD;IAfD,4BAeC;IAED,MAAa,sBAAsB;QAElC,YAA4B,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YADzD,gBAAW,GAA8B,aAAK,CAAC,IAAI,CAAC;QACS,CAAC;KACvE;IAHD,wDAGC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IMode, LanguageIdentifier } from 'vs/editor/common/modes';\nimport { ILanguageSelection } from 'vs/editor/common/services/modeService';\n\nexport class MockMode extends Disposable implements IMode {\n\tprivate readonly _languageIdentifier: LanguageIdentifier;\n\n\tconstructor(languageIdentifier: LanguageIdentifier) {\n\t\tsuper();\n\t\tthis._languageIdentifier = languageIdentifier;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._languageIdentifier.language;\n\t}\n\n\tpublic getLanguageIdentifier(): LanguageIdentifier {\n\t\treturn this._languageIdentifier;\n\t}\n}\n\nexport class StaticLanguageSelector implements ILanguageSelection {\n\treadonly onDidChange: Event<LanguageIdentifier> = Event.None;\n\tconstructor(public readonly languageIdentifier: LanguageIdentifier) { }\n}\n"]}