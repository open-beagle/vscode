{"version":3,"file":"viewModelImpl.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/viewModel/viewModelImpl.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAShG,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE;QAEvB,IAAI,CAAC,yEAAyE,EAAE,GAAG,EAAE;YACpF,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,MAAM,IAAI,GAAG;gBACZ,mBAAmB,EAAE,CAAC;aACtB,CAAC;YACF,CAAA,GAAA,6BAAa,CAAA,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC9C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEhD,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE/B,KAAK,CAAC,UAAU,CAAC,CAAC;wBACjB,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC5B,IAAI,EAAE;4BACL,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;4BACR,QAAQ;yBACR,CAAC,IAAI,CAAC,IAAI,CAAC;qBACZ,CAAC,CAAC,CAAC;gBAEJ,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yEAAyE,EAAE,GAAG,EAAE;YACpF,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,CAAA,GAAA,6BAAa,CAAA,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC5C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEhD,KAAK,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC;wBAC7B,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC5B,IAAI,EAAE,WAAW;qBACjB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEhB,KAAK,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC;wBAC7B,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC5B,IAAI,EAAE,WAAW;qBACjB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEhB,KAAK,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC;wBAC7B,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC5B,IAAI,EAAE,WAAW;qBACjB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEhB,IAAI,aAAa,GAAa,EAAE,CAAC;gBAEjC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;gBAC7C,SAAS,CAAC,mBAAmB,CAAC,IAAI,KAAM,SAAQ,mCAAgB;oBACtD,YAAY,CAAC,MAAmB;wBACxC,wBAAwB;wBACxB,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;oBAC9C,CAAC;iBACD,CAAC,CAAC;gBACH,KAAK,CAAC,IAAI,EAAE,CAAC;gBACb,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;gBAE7C,MAAM,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,MAAM,IAAI,GAAG;gBACZ,OAAO;gBACP,OAAO;gBACP,OAAO;aACP,CAAC;YACF,CAAA,GAAA,6BAAa,CAAA,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC5C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;gBAChD,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,IAAI,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACvD,MAAM,IAAI,GAAG;gBACZ,EAAE;aACF,CAAC;YACF,CAAA,GAAA,6BAAa,CAAA,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC5C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEhD,KAAK,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC;wBAC7B,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC5B,IAAI,EAAE,qBAAqB;qBAC3B,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEhB,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEhD,KAAK,CAAC,IAAI,EAAE,CAAC;gBACb,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,IAAI,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,SAAS,wBAAwB,CAAC,IAAc,EAAE,MAAe,EAAE,uBAAgC,EAAE,QAA2B;YAC/H,CAAA,GAAA,6BAAa,CAAA,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC5C,IAAI,MAAM,GAAG,SAAS,CAAC,kBAAkB,CAAC,MAAM,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAClF,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,UAAU,GAAG;YAClB,EAAE;YACF,OAAO;YACP,OAAO;YACP,OAAO;YACP,EAAE;SACF,CAAC;QAEF,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,EAAE,CACF,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC7D,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,IAAI,EACJ,SAAS,CACT,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,MAAM,CACN,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC7D,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,IAAI,EACJ,MAAM,CACN,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,EAAE,CACF,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC7D,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,IAAI,EACJ,gBAAgB,CAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,MAAM,CACN,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC7D,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,IAAI,EACJ,CAAC,MAAM,EAAE,OAAO,CAAC,CACjB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,CAAC,MAAM,EAAE,MAAM,CAAC,CAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC5C,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,KAAK,EACL,CAAC,MAAM,EAAE,MAAM,CAAC,CAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC7D,wBAAwB,CACvB,UAAU,EACV;gBACC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrB,EACD,IAAI,EACJ,gBAAgB,CAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yDAAyD,EAAE,GAAG,EAAE;YACpE,CAAA,GAAA,6BAAa,CAAA,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAClD,KAAK,CAAC,MAAM,YAAsB,CAAC;gBACnC,IAAI,MAAM,GAAG,SAAS,CAAC,kBAAkB,CAAC,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC/E,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8FAA8F,EAAE,GAAG,EAAE;YACzG,CAAA,GAAA,6BAAa,CAAA,CACZ;gBACC,SAAS;gBACT,0BAA0B;gBAC1B,wBAAwB;gBACxB,QAAQ;gBACR,0BAA0B;gBAC1B,wBAAwB;gBACxB,QAAQ;gBACR,0BAA0B;gBAC1B,wBAAwB;gBACxB,QAAQ;gBACR,GAAG;aACH,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE;gBAC3B,SAAS,CAAC,cAAc,CAAC;oBACxB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBACrB,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBACrB,CAAC,CAAC;gBAEH,KAAK,CAAC,UAAU,CAAC;oBAChB,EAAE,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;oBAChD,EAAE,KAAK,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;oBAChD,EAAE,KAAK,EAAE,IAAI,aAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;iBAClD,CAAC,CAAC;gBAEH,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YAClD,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLineSequence } from 'vs/editor/common/model';\nimport { testViewModel } from 'vs/editor/test/common/viewModel/testViewModel';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\nimport { ViewEvent } from 'vs/editor/common/view/viewEvents';\n\nsuite('ViewModel', () => {\n\n\ttest('issue #21073: SplitLinesCollection: attempt to access a \\'newer\\' model', () => {\n\t\tconst text = [''];\n\t\tconst opts = {\n\t\t\tlineNumbersMinChars: 1\n\t\t};\n\t\ttestViewModel(text, opts, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 1);\n\n\t\t\tviewModel.setViewport(1, 1, 1);\n\n\t\t\tmodel.applyEdits([{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: [\n\t\t\t\t\t'line01',\n\t\t\t\t\t'line02',\n\t\t\t\t\t'line03',\n\t\t\t\t\t'line04',\n\t\t\t\t\t'line05',\n\t\t\t\t\t'line06',\n\t\t\t\t\t'line07',\n\t\t\t\t\t'line08',\n\t\t\t\t\t'line09',\n\t\t\t\t\t'line10',\n\t\t\t\t].join('\\n')\n\t\t\t}]);\n\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 10);\n\t\t});\n\t});\n\n\ttest('issue #44805: SplitLinesCollection: attempt to access a \\'newer\\' model', () => {\n\t\tconst text = [''];\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 1);\n\n\t\t\tmodel.pushEditOperations([], [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: '\\ninsert1'\n\t\t\t}], () => ([]));\n\n\t\t\tmodel.pushEditOperations([], [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: '\\ninsert2'\n\t\t\t}], () => ([]));\n\n\t\t\tmodel.pushEditOperations([], [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: '\\ninsert3'\n\t\t\t}], () => ([]));\n\n\t\t\tlet viewLineCount: number[] = [];\n\n\t\t\tviewLineCount.push(viewModel.getLineCount());\n\t\t\tviewModel.addViewEventHandler(new class extends ViewEventHandler {\n\t\t\t\toverride handleEvents(events: ViewEvent[]): void {\n\t\t\t\t\t// Access the view model\n\t\t\t\t\tviewLineCount.push(viewModel.getLineCount());\n\t\t\t\t}\n\t\t\t});\n\t\t\tmodel.undo();\n\t\t\tviewLineCount.push(viewModel.getLineCount());\n\n\t\t\tassert.deepStrictEqual(viewLineCount, [4, 1, 1, 1, 1]);\n\t\t});\n\t});\n\n\ttest('issue #44805: No visible lines via API call', () => {\n\t\tconst text = [\n\t\t\t'line1',\n\t\t\t'line2',\n\t\t\t'line3'\n\t\t];\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 3);\n\t\t\tviewModel.setHiddenAreas([new Range(1, 1, 3, 1)]);\n\t\t\tassert.ok(viewModel.getVisibleRanges() !== null);\n\t\t});\n\t});\n\n\ttest('issue #44805: No visible lines via undoing', () => {\n\t\tconst text = [\n\t\t\t''\n\t\t];\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 1);\n\n\t\t\tmodel.pushEditOperations([], [{\n\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\ttext: 'line1\\nline2\\nline3'\n\t\t\t}], () => ([]));\n\n\t\t\tviewModel.setHiddenAreas([new Range(1, 1, 1, 1)]);\n\t\t\tassert.strictEqual(viewModel.getLineCount(), 2);\n\n\t\t\tmodel.undo();\n\t\t\tassert.ok(viewModel.getVisibleRanges() !== null);\n\t\t});\n\t});\n\n\tfunction assertGetPlainTextToCopy(text: string[], ranges: Range[], emptySelectionClipboard: boolean, expected: string | string[]): void {\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\t\t\tlet actual = viewModel.getPlainTextToCopy(ranges, emptySelectionClipboard, false);\n\t\t\tassert.deepStrictEqual(actual, expected);\n\t\t});\n\t}\n\n\tconst USUAL_TEXT = [\n\t\t'',\n\t\t'line2',\n\t\t'line3',\n\t\t'line4',\n\t\t''\n\t];\n\n\ttest('getPlainTextToCopy 0/1', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 2)\n\t\t\t],\n\t\t\tfalse,\n\t\t\t''\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 0/1 - emptySelectionClipboard', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 2)\n\t\t\t],\n\t\t\ttrue,\n\t\t\t'line2\\n'\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 1/1', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 6)\n\t\t\t],\n\t\t\tfalse,\n\t\t\t'ine2'\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 1/1 - emptySelectionClipboard', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 6)\n\t\t\t],\n\t\t\ttrue,\n\t\t\t'ine2'\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 0/2', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 2),\n\t\t\t\tnew Range(3, 2, 3, 2),\n\t\t\t],\n\t\t\tfalse,\n\t\t\t''\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 0/2 - emptySelectionClipboard', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 2),\n\t\t\t\tnew Range(3, 2, 3, 2),\n\t\t\t],\n\t\t\ttrue,\n\t\t\t'line2\\nline3\\n'\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 1/2', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 6),\n\t\t\t\tnew Range(3, 2, 3, 2),\n\t\t\t],\n\t\t\tfalse,\n\t\t\t'ine2'\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 1/2 - emptySelectionClipboard', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 6),\n\t\t\t\tnew Range(3, 2, 3, 2),\n\t\t\t],\n\t\t\ttrue,\n\t\t\t['ine2', 'line3']\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 2/2', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 6),\n\t\t\t\tnew Range(3, 2, 3, 6),\n\t\t\t],\n\t\t\tfalse,\n\t\t\t['ine2', 'ine3']\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 2/2 reversed', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(3, 2, 3, 6),\n\t\t\t\tnew Range(2, 2, 2, 6),\n\t\t\t],\n\t\t\tfalse,\n\t\t\t['ine2', 'ine3']\n\t\t);\n\t});\n\n\ttest('getPlainTextToCopy 0/3 - emptySelectionClipboard', () => {\n\t\tassertGetPlainTextToCopy(\n\t\t\tUSUAL_TEXT,\n\t\t\t[\n\t\t\t\tnew Range(2, 2, 2, 2),\n\t\t\t\tnew Range(2, 3, 2, 3),\n\t\t\t\tnew Range(3, 2, 3, 2),\n\t\t\t],\n\t\t\ttrue,\n\t\t\t'line2\\nline3\\n'\n\t\t);\n\t});\n\n\ttest('issue #22688 - always use CRLF for clipboard on Windows', () => {\n\t\ttestViewModel(USUAL_TEXT, {}, (viewModel, model) => {\n\t\t\tmodel.setEOL(EndOfLineSequence.LF);\n\t\t\tlet actual = viewModel.getPlainTextToCopy([new Range(2, 1, 5, 1)], true, true);\n\t\t\tassert.deepStrictEqual(actual, 'line2\\r\\nline3\\r\\nline4\\r\\n');\n\t\t});\n\t});\n\n\ttest('issue #40926: Incorrect spacing when inserting new line after multiple folded blocks of code', () => {\n\t\ttestViewModel(\n\t\t\t[\n\t\t\t\t'foo = {',\n\t\t\t\t'    foobar: function() {',\n\t\t\t\t'        this.foobar();',\n\t\t\t\t'    },',\n\t\t\t\t'    foobar: function() {',\n\t\t\t\t'        this.foobar();',\n\t\t\t\t'    },',\n\t\t\t\t'    foobar: function() {',\n\t\t\t\t'        this.foobar();',\n\t\t\t\t'    },',\n\t\t\t\t'}',\n\t\t\t], {}, (viewModel, model) => {\n\t\t\t\tviewModel.setHiddenAreas([\n\t\t\t\t\tnew Range(3, 1, 3, 1),\n\t\t\t\t\tnew Range(6, 1, 6, 1),\n\t\t\t\t\tnew Range(9, 1, 9, 1),\n\t\t\t\t]);\n\n\t\t\t\tmodel.applyEdits([\n\t\t\t\t\t{ range: new Range(4, 7, 4, 7), text: '\\n    ' },\n\t\t\t\t\t{ range: new Range(7, 7, 7, 7), text: '\\n    ' },\n\t\t\t\t\t{ range: new Range(10, 7, 10, 7), text: '\\n    ' }\n\t\t\t\t]);\n\n\t\t\t\tassert.strictEqual(viewModel.getLineCount(), 11);\n\t\t\t}\n\t\t);\n\t});\n});\n"]}