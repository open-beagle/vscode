{"version":3,"file":"viewModelDecorations.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/viewModel/viewModelDecorations.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { InlineDecoration, InlineDecorationType } from 'vs/editor/common/viewModel/viewModel';\nimport { testViewModel } from 'vs/editor/test/common/viewModel/testViewModel';\n\nsuite('ViewModelDecorations', () => {\n\ttest('getDecorationsViewportData', () => {\n\t\tconst text = [\n\t\t\t'hello world, this is a buffer that will be wrapped'\n\t\t];\n\t\tconst opts: IEditorOptions = {\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 13\n\t\t};\n\t\ttestViewModel(text, opts, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineContent(1), 'hello world, ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(2), 'this is a ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(3), 'buffer that ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(4), 'will be ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(5), 'wrapped');\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\tlet createOpts = (id: string) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclassName: id,\n\t\t\t\t\t\tinlineClassName: 'i-' + id,\n\t\t\t\t\t\tbeforeContentClassName: 'b-' + id,\n\t\t\t\t\t\tafterContentClassName: 'a-' + id\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// VIEWPORT will be (1,14) -> (1,36)\n\n\t\t\t\t// completely before viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 3), createOpts('dec1'));\n\t\t\t\t// starts before viewport, ends at viewport start\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 14), createOpts('dec2'));\n\t\t\t\t// starts before viewport, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 15), createOpts('dec3'));\n\t\t\t\t// starts before viewport, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 36), createOpts('dec4'));\n\t\t\t\t// starts before viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 2, 1, 51), createOpts('dec5'));\n\n\t\t\t\t// starts at viewport start, ends at viewport start\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 14), createOpts('dec6'));\n\t\t\t\t// starts at viewport start, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 16), createOpts('dec7'));\n\t\t\t\t// starts at viewport start, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 36), createOpts('dec8'));\n\t\t\t\t// starts at viewport start, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 14, 1, 51), createOpts('dec9'));\n\n\t\t\t\t// starts inside viewport, ends inside viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 18), createOpts('dec10'));\n\t\t\t\t// starts inside viewport, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 36), createOpts('dec11'));\n\t\t\t\t// starts inside viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 16, 1, 51), createOpts('dec12'));\n\n\t\t\t\t// starts at viewport end, ends at viewport end\n\t\t\t\taccessor.addDecoration(new Range(1, 36, 1, 36), createOpts('dec13'));\n\t\t\t\t// starts at viewport end, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 36, 1, 51), createOpts('dec14'));\n\n\t\t\t\t// starts after viewport, ends after viewport\n\t\t\t\taccessor.addDecoration(new Range(1, 40, 1, 51), createOpts('dec15'));\n\t\t\t});\n\n\t\t\tlet actualDecorations = viewModel.getDecorationsInViewport(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3))\n\t\t\t).map((dec) => {\n\t\t\t\treturn dec.options.className;\n\t\t\t}).filter(Boolean);\n\n\t\t\tassert.deepStrictEqual(actualDecorations, [\n\t\t\t\t'dec1',\n\t\t\t\t'dec2',\n\t\t\t\t'dec3',\n\t\t\t\t'dec4',\n\t\t\t\t'dec5',\n\t\t\t\t'dec6',\n\t\t\t\t'dec7',\n\t\t\t\t'dec8',\n\t\t\t\t'dec9',\n\t\t\t\t'dec10',\n\t\t\t\t'dec11',\n\t\t\t\t'dec12',\n\t\t\t\t'dec13',\n\t\t\t\t'dec14',\n\t\t\t]);\n\n\t\t\tlet inlineDecorations1 = viewModel.getViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t2\n\t\t\t).inlineDecorations;\n\n\t\t\t// view line 2: (1,14 -> 1,24)\n\t\t\tassert.deepStrictEqual(inlineDecorations1, [\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 2, 2), 'i-dec3', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 2, 2, 2), 'a-dec3', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 3, 13), 'i-dec4', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 5, 8), 'i-dec5', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'i-dec6', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec6', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'a-dec6', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 3), 'i-dec7', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec7', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'a-dec7', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 3, 13), 'i-dec8', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec8', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 5, 8), 'i-dec9', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 2, 1), 'b-dec9', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 5), 'i-dec10', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec10', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 5, 2, 5), 'a-dec10', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 3, 13), 'i-dec11', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec11', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 5, 8), 'i-dec12', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 2, 3), 'b-dec12', InlineDecorationType.Before),\n\t\t\t]);\n\n\t\t\tlet inlineDecorations2 = viewModel.getViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t3\n\t\t\t).inlineDecorations;\n\n\t\t\t// view line 3 (24 -> 36)\n\t\t\tassert.deepStrictEqual(inlineDecorations2, [\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 3, 13), 'i-dec4', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec4', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(1, 2, 5, 8), 'i-dec5', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 3, 13), 'i-dec8', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec8', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 1, 5, 8), 'i-dec9', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 3, 13), 'i-dec11', InlineDecorationType.Regular),\n\t\t\t\tnew InlineDecoration(new Range(3, 13, 3, 13), 'a-dec11', InlineDecorationType.After),\n\t\t\t\tnew InlineDecoration(new Range(2, 3, 5, 8), 'i-dec12', InlineDecorationType.Regular),\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('issue #17208: Problem scrolling in 1.8.0', () => {\n\t\tconst text = [\n\t\t\t'hello world, this is a buffer that will be wrapped'\n\t\t];\n\t\tconst opts: IEditorOptions = {\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 13\n\t\t};\n\t\ttestViewModel(text, opts, (viewModel, model) => {\n\t\t\tassert.strictEqual(viewModel.getLineContent(1), 'hello world, ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(2), 'this is a ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(3), 'buffer that ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(4), 'will be ');\n\t\t\tassert.strictEqual(viewModel.getLineContent(5), 'wrapped');\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\taccessor.addDecoration(\n\t\t\t\t\tnew Range(1, 50, 1, 51),\n\t\t\t\t\t{\n\t\t\t\t\t\tbeforeContentClassName: 'dec1'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet decorations = viewModel.getDecorationsInViewport(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3))\n\t\t\t).filter(x => Boolean(x.options.beforeContentClassName));\n\t\t\tassert.deepStrictEqual(decorations, []);\n\n\t\t\tlet inlineDecorations1 = viewModel.getViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t2\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations1, []);\n\n\t\t\tlet inlineDecorations2 = viewModel.getViewLineRenderingData(\n\t\t\t\tnew Range(2, viewModel.getLineMinColumn(2), 3, viewModel.getLineMaxColumn(3)),\n\t\t\t\t3\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations2, []);\n\t\t});\n\t});\n\n\ttest('issue #37401: Allow both before and after decorations on empty line', () => {\n\t\tconst text = [\n\t\t\t''\n\t\t];\n\t\ttestViewModel(text, {}, (viewModel, model) => {\n\n\t\t\tmodel.changeDecorations((accessor) => {\n\t\t\t\taccessor.addDecoration(\n\t\t\t\t\tnew Range(1, 1, 1, 1),\n\t\t\t\t\t{\n\t\t\t\t\t\tbeforeContentClassName: 'before1',\n\t\t\t\t\t\tafterContentClassName: 'after1'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet inlineDecorations = viewModel.getViewLineRenderingData(\n\t\t\t\tnew Range(1, 1, 1, 1),\n\t\t\t\t1\n\t\t\t).inlineDecorations;\n\t\t\tassert.deepStrictEqual(inlineDecorations, [\n\t\t\t\tnew InlineDecoration(new Range(1, 1, 1, 1), 'before1', InlineDecorationType.Before),\n\t\t\t\tnew InlineDecoration(new Range(1, 1, 1, 1), 'after1', InlineDecorationType.After)\n\t\t\t]);\n\t\t});\n\t});\n});\n"]}