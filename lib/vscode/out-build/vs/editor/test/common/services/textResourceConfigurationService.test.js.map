{"version":3,"file":"textResourceConfigurationService.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/services/textResourceConfigurationService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IConfigurationValue, IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { TextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfigurationServiceImpl';\nimport { URI } from 'vs/base/common/uri';\n\n\nsuite('TextResourceConfigurationService - Update', () => {\n\n\tlet configurationValue: IConfigurationValue<any> = {};\n\tlet updateArgs: any[];\n\tlet configurationService = new class extends TestConfigurationService {\n\t\toverride inspect() {\n\t\t\treturn configurationValue;\n\t\t}\n\t\toverride updateValue() {\n\t\t\tupdateArgs = [...arguments];\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}();\n\tlet language: string | null = null;\n\tlet testObject: TextResourceConfigurationService;\n\n\tsetup(() => {\n\t\tconst instantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IModelService, <Partial<IModelService>>{ getModel() { return null; } });\n\t\tinstantiationService.stub(IModeService, <Partial<IModeService>>{ getModeIdByFilepathOrFirstLine() { return language; } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\ttestObject = instantiationService.createInstance(TextResourceConfigurationService);\n\t});\n\n\ttest('updateValue writes without target and overrides when no language is defined', async () => {\n\t\tconst resource = URI.file('someFile');\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes with target and without overrides when no language is defined', async () => {\n\t\tconst resource = URI.file('someFile');\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.USER_LOCAL);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into given memory target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '1' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.MEMORY);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.MEMORY]);\n\t});\n\n\ttest('updateValue writes into given workspace target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.WORKSPACE);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into given user target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.USER);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER]);\n\t});\n\n\ttest('updateValue writes into given workspace folder target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2', override: '1' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b', ConfigurationTarget.WORKSPACE_FOLDER);\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace folder target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace folder target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '1' },\n\t\t\tworkspaceFolder: { value: '2', override: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE_FOLDER]);\n\t});\n\n\ttest('updateValue writes into derived workspace target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived workspace target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived workspace target with overrides and value defined in folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1', override: '3' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tworkspace: { value: '2', override: '2' },\n\t\t\tworkspaceFolder: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.WORKSPACE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides and value defined in workspace', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t\tworkspace: { value: '3' }\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user remote target with overrides and value defined in workspace folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '1' },\n\t\t\tuserRemote: { value: '2', override: '3' },\n\t\t\tworkspace: { value: '3' },\n\t\t\tworkspaceFolder: { value: '3' }\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_REMOTE]);\n\t});\n\n\ttest('updateValue writes into derived user target without overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in remote', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tuserRemote: { value: '3' }\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in workspace', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tworkspaceValue: { value: '3' }\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue writes into derived user target with overrides and value is defined in workspace folder', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1', override: '3' },\n\t\t\tuserLocal: { value: '2', override: '3' },\n\t\t\tuserRemote: { value: '3' },\n\t\t\tworkspaceFolderValue: { value: '3' }\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', '2');\n\t\tassert.deepStrictEqual(updateArgs, ['a', '2', { resource, overrideIdentifier: language }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n\ttest('updateValue when not changed', async () => {\n\t\tlanguage = 'a';\n\t\tconfigurationValue = {\n\t\t\tdefault: { value: '1' },\n\t\t};\n\t\tconst resource = URI.file('someFile');\n\n\t\tawait testObject.updateValue(resource, 'a', 'b');\n\t\tassert.deepStrictEqual(updateArgs, ['a', 'b', { resource }, ConfigurationTarget.USER_LOCAL]);\n\t});\n\n});\n"]}