{"version":3,"file":"editorSimpleWorker.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/services/editorSimpleWorker.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditorSimpleWorker, ICommonModel } from 'vs/editor/common/services/editorSimpleWorker';\nimport { EditorWorkerHost } from 'vs/editor/common/services/editorWorkerServiceImpl';\n\nsuite('EditorSimpleWorker', () => {\n\n\tclass WorkerWithModels extends EditorSimpleWorker {\n\n\t\tgetModel(uri: string) {\n\t\t\treturn this._getModel(uri);\n\t\t}\n\n\t\taddModel(lines: string[], eol: string = '\\n') {\n\t\t\tconst uri = 'test:file#' + Date.now();\n\t\t\tthis.acceptNewModel({\n\t\t\t\turl: uri,\n\t\t\t\tversionId: 1,\n\t\t\t\tlines: lines,\n\t\t\t\tEOL: eol\n\t\t\t});\n\t\t\treturn this._getModel(uri);\n\t\t}\n\t}\n\n\tlet worker: WorkerWithModels;\n\tlet model: ICommonModel;\n\n\tsetup(() => {\n\t\tworker = new WorkerWithModels(<EditorWorkerHost>null!, null);\n\t\tmodel = worker.addModel([\n\t\t\t'This is line one', //16\n\t\t\t'and this is line number two', //27\n\t\t\t'it is followed by #3', //20\n\t\t\t'and finished with the fourth.', //29\n\t\t]);\n\t});\n\n\tfunction assertPositionAt(offset: number, line: number, column: number) {\n\t\tlet position = model.positionAt(offset);\n\t\tassert.strictEqual(position.lineNumber, line);\n\t\tassert.strictEqual(position.column, column);\n\t}\n\n\tfunction assertOffsetAt(lineNumber: number, column: number, offset: number) {\n\t\tlet actual = model.offsetAt({ lineNumber, column });\n\t\tassert.strictEqual(actual, offset);\n\t}\n\n\ttest('ICommonModel#offsetAt', () => {\n\t\tassertOffsetAt(1, 1, 0);\n\t\tassertOffsetAt(1, 2, 1);\n\t\tassertOffsetAt(1, 17, 16);\n\t\tassertOffsetAt(2, 1, 17);\n\t\tassertOffsetAt(2, 4, 20);\n\t\tassertOffsetAt(3, 1, 45);\n\t\tassertOffsetAt(5, 30, 95);\n\t\tassertOffsetAt(5, 31, 95);\n\t\tassertOffsetAt(5, Number.MAX_VALUE, 95);\n\t\tassertOffsetAt(6, 30, 95);\n\t\tassertOffsetAt(Number.MAX_VALUE, 30, 95);\n\t\tassertOffsetAt(Number.MAX_VALUE, Number.MAX_VALUE, 95);\n\t});\n\n\ttest('ICommonModel#positionAt', () => {\n\t\tassertPositionAt(0, 1, 1);\n\t\tassertPositionAt(Number.MIN_VALUE, 1, 1);\n\t\tassertPositionAt(1, 1, 2);\n\t\tassertPositionAt(16, 1, 17);\n\t\tassertPositionAt(17, 2, 1);\n\t\tassertPositionAt(20, 2, 4);\n\t\tassertPositionAt(45, 3, 1);\n\t\tassertPositionAt(95, 4, 30);\n\t\tassertPositionAt(96, 4, 30);\n\t\tassertPositionAt(99, 4, 30);\n\t\tassertPositionAt(Number.MAX_VALUE, 4, 30);\n\t});\n\n\ttest('ICommonModel#validatePosition, issue #15882', function () {\n\t\tlet model = worker.addModel(['{\"id\": \"0001\",\"type\": \"donut\",\"name\": \"Cake\",\"image\":{\"url\": \"images/0001.jpg\",\"width\": 200,\"height\": 200},\"thumbnail\":{\"url\": \"images/thumbnails/0001.jpg\",\"width\": 32,\"height\": 32}}']);\n\t\tassert.strictEqual(model.offsetAt({ lineNumber: 1, column: 2 }), 1);\n\t});\n\n\ttest('MoreMinimal', () => {\n\n\t\treturn worker.computeMoreMinimalEdits(model.uri.toString(), [{ text: 'This is line One', range: new Range(1, 1, 1, 17) }]).then(edits => {\n\t\t\tassert.strictEqual(edits.length, 1);\n\t\t\tconst [first] = edits;\n\t\t\tassert.strictEqual(first.text, 'O');\n\t\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 14, endLineNumber: 1, endColumn: 15 });\n\t\t});\n\t});\n\n\ttest('MoreMinimal, issue #15385 newline changes only', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'{',\n\t\t\t'\\t\"a\":1',\n\t\t\t'}'\n\t\t], '\\n');\n\n\t\treturn worker.computeMoreMinimalEdits(model.uri.toString(), [{ text: '{\\r\\n\\t\"a\":1\\r\\n}', range: new Range(1, 1, 3, 2) }]).then(edits => {\n\t\t\tassert.strictEqual(edits.length, 0);\n\t\t});\n\t});\n\n\ttest('MoreMinimal, issue #15385 newline changes and other', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'{',\n\t\t\t'\\t\"a\":1',\n\t\t\t'}'\n\t\t], '\\n');\n\n\t\treturn worker.computeMoreMinimalEdits(model.uri.toString(), [{ text: '{\\r\\n\\t\"b\":1\\r\\n}', range: new Range(1, 1, 3, 2) }]).then(edits => {\n\t\t\tassert.strictEqual(edits.length, 1);\n\t\t\tconst [first] = edits;\n\t\t\tassert.strictEqual(first.text, 'b');\n\t\t\tassert.deepStrictEqual(first.range, { startLineNumber: 2, startColumn: 3, endLineNumber: 2, endColumn: 4 });\n\t\t});\n\t});\n\n\ttest('MoreMinimal, issue #15385 newline changes and other', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'package main',\t// 1\n\t\t\t'func foo() {',\t// 2\n\t\t\t'}'\t\t\t\t// 3\n\t\t]);\n\n\t\treturn worker.computeMoreMinimalEdits(model.uri.toString(), [{ text: '\\n', range: new Range(3, 2, 4, 1000) }]).then(edits => {\n\t\t\tassert.strictEqual(edits.length, 1);\n\t\t\tconst [first] = edits;\n\t\t\tassert.strictEqual(first.text, '\\n');\n\t\t\tassert.deepStrictEqual(first.range, { startLineNumber: 3, startColumn: 2, endLineNumber: 3, endColumn: 2 });\n\t\t});\n\t});\n\n\n\ttest('ICommonModel#getValueInRange, issue #17424', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'package main',\t// 1\n\t\t\t'func foo() {',\t// 2\n\t\t\t'}'\t\t\t\t// 3\n\t\t]);\n\n\t\tconst value = model.getValueInRange({ startLineNumber: 3, startColumn: 1, endLineNumber: 4, endColumn: 1 });\n\t\tassert.strictEqual(value, '}');\n\t});\n\n\n\ttest('textualSuggest, issue #17785', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'foobar',\t// 1\n\t\t\t'f f'\t// 2\n\t\t]);\n\n\t\treturn worker.textualSuggest([model.uri.toString()], 'f', '[a-z]+', 'img').then((result) => {\n\t\t\tif (!result) {\n\t\t\t\tassert.ok(false);\n\t\t\t}\n\t\t\tassert.strictEqual(result.words.length, 1);\n\t\t\tassert.strictEqual(typeof result.duration, 'number');\n\t\t\tassert.strictEqual(result.words[0], 'foobar');\n\t\t});\n\t});\n\n\ttest('get words via iterator, issue #46930', function () {\n\n\t\tlet model = worker.addModel([\n\t\t\t'one line',\t// 1\n\t\t\t'two line',\t// 2\n\t\t\t'',\n\t\t\t'past empty',\n\t\t\t'single',\n\t\t\t'',\n\t\t\t'and now we are done'\n\t\t]);\n\n\t\tlet words: string[] = [...model.words(/[a-z]+/img)];\n\n\t\tassert.deepStrictEqual(words, ['one', 'line', 'two', 'line', 'past', 'empty', 'single', 'and', 'now', 'we', 'are', 'done']);\n\t});\n});\n"]}