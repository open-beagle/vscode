{"version":3,"file":"viewLineRenderer.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/viewLayout/viewLineRenderer.test.ts"],"names":[],"mappings":"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":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as strings from 'vs/base/common/strings';\nimport { IViewLineTokens } from 'vs/editor/common/core/lineTokens';\nimport { MetadataConsts } from 'vs/editor/common/modes';\nimport { LineDecoration } from 'vs/editor/common/viewLayout/lineDecorations';\nimport { CharacterMapping, RenderLineInput, renderViewLine2 as renderViewLine, LineRange } from 'vs/editor/common/viewLayout/viewLineRenderer';\nimport { InlineDecorationType } from 'vs/editor/common/viewModel/viewModel';\nimport { ViewLineToken, ViewLineTokens } from 'vs/editor/test/common/core/viewLineToken';\n\nfunction createViewLineTokens(viewLineTokens: ViewLineToken[]): IViewLineTokens {\n\treturn new ViewLineTokens(viewLineTokens);\n}\n\nfunction createPart(endIndex: number, foreground: number): ViewLineToken {\n\treturn new ViewLineToken(endIndex, (\n\t\tforeground << MetadataConsts.FOREGROUND_OFFSET\n\t) >>> 0);\n}\n\nsuite('viewLineRenderer.renderLine', () => {\n\n\tfunction assertCharacterReplacement(lineContent: string, tabSize: number, expected: string, expectedCharOffsetInPart: number[][], expectedPartLengts: number[]): void {\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\tstrings.isBasicASCII(lineContent),\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([new ViewLineToken(lineContent.length, 0)]),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span><span class=\"mtk0\">' + expected + '</span></span>');\n\t\tassertCharacterMapping(_actual.characterMapping, expectedCharOffsetInPart, expectedPartLengts);\n\t}\n\n\ttest('replaces spaces', () => {\n\t\tassertCharacterReplacement(' ', 4, '\\u00a0', [[0, 1]], [1]);\n\t\tassertCharacterReplacement('  ', 4, '\\u00a0\\u00a0', [[0, 1, 2]], [2]);\n\t\tassertCharacterReplacement('a  b', 4, 'a\\u00a0\\u00a0b', [[0, 1, 2, 3, 4]], [4]);\n\t});\n\n\ttest('escapes HTML markup', () => {\n\t\tassertCharacterReplacement('a<b', 4, 'a&lt;b', [[0, 1, 2, 3]], [3]);\n\t\tassertCharacterReplacement('a>b', 4, 'a&gt;b', [[0, 1, 2, 3]], [3]);\n\t\tassertCharacterReplacement('a&b', 4, 'a&amp;b', [[0, 1, 2, 3]], [3]);\n\t});\n\n\ttest('replaces some bad characters', () => {\n\t\tassertCharacterReplacement('a\\0b', 4, 'a&#00;b', [[0, 1, 2, 3]], [3]);\n\t\tassertCharacterReplacement('a' + String.fromCharCode(CharCode.UTF8_BOM) + 'b', 4, 'a\\ufffdb', [[0, 1, 2, 3]], [3]);\n\t\tassertCharacterReplacement('a\\u2028b', 4, 'a\\ufffdb', [[0, 1, 2, 3]], [3]);\n\t});\n\n\ttest('handles tabs', () => {\n\t\tassertCharacterReplacement('\\t', 4, '\\u00a0\\u00a0\\u00a0\\u00a0', [[0, 4]], [4]);\n\t\tassertCharacterReplacement('x\\t', 4, 'x\\u00a0\\u00a0\\u00a0', [[0, 1, 4]], [4]);\n\t\tassertCharacterReplacement('xx\\t', 4, 'xx\\u00a0\\u00a0', [[0, 1, 2, 4]], [4]);\n\t\tassertCharacterReplacement('xxx\\t', 4, 'xxx\\u00a0', [[0, 1, 2, 3, 4]], [4]);\n\t\tassertCharacterReplacement('xxxx\\t', 4, 'xxxx\\u00a0\\u00a0\\u00a0\\u00a0', [[0, 1, 2, 3, 4, 8]], [8]);\n\t});\n\n\tfunction assertParts(lineContent: string, tabSize: number, parts: ViewLineToken[], expected: string, expectedCharOffsetInPart: number[][], expectedPartLengts: number[]): void {\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens(parts),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expected + '</span>');\n\t\tassertCharacterMapping(_actual.characterMapping, expectedCharOffsetInPart, expectedPartLengts);\n\t}\n\n\ttest('empty line', () => {\n\t\tassertParts('', 4, [], '<span></span>', [], []);\n\t});\n\n\ttest('uses part type', () => {\n\t\tassertParts('x', 4, [createPart(1, 10)], '<span class=\"mtk10\">x</span>', [[0, 1]], [1]);\n\t\tassertParts('x', 4, [createPart(1, 20)], '<span class=\"mtk20\">x</span>', [[0, 1]], [1]);\n\t\tassertParts('x', 4, [createPart(1, 30)], '<span class=\"mtk30\">x</span>', [[0, 1]], [1]);\n\t});\n\n\ttest('two parts', () => {\n\t\tassertParts('xy', 4, [createPart(1, 1), createPart(2, 2)], '<span class=\"mtk1\">x</span><span class=\"mtk2\">y</span>', [[0], [0, 1]], [1, 1]);\n\t\tassertParts('xyz', 4, [createPart(1, 1), createPart(3, 2)], '<span class=\"mtk1\">x</span><span class=\"mtk2\">yz</span>', [[0], [0, 1, 2]], [1, 2]);\n\t\tassertParts('xyz', 4, [createPart(2, 1), createPart(3, 2)], '<span class=\"mtk1\">xy</span><span class=\"mtk2\">z</span>', [[0, 1], [0, 1]], [2, 1]);\n\t});\n\n\ttest('overflow', () => {\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'Hello world!',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(1, 0),\n\t\t\t\tcreatePart(2, 1),\n\t\t\t\tcreatePart(3, 2),\n\t\t\t\tcreatePart(4, 3),\n\t\t\t\tcreatePart(5, 4),\n\t\t\t\tcreatePart(6, 5),\n\t\t\t\tcreatePart(7, 6),\n\t\t\t\tcreatePart(8, 7),\n\t\t\t\tcreatePart(9, 8),\n\t\t\t\tcreatePart(10, 9),\n\t\t\t\tcreatePart(11, 10),\n\t\t\t\tcreatePart(12, 11),\n\t\t\t]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t6,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk0\">H</span>',\n\t\t\t'<span class=\"mtk1\">e</span>',\n\t\t\t'<span class=\"mtk2\">l</span>',\n\t\t\t'<span class=\"mtk3\">l</span>',\n\t\t\t'<span class=\"mtk4\">o</span>',\n\t\t\t'<span class=\"mtk5\">\\u00a0</span>',\n\t\t\t'<span>&hellip;</span>'\n\t\t].join('');\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expectedOutput + '</span>');\n\t\tassertCharacterMapping(_actual.characterMapping,\n\t\t\t[\n\t\t\t\t[0],\n\t\t\t\t[0],\n\t\t\t\t[0],\n\t\t\t\t[0],\n\t\t\t\t[0],\n\t\t\t\t[0, 1],\n\t\t\t],\n\t\t\t[1, 1, 1, 1, 1, 1]\n\t\t);\n\t});\n\n\ttest('typical line', () => {\n\t\tlet lineText = '\\t    export class Game { // http://test.com     ';\n\t\tlet lineParts = createViewLineTokens([\n\t\t\tcreatePart(5, 1),\n\t\t\tcreatePart(11, 2),\n\t\t\tcreatePart(12, 3),\n\t\t\tcreatePart(17, 4),\n\t\t\tcreatePart(18, 5),\n\t\t\tcreatePart(22, 6),\n\t\t\tcreatePart(23, 7),\n\t\t\tcreatePart(24, 8),\n\t\t\tcreatePart(25, 9),\n\t\t\tcreatePart(28, 10),\n\t\t\tcreatePart(43, 11),\n\t\t\tcreatePart(48, 12),\n\t\t]);\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t'<span class=\"mtk2\">export</span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0</span>',\n\t\t\t'<span class=\"mtk4\">class</span>',\n\t\t\t'<span class=\"mtk5\">\\u00a0</span>',\n\t\t\t'<span class=\"mtk6\">Game</span>',\n\t\t\t'<span class=\"mtk7\">\\u00a0</span>',\n\t\t\t'<span class=\"mtk8\">{</span>',\n\t\t\t'<span class=\"mtk9\">\\u00a0</span>',\n\t\t\t'<span class=\"mtk10\">//\\u00a0</span>',\n\t\t\t'<span class=\"mtk11\">http://test.com</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u00b7\\u00b7\\u00b7</span>'\n\t\t].join('');\n\t\tlet expectedOffsetsArr = [\n\t\t\t[0],\n\t\t\t[0, 1, 2, 3],\n\t\t\t[0, 1, 2, 3, 4, 5],\n\t\t\t[0],\n\t\t\t[0, 1, 2, 3, 4],\n\t\t\t[0],\n\t\t\t[0, 1, 2, 3],\n\t\t\t[0],\n\t\t\t[0],\n\t\t\t[0],\n\t\t\t[0, 1, 2],\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n\t\t\t[0, 1],\n\t\t\t[0, 1, 2, 3],\n\t\t];\n\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expectedOutput + '</span>');\n\t\tassertCharacterMapping(_actual.characterMapping, expectedOffsetsArr, [4, 4, 6, 1, 5, 1, 4, 1, 1, 1, 3, 15, 2, 3]);\n\t});\n\n\ttest('issue #2255: Weird line rendering part 1', () => {\n\t\tlet lineText = '\\t\\t\\tcursorStyle:\\t\\t\\t\\t\\t\\t(prevOpts.cursorStyle !== newOpts.cursorStyle),';\n\n\t\tlet lineParts = createViewLineTokens([\n\t\t\tcreatePart(3, 1), // 3 chars\n\t\t\tcreatePart(15, 2), // 12 chars\n\t\t\tcreatePart(21, 3), // 6 chars\n\t\t\tcreatePart(22, 4), // 1 char\n\t\t\tcreatePart(43, 5), // 21 chars\n\t\t\tcreatePart(45, 6), // 2 chars\n\t\t\tcreatePart(46, 7), // 1 char\n\t\t\tcreatePart(66, 8), // 20 chars\n\t\t\tcreatePart(67, 9), // 1 char\n\t\t\tcreatePart(68, 10), // 2 chars\n\t\t]);\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk2\">cursorStyle:</span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk4\">(</span>',\n\t\t\t'<span class=\"mtk5\">prevOpts.cursorStyle\\u00a0</span>',\n\t\t\t'<span class=\"mtk6\">!=</span>',\n\t\t\t'<span class=\"mtk7\">=</span>',\n\t\t\t'<span class=\"mtk8\">\\u00a0newOpts.cursorStyle</span>',\n\t\t\t'<span class=\"mtk9\">)</span>',\n\t\t\t'<span class=\"mtk10\">,</span>',\n\t\t].join('');\n\t\tlet expectedOffsetsArr = [\n\t\t\t[0, 4, 8], // 3 chars\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], // 12 chars\n\t\t\t[0, 4, 8, 12, 16, 20], // 6 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], // 21 chars\n\t\t\t[0, 1], // 2 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], // 20 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1] // 2 chars\n\t\t];\n\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expectedOutput + '</span>');\n\t\tassertCharacterMapping(_actual.characterMapping, expectedOffsetsArr, [12, 12, 24, 1, 21, 2, 1, 20, 1, 1]);\n\t});\n\n\ttest('issue #2255: Weird line rendering part 2', () => {\n\t\tlet lineText = ' \\t\\t\\tcursorStyle:\\t\\t\\t\\t\\t\\t(prevOpts.cursorStyle !== newOpts.cursorStyle),';\n\n\t\tlet lineParts = createViewLineTokens([\n\t\t\tcreatePart(4, 1), // 4 chars\n\t\t\tcreatePart(16, 2), // 12 chars\n\t\t\tcreatePart(22, 3), // 6 chars\n\t\t\tcreatePart(23, 4), // 1 char\n\t\t\tcreatePart(44, 5), // 21 chars\n\t\t\tcreatePart(46, 6), // 2 chars\n\t\t\tcreatePart(47, 7), // 1 char\n\t\t\tcreatePart(67, 8), // 20 chars\n\t\t\tcreatePart(68, 9), // 1 char\n\t\t\tcreatePart(69, 10), // 2 chars\n\t\t]);\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk2\">cursorStyle:</span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk4\">(</span>',\n\t\t\t'<span class=\"mtk5\">prevOpts.cursorStyle\\u00a0</span>',\n\t\t\t'<span class=\"mtk6\">!=</span>',\n\t\t\t'<span class=\"mtk7\">=</span>',\n\t\t\t'<span class=\"mtk8\">\\u00a0newOpts.cursorStyle</span>',\n\t\t\t'<span class=\"mtk9\">)</span>',\n\t\t\t'<span class=\"mtk10\">,</span>',\n\t\t].join('');\n\t\tlet expectedOffsetsArr = [\n\t\t\t[0, 1, 4, 8], // 4 chars\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], // 12 chars\n\t\t\t[0, 4, 8, 12, 16, 20], // 6 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], // 21 chars\n\t\t\t[0, 1], // 2 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], // 20 chars\n\t\t\t[0], // 1 char\n\t\t\t[0, 1] // 2 chars\n\t\t];\n\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expectedOutput + '</span>');\n\t\tassertCharacterMapping(_actual.characterMapping, expectedOffsetsArr, [12, 12, 24, 1, 21, 2, 1, 20, 1, 1]);\n\t});\n\n\ttest('issue #91178: after decoration type shown before cursor', () => {\n\t\tconst lineText = '//just a comment';\n\t\tconst lineParts = createViewLineTokens([\n\t\t\tcreatePart(16, 1)\n\t\t]);\n\t\tconst expectedOutput = [\n\t\t\t'<span class=\"mtk1\">//just\\u00a0a\\u00a0com</span>',\n\t\t\t'<span class=\"mtk1 dec2\"></span>',\n\t\t\t'<span class=\"mtk1 dec1\"></span>',\n\t\t\t'<span class=\"mtk1\">ment</span>',\n\t\t].join('');\n\n\t\tconst expectedCharacterMapping = new CharacterMapping(17, 4);\n\t\texpectedCharacterMapping.setPartData(0, 0, 0, 0);\n\t\texpectedCharacterMapping.setPartData(1, 0, 1, 0);\n\t\texpectedCharacterMapping.setPartData(2, 0, 2, 0);\n\t\texpectedCharacterMapping.setPartData(3, 0, 3, 0);\n\t\texpectedCharacterMapping.setPartData(4, 0, 4, 0);\n\t\texpectedCharacterMapping.setPartData(5, 0, 5, 0);\n\t\texpectedCharacterMapping.setPartData(6, 0, 6, 0);\n\t\texpectedCharacterMapping.setPartData(7, 0, 7, 0);\n\t\texpectedCharacterMapping.setPartData(8, 0, 8, 0);\n\t\texpectedCharacterMapping.setPartData(9, 0, 9, 0);\n\t\texpectedCharacterMapping.setPartData(10, 0, 10, 0);\n\t\texpectedCharacterMapping.setPartData(11, 0, 11, 0);\n\t\texpectedCharacterMapping.setPartData(12, 2, 0, 12);\n\t\texpectedCharacterMapping.setPartData(13, 3, 1, 12);\n\t\texpectedCharacterMapping.setPartData(14, 3, 2, 12);\n\t\texpectedCharacterMapping.setPartData(15, 3, 3, 12);\n\t\texpectedCharacterMapping.setPartData(16, 3, 4, 12);\n\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[\n\t\t\t\tnew LineDecoration(13, 13, 'dec1', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(13, 13, 'dec2', InlineDecorationType.Before),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput + '</span>');\n\t\tassertCharacterMapping2(actual.characterMapping, expectedCharacterMapping);\n\t});\n\n\ttest('issue microsoft/monaco-editor#280: Improved source code rendering for RTL languages', () => {\n\t\tlet lineText = 'var קודמות = \\\"מיותר קודמות צ\\'ט של, אם לשון העברית שינויים ויש, אם\\\";';\n\n\t\tlet lineParts = createViewLineTokens([\n\t\t\tcreatePart(3, 6),\n\t\t\tcreatePart(13, 1),\n\t\t\tcreatePart(66, 20),\n\t\t\tcreatePart(67, 1),\n\t\t]);\n\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk6\">var</span>',\n\t\t\t'<span class=\"mtk1\">\\u00a0קודמות\\u00a0=\\u00a0</span>',\n\t\t\t'<span class=\"mtk20\">\"מיותר\\u00a0קודמות\\u00a0צ\\'ט\\u00a0של,\\u00a0אם\\u00a0לשון\\u00a0העברית\\u00a0שינויים\\u00a0ויש,\\u00a0אם\"</span>',\n\t\t\t'<span class=\"mtk1\">;</span>'\n\t\t].join('');\n\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span dir=\"ltr\">' + expectedOutput + '</span>');\n\t\tassert.strictEqual(_actual.containsRTL, true);\n\t});\n\n\ttest('issue #6885: Splits large tokens', () => {\n\t\t//                                                                                                                  1         1         1\n\t\t//                        1         2         3         4         5         6         7         8         9         0         1         2\n\t\t//               1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234\n\t\tlet _lineText = 'This is just a long line that contains very interesting text. This is just a long line that contains very interesting text.';\n\n\t\tfunction assertSplitsTokens(message: string, lineText: string, expectedOutput: string[]): void {\n\t\t\tlet lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tlineText,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t0,\n\t\t\t\tlineParts,\n\t\t\t\t[],\n\t\t\t\t4,\n\t\t\t\t0,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t-1,\n\t\t\t\t'none',\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tnull\n\t\t\t));\n\t\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>', message);\n\t\t}\n\n\t\t// A token with 49 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'49 chars',\n\t\t\t\t_lineText.substr(0, 49),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0inter</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 50 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'50 chars',\n\t\t\t\t_lineText.substr(0, 50),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 51 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'51 chars',\n\t\t\t\t_lineText.substr(0, 51),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">s</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 99 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'99 chars',\n\t\t\t\t_lineText.substr(0, 99),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contain</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 100 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'100 chars',\n\t\t\t\t_lineText.substr(0, 100),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t// A token with 101 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'101 chars',\n\t\t\t\t_lineText.substr(0, 101),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0intere</span>',\n\t\t\t\t\t'<span class=\"mtk1\">sting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains</span>',\n\t\t\t\t\t'<span class=\"mtk1\">\\u00a0</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t});\n\n\ttest('issue #21476: Does not split large tokens when ligatures are on', () => {\n\t\t//                                                                                                                  1         1         1\n\t\t//                        1         2         3         4         5         6         7         8         9         0         1         2\n\t\t//               1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234\n\t\tlet _lineText = 'This is just a long line that contains very interesting text. This is just a long line that contains very interesting text.';\n\n\t\tfunction assertSplitsTokens(message: string, lineText: string, expectedOutput: string[]): void {\n\t\t\tlet lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tlineText,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t0,\n\t\t\t\tlineParts,\n\t\t\t\t[],\n\t\t\t\t4,\n\t\t\t\t0,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t-1,\n\t\t\t\t'none',\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tnull\n\t\t\t));\n\t\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>', message);\n\t\t}\n\n\t\t// A token with 101 chars\n\t\t{\n\t\t\tassertSplitsTokens(\n\t\t\t\t'101 chars',\n\t\t\t\t_lineText.substr(0, 101),\n\t\t\t\t[\n\t\t\t\t\t'<span class=\"mtk1\">This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0contains\\u00a0very\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk1\">interesting\\u00a0text.\\u00a0This\\u00a0is\\u00a0just\\u00a0a\\u00a0long\\u00a0line\\u00a0that\\u00a0</span>',\n\t\t\t\t\t'<span class=\"mtk1\">contains\\u00a0</span>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t});\n\n\ttest('issue #20624: Unaligned surrogate pairs are corrupted at multiples of 50 columns', () => {\n\t\tlet lineText = 'a𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷';\n\n\t\tlet lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk1\">a𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷𠮷</span>',\n\t\t];\n\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>');\n\t});\n\n\ttest('issue #6885: Does not split large tokens in RTL text', () => {\n\t\tlet lineText = 'את גרמנית בהתייחסות שמו, שנתי המשפט אל חפש, אם כתב אחרים ולחבר. של התוכן אודות בויקיפדיה כלל, של עזרה כימיה היא. על עמוד יוצרים מיתולוגיה סדר, אם שכל שתפו לעברית שינויים, אם שאלות אנגלית עזה. שמות בקלות מה סדר.';\n\t\tlet lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"mtk1\">את\\u00a0גרמנית\\u00a0בהתייחסות\\u00a0שמו,\\u00a0שנתי\\u00a0המשפט\\u00a0אל\\u00a0חפש,\\u00a0אם\\u00a0כתב\\u00a0אחרים\\u00a0ולחבר.\\u00a0של\\u00a0התוכן\\u00a0אודות\\u00a0בויקיפדיה\\u00a0כלל,\\u00a0של\\u00a0עזרה\\u00a0כימיה\\u00a0היא.\\u00a0על\\u00a0עמוד\\u00a0יוצרים\\u00a0מיתולוגיה\\u00a0סדר,\\u00a0אם\\u00a0שכל\\u00a0שתפו\\u00a0לעברית\\u00a0שינויים,\\u00a0אם\\u00a0שאלות\\u00a0אנגלית\\u00a0עזה.\\u00a0שמות\\u00a0בקלות\\u00a0מה\\u00a0סדר.</span>'\n\t\t];\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\t\tassert.strictEqual(actual.html, '<span dir=\"ltr\">' + expectedOutput.join('') + '</span>');\n\t\tassert.strictEqual(actual.containsRTL, true);\n\t});\n\n\ttest('issue #95685: Uses unicode replacement character for Paragraph Separator', () => {\n\t\tconst lineText = 'var ftext = [\\u2029\"Und\", \"dann\", \"eines\"];';\n\t\tconst lineParts = createViewLineTokens([createPart(lineText.length, 1)]);\n\t\tconst expectedOutput = [\n\t\t\t'<span class=\"mtk1\">var\\u00a0ftext\\u00a0=\\u00a0[\\uFFFD\"Und\",\\u00a0\"dann\",\\u00a0\"eines\"];</span>'\n\t\t];\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\t\tassert.strictEqual(actual.html, '<span>' + expectedOutput.join('') + '</span>');\n\t});\n\n\ttest('issue #19673: Monokai Theme bad-highlighting in line wrap', () => {\n\t\tlet lineText = '    MongoCallback<string>): void {';\n\n\t\tlet lineParts = createViewLineTokens([\n\t\t\tcreatePart(17, 1),\n\t\t\tcreatePart(18, 2),\n\t\t\tcreatePart(24, 3),\n\t\t\tcreatePart(26, 4),\n\t\t\tcreatePart(27, 5),\n\t\t\tcreatePart(28, 6),\n\t\t\tcreatePart(32, 7),\n\t\t\tcreatePart(34, 8),\n\t\t]);\n\t\tlet expectedOutput = [\n\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk1\">MongoCallback</span>',\n\t\t\t'<span class=\"mtk2\">&lt;</span>',\n\t\t\t'<span class=\"mtk3\">string</span>',\n\t\t\t'<span class=\"mtk4\">&gt;)</span>',\n\t\t\t'<span class=\"mtk5\">:</span>',\n\t\t\t'<span class=\"mtk6\">\\u00a0</span>',\n\t\t\t'<span class=\"mtk7\">void</span>',\n\t\t\t'<span class=\"mtk8\">\\u00a0{</span>'\n\t\t].join('');\n\n\t\tlet _actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineText,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t4,\n\t\t\tlineParts,\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tassert.strictEqual(_actual.html, '<span>' + expectedOutput + '</span>');\n\t});\n\n\tinterface ICharMappingData {\n\t\tcharOffset: number;\n\t\tpartIndex: number;\n\t\tcharIndex: number;\n\t}\n\n\tfunction decodeCharacterMapping(source: CharacterMapping) {\n\t\tconst mapping: ICharMappingData[] = [];\n\t\tfor (let charOffset = 0; charOffset < source.length; charOffset++) {\n\t\t\tconst partData = source.charOffsetToPartData(charOffset);\n\t\t\tconst partIndex = CharacterMapping.getPartIndex(partData);\n\t\t\tconst charIndex = CharacterMapping.getCharIndex(partData);\n\t\t\tmapping.push({ charOffset, partIndex, charIndex });\n\t\t}\n\t\tconst absoluteOffsets: number[] = [];\n\t\tfor (const absoluteOffset of source.getAbsoluteOffsets()) {\n\t\t\tabsoluteOffsets.push(absoluteOffset);\n\t\t}\n\t\treturn { mapping, absoluteOffsets };\n\t}\n\n\tfunction assertCharacterMapping2(actual: CharacterMapping, expected: CharacterMapping): void {\n\t\tconst _actual = decodeCharacterMapping(actual);\n\t\tconst _expected = decodeCharacterMapping(expected);\n\t\tassert.deepStrictEqual(_actual, _expected);\n\t}\n\n\tfunction assertCharacterMapping(actual: CharacterMapping, expectedCharPartOffsets: number[][], expectedPartLengths: number[]): void {\n\n\t\tassertCharPartOffsets(actual, expectedCharPartOffsets);\n\n\t\tlet expectedCharAbsoluteOffset: number[] = [], currentPartAbsoluteOffset = 0;\n\t\tfor (let partIndex = 0; partIndex < expectedCharPartOffsets.length; partIndex++) {\n\t\t\tconst part = expectedCharPartOffsets[partIndex];\n\n\t\t\tfor (const charIndex of part) {\n\t\t\t\texpectedCharAbsoluteOffset.push(currentPartAbsoluteOffset + charIndex);\n\t\t\t}\n\n\t\t\tcurrentPartAbsoluteOffset += expectedPartLengths[partIndex];\n\t\t}\n\n\t\tlet actualCharOffset: number[] = [];\n\t\tlet tmp = actual.getAbsoluteOffsets();\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tactualCharOffset[i] = tmp[i];\n\t\t}\n\t\tassert.deepStrictEqual(actualCharOffset, expectedCharAbsoluteOffset);\n\t}\n\n\tfunction assertCharPartOffsets(actual: CharacterMapping, expected: number[][]): void {\n\n\t\tlet charOffset = 0;\n\t\tfor (let partIndex = 0; partIndex < expected.length; partIndex++) {\n\t\t\tlet part = expected[partIndex];\n\t\t\tfor (const charIndex of part) {\n\t\t\t\t// here\n\t\t\t\tlet _actualPartData = actual.charOffsetToPartData(charOffset);\n\t\t\t\tlet actualPartIndex = CharacterMapping.getPartIndex(_actualPartData);\n\t\t\t\tlet actualCharIndex = CharacterMapping.getCharIndex(_actualPartData);\n\n\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t{ partIndex: actualPartIndex, charIndex: actualCharIndex },\n\t\t\t\t\t{ partIndex: partIndex, charIndex: charIndex },\n\t\t\t\t\t`character mapping for offset ${charOffset}`\n\t\t\t\t);\n\n\t\t\t\t// here\n\t\t\t\tlet actualOffset = actual.partDataToCharOffset(partIndex, part[part.length - 1] + 1, charIndex);\n\n\t\t\t\tassert.strictEqual(\n\t\t\t\t\tactualOffset,\n\t\t\t\t\tcharOffset,\n\t\t\t\t\t`character mapping for part ${partIndex}, ${charIndex}`\n\t\t\t\t);\n\n\t\t\t\tcharOffset++;\n\t\t\t}\n\t\t}\n\n\t\tassert.strictEqual(actual.length, charOffset);\n\t}\n});\n\nsuite('viewLineRenderer.renderLine 2', () => {\n\n\tfunction testCreateLineParts(fontIsMonospace: boolean, lineContent: string, tokens: ViewLineToken[], fauxIndentLength: number, renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all', selections: LineRange[] | null, expected: string): void {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfontIsMonospace,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\tfauxIndentLength,\n\t\t\tcreateViewLineTokens(tokens),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\trenderWhitespace,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tselections\n\t\t));\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t}\n\n\ttest('issue #18616: Inline decorations ending at the text length are no longer rendered', () => {\n\n\t\tlet lineContent = 'https://microsoft.com';\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(21, 3)]),\n\t\t\t[new LineDecoration(1, 22, 'link', InlineDecorationType.Regular)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3 link\">https://microsoft.com</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #19207: Link in Monokai is not rendered correctly', () => {\n\n\t\tlet lineContent = '\\'let url = `http://***/_api/web/lists/GetByTitle(\\\\\\'Teambuildingaanvragen\\\\\\')/items`;\\'';\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(49, 6),\n\t\t\t\tcreatePart(51, 4),\n\t\t\t\tcreatePart(72, 6),\n\t\t\t\tcreatePart(74, 4),\n\t\t\t\tcreatePart(84, 6),\n\t\t\t]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(13, 51, 'detected-link', InlineDecorationType.Regular)\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk6\">\\'let\\u00a0url\\u00a0=\\u00a0`</span>',\n\t\t\t'<span class=\"mtk6 detected-link\">http://***/_api/web/lists/GetByTitle(</span>',\n\t\t\t'<span class=\"mtk4 detected-link\">\\\\</span>',\n\t\t\t'<span class=\"mtk4\">\\'</span>',\n\t\t\t'<span class=\"mtk6\">Teambuildingaanvragen</span>',\n\t\t\t'<span class=\"mtk4\">\\\\\\'</span>',\n\t\t\t'<span class=\"mtk6\">)/items`;\\'</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('createLineParts simple', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'Hello world!',\n\t\t\t[\n\t\t\t\tcreatePart(12, 1)\n\t\t\t],\n\t\t\t0,\n\t\t\t'none',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk1\">Hello\\u00a0world!</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\ttest('createLineParts simple two tokens', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'Hello world!',\n\t\t\t[\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(12, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'none',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk1\">Hello\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 4 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'    Hello world!    ',\n\t\t\t[\n\t\t\t\tcreatePart(4, 1),\n\t\t\t\tcreatePart(6, 2),\n\t\t\t\tcreatePart(20, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 8 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'        Hello world!        ',\n\t\t\t[\n\t\t\t\tcreatePart(8, 1),\n\t\t\t\tcreatePart(10, 2),\n\t\t\t\tcreatePart(28, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 2 leading tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'\\t\\tHello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(2, 1),\n\t\t\t\tcreatePart(4, 2),\n\t\t\t\tcreatePart(15, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - mixed leading spaces and tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'  \\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(8, 2),\n\t\t\t\tcreatePart(31, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u2192\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\uffeb</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u2192\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\uffeb</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace skips faux indent', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tcreatePart(4, 1),\n\t\t\t\tcreatePart(6, 2),\n\t\t\t\tcreatePart(29, 3)\n\t\t\t],\n\t\t\t2,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\uffeb</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u2192\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\uffeb</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts does not emit width for monospace fonts', () => {\n\t\ttestCreateLineParts(\n\t\t\ttrue,\n\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tcreatePart(4, 1),\n\t\t\t\tcreatePart(6, 2),\n\t\t\t\tcreatePart(29, 3)\n\t\t\t],\n\t\t\t2,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkw\">\\u00b7\\uffeb\\u00b7\\u00b7\\u2192\\u00a0\\u00b7\\u00b7\\u00b7\\uffeb\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace in middle but not for one space', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'it  it it  it',\n\t\t\t[\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(7, 2),\n\t\t\t\tcreatePart(13, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'boundary',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk1\">it</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk1\">it</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk3\">it</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:20px\">\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk3\">it</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for all in middle', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'all',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with no selections', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with whole line selection', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\t[new LineRange(0, 14)],\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk2\">world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with selection spanning part of whitespace', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\t[new LineRange(0, 5)],\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\n\ttest('createLineParts render whitespace for selection with multiple selections', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\t[new LineRange(0, 5), new LineRange(9, 14)],\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\n\ttest('createLineParts render whitespace for selection with multiple, initially unsorted selections', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!\\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\t[new LineRange(9, 14), new LineRange(0, 5)],\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for selection with selections next to each other', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' * S',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0)\n\t\t\t],\n\t\t\t0,\n\t\t\t'selection',\n\t\t\t[new LineRange(0, 1), new LineRange(1, 2), new LineRange(2, 3)],\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">*</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'<span class=\"mtk0\">S</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with leading, inner, and without trailing whitespace', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world!',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(14, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'trailing',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with leading, inner, and trailing whitespace', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' Hello world! \\t',\n\t\t\t[\n\t\t\t\tcreatePart(4, 0),\n\t\t\t\tcreatePart(6, 1),\n\t\t\t\tcreatePart(15, 2)\n\t\t\t],\n\t\t\t0,\n\t\t\t'trailing',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk0\">\\u00a0Hel</span>',\n\t\t\t\t'<span class=\"mtk1\">lo</span>',\n\t\t\t\t'<span class=\"mtk2\">\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:30px\">\\u00b7\\u2192\\u00a0</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with 8 leading and 8 trailing whitespaces', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t'        Hello world!        ',\n\t\t\t[\n\t\t\t\tcreatePart(8, 1),\n\t\t\t\tcreatePart(10, 2),\n\t\t\t\tcreatePart(28, 3)\n\t\t\t],\n\t\t\t0,\n\t\t\t'trailing',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtk1\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtk2\">He</span>',\n\t\t\t\t'<span class=\"mtk3\">llo\\u00a0world!</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u00b7\\u00b7\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace for trailing with line containing only whitespaces', () => {\n\t\ttestCreateLineParts(\n\t\t\tfalse,\n\t\t\t' \\t ',\n\t\t\t[\n\t\t\t\tcreatePart(2, 0),\n\t\t\t\tcreatePart(3, 1),\n\t\t\t],\n\t\t\t0,\n\t\t\t'trailing',\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t'<span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u00b7\\u2192\\u00a0\\u00a0</span>',\n\t\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t\t'</span>',\n\t\t\t].join('')\n\t\t);\n\t});\n\n\ttest('createLineParts can handle unsorted inline decorations', () => {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'Hello world',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(11, 0)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(5, 7, 'a', InlineDecorationType.Regular),\n\t\t\t\tnew LineDecoration(1, 3, 'b', InlineDecorationType.Regular),\n\t\t\t\tnew LineDecoration(2, 8, 'c', InlineDecorationType.Regular),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\t// 01234567890\n\t\t// Hello world\n\t\t// ----aa-----\n\t\t// bb---------\n\t\t// -cccccc----\n\n\t\tassert.deepStrictEqual(actual.html, [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk0 b\">H</span>',\n\t\t\t'<span class=\"mtk0 b c\">e</span>',\n\t\t\t'<span class=\"mtk0 c\">ll</span>',\n\t\t\t'<span class=\"mtk0 a c\">o\\u00a0</span>',\n\t\t\t'<span class=\"mtk0 c\">w</span>',\n\t\t\t'<span class=\"mtk0\">orld</span>',\n\t\t\t'</span>',\n\t\t].join(''));\n\t});\n\n\ttest('issue #11485: Visible whitespace conflicts with before decorator attachment', () => {\n\n\t\tlet lineContent = '\\tbla';\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(4, 3)]),\n\t\t\t[new LineDecoration(1, 2, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtkw before\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">bla</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #32436: Non-monospace font + visible whitespace + After decorator causes line to \"jump\"', () => {\n\n\t\tlet lineContent = '\\tbla';\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(4, 3)]),\n\t\t\t[new LineDecoration(2, 3, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:40px\">\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk3 before\">b</span>',\n\t\t\t'<span class=\"mtk3\">la</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #30133: Empty lines don\\'t render inline decorations', () => {\n\n\t\tlet lineContent = '';\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[new LineDecoration(1, 2, 'before', InlineDecorationType.Before)],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"before\"></span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #37208: Collapsing bullet point containing emoji in Markdown document results in [??] character', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'  1. 🙏',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(7, 3)]),\n\t\t\t[new LineDecoration(7, 8, 'inline-folded', InlineDecorationType.After)],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a01.\\u00a0</span>',\n\t\t\t'<span class=\"mtk3 inline-folded\">🙏</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #37401 #40127: Allow both before and after decorations on empty line', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(1, 1, 'before', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(1, 1, 'after', InlineDecorationType.After),\n\t\t\t],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"before\"></span>',\n\t\t\t'<span class=\"after\"></span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #118759: enable multiple text editor decorations in empty lines', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(0, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(1, 1, 'after1', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(1, 1, 'after2', InlineDecorationType.After),\n\t\t\t\tnew LineDecoration(1, 1, 'before1', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(1, 1, 'before2', InlineDecorationType.Before),\n\t\t\t],\n\t\t\t2,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"before1\"></span>',\n\t\t\t'<span class=\"before2\"></span>',\n\t\t\t'<span class=\"after1\"></span>',\n\t\t\t'<span class=\"after2\"></span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #38935: GitLens end-of-line blame no longer rendering', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'\\t}',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(2, 3)]),\n\t\t\t[\n\t\t\t\tnew LineDecoration(3, 3, 'ced-TextEditorDecorationType2-5e9b9b3f-3 ced-TextEditorDecorationType2-3', InlineDecorationType.Before),\n\t\t\t\tnew LineDecoration(3, 3, 'ced-TextEditorDecorationType2-5e9b9b3f-4 ced-TextEditorDecorationType2-4', InlineDecorationType.After),\n\t\t\t],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0\\u00a0\\u00a0\\u00a0}</span>',\n\t\t\t'<span class=\"ced-TextEditorDecorationType2-5e9b9b3f-3 ced-TextEditorDecorationType2-3 ced-TextEditorDecorationType2-5e9b9b3f-4 ced-TextEditorDecorationType2-4\"></span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #22832: Consider fullwidth characters when rendering tabs', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'asd = \"擦\"\\t\\t#asd',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(15, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">asd\\u00a0=\\u00a0\"擦\"\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0#asd</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #22832: Consider fullwidth characters when rendering tabs (render whitespace)', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'asd = \"擦\"\\t\\t#asd',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(15, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'all',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">asd</span>',\n\t\t\t'<span class=\"mtkw\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk3\">=</span>',\n\t\t\t'<span class=\"mtkw\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk3\">\"擦\"</span>',\n\t\t\t'<span class=\"mtkw\">\\u2192\\u00a0\\u2192\\u00a0\\u00a0\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">#asd</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #22352: COMBINING ACUTE ACCENT (U+0301)', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'12345689012345678901234568901234567890123456890abába',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(53, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">12345689012345678901234568901234567890123456890abába</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #22352: Partially Broken Complex Script Rendering of Tamil', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t' JoyShareல் பின்தொடர்ந்து, விடீயோ, ஜோக்குகள், அனிமேசன், நகைச்சுவை படங்கள் மற்றும் செய்திகளை பெறுவீர்',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(100, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0JoyShareல்\\u00a0பின்தொடர்ந்து,\\u00a0விடீயோ,\\u00a0ஜோக்குகள்,\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">அனிமேசன்,\\u00a0நகைச்சுவை\\u00a0படங்கள்\\u00a0மற்றும்\\u00a0செய்திகளை\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">பெறுவீர்</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #42700: Hindi characters are not being rendered properly', () => {\n\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t' वो ऐसा क्या है जो हमारे अंदर भी है और बाहर भी है। जिसकी वजह से हम सब हैं। जिसने इस सृष्टि की रचना की है।',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(105, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">\\u00a0वो\\u00a0ऐसा\\u00a0क्या\\u00a0है\\u00a0जो\\u00a0हमारे\\u00a0अंदर\\u00a0भी\\u00a0है\\u00a0और\\u00a0बाहर\\u00a0भी\\u00a0है।\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">जिसकी\\u00a0वजह\\u00a0से\\u00a0हम\\u00a0सब\\u00a0हैं।\\u00a0जिसने\\u00a0इस\\u00a0सृष्टि\\u00a0की\\u00a0रचना\\u00a0की\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">है।</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #38123: editor.renderWhitespace: \"boundary\" renders whitespace at line wrap point when line is wrapped', () => {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t'This is a long line which never uses more than two spaces. ',\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(59, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'boundary',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">This\\u00a0is\\u00a0a\\u00a0long\\u00a0line\\u00a0which\\u00a0never\\u00a0uses\\u00a0more\\u00a0than\\u00a0two</span><span class=\"mtk3\">\\u00a0spaces.</span><span class=\"mtk3\">\\u00a0</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #33525: Long line with ligatures takes a long time to paint decorations', () => {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to append data to',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(194, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0append\\u00a0data\\u00a0to\\u00a0</span>',\n\t\t\t'<span class=\"mtk3\">append\\u00a0data\\u00a0to</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #33525: Long line with ligatures takes a long time to paint decorations - not possible', () => {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'appenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatato',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(194, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">appenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatatoappenddatato</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #91936: Semantic token color highlighting fails on line with selected text', () => {\n\t\tlet actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t'                    else if ($s = 08) then \\'\\\\b\\'',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([\n\t\t\t\tcreatePart(20, 1),\n\t\t\t\tcreatePart(24, 15),\n\t\t\t\tcreatePart(25, 1),\n\t\t\t\tcreatePart(27, 15),\n\t\t\t\tcreatePart(28, 1),\n\t\t\t\tcreatePart(29, 1),\n\t\t\t\tcreatePart(29, 1),\n\t\t\t\tcreatePart(31, 16),\n\t\t\t\tcreatePart(32, 1),\n\t\t\t\tcreatePart(33, 1),\n\t\t\t\tcreatePart(34, 1),\n\t\t\t\tcreatePart(36, 6),\n\t\t\t\tcreatePart(36, 1),\n\t\t\t\tcreatePart(37, 1),\n\t\t\t\tcreatePart(38, 1),\n\t\t\t\tcreatePart(42, 15),\n\t\t\t\tcreatePart(43, 1),\n\t\t\t\tcreatePart(47, 11)\n\t\t\t]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t11,\n\t\t\t11,\n\t\t\t10000,\n\t\t\t'selection',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t[new LineRange(0, 47)]\n\t\t));\n\n\t\tlet expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk15\">else</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk15\">if</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk1\">(</span>',\n\t\t\t'<span class=\"mtk16\">$s</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk1\">=</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk6\">08</span>',\n\t\t\t'<span class=\"mtk1\">)</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk15\">then</span>',\n\t\t\t'<span class=\"mtkz\" style=\"width:10px\">\\u00b7</span>',\n\t\t\t'<span class=\"mtk11\">\\'\\\\b\\'</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\ttest('issue #119416: Delete Control Character (U+007F / &#127;) displayed as space', () => {\n\t\tconst actual = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t'[' + String.fromCharCode(127) + '] [' + String.fromCharCode(0) + ']',\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens([createPart(7, 3)]),\n\t\t\t[],\n\t\t\t4,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10000,\n\t\t\t'none',\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\tnull\n\t\t));\n\n\t\tconst expected = [\n\t\t\t'<span>',\n\t\t\t'<span class=\"mtk3\">[\\u2421]\\u00a0[\\u2400]</span>',\n\t\t\t'</span>'\n\t\t].join('');\n\n\t\tassert.deepStrictEqual(actual.html, expected);\n\t});\n\n\n\tfunction createTestGetColumnOfLinePartOffset(lineContent: string, tabSize: number, parts: ViewLineToken[], expectedPartLengths: number[]): (partIndex: number, partLength: number, offset: number, expected: number) => void {\n\t\tlet renderLineOutput = renderViewLine(new RenderLineInput(\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t0,\n\t\t\tcreateViewLineTokens(parts),\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\t10,\n\t\t\t10,\n\t\t\t10,\n\t\t\t-1,\n\t\t\t'none',\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\tnull\n\t\t));\n\n\t\treturn (partIndex: number, partLength: number, offset: number, expected: number) => {\n\t\t\tlet charOffset = renderLineOutput.characterMapping.partDataToCharOffset(partIndex, partLength, offset);\n\t\t\tlet actual = charOffset + 1;\n\t\t\tassert.strictEqual(actual, expected, 'getColumnOfLinePartOffset for ' + partIndex + ' @ ' + offset);\n\t\t};\n\t}\n\n\ttest('getColumnOfLinePartOffset 1 - simple text', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'hello world',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(11, 1)\n\t\t\t],\n\t\t\t[11]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 1, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 2, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 3, 4);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 4, 5);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 5, 6);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 6, 7);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 7, 8);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 8, 9);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 9, 10);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 10, 11);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 11, 12);\n\t});\n\n\ttest('getColumnOfLinePartOffset 2 - regular JS', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'var x = 3;',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(3, 1),\n\t\t\t\tcreatePart(4, 2),\n\t\t\t\tcreatePart(5, 3),\n\t\t\t\tcreatePart(8, 4),\n\t\t\t\tcreatePart(9, 5),\n\t\t\t\tcreatePart(10, 6),\n\t\t\t],\n\t\t\t[3, 1, 1, 3, 1, 1]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 1, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 2, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 3, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 0, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 1, 5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 0, 5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 1, 6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 0, 6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 1, 7);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 2, 8);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 3, 9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 0, 9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 1, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 0, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 1, 11);\n\t});\n\n\ttest('getColumnOfLinePartOffset 3 - tab with tab size 6', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t',\n\t\t\t6,\n\t\t\t[\n\t\t\t\tcreatePart(1, 1)\n\t\t\t],\n\t\t\t[6]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 3, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 5, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 6, 2);\n\t});\n\n\ttest('getColumnOfLinePartOffset 4 - once indented line, tab size 4', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(1, 1),\n\t\t\t\tcreatePart(9, 2),\n\t\t\t],\n\t\t\t[4, 8]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 3, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0, 2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3, 5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4, 6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5, 7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6, 8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7, 9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 10);\n\t});\n\n\ttest('getColumnOfLinePartOffset 5 - twice indented line, tab size 4', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tcreatePart(2, 1),\n\t\t\t\tcreatePart(10, 2),\n\t\t\t],\n\t\t\t[8, 8]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 0, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 1, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 2, 1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 3, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 4, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 5, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 6, 2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 7, 3);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 8, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0, 3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1, 4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2, 5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3, 6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4, 7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5, 8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6, 9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7, 10);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 11);\n\t});\n});\n"]}