{"version":3,"file":"intervalTree.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/intervalTree.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { IntervalNode, IntervalTree, NodeColor, SENTINEL, getNodeColor, intervalCompare, nodeAcceptEdit, setNodeStickiness } from 'vs/editor/common/model/intervalTree';\n\nconst GENERATE_TESTS = false;\nlet TEST_COUNT = GENERATE_TESTS ? 10000 : 0;\nlet PRINT_TREE = false;\nconst MIN_INTERVAL_START = 1;\nconst MAX_INTERVAL_END = 100;\nconst MIN_INSERTS = 1;\nconst MAX_INSERTS = 30;\nconst MIN_CHANGE_CNT = 10;\nconst MAX_CHANGE_CNT = 20;\n\nsuite('IntervalTree', () => {\n\n\tclass Interval {\n\t\t_intervalBrand: void;\n\n\t\tpublic start: number;\n\t\tpublic end: number;\n\n\t\tconstructor(start: number, end: number) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\t}\n\n\tclass Oracle {\n\t\tpublic intervals: Interval[];\n\n\t\tconstructor() {\n\t\t\tthis.intervals = [];\n\t\t}\n\n\t\tpublic insert(interval: Interval): Interval {\n\t\t\tthis.intervals.push(interval);\n\t\t\tthis.intervals.sort((a, b) => {\n\t\t\t\tif (a.start === b.start) {\n\t\t\t\t\treturn a.end - b.end;\n\t\t\t\t}\n\t\t\t\treturn a.start - b.start;\n\t\t\t});\n\t\t\treturn interval;\n\t\t}\n\n\t\tpublic delete(interval: Interval): void {\n\t\t\tfor (let i = 0, len = this.intervals.length; i < len; i++) {\n\t\t\t\tif (this.intervals[i] === interval) {\n\t\t\t\t\tthis.intervals.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic search(interval: Interval): Interval[] {\n\t\t\tlet result: Interval[] = [];\n\t\t\tfor (let i = 0, len = this.intervals.length; i < len; i++) {\n\t\t\t\tlet int = this.intervals[i];\n\t\t\t\tif (int.start <= interval.end && int.end >= interval.start) {\n\t\t\t\t\tresult.push(int);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tclass TestState {\n\t\tprivate _oracle: Oracle = new Oracle();\n\t\tprivate _tree: IntervalTree = new IntervalTree();\n\t\tprivate _lastNodeId = -1;\n\t\tprivate _treeNodes: Array<IntervalNode | null> = [];\n\t\tprivate _oracleNodes: Array<Interval | null> = [];\n\n\t\tpublic acceptOp(op: IOperation): void {\n\n\t\t\tif (op.type === 'insert') {\n\t\t\t\tif (PRINT_TREE) {\n\t\t\t\t\tconsole.log(`insert: {${JSON.stringify(new Interval(op.begin, op.end))}}`);\n\t\t\t\t}\n\t\t\t\tlet nodeId = (++this._lastNodeId);\n\t\t\t\tthis._treeNodes[nodeId] = new IntervalNode(null!, op.begin, op.end);\n\t\t\t\tthis._tree.insert(this._treeNodes[nodeId]!);\n\t\t\t\tthis._oracleNodes[nodeId] = this._oracle.insert(new Interval(op.begin, op.end));\n\t\t\t} else if (op.type === 'delete') {\n\t\t\t\tif (PRINT_TREE) {\n\t\t\t\t\tconsole.log(`delete: {${JSON.stringify(this._oracleNodes[op.id])}}`);\n\t\t\t\t}\n\t\t\t\tthis._tree.delete(this._treeNodes[op.id]!);\n\t\t\t\tthis._oracle.delete(this._oracleNodes[op.id]!);\n\n\t\t\t\tthis._treeNodes[op.id] = null;\n\t\t\t\tthis._oracleNodes[op.id] = null;\n\t\t\t} else if (op.type === 'change') {\n\n\t\t\t\tthis._tree.delete(this._treeNodes[op.id]!);\n\t\t\t\tthis._treeNodes[op.id]!.reset(0, op.begin, op.end, null!);\n\t\t\t\tthis._tree.insert(this._treeNodes[op.id]!);\n\n\t\t\t\tthis._oracle.delete(this._oracleNodes[op.id]!);\n\t\t\t\tthis._oracleNodes[op.id]!.start = op.begin;\n\t\t\t\tthis._oracleNodes[op.id]!.end = op.end;\n\t\t\t\tthis._oracle.insert(this._oracleNodes[op.id]!);\n\n\t\t\t} else {\n\t\t\t\tlet actualNodes = this._tree.intervalSearch(op.begin, op.end, 0, false, 0);\n\t\t\t\tlet actual = actualNodes.map(n => new Interval(n.cachedAbsoluteStart, n.cachedAbsoluteEnd));\n\t\t\t\tlet expected = this._oracle.search(new Interval(op.begin, op.end));\n\t\t\t\tassert.deepStrictEqual(actual, expected);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (PRINT_TREE) {\n\t\t\t\tprintTree(this._tree);\n\t\t\t}\n\n\t\t\tassertTreeInvariants(this._tree);\n\n\t\t\tlet actual = this._tree.getAllInOrder().map(n => new Interval(n.cachedAbsoluteStart, n.cachedAbsoluteEnd));\n\t\t\tlet expected = this._oracle.intervals;\n\t\t\tassert.deepStrictEqual(actual, expected);\n\t\t}\n\n\t\tpublic getExistingNodeId(index: number): number {\n\t\t\tlet currIndex = -1;\n\t\t\tfor (let i = 0; i < this._treeNodes.length; i++) {\n\t\t\t\tif (this._treeNodes[i] === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurrIndex++;\n\t\t\t\tif (currIndex === index) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error('unexpected');\n\t\t}\n\t}\n\n\tinterface IInsertOperation {\n\t\ttype: 'insert';\n\t\tbegin: number;\n\t\tend: number;\n\t}\n\n\tinterface IDeleteOperation {\n\t\ttype: 'delete';\n\t\tid: number;\n\t}\n\n\tinterface IChangeOperation {\n\t\ttype: 'change';\n\t\tid: number;\n\t\tbegin: number;\n\t\tend: number;\n\t}\n\n\tinterface ISearchOperation {\n\t\ttype: 'search';\n\t\tbegin: number;\n\t\tend: number;\n\t}\n\n\ttype IOperation = IInsertOperation | IDeleteOperation | IChangeOperation | ISearchOperation;\n\n\tfunction testIntervalTree(ops: IOperation[]): void {\n\t\tlet state = new TestState();\n\t\tfor (let i = 0; i < ops.length; i++) {\n\t\t\tstate.acceptOp(ops[i]);\n\t\t}\n\t}\n\n\tfunction getRandomInt(min: number, max: number): number {\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\n\tfunction getRandomRange(min: number, max: number): [number, number] {\n\t\tlet begin = getRandomInt(min, max);\n\t\tlet length: number;\n\t\tif (getRandomInt(1, 10) <= 2) {\n\t\t\t// large range\n\t\t\tlength = getRandomInt(0, max - begin);\n\t\t} else {\n\t\t\t// small range\n\t\t\tlength = getRandomInt(0, Math.min(max - begin, 10));\n\t\t}\n\t\treturn [begin, begin + length];\n\t}\n\n\tclass AutoTest {\n\t\tprivate _ops: IOperation[] = [];\n\t\tprivate _state: TestState = new TestState();\n\t\tprivate _insertCnt: number;\n\t\tprivate _deleteCnt: number;\n\t\tprivate _changeCnt: number;\n\n\t\tconstructor() {\n\t\t\tthis._insertCnt = getRandomInt(MIN_INSERTS, MAX_INSERTS);\n\t\t\tthis._changeCnt = getRandomInt(MIN_CHANGE_CNT, MAX_CHANGE_CNT);\n\t\t\tthis._deleteCnt = 0;\n\t\t}\n\n\t\tprivate _doRandomInsert(): void {\n\t\t\tlet range = getRandomRange(MIN_INTERVAL_START, MAX_INTERVAL_END);\n\t\t\tthis._run({\n\t\t\t\ttype: 'insert',\n\t\t\t\tbegin: range[0],\n\t\t\t\tend: range[1]\n\t\t\t});\n\t\t}\n\n\t\tprivate _doRandomDelete(): void {\n\t\t\tlet idx = getRandomInt(Math.floor(this._deleteCnt / 2), this._deleteCnt - 1);\n\t\t\tthis._run({\n\t\t\t\ttype: 'delete',\n\t\t\t\tid: this._state.getExistingNodeId(idx)\n\t\t\t});\n\t\t}\n\n\t\tprivate _doRandomChange(): void {\n\t\t\tlet idx = getRandomInt(0, this._deleteCnt - 1);\n\t\t\tlet range = getRandomRange(MIN_INTERVAL_START, MAX_INTERVAL_END);\n\t\t\tthis._run({\n\t\t\t\ttype: 'change',\n\t\t\t\tid: this._state.getExistingNodeId(idx),\n\t\t\t\tbegin: range[0],\n\t\t\t\tend: range[1]\n\t\t\t});\n\t\t}\n\n\t\tpublic run() {\n\t\t\twhile (this._insertCnt > 0 || this._deleteCnt > 0 || this._changeCnt > 0) {\n\t\t\t\tif (this._insertCnt > 0) {\n\t\t\t\t\tthis._doRandomInsert();\n\t\t\t\t\tthis._insertCnt--;\n\t\t\t\t\tthis._deleteCnt++;\n\t\t\t\t} else if (this._changeCnt > 0) {\n\t\t\t\t\tthis._doRandomChange();\n\t\t\t\t\tthis._changeCnt--;\n\t\t\t\t} else {\n\t\t\t\t\tthis._doRandomDelete();\n\t\t\t\t\tthis._deleteCnt--;\n\t\t\t\t}\n\n\t\t\t\t// Let's also search for something...\n\t\t\t\tlet searchRange = getRandomRange(MIN_INTERVAL_START, MAX_INTERVAL_END);\n\t\t\t\tthis._run({\n\t\t\t\t\ttype: 'search',\n\t\t\t\t\tbegin: searchRange[0],\n\t\t\t\t\tend: searchRange[1]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate _run(op: IOperation): void {\n\t\t\tthis._ops.push(op);\n\t\t\tthis._state.acceptOp(op);\n\t\t}\n\n\t\tpublic print(): void {\n\t\t\tconsole.log(`testIntervalTree(${JSON.stringify(this._ops)})`);\n\t\t}\n\n\t}\n\n\tsuite('generated', () => {\n\t\ttest('gen01', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 28, end: 35 },\n\t\t\t\t{ type: 'insert', begin: 52, end: 54 },\n\t\t\t\t{ type: 'insert', begin: 63, end: 69 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen02', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 80, end: 89 },\n\t\t\t\t{ type: 'insert', begin: 92, end: 100 },\n\t\t\t\t{ type: 'insert', begin: 99, end: 99 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen03', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 89, end: 96 },\n\t\t\t\t{ type: 'insert', begin: 71, end: 74 },\n\t\t\t\t{ type: 'delete', id: 1 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen04', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 44, end: 46 },\n\t\t\t\t{ type: 'insert', begin: 85, end: 88 },\n\t\t\t\t{ type: 'delete', id: 0 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen05', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 82, end: 90 },\n\t\t\t\t{ type: 'insert', begin: 69, end: 73 },\n\t\t\t\t{ type: 'delete', id: 0 },\n\t\t\t\t{ type: 'delete', id: 1 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen06', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 41, end: 63 },\n\t\t\t\t{ type: 'insert', begin: 98, end: 98 },\n\t\t\t\t{ type: 'insert', begin: 47, end: 51 },\n\t\t\t\t{ type: 'delete', id: 2 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen07', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 24, end: 26 },\n\t\t\t\t{ type: 'insert', begin: 11, end: 28 },\n\t\t\t\t{ type: 'insert', begin: 27, end: 30 },\n\t\t\t\t{ type: 'insert', begin: 80, end: 85 },\n\t\t\t\t{ type: 'delete', id: 1 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen08', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 100, end: 100 },\n\t\t\t\t{ type: 'insert', begin: 100, end: 100 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen09', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 58, end: 65 },\n\t\t\t\t{ type: 'insert', begin: 82, end: 96 },\n\t\t\t\t{ type: 'insert', begin: 58, end: 65 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen10', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 32, end: 40 },\n\t\t\t\t{ type: 'insert', begin: 25, end: 29 },\n\t\t\t\t{ type: 'insert', begin: 24, end: 32 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen11', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 25, end: 70 },\n\t\t\t\t{ type: 'insert', begin: 99, end: 100 },\n\t\t\t\t{ type: 'insert', begin: 46, end: 51 },\n\t\t\t\t{ type: 'insert', begin: 57, end: 57 },\n\t\t\t\t{ type: 'delete', id: 2 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen12', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 20, end: 26 },\n\t\t\t\t{ type: 'insert', begin: 10, end: 18 },\n\t\t\t\t{ type: 'insert', begin: 99, end: 99 },\n\t\t\t\t{ type: 'insert', begin: 37, end: 59 },\n\t\t\t\t{ type: 'delete', id: 2 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen13', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 3, end: 91 },\n\t\t\t\t{ type: 'insert', begin: 57, end: 57 },\n\t\t\t\t{ type: 'insert', begin: 35, end: 44 },\n\t\t\t\t{ type: 'insert', begin: 72, end: 81 },\n\t\t\t\t{ type: 'delete', id: 2 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen14', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 58, end: 61 },\n\t\t\t\t{ type: 'insert', begin: 34, end: 35 },\n\t\t\t\t{ type: 'insert', begin: 56, end: 62 },\n\t\t\t\t{ type: 'insert', begin: 69, end: 78 },\n\t\t\t\t{ type: 'delete', id: 0 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen15', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 63, end: 69 },\n\t\t\t\t{ type: 'insert', begin: 17, end: 24 },\n\t\t\t\t{ type: 'insert', begin: 3, end: 13 },\n\t\t\t\t{ type: 'insert', begin: 84, end: 94 },\n\t\t\t\t{ type: 'insert', begin: 18, end: 23 },\n\t\t\t\t{ type: 'insert', begin: 96, end: 98 },\n\t\t\t\t{ type: 'delete', id: 1 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen16', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 27, end: 27 },\n\t\t\t\t{ type: 'insert', begin: 42, end: 87 },\n\t\t\t\t{ type: 'insert', begin: 42, end: 49 },\n\t\t\t\t{ type: 'insert', begin: 69, end: 71 },\n\t\t\t\t{ type: 'insert', begin: 20, end: 27 },\n\t\t\t\t{ type: 'insert', begin: 8, end: 9 },\n\t\t\t\t{ type: 'insert', begin: 42, end: 49 },\n\t\t\t\t{ type: 'delete', id: 1 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen17', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 21, end: 23 },\n\t\t\t\t{ type: 'insert', begin: 83, end: 87 },\n\t\t\t\t{ type: 'insert', begin: 56, end: 58 },\n\t\t\t\t{ type: 'insert', begin: 1, end: 55 },\n\t\t\t\t{ type: 'insert', begin: 56, end: 59 },\n\t\t\t\t{ type: 'insert', begin: 58, end: 60 },\n\t\t\t\t{ type: 'insert', begin: 56, end: 65 },\n\t\t\t\t{ type: 'delete', id: 1 },\n\t\t\t\t{ type: 'delete', id: 0 },\n\t\t\t\t{ type: 'delete', id: 6 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('gen18', () => {\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 25, end: 25 },\n\t\t\t\t{ type: 'insert', begin: 67, end: 79 },\n\t\t\t\t{ type: 'delete', id: 0 },\n\t\t\t\t{ type: 'search', begin: 65, end: 75 }\n\t\t\t]);\n\t\t});\n\n\t\ttest('force delta overflow', () => {\n\t\t\t// Search the IntervalNode ctor for FORCE_OVERFLOWING_TEST\n\t\t\t// to force that this test leads to a delta normalization\n\t\t\ttestIntervalTree([\n\t\t\t\t{ type: 'insert', begin: 686081138593427, end: 733009856502260 },\n\t\t\t\t{ type: 'insert', begin: 591031326181669, end: 591031326181672 },\n\t\t\t\t{ type: 'insert', begin: 940037682731896, end: 940037682731903 },\n\t\t\t\t{ type: 'insert', begin: 598413641151120, end: 598413641151128 },\n\t\t\t\t{ type: 'insert', begin: 800564156553344, end: 800564156553351 },\n\t\t\t\t{ type: 'insert', begin: 894198957565481, end: 894198957565491 }\n\t\t\t]);\n\t\t});\n\t});\n\n\t// TEST_COUNT = 0;\n\t// PRINT_TREE = true;\n\n\tfor (let i = 0; i < TEST_COUNT; i++) {\n\t\tif (i % 100 === 0) {\n\t\t\tconsole.log(`TEST ${i + 1}/${TEST_COUNT}`);\n\t\t}\n\t\tlet test = new AutoTest();\n\n\t\ttry {\n\t\t\ttest.run();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\ttest.print();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tsuite('searching', () => {\n\n\t\tfunction createCormenTree(): IntervalTree {\n\t\t\tlet r = new IntervalTree();\n\t\t\tlet data: [number, number][] = [\n\t\t\t\t[16, 21],\n\t\t\t\t[8, 9],\n\t\t\t\t[25, 30],\n\t\t\t\t[5, 8],\n\t\t\t\t[15, 23],\n\t\t\t\t[17, 19],\n\t\t\t\t[26, 26],\n\t\t\t\t[0, 3],\n\t\t\t\t[6, 10],\n\t\t\t\t[19, 20]\n\t\t\t];\n\t\t\tdata.forEach((int) => {\n\t\t\t\tlet node = new IntervalNode(null!, int[0], int[1]);\n\t\t\t\tr.insert(node);\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\n\t\tconst T = createCormenTree();\n\n\t\tfunction assertIntervalSearch(start: number, end: number, expected: [number, number][]): void {\n\t\t\tlet actualNodes = T.intervalSearch(start, end, 0, false, 0);\n\t\t\tlet actual = actualNodes.map((n) => <[number, number]>[n.cachedAbsoluteStart, n.cachedAbsoluteEnd]);\n\t\t\tassert.deepStrictEqual(actual, expected);\n\t\t}\n\n\t\ttest('cormen 1->2', () => {\n\t\t\tassertIntervalSearch(\n\t\t\t\t1, 2,\n\t\t\t\t[\n\t\t\t\t\t[0, 3],\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\n\t\ttest('cormen 4->8', () => {\n\t\t\tassertIntervalSearch(\n\t\t\t\t4, 8,\n\t\t\t\t[\n\t\t\t\t\t[5, 8],\n\t\t\t\t\t[6, 10],\n\t\t\t\t\t[8, 9],\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\n\t\ttest('cormen 10->15', () => {\n\t\t\tassertIntervalSearch(\n\t\t\t\t10, 15,\n\t\t\t\t[\n\t\t\t\t\t[6, 10],\n\t\t\t\t\t[15, 23],\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\n\t\ttest('cormen 21->25', () => {\n\t\t\tassertIntervalSearch(\n\t\t\t\t21, 25,\n\t\t\t\t[\n\t\t\t\t\t[15, 23],\n\t\t\t\t\t[16, 21],\n\t\t\t\t\t[25, 30],\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\n\t\ttest('cormen 24->24', () => {\n\t\t\tassertIntervalSearch(\n\t\t\t\t24, 24,\n\t\t\t\t[\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n});\n\nsuite('IntervalTree', () => {\n\tfunction assertNodeAcceptEdit(msg: string, nodeStart: number, nodeEnd: number, nodeStickiness: TrackedRangeStickiness, start: number, end: number, textLength: number, forceMoveMarkers: boolean, expectedNodeStart: number, expectedNodeEnd: number): void {\n\t\tlet node = new IntervalNode('', nodeStart, nodeEnd);\n\t\tsetNodeStickiness(node, nodeStickiness);\n\t\tnodeAcceptEdit(node, start, end, textLength, forceMoveMarkers);\n\t\tassert.deepStrictEqual([node.start, node.end], [expectedNodeStart, expectedNodeEnd], msg);\n\t}\n\n\ttest('nodeAcceptEdit', () => {\n\t\t// A. collapsed decoration\n\t\t{\n\t\t\t// no-op\n\t\t\tassertNodeAcceptEdit('A.000', 0, 0, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 0, false, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.001', 0, 0, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 0, false, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.002', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 0, false, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.003', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 0, false, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.004', 0, 0, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 0, true, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.005', 0, 0, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 0, true, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.006', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 0, true, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.007', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 0, true, 0, 0);\n\t\t\t// insertion\n\t\t\tassertNodeAcceptEdit('A.008', 0, 0, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 1, false, 0, 1);\n\t\t\tassertNodeAcceptEdit('A.009', 0, 0, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 1, false, 1, 1);\n\t\t\tassertNodeAcceptEdit('A.010', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 1, false, 0, 0);\n\t\t\tassertNodeAcceptEdit('A.011', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 1, false, 1, 1);\n\t\t\tassertNodeAcceptEdit('A.012', 0, 0, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 1, true, 1, 1);\n\t\t\tassertNodeAcceptEdit('A.013', 0, 0, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 1, true, 1, 1);\n\t\t\tassertNodeAcceptEdit('A.014', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 1, true, 1, 1);\n\t\t\tassertNodeAcceptEdit('A.015', 0, 0, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 1, true, 1, 1);\n\t\t}\n\n\t\t// B. non collapsed decoration\n\t\t{\n\t\t\t// no-op\n\t\t\tassertNodeAcceptEdit('B.000', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 0, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.001', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 0, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.002', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 0, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.003', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 0, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.004', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 0, true, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.005', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 0, true, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.006', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 0, true, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.007', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 0, true, 0, 5);\n\t\t\t// insertion at start\n\t\t\tassertNodeAcceptEdit('B.008', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.009', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 1, false, 1, 6);\n\t\t\tassertNodeAcceptEdit('B.010', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.011', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 1, false, 1, 6);\n\t\t\tassertNodeAcceptEdit('B.012', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 0, 0, 1, true, 1, 6);\n\t\t\tassertNodeAcceptEdit('B.013', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 0, 0, 1, true, 1, 6);\n\t\t\tassertNodeAcceptEdit('B.014', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 0, 0, 1, true, 1, 6);\n\t\t\tassertNodeAcceptEdit('B.015', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 0, 0, 1, true, 1, 6);\n\t\t\t// insertion in middle\n\t\t\tassertNodeAcceptEdit('B.016', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 2, 2, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.017', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 2, 2, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.018', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 2, 2, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.019', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 2, 2, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.020', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 2, 2, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.021', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 2, 2, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.022', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 2, 2, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.023', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 2, 2, 1, true, 0, 6);\n\t\t\t// insertion at end\n\t\t\tassertNodeAcceptEdit('B.024', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 5, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.025', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 5, 1, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.026', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 5, 1, false, 0, 5);\n\t\t\tassertNodeAcceptEdit('B.027', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 5, 1, false, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.028', 0, 5, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 5, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.029', 0, 5, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 5, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.030', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 5, 1, true, 0, 6);\n\t\t\tassertNodeAcceptEdit('B.031', 0, 5, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 5, 1, true, 0, 6);\n\n\t\t\t// replace with larger text until start\n\t\t\tassertNodeAcceptEdit('B.032', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 5, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.033', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 5, 2, false, 6, 11);\n\t\t\tassertNodeAcceptEdit('B.034', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 5, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.035', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 5, 2, false, 6, 11);\n\t\t\tassertNodeAcceptEdit('B.036', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 5, 2, true, 6, 11);\n\t\t\tassertNodeAcceptEdit('B.037', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 5, 2, true, 6, 11);\n\t\t\tassertNodeAcceptEdit('B.038', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 5, 2, true, 6, 11);\n\t\t\tassertNodeAcceptEdit('B.039', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 5, 2, true, 6, 11);\n\t\t\t// replace with smaller text until start\n\t\t\tassertNodeAcceptEdit('B.040', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 3, 5, 1, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.041', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 3, 5, 1, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.042', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 3, 5, 1, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.043', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 3, 5, 1, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.044', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 3, 5, 1, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.045', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 3, 5, 1, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.046', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 3, 5, 1, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.047', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 3, 5, 1, true, 4, 9);\n\n\t\t\t// replace with larger text select start\n\t\t\tassertNodeAcceptEdit('B.048', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 3, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.049', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 3, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.050', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 3, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.051', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 3, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.052', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 3, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.053', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 3, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.054', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 3, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.055', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 3, true, 7, 11);\n\t\t\t// replace with smaller text select start\n\t\t\tassertNodeAcceptEdit('B.056', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.057', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.058', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.059', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.060', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.061', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.062', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.063', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 1, true, 5, 9);\n\n\t\t\t// replace with larger text from start\n\t\t\tassertNodeAcceptEdit('B.064', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 6, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.065', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 6, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.066', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 6, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.067', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 6, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.068', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 6, 2, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.069', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 6, 2, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.070', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 6, 2, true, 7, 11);\n\t\t\tassertNodeAcceptEdit('B.071', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 6, 2, true, 7, 11);\n\t\t\t// replace with smaller text from start\n\t\t\tassertNodeAcceptEdit('B.072', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 7, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.073', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 7, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.074', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 7, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.075', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 7, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.076', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 7, 1, true, 6, 9);\n\t\t\tassertNodeAcceptEdit('B.077', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 7, 1, true, 6, 9);\n\t\t\tassertNodeAcceptEdit('B.078', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 7, 1, true, 6, 9);\n\t\t\tassertNodeAcceptEdit('B.079', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 7, 1, true, 6, 9);\n\n\t\t\t// replace with larger text to end\n\t\t\tassertNodeAcceptEdit('B.080', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 10, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.081', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 10, 2, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.082', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 10, 2, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.083', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 10, 2, false, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.084', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 10, 2, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.085', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 10, 2, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.086', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 10, 2, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.087', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 10, 2, true, 5, 11);\n\t\t\t// replace with smaller text to end\n\t\t\tassertNodeAcceptEdit('B.088', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 8, 10, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.089', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 8, 10, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.090', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 8, 10, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.091', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 8, 10, 1, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.092', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 8, 10, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.093', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 8, 10, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.094', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 8, 10, 1, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.095', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 8, 10, 1, true, 5, 9);\n\n\t\t\t// replace with larger text select end\n\t\t\tassertNodeAcceptEdit('B.096', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.097', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.098', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.099', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.100', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 3, true, 5, 12);\n\t\t\tassertNodeAcceptEdit('B.101', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 3, true, 5, 12);\n\t\t\tassertNodeAcceptEdit('B.102', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 3, true, 5, 12);\n\t\t\tassertNodeAcceptEdit('B.103', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 3, true, 5, 12);\n\t\t\t// replace with smaller text select end\n\t\t\tassertNodeAcceptEdit('B.104', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.105', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.106', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.107', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.108', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 1, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.109', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 1, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.110', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 1, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.111', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 1, true, 5, 10);\n\n\t\t\t// replace with larger text from end\n\t\t\tassertNodeAcceptEdit('B.112', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.113', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.114', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.115', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 11, 3, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.116', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 11, 3, true, 5, 13);\n\t\t\tassertNodeAcceptEdit('B.117', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 11, 3, true, 5, 13);\n\t\t\tassertNodeAcceptEdit('B.118', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 11, 3, true, 5, 13);\n\t\t\tassertNodeAcceptEdit('B.119', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 11, 3, true, 5, 13);\n\t\t\t// replace with smaller text from end\n\t\t\tassertNodeAcceptEdit('B.120', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 12, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.121', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 12, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.122', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 12, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.123', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 12, 1, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.124', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 12, 1, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.125', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 12, 1, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.126', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 12, 1, true, 5, 11);\n\t\t\tassertNodeAcceptEdit('B.127', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 12, 1, true, 5, 11);\n\n\t\t\t// delete until start\n\t\t\tassertNodeAcceptEdit('B.128', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 5, 0, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.129', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 5, 0, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.130', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 5, 0, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.131', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 5, 0, false, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.132', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 5, 0, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.133', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 5, 0, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.134', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 5, 0, true, 4, 9);\n\t\t\tassertNodeAcceptEdit('B.135', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 5, 0, true, 4, 9);\n\n\t\t\t// delete select start\n\t\t\tassertNodeAcceptEdit('B.136', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 0, false, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.137', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 0, false, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.138', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 0, false, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.139', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 0, false, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.140', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 4, 6, 0, true, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.141', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 4, 6, 0, true, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.142', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 4, 6, 0, true, 4, 8);\n\t\t\tassertNodeAcceptEdit('B.143', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 4, 6, 0, true, 4, 8);\n\n\t\t\t// delete from start\n\t\t\tassertNodeAcceptEdit('B.144', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 6, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.145', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 6, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.146', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 6, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.147', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 6, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.148', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 6, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.149', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 6, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.150', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 6, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.151', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 6, 0, true, 5, 9);\n\n\t\t\t// delete to end\n\t\t\tassertNodeAcceptEdit('B.152', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 10, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.153', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 10, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.154', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 10, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.155', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 10, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.156', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 10, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.157', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 10, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.158', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 10, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.159', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 10, 0, true, 5, 9);\n\n\t\t\t// delete select end\n\t\t\tassertNodeAcceptEdit('B.160', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.161', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.162', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.163', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 0, false, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.164', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 9, 11, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.165', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 9, 11, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.166', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 9, 11, 0, true, 5, 9);\n\t\t\tassertNodeAcceptEdit('B.167', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 9, 11, 0, true, 5, 9);\n\n\t\t\t// delete from end\n\t\t\tassertNodeAcceptEdit('B.168', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 11, 0, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.169', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 11, 0, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.170', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 11, 0, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.171', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 11, 0, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.172', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 10, 11, 0, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.173', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 10, 11, 0, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.174', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 10, 11, 0, true, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.175', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 10, 11, 0, true, 5, 10);\n\n\t\t\t// replace with larger text entire\n\t\t\tassertNodeAcceptEdit('B.176', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 10, 3, false, 5, 8);\n\t\t\tassertNodeAcceptEdit('B.177', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 10, 3, false, 5, 8);\n\t\t\tassertNodeAcceptEdit('B.178', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 10, 3, false, 5, 8);\n\t\t\tassertNodeAcceptEdit('B.179', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 10, 3, false, 5, 8);\n\t\t\tassertNodeAcceptEdit('B.180', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 10, 3, true, 8, 8);\n\t\t\tassertNodeAcceptEdit('B.181', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 10, 3, true, 8, 8);\n\t\t\tassertNodeAcceptEdit('B.182', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 10, 3, true, 8, 8);\n\t\t\tassertNodeAcceptEdit('B.183', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 10, 3, true, 8, 8);\n\t\t\t// replace with smaller text entire\n\t\t\tassertNodeAcceptEdit('B.184', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 10, 7, false, 5, 12);\n\t\t\tassertNodeAcceptEdit('B.185', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 10, 7, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.186', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 10, 7, false, 5, 10);\n\t\t\tassertNodeAcceptEdit('B.187', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 10, 7, false, 5, 12);\n\t\t\tassertNodeAcceptEdit('B.188', 5, 10, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges, 5, 10, 7, true, 12, 12);\n\t\t\tassertNodeAcceptEdit('B.189', 5, 10, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges, 5, 10, 7, true, 12, 12);\n\t\t\tassertNodeAcceptEdit('B.190', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingBefore, 5, 10, 7, true, 12, 12);\n\t\t\tassertNodeAcceptEdit('B.191', 5, 10, TrackedRangeStickiness.GrowsOnlyWhenTypingAfter, 5, 10, 7, true, 12, 12);\n\n\t\t}\n\t});\n});\n\nfunction printTree(T: IntervalTree): void {\n\tif (T.root === SENTINEL) {\n\t\tconsole.log(`~~ empty`);\n\t\treturn;\n\t}\n\tlet out: string[] = [];\n\t_printTree(T, T.root, '', 0, out);\n\tconsole.log(out.join(''));\n}\n\nfunction _printTree(T: IntervalTree, n: IntervalNode, indent: string, delta: number, out: string[]): void {\n\tout.push(`${indent}[${getNodeColor(n) === NodeColor.Red ? 'R' : 'B'},${n.delta}, ${n.start}->${n.end}, ${n.maxEnd}] : {${delta + n.start}->${delta + n.end}}, maxEnd: ${n.maxEnd + delta}\\n`);\n\tif (n.left !== SENTINEL) {\n\t\t_printTree(T, n.left, indent + '    ', delta, out);\n\t} else {\n\t\tout.push(`${indent}    NIL\\n`);\n\t}\n\tif (n.right !== SENTINEL) {\n\t\t_printTree(T, n.right, indent + '    ', delta + n.delta, out);\n\t} else {\n\t\tout.push(`${indent}    NIL\\n`);\n\t}\n}\n\n//#region Assertion\n\nfunction assertTreeInvariants(T: IntervalTree): void {\n\tassert(getNodeColor(SENTINEL) === NodeColor.Black);\n\tassert(SENTINEL.parent === SENTINEL);\n\tassert(SENTINEL.left === SENTINEL);\n\tassert(SENTINEL.right === SENTINEL);\n\tassert(SENTINEL.start === 0);\n\tassert(SENTINEL.end === 0);\n\tassert(SENTINEL.delta === 0);\n\tassert(T.root.parent === SENTINEL);\n\tassertValidTree(T);\n}\n\nfunction depth(n: IntervalNode): number {\n\tif (n === SENTINEL) {\n\t\t// The leafs are black\n\t\treturn 1;\n\t}\n\tassert(depth(n.left) === depth(n.right));\n\treturn (getNodeColor(n) === NodeColor.Black ? 1 : 0) + depth(n.left);\n}\n\nfunction assertValidNode(n: IntervalNode, delta: number): void {\n\tif (n === SENTINEL) {\n\t\treturn;\n\t}\n\n\tlet l = n.left;\n\tlet r = n.right;\n\n\tif (getNodeColor(n) === NodeColor.Red) {\n\t\tassert(getNodeColor(l) === NodeColor.Black);\n\t\tassert(getNodeColor(r) === NodeColor.Black);\n\t}\n\n\tlet expectedMaxEnd = n.end;\n\tif (l !== SENTINEL) {\n\t\tassert(intervalCompare(l.start + delta, l.end + delta, n.start + delta, n.end + delta) <= 0);\n\t\texpectedMaxEnd = Math.max(expectedMaxEnd, l.maxEnd);\n\t}\n\tif (r !== SENTINEL) {\n\t\tassert(intervalCompare(n.start + delta, n.end + delta, r.start + delta + n.delta, r.end + delta + n.delta) <= 0);\n\t\texpectedMaxEnd = Math.max(expectedMaxEnd, r.maxEnd + n.delta);\n\t}\n\tassert(n.maxEnd === expectedMaxEnd);\n\n\tassertValidNode(l, delta);\n\tassertValidNode(r, delta + n.delta);\n}\n\nfunction assertValidTree(T: IntervalTree): void {\n\tif (T.root === SENTINEL) {\n\t\treturn;\n\t}\n\tassert(getNodeColor(T.root) === NodeColor.Black);\n\tassert(depth(T.root.left) === depth(T.root.right));\n\tassertValidNode(T.root, 0);\n}\n\n//#endregion\n\n"]}