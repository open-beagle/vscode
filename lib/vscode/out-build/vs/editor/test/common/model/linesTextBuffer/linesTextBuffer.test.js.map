{"version":3,"file":"linesTextBuffer.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/linesTextBuffer/linesTextBuffer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { DefaultEndOfLine } from 'vs/editor/common/model';\nimport { IValidatedEditOperation, PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\nimport { createTextBufferFactory } from 'vs/editor/common/model/textModel';\n\nsuite('PieceTreeTextBuffer._getInverseEdits', () => {\n\n\tfunction editOp(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, text: string[] | null): IValidatedEditOperation {\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: null,\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\trangeOffset: 0,\n\t\t\trangeLength: 0,\n\t\t\ttext: text ? text.join('\\n') : '',\n\t\t\teolCount: text ? text.length - 1 : 0,\n\t\t\tfirstLineLength: text ? text[0].length : 0,\n\t\t\tlastLineLength: text ? text[text.length - 1].length : 0,\n\t\t\tforceMoveMarkers: false,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tfunction inverseEditOp(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tfunction assertInverseEdits(ops: IValidatedEditOperation[], expected: Range[]): void {\n\t\tlet actual = PieceTreeTextBuffer._getInverseEditRanges(ops);\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\ttest('single insert', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Bug 19872: Undo is funky', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(2, 1, 2, 2, ['']),\n\t\t\t\teditOp(3, 1, 4, 2, [''])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(2, 1, 2, 1),\n\t\t\t\tinverseEditOp(3, 1, 3, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single unrelated inserts', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello']),\n\t\t\t\teditOp(2, 1, 2, 1, ['world'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 6),\n\t\t\t\tinverseEditOp(2, 1, 2, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single inserts 1', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello']),\n\t\t\t\teditOp(1, 2, 1, 2, ['world'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 6),\n\t\t\t\tinverseEditOp(1, 7, 1, 12)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single inserts 2', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello']),\n\t\t\t\teditOp(1, 4, 1, 4, ['world'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 6),\n\t\t\t\tinverseEditOp(1, 9, 1, 14)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline insert', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello', 'world'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 2, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two unrelated multiline inserts', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello', 'world']),\n\t\t\t\teditOp(2, 1, 2, 1, ['how', 'are', 'you?']),\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 2, 6),\n\t\t\t\tinverseEditOp(3, 1, 5, 5),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two multiline inserts 1', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, ['hello', 'world']),\n\t\t\t\teditOp(1, 2, 1, 2, ['how', 'are', 'you?']),\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 2, 6),\n\t\t\t\tinverseEditOp(2, 7, 4, 5),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('single delete', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, null)\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single unrelated deletes', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, null),\n\t\t\t\teditOp(2, 1, 2, 6, null)\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1),\n\t\t\t\tinverseEditOp(2, 1, 2, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single deletes 1', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, null),\n\t\t\t\teditOp(1, 7, 1, 12, null)\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1),\n\t\t\t\tinverseEditOp(1, 2, 1, 2)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two single deletes 2', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, null),\n\t\t\t\teditOp(1, 9, 1, 14, null)\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1),\n\t\t\t\tinverseEditOp(1, 4, 1, 4)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline delete', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 2, 6, null)\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two unrelated multiline deletes', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 2, 6, null),\n\t\t\t\teditOp(3, 1, 5, 5, null),\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1),\n\t\t\t\tinverseEditOp(2, 1, 2, 1),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two multiline deletes 1', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 2, 6, null),\n\t\t\t\teditOp(2, 7, 4, 5, null),\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 1),\n\t\t\t\tinverseEditOp(1, 2, 1, 2),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('single replace', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, ['Hello world'])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 12)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('two replaces', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 6, ['Hello world']),\n\t\t\t\teditOp(1, 7, 1, 8, ['How are you?']),\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 1, 1, 12),\n\t\t\t\tinverseEditOp(1, 13, 1, 25)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('many edits', () => {\n\t\tassertInverseEdits(\n\t\t\t[\n\t\t\t\teditOp(1, 2, 1, 2, ['', '  ']),\n\t\t\t\teditOp(1, 5, 1, 6, ['']),\n\t\t\t\teditOp(1, 9, 1, 9, ['', ''])\n\t\t\t],\n\t\t\t[\n\t\t\t\tinverseEditOp(1, 2, 2, 3),\n\t\t\t\tinverseEditOp(2, 6, 2, 6),\n\t\t\t\tinverseEditOp(2, 9, 3, 1)\n\t\t\t]\n\t\t);\n\t});\n});\n\nsuite('PieceTreeTextBuffer._toSingleEditOperation', () => {\n\n\tfunction editOp(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, rangeOffset: number, rangeLength: number, text: string[] | null): IValidatedEditOperation {\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: null,\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\trangeOffset: rangeOffset,\n\t\t\trangeLength: rangeLength,\n\t\t\ttext: text ? text.join('\\n') : '',\n\t\t\teolCount: text ? text.length - 1 : 0,\n\t\t\tfirstLineLength: text ? text[0].length : 0,\n\t\t\tlastLineLength: text ? text[text.length - 1].length : 0,\n\t\t\tforceMoveMarkers: false,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tfunction testToSingleEditOperation(original: string[], edits: IValidatedEditOperation[], expected: IValidatedEditOperation): void {\n\t\tconst textBuffer = <PieceTreeTextBuffer>createTextBufferFactory(original.join('\\n')).create(DefaultEndOfLine.LF).textBuffer;\n\n\t\tconst actual = textBuffer._toSingleEditOperation(edits);\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\ttest('one edit op is unchanged', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 3, 1, 3, 2, 0, [' new line', 'No longer'])\n\t\t\t],\n\t\t\teditOp(1, 3, 1, 3, 2, 0, [' new line', 'No longer'])\n\t\t);\n\t});\n\n\ttest('two edits on one line', () => {\n\t\ttestToSingleEditOperation([\n\t\t\t'My First Line',\n\t\t\t'\\t\\tMy Second Line',\n\t\t\t'    Third Line',\n\t\t\t'',\n\t\t\t'1'\n\t\t], [\n\t\t\teditOp(1, 1, 1, 3, 0, 2, ['Your']),\n\t\t\teditOp(1, 4, 1, 4, 3, 0, ['Interesting ']),\n\t\t\teditOp(2, 3, 2, 6, 16, 3, null)\n\t\t],\n\t\t\teditOp(1, 1, 2, 6, 0, 19, [\n\t\t\t\t'Your Interesting First Line',\n\t\t\t\t'\\t\\t'\n\t\t\t]));\n\t});\n\n\ttest('insert multiple newlines', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 3, 1, 3, 2, 0, ['', '', '', '', '']),\n\t\t\t\teditOp(3, 15, 3, 15, 45, 0, ['a', 'b'])\n\t\t\t],\n\t\t\teditOp(1, 3, 3, 15, 2, 43, [\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t' First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Linea',\n\t\t\t\t'b'\n\t\t\t])\n\t\t);\n\t});\n\n\ttest('delete empty text', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 1, 0, 0, [''])\n\t\t\t],\n\t\t\teditOp(1, 1, 1, 1, 0, 0, [''])\n\t\t);\n\t});\n\n\ttest('two unrelated edits', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(2, 1, 2, 3, 14, 2, ['\\t']),\n\t\t\t\teditOp(3, 1, 3, 5, 31, 4, [''])\n\t\t\t],\n\t\t\teditOp(2, 1, 3, 5, 14, 21, ['\\tMy Second Line', ''])\n\t\t);\n\t});\n\n\ttest('many edits', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'{\"x\" : 1}'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 2, 1, 2, 1, 0, ['\\n  ']),\n\t\t\t\teditOp(1, 5, 1, 6, 4, 1, ['']),\n\t\t\t\teditOp(1, 9, 1, 9, 8, 0, ['\\n'])\n\t\t\t],\n\t\t\teditOp(1, 2, 1, 9, 1, 7, [\n\t\t\t\t'',\n\t\t\t\t'  \"x\": 1',\n\t\t\t\t''\n\t\t\t])\n\t\t);\n\t});\n\n\ttest('many edits reversed', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'{',\n\t\t\t\t'  \"x\": 1',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 2, 2, 3, 1, 3, ['']),\n\t\t\t\teditOp(2, 6, 2, 6, 7, 0, [' ']),\n\t\t\t\teditOp(2, 9, 3, 1, 10, 1, [''])\n\t\t\t],\n\t\t\teditOp(1, 2, 3, 1, 1, 10, ['\"x\" : 1'])\n\t\t);\n\t});\n\n\ttest('replacing newlines 1', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'{',\n\t\t\t\t'\"a\": true,',\n\t\t\t\t'',\n\t\t\t\t'\"b\": true',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 2, 2, 1, 1, 1, ['', '\\t']),\n\t\t\t\teditOp(2, 11, 4, 1, 12, 2, ['', '\\t'])\n\t\t\t],\n\t\t\teditOp(1, 2, 4, 1, 1, 13, [\n\t\t\t\t'',\n\t\t\t\t'\\t\"a\": true,',\n\t\t\t\t'\\t'\n\t\t\t])\n\t\t);\n\t});\n\n\ttest('replacing newlines 2', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'some text',\n\t\t\t\t'some more text',\n\t\t\t\t'now comes an empty line',\n\t\t\t\t'',\n\t\t\t\t'after empty line',\n\t\t\t\t'and the last line'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 5, 3, 1, 4, 21, [' text', 'some more text', 'some more text']),\n\t\t\t\teditOp(3, 2, 4, 1, 26, 23, ['o more lines', 'asd', 'asd', 'asd']),\n\t\t\t\teditOp(5, 1, 5, 6, 50, 5, ['zzzzzzzz']),\n\t\t\t\teditOp(5, 11, 6, 16, 60, 22, ['1', '2', '3', '4'])\n\t\t\t],\n\t\t\teditOp(1, 5, 6, 16, 4, 78, [\n\t\t\t\t' text',\n\t\t\t\t'some more text',\n\t\t\t\t'some more textno more lines',\n\t\t\t\t'asd',\n\t\t\t\t'asd',\n\t\t\t\t'asd',\n\t\t\t\t'zzzzzzzz empt1',\n\t\t\t\t'2',\n\t\t\t\t'3',\n\t\t\t\t'4'\n\t\t\t])\n\t\t);\n\t});\n\n\ttest('advanced', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t' {       \"d\": [',\n\t\t\t\t'             null',\n\t\t\t\t'        ] /*comment*/',\n\t\t\t\t'        ,\"e\": /*comment*/ [null] }',\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 2, 0, 1, ['']),\n\t\t\t\teditOp(1, 3, 1, 10, 2, 7, ['', '  ']),\n\t\t\t\teditOp(1, 16, 2, 14, 15, 14, ['', '    ']),\n\t\t\t\teditOp(2, 18, 3, 9, 33, 9, ['', '  ']),\n\t\t\t\teditOp(3, 22, 4, 9, 55, 9, ['']),\n\t\t\t\teditOp(4, 10, 4, 10, 65, 0, ['', '  ']),\n\t\t\t\teditOp(4, 28, 4, 28, 83, 0, ['', '    ']),\n\t\t\t\teditOp(4, 32, 4, 32, 87, 0, ['', '  ']),\n\t\t\t\teditOp(4, 33, 4, 34, 88, 1, ['', ''])\n\t\t\t],\n\t\t\teditOp(1, 1, 4, 34, 0, 89, [\n\t\t\t\t'{',\n\t\t\t\t'  \"d\": [',\n\t\t\t\t'    null',\n\t\t\t\t'  ] /*comment*/,',\n\t\t\t\t'  \"e\": /*comment*/ [',\n\t\t\t\t'    null',\n\t\t\t\t'  ]',\n\t\t\t\t''\n\t\t\t])\n\t\t);\n\t});\n\n\ttest('advanced simplified', () => {\n\t\ttestToSingleEditOperation(\n\t\t\t[\n\t\t\t\t'   abc',\n\t\t\t\t' ,def'\n\t\t\t],\n\t\t\t[\n\t\t\t\teditOp(1, 1, 1, 4, 0, 3, ['']),\n\t\t\t\teditOp(1, 7, 2, 2, 6, 2, ['']),\n\t\t\t\teditOp(2, 3, 2, 3, 9, 0, ['', ''])\n\t\t\t],\n\t\t\teditOp(1, 1, 2, 3, 0, 9, [\n\t\t\t\t'abc,',\n\t\t\t\t''\n\t\t\t])\n\t\t);\n\t});\n});\n"]}