{"version":3,"file":"model.line.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/model.line.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { Range } from 'vs/editor/common/core/range';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { LanguageIdentifier, MetadataConsts } from 'vs/editor/common/modes';\nimport { ViewLineToken, ViewLineTokenFactory } from 'vs/editor/test/common/core/viewLineToken';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\ninterface ILineEdit {\n\tstartColumn: number;\n\tendColumn: number;\n\ttext: string;\n}\n\nfunction assertLineTokens(__actual: LineTokens, _expected: TestToken[]): void {\n\tlet tmp = TestToken.toTokens(_expected);\n\tLineTokens.convertToEndOffset(tmp, __actual.getLineContent().length);\n\tlet expected = ViewLineTokenFactory.inflateArr(tmp);\n\tlet _actual = __actual.inflate();\n\tinterface ITestToken {\n\t\tendIndex: number;\n\t\ttype: string;\n\t}\n\tlet actual: ITestToken[] = [];\n\tfor (let i = 0, len = _actual.getCount(); i < len; i++) {\n\t\tactual[i] = {\n\t\t\tendIndex: _actual.getEndOffset(i),\n\t\t\ttype: _actual.getClassName(i)\n\t\t};\n\t}\n\tlet decode = (token: ViewLineToken) => {\n\t\treturn {\n\t\t\tendIndex: token.endIndex,\n\t\t\ttype: token.getType()\n\t\t};\n\t};\n\tassert.deepStrictEqual(actual, expected.map(decode));\n}\n\nsuite('ModelLine - getIndentLevel', () => {\n\tfunction assertIndentLevel(text: string, expected: number, tabSize: number = 4): void {\n\t\tlet actual = TextModel.computeIndentLevel(text, tabSize);\n\t\tassert.strictEqual(actual, expected, text);\n\t}\n\n\ttest('getIndentLevel', () => {\n\t\tassertIndentLevel('', -1);\n\t\tassertIndentLevel(' ', -1);\n\t\tassertIndentLevel('   \\t', -1);\n\t\tassertIndentLevel('Hello', 0);\n\t\tassertIndentLevel(' Hello', 1);\n\t\tassertIndentLevel('   Hello', 3);\n\t\tassertIndentLevel('\\tHello', 4);\n\t\tassertIndentLevel(' \\tHello', 4);\n\t\tassertIndentLevel('  \\tHello', 4);\n\t\tassertIndentLevel('   \\tHello', 4);\n\t\tassertIndentLevel('    \\tHello', 8);\n\t\tassertIndentLevel('     \\tHello', 8);\n\t\tassertIndentLevel('\\t Hello', 5);\n\t\tassertIndentLevel('\\t \\tHello', 8);\n\t});\n});\n\nclass TestToken {\n\tpublic readonly startOffset: number;\n\tpublic readonly color: number;\n\n\tconstructor(startOffset: number, color: number) {\n\t\tthis.startOffset = startOffset;\n\t\tthis.color = color;\n\t}\n\n\tpublic static toTokens(tokens: TestToken[]): Uint32Array;\n\tpublic static toTokens(tokens: TestToken[] | null): Uint32Array | null {\n\t\tif (tokens === null) {\n\t\t\treturn null;\n\t\t}\n\t\tlet tokensLen = tokens.length;\n\t\tlet result = new Uint32Array((tokensLen << 1));\n\t\tfor (let i = 0; i < tokensLen; i++) {\n\t\t\tlet token = tokens[i];\n\t\t\tresult[(i << 1)] = token.startOffset;\n\t\t\tresult[(i << 1) + 1] = (\n\t\t\t\ttoken.color << MetadataConsts.FOREGROUND_OFFSET\n\t\t\t) >>> 0;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nsuite('ModelLinesTokens', () => {\n\n\tinterface IBufferLineState {\n\t\ttext: string;\n\t\ttokens: TestToken[];\n\t}\n\n\tinterface IEdit {\n\t\trange: Range;\n\t\ttext: string;\n\t}\n\n\tfunction testApplyEdits(initial: IBufferLineState[], edits: IEdit[], expected: IBufferLineState[]): void {\n\t\tconst initialText = initial.map(el => el.text).join('\\n');\n\t\tconst model = createTextModel(initialText, TextModel.DEFAULT_CREATION_OPTIONS, new LanguageIdentifier('test', 0));\n\t\tfor (let lineIndex = 0; lineIndex < initial.length; lineIndex++) {\n\t\t\tconst lineTokens = initial[lineIndex].tokens;\n\t\t\tconst lineTextLength = model.getLineMaxColumn(lineIndex + 1) - 1;\n\t\t\tconst tokens = TestToken.toTokens(lineTokens);\n\t\t\tLineTokens.convertToEndOffset(tokens, lineTextLength);\n\t\t\tmodel.setLineTokens(lineIndex + 1, tokens);\n\t\t}\n\n\t\tmodel.applyEdits(edits.map((ed) => ({\n\t\t\tidentifier: null,\n\t\t\trange: ed.range,\n\t\t\ttext: ed.text,\n\t\t\tforceMoveMarkers: false\n\t\t})));\n\n\t\tfor (let lineIndex = 0; lineIndex < expected.length; lineIndex++) {\n\t\t\tconst actualLine = model.getLineContent(lineIndex + 1);\n\t\t\tconst actualTokens = model.getLineTokens(lineIndex + 1);\n\t\t\tassert.strictEqual(actualLine, expected[lineIndex].text);\n\t\t\tassertLineTokens(actualTokens, expected[lineIndex].tokens);\n\t\t}\n\t}\n\n\ttest('single delete 1', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 1, 2), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'ello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(4, 2), new TestToken(5, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single delete 2', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'helloworld',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 3, 1, 8), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'herld',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(2, 2)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single delete 3', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 1, 6), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: ' world',\n\t\t\t\ttokens: [new TestToken(0, 2), new TestToken(1, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single delete 4', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 2, 1, 7), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'hworld',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(1, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single delete 5', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 1, 12), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: '',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi delete 6', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 7), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 6, 3, 6), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi delete 7', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 7), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 12, 3, 12), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi delete 8', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 7), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 3, 1), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 7), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi delete 9', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 7), new TestToken(5, 8), new TestToken(6, 9)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 12, 3, 1), text: '' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello worldhello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3), new TestToken(11, 7), new TestToken(16, 8), new TestToken(17, 9)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single insert 1', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 1, 1), text: 'xx' }],\n\t\t\t[{\n\t\t\t\ttext: 'xxhello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(7, 2), new TestToken(8, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single insert 2', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 2, 1, 2), text: 'xx' }],\n\t\t\t[{\n\t\t\t\ttext: 'hxxello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(7, 2), new TestToken(8, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single insert 3', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 6, 1, 6), text: 'xx' }],\n\t\t\t[{\n\t\t\t\ttext: 'helloxx world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(7, 2), new TestToken(8, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single insert 4', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 7, 1, 7), text: 'xx' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello xxworld',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(8, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('single insert 5', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 12, 1, 12), text: 'xx' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello worldxx',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi insert 6', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 1, 1, 1), text: '\\n' }],\n\t\t\t[{\n\t\t\t\ttext: '',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi insert 7', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 12, 1, 12), text: '\\n' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: '',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi insert 8', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 7, 1, 7), text: '\\n' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello ',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2)]\n\t\t\t}, {\n\t\t\t\ttext: 'world',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}]\n\t\t);\n\t});\n\n\ttest('multi insert 9', () => {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2), new TestToken(6, 3)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}],\n\t\t\t[{ range: new Range(1, 7, 1, 7), text: 'xx\\nyy' }],\n\t\t\t[{\n\t\t\t\ttext: 'hello xx',\n\t\t\t\ttokens: [new TestToken(0, 1), new TestToken(5, 2)]\n\t\t\t}, {\n\t\t\t\ttext: 'yyworld',\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}, {\n\t\t\t\ttext: 'hello world',\n\t\t\t\ttokens: [new TestToken(0, 4), new TestToken(5, 5), new TestToken(6, 6)]\n\t\t\t}]\n\t\t);\n\t});\n\n\tfunction testLineEditTokens(initialText: string, initialTokens: TestToken[], edits: ILineEdit[], expectedText: string, expectedTokens: TestToken[]): void {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: initialText,\n\t\t\t\ttokens: initialTokens\n\t\t\t}],\n\t\t\tedits.map((ed) => ({\n\t\t\t\trange: new Range(1, ed.startColumn, 1, ed.endColumn),\n\t\t\t\ttext: ed.text\n\t\t\t})),\n\t\t\t[{\n\t\t\t\ttext: expectedText,\n\t\t\t\ttokens: expectedTokens\n\t\t\t}]\n\t\t);\n\t}\n\n\ttest('insertion on empty line', () => {\n\t\tconst model = createTextModel('some text', TextModel.DEFAULT_CREATION_OPTIONS, new LanguageIdentifier('test', 0));\n\t\tconst tokens = TestToken.toTokens([new TestToken(0, 1)]);\n\t\tLineTokens.convertToEndOffset(tokens, model.getLineMaxColumn(1) - 1);\n\t\tmodel.setLineTokens(1, tokens);\n\n\t\tmodel.applyEdits([{\n\t\t\trange: new Range(1, 1, 1, 10),\n\t\t\ttext: ''\n\t\t}]);\n\n\t\tmodel.setLineTokens(1, new Uint32Array(0));\n\n\t\tmodel.applyEdits([{\n\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\ttext: 'a'\n\t\t}]);\n\n\t\tconst actualTokens = model.getLineTokens(1);\n\t\tassertLineTokens(actualTokens, [new TestToken(0, 1)]);\n\t});\n\n\ttest('updates tokens on insertion 1', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t\ttext: 'a',\n\t\t\t}],\n\t\t\t'aabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(5, 2),\n\t\t\t\tnew TestToken(6, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 2', () => {\n\t\ttestLineEditTokens(\n\t\t\t'aabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(5, 2),\n\t\t\t\tnew TestToken(6, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendColumn: 2,\n\t\t\t\ttext: 'x',\n\t\t\t}],\n\t\t\t'axabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(6, 2),\n\t\t\t\tnew TestToken(7, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 3', () => {\n\t\ttestLineEditTokens(\n\t\t\t'axabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(6, 2),\n\t\t\t\tnew TestToken(7, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 3,\n\t\t\t\tendColumn: 3,\n\t\t\t\ttext: 'stu',\n\t\t\t}],\n\t\t\t'axstuabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(9, 2),\n\t\t\t\tnew TestToken(10, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 4', () => {\n\t\ttestLineEditTokens(\n\t\t\t'axstuabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(9, 2),\n\t\t\t\tnew TestToken(10, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 10,\n\t\t\t\tendColumn: 10,\n\t\t\t\ttext: '\\t',\n\t\t\t}],\n\t\t\t'axstuabcd\\t efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(11, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 5', () => {\n\t\ttestLineEditTokens(\n\t\t\t'axstuabcd\\t efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(11, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 12,\n\t\t\t\tendColumn: 12,\n\t\t\t\ttext: 'dd',\n\t\t\t}],\n\t\t\t'axstuabcd\\t ddefgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(13, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 6', () => {\n\t\ttestLineEditTokens(\n\t\t\t'axstuabcd\\t ddefgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(13, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 18,\n\t\t\t\tendColumn: 18,\n\t\t\t\ttext: 'xyz',\n\t\t\t}],\n\t\t\t'axstuabcd\\t ddefghxyz',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(13, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 7', () => {\n\t\ttestLineEditTokens(\n\t\t\t'axstuabcd\\t ddefghxyz',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(10, 2),\n\t\t\t\tnew TestToken(13, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t\ttext: 'x',\n\t\t\t}],\n\t\t\t'xaxstuabcd\\t ddefghxyz',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(11, 2),\n\t\t\t\tnew TestToken(14, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 8', () => {\n\t\ttestLineEditTokens(\n\t\t\t'xaxstuabcd\\t ddefghxyz',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(11, 2),\n\t\t\t\tnew TestToken(14, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 22,\n\t\t\t\tendColumn: 22,\n\t\t\t\ttext: 'x',\n\t\t\t}],\n\t\t\t'xaxstuabcd\\t ddefghxyzx',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(11, 2),\n\t\t\t\tnew TestToken(14, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 9', () => {\n\t\ttestLineEditTokens(\n\t\t\t'xaxstuabcd\\t ddefghxyzx',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(11, 2),\n\t\t\t\tnew TestToken(14, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendColumn: 2,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'xaxstuabcd\\t ddefghxyzx',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(11, 2),\n\t\t\t\tnew TestToken(14, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on insertion 10', () => {\n\t\ttestLineEditTokens(\n\t\t\t'',\n\t\t\t[],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t\ttext: 'a',\n\t\t\t}],\n\t\t\t'a',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete second token 2', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcdefghij',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(3, 2),\n\t\t\t\tnew TestToken(6, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 4,\n\t\t\t\tendColumn: 7,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcghij',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(3, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('insert right before second token', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcdefghij',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(3, 2),\n\t\t\t\tnew TestToken(6, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 4,\n\t\t\t\tendColumn: 4,\n\t\t\t\ttext: 'hello',\n\t\t\t}],\n\t\t\t'abchellodefghij',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(8, 2),\n\t\t\t\tnew TestToken(11, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete first char', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 2,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'bcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(3, 2),\n\t\t\t\tnew TestToken(4, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete 2nd and 3rd chars', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendColumn: 4,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'ad efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(2, 2),\n\t\t\t\tnew TestToken(3, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete first token', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 5,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t' efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 2),\n\t\t\t\tnew TestToken(1, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete second token', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 5,\n\t\t\t\tendColumn: 6,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcdefgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete second token + a bit of the third one', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 5,\n\t\t\t\tendColumn: 7,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcdfgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete second and third token', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 5,\n\t\t\t\tendColumn: 10,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcd',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('delete everything', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 10,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('noop', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('equivalent to deleting first two chars', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 3,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'cd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(2, 2),\n\t\t\t\tnew TestToken(3, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('equivalent to deleting from 5 to the end', () => {\n\t\ttestLineEditTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 5,\n\t\t\t\tendColumn: 10,\n\t\t\t\ttext: '',\n\t\t\t}],\n\t\t\t'abcd',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on replace 1', () => {\n\t\ttestLineEditTokens(\n\t\t\t'Hello world, ciao',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(5, 0),\n\t\t\t\tnew TestToken(6, 2),\n\t\t\t\tnew TestToken(11, 0),\n\t\t\t\tnew TestToken(13, 0)\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 6,\n\t\t\t\ttext: 'Hi',\n\t\t\t}],\n\t\t\t'Hi world, ciao',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 0),\n\t\t\t\tnew TestToken(3, 2),\n\t\t\t\tnew TestToken(8, 0),\n\t\t\t\tnew TestToken(10, 0),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('updates tokens on replace 2', () => {\n\t\ttestLineEditTokens(\n\t\t\t'Hello world, ciao',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(5, 0),\n\t\t\t\tnew TestToken(6, 2),\n\t\t\t\tnew TestToken(11, 0),\n\t\t\t\tnew TestToken(13, 0),\n\t\t\t],\n\t\t\t[{\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendColumn: 6,\n\t\t\t\ttext: 'Hi',\n\t\t\t}, {\n\t\t\t\tstartColumn: 8,\n\t\t\t\tendColumn: 12,\n\t\t\t\ttext: 'my friends',\n\t\t\t}],\n\t\t\t'Hi wmy friends, ciao',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 0),\n\t\t\t\tnew TestToken(3, 2),\n\t\t\t\tnew TestToken(14, 0),\n\t\t\t\tnew TestToken(16, 0),\n\t\t\t]\n\t\t);\n\t});\n\n\tfunction testLineSplitTokens(initialText: string, initialTokens: TestToken[], splitColumn: number, expectedText1: string, expectedText2: string, expectedTokens: TestToken[]): void {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: initialText,\n\t\t\t\ttokens: initialTokens\n\t\t\t}],\n\t\t\t[{\n\t\t\t\trange: new Range(1, splitColumn, 1, splitColumn),\n\t\t\t\ttext: '\\n'\n\t\t\t}],\n\t\t\t[{\n\t\t\t\ttext: expectedText1,\n\t\t\t\ttokens: expectedTokens\n\t\t\t}, {\n\t\t\t\ttext: expectedText2,\n\t\t\t\ttokens: [new TestToken(0, 1)]\n\t\t\t}]\n\t\t);\n\t}\n\n\ttest('split at the beginning', () => {\n\t\ttestLineSplitTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t1,\n\t\t\t'',\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('split at the end', () => {\n\t\ttestLineSplitTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t10,\n\t\t\t'abcd efgh',\n\t\t\t'',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('split inthe middle 1', () => {\n\t\ttestLineSplitTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t5,\n\t\t\t'abcd',\n\t\t\t' efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('split inthe middle 2', () => {\n\t\ttestLineSplitTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t6,\n\t\t\t'abcd ',\n\t\t\t'efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2)\n\t\t\t]\n\t\t);\n\t});\n\n\tfunction testLineAppendTokens(aText: string, aTokens: TestToken[], bText: string, bTokens: TestToken[], expectedText: string, expectedTokens: TestToken[]): void {\n\t\ttestApplyEdits(\n\t\t\t[{\n\t\t\t\ttext: aText,\n\t\t\t\ttokens: aTokens\n\t\t\t}, {\n\t\t\t\ttext: bText,\n\t\t\t\ttokens: bTokens\n\t\t\t}],\n\t\t\t[{\n\t\t\t\trange: new Range(1, aText.length + 1, 2, 1),\n\t\t\t\ttext: ''\n\t\t\t}],\n\t\t\t[{\n\t\t\t\ttext: expectedText,\n\t\t\t\ttokens: expectedTokens\n\t\t\t}]\n\t\t);\n\t}\n\n\ttest('append empty 1', () => {\n\t\ttestLineAppendTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t'',\n\t\t\t[],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('append empty 2', () => {\n\t\ttestLineAppendTokens(\n\t\t\t'',\n\t\t\t[],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('append 1', () => {\n\t\ttestLineAppendTokens(\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 4),\n\t\t\t\tnew TestToken(4, 5),\n\t\t\t\tnew TestToken(5, 6)\n\t\t\t],\n\t\t\t'abcd efghabcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3),\n\t\t\t\tnew TestToken(9, 4),\n\t\t\t\tnew TestToken(13, 5),\n\t\t\t\tnew TestToken(14, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('append 2', () => {\n\t\ttestLineAppendTokens(\n\t\t\t'abcd ',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2)\n\t\t\t],\n\t\t\t'efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 3)\n\t\t\t],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('append 3', () => {\n\t\ttestLineAppendTokens(\n\t\t\t'abcd',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t],\n\t\t\t' efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 2),\n\t\t\t\tnew TestToken(1, 3)\n\t\t\t],\n\t\t\t'abcd efgh',\n\t\t\t[\n\t\t\t\tnew TestToken(0, 1),\n\t\t\t\tnew TestToken(4, 2),\n\t\t\t\tnew TestToken(5, 3)\n\t\t\t]\n\t\t);\n\t});\n});\n"]}