{"version":3,"file":"model.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/model.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { TokenizationResult2 } from 'vs/editor/common/core/token';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ModelRawContentChangedEvent, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from 'vs/editor/common/model/textModelEvents';\nimport { IState, LanguageIdentifier, MetadataConsts, TokenizationRegistry } from 'vs/editor/common/modes';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { NULL_STATE } from 'vs/editor/common/modes/nullMode';\nimport { MockMode } from 'vs/editor/test/common/mocks/mockMode';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\n// --------- utils\n\nconst LINE1 = 'My First Line';\nconst LINE2 = '\\t\\tMy Second Line';\nconst LINE3 = '    Third Line';\nconst LINE4 = '';\nconst LINE5 = '1';\n\nsuite('Editor Model - Model', () => {\n\n\tlet thisModel: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\t// --------- insert text\n\n\ttest('model getValue', () => {\n\t\tassert.strictEqual(thisModel.getValue(), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n\\n1');\n\t});\n\n\ttest('model insert empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model insert text without newline 1', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'foo My First Line');\n\t});\n\n\ttest('model insert text without newline 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' foo')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My foo First Line');\n\t});\n\n\ttest('model insert text with one newline', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 6);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My new line');\n\t\tassert.strictEqual(thisModel.getLineContent(2), 'No longer First Line');\n\t});\n\n\ttest('model insert text with two newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nOne more line in the middle\\nNo longer')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 7);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My new line');\n\t\tassert.strictEqual(thisModel.getLineContent(2), 'One more line in the middle');\n\t\tassert.strictEqual(thisModel.getLineContent(3), 'No longer First Line');\n\t});\n\n\ttest('model insert text with many newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), '\\n\\n\\n\\n')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 9);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My');\n\t\tassert.strictEqual(thisModel.getLineContent(2), '');\n\t\tassert.strictEqual(thisModel.getLineContent(3), '');\n\t\tassert.strictEqual(thisModel.getLineContent(4), '');\n\t\tassert.strictEqual(thisModel.getLineContent(5), ' First Line');\n\t});\n\n\n\t// --------- insert text eventing\n\n\ttest('model insert empty text does not trigger eventing', () => {\n\t\tthisModel.onDidChangeRawContent((e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t});\n\n\ttest('model insert text without newline eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'foo My First Line')\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\ttest('model insert text with one newline eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My new line'),\n\t\t\t\tnew ModelRawLinesInserted(2, 2, ['No longer First Line']),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\n\t// --------- delete text\n\n\ttest('model delete empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model delete text from one line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'y First Line');\n\t});\n\n\ttest('model delete text from one line 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'a')]);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'aMy First Line');\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 2, 1, 4))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'a First Line');\n\t});\n\n\ttest('model delete all text from a line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 5);\n\t\tassert.strictEqual(thisModel.getLineContent(1), '');\n\t});\n\n\ttest('model delete text from two lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 4);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My Second Line');\n\t});\n\n\ttest('model delete text from many lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 3);\n\t\tassert.strictEqual(thisModel.getLineContent(1), 'My Third Line');\n\t});\n\n\ttest('model delete everything', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 5, 2))]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 1);\n\t\tassert.strictEqual(thisModel.getLineContent(1), '');\n\t});\n\n\t// --------- delete text eventing\n\n\ttest('model delete empty text does not trigger eventing', () => {\n\t\tthisModel.onDidChangeRawContent((e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t});\n\n\ttest('model delete text from one line eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'y First Line'),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\ttest('model delete all text from a line eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, ''),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\ttest('model delete text from two lines eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My Second Line'),\n\t\t\t\tnew ModelRawLinesDeleted(2, 2),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\ttest('model delete text from many lines eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawLineChanged(1, 'My Third Line'),\n\t\t\t\tnew ModelRawLinesDeleted(2, 3),\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\t// --------- getValueInRange\n\n\ttest('getValueInRange', () => {\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 1)), '');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 2)), 'M');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 2, 1, 3)), 'y');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 1, 14)), 'My First Line');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 1)), 'My First Line\\n');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n');\n\t\tassert.strictEqual(thisModel.getValueInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n');\n\t});\n\n\t// --------- getValueLengthInRange\n\n\ttest('getValueLengthInRange', () => {\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\n'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n'.length);\n\t\tassert.strictEqual(thisModel.getValueLengthInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n'.length);\n\t});\n\n\t// --------- setValue\n\ttest('setValue eventing', () => {\n\t\tlet e: ModelRawContentChangedEvent | null = null;\n\t\tthisModel.onDidChangeRawContent((_e) => {\n\t\t\tif (e !== null) {\n\t\t\t\tassert.fail('Unexpected assertion error');\n\t\t\t}\n\t\t\te = _e;\n\t\t});\n\t\tthisModel.setValue('new value');\n\t\tassert.deepStrictEqual(e, new ModelRawContentChangedEvent(\n\t\t\t[\n\t\t\t\tnew ModelRawFlush()\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\tfalse\n\t\t));\n\t});\n\n\ttest('issue #46342: Maintain edit operation order in applyEdits', () => {\n\t\tlet res = thisModel.applyEdits([\n\t\t\t{ range: new Range(2, 1, 2, 1), text: 'a' },\n\t\t\t{ range: new Range(1, 1, 1, 1), text: 'b' },\n\t\t], true);\n\n\t\tassert.deepStrictEqual(res[0].range, new Range(2, 1, 2, 2));\n\t\tassert.deepStrictEqual(res[1].range, new Range(1, 1, 1, 2));\n\t});\n});\n\n\n// --------- Special Unicode LINE SEPARATOR character\nsuite('Editor Model - Model Line Separators', () => {\n\n\tlet thisModel: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\u2028' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\u2028' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\ttest('model getValue', () => {\n\t\tassert.strictEqual(thisModel.getValue(), 'My First Line\\u2028\\t\\tMy Second Line\\n    Third Line\\u2028\\n1');\n\t});\n\n\ttest('model lines', () => {\n\t\tassert.strictEqual(thisModel.getLineCount(), 3);\n\t});\n\n\ttest('Bug 13333:Model should line break on lonely CR too', () => {\n\t\tlet model = createTextModel('Hello\\rWorld!\\r\\nAnother line');\n\t\tassert.strictEqual(model.getLineCount(), 3);\n\t\tassert.strictEqual(model.getValue(), 'Hello\\r\\nWorld!\\r\\nAnother line');\n\t\tmodel.dispose();\n\t});\n});\n\n\n// --------- Words\n\nsuite('Editor Model - Words', () => {\n\n\tconst OUTER_LANGUAGE_ID = new LanguageIdentifier('outerMode', 3);\n\tconst INNER_LANGUAGE_ID = new LanguageIdentifier('innerMode', 4);\n\n\tclass OuterMode extends MockMode {\n\t\tconstructor() {\n\t\t\tsuper(OUTER_LANGUAGE_ID);\n\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {}));\n\n\t\t\tthis._register(TokenizationRegistry.register(this.getLanguageIdentifier().language, {\n\t\t\t\tgetInitialState: (): IState => NULL_STATE,\n\t\t\t\ttokenize: undefined!,\n\t\t\t\ttokenize2: (line: string, hasEOL: boolean, state: IState): TokenizationResult2 => {\n\t\t\t\t\tconst tokensArr: number[] = [];\n\t\t\t\t\tlet prevLanguageId: LanguageIdentifier | undefined = undefined;\n\t\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\t\tconst languageId = (line.charAt(i) === 'x' ? INNER_LANGUAGE_ID : OUTER_LANGUAGE_ID);\n\t\t\t\t\t\tif (prevLanguageId !== languageId) {\n\t\t\t\t\t\t\ttokensArr.push(i);\n\t\t\t\t\t\t\ttokensArr.push((languageId.id << MetadataConsts.LANGUAGEID_OFFSET));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevLanguageId = languageId;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tokens = new Uint32Array(tokensArr.length);\n\t\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\ttokens[i] = tokensArr[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn new TokenizationResult2(tokens, state);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tclass InnerMode extends MockMode {\n\t\tconstructor() {\n\t\t\tsuper(INNER_LANGUAGE_ID);\n\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {}));\n\t\t}\n\t}\n\n\tlet disposables: Disposable[] = [];\n\n\tsetup(() => {\n\t\tdisposables = [];\n\t});\n\n\tteardown(() => {\n\t\tdispose(disposables);\n\t\tdisposables = [];\n\t});\n\n\ttest('Get word at position', () => {\n\t\tconst text = ['This text has some  words. '];\n\t\tconst thisModel = createTextModel(text.join('\\n'));\n\t\tdisposables.push(thisModel);\n\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 1)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 2)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 4)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 5)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 6)), { word: 'text', startColumn: 6, endColumn: 10 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 19)), { word: 'some', startColumn: 15, endColumn: 19 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 20)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 21)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 26)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 27)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 28)), null);\n\t});\n\n\ttest('getWordAtPosition at embedded language boundaries', () => {\n\t\tconst outerMode = new OuterMode();\n\t\tconst innerMode = new InnerMode();\n\t\tdisposables.push(outerMode, innerMode);\n\n\t\tconst model = createTextModel('ab<xx>ab<x>', undefined, outerMode.getLanguageIdentifier());\n\t\tdisposables.push(model);\n\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 1)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 2)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 3)), { word: 'ab', startColumn: 1, endColumn: 3 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 4)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 5)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 6)), { word: 'xx', startColumn: 4, endColumn: 6 });\n\t\tassert.deepStrictEqual(model.getWordAtPosition(new Position(1, 7)), { word: 'ab', startColumn: 7, endColumn: 9 });\n\t});\n\n\ttest('issue #61296: VS code freezes when editing CSS file with emoji', () => {\n\t\tconst MODE_ID = new LanguageIdentifier('testMode', 4);\n\n\t\tconst mode = new class extends MockMode {\n\t\t\tconstructor() {\n\t\t\t\tsuper(MODE_ID);\n\t\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {\n\t\t\t\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]*(?=[^,{;]*[,{]))|(([@#.!])?[\\w-?]+%?|[@#!.])/g\n\t\t\t\t}));\n\t\t\t}\n\t\t};\n\t\tdisposables.push(mode);\n\n\t\tconst thisModel = createTextModel('.🐷-a-b', undefined, MODE_ID);\n\t\tdisposables.push(thisModel);\n\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 1)), { word: '.', startColumn: 1, endColumn: 2 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 2)), { word: '.', startColumn: 1, endColumn: 2 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 3)), null);\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 4)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 5)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 6)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 7)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t\tassert.deepStrictEqual(thisModel.getWordAtPosition(new Position(1, 8)), { word: '-a-b', startColumn: 4, endColumn: 8 });\n\t});\n});\n"]}