{"version":3,"file":"model.modes.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/model.modes.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { TokenizationResult2 } from 'vs/editor/common/core/token';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport * as modes from 'vs/editor/common/modes';\nimport { NULL_STATE } from 'vs/editor/common/modes/nullMode';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\n// --------- utils\n\nsuite('Editor Model - Model Modes 1', () => {\n\n\tlet calledFor: string[] = [];\n\n\tfunction checkAndClear(arr: string[]) {\n\t\tassert.deepStrictEqual(calledFor, arr);\n\t\tcalledFor = [];\n\t}\n\n\tconst tokenizationSupport: modes.ITokenizationSupport = {\n\t\tgetInitialState: () => NULL_STATE,\n\t\ttokenize: undefined!,\n\t\ttokenize2: (line: string, hasEOL: boolean, state: modes.IState): TokenizationResult2 => {\n\t\t\tcalledFor.push(line.charAt(0));\n\t\t\treturn new TokenizationResult2(new Uint32Array(0), state);\n\t\t}\n\t};\n\n\tlet thisModel: TextModel;\n\tlet languageRegistration: IDisposable;\n\n\tsetup(() => {\n\t\tconst TEXT =\n\t\t\t'1\\r\\n' +\n\t\t\t'2\\n' +\n\t\t\t'3\\n' +\n\t\t\t'4\\r\\n' +\n\t\t\t'5';\n\t\tconst LANGUAGE_ID = 'modelModeTest1';\n\t\tcalledFor = [];\n\t\tlanguageRegistration = modes.TokenizationRegistry.register(LANGUAGE_ID, tokenizationSupport);\n\t\tthisModel = createTextModel(TEXT, undefined, new modes.LanguageIdentifier(LANGUAGE_ID, 0));\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t\tlanguageRegistration.dispose();\n\t\tcalledFor = [];\n\t});\n\n\ttest('model calls syntax highlighter 1', () => {\n\t\tthisModel.forceTokenization(1);\n\t\tcheckAndClear(['1']);\n\t});\n\n\ttest('model calls syntax highlighter 2', () => {\n\t\tthisModel.forceTokenization(2);\n\t\tcheckAndClear(['1', '2']);\n\n\t\tthisModel.forceTokenization(2);\n\t\tcheckAndClear([]);\n\t});\n\n\ttest('model caches states', () => {\n\t\tthisModel.forceTokenization(1);\n\t\tcheckAndClear(['1']);\n\n\t\tthisModel.forceTokenization(2);\n\t\tcheckAndClear(['2']);\n\n\t\tthisModel.forceTokenization(3);\n\t\tcheckAndClear(['3']);\n\n\t\tthisModel.forceTokenization(4);\n\t\tcheckAndClear(['4']);\n\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['5']);\n\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear([]);\n\t});\n\n\ttest('model invalidates states for one line insert', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', '2', '3', '4', '5']);\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '-')]);\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['-']);\n\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear([]);\n\t});\n\n\ttest('model invalidates states for many lines insert', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', '2', '3', '4', '5']);\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '0\\n-\\n+')]);\n\t\tassert.strictEqual(thisModel.getLineCount(), 7);\n\t\tthisModel.forceTokenization(7);\n\t\tcheckAndClear(['0', '-', '+']);\n\n\t\tthisModel.forceTokenization(7);\n\t\tcheckAndClear([]);\n\t});\n\n\ttest('model invalidates states for one new line', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', '2', '3', '4', '5']);\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 2), '\\n')]);\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(2, 1), 'a')]);\n\t\tthisModel.forceTokenization(6);\n\t\tcheckAndClear(['1', 'a']);\n\t});\n\n\ttest('model invalidates states for one line delete', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', '2', '3', '4', '5']);\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 2), '-')]);\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1']);\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['-']);\n\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear([]);\n\t});\n\n\ttest('model invalidates states for many lines delete', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', '2', '3', '4', '5']);\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 3, 1))]);\n\t\tthisModel.forceTokenization(3);\n\t\tcheckAndClear(['3']);\n\n\t\tthisModel.forceTokenization(3);\n\t\tcheckAndClear([]);\n\t});\n});\n\nsuite('Editor Model - Model Modes 2', () => {\n\n\tclass ModelState2 implements modes.IState {\n\t\tprevLineContent: string;\n\n\t\tconstructor(prevLineContent: string) {\n\t\t\tthis.prevLineContent = prevLineContent;\n\t\t}\n\n\t\tclone(): modes.IState {\n\t\t\treturn new ModelState2(this.prevLineContent);\n\t\t}\n\n\t\tequals(other: modes.IState): boolean {\n\t\t\treturn (other instanceof ModelState2) && other.prevLineContent === this.prevLineContent;\n\t\t}\n\t}\n\n\tlet calledFor: string[] = [];\n\n\tfunction checkAndClear(arr: string[]): void {\n\t\tassert.deepStrictEqual(calledFor, arr);\n\t\tcalledFor = [];\n\t}\n\n\tconst tokenizationSupport: modes.ITokenizationSupport = {\n\t\tgetInitialState: () => new ModelState2(''),\n\t\ttokenize: undefined!,\n\t\ttokenize2: (line: string, hasEOL: boolean, state: modes.IState): TokenizationResult2 => {\n\t\t\tcalledFor.push(line);\n\t\t\t(<ModelState2>state).prevLineContent = line;\n\t\t\treturn new TokenizationResult2(new Uint32Array(0), state);\n\t\t}\n\t};\n\n\tlet thisModel: TextModel;\n\tlet languageRegistration: IDisposable;\n\n\tsetup(() => {\n\t\tconst TEXT =\n\t\t\t'Line1' + '\\r\\n' +\n\t\t\t'Line2' + '\\n' +\n\t\t\t'Line3' + '\\n' +\n\t\t\t'Line4' + '\\r\\n' +\n\t\t\t'Line5';\n\t\tconst LANGUAGE_ID = 'modelModeTest2';\n\t\tlanguageRegistration = modes.TokenizationRegistry.register(LANGUAGE_ID, tokenizationSupport);\n\t\tthisModel = createTextModel(TEXT, undefined, new modes.LanguageIdentifier(LANGUAGE_ID, 0));\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t\tlanguageRegistration.dispose();\n\t});\n\n\ttest('getTokensForInvalidLines one text insert', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 6), '-')]);\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1-', 'Line2']);\n\t});\n\n\ttest('getTokensForInvalidLines two text insert', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([\n\t\t\tEditOperation.insert(new Position(1, 6), '-'),\n\t\t\tEditOperation.insert(new Position(3, 6), '-')\n\t\t]);\n\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1-', 'Line2', 'Line3-', 'Line4']);\n\t});\n\n\ttest('getTokensForInvalidLines one multi-line text insert, one small text insert', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 6), '\\nNew line\\nAnother new line')]);\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(5, 6), '-')]);\n\t\tthisModel.forceTokenization(7);\n\t\tcheckAndClear(['Line1', 'New line', 'Another new line', 'Line2', 'Line3-', 'Line4']);\n\t});\n\n\ttest('getTokensForInvalidLines one delete text', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 5))]);\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['1', 'Line2']);\n\t});\n\n\ttest('getTokensForInvalidLines one line delete text', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 2, 1))]);\n\t\tthisModel.forceTokenization(4);\n\t\tcheckAndClear(['Line2']);\n\t});\n\n\ttest('getTokensForInvalidLines multiple lines delete text', () => {\n\t\tthisModel.forceTokenization(5);\n\t\tcheckAndClear(['Line1', 'Line2', 'Line3', 'Line4', 'Line5']);\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 3, 3))]);\n\t\tthisModel.forceTokenization(3);\n\t\tcheckAndClear(['ne3', 'Line4']);\n\t});\n});\n"]}