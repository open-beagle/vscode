{"version":3,"file":"modelbuilder.benchmark.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/benchmark/modelbuilder.benchmark.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,IAAI,0BAA0B,GAAG,IAAI,uDAA0B,EAAE,CAAC;IAClE,IAAI,MAAM,GAAa,EAAE,CAAC;IAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC7B,MAAM,CAAC,IAAI,CAAC,CAAA,GAAA,mDAAyB,CAAA,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;KAC7D;IAED,IAAI,mBAAmB,GAAG,UAAU,EAAU,EAAE,QAA8B,EAAE,QAAgB;QAC/F,CAAA,GAAA,4BAAW,CAAA,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACtE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,OAAO,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;IAC7D,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC7B,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;QACxB,mBAAmB,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,CAAC;KAC3E","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextBufferBuilder } from 'vs/editor/common/model';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { doBenchmark } from 'vs/editor/test/common/model/benchmark/benchmarkUtils';\nimport { generateRandomChunkWithLF } from 'vs/editor/test/common/model/linesTextBuffer/textBufferAutoTestUtils';\n\nlet pieceTreeTextBufferBuilder = new PieceTreeTextBufferBuilder();\nlet chunks: string[] = [];\n\nfor (let i = 0; i < 100; i++) {\n\tchunks.push(generateRandomChunkWithLF(16 * 1000, 64 * 1000));\n}\n\nlet modelBuildBenchmark = function (id: string, builders: ITextBufferBuilder[], chunkCnt: number) {\n\tdoBenchmark(id, builders, builder => {\n\t\tfor (let i = 0, len = Math.min(chunkCnt, chunks.length); i < len; i++) {\n\t\t\tbuilder.acceptChunk(chunks[i]);\n\t\t}\n\t\tbuilder.finish();\n\t});\n};\n\nconsole.log(`|model builder\\t|line buffer\\t|piece table\\t|`);\nconsole.log('|---|---|---|');\nfor (let i of [10, 100]) {\n\tmodelBuildBenchmark(`${i} random chunks`, [pieceTreeTextBufferBuilder], i);\n}\n"]}