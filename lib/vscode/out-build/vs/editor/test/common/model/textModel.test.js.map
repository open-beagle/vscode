{"version":3,"file":"textModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/textModel.test.ts"],"names":[],"mappings":"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Q,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,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E,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE,GAAG,EAAE;YAE5D,IAAI,CAAC,GAAG,CAAA,GAAA,iCAAe,CAAA,CAAC,QAAQ,CAAC,CAAC;YAElC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAA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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { UTF8_BOM_CHARACTER } from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { TextModel, createTextBuffer } from 'vs/editor/common/model/textModel';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\nfunction testGuessIndentation(defaultInsertSpaces: boolean, defaultTabSize: number, expectedInsertSpaces: boolean, expectedTabSize: number, text: string[], msg?: string): void {\n\tlet m = createTextModel(\n\t\ttext.join('\\n'),\n\t\t{\n\t\t\ttabSize: defaultTabSize,\n\t\t\tinsertSpaces: defaultInsertSpaces,\n\t\t\tdetectIndentation: true\n\t\t}\n\t);\n\tlet r = m.getOptions();\n\tm.dispose();\n\n\tassert.strictEqual(r.insertSpaces, expectedInsertSpaces, msg);\n\tassert.strictEqual(r.tabSize, expectedTabSize, msg);\n}\n\nfunction assertGuess(expectedInsertSpaces: boolean | undefined, expectedTabSize: number | undefined | [number], text: string[], msg?: string): void {\n\tif (typeof expectedInsertSpaces === 'undefined') {\n\t\t// cannot guess insertSpaces\n\t\tif (typeof expectedTabSize === 'undefined') {\n\t\t\t// cannot guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, true, 13370, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, false, 13371, text, msg);\n\t\t} else if (typeof expectedTabSize === 'number') {\n\t\t\t// can guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, true, expectedTabSize, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, false, expectedTabSize, text, msg);\n\t\t} else {\n\t\t\t// can only guess tabSize when insertSpaces is true\n\t\t\ttestGuessIndentation(true, 13370, true, expectedTabSize[0], text, msg);\n\t\t\ttestGuessIndentation(false, 13371, false, 13371, text, msg);\n\t\t}\n\t} else {\n\t\t// can guess insertSpaces\n\t\tif (typeof expectedTabSize === 'undefined') {\n\t\t\t// cannot guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, 13370, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, 13371, text, msg);\n\t\t} else if (typeof expectedTabSize === 'number') {\n\t\t\t// can guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, expectedTabSize, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, expectedTabSize, text, msg);\n\t\t} else {\n\t\t\t// can only guess tabSize when insertSpaces is true\n\t\t\tif (expectedInsertSpaces === true) {\n\t\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, expectedTabSize[0], text, msg);\n\t\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, expectedTabSize[0], text, msg);\n\t\t\t} else {\n\t\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, 13370, text, msg);\n\t\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, 13371, text, msg);\n\t\t\t}\n\t\t}\n\t}\n}\n\nsuite('TextModelData.fromString', () => {\n\n\tinterface ITextBufferData {\n\t\tEOL: string;\n\t\tlines: string[];\n\t\tcontainsRTL: boolean;\n\t\tisBasicASCII: boolean;\n\t}\n\n\tfunction testTextModelDataFromString(text: string, expected: ITextBufferData): void {\n\t\tconst textBuffer = createTextBuffer(text, TextModel.DEFAULT_CREATION_OPTIONS.defaultEOL).textBuffer;\n\t\tlet actual: ITextBufferData = {\n\t\t\tEOL: textBuffer.getEOL(),\n\t\t\tlines: textBuffer.getLinesContent(),\n\t\t\tcontainsRTL: textBuffer.mightContainRTL(),\n\t\t\tisBasicASCII: !textBuffer.mightContainNonBasicASCII()\n\t\t};\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\ttest('one line text', () => {\n\t\ttestTextModelDataFromString('Hello world!',\n\t\t\t{\n\t\t\t\tEOL: '\\n',\n\t\t\t\tlines: [\n\t\t\t\t\t'Hello world!'\n\t\t\t\t],\n\t\t\t\tcontainsRTL: false,\n\t\t\t\tisBasicASCII: true\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('multiline text', () => {\n\t\ttestTextModelDataFromString('Hello,\\r\\ndear friend\\nHow\\rare\\r\\nyou?',\n\t\t\t{\n\t\t\t\tEOL: '\\r\\n',\n\t\t\t\tlines: [\n\t\t\t\t\t'Hello,',\n\t\t\t\t\t'dear friend',\n\t\t\t\t\t'How',\n\t\t\t\t\t'are',\n\t\t\t\t\t'you?'\n\t\t\t\t],\n\t\t\t\tcontainsRTL: false,\n\t\t\t\tisBasicASCII: true\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Non Basic ASCII 1', () => {\n\t\ttestTextModelDataFromString('Hello,\\nZürich',\n\t\t\t{\n\t\t\t\tEOL: '\\n',\n\t\t\t\tlines: [\n\t\t\t\t\t'Hello,',\n\t\t\t\t\t'Zürich'\n\t\t\t\t],\n\t\t\t\tcontainsRTL: false,\n\t\t\t\tisBasicASCII: false\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('containsRTL 1', () => {\n\t\ttestTextModelDataFromString('Hello,\\nזוהי עובדה מבוססת שדעתו',\n\t\t\t{\n\t\t\t\tEOL: '\\n',\n\t\t\t\tlines: [\n\t\t\t\t\t'Hello,',\n\t\t\t\t\t'זוהי עובדה מבוססת שדעתו'\n\t\t\t\t],\n\t\t\t\tcontainsRTL: true,\n\t\t\t\tisBasicASCII: false\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('containsRTL 2', () => {\n\t\ttestTextModelDataFromString('Hello,\\nهناك حقيقة مثبتة منذ زمن طويل',\n\t\t\t{\n\t\t\t\tEOL: '\\n',\n\t\t\t\tlines: [\n\t\t\t\t\t'Hello,',\n\t\t\t\t\t'هناك حقيقة مثبتة منذ زمن طويل'\n\t\t\t\t],\n\t\t\t\tcontainsRTL: true,\n\t\t\t\tisBasicASCII: false\n\t\t\t}\n\t\t);\n\t});\n\n});\n\nsuite('Editor Model - TextModel', () => {\n\n\ttest('getValueLengthInRange', () => {\n\n\t\tlet m = createTextModel('My First Line\\r\\nMy Second Line\\r\\nMy Third Line');\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\r\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 1)), 'y First Line\\r\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 2)), 'y First Line\\r\\nM'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 1000)), 'y First Line\\r\\nMy Second Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 3, 1)), 'y First Line\\r\\nMy Second Line\\r\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 3, 1000)), 'y First Line\\r\\nMy Second Line\\r\\nMy Third Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1000, 1000)), 'My First Line\\r\\nMy Second Line\\r\\nMy Third Line'.length);\n\n\t\tm = createTextModel('My First Line\\nMy Second Line\\nMy Third Line');\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 1)), 'y First Line\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 2)), 'y First Line\\nM'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 2, 1000)), 'y First Line\\nMy Second Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 3, 1)), 'y First Line\\nMy Second Line\\n'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 2, 3, 1000)), 'y First Line\\nMy Second Line\\nMy Third Line'.length);\n\t\tassert.strictEqual(m.getValueLengthInRange(new Range(1, 1, 1000, 1000)), 'My First Line\\nMy Second Line\\nMy Third Line'.length);\n\t});\n\n\ttest('guess indentation 1', () => {\n\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], 'no clues');\n\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], 'no spaces, 1xTAB');\n\n\t\tassertGuess(true, 2, [\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], '1x2');\n\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx'\n\t\t], '7xTAB');\n\n\t\tassertGuess(undefined, [2], [\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '4x2, 4xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x'\n\t\t], '4x1, 4xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '4x2, 5xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '1x2, 5xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'    x',\n\t\t], '1x4, 5xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'    x',\n\t\t], '1x2, 1x4, 5xTAB');\n\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x'\n\t\t], '7x1 - 1 space is never guessed as an indentation');\n\t\tassertGuess(true, undefined, [\n\t\t\t'x',\n\t\t\t'          x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x'\n\t\t], '1x10, 6x1');\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'',\n\t\t\t'  ',\n\t\t\t'    ',\n\t\t\t'      ',\n\t\t\t'        ',\n\t\t\t'          ',\n\t\t\t'            ',\n\t\t\t'              ',\n\t\t], 'whitespace lines don\\'t count');\n\t\tassertGuess(true, 3, [\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t], '6x3, 3x4');\n\t\tassertGuess(true, 5, [\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t], '6x5, 3x4');\n\t\tassertGuess(true, 7, [\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'     x',\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'    x',\n\t\t], '6x7, 1x5, 2x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t], '8x2');\n\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t], '8x2');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t], '4x2, 4x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t], '6x2, 3x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '4x2, 4x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '2x2, 4x4');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '8x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t], '2x2, 4x4, 2x6');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t\t'      x',\n\t\t\t'        x',\n\t\t], '1x2, 2x4, 2x6, 1x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t], '6x4, 2x5, 2x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t], '3x4, 1x5, 2x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t], '6x4, 2x5, 4x8');\n\t\tassertGuess(true, 3, [\n\t\t\t'x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '5x1, 2x0, 1x3, 2x4');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\t x',\n\t\t\t' \\t x',\n\t\t\t'\\tx'\n\t\t], 'mixed whitespace 1');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\t    x'\n\t\t], 'mixed whitespace 2');\n\t});\n\n\ttest('issue #44991: Wrong indentation size auto-detection', () => {\n\t\tassertGuess(true, 4, [\n\t\t\t'a = 10             # 0 space indent',\n\t\t\t'b = 5              # 0 space indent',\n\t\t\t'if a > 10:         # 0 space indent',\n\t\t\t'    a += 1         # 4 space indent      delta 4 spaces',\n\t\t\t'    if b > 5:      # 4 space indent',\n\t\t\t'        b += 1     # 8 space indent      delta 4 spaces',\n\t\t\t'        b += 1     # 8 space indent',\n\t\t\t'        b += 1     # 8 space indent',\n\t\t\t'# comment line 1   # 0 space indent      delta 8 spaces',\n\t\t\t'# comment line 2   # 0 space indent',\n\t\t\t'# comment line 3   # 0 space indent',\n\t\t\t'        b += 1     # 8 space indent      delta 8 spaces',\n\t\t\t'        b += 1     # 8 space indent',\n\t\t\t'        b += 1     # 8 space indent',\n\t\t]);\n\t});\n\n\ttest('issue #55818: Broken indentation detection', () => {\n\t\tassertGuess(true, 2, [\n\t\t\t'',\n\t\t\t'/* REQUIRE */',\n\t\t\t'',\n\t\t\t'const foo = require ( \\'foo\\' ),',\n\t\t\t'      bar = require ( \\'bar\\' );',\n\t\t\t'',\n\t\t\t'/* MY FN */',\n\t\t\t'',\n\t\t\t'function myFn () {',\n\t\t\t'',\n\t\t\t'  const asd = 1,',\n\t\t\t'        dsa = 2;',\n\t\t\t'',\n\t\t\t'  return bar ( foo ( asd ) );',\n\t\t\t'',\n\t\t\t'}',\n\t\t\t'',\n\t\t\t'/* EXPORT */',\n\t\t\t'',\n\t\t\t'module.exports = myFn;',\n\t\t\t'',\n\t\t]);\n\t});\n\n\ttest('issue #70832: Broken indentation detection', () => {\n\t\tassertGuess(false, undefined, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'\tx',\n\t\t\t'\t\tx',\n\t\t\t'    x',\n\t\t\t'\t\tx',\n\t\t\t'\tx',\n\t\t\t'\t\tx',\n\t\t\t'\tx',\n\t\t\t'\tx',\n\t\t\t'\tx',\n\t\t\t'\tx',\n\t\t\t'x',\n\t\t]);\n\t});\n\n\ttest('issue #62143: Broken indentation detection', () => {\n\t\t// works before the fix\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x'\n\t\t]);\n\n\t\t// works before the fix\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  - item2',\n\t\t\t'  - item3'\n\t\t]);\n\n\t\t// works before the fix\n\t\ttestGuessIndentation(true, 2, true, 2, [\n\t\t\t'x x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t]);\n\n\t\t// fails before the fix\n\t\t// empty space inline breaks the indentation guess\n\t\ttestGuessIndentation(true, 2, true, 2, [\n\t\t\t'x x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x'\n\t\t]);\n\n\t\ttestGuessIndentation(true, 2, true, 2, [\n\t\t\t'<!--test1.md -->',\n\t\t\t'- item1',\n\t\t\t'  - item2',\n\t\t\t'    - item3'\n\t\t]);\n\t});\n\n\ttest('issue #84217: Broken indentation detection', () => {\n\t\tassertGuess(true, 4, [\n\t\t\t'def main():',\n\t\t\t'    print(\\'hello\\')',\n\t\t]);\n\t\tassertGuess(true, 4, [\n\t\t\t'def main():',\n\t\t\t'    with open(\\'foo\\') as fp:',\n\t\t\t'        print(fp.read())',\n\t\t]);\n\t});\n\n\ttest('validatePosition', () => {\n\n\t\tlet m = createTextModel('line one\\nline two');\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0, 0)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0, 1)), new Position(1, 1));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 1)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 2)), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 30)), new Position(1, 9));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 0)), new Position(2, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 1)), new Position(2, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 2)), new Position(2, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 30)), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(3, 0)), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(3, 1)), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(3, 30)), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(30, 30)), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(-123.123, -0.5)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(Number.MIN_VALUE, Number.MIN_VALUE)), new Position(1, 1));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(Number.MAX_VALUE, Number.MAX_VALUE)), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(123.23, 47.5)), new Position(2, 9));\n\t});\n\n\ttest('validatePosition around high-low surrogate pairs 1', () => {\n\n\t\tlet m = createTextModel('a📚b');\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0, 0)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0, 1)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0, 7)), new Position(1, 1));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 1)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 2)), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 3)), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 4)), new Position(1, 4));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 5)), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 30)), new Position(1, 5));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 0)), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 1)), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 2)), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 30)), new Position(1, 5));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(-123.123, -0.5)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(Number.MIN_VALUE, Number.MIN_VALUE)), new Position(1, 1));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(Number.MAX_VALUE, Number.MAX_VALUE)), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(123.23, 47.5)), new Position(1, 5));\n\t});\n\n\ttest('validatePosition around high-low surrogate pairs 2', () => {\n\n\t\tlet m = createTextModel('a📚📚b');\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 1)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 2)), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 3)), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 4)), new Position(1, 4));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 5)), new Position(1, 4));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 6)), new Position(1, 6));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 7)), new Position(1, 7));\n\n\t});\n\n\ttest('validatePosition handle NaN.', () => {\n\n\t\tlet m = createTextModel('line one\\nline two');\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(NaN, 1)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, NaN)), new Position(1, 1));\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(NaN, NaN)), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, NaN)), new Position(2, 1));\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(NaN, 3)), new Position(1, 3));\n\t});\n\n\ttest('issue #71480: validatePosition handle floats', () => {\n\t\tlet m = createTextModel('line one\\nline two');\n\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(0.2, 1)), new Position(1, 1), 'a');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1.2, 1)), new Position(1, 1), 'b');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1.5, 2)), new Position(1, 2), 'c');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1.8, 3)), new Position(1, 3), 'd');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 0.3)), new Position(1, 1), 'e');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 0.8)), new Position(2, 1), 'f');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(1, 1.2)), new Position(1, 1), 'g');\n\t\tassert.deepStrictEqual(m.validatePosition(new Position(2, 1.5)), new Position(2, 1), 'h');\n\t});\n\n\ttest('issue #71480: validateRange handle floats', () => {\n\t\tlet m = createTextModel('line one\\nline two');\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(0.2, 1.5, 0.8, 2.5)), new Range(1, 1, 1, 1));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1.2, 1.7, 1.8, 2.2)), new Range(1, 1, 1, 2));\n\t});\n\n\ttest('validateRange around high-low surrogate pairs 1', () => {\n\n\t\tlet m = createTextModel('a📚b');\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(0, 0, 0, 1)), new Range(1, 1, 1, 1));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(0, 0, 0, 7)), new Range(1, 1, 1, 1));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 1)), new Range(1, 1, 1, 1));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 2)), new Range(1, 1, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 3)), new Range(1, 1, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 4)), new Range(1, 1, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 5)), new Range(1, 1, 1, 5));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 2)), new Range(1, 2, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 3)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 4)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 5)), new Range(1, 2, 1, 5));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 3)), new Range(1, 2, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 4)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 5)), new Range(1, 2, 1, 5));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 4)), new Range(1, 4, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 5)), new Range(1, 4, 1, 5));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 5, 1, 5)), new Range(1, 5, 1, 5));\n\t});\n\n\ttest('validateRange around high-low surrogate pairs 2', () => {\n\n\t\tlet m = createTextModel('a📚📚b');\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(0, 0, 0, 1)), new Range(1, 1, 1, 1));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(0, 0, 0, 7)), new Range(1, 1, 1, 1));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 1)), new Range(1, 1, 1, 1));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 2)), new Range(1, 1, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 3)), new Range(1, 1, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 4)), new Range(1, 1, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 5)), new Range(1, 1, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 6)), new Range(1, 1, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 1, 1, 7)), new Range(1, 1, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 2)), new Range(1, 2, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 3)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 4)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 5)), new Range(1, 2, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 6)), new Range(1, 2, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 2, 1, 7)), new Range(1, 2, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 3)), new Range(1, 2, 1, 2));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 4)), new Range(1, 2, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 5)), new Range(1, 2, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 6)), new Range(1, 2, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 3, 1, 7)), new Range(1, 2, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 4)), new Range(1, 4, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 5)), new Range(1, 4, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 6)), new Range(1, 4, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 4, 1, 7)), new Range(1, 4, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 5, 1, 5)), new Range(1, 4, 1, 4));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 5, 1, 6)), new Range(1, 4, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 5, 1, 7)), new Range(1, 4, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 6, 1, 6)), new Range(1, 6, 1, 6));\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 6, 1, 7)), new Range(1, 6, 1, 7));\n\n\t\tassert.deepStrictEqual(m.validateRange(new Range(1, 7, 1, 7)), new Range(1, 7, 1, 7));\n\t});\n\n\ttest('modifyPosition', () => {\n\n\t\tlet m = createTextModel('line one\\nline two');\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 1), 0), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(0, 0), 0), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(30, 1), 0), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 1), 17), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 1), 1), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 1), 3), new Position(1, 4));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), 10), new Position(2, 3));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 5), 13), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), 16), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 9), -17), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), -1), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 4), -3), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 3), -10), new Position(1, 2));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 9), -13), new Position(1, 5));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 9), -16), new Position(1, 2));\n\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), 17), new Position(2, 9));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), 100), new Position(2, 9));\n\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), -2), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(1, 2), -100), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 2), -100), new Position(1, 1));\n\t\tassert.deepStrictEqual(m.modifyPosition(new Position(2, 9), -18), new Position(1, 1));\n\t});\n\n\ttest('normalizeIndentation 1', () => {\n\t\tlet model = createTextModel('',\n\t\t\t{\n\t\t\t\tinsertSpaces: false\n\t\t\t}\n\t\t);\n\n\t\tassert.strictEqual(model.normalizeIndentation('\\t'), '\\t');\n\t\tassert.strictEqual(model.normalizeIndentation('    '), '\\t');\n\t\tassert.strictEqual(model.normalizeIndentation('   '), '   ');\n\t\tassert.strictEqual(model.normalizeIndentation('  '), '  ');\n\t\tassert.strictEqual(model.normalizeIndentation(' '), ' ');\n\t\tassert.strictEqual(model.normalizeIndentation(''), '');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t   '), '\\t\\t');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t  '), '\\t   ');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t '), '\\t  ');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t'), '\\t ');\n\n\t\tassert.strictEqual(model.normalizeIndentation('\\ta'), '\\ta');\n\t\tassert.strictEqual(model.normalizeIndentation('    a'), '\\ta');\n\t\tassert.strictEqual(model.normalizeIndentation('   a'), '   a');\n\t\tassert.strictEqual(model.normalizeIndentation('  a'), '  a');\n\t\tassert.strictEqual(model.normalizeIndentation(' a'), ' a');\n\t\tassert.strictEqual(model.normalizeIndentation('a'), 'a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t   a'), '\\t\\ta');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t  a'), '\\t   a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t a'), '\\t  a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\ta'), '\\t a');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('normalizeIndentation 2', () => {\n\t\tlet model = createTextModel('');\n\n\t\tassert.strictEqual(model.normalizeIndentation('\\ta'), '    a');\n\t\tassert.strictEqual(model.normalizeIndentation('    a'), '    a');\n\t\tassert.strictEqual(model.normalizeIndentation('   a'), '   a');\n\t\tassert.strictEqual(model.normalizeIndentation('  a'), '  a');\n\t\tassert.strictEqual(model.normalizeIndentation(' a'), ' a');\n\t\tassert.strictEqual(model.normalizeIndentation('a'), 'a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t   a'), '        a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t  a'), '       a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\t a'), '      a');\n\t\tassert.strictEqual(model.normalizeIndentation(' \\ta'), '     a');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('getLineFirstNonWhitespaceColumn', () => {\n\t\tlet model = createTextModel([\n\t\t\t'asd',\n\t\t\t' asd',\n\t\t\t'\\tasd',\n\t\t\t'  asd',\n\t\t\t'\\t\\tasd',\n\t\t\t' ',\n\t\t\t'  ',\n\t\t\t'\\t',\n\t\t\t'\\t\\t',\n\t\t\t'  \\tasd',\n\t\t\t'',\n\t\t\t''\n\t\t].join('\\n'));\n\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(1), 1, '1');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(2), 2, '2');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(3), 2, '3');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(4), 3, '4');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(5), 3, '5');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(6), 0, '6');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(7), 0, '7');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(8), 0, '8');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(9), 0, '9');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(10), 4, '10');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(11), 0, '11');\n\t\tassert.strictEqual(model.getLineFirstNonWhitespaceColumn(12), 0, '12');\n\t});\n\n\ttest('getLineLastNonWhitespaceColumn', () => {\n\t\tlet model = createTextModel([\n\t\t\t'asd',\n\t\t\t'asd ',\n\t\t\t'asd\\t',\n\t\t\t'asd  ',\n\t\t\t'asd\\t\\t',\n\t\t\t' ',\n\t\t\t'  ',\n\t\t\t'\\t',\n\t\t\t'\\t\\t',\n\t\t\t'asd  \\t',\n\t\t\t'',\n\t\t\t''\n\t\t].join('\\n'));\n\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(1), 4, '1');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(2), 4, '2');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(3), 4, '3');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(4), 4, '4');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(5), 4, '5');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(6), 0, '6');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(7), 0, '7');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(8), 0, '8');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(9), 0, '9');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(10), 4, '10');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(11), 0, '11');\n\t\tassert.strictEqual(model.getLineLastNonWhitespaceColumn(12), 0, '12');\n\t});\n\n\ttest('#50471. getValueInRange with invalid range', () => {\n\t\tlet m = createTextModel('My First Line\\r\\nMy Second Line\\r\\nMy Third Line');\n\t\tassert.strictEqual(m.getValueInRange(new Range(1, NaN, 1, 3)), 'My');\n\t\tassert.strictEqual(m.getValueInRange(new Range(NaN, NaN, NaN, NaN)), '');\n\t});\n});\n\nsuite('TextModel.mightContainRTL', () => {\n\n\ttest('nope', () => {\n\t\tlet model = createTextModel('hello world!');\n\t\tassert.strictEqual(model.mightContainRTL(), false);\n\t});\n\n\ttest('yes', () => {\n\t\tlet model = createTextModel('Hello,\\nזוהי עובדה מבוססת שדעתו');\n\t\tassert.strictEqual(model.mightContainRTL(), true);\n\t});\n\n\ttest('setValue resets 1', () => {\n\t\tlet model = createTextModel('hello world!');\n\t\tassert.strictEqual(model.mightContainRTL(), false);\n\t\tmodel.setValue('Hello,\\nזוהי עובדה מבוססת שדעתו');\n\t\tassert.strictEqual(model.mightContainRTL(), true);\n\t});\n\n\ttest('setValue resets 2', () => {\n\t\tlet model = createTextModel('Hello,\\nهناك حقيقة مثبتة منذ زمن طويل');\n\t\tassert.strictEqual(model.mightContainRTL(), true);\n\t\tmodel.setValue('hello world!');\n\t\tassert.strictEqual(model.mightContainRTL(), false);\n\t});\n\n});\n\nsuite('TextModel.createSnapshot', () => {\n\n\ttest('empty file', () => {\n\t\tlet model = createTextModel('');\n\t\tlet snapshot = model.createSnapshot();\n\t\tassert.strictEqual(snapshot.read(), null);\n\t\tmodel.dispose();\n\t});\n\n\ttest('file with BOM', () => {\n\t\tlet model = createTextModel(UTF8_BOM_CHARACTER + 'Hello');\n\t\tassert.strictEqual(model.getLineContent(1), 'Hello');\n\t\tlet snapshot = model.createSnapshot(true);\n\t\tassert.strictEqual(snapshot.read(), UTF8_BOM_CHARACTER + 'Hello');\n\t\tassert.strictEqual(snapshot.read(), null);\n\t\tmodel.dispose();\n\t});\n\n\ttest('regular file', () => {\n\t\tlet model = createTextModel('My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n\\n1');\n\t\tlet snapshot = model.createSnapshot();\n\t\tassert.strictEqual(snapshot.read(), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n\\n1');\n\t\tassert.strictEqual(snapshot.read(), null);\n\t\tmodel.dispose();\n\t});\n\n\ttest('large file', () => {\n\t\tlet lines: string[] = [];\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\tlines[i] = 'Just some text that is a bit long such that it can consume some memory';\n\t\t}\n\t\tconst text = lines.join('\\n');\n\n\t\tlet model = createTextModel(text);\n\t\tlet snapshot = model.createSnapshot();\n\t\tlet actual = '';\n\n\t\t// 70999 length => at most 2 read calls are necessary\n\t\tlet tmp1 = snapshot.read();\n\t\tassert.ok(tmp1);\n\t\tactual += tmp1;\n\n\t\tlet tmp2 = snapshot.read();\n\t\tif (tmp2 === null) {\n\t\t\t// all good\n\t\t} else {\n\t\t\tactual += tmp2;\n\t\t\tassert.strictEqual(snapshot.read(), null);\n\t\t}\n\n\t\tassert.strictEqual(actual, text);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #119632: invalid range', () => {\n\t\tconst model = createTextModel('hello world!');\n\t\tconst actual = model._validateRangeRelaxedNoAllocations(new Range(<any>undefined, 0, <any>undefined, 1));\n\t\tassert.deepStrictEqual(actual, new Range(1, 1, 1, 1));\n\t\tmodel.dispose();\n\t});\n\n});\n"]}