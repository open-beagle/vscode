{"version":3,"file":"modelEditOperation.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/model/modelEditOperation.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\nsuite('Editor Model - Model Edit Operation', () => {\n\tconst LINE1 = 'My First Line';\n\tconst LINE2 = '\\t\\tMy Second Line';\n\tconst LINE3 = '    Third Line';\n\tconst LINE4 = '';\n\tconst LINE5 = '1';\n\n\tlet model: TextModel;\n\n\tsetup(() => {\n\t\tconst text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tmodel = createTextModel(text);\n\t});\n\n\tteardown(() => {\n\t\tmodel.dispose();\n\t});\n\n\tfunction createSingleEditOp(text: string, positionLineNumber: number, positionColumn: number, selectionLineNumber: number = positionLineNumber, selectionColumn: number = positionColumn): IIdentifiedSingleEditOperation {\n\t\tlet range = new Range(\n\t\t\tselectionLineNumber,\n\t\t\tselectionColumn,\n\t\t\tpositionLineNumber,\n\t\t\tpositionColumn\n\t\t);\n\n\t\treturn {\n\t\t\tidentifier: null,\n\t\t\trange: range,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: false\n\t\t};\n\t}\n\n\tfunction assertSingleEditOp(singleEditOp: IIdentifiedSingleEditOperation, editedLines: string[]) {\n\t\tlet editOp = [singleEditOp];\n\n\t\tlet inverseEditOp = model.applyEdits(editOp, true);\n\n\t\tassert.strictEqual(model.getLineCount(), editedLines.length);\n\t\tfor (let i = 0; i < editedLines.length; i++) {\n\t\t\tassert.strictEqual(model.getLineContent(i + 1), editedLines[i]);\n\t\t}\n\n\t\tlet originalOp = model.applyEdits(inverseEditOp, true);\n\n\t\tassert.strictEqual(model.getLineCount(), 5);\n\t\tassert.strictEqual(model.getLineContent(1), LINE1);\n\t\tassert.strictEqual(model.getLineContent(2), LINE2);\n\t\tassert.strictEqual(model.getLineContent(3), LINE3);\n\t\tassert.strictEqual(model.getLineContent(4), LINE4);\n\t\tassert.strictEqual(model.getLineContent(5), LINE5);\n\n\t\tconst simplifyEdit = (edit: IIdentifiedSingleEditOperation) => {\n\t\t\treturn {\n\t\t\t\tidentifier: edit.identifier,\n\t\t\t\trange: edit.range,\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers || false,\n\t\t\t\tisAutoWhitespaceEdit: edit.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t};\n\t\tassert.deepStrictEqual(originalOp.map(simplifyEdit), editOp.map(simplifyEdit));\n\t}\n\n\ttest('Insert inline', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('a', 1, 1),\n\t\t\t[\n\t\t\t\t'aMy First Line',\n\t\t\t\tLINE2,\n\t\t\t\tLINE3,\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/inline 1', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp(' incredibly awesome', 1, 3),\n\t\t\t[\n\t\t\t\t'My incredibly awesome First Line',\n\t\t\t\tLINE2,\n\t\t\t\tLINE3,\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/inline 2', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp(' with text at the end.', 1, 14),\n\t\t\t[\n\t\t\t\t'My First Line with text at the end.',\n\t\t\t\tLINE2,\n\t\t\t\tLINE3,\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/inline 3', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('My new First Line.', 1, 1, 1, 14),\n\t\t\t[\n\t\t\t\t'My new First Line.',\n\t\t\t\tLINE2,\n\t\t\t\tLINE3,\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/multi line 1', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('My new First Line.', 1, 1, 3, 15),\n\t\t\t[\n\t\t\t\t'My new First Line.',\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/multi line 2', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('My new First Line.', 1, 2, 3, 15),\n\t\t\t[\n\t\t\t\t'MMy new First Line.',\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace inline/multi line 3', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('My new First Line.', 1, 2, 3, 2),\n\t\t\t[\n\t\t\t\t'MMy new First Line.   Third Line',\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Replace muli line/multi line', () => {\n\t\tassertSingleEditOp(\n\t\t\tcreateSingleEditOp('1\\n2\\n3\\n4\\n', 1, 1),\n\t\t\t[\n\t\t\t\t'1',\n\t\t\t\t'2',\n\t\t\t\t'3',\n\t\t\t\t'4',\n\t\t\t\tLINE1,\n\t\t\t\tLINE2,\n\t\t\t\tLINE3,\n\t\t\t\tLINE4,\n\t\t\t\tLINE5\n\t\t\t]\n\t\t);\n\t});\n});\n"]}