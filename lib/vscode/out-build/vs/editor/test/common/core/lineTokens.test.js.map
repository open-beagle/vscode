{"version":3,"file":"lineTokens.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/core/lineTokens.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;QAOxB,SAAS,gBAAgB,CAAC,IAAY,EAAE,MAAoB;YAC3D,IAAI,SAAS,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;YAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClD,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7E,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACzB,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,8BAAoC,CACxD,KAAK,CAAC,CAAC;aACR;YAED,OAAO,IAAI,uBAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACxC,CAAC;QAED,SAAS,oBAAoB;YAC5B,OAAO,gBAAgB,CACtB,mCAAmC,EACnC;gBACC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;gBAChC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;gBAChC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;gBACjC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;gBACjC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;gBACjC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;gBACjC,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,MAAM;aACzC,CACD,CAAC;QACH,CAAC;QAED,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;YACnB,MAAM,UAAU,GAAG,oBAAoB,EAAE,CAAC;YAE1C,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,mCAAmC,CAAC,CAAC;YACrF,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YAE7C,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;YACtB,MAAM,UAAU,GAAG,oBAAoB,EAAE,CAAC;YAE1C,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,MAAM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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IViewLineTokens, LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { MetadataConsts } from 'vs/editor/common/modes';\n\nsuite('LineTokens', () => {\n\n\tinterface ILineToken {\n\t\tstartIndex: number;\n\t\tforeground: number;\n\t}\n\n\tfunction createLineTokens(text: string, tokens: ILineToken[]): LineTokens {\n\t\tlet binTokens = new Uint32Array(tokens.length << 1);\n\n\t\tfor (let i = 0, len = tokens.length; i < len; i++) {\n\t\t\tbinTokens[(i << 1)] = (i + 1 < len ? tokens[i + 1].startIndex : text.length);\n\t\t\tbinTokens[(i << 1) + 1] = (\n\t\t\t\ttokens[i].foreground << MetadataConsts.FOREGROUND_OFFSET\n\t\t\t) >>> 0;\n\t\t}\n\n\t\treturn new LineTokens(binTokens, text);\n\t}\n\n\tfunction createTestLineTokens(): LineTokens {\n\t\treturn createLineTokens(\n\t\t\t'Hello world, this is a lovely day',\n\t\t\t[\n\t\t\t\t{ startIndex: 0, foreground: 1 }, // Hello_\n\t\t\t\t{ startIndex: 6, foreground: 2 }, // world,_\n\t\t\t\t{ startIndex: 13, foreground: 3 }, // this_\n\t\t\t\t{ startIndex: 18, foreground: 4 }, // is_\n\t\t\t\t{ startIndex: 21, foreground: 5 }, // a_\n\t\t\t\t{ startIndex: 23, foreground: 6 }, // lovely_\n\t\t\t\t{ startIndex: 30, foreground: 7 }, // day\n\t\t\t]\n\t\t);\n\t}\n\n\ttest('basics', () => {\n\t\tconst lineTokens = createTestLineTokens();\n\n\t\tassert.strictEqual(lineTokens.getLineContent(), 'Hello world, this is a lovely day');\n\t\tassert.strictEqual(lineTokens.getLineContent().length, 33);\n\t\tassert.strictEqual(lineTokens.getCount(), 7);\n\n\t\tassert.strictEqual(lineTokens.getStartOffset(0), 0);\n\t\tassert.strictEqual(lineTokens.getEndOffset(0), 6);\n\t\tassert.strictEqual(lineTokens.getStartOffset(1), 6);\n\t\tassert.strictEqual(lineTokens.getEndOffset(1), 13);\n\t\tassert.strictEqual(lineTokens.getStartOffset(2), 13);\n\t\tassert.strictEqual(lineTokens.getEndOffset(2), 18);\n\t\tassert.strictEqual(lineTokens.getStartOffset(3), 18);\n\t\tassert.strictEqual(lineTokens.getEndOffset(3), 21);\n\t\tassert.strictEqual(lineTokens.getStartOffset(4), 21);\n\t\tassert.strictEqual(lineTokens.getEndOffset(4), 23);\n\t\tassert.strictEqual(lineTokens.getStartOffset(5), 23);\n\t\tassert.strictEqual(lineTokens.getEndOffset(5), 30);\n\t\tassert.strictEqual(lineTokens.getStartOffset(6), 30);\n\t\tassert.strictEqual(lineTokens.getEndOffset(6), 33);\n\t});\n\n\ttest('findToken', () => {\n\t\tconst lineTokens = createTestLineTokens();\n\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(0), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(1), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(2), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(3), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(4), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(5), 0);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(6), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(7), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(8), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(9), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(10), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(11), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(12), 1);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(13), 2);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(14), 2);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(15), 2);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(16), 2);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(17), 2);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(18), 3);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(19), 3);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(20), 3);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(21), 4);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(22), 4);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(23), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(24), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(25), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(26), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(27), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(28), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(29), 5);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(30), 6);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(31), 6);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(32), 6);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(33), 6);\n\t\tassert.strictEqual(lineTokens.findTokenIndexAtOffset(34), 6);\n\t});\n\n\tinterface ITestViewLineToken {\n\t\tendIndex: number;\n\t\tforeground: number;\n\t}\n\n\tfunction assertViewLineTokens(_actual: IViewLineTokens, expected: ITestViewLineToken[]): void {\n\t\tlet actual: ITestViewLineToken[] = [];\n\t\tfor (let i = 0, len = _actual.getCount(); i < len; i++) {\n\t\t\tactual[i] = {\n\t\t\t\tendIndex: _actual.getEndOffset(i),\n\t\t\t\tforeground: _actual.getForeground(i)\n\t\t\t};\n\t\t}\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\ttest('inflate', () => {\n\t\tconst lineTokens = createTestLineTokens();\n\t\tassertViewLineTokens(lineTokens.inflate(), [\n\t\t\t{ endIndex: 6, foreground: 1 },\n\t\t\t{ endIndex: 13, foreground: 2 },\n\t\t\t{ endIndex: 18, foreground: 3 },\n\t\t\t{ endIndex: 21, foreground: 4 },\n\t\t\t{ endIndex: 23, foreground: 5 },\n\t\t\t{ endIndex: 30, foreground: 6 },\n\t\t\t{ endIndex: 33, foreground: 7 },\n\t\t]);\n\t});\n\n\ttest('sliceAndInflate', () => {\n\t\tconst lineTokens = createTestLineTokens();\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(0, 33, 0), [\n\t\t\t{ endIndex: 6, foreground: 1 },\n\t\t\t{ endIndex: 13, foreground: 2 },\n\t\t\t{ endIndex: 18, foreground: 3 },\n\t\t\t{ endIndex: 21, foreground: 4 },\n\t\t\t{ endIndex: 23, foreground: 5 },\n\t\t\t{ endIndex: 30, foreground: 6 },\n\t\t\t{ endIndex: 33, foreground: 7 },\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(0, 32, 0), [\n\t\t\t{ endIndex: 6, foreground: 1 },\n\t\t\t{ endIndex: 13, foreground: 2 },\n\t\t\t{ endIndex: 18, foreground: 3 },\n\t\t\t{ endIndex: 21, foreground: 4 },\n\t\t\t{ endIndex: 23, foreground: 5 },\n\t\t\t{ endIndex: 30, foreground: 6 },\n\t\t\t{ endIndex: 32, foreground: 7 },\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(0, 30, 0), [\n\t\t\t{ endIndex: 6, foreground: 1 },\n\t\t\t{ endIndex: 13, foreground: 2 },\n\t\t\t{ endIndex: 18, foreground: 3 },\n\t\t\t{ endIndex: 21, foreground: 4 },\n\t\t\t{ endIndex: 23, foreground: 5 },\n\t\t\t{ endIndex: 30, foreground: 6 }\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(0, 30, 1), [\n\t\t\t{ endIndex: 7, foreground: 1 },\n\t\t\t{ endIndex: 14, foreground: 2 },\n\t\t\t{ endIndex: 19, foreground: 3 },\n\t\t\t{ endIndex: 22, foreground: 4 },\n\t\t\t{ endIndex: 24, foreground: 5 },\n\t\t\t{ endIndex: 31, foreground: 6 }\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(6, 18, 0), [\n\t\t\t{ endIndex: 7, foreground: 2 },\n\t\t\t{ endIndex: 12, foreground: 3 }\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(7, 18, 0), [\n\t\t\t{ endIndex: 6, foreground: 2 },\n\t\t\t{ endIndex: 11, foreground: 3 }\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(6, 17, 0), [\n\t\t\t{ endIndex: 7, foreground: 2 },\n\t\t\t{ endIndex: 11, foreground: 3 }\n\t\t]);\n\n\t\tassertViewLineTokens(lineTokens.sliceAndInflate(6, 19, 0), [\n\t\t\t{ endIndex: 7, foreground: 2 },\n\t\t\t{ endIndex: 12, foreground: 3 },\n\t\t\t{ endIndex: 13, foreground: 4 },\n\t\t]);\n\t});\n});\n"]}