{"version":3,"file":"commonEditorConfig.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/config/commonEditorConfig.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { IEnvConfiguration } from 'vs/editor/common/config/commonEditorConfig';\nimport { IEditorHoverOptions, EditorOption, ConfigurationChangedEvent, IQuickSuggestionsOptions } from 'vs/editor/common/config/editorOptions';\nimport { EditorZoom } from 'vs/editor/common/config/editorZoom';\nimport { TestConfiguration } from 'vs/editor/test/common/mocks/testConfiguration';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\n\nsuite('Common Editor Config', () => {\n\ttest('Zoom Level', () => {\n\n\t\t//Zoom levels are defined to go between -5, 20 inclusive\n\t\tconst zoom = EditorZoom;\n\n\t\tzoom.setZoomLevel(0);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 0);\n\n\t\tzoom.setZoomLevel(-0);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 0);\n\n\t\tzoom.setZoomLevel(5);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 5);\n\n\t\tzoom.setZoomLevel(-1);\n\t\tassert.strictEqual(zoom.getZoomLevel(), -1);\n\n\t\tzoom.setZoomLevel(9);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 9);\n\n\t\tzoom.setZoomLevel(-9);\n\t\tassert.strictEqual(zoom.getZoomLevel(), -5);\n\n\t\tzoom.setZoomLevel(20);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 20);\n\n\t\tzoom.setZoomLevel(-10);\n\t\tassert.strictEqual(zoom.getZoomLevel(), -5);\n\n\t\tzoom.setZoomLevel(9.1);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 9.1);\n\n\t\tzoom.setZoomLevel(-9.1);\n\t\tassert.strictEqual(zoom.getZoomLevel(), -5);\n\n\t\tzoom.setZoomLevel(Infinity);\n\t\tassert.strictEqual(zoom.getZoomLevel(), 20);\n\n\t\tzoom.setZoomLevel(Number.NEGATIVE_INFINITY);\n\t\tassert.strictEqual(zoom.getZoomLevel(), -5);\n\t});\n\n\tclass TestWrappingConfiguration extends TestConfiguration {\n\t\tprotected override _getEnvConfiguration(): IEnvConfiguration {\n\t\t\treturn {\n\t\t\t\textraEditorClassName: '',\n\t\t\t\touterWidth: 1000,\n\t\t\t\touterHeight: 100,\n\t\t\t\temptySelectionClipboard: true,\n\t\t\t\tpixelRatio: 1,\n\t\t\t\tzoomLevel: 0,\n\t\t\t\taccessibilitySupport: AccessibilitySupport.Unknown\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction assertWrapping(config: TestConfiguration, isViewportWrapping: boolean, wrappingColumn: number): void {\n\t\tconst options = config.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tassert.strictEqual(wrappingInfo.isViewportWrapping, isViewportWrapping);\n\t\tassert.strictEqual(wrappingInfo.wrappingColumn, wrappingColumn);\n\t}\n\n\ttest('wordWrap default', () => {\n\t\tlet config = new TestWrappingConfiguration({});\n\t\tassertWrapping(config, false, -1);\n\t});\n\n\ttest('wordWrap compat false', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: <any>false\n\t\t});\n\t\tassertWrapping(config, false, -1);\n\t});\n\n\ttest('wordWrap compat true', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: <any>true\n\t\t});\n\t\tassertWrapping(config, true, 80);\n\t});\n\n\ttest('wordWrap on', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'on'\n\t\t});\n\t\tassertWrapping(config, true, 80);\n\t});\n\n\ttest('wordWrap on without minimap', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'on',\n\t\t\tminimap: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t});\n\t\tassertWrapping(config, true, 88);\n\t});\n\n\ttest('wordWrap on does not use wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'on',\n\t\t\twordWrapColumn: 10\n\t\t});\n\t\tassertWrapping(config, true, 80);\n\t});\n\n\ttest('wordWrap off', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'off'\n\t\t});\n\t\tassertWrapping(config, false, -1);\n\t});\n\n\ttest('wordWrap off does not use wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'off',\n\t\t\twordWrapColumn: 10\n\t\t});\n\t\tassertWrapping(config, false, -1);\n\t});\n\n\ttest('wordWrap wordWrapColumn uses default wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'wordWrapColumn'\n\t\t});\n\t\tassertWrapping(config, false, 80);\n\t});\n\n\ttest('wordWrap wordWrapColumn uses wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: 100\n\t\t});\n\t\tassertWrapping(config, false, 100);\n\t});\n\n\ttest('wordWrap wordWrapColumn validates wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'wordWrapColumn',\n\t\t\twordWrapColumn: -1\n\t\t});\n\t\tassertWrapping(config, false, 1);\n\t});\n\n\ttest('wordWrap bounded uses default wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'bounded'\n\t\t});\n\t\tassertWrapping(config, true, 80);\n\t});\n\n\ttest('wordWrap bounded uses wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'bounded',\n\t\t\twordWrapColumn: 40\n\t\t});\n\t\tassertWrapping(config, true, 40);\n\t});\n\n\ttest('wordWrap bounded validates wordWrapColumn', () => {\n\t\tlet config = new TestWrappingConfiguration({\n\t\t\twordWrap: 'bounded',\n\t\t\twordWrapColumn: -1\n\t\t});\n\t\tassertWrapping(config, true, 1);\n\t});\n\n\ttest('issue #53152: Cannot assign to read only property \\'enabled\\' of object', () => {\n\t\tlet hoverOptions: IEditorHoverOptions = {};\n\t\tObject.defineProperty(hoverOptions, 'enabled', {\n\t\t\twritable: false,\n\t\t\tvalue: true\n\t\t});\n\t\tlet config = new TestConfiguration({ hover: hoverOptions });\n\n\t\tassert.strictEqual(config.options.get(EditorOption.hover).enabled, true);\n\t\tconfig.updateOptions({ hover: { enabled: false } });\n\t\tassert.strictEqual(config.options.get(EditorOption.hover).enabled, false);\n\t});\n\n\ttest('does not emit event when nothing changes', () => {\n\t\tconst config = new TestConfiguration({ glyphMargin: true, roundedSelection: false });\n\t\tlet event: ConfigurationChangedEvent | null = null;\n\t\tconfig.onDidChange(e => event = e);\n\t\tassert.strictEqual(config.options.get(EditorOption.glyphMargin), true);\n\n\t\tconfig.updateOptions({ glyphMargin: true });\n\t\tconfig.updateOptions({ roundedSelection: false });\n\t\tassert.strictEqual(event, null);\n\t});\n\n\ttest('issue #94931: Unable to open source file', () => {\n\t\tconst config = new TestConfiguration({ quickSuggestions: null! });\n\t\tconst actual = <Readonly<Required<IQuickSuggestionsOptions>>>config.options.get(EditorOption.quickSuggestions);\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tother: true,\n\t\t\tcomments: false,\n\t\t\tstrings: false\n\t\t});\n\t});\n\n\ttest('issue #102920: Can\\'t snap or split view with JSON files', () => {\n\t\tconst config = new TestConfiguration({ quickSuggestions: null! });\n\t\tconfig.updateOptions({ quickSuggestions: { strings: true } });\n\t\tconst actual = <Readonly<Required<IQuickSuggestionsOptions>>>config.options.get(EditorOption.quickSuggestions);\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tother: true,\n\t\t\tcomments: false,\n\t\t\tstrings: true\n\t\t});\n\t});\n});\n"]}