{"version":3,"file":"tokenization.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/common/modes/supports/tokenization.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { FontStyle } from 'vs/editor/common/modes';\nimport { ColorMap, ExternalThemeTrieElement, ParsedTokenThemeRule, ThemeTrieElementRule, TokenTheme, parseTokenTheme, strcmp } from 'vs/editor/common/modes/supports/tokenization';\n\nsuite('Token theme matching', () => {\n\n\ttest('gives higher priority to deeper matches', () => {\n\t\tlet theme = TokenTheme.createFromRawTokenTheme([\n\t\t\t{ token: '', foreground: '100000', background: '200000' },\n\t\t\t{ token: 'punctuation.definition.string.begin.html', foreground: '300000' },\n\t\t\t{ token: 'punctuation.definition.string', foreground: '400000' },\n\t\t], []);\n\n\t\tlet colorMap = new ColorMap();\n\t\tcolorMap.getId('100000');\n\t\tconst _B = colorMap.getId('200000');\n\t\tcolorMap.getId('400000');\n\t\tconst _D = colorMap.getId('300000');\n\n\t\tlet actual = theme._match('punctuation.definition.string.begin.html');\n\n\t\tassert.deepStrictEqual(actual, new ThemeTrieElementRule(FontStyle.None, _D, _B));\n\t});\n\n\ttest('can match', () => {\n\t\tlet theme = TokenTheme.createFromRawTokenTheme([\n\t\t\t{ token: '', foreground: 'F8F8F2', background: '272822' },\n\t\t\t{ token: 'source', background: '100000' },\n\t\t\t{ token: 'something', background: '100000' },\n\t\t\t{ token: 'bar', background: '200000' },\n\t\t\t{ token: 'baz', background: '200000' },\n\t\t\t{ token: 'bar', fontStyle: 'bold' },\n\t\t\t{ token: 'constant', fontStyle: 'italic', foreground: '300000' },\n\t\t\t{ token: 'constant.numeric', foreground: '400000' },\n\t\t\t{ token: 'constant.numeric.hex', fontStyle: 'bold' },\n\t\t\t{ token: 'constant.numeric.oct', fontStyle: 'bold italic underline' },\n\t\t\t{ token: 'constant.numeric.dec', fontStyle: '', foreground: '500000' },\n\t\t\t{ token: 'storage.object.bar', fontStyle: '', foreground: '600000' },\n\t\t], []);\n\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('200000');\n\t\tconst _D = colorMap.getId('300000');\n\t\tconst _E = colorMap.getId('400000');\n\t\tconst _F = colorMap.getId('500000');\n\t\tconst _G = colorMap.getId('100000');\n\t\tconst _H = colorMap.getId('600000');\n\n\t\tfunction assertMatch(scopeName: string, expected: ThemeTrieElementRule): void {\n\t\t\tlet actual = theme._match(scopeName);\n\t\t\tassert.deepStrictEqual(actual, expected, 'when matching <<' + scopeName + '>>');\n\t\t}\n\n\t\tfunction assertSimpleMatch(scopeName: string, fontStyle: FontStyle, foreground: number, background: number): void {\n\t\t\tassertMatch(scopeName, new ThemeTrieElementRule(fontStyle, foreground, background));\n\t\t}\n\n\t\tfunction assertNoMatch(scopeName: string): void {\n\t\t\tassertMatch(scopeName, new ThemeTrieElementRule(FontStyle.None, _A, _B));\n\t\t}\n\n\t\t// matches defaults\n\t\tassertNoMatch('');\n\t\tassertNoMatch('bazz');\n\t\tassertNoMatch('asdfg');\n\n\t\t// matches source\n\t\tassertSimpleMatch('source', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('source.ts', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('source.tss', FontStyle.None, _A, _G);\n\n\t\t// matches something\n\t\tassertSimpleMatch('something', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('something.ts', FontStyle.None, _A, _G);\n\t\tassertSimpleMatch('something.tss', FontStyle.None, _A, _G);\n\n\t\t// matches baz\n\t\tassertSimpleMatch('baz', FontStyle.None, _A, _C);\n\t\tassertSimpleMatch('baz.ts', FontStyle.None, _A, _C);\n\t\tassertSimpleMatch('baz.tss', FontStyle.None, _A, _C);\n\n\t\t// matches constant\n\t\tassertSimpleMatch('constant', FontStyle.Italic, _D, _B);\n\t\tassertSimpleMatch('constant.string', FontStyle.Italic, _D, _B);\n\t\tassertSimpleMatch('constant.hex', FontStyle.Italic, _D, _B);\n\n\t\t// matches constant.numeric\n\t\tassertSimpleMatch('constant.numeric', FontStyle.Italic, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.baz', FontStyle.Italic, _E, _B);\n\n\t\t// matches constant.numeric.hex\n\t\tassertSimpleMatch('constant.numeric.hex', FontStyle.Bold, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.hex.baz', FontStyle.Bold, _E, _B);\n\n\t\t// matches constant.numeric.oct\n\t\tassertSimpleMatch('constant.numeric.oct', FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _E, _B);\n\t\tassertSimpleMatch('constant.numeric.oct.baz', FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _E, _B);\n\n\t\t// matches constant.numeric.dec\n\t\tassertSimpleMatch('constant.numeric.dec', FontStyle.None, _F, _B);\n\t\tassertSimpleMatch('constant.numeric.dec.baz', FontStyle.None, _F, _B);\n\n\t\t// matches storage.object.bar\n\t\tassertSimpleMatch('storage.object.bar', FontStyle.None, _H, _B);\n\t\tassertSimpleMatch('storage.object.bar.baz', FontStyle.None, _H, _B);\n\n\t\t// does not match storage.object.bar\n\t\tassertSimpleMatch('storage.object.bart', FontStyle.None, _A, _B);\n\t\tassertSimpleMatch('storage.object', FontStyle.None, _A, _B);\n\t\tassertSimpleMatch('storage', FontStyle.None, _A, _B);\n\n\t\tassertSimpleMatch('bar', FontStyle.Bold, _A, _C);\n\t});\n});\n\nsuite('Token theme parsing', () => {\n\n\ttest('can parse', () => {\n\n\t\tlet actual = parseTokenTheme([\n\t\t\t{ token: '', foreground: 'F8F8F2', background: '272822' },\n\t\t\t{ token: 'source', background: '100000' },\n\t\t\t{ token: 'something', background: '100000' },\n\t\t\t{ token: 'bar', background: '010000' },\n\t\t\t{ token: 'baz', background: '010000' },\n\t\t\t{ token: 'bar', fontStyle: 'bold' },\n\t\t\t{ token: 'constant', fontStyle: 'italic', foreground: 'ff0000' },\n\t\t\t{ token: 'constant.numeric', foreground: '00ff00' },\n\t\t\t{ token: 'constant.numeric.hex', fontStyle: 'bold' },\n\t\t\t{ token: 'constant.numeric.oct', fontStyle: 'bold italic underline' },\n\t\t\t{ token: 'constant.numeric.dec', fontStyle: '', foreground: '0000ff' },\n\t\t]);\n\n\t\tlet expected = [\n\t\t\tnew ParsedTokenThemeRule('', 0, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('source', 1, FontStyle.NotSet, null, '100000'),\n\t\t\tnew ParsedTokenThemeRule('something', 2, FontStyle.NotSet, null, '100000'),\n\t\t\tnew ParsedTokenThemeRule('bar', 3, FontStyle.NotSet, null, '010000'),\n\t\t\tnew ParsedTokenThemeRule('baz', 4, FontStyle.NotSet, null, '010000'),\n\t\t\tnew ParsedTokenThemeRule('bar', 5, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant', 6, FontStyle.Italic, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric', 7, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.hex', 8, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.oct', 9, FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.dec', 10, FontStyle.None, '0000ff', null),\n\t\t];\n\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n});\n\nsuite('Token theme resolving', () => {\n\n\ttest('strcmp works', () => {\n\t\tlet actual = ['bar', 'z', 'zu', 'a', 'ab', ''].sort(strcmp);\n\n\t\tlet expected = ['', 'a', 'ab', 'bar', 'z', 'zu'];\n\t\tassert.deepStrictEqual(actual, expected);\n\t});\n\n\ttest('always has defaults', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 1', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, null)\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 2', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.None, null, null)\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 3', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.Bold, null, null)\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 4', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'ff0000', null)\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('ff0000');\n\t\tconst _B = colorMap.getId('ffffff');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('respects incoming defaults 5', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, 'ff0000')\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('000000');\n\t\tconst _B = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B)));\n\t});\n\n\ttest('can merge incoming defaults', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, null, 'ff0000'),\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.Bold, null, null),\n\t\t], []);\n\t\tlet colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('00ff00');\n\t\tconst _B = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _A, _B)));\n\t});\n\n\ttest('defaults are inherited', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.NotSet, 'ff0000', null)\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _C, _B))\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('same rules get merged', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', 1, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('var', 0, FontStyle.NotSet, 'ff0000', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _C, _B))\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('rules are inherited 1', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.Bold, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('var.identifier', -1, FontStyle.NotSet, '00ff00', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('ff0000');\n\t\tconst _D = colorMap.getId('00ff00');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _C, _B), {\n\t\t\t\t'identifier': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _D, _B))\n\t\t\t})\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('rules are inherited 2', () => {\n\t\tconst actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('', -1, FontStyle.NotSet, 'F8F8F2', '272822'),\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.Bold, 'ff0000', null),\n\t\t\tnew ParsedTokenThemeRule('var.identifier', -1, FontStyle.NotSet, '00ff00', null),\n\t\t\tnew ParsedTokenThemeRule('constant', 4, FontStyle.Italic, '100000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric', 5, FontStyle.NotSet, '200000', null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.hex', 6, FontStyle.Bold, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.oct', 7, FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, null, null),\n\t\t\tnew ParsedTokenThemeRule('constant.numeric.dec', 8, FontStyle.None, '300000', null),\n\t\t], []);\n\t\tconst colorMap = new ColorMap();\n\t\tconst _A = colorMap.getId('F8F8F2');\n\t\tconst _B = colorMap.getId('272822');\n\t\tconst _C = colorMap.getId('100000');\n\t\tconst _D = colorMap.getId('200000');\n\t\tconst _E = colorMap.getId('300000');\n\t\tconst _F = colorMap.getId('ff0000');\n\t\tconst _G = colorMap.getId('00ff00');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t\tconst root = new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _A, _B), {\n\t\t\t'var': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _F, _B), {\n\t\t\t\t'identifier': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _G, _B))\n\t\t\t}),\n\t\t\t'constant': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Italic, _C, _B), {\n\t\t\t\t'numeric': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Italic, _D, _B), {\n\t\t\t\t\t'hex': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold, _D, _B)),\n\t\t\t\t\t'oct': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, _D, _B)),\n\t\t\t\t\t'dec': new ExternalThemeTrieElement(new ThemeTrieElementRule(FontStyle.None, _E, _B)),\n\t\t\t\t})\n\t\t\t})\n\t\t});\n\t\tassert.deepStrictEqual(actual.getThemeTrieElement(), root);\n\t});\n\n\ttest('custom colors are first in color map', () => {\n\t\tlet actual = TokenTheme.createFromParsedTokenTheme([\n\t\t\tnew ParsedTokenThemeRule('var', -1, FontStyle.NotSet, 'F8F8F2', null)\n\t\t], [\n\t\t\t'000000', 'FFFFFF', '0F0F0F'\n\t\t]);\n\t\tlet colorMap = new ColorMap();\n\t\tcolorMap.getId('000000');\n\t\tcolorMap.getId('FFFFFF');\n\t\tcolorMap.getId('0F0F0F');\n\t\tcolorMap.getId('F8F8F2');\n\t\tassert.deepStrictEqual(actual.getColorMap(), colorMap.getColorMap());\n\t});\n});\n"]}