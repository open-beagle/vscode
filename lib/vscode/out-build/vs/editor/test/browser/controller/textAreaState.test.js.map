{"version":3,"file":"textAreaState.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/browser/controller/textAreaState.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ITextAreaWrapper, PagedScreenReaderStrategy, TextAreaState } from 'vs/editor/browser/controller/textAreaState';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\nexport class MockTextAreaWrapper extends Disposable implements ITextAreaWrapper {\n\n\tpublic _value: string;\n\tpublic _selectionStart: number;\n\tpublic _selectionEnd: number;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._value = '';\n\t\tthis._selectionStart = 0;\n\t\tthis._selectionEnd = 0;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this._value;\n\t}\n\n\tpublic setValue(reason: string, value: string): void {\n\t\tthis._value = value;\n\t\tthis._selectionStart = this._value.length;\n\t\tthis._selectionEnd = this._value.length;\n\t}\n\n\tpublic getSelectionStart(): number {\n\t\treturn this._selectionStart;\n\t}\n\n\tpublic getSelectionEnd(): number {\n\t\treturn this._selectionEnd;\n\t}\n\n\tpublic setSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void {\n\t\tif (selectionStart < 0) {\n\t\t\tselectionStart = 0;\n\t\t}\n\t\tif (selectionStart > this._value.length) {\n\t\t\tselectionStart = this._value.length;\n\t\t}\n\t\tif (selectionEnd < 0) {\n\t\t\tselectionEnd = 0;\n\t\t}\n\t\tif (selectionEnd > this._value.length) {\n\t\t\tselectionEnd = this._value.length;\n\t\t}\n\t\tthis._selectionStart = selectionStart;\n\t\tthis._selectionEnd = selectionEnd;\n\t}\n}\n\nfunction equalsTextAreaState(a: TextAreaState, b: TextAreaState): boolean {\n\treturn (\n\t\ta.value === b.value\n\t\t&& a.selectionStart === b.selectionStart\n\t\t&& a.selectionEnd === b.selectionEnd\n\t\t&& Position.equals(a.selectionStartPosition, b.selectionStartPosition)\n\t\t&& Position.equals(a.selectionEndPosition, b.selectionEndPosition)\n\t);\n}\n\nsuite('TextAreaState', () => {\n\n\tfunction assertTextAreaState(actual: TextAreaState, value: string, selectionStart: number, selectionEnd: number): void {\n\t\tlet desired = new TextAreaState(value, selectionStart, selectionEnd, null, null);\n\t\tassert.ok(equalsTextAreaState(desired, actual), desired.toString() + ' == ' + actual.toString());\n\t}\n\n\ttest('fromTextArea', () => {\n\t\tlet textArea = new MockTextAreaWrapper();\n\t\ttextArea._value = 'Hello world!';\n\t\ttextArea._selectionStart = 1;\n\t\ttextArea._selectionEnd = 12;\n\t\tlet actual = TextAreaState.readFromTextArea(textArea);\n\n\t\tassertTextAreaState(actual, 'Hello world!', 1, 12);\n\t\tassert.strictEqual(actual.value, 'Hello world!');\n\t\tassert.strictEqual(actual.selectionStart, 1);\n\n\t\tactual = actual.collapseSelection();\n\t\tassertTextAreaState(actual, 'Hello world!', 12, 12);\n\n\t\ttextArea.dispose();\n\t});\n\n\ttest('applyToTextArea', () => {\n\t\tlet textArea = new MockTextAreaWrapper();\n\t\ttextArea._value = 'Hello world!';\n\t\ttextArea._selectionStart = 1;\n\t\ttextArea._selectionEnd = 12;\n\n\t\tlet state = new TextAreaState('Hi world!', 2, 2, null, null);\n\t\tstate.writeToTextArea('test', textArea, false);\n\n\t\tassert.strictEqual(textArea._value, 'Hi world!');\n\t\tassert.strictEqual(textArea._selectionStart, 9);\n\t\tassert.strictEqual(textArea._selectionEnd, 9);\n\n\t\tstate = new TextAreaState('Hi world!', 3, 3, null, null);\n\t\tstate.writeToTextArea('test', textArea, false);\n\n\t\tassert.strictEqual(textArea._value, 'Hi world!');\n\t\tassert.strictEqual(textArea._selectionStart, 9);\n\t\tassert.strictEqual(textArea._selectionEnd, 9);\n\n\t\tstate = new TextAreaState('Hi world!', 0, 2, null, null);\n\t\tstate.writeToTextArea('test', textArea, true);\n\n\t\tassert.strictEqual(textArea._value, 'Hi world!');\n\t\tassert.strictEqual(textArea._selectionStart, 0);\n\t\tassert.strictEqual(textArea._selectionEnd, 2);\n\n\t\ttextArea.dispose();\n\t});\n\n\tfunction testDeduceInput(prevState: TextAreaState | null, value: string, selectionStart: number, selectionEnd: number, couldBeEmojiInput: boolean, expected: string, expectedCharReplaceCnt: number): void {\n\t\tprevState = prevState || TextAreaState.EMPTY;\n\n\t\tlet textArea = new MockTextAreaWrapper();\n\t\ttextArea._value = value;\n\t\ttextArea._selectionStart = selectionStart;\n\t\ttextArea._selectionEnd = selectionEnd;\n\n\t\tlet newState = TextAreaState.readFromTextArea(textArea);\n\t\tlet actual = TextAreaState.deduceInput(prevState, newState, couldBeEmojiInput);\n\n\t\tassert.deepStrictEqual(actual, {\n\t\t\ttext: expected,\n\t\t\treplacePrevCharCnt: expectedCharReplaceCnt,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0,\n\t\t});\n\n\t\ttextArea.dispose();\n\t}\n\n\ttest('deduceInput - Japanese typing sennsei and accepting', () => {\n\t\t// manual test:\n\t\t// - choose keyboard layout: Japanese -> Hiragama\n\t\t// - type sennsei\n\t\t// - accept with Enter\n\t\t// - expected: せんせい\n\n\t\t// s\n\t\t// PREVIOUS STATE: [ <>, selectionStart: 0, selectionEnd: 0, selectionToken: 0]\n\t\t// CURRENT STATE: [ <ｓ>, selectionStart: 0, selectionEnd: 1, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tTextAreaState.EMPTY,\n\t\t\t'ｓ',\n\t\t\t0, 1, true,\n\t\t\t'ｓ', 0\n\t\t);\n\n\t\t// e\n\t\t// PREVIOUS STATE: [ <ｓ>, selectionStart: 0, selectionEnd: 1, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せ>, selectionStart: 0, selectionEnd: 1, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('ｓ', 0, 1, null, null),\n\t\t\t'せ',\n\t\t\t0, 1, true,\n\t\t\t'せ', 1\n\t\t);\n\n\t\t// n\n\t\t// PREVIOUS STATE: [ <せ>, selectionStart: 0, selectionEnd: 1, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せｎ>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せ', 0, 1, null, null),\n\t\t\t'せｎ',\n\t\t\t0, 2, true,\n\t\t\t'せｎ', 1\n\t\t);\n\n\t\t// n\n\t\t// PREVIOUS STATE: [ <せｎ>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せん>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せｎ', 0, 2, null, null),\n\t\t\t'せん',\n\t\t\t0, 2, true,\n\t\t\t'せん', 2\n\t\t);\n\n\t\t// s\n\t\t// PREVIOUS STATE: [ <せん>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんｓ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せん', 0, 2, null, null),\n\t\t\t'せんｓ',\n\t\t\t0, 3, true,\n\t\t\t'せんｓ', 2\n\t\t);\n\n\t\t// e\n\t\t// PREVIOUS STATE: [ <せんｓ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんせ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんｓ', 0, 3, null, null),\n\t\t\t'せんせ',\n\t\t\t0, 3, true,\n\t\t\t'せんせ', 3\n\t\t);\n\n\t\t// no-op? [was recorded]\n\t\t// PREVIOUS STATE: [ <せんせ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんせ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんせ', 0, 3, null, null),\n\t\t\t'せんせ',\n\t\t\t0, 3, true,\n\t\t\t'せんせ', 3\n\t\t);\n\n\t\t// i\n\t\t// PREVIOUS STATE: [ <せんせ>, selectionStart: 0, selectionEnd: 3, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんせい>, selectionStart: 0, selectionEnd: 4, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんせ', 0, 3, null, null),\n\t\t\t'せんせい',\n\t\t\t0, 4, true,\n\t\t\t'せんせい', 3\n\t\t);\n\n\t\t// ENTER (accept)\n\t\t// PREVIOUS STATE: [ <せんせい>, selectionStart: 0, selectionEnd: 4, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんせい>, selectionStart: 4, selectionEnd: 4, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんせい', 0, 4, null, null),\n\t\t\t'せんせい',\n\t\t\t4, 4, true,\n\t\t\t'', 0\n\t\t);\n\t});\n\n\ttest('deduceInput - Japanese typing sennsei and choosing different suggestion', () => {\n\t\t// manual test:\n\t\t// - choose keyboard layout: Japanese -> Hiragama\n\t\t// - type sennsei\n\t\t// - arrow down (choose next suggestion)\n\t\t// - accept with Enter\n\t\t// - expected: せんせい\n\n\t\t// sennsei\n\t\t// PREVIOUS STATE: [ <せんせい>, selectionStart: 0, selectionEnd: 4, selectionToken: 0]\n\t\t// CURRENT STATE: [ <せんせい>, selectionStart: 0, selectionEnd: 4, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんせい', 0, 4, null, null),\n\t\t\t'せんせい',\n\t\t\t0, 4, true,\n\t\t\t'せんせい', 4\n\t\t);\n\n\t\t// arrow down\n\t\t// CURRENT STATE: [ <先生>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\t// PREVIOUS STATE: [ <せんせい>, selectionStart: 0, selectionEnd: 4, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('せんせい', 0, 4, null, null),\n\t\t\t'先生',\n\t\t\t0, 2, true,\n\t\t\t'先生', 4\n\t\t);\n\n\t\t// ENTER (accept)\n\t\t// PREVIOUS STATE: [ <先生>, selectionStart: 0, selectionEnd: 2, selectionToken: 0]\n\t\t// CURRENT STATE: [ <先生>, selectionStart: 2, selectionEnd: 2, selectionToken: 0]\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('先生', 0, 2, null, null),\n\t\t\t'先生',\n\t\t\t2, 2, true,\n\t\t\t'', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - no previous state with selection', () => {\n\t\ttestDeduceInput(\n\t\t\tnull,\n\t\t\t'a',\n\t\t\t0, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('issue #2586: Replacing selected end-of-line with newline locks up the document', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState(']\\n', 1, 2, null, null),\n\t\t\t']\\n',\n\t\t\t2, 2, true,\n\t\t\t'\\n', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - no previous state without selection', () => {\n\t\ttestDeduceInput(\n\t\t\tnull,\n\t\t\t'a',\n\t\t\t1, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - typing does not cause a selection', () => {\n\t\ttestDeduceInput(\n\t\t\tTextAreaState.EMPTY,\n\t\t\t'a',\n\t\t\t0, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - had the textarea empty', () => {\n\t\ttestDeduceInput(\n\t\t\tTextAreaState.EMPTY,\n\t\t\t'a',\n\t\t\t1, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - had the entire line selected', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 0, 12, null, null),\n\t\t\t'H',\n\t\t\t1, 1, true,\n\t\t\t'H', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - had previous text 1', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 12, 12, null, null),\n\t\t\t'Hello world!a',\n\t\t\t13, 13, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - had previous text 2', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 0, 0, null, null),\n\t\t\t'aHello world!',\n\t\t\t1, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - had previous text 3', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 6, 11, null, null),\n\t\t\t'Hello other!',\n\t\t\t11, 11, true,\n\t\t\t'other', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - IME', () => {\n\t\ttestDeduceInput(\n\t\t\tTextAreaState.EMPTY,\n\t\t\t'これは',\n\t\t\t3, 3, true,\n\t\t\t'これは', 0\n\t\t);\n\t});\n\n\ttest('extractNewText - isInOverwriteMode', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 0, 0, null, null),\n\t\t\t'Aello world!',\n\t\t\t1, 1, true,\n\t\t\t'A', 0\n\t\t);\n\t});\n\n\ttest('extractMacReplacedText - does nothing if there is selection', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 5, 5, null, null),\n\t\t\t'Hellö world!',\n\t\t\t4, 5, true,\n\t\t\t'ö', 0\n\t\t);\n\t});\n\n\ttest('extractMacReplacedText - does nothing if there is more than one extra char', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 5, 5, null, null),\n\t\t\t'Hellöö world!',\n\t\t\t5, 5, true,\n\t\t\t'öö', 1\n\t\t);\n\t});\n\n\ttest('extractMacReplacedText - does nothing if there is more than one changed char', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 5, 5, null, null),\n\t\t\t'Helöö world!',\n\t\t\t5, 5, true,\n\t\t\t'öö', 2\n\t\t);\n\t});\n\n\ttest('extractMacReplacedText', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('Hello world!', 5, 5, null, null),\n\t\t\t'Hellö world!',\n\t\t\t5, 5, true,\n\t\t\t'ö', 1\n\t\t);\n\t});\n\n\ttest('issue #25101 - First key press ignored', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('a', 0, 1, null, null),\n\t\t\t'a',\n\t\t\t1, 1, true,\n\t\t\t'a', 0\n\t\t);\n\t});\n\n\ttest('issue #16520 - Cmd-d of single character followed by typing same character as has no effect', () => {\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState('x x', 0, 1, null, null),\n\t\t\t'x x',\n\t\t\t1, 1, true,\n\t\t\t'x', 0\n\t\t);\n\t});\n\n\ttest('issue #4271 (example 1) - When inserting an emoji on OSX, it is placed two spaces left of the cursor', () => {\n\t\t// The OSX emoji inserter inserts emojis at random positions in the text, unrelated to where the cursor is.\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t[\n\t\t\t\t\t'some1  text',\n\t\t\t\t\t'some2  text',\n\t\t\t\t\t'some3  text',\n\t\t\t\t\t'some4  text', // cursor is here in the middle of the two spaces\n\t\t\t\t\t'some5  text',\n\t\t\t\t\t'some6  text',\n\t\t\t\t\t'some7  text'\n\t\t\t\t].join('\\n'),\n\t\t\t\t42, 42,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t[\n\t\t\t\t'so📅me1  text',\n\t\t\t\t'some2  text',\n\t\t\t\t'some3  text',\n\t\t\t\t'some4  text',\n\t\t\t\t'some5  text',\n\t\t\t\t'some6  text',\n\t\t\t\t'some7  text'\n\t\t\t].join('\\n'),\n\t\t\t4, 4, true,\n\t\t\t'📅', 0\n\t\t);\n\t});\n\n\ttest('issue #4271 (example 2) - When inserting an emoji on OSX, it is placed two spaces left of the cursor', () => {\n\t\t// The OSX emoji inserter inserts emojis at random positions in the text, unrelated to where the cursor is.\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'some1  text',\n\t\t\t\t6, 6,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'some💊1  text',\n\t\t\t6, 6, true,\n\t\t\t'💊', 0\n\t\t);\n\t});\n\n\ttest('issue #4271 (example 3) - When inserting an emoji on OSX, it is placed two spaces left of the cursor', () => {\n\t\t// The OSX emoji inserter inserts emojis at random positions in the text, unrelated to where the cursor is.\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'qwertyu\\nasdfghj\\nzxcvbnm',\n\t\t\t\t12, 12,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'qwertyu\\nasdfghj\\nzxcvbnm🎈',\n\t\t\t25, 25, true,\n\t\t\t'🎈', 0\n\t\t);\n\t});\n\n\t// an example of an emoji missed by the regex but which has the FE0F variant 16 hint\n\ttest('issue #4271 (example 4) - When inserting an emoji on OSX, it is placed two spaces left of the cursor', () => {\n\t\t// The OSX emoji inserter inserts emojis at random positions in the text, unrelated to where the cursor is.\n\t\ttestDeduceInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'some1  text',\n\t\t\t\t6, 6,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'some⌨️1  text',\n\t\t\t6, 6, true,\n\t\t\t'⌨️', 0\n\t\t);\n\t});\n\n\tfunction testDeduceAndroidCompositionInput(\n\t\tprevState: TextAreaState | null,\n\t\tvalue: string, selectionStart: number, selectionEnd: number,\n\t\texpected: string, expectedReplacePrevCharCnt: number, expectedReplaceNextCharCnt: number, expectedPositionDelta: number): void {\n\t\tprevState = prevState || TextAreaState.EMPTY;\n\n\t\tlet textArea = new MockTextAreaWrapper();\n\t\ttextArea._value = value;\n\t\ttextArea._selectionStart = selectionStart;\n\t\ttextArea._selectionEnd = selectionEnd;\n\n\t\tlet newState = TextAreaState.readFromTextArea(textArea);\n\t\tlet actual = TextAreaState.deduceAndroidCompositionInput(prevState, newState);\n\n\t\tassert.deepStrictEqual(actual, {\n\t\t\ttext: expected,\n\t\t\treplacePrevCharCnt: expectedReplacePrevCharCnt,\n\t\t\treplaceNextCharCnt: expectedReplaceNextCharCnt,\n\t\t\tpositionDelta: expectedPositionDelta,\n\t\t});\n\n\t\ttextArea.dispose();\n\t}\n\n\ttest('Android composition input 1', () => {\n\t\ttestDeduceAndroidCompositionInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'Microsoft',\n\t\t\t\t4, 4,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'Microsoft',\n\t\t\t4, 4,\n\t\t\t'', 0, 0, 0,\n\t\t);\n\t});\n\n\ttest('Android composition input 2', () => {\n\t\ttestDeduceAndroidCompositionInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'Microsoft',\n\t\t\t\t4, 4,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'Microsoft',\n\t\t\t0, 9,\n\t\t\t'', 0, 0, 5,\n\t\t);\n\t});\n\n\ttest('Android composition input 3', () => {\n\t\ttestDeduceAndroidCompositionInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'Microsoft',\n\t\t\t\t0, 9,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'Microsoft\\'s',\n\t\t\t11, 11,\n\t\t\t'\\'s', 0, 0, 0,\n\t\t);\n\t});\n\n\ttest('Android backspace', () => {\n\t\ttestDeduceAndroidCompositionInput(\n\t\t\tnew TextAreaState(\n\t\t\t\t'undefinedVariable',\n\t\t\t\t2, 2,\n\t\t\t\tnull, null\n\t\t\t),\n\t\t\t'udefinedVariable',\n\t\t\t1, 1,\n\t\t\t'', 1, 0, 0,\n\t\t);\n\t});\n\n\tsuite('PagedScreenReaderStrategy', () => {\n\n\t\tfunction testPagedScreenReaderStrategy(lines: string[], selection: Selection, expected: TextAreaState): void {\n\t\t\tconst model = createTextModel(lines.join('\\n'));\n\t\t\tconst actual = PagedScreenReaderStrategy.fromEditorSelection(TextAreaState.EMPTY, model, selection, 10, true);\n\t\t\tassert.ok(equalsTextAreaState(actual, expected));\n\t\t\tmodel.dispose();\n\t\t}\n\n\t\ttest('simple', () => {\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'Hello world!'\n\t\t\t\t],\n\t\t\t\tnew Selection(1, 13, 1, 13),\n\t\t\t\tnew TextAreaState('Hello world!', 12, 12, new Position(1, 13), new Position(1, 13))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'Hello world!'\n\t\t\t\t],\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew TextAreaState('Hello world!', 0, 0, new Position(1, 1), new Position(1, 1))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'Hello world!'\n\t\t\t\t],\n\t\t\t\tnew Selection(1, 1, 1, 6),\n\t\t\t\tnew TextAreaState('Hello world!', 0, 5, new Position(1, 1), new Position(1, 6))\n\t\t\t);\n\t\t});\n\n\t\ttest('multiline', () => {\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'Hello world!',\n\t\t\t\t\t'How are you?'\n\t\t\t\t],\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew TextAreaState('Hello world!\\nHow are you?', 0, 0, new Position(1, 1), new Position(1, 1))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'Hello world!',\n\t\t\t\t\t'How are you?'\n\t\t\t\t],\n\t\t\t\tnew Selection(2, 1, 2, 1),\n\t\t\t\tnew TextAreaState('Hello world!\\nHow are you?', 13, 13, new Position(2, 1), new Position(2, 1))\n\t\t\t);\n\t\t});\n\n\t\ttest('page', () => {\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'L1\\nL2\\nL3\\nL4\\nL5\\nL6\\nL7\\nL8\\nL9\\nL10\\nL11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\nL21'\n\t\t\t\t],\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew TextAreaState('L1\\nL2\\nL3\\nL4\\nL5\\nL6\\nL7\\nL8\\nL9\\nL10\\n', 0, 0, new Position(1, 1), new Position(1, 1))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'L1\\nL2\\nL3\\nL4\\nL5\\nL6\\nL7\\nL8\\nL9\\nL10\\nL11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\nL21'\n\t\t\t\t],\n\t\t\t\tnew Selection(11, 1, 11, 1),\n\t\t\t\tnew TextAreaState('L11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\n', 0, 0, new Position(11, 1), new Position(11, 1))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'L1\\nL2\\nL3\\nL4\\nL5\\nL6\\nL7\\nL8\\nL9\\nL10\\nL11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\nL21'\n\t\t\t\t],\n\t\t\t\tnew Selection(12, 1, 12, 1),\n\t\t\t\tnew TextAreaState('L11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\n', 4, 4, new Position(12, 1), new Position(12, 1))\n\t\t\t);\n\n\t\t\ttestPagedScreenReaderStrategy(\n\t\t\t\t[\n\t\t\t\t\t'L1\\nL2\\nL3\\nL4\\nL5\\nL6\\nL7\\nL8\\nL9\\nL10\\nL11\\nL12\\nL13\\nL14\\nL15\\nL16\\nL17\\nL18\\nL19\\nL20\\nL21'\n\t\t\t\t],\n\t\t\t\tnew Selection(21, 1, 21, 1),\n\t\t\t\tnew TextAreaState('L21', 0, 0, new Position(21, 1), new Position(21, 1))\n\t\t\t);\n\t\t});\n\n\t});\n});\n"]}