{"version":3,"file":"editorState.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/test/browser/core/editorState.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { CodeEditorStateFlag, EditorState } from 'vs/editor/browser/core/editorState';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ITextModel } from 'vs/editor/common/model';\n\ninterface IStubEditorState {\n\tmodel?: { uri?: URI, version?: number };\n\tposition?: Position;\n\tselection?: Selection;\n\tscroll?: { left?: number, top?: number };\n}\n\nsuite('Editor Core - Editor State', () => {\n\n\tconst allFlags = (\n\t\tCodeEditorStateFlag.Value\n\t\t| CodeEditorStateFlag.Selection\n\t\t| CodeEditorStateFlag.Position\n\t\t| CodeEditorStateFlag.Scroll\n\t);\n\n\ttest('empty editor state should be valid', () => {\n\t\tlet result = validate({}, {});\n\t\tassert.strictEqual(result, true);\n\t});\n\n\ttest('different model URIs should be invalid', () => {\n\t\tlet result = validate(\n\t\t\t{ model: { uri: URI.parse('http://test1') } },\n\t\t\t{ model: { uri: URI.parse('http://test2') } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different model versions should be invalid', () => {\n\t\tlet result = validate(\n\t\t\t{ model: { version: 1 } },\n\t\t\t{ model: { version: 2 } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different positions should be invalid', () => {\n\t\tlet result = validate(\n\t\t\t{ position: new Position(1, 2) },\n\t\t\t{ position: new Position(2, 3) }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different selections should be invalid', () => {\n\t\tlet result = validate(\n\t\t\t{ selection: new Selection(1, 2, 3, 4) },\n\t\t\t{ selection: new Selection(5, 2, 3, 4) }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\ttest('different scroll positions should be invalid', () => {\n\t\tlet result = validate(\n\t\t\t{ scroll: { left: 1, top: 2 } },\n\t\t\t{ scroll: { left: 3, top: 2 } }\n\t\t);\n\n\t\tassert.strictEqual(result, false);\n\t});\n\n\n\tfunction validate(source: IStubEditorState, target: IStubEditorState) {\n\t\tlet sourceEditor = createEditor(source),\n\t\t\ttargetEditor = createEditor(target);\n\n\t\tlet result = new EditorState(sourceEditor, allFlags).validate(targetEditor);\n\n\t\treturn result;\n\t}\n\n\tfunction createEditor({ model, position, selection, scroll }: IStubEditorState = {}): ICodeEditor {\n\t\tlet mappedModel = model ? { uri: model.uri ? model.uri : URI.parse('http://dummy.org'), getVersionId: () => model.version } : null;\n\n\t\treturn {\n\t\t\tgetModel: (): ITextModel => <any>mappedModel,\n\t\t\tgetPosition: (): Position | undefined => position,\n\t\t\tgetSelection: (): Selection | undefined => selection,\n\t\t\tgetScrollLeft: (): number | undefined => scroll && scroll.left,\n\t\t\tgetScrollTop: (): number | undefined => scroll && scroll.top\n\t\t} as ICodeEditor;\n\t}\n\n});\n"]}