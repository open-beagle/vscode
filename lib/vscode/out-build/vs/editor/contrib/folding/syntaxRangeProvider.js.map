{"version":3,"file":"syntaxRangeProvider.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/folding/syntaxRangeProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FoldingRangeProvider, FoldingRange, FoldingContext } from 'vs/editor/common/modes';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { RangeProvider } from './folding';\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nconst MAX_FOLDING_REGIONS = 5000;\n\nexport interface IFoldingRangeData extends FoldingRange {\n\trank: number;\n}\n\nconst foldingContext: FoldingContext = {\n};\n\nexport const ID_SYNTAX_PROVIDER = 'syntax';\n\nexport class SyntaxRangeProvider implements RangeProvider {\n\n\treadonly id = ID_SYNTAX_PROVIDER;\n\n\treadonly disposables: DisposableStore | undefined;\n\n\tconstructor(private readonly editorModel: ITextModel, private providers: FoldingRangeProvider[], handleFoldingRangesChange: () => void, private limit = MAX_FOLDING_REGIONS) {\n\t\tfor (const provider of providers) {\n\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\tif (!this.disposables) {\n\t\t\t\t\tthis.disposables = new DisposableStore();\n\t\t\t\t}\n\t\t\t\tthis.disposables.add(provider.onDidChange(handleFoldingRangesChange));\n\t\t\t}\n\t\t}\n\t}\n\n\tcompute(cancellationToken: CancellationToken): Promise<FoldingRegions | null> {\n\t\treturn collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\n\t\t\tif (ranges) {\n\t\t\t\tlet res = sanitizeRanges(ranges, this.limit);\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tdispose() {\n\t\tthis.disposables?.dispose();\n\t}\n}\n\nfunction collectSyntaxRanges(providers: FoldingRangeProvider[], model: ITextModel, cancellationToken: CancellationToken): Promise<IFoldingRangeData[] | null> {\n\tlet rangeData: IFoldingRangeData[] | null = null;\n\tlet promises = providers.map((provider, i) => {\n\t\treturn Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Array.isArray(ranges)) {\n\t\t\t\tif (!Array.isArray(rangeData)) {\n\t\t\t\t\trangeData = [];\n\t\t\t\t}\n\t\t\t\tlet nLines = model.getLineCount();\n\t\t\t\tfor (let r of ranges) {\n\t\t\t\t\tif (r.start > 0 && r.end > r.start && r.end <= nLines) {\n\t\t\t\t\t\trangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, onUnexpectedExternalError);\n\t});\n\treturn Promise.all(promises).then(_ => {\n\t\treturn rangeData;\n\t});\n}\n\nexport class RangesCollector {\n\tprivate readonly _startIndexes: number[];\n\tprivate readonly _endIndexes: number[];\n\tprivate readonly _nestingLevels: number[];\n\tprivate readonly _nestingLevelCounts: number[];\n\tprivate readonly _types: Array<string | undefined>;\n\tprivate _length: number;\n\tprivate readonly _foldingRangesLimit: number;\n\n\tconstructor(foldingRangesLimit: number) {\n\t\tthis._startIndexes = [];\n\t\tthis._endIndexes = [];\n\t\tthis._nestingLevels = [];\n\t\tthis._nestingLevelCounts = [];\n\t\tthis._types = [];\n\t\tthis._length = 0;\n\t\tthis._foldingRangesLimit = foldingRangesLimit;\n\t}\n\n\tpublic add(startLineNumber: number, endLineNumber: number, type: string | undefined, nestingLevel: number) {\n\t\tif (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n\t\t\treturn;\n\t\t}\n\t\tlet index = this._length;\n\t\tthis._startIndexes[index] = startLineNumber;\n\t\tthis._endIndexes[index] = endLineNumber;\n\t\tthis._nestingLevels[index] = nestingLevel;\n\t\tthis._types[index] = type;\n\t\tthis._length++;\n\t\tif (nestingLevel < 30) {\n\t\t\tthis._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\n\t\t}\n\t}\n\n\tpublic toIndentRanges() {\n\t\tif (this._length <= this._foldingRangesLimit) {\n\t\t\tlet startIndexes = new Uint32Array(this._length);\n\t\t\tlet endIndexes = new Uint32Array(this._length);\n\t\t\tfor (let i = 0; i < this._length; i++) {\n\t\t\t\tstartIndexes[i] = this._startIndexes[i];\n\t\t\t\tendIndexes[i] = this._endIndexes[i];\n\t\t\t}\n\t\t\treturn new FoldingRegions(startIndexes, endIndexes, this._types);\n\t\t} else {\n\t\t\tlet entries = 0;\n\t\t\tlet maxLevel = this._nestingLevelCounts.length;\n\t\t\tfor (let i = 0; i < this._nestingLevelCounts.length; i++) {\n\t\t\t\tlet n = this._nestingLevelCounts[i];\n\t\t\t\tif (n) {\n\t\t\t\t\tif (n + entries > this._foldingRangesLimit) {\n\t\t\t\t\t\tmaxLevel = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tentries += n;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet startIndexes = new Uint32Array(this._foldingRangesLimit);\n\t\t\tlet endIndexes = new Uint32Array(this._foldingRangesLimit);\n\t\t\tlet types: Array<string | undefined> = [];\n\t\t\tfor (let i = 0, k = 0; i < this._length; i++) {\n\t\t\t\tlet level = this._nestingLevels[i];\n\t\t\t\tif (level < maxLevel || (level === maxLevel && entries++ < this._foldingRangesLimit)) {\n\t\t\t\t\tstartIndexes[k] = this._startIndexes[i];\n\t\t\t\t\tendIndexes[k] = this._endIndexes[i];\n\t\t\t\t\ttypes[k] = this._types[i];\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new FoldingRegions(startIndexes, endIndexes, types);\n\t\t}\n\n\t}\n\n}\n\nexport function sanitizeRanges(rangeData: IFoldingRangeData[], limit: number): FoldingRegions {\n\n\tlet sorted = rangeData.sort((d1, d2) => {\n\t\tlet diff = d1.start - d2.start;\n\t\tif (diff === 0) {\n\t\t\tdiff = d1.rank - d2.rank;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet collector = new RangesCollector(limit);\n\n\tlet top: IFoldingRangeData | undefined = undefined;\n\tlet previous: IFoldingRangeData[] = [];\n\tfor (let entry of sorted) {\n\t\tif (!top) {\n\t\t\ttop = entry;\n\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t} else {\n\t\t\tif (entry.start > top.start) {\n\t\t\t\tif (entry.end <= top.end) {\n\t\t\t\t\tprevious.push(top);\n\t\t\t\t\ttop = entry;\n\t\t\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t\t\t} else {\n\t\t\t\t\tif (entry.start > top.end) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\ttop = previous.pop();\n\t\t\t\t\t\t} while (top && entry.start > top.end);\n\t\t\t\t\t\tif (top) {\n\t\t\t\t\t\t\tprevious.push(top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttop = entry;\n\t\t\t\t\t}\n\t\t\t\t\tcollector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn collector.toIndentRanges();\n}\n"]}