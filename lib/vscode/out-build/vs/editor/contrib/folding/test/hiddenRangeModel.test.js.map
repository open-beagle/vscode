{"version":3,"file":"hiddenRangeModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/folding/test/hiddenRangeModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { FoldingModel } from 'vs/editor/contrib/folding/foldingModel';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { computeRanges } from 'vs/editor/contrib/folding/indentRangeProvider';\nimport { TestDecorationProvider } from './foldingModel.test';\nimport { HiddenRangeModel } from 'vs/editor/contrib/folding/hiddenRangeModel';\nimport { IRange } from 'vs/editor/common/core/range';\n\n\ninterface ExpectedRange {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n}\n\nsuite('Hidden Range Model', () => {\n\tfunction r(startLineNumber: number, endLineNumber: number): ExpectedRange {\n\t\treturn { startLineNumber, endLineNumber };\n\t}\n\n\tfunction assertRanges(actual: IRange[], expectedRegions: ExpectedRange[], message?: string) {\n\t\tassert.deepStrictEqual(actual.map(r => ({ startLineNumber: r.startLineNumber, endLineNumber: r.endLineNumber })), expectedRegions, message);\n\t}\n\n\ttest('hasRanges', () => {\n\t\tlet lines = [\n\t\t/* 1*/\t'/**',\n\t\t/* 2*/\t' * Comment',\n\t\t/* 3*/\t' */',\n\t\t/* 4*/\t'class A {',\n\t\t/* 5*/\t'  void foo() {',\n\t\t/* 6*/\t'    if (true) {',\n\t\t/* 7*/\t'      //hello',\n\t\t/* 8*/\t'    }',\n\t\t/* 9*/\t'  }',\n\t\t/* 10*/\t'}'];\n\n\t\tlet textModel = createTextModel(lines.join('\\n'));\n\t\tlet foldingModel = new FoldingModel(textModel, new TestDecorationProvider(textModel));\n\t\tlet hiddenRangeModel = new HiddenRangeModel(foldingModel);\n\n\t\tassert.strictEqual(hiddenRangeModel.hasRanges(), false);\n\n\t\tlet ranges = computeRanges(textModel, false, undefined);\n\t\tfoldingModel.update(ranges);\n\n\t\tfoldingModel.toggleCollapseState([foldingModel.getRegionAtLine(1)!, foldingModel.getRegionAtLine(6)!]);\n\t\tassertRanges(hiddenRangeModel.hiddenRanges, [r(2, 3), r(7, 7)]);\n\n\t\tassert.strictEqual(hiddenRangeModel.hasRanges(), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(1), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(2), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(3), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(4), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(5), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(6), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(7), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(8), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(9), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(10), false);\n\n\t\tfoldingModel.toggleCollapseState([foldingModel.getRegionAtLine(4)!]);\n\t\tassertRanges(hiddenRangeModel.hiddenRanges, [r(2, 3), r(5, 9)]);\n\n\t\tassert.strictEqual(hiddenRangeModel.hasRanges(), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(1), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(2), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(3), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(4), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(5), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(6), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(7), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(8), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(9), true);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(10), false);\n\n\t\tfoldingModel.toggleCollapseState([foldingModel.getRegionAtLine(1)!, foldingModel.getRegionAtLine(6)!, foldingModel.getRegionAtLine(4)!]);\n\t\tassertRanges(hiddenRangeModel.hiddenRanges, []);\n\t\tassert.strictEqual(hiddenRangeModel.hasRanges(), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(1), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(2), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(3), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(4), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(5), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(6), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(7), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(8), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(9), false);\n\t\tassert.strictEqual(hiddenRangeModel.isHidden(10), false);\n\n\t});\n\n\n});\n"]}