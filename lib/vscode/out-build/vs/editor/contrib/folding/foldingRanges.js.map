{"version":3,"file":"foldingRanges.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/folding/foldingRanges.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ILineRange {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n}\n\nexport const MAX_FOLDING_REGIONS = 0xFFFF;\nexport const MAX_LINE_NUMBER = 0xFFFFFF;\n\nconst MASK_INDENT = 0xFF000000;\n\nexport class FoldingRegions {\n\tprivate readonly _startIndexes: Uint32Array;\n\tprivate readonly _endIndexes: Uint32Array;\n\tprivate readonly _collapseStates: Uint32Array;\n\tprivate _parentsComputed: boolean;\n\tprivate readonly _types: Array<string | undefined> | undefined;\n\n\tconstructor(startIndexes: Uint32Array, endIndexes: Uint32Array, types?: Array<string | undefined>) {\n\t\tif (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\n\t\t\tthrow new Error('invalid startIndexes or endIndexes size');\n\t\t}\n\t\tthis._startIndexes = startIndexes;\n\t\tthis._endIndexes = endIndexes;\n\t\tthis._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\n\t\tthis._types = types;\n\t\tthis._parentsComputed = false;\n\t}\n\n\tprivate ensureParentIndices() {\n\t\tif (!this._parentsComputed) {\n\t\t\tthis._parentsComputed = true;\n\t\t\tlet parentIndexes: number[] = [];\n\t\t\tlet isInsideLast = (startLineNumber: number, endLineNumber: number) => {\n\t\t\t\tlet index = parentIndexes[parentIndexes.length - 1];\n\t\t\t\treturn this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;\n\t\t\t};\n\t\t\tfor (let i = 0, len = this._startIndexes.length; i < len; i++) {\n\t\t\t\tlet startLineNumber = this._startIndexes[i];\n\t\t\t\tlet endLineNumber = this._endIndexes[i];\n\t\t\t\tif (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n\t\t\t\t\tthrow new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\n\t\t\t\t}\n\t\t\t\twhile (parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\n\t\t\t\t\tparentIndexes.pop();\n\t\t\t\t}\n\t\t\t\tlet parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;\n\t\t\t\tparentIndexes.push(i);\n\t\t\t\tthis._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\n\t\t\t\tthis._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get length(): number {\n\t\treturn this._startIndexes.length;\n\t}\n\n\tpublic getStartLineNumber(index: number): number {\n\t\treturn this._startIndexes[index] & MAX_LINE_NUMBER;\n\t}\n\n\tpublic getEndLineNumber(index: number): number {\n\t\treturn this._endIndexes[index] & MAX_LINE_NUMBER;\n\t}\n\n\tpublic getType(index: number): string | undefined {\n\t\treturn this._types ? this._types[index] : undefined;\n\t}\n\n\tpublic hasTypes() {\n\t\treturn !!this._types;\n\t}\n\n\tpublic isCollapsed(index: number): boolean {\n\t\tlet arrayIndex = (index / 32) | 0;\n\t\tlet bit = index % 32;\n\t\treturn (this._collapseStates[arrayIndex] & (1 << bit)) !== 0;\n\t}\n\n\tpublic setCollapsed(index: number, newState: boolean) {\n\t\tlet arrayIndex = (index / 32) | 0;\n\t\tlet bit = index % 32;\n\t\tlet value = this._collapseStates[arrayIndex];\n\t\tif (newState) {\n\t\t\tthis._collapseStates[arrayIndex] = value | (1 << bit);\n\t\t} else {\n\t\t\tthis._collapseStates[arrayIndex] = value & ~(1 << bit);\n\t\t}\n\t}\n\n\tpublic toRegion(index: number): FoldingRegion {\n\t\treturn new FoldingRegion(this, index);\n\t}\n\n\tpublic getParentIndex(index: number) {\n\t\tthis.ensureParentIndices();\n\t\tlet parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\n\t\tif (parent === MAX_FOLDING_REGIONS) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn parent;\n\t}\n\n\tpublic contains(index: number, line: number) {\n\t\treturn this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\n\t}\n\n\tprivate findIndex(line: number) {\n\t\tlet low = 0, high = this._startIndexes.length;\n\t\tif (high === 0) {\n\t\t\treturn -1; // no children\n\t\t}\n\t\twhile (low < high) {\n\t\t\tlet mid = Math.floor((low + high) / 2);\n\t\t\tif (line < this.getStartLineNumber(mid)) {\n\t\t\t\thigh = mid;\n\t\t\t} else {\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t}\n\t\treturn low - 1;\n\t}\n\n\tpublic findRange(line: number): number {\n\t\tlet index = this.findIndex(line);\n\t\tif (index >= 0) {\n\t\t\tlet endLineNumber = this.getEndLineNumber(index);\n\t\t\tif (endLineNumber >= line) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t\tindex = this.getParentIndex(index);\n\t\t\twhile (index !== -1) {\n\t\t\t\tif (this.contains(index, line)) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t\tindex = this.getParentIndex(index);\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic toString() {\n\t\tlet res: string[] = [];\n\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\tres[i] = `[${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;\n\t\t}\n\t\treturn res.join(', ');\n\t}\n\n\tpublic equals(b: FoldingRegions) {\n\t\tif (this.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\tif (this.getStartLineNumber(i) !== b.getStartLineNumber(i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.getEndLineNumber(i) !== b.getEndLineNumber(i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.getType(i) !== b.getType(i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport class FoldingRegion {\n\n\tconstructor(private readonly ranges: FoldingRegions, private index: number) {\n\t}\n\n\tpublic get startLineNumber() {\n\t\treturn this.ranges.getStartLineNumber(this.index);\n\t}\n\n\tpublic get endLineNumber() {\n\t\treturn this.ranges.getEndLineNumber(this.index);\n\t}\n\n\tpublic get regionIndex() {\n\t\treturn this.index;\n\t}\n\n\tpublic get parentIndex() {\n\t\treturn this.ranges.getParentIndex(this.index);\n\t}\n\n\tpublic get isCollapsed() {\n\t\treturn this.ranges.isCollapsed(this.index);\n\t}\n\n\tcontainedBy(range: ILineRange): boolean {\n\t\treturn range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\n\t}\n\tcontainsLine(lineNumber: number) {\n\t\treturn this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\n\t}\n\thidesLine(lineNumber: number) {\n\t\treturn this.startLineNumber < lineNumber && lineNumber <= this.endLineNumber;\n\t}\n}\n"]}