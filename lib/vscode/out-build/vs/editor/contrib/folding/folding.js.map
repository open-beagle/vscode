{"version":3,"sources":["vs/editor/contrib/folding/folding.ts"],"names":[],"mappings":"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","file":"folding.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./folding';\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { RunOnceScheduler, Delayer, CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { KeyCode, KeyMod, KeyChord } from 'vs/base/common/keyCodes';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ScrollType, IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { registerEditorAction, registerEditorContribution, ServicesAccessor, EditorAction, registerInstantiatedEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { FoldingModel, setCollapseStateAtLevel, CollapseMemento, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, setCollapseStateForRest, toggleCollapseState, setCollapseStateUp } from 'vs/editor/contrib/folding/foldingModel';\nimport { FoldingDecorationProvider, foldingCollapsedIcon, foldingExpandedIcon } from './foldingDecorations';\nimport { FoldingRegions, FoldingRegion } from './foldingRanges';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ConfigurationChangedEvent, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IMarginData, IEmptyContentData } from 'vs/editor/browser/controller/mouseTarget';\nimport { HiddenRangeModel } from 'vs/editor/contrib/folding/hiddenRangeModel';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { IndentRangeProvider } from 'vs/editor/contrib/folding/indentRangeProvider';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from 'vs/editor/common/modes';\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from 'vs/editor/contrib/folding/intializingRangeProvider';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { RawContextKey, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { registerThemingParticipant, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { registerColor, editorSelectionBackground, transparent, iconForeground } from 'vs/platform/theme/common/colorRegistry';\n\nconst CONTEXT_FOLDING_ENABLED = new RawContextKey<boolean>('foldingEnabled', false);\n\nexport interface RangeProvider {\n\treadonly id: string;\n\tcompute(cancelationToken: CancellationToken): Promise<FoldingRegions | null>;\n\tdispose(): void;\n}\n\ninterface FoldingStateMemento {\n\tcollapsedRegions?: CollapseMemento;\n\tlineCount?: number;\n\tprovider?: string;\n}\n\nexport class FoldingController extends Disposable implements IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.folding';\n\n\tstatic readonly MAX_FOLDING_REGIONS = 5000;\n\n\tpublic static get(editor: ICodeEditor): FoldingController {\n\t\treturn editor.getContribution<FoldingController>(FoldingController.ID);\n\t}\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate _isEnabled: boolean;\n\tprivate _useFoldingProviders: boolean;\n\tprivate _unfoldOnClickAfterEndOfLine: boolean;\n\tprivate _restoringViewState: boolean;\n\n\tprivate readonly foldingDecorationProvider: FoldingDecorationProvider;\n\n\tprivate foldingModel: FoldingModel | null;\n\tprivate hiddenRangeModel: HiddenRangeModel | null;\n\n\tprivate rangeProvider: RangeProvider | null;\n\tprivate foldingRegionPromise: CancelablePromise<FoldingRegions | null> | null;\n\n\tprivate foldingStateMemento: FoldingStateMemento | null;\n\n\tprivate foldingModelPromise: Promise<FoldingModel | null> | null;\n\tprivate updateScheduler: Delayer<FoldingModel | null> | null;\n\n\tprivate foldingEnabled: IContextKey<boolean>;\n\tprivate cursorChangedScheduler: RunOnceScheduler | null;\n\n\tprivate readonly localToDispose = this._register(new DisposableStore());\n\tprivate mouseDownInfo: { lineNumber: number, iconClicked: boolean } | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\t\tthis.editor = editor;\n\t\tconst options = this.editor.getOptions();\n\t\tthis._isEnabled = options.get(EditorOption.folding);\n\t\tthis._useFoldingProviders = options.get(EditorOption.foldingStrategy) !== 'indentation';\n\t\tthis._unfoldOnClickAfterEndOfLine = options.get(EditorOption.unfoldOnClickAfterEndOfLine);\n\t\tthis._restoringViewState = false;\n\n\t\tthis.foldingModel = null;\n\t\tthis.hiddenRangeModel = null;\n\t\tthis.rangeProvider = null;\n\t\tthis.foldingRegionPromise = null;\n\t\tthis.foldingStateMemento = null;\n\t\tthis.foldingModelPromise = null;\n\t\tthis.updateScheduler = null;\n\t\tthis.cursorChangedScheduler = null;\n\t\tthis.mouseDownInfo = null;\n\n\t\tthis.foldingDecorationProvider = new FoldingDecorationProvider(editor);\n\t\tthis.foldingDecorationProvider.autoHideFoldingControls = options.get(EditorOption.showFoldingControls) === 'mouseover';\n\t\tthis.foldingDecorationProvider.showFoldingHighlights = options.get(EditorOption.foldingHighlight);\n\t\tthis.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);\n\t\tthis.foldingEnabled.set(this._isEnabled);\n\n\t\tthis._register(this.editor.onDidChangeModel(() => this.onModelChanged()));\n\n\t\tthis._register(this.editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.folding)) {\n\t\t\t\tthis._isEnabled = this.editor.getOptions().get(EditorOption.folding);\n\t\t\t\tthis.foldingEnabled.set(this._isEnabled);\n\t\t\t\tthis.onModelChanged();\n\t\t\t}\n\t\t\tif (e.hasChanged(EditorOption.showFoldingControls) || e.hasChanged(EditorOption.foldingHighlight)) {\n\t\t\t\tconst options = this.editor.getOptions();\n\t\t\t\tthis.foldingDecorationProvider.autoHideFoldingControls = options.get(EditorOption.showFoldingControls) === 'mouseover';\n\t\t\t\tthis.foldingDecorationProvider.showFoldingHighlights = options.get(EditorOption.foldingHighlight);\n\t\t\t\tthis.onModelContentChanged();\n\t\t\t}\n\t\t\tif (e.hasChanged(EditorOption.foldingStrategy)) {\n\t\t\t\tthis._useFoldingProviders = this.editor.getOptions().get(EditorOption.foldingStrategy) !== 'indentation';\n\t\t\t\tthis.onFoldingStrategyChanged();\n\t\t\t}\n\t\t\tif (e.hasChanged(EditorOption.unfoldOnClickAfterEndOfLine)) {\n\t\t\t\tthis._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(EditorOption.unfoldOnClickAfterEndOfLine);\n\t\t\t}\n\t\t}));\n\t\tthis.onModelChanged();\n\t}\n\n\t/**\n\t * Store view state.\n\t */\n\tpublic saveViewState(): FoldingStateMemento | undefined {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\n\t\t\treturn {};\n\t\t}\n\t\tif (this.foldingModel) { // disposed ?\n\t\t\tlet collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel!.getMemento();\n\t\t\tlet provider = this.rangeProvider ? this.rangeProvider.id : undefined;\n\t\t\treturn { collapsedRegions, lineCount: model.getLineCount(), provider };\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Restore view state.\n\t */\n\tpublic restoreViewState(state: FoldingStateMemento): void {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\n\t\t\treturn;\n\t\t}\n\t\tif (!state || !state.collapsedRegions || state.lineCount !== model.getLineCount()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\n\t\t\tthis.foldingStateMemento = state;\n\t\t}\n\n\t\tconst collapsedRegions = state.collapsedRegions;\n\n\t\t// set the hidden ranges right away, before waiting for the folding model.\n\t\tif (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\n\t\t\tconst foldingModel = this.getFoldingModel();\n\t\t\tif (foldingModel) {\n\t\t\t\tfoldingModel.then(foldingModel => {\n\t\t\t\t\tif (foldingModel) {\n\t\t\t\t\t\tthis._restoringViewState = true;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfoldingModel.applyMemento(collapsedRegions);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthis._restoringViewState = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).then(undefined, onUnexpectedError);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tthis.localToDispose.clear();\n\n\t\tlet model = this.editor.getModel();\n\t\tif (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\n\t\t\t// huge files get no view model, so they cannot support hidden areas\n\t\t\treturn;\n\t\t}\n\n\t\tthis.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\n\t\tthis.localToDispose.add(this.foldingModel);\n\n\t\tthis.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\n\t\tthis.localToDispose.add(this.hiddenRangeModel);\n\t\tthis.localToDispose.add(this.hiddenRangeModel.onDidChange(hr => this.onHiddenRangesChanges(hr)));\n\n\t\tthis.updateScheduler = new Delayer<FoldingModel>(200);\n\n\t\tthis.cursorChangedScheduler = new RunOnceScheduler(() => this.revealCursor(), 200);\n\t\tthis.localToDispose.add(this.cursorChangedScheduler);\n\t\tthis.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(() => this.onFoldingStrategyChanged()));\n\t\tthis.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(() => this.onFoldingStrategyChanged())); // covers model language changes as well\n\t\tthis.localToDispose.add(this.editor.onDidChangeModelContent(() => this.onModelContentChanged()));\n\t\tthis.localToDispose.add(this.editor.onDidChangeCursorPosition(() => this.onCursorPositionChanged()));\n\t\tthis.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n\t\tthis.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n\t\tthis.localToDispose.add({\n\t\t\tdispose: () => {\n\t\t\t\tif (this.foldingRegionPromise) {\n\t\t\t\t\tthis.foldingRegionPromise.cancel();\n\t\t\t\t\tthis.foldingRegionPromise = null;\n\t\t\t\t}\n\t\t\t\tif (this.updateScheduler) {\n\t\t\t\t\tthis.updateScheduler.cancel();\n\t\t\t\t}\n\t\t\t\tthis.updateScheduler = null;\n\t\t\t\tthis.foldingModel = null;\n\t\t\t\tthis.foldingModelPromise = null;\n\t\t\t\tthis.hiddenRangeModel = null;\n\t\t\t\tthis.cursorChangedScheduler = null;\n\t\t\t\tthis.foldingStateMemento = null;\n\t\t\t\tif (this.rangeProvider) {\n\t\t\t\t\tthis.rangeProvider.dispose();\n\t\t\t\t}\n\t\t\t\tthis.rangeProvider = null;\n\t\t\t}\n\t\t});\n\t\tthis.onModelContentChanged();\n\t}\n\n\tprivate onFoldingStrategyChanged() {\n\t\tif (this.rangeProvider) {\n\t\t\tthis.rangeProvider.dispose();\n\t\t}\n\t\tthis.rangeProvider = null;\n\t\tthis.onModelContentChanged();\n\t}\n\n\tprivate getRangeProvider(editorModel: ITextModel): RangeProvider {\n\t\tif (this.rangeProvider) {\n\t\t\treturn this.rangeProvider;\n\t\t}\n\t\tthis.rangeProvider = new IndentRangeProvider(editorModel); // fallback\n\n\n\t\tif (this._useFoldingProviders && this.foldingModel) {\n\t\t\tlet foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\n\t\t\tif (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\n\t\t\t\tconst rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, () => {\n\t\t\t\t\t// if after 30 the InitializingRangeProvider is still not replaced, force a refresh\n\t\t\t\t\tthis.foldingStateMemento = null;\n\t\t\t\t\tthis.onFoldingStrategyChanged();\n\t\t\t\t}, 30000);\n\t\t\t\treturn rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\n\t\t\t} else if (foldingProviders.length > 0) {\n\t\t\t\tthis.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders, () => this.onModelContentChanged());\n\t\t\t}\n\t\t}\n\t\tthis.foldingStateMemento = null;\n\t\treturn this.rangeProvider;\n\t}\n\n\tpublic getFoldingModel() {\n\t\treturn this.foldingModelPromise;\n\t}\n\n\tprivate onModelContentChanged() {\n\t\tif (this.updateScheduler) {\n\t\t\tif (this.foldingRegionPromise) {\n\t\t\t\tthis.foldingRegionPromise.cancel();\n\t\t\t\tthis.foldingRegionPromise = null;\n\t\t\t}\n\t\t\tthis.foldingModelPromise = this.updateScheduler.trigger(() => {\n\t\t\t\tconst foldingModel = this.foldingModel;\n\t\t\t\tif (!foldingModel) { // null if editor has been disposed, or folding turned off\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlet foldingRegionPromise = this.foldingRegionPromise = createCancelablePromise(token => this.getRangeProvider(foldingModel.textModel).compute(token));\n\t\t\t\treturn foldingRegionPromise.then(foldingRanges => {\n\t\t\t\t\tif (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) { // new request or cancelled in the meantime?\n\t\t\t\t\t\t// some cursors might have moved into hidden regions, make sure they are in expanded regions\n\t\t\t\t\t\tlet selections = this.editor.getSelections();\n\t\t\t\t\t\tlet selectionLineNumbers = selections ? selections.map(s => s.startLineNumber) : [];\n\t\t\t\t\t\tfoldingModel.update(foldingRanges, selectionLineNumbers);\n\t\t\t\t\t}\n\t\t\t\t\treturn foldingModel;\n\t\t\t\t});\n\t\t\t}).then(undefined, (err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onHiddenRangesChanges(hiddenRanges: IRange[]) {\n\t\tif (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {\n\t\t\tlet selections = this.editor.getSelections();\n\t\t\tif (selections) {\n\t\t\t\tif (this.hiddenRangeModel.adjustSelections(selections)) {\n\t\t\t\t\tthis.editor.setSelections(selections);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.editor.setHiddenAreas(hiddenRanges);\n\t}\n\n\tprivate onCursorPositionChanged() {\n\t\tif (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\n\t\t\tthis.cursorChangedScheduler!.schedule();\n\t\t}\n\t}\n\n\tprivate revealCursor() {\n\t\tconst foldingModel = this.getFoldingModel();\n\t\tif (!foldingModel) {\n\t\t\treturn;\n\t\t}\n\t\tfoldingModel.then(foldingModel => { // null is returned if folding got disabled in the meantime\n\t\t\tif (foldingModel) {\n\t\t\t\tlet selections = this.editor.getSelections();\n\t\t\t\tif (selections && selections.length > 0) {\n\t\t\t\t\tlet toToggle: FoldingRegion[] = [];\n\t\t\t\t\tfor (let selection of selections) {\n\t\t\t\t\t\tlet lineNumber = selection.selectionStartLineNumber;\n\t\t\t\t\t\tif (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) {\n\t\t\t\t\t\t\ttoToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, r => r.isCollapsed && lineNumber > r.startLineNumber));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (toToggle.length) {\n\t\t\t\t\t\tfoldingModel.toggleCollapseState(toToggle);\n\t\t\t\t\t\tthis.reveal(selections[0].getPosition());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(undefined, onUnexpectedError);\n\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = null;\n\n\n\t\tif (!this.hiddenRangeModel || !e.target || !e.target.range) {\n\t\t\treturn;\n\t\t}\n\t\tif (!e.event.leftButton && !e.event.middleButton) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = e.target.range;\n\t\tlet iconClicked = false;\n\t\tswitch (e.target.type) {\n\t\t\tcase MouseTargetType.GUTTER_LINE_DECORATIONS:\n\t\t\t\tconst data = e.target.detail as IMarginData;\n\t\t\t\tconst offsetLeftInGutter = (e.target.element as HTMLElement).offsetLeft;\n\t\t\t\tconst gutterOffsetX = data.offsetX - offsetLeftInGutter;\n\n\t\t\t\t// const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n\n\t\t\t\t// TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\n\t\t\t\tif (gutterOffsetX < 5) { // the whitespace between the border and the real folding icon border is 5px\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ticonClicked = true;\n\t\t\t\tbreak;\n\t\t\tcase MouseTargetType.CONTENT_EMPTY: {\n\t\t\t\tif (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {\n\t\t\t\t\tconst data = e.target.detail as IEmptyContentData;\n\t\t\t\t\tif (!data.isAfterLines) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase MouseTargetType.CONTENT_TEXT: {\n\t\t\t\tif (this.hiddenRangeModel.hasRanges()) {\n\t\t\t\t\tlet model = this.editor.getModel();\n\t\t\t\t\tif (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tthis.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked };\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tconst foldingModel = this.getFoldingModel();\n\t\tif (!foldingModel || !this.mouseDownInfo || !e.target) {\n\t\t\treturn;\n\t\t}\n\t\tlet lineNumber = this.mouseDownInfo.lineNumber;\n\t\tlet iconClicked = this.mouseDownInfo.iconClicked;\n\n\t\tlet range = e.target.range;\n\t\tif (!range || range.startLineNumber !== lineNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (iconClicked) {\n\t\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tlet model = this.editor.getModel();\n\t\t\tif (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tfoldingModel.then(foldingModel => {\n\t\t\tif (foldingModel) {\n\t\t\t\tlet region = foldingModel.getRegionAtLine(lineNumber);\n\t\t\t\tif (region && region.startLineNumber === lineNumber) {\n\t\t\t\t\tlet isCollapsed = region.isCollapsed;\n\t\t\t\t\tif (iconClicked || isCollapsed) {\n\t\t\t\t\t\tlet surrounding = e.event.altKey;\n\t\t\t\t\t\tlet toToggle = [];\n\t\t\t\t\t\tif (surrounding) {\n\t\t\t\t\t\t\tlet filter = (otherRegion: FoldingRegion) => !otherRegion.containedBy(region!) && !region!.containedBy(otherRegion);\n\t\t\t\t\t\t\tlet toMaybeToggle = foldingModel.getRegionsInside(null, filter);\n\t\t\t\t\t\t\tfor (const r of toMaybeToggle) {\n\t\t\t\t\t\t\t\tif (r.isCollapsed) {\n\t\t\t\t\t\t\t\t\ttoToggle.push(r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding\n\t\t\t\t\t\t\tif (toToggle.length === 0) {\n\t\t\t\t\t\t\t\ttoToggle = toMaybeToggle;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlet recursive = e.event.middleButton || e.event.shiftKey;\n\t\t\t\t\t\t\tif (recursive) {\n\t\t\t\t\t\t\t\tfor (const r of foldingModel.getRegionsInside(region)) {\n\t\t\t\t\t\t\t\t\tif (r.isCollapsed === isCollapsed) {\n\t\t\t\t\t\t\t\t\t\ttoToggle.push(r);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\n\t\t\t\t\t\t\tif (isCollapsed || !recursive || toToggle.length === 0) {\n\t\t\t\t\t\t\t\ttoToggle.push(region);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfoldingModel.toggleCollapseState(toToggle);\n\t\t\t\t\t\tthis.reveal({ lineNumber, column: 1 });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(undefined, onUnexpectedError);\n\t}\n\n\tpublic reveal(position: IPosition): void {\n\t\tthis.editor.revealPositionInCenterIfOutsideViewport(position, ScrollType.Smooth);\n\t}\n}\n\nabstract class FoldingAction<T> extends EditorAction {\n\n\tabstract invoke(foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor, args: T): void;\n\n\tpublic override runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: T): void | Promise<void> {\n\t\tlet foldingController = FoldingController.get(editor);\n\t\tif (!foldingController) {\n\t\t\treturn;\n\t\t}\n\t\tlet foldingModelPromise = foldingController.getFoldingModel();\n\t\tif (foldingModelPromise) {\n\t\t\tthis.reportTelemetry(accessor, editor);\n\t\t\treturn foldingModelPromise.then(foldingModel => {\n\t\t\t\tif (foldingModel) {\n\t\t\t\t\tthis.invoke(foldingController, foldingModel, editor, args);\n\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\tif (selection) {\n\t\t\t\t\t\tfoldingController.reveal(selection.getStartPosition());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected getSelectedLines(editor: ICodeEditor) {\n\t\tlet selections = editor.getSelections();\n\t\treturn selections ? selections.map(s => s.startLineNumber) : [];\n\t}\n\n\tprotected getLineNumbers(args: FoldingArguments, editor: ICodeEditor) {\n\t\tif (args && args.selectionLines) {\n\t\t\treturn args.selectionLines.map(l => l + 1); // to 0-bases line numbers\n\t\t}\n\t\treturn this.getSelectedLines(editor);\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, _editor: ICodeEditor): void {\n\t}\n}\n\ninterface FoldingArguments {\n\tlevels?: number;\n\tdirection?: 'up' | 'down';\n\tselectionLines?: number[];\n}\n\nfunction foldingArgumentsConstraint(args: any) {\n\tif (!types.isUndefined(args)) {\n\t\tif (!types.isObject(args)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst foldingArgs: FoldingArguments = args;\n\t\tif (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nclass UnfoldAction extends FoldingAction<FoldingArguments> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.unfold',\n\t\t\tlabel: nls.localize('unfoldAction.label', \"Unfold\"),\n\t\t\talias: 'Unfold',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_CLOSE_SQUARE_BRACKET,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.US_CLOSE_SQUARE_BRACKET\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Unfold the content in the editor',\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Unfold editor argument',\n\t\t\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\n\t\t\t\t\t\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\n\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t`,\n\t\t\t\t\t\tconstraint: foldingArgumentsConstraint,\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'levels': {\n\t\t\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t\t\t'default': 1\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'direction': {\n\t\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t\t'enum': ['up', 'down'],\n\t\t\t\t\t\t\t\t\t'default': 'down'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'selectionLines': {\n\t\t\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor, args: FoldingArguments): void {\n\t\tlet levels = args && args.levels || 1;\n\t\tlet lineNumbers = this.getLineNumbers(args, editor);\n\t\tif (args && args.direction === 'up') {\n\t\t\tsetCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\n\t\t} else {\n\t\t\tsetCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\n\t\t}\n\t}\n}\n\nclass UnFoldRecursivelyAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.unfoldRecursively',\n\t\t\tlabel: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\n\t\t\talias: 'Unfold Recursively',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_CLOSE_SQUARE_BRACKET),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor, _args: any): void {\n\t\tsetCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\n\t}\n}\n\nclass FoldAction extends FoldingAction<FoldingArguments> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.fold',\n\t\t\tlabel: nls.localize('foldAction.label', \"Fold\"),\n\t\t\talias: 'Fold',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_OPEN_SQUARE_BRACKET,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.US_OPEN_SQUARE_BRACKET\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Fold the content in the editor',\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Fold editor argument',\n\t\t\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t\t* 'levels': Number of levels to fold.\n\t\t\t\t\t\t\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\n\t\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\n\t\t\t\t\t\t`,\n\t\t\t\t\t\tconstraint: foldingArgumentsConstraint,\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'levels': {\n\t\t\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'direction': {\n\t\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t\t'enum': ['up', 'down'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'selectionLines': {\n\t\t\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor, args: FoldingArguments): void {\n\t\tlet lineNumbers = this.getLineNumbers(args, editor);\n\n\t\tconst levels = args && args.levels;\n\t\tconst direction = args && args.direction;\n\n\t\tif (typeof levels !== 'number' && typeof direction !== 'string') {\n\t\t\t// fold the region at the location or if already collapsed, the first uncollapsed parent instead.\n\t\t\tsetCollapseStateUp(foldingModel, true, lineNumbers);\n\t\t} else {\n\t\t\tif (direction === 'up') {\n\t\t\t\tsetCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\n\t\t\t} else {\n\t\t\t\tsetCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nclass ToggleFoldAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.toggleFold',\n\t\t\tlabel: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\n\t\t\talias: 'Toggle Fold',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_L),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tlet selectedLines = this.getSelectedLines(editor);\n\t\ttoggleCollapseState(foldingModel, 1, selectedLines);\n\t}\n}\n\n\nclass FoldRecursivelyAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.foldRecursively',\n\t\t\tlabel: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\n\t\t\talias: 'Fold Recursively',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_OPEN_SQUARE_BRACKET),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tlet selectedLines = this.getSelectedLines(editor);\n\t\tsetCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\n\t}\n}\n\nclass FoldAllBlockCommentsAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.foldAllBlockComments',\n\t\t\tlabel: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\n\t\t\talias: 'Fold All Block Comments',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_SLASH),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tif (foldingModel.regions.hasTypes()) {\n\t\t\tsetCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\n\t\t} else {\n\t\t\tconst editorModel = editor.getModel();\n\t\t\tif (!editorModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\n\t\t\tif (comments && comments.blockCommentStartToken) {\n\t\t\t\tlet regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\n\t\t\t\tsetCollapseStateForMatchingLines(foldingModel, regExp, true);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass FoldAllRegionsAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.foldAllMarkerRegions',\n\t\t\tlabel: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\n\t\t\talias: 'Fold All Regions',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_8),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tif (foldingModel.regions.hasTypes()) {\n\t\t\tsetCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\n\t\t} else {\n\t\t\tconst editorModel = editor.getModel();\n\t\t\tif (!editorModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\n\t\t\tif (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n\t\t\t\tlet regExp = new RegExp(foldingRules.markers.start);\n\t\t\t\tsetCollapseStateForMatchingLines(foldingModel, regExp, true);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass UnfoldAllRegionsAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.unfoldAllMarkerRegions',\n\t\t\tlabel: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\n\t\t\talias: 'Unfold All Regions',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_9),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tif (foldingModel.regions.hasTypes()) {\n\t\t\tsetCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\n\t\t} else {\n\t\t\tconst editorModel = editor.getModel();\n\t\t\tif (!editorModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\n\t\t\tif (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n\t\t\t\tlet regExp = new RegExp(foldingRules.markers.start);\n\t\t\t\tsetCollapseStateForMatchingLines(foldingModel, regExp, false);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass FoldAllRegionsExceptAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.foldAllExcept',\n\t\t\tlabel: nls.localize('foldAllExcept.label', \"Fold All Regions Except Selected\"),\n\t\t\talias: 'Fold All Regions Except Selected',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_MINUS),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tlet selectedLines = this.getSelectedLines(editor);\n\t\tsetCollapseStateForRest(foldingModel, true, selectedLines);\n\t}\n\n}\n\nclass UnfoldAllRegionsExceptAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.unfoldAllExcept',\n\t\t\tlabel: nls.localize('unfoldAllExcept.label', \"Unfold All Regions Except Selected\"),\n\t\t\talias: 'Unfold All Regions Except Selected',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.US_EQUAL),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tlet selectedLines = this.getSelectedLines(editor);\n\t\tsetCollapseStateForRest(foldingModel, false, selectedLines);\n\t}\n}\n\nclass FoldAllAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.foldAll',\n\t\t\tlabel: nls.localize('foldAllAction.label', \"Fold All\"),\n\t\t\talias: 'Fold All',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_0),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, _editor: ICodeEditor): void {\n\t\tsetCollapseStateLevelsDown(foldingModel, true);\n\t}\n}\n\nclass UnfoldAllAction extends FoldingAction<void> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.unfoldAll',\n\t\t\tlabel: nls.localize('unfoldAllAction.label', \"Unfold All\"),\n\t\t\talias: 'Unfold All',\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_J),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, _editor: ICodeEditor): void {\n\t\tsetCollapseStateLevelsDown(foldingModel, false);\n\t}\n}\n\nclass FoldLevelAction extends FoldingAction<void> {\n\tprivate static readonly ID_PREFIX = 'editor.foldLevel';\n\tpublic static readonly ID = (level: number) => FoldLevelAction.ID_PREFIX + level;\n\n\tprivate getFoldingLevel() {\n\t\treturn parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\n\t}\n\n\tinvoke(_foldingController: FoldingController, foldingModel: FoldingModel, editor: ICodeEditor): void {\n\t\tsetCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\n\t}\n}\n\nregisterEditorContribution(FoldingController.ID, FoldingController);\nregisterEditorAction(UnfoldAction);\nregisterEditorAction(UnFoldRecursivelyAction);\nregisterEditorAction(FoldAction);\nregisterEditorAction(FoldRecursivelyAction);\nregisterEditorAction(FoldAllAction);\nregisterEditorAction(UnfoldAllAction);\nregisterEditorAction(FoldAllBlockCommentsAction);\nregisterEditorAction(FoldAllRegionsAction);\nregisterEditorAction(UnfoldAllRegionsAction);\nregisterEditorAction(FoldAllRegionsExceptAction);\nregisterEditorAction(UnfoldAllRegionsExceptAction);\nregisterEditorAction(ToggleFoldAction);\n\nfor (let i = 1; i <= 7; i++) {\n\tregisterInstantiatedEditorAction(\n\t\tnew FoldLevelAction({\n\t\t\tid: FoldLevelAction.ID(i),\n\t\t\tlabel: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\n\t\t\talias: `Fold Level ${i}`,\n\t\t\tprecondition: CONTEXT_FOLDING_ENABLED,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | (KeyCode.KEY_0 + i)),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t})\n\t);\n}\n\nexport const foldBackgroundBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hc: null }, nls.localize('foldBackgroundBackground', \"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFoldForeground = registerColor('editorGutter.foldingControlForeground', { dark: iconForeground, light: iconForeground, hc: iconForeground }, nls.localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));\n\nregisterThemingParticipant((theme, collector) => {\n\tconst foldBackground = theme.getColor(foldBackgroundBackground);\n\tif (foldBackground) {\n\t\tcollector.addRule(`.monaco-editor .folded-background { background-color: ${foldBackground}; }`);\n\t}\n\n\tconst editorFoldColor = theme.getColor(editorFoldForeground);\n\tif (editorFoldColor) {\n\t\tcollector.addRule(`\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingExpandedIcon)},\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingCollapsedIcon)} {\n\t\t\tcolor: ${editorFoldColor} !important;\n\t\t}\n\t\t`);\n\t}\n});\n"]}