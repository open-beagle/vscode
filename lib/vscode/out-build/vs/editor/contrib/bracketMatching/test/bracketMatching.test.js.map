{"version":3,"file":"bracketMatching.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/bracketMatching/test/bracketMatching.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { LanguageIdentifier } from 'vs/editor/common/modes';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { BracketMatchingController } from 'vs/editor/contrib/bracketMatching/bracketMatching';\nimport { withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { MockMode } from 'vs/editor/test/common/mocks/mockMode';\n\nsuite('bracket matching', () => {\n\tclass BracketMode extends MockMode {\n\n\t\tprivate static readonly _id = new LanguageIdentifier('bracketMode', 3);\n\n\t\tconstructor() {\n\t\t\tsuper(BracketMode._id);\n\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {\n\t\t\t\tbrackets: [\n\t\t\t\t\t['{', '}'],\n\t\t\t\t\t['[', ']'],\n\t\t\t\t\t['(', ')'],\n\t\t\t\t]\n\t\t\t}));\n\t\t}\n\t}\n\n\ttest('issue #183: jump to matching bracket position', () => {\n\t\tlet mode = new BracketMode();\n\t\tlet model = createTextModel('var x = (3 + (5-7)) + ((5+3)+5);', undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tlet bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\t\t\t// start on closing bracket\n\t\t\teditor.setPosition(new Position(1, 20));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 9));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 19));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 9));\n\n\t\t\t// start on opening bracket\n\t\t\teditor.setPosition(new Position(1, 23));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 31));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 23));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 31));\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('Jump to next bracket', () => {\n\t\tlet mode = new BracketMode();\n\t\tlet model = createTextModel('var x = (3 + (5-7)); y();', undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tlet bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\t\t\t// start position between brackets\n\t\t\teditor.setPosition(new Position(1, 16));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 18));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 14));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 18));\n\n\t\t\t// skip brackets in comments\n\t\t\teditor.setPosition(new Position(1, 21));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 23));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 24));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 23));\n\n\t\t\t// do not break if no brackets are available\n\t\t\teditor.setPosition(new Position(1, 26));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 26));\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('Select to next bracket', () => {\n\t\tlet mode = new BracketMode();\n\t\tlet model = createTextModel('var x = (3 + (5-7)); y();', undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tlet bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\n\t\t\t// start position in open brackets\n\t\t\teditor.setPosition(new Position(1, 9));\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 20));\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 9, 1, 20));\n\n\t\t\t// start position in close brackets\n\t\t\teditor.setPosition(new Position(1, 20));\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 20));\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 9, 1, 20));\n\n\t\t\t// start position between brackets\n\t\t\teditor.setPosition(new Position(1, 16));\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 19));\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 14, 1, 19));\n\n\t\t\t// start position outside brackets\n\t\t\teditor.setPosition(new Position(1, 21));\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 25));\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 23, 1, 25));\n\n\t\t\t// do not break if no brackets are available\n\t\t\teditor.setPosition(new Position(1, 26));\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 26));\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 26, 1, 26));\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('issue #1772: jump to enclosing brackets', () => {\n\t\tconst text = [\n\t\t\t'const x = {',\n\t\t\t'    something: [0, 1, 2],',\n\t\t\t'    another: true,',\n\t\t\t'    somethingmore: [0, 2, 4]',\n\t\t\t'};',\n\t\t].join('\\n');\n\t\tconst mode = new BracketMode();\n\t\tconst model = createTextModel(text, undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tconst bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\t\t\teditor.setPosition(new Position(3, 5));\n\t\t\tbracketMatchingController.jumpToBracket();\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(5, 1, 5, 1));\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('issue #43371: argument to not select brackets', () => {\n\t\tconst text = [\n\t\t\t'const x = {',\n\t\t\t'    something: [0, 1, 2],',\n\t\t\t'    another: true,',\n\t\t\t'    somethingmore: [0, 2, 4]',\n\t\t\t'};',\n\t\t].join('\\n');\n\t\tconst mode = new BracketMode();\n\t\tconst model = createTextModel(text, undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tconst bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\t\t\teditor.setPosition(new Position(3, 5));\n\t\t\tbracketMatchingController.selectToBracket(false);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 12, 5, 1));\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('issue #45369: Select to Bracket with multicursor', () => {\n\t\tlet mode = new BracketMode();\n\t\tlet model = createTextModel('{  }   {   }   { }', undefined, mode.getLanguageIdentifier());\n\n\t\twithTestCodeEditor(null, { model: model }, (editor) => {\n\t\t\tlet bracketMatchingController = editor.registerAndInstantiateContribution(BracketMatchingController.ID, BracketMatchingController);\n\n\t\t\t// cursors inside brackets become selections of the entire bracket contents\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 3, 1, 3),\n\t\t\t\tnew Selection(1, 10, 1, 10),\n\t\t\t\tnew Selection(1, 17, 1, 17)\n\t\t\t]);\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getSelections(), [\n\t\t\t\tnew Selection(1, 1, 1, 5),\n\t\t\t\tnew Selection(1, 8, 1, 13),\n\t\t\t\tnew Selection(1, 16, 1, 19)\n\t\t\t]);\n\n\t\t\t// cursors to the left of bracket pairs become selections of the entire pair\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t\tnew Selection(1, 6, 1, 6),\n\t\t\t\tnew Selection(1, 14, 1, 14)\n\t\t\t]);\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getSelections(), [\n\t\t\t\tnew Selection(1, 1, 1, 5),\n\t\t\t\tnew Selection(1, 8, 1, 13),\n\t\t\t\tnew Selection(1, 16, 1, 19)\n\t\t\t]);\n\n\t\t\t// cursors just right of a bracket pair become selections of the entire pair\n\t\t\teditor.setSelections([\n\t\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t\tnew Selection(1, 13, 1, 13),\n\t\t\t\tnew Selection(1, 19, 1, 19)\n\t\t\t]);\n\t\t\tbracketMatchingController.selectToBracket(true);\n\t\t\tassert.deepStrictEqual(editor.getSelections(), [\n\t\t\t\tnew Selection(1, 1, 1, 5),\n\t\t\t\tnew Selection(1, 8, 1, 13),\n\t\t\t\tnew Selection(1, 16, 1, 19)\n\t\t\t]);\n\n\t\t\tbracketMatchingController.dispose();\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n});\n"]}