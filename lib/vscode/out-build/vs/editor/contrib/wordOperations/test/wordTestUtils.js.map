{"version":3,"file":"wordTestUtils.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/wordOperations/test/wordTestUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position } from 'vs/editor/common/core/position';\nimport { ITestCodeEditor, withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\n\nexport function deserializePipePositions(text: string): [string, Position[]] {\n\tlet resultText = '';\n\tlet lineNumber = 1;\n\tlet charIndex = 0;\n\tlet positions: Position[] = [];\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charAt(i);\n\t\tif (chr === '\\n') {\n\t\t\tresultText += chr;\n\t\t\tlineNumber++;\n\t\t\tcharIndex = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (chr === '|') {\n\t\t\tpositions.push(new Position(lineNumber, charIndex + 1));\n\t\t} else {\n\t\t\tresultText += chr;\n\t\t\tcharIndex++;\n\t\t}\n\t}\n\treturn [resultText, positions];\n}\n\nexport function serializePipePositions(text: string, positions: Position[]): string {\n\tpositions.sort(Position.compare);\n\tlet resultText = '';\n\tlet lineNumber = 1;\n\tlet charIndex = 0;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charAt(i);\n\t\tif (positions.length > 0 && positions[0].lineNumber === lineNumber && positions[0].column === charIndex + 1) {\n\t\t\tresultText += '|';\n\t\t\tpositions.shift();\n\t\t}\n\t\tresultText += chr;\n\t\tif (chr === '\\n') {\n\t\t\tlineNumber++;\n\t\t\tcharIndex = 0;\n\t\t} else {\n\t\t\tcharIndex++;\n\t\t}\n\t}\n\tif (positions.length > 0 && positions[0].lineNumber === lineNumber && positions[0].column === charIndex + 1) {\n\t\tresultText += '|';\n\t\tpositions.shift();\n\t}\n\tif (positions.length > 0) {\n\t\tthrow new Error(`Unexpected left over positions!!!`);\n\t}\n\treturn resultText;\n}\n\nexport function testRepeatedActionAndExtractPositions(text: string, initialPosition: Position, action: (editor: ITestCodeEditor) => void, record: (editor: ITestCodeEditor) => Position, stopCondition: (editor: ITestCodeEditor) => boolean): Position[] {\n\tlet actualStops: Position[] = [];\n\twithTestCodeEditor(text, {}, (editor) => {\n\t\teditor.setPosition(initialPosition);\n\t\twhile (true) {\n\t\t\taction(editor);\n\t\t\tactualStops.push(record(editor));\n\t\t\tif (stopCondition(editor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (actualStops.length > 1000) {\n\t\t\t\tthrow new Error(`Endless loop detected involving position ${editor.getPosition()}!`);\n\t\t\t}\n\t\t}\n\t});\n\treturn actualStops;\n}\n"]}