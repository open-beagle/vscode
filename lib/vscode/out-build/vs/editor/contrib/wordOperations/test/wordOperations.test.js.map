{"version":3,"file":"wordOperations.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/wordOperations/test/wordOperations.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { deserializePipePositions, serializePipePositions, testRepeatedActionAndExtractPositions } from 'vs/editor/contrib/wordOperations/test/wordTestUtils';\nimport { CursorWordEndLeft, CursorWordEndLeftSelect, CursorWordEndRight, CursorWordEndRightSelect, CursorWordLeft, CursorWordLeftSelect, CursorWordRight, CursorWordRightSelect, CursorWordStartLeft, CursorWordStartLeftSelect, CursorWordStartRight, CursorWordStartRightSelect, DeleteWordEndLeft, DeleteWordEndRight, DeleteWordLeft, DeleteWordRight, DeleteWordStartLeft, DeleteWordStartRight, CursorWordAccessibilityLeft, CursorWordAccessibilityLeftSelect, CursorWordAccessibilityRight, CursorWordAccessibilityRightSelect, DeleteInsideWord } from 'vs/editor/contrib/wordOperations/wordOperations';\nimport { withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { CoreEditingCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { ViewModel } from 'vs/editor/common/viewModel/viewModelImpl';\nimport { LanguageIdentifier } from 'vs/editor/common/modes';\nimport { MockMode } from 'vs/editor/test/common/mocks/mockMode';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\nsuite('WordOperations', () => {\n\n\tconst _cursorWordStartLeft = new CursorWordStartLeft();\n\tconst _cursorWordEndLeft = new CursorWordEndLeft();\n\tconst _cursorWordLeft = new CursorWordLeft();\n\tconst _cursorWordStartLeftSelect = new CursorWordStartLeftSelect();\n\tconst _cursorWordEndLeftSelect = new CursorWordEndLeftSelect();\n\tconst _cursorWordLeftSelect = new CursorWordLeftSelect();\n\tconst _cursorWordStartRight = new CursorWordStartRight();\n\tconst _cursorWordEndRight = new CursorWordEndRight();\n\tconst _cursorWordRight = new CursorWordRight();\n\tconst _cursorWordStartRightSelect = new CursorWordStartRightSelect();\n\tconst _cursorWordEndRightSelect = new CursorWordEndRightSelect();\n\tconst _cursorWordRightSelect = new CursorWordRightSelect();\n\tconst _cursorWordAccessibilityLeft = new CursorWordAccessibilityLeft();\n\tconst _cursorWordAccessibilityLeftSelect = new CursorWordAccessibilityLeftSelect();\n\tconst _cursorWordAccessibilityRight = new CursorWordAccessibilityRight();\n\tconst _cursorWordAccessibilityRightSelect = new CursorWordAccessibilityRightSelect();\n\tconst _deleteWordLeft = new DeleteWordLeft();\n\tconst _deleteWordStartLeft = new DeleteWordStartLeft();\n\tconst _deleteWordEndLeft = new DeleteWordEndLeft();\n\tconst _deleteWordRight = new DeleteWordRight();\n\tconst _deleteWordStartRight = new DeleteWordStartRight();\n\tconst _deleteWordEndRight = new DeleteWordEndRight();\n\tconst _deleteInsideWord = new DeleteInsideWord();\n\n\tfunction runEditorCommand(editor: ICodeEditor, command: EditorCommand): void {\n\t\tcommand.runEditorCommand(null, editor, null);\n\t}\n\tfunction cursorWordLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordLeftSelect : _cursorWordLeft);\n\t}\n\tfunction cursorWordAccessibilityLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordAccessibilityLeft : _cursorWordAccessibilityLeftSelect);\n\t}\n\tfunction cursorWordAccessibilityRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordAccessibilityRightSelect : _cursorWordAccessibilityRight);\n\t}\n\tfunction cursorWordStartLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordStartLeftSelect : _cursorWordStartLeft);\n\t}\n\tfunction cursorWordEndLeft(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordEndLeftSelect : _cursorWordEndLeft);\n\t}\n\tfunction cursorWordRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordRightSelect : _cursorWordRight);\n\t}\n\tfunction moveWordEndRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordEndRightSelect : _cursorWordEndRight);\n\t}\n\tfunction moveWordStartRight(editor: ICodeEditor, inSelectionMode: boolean = false): void {\n\t\trunEditorCommand(editor, inSelectionMode ? _cursorWordStartRightSelect : _cursorWordStartRight);\n\t}\n\tfunction deleteWordLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordLeft);\n\t}\n\tfunction deleteWordStartLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordStartLeft);\n\t}\n\tfunction deleteWordEndLeft(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordEndLeft);\n\t}\n\tfunction deleteWordRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordRight);\n\t}\n\tfunction deleteWordStartRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordStartRight);\n\t}\n\tfunction deleteWordEndRight(editor: ICodeEditor): void {\n\t\trunEditorCommand(editor, _deleteWordEndRight);\n\t}\n\tfunction deleteInsideWord(editor: ICodeEditor): void {\n\t\t_deleteInsideWord.run(null!, editor, null);\n\t}\n\n\ttest('cursorWordLeft - simple', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|    \\t|My |First |Line\\t ',\n\t\t\t'|\\t|My |Second |Line',\n\t\t\t'|    |Third |Line🐶',\n\t\t\t'|',\n\t\t\t'|1',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - with selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor) => {\n\t\t\teditor.setPosition(new Position(5, 2));\n\t\t\tcursorWordLeft(editor, true);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(5, 2, 5, 1));\n\t\t});\n\t});\n\n\ttest('cursorWordLeft - issue #832', () => {\n\t\tconst EXPECTED = ['|   |/* |Just |some   |more   |text |a|+= |3 |+|5-|3 |+ |7 |*/  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeft - issue #48046: Word selection doesn\\'t work as usual', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|deep.|object.|property',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 21),\n\t\t\ted => cursorWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordLeftSelect - issue #74369: cursorWordLeft and cursorWordLeftSelect do not behave consistently', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|this.|is.|a.|test',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 15),\n\t\t\ted => cursorWordLeft(ed, true),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordStartLeft', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['|   |/* |Just |some   |more   |text |a|+= |3 |+|5|-|3 |+ |7 |*/  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordStartLeft - issue #51119: regression makes VS compatibility impossible', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['|this|.|is|.|a|.|test'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #51275 - cursorWordStartLeft does not push undo/redo stack element', () => {\n\t\tfunction type(viewModel: ViewModel, text: string) {\n\t\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\t\tviewModel.type(text.charAt(i), 'keyboard');\n\t\t\t}\n\t\t}\n\n\t\twithTestCodeEditor('', {}, (editor, viewModel) => {\n\t\t\ttype(viewModel, 'foo bar baz');\n\t\t\tassert.strictEqual(editor.getValue(), 'foo bar baz');\n\n\t\t\tcursorWordStartLeft(editor);\n\t\t\tcursorWordStartLeft(editor);\n\t\t\ttype(viewModel, 'q');\n\n\t\t\tassert.strictEqual(editor.getValue(), 'foo qbar baz');\n\n\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\tassert.strictEqual(editor.getValue(), 'foo bar baz');\n\t\t});\n\t});\n\n\ttest('cursorWordEndLeft', () => {\n\t\tconst EXPECTED = ['|   /*| Just| some|   more|   text| a|+=| 3| +|5|-|3| +| 7| */|  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordEndLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - simple', () => {\n\t\tconst EXPECTED = [\n\t\t\t'    \\tMy| First| Line|\\t |',\n\t\t\t'\\tMy| Second| Line|',\n\t\t\t'    Third| Line🐶|',\n\t\t\t'|',\n\t\t\t'1|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(5, 2))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\teditor.setPosition(new Position(1, 1));\n\t\t\tcursorWordRight(editor, true);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 1, 8));\n\t\t});\n\t});\n\n\ttest('cursorWordRight - issue #832', () => {\n\t\tconst EXPECTED = [\n\t\t\t'   /*| Just| some|   more|   text| a|+=| 3| +5|-3| +| 7| */|  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordRight - issue #41199', () => {\n\t\tconst EXPECTED = [\n\t\t\t'console|.log|(err|)|',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 17))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('moveWordEndRight', () => {\n\t\tconst EXPECTED = [\n\t\t\t'   /*| Just| some|   more|   text| a|+=| 3| +5|-3| +| 7| */|  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordEndRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('moveWordStartRight', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = [\n\t\t\t'   |/* |Just |some   |more   |text |a|+= |3 |+|5|-|3 |+ |7 |*/  |',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #51119: cursorWordStartRight regression makes VS compatibility impossible', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['this|.|is|.|a|.|test|'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 15))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('issue #64810: cursorWordStartRight skips first word after newline', () => {\n\t\t// This is the behaviour observed in Visual Studio, please do not touch test\n\t\tconst EXPECTED = ['Hello |World|', '|Hei |mailman|'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => moveWordStartRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(2, 12))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordAccessibilityLeft', () => {\n\t\tconst EXPECTED = ['|   /* |Just |some   |more   |text |a+= |3 +|5-|3 + |7 */  '].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 1000),\n\t\t\ted => cursorWordAccessibilityLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 1))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('cursorWordAccessibilityRight', () => {\n\t\tconst EXPECTED = ['   /* |Just |some   |more   |text |a+= |3 +|5-|3 + |7 */  |'].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => cursorWordAccessibilityRight(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getPosition()!.equals(new Position(1, 50))\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordLeft for non-empty selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setSelection(new Selection(3, 7, 3, 9));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Thd Line🐶');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 7));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor at beginning of document', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 1));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy First Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 1));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor at end of whitespace', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(3, 11));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Line🐶');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor just behind a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 11));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(2), '\\tMy  Line');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(2, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft for cursor inside of a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 12));\n\t\t\tdeleteWordLeft(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy st Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 9));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for non-empty selection', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setSelection(new Selection(3, 7, 3, 9));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), '    Thd Line🐶');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 7));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor at end of document', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(5, 3));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(5), '1');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(5, 2));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor at beggining of whitespace', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(3, 1));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(3), 'Third Line🐶');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(3, 1));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor just before a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 5));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(2), '\\tMy  Line');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(2, 5));\n\t\t});\n\t});\n\n\ttest('deleteWordRight for cursor inside of a word', () => {\n\t\twithTestCodeEditor([\n\t\t\t'    \\tMy First Line\\t ',\n\t\t\t'\\tMy Second Line',\n\t\t\t'    Third Line🐶',\n\t\t\t'',\n\t\t\t'1',\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 11));\n\t\t\tdeleteWordRight(editor);\n\t\t\tassert.strictEqual(model.getLineContent(1), '    \\tMy Fi Line\\t ');\n\t\t\tassert.deepStrictEqual(editor.getPosition(), new Position(1, 11));\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #832', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   |/* |Just |some |text |a|+= |3 |+|5 |*/|  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordStartLeft', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   |/* |Just |some |text |a|+= |3 |+|5 |*/  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordStartLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordEndLeft', () => {\n\t\tconst EXPECTED = [\n\t\t\t'|   /*| Just| some| text| a|+=| 3| +|5| */|  ',\n\t\t].join('\\n');\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1000, 10000),\n\t\t\ted => deleteWordEndLeft(ed),\n\t\t\ted => ed.getPosition()!,\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordLeft - issue #24947', () => {\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordStartLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\n\t\twithTestCodeEditor([\n\t\t\t'{',\n\t\t\t'}'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordEndLeft(editor); assert.strictEqual(model.getLineContent(1), '{}');\n\t\t});\n\t});\n\n\ttest('deleteWordRight - issue #832', () => {\n\t\tconst EXPECTED = '   |/*| Just| some| text| a|+=| 3| +|5|-|3| */|  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordStartRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordStartRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordEndRight - issue #3882', () => {\n\t\twithTestCodeEditor([\n\t\t\t'public void Add( int x,',\n\t\t\t'                 int y )'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 24));\n\t\t\tdeleteWordEndRight(editor); assert.strictEqual(model.getLineContent(1), 'public void Add( int x,int y )', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordStartRight', () => {\n\t\tconst EXPECTED = '   |/* |Just |some |text |a|+= |3 |+|5|-|3 |*/  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordStartRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordEndRight', () => {\n\t\tconst EXPECTED = '   /*| Just| some| text| a|+=| 3| +|5|-|3| */|  |';\n\t\tconst [text,] = deserializePipePositions(EXPECTED);\n\t\tconst actualStops = testRepeatedActionAndExtractPositions(\n\t\t\ttext,\n\t\t\tnew Position(1, 1),\n\t\t\ted => deleteWordEndRight(ed),\n\t\t\ted => new Position(1, text.length - ed.getValue().length + 1),\n\t\t\ted => ed.getValue().length === 0\n\t\t);\n\t\tconst actual = serializePipePositions(text, actualStops);\n\t\tassert.deepStrictEqual(actual, EXPECTED);\n\t});\n\n\ttest('deleteWordRight - issue #3882 (1): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'A line with text.',\n\t\t\t'   And another one'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 18));\n\t\t\tdeleteWordRight(editor); assert.strictEqual(model.getLineContent(1), 'A line with text.And another one', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #3882 (2): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'A line with text.',\n\t\t\t'   And another one'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteWordLeft(editor); assert.strictEqual(model.getLineContent(1), 'A line with text.   And another one', '001');\n\t\t});\n\t});\n\n\ttest('deleteWordLeft - issue #91855: Matching (quote, bracket, paren) doesn\\'t get deleted when hitting Ctrl+Backspace', () => {\n\t\tconst languageId = new LanguageIdentifier('myTestMode', 5);\n\t\tclass TestMode extends MockMode {\n\t\t\tconstructor() {\n\t\t\t\tsuper(languageId);\n\t\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {\n\t\t\t\t\tautoClosingPairs: [\n\t\t\t\t\t\t{ open: '\\\"', close: '\\\"' }\n\t\t\t\t\t]\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tconst mode = new TestMode();\n\t\tconst model = createTextModel('a \"\"', undefined, languageId);\n\n\t\twithTestCodeEditor(null, {\n\t\t\tmodel,\n\t\t\tautoClosingDelete: 'always'\n\t\t}, (editor, _) => {\n\t\t\teditor.setPosition(new Position(1, 4));\n\t\t\tdeleteWordLeft(editor); assert.strictEqual(model.getLineContent(1), 'a ');\n\t\t});\n\n\t\tmodel.dispose();\n\t\tmode.dispose();\n\t});\n\n\ttest('deleteInsideWord - empty line', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Line1',\n\t\t\t'',\n\t\t\t'Line2'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(2, 1));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Line1\\nLine2');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 1', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just  some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Justsome text.');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 2', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just     some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Justsome text.');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in whitespace 3', () => {\n\t\twithTestCodeEditor([\n\t\t\t'Just     \"some text.'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 6));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'Just\"some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '\"some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'some text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'text.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '.');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in non-words', () => {\n\t\twithTestCodeEditor([\n\t\t\t'x=3+4+5+6'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=3+45+6');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=3++6');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=36');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x=');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'x');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in words 1', () => {\n\t\twithTestCodeEditor([\n\t\t\t'This is interesting'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This interesting');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n\n\ttest('deleteInsideWord - in words 2', () => {\n\t\twithTestCodeEditor([\n\t\t\t'This  is  interesting'\n\t\t], {}, (editor, _) => {\n\t\t\tconst model = editor.getModel()!;\n\t\t\teditor.setPosition(new Position(1, 7));\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This  interesting');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), 'This');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t\tdeleteInsideWord(editor);\n\t\t\tassert.strictEqual(model.getValue(), '');\n\t\t});\n\t});\n});\n"]}