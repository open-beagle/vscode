{"version":3,"sources":["vs/editor/contrib/wordOperations/wordOperations.ts"],"names":[],"mappings":"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","file":"wordOperations.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, ICommandOptions, ServicesAccessor, registerEditorCommand, EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ReplaceCommand } from 'vs/editor/common/commands/replaceCommand';\nimport { CursorState } from 'vs/editor/common/controller/cursorCommon';\nimport { CursorChangeReason } from 'vs/editor/common/controller/cursorEvents';\nimport { DeleteWordContext, WordNavigationType, WordOperations } from 'vs/editor/common/controller/cursorWordOperations';\nimport { WordCharacterClassifier, getMapForWordSeparators } from 'vs/editor/common/controller/wordCharacterClassifier';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from 'vs/platform/accessibility/common/accessibility';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { EditorOption, EditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { IsWindowsContext } from 'vs/platform/contextkey/common/contextkeys';\n\nexport interface MoveWordOptions extends ICommandOptions {\n\tinSelectionMode: boolean;\n\twordNavigationType: WordNavigationType;\n}\n\nexport abstract class MoveWordCommand extends EditorCommand {\n\n\tprivate readonly _inSelectionMode: boolean;\n\tprivate readonly _wordNavigationType: WordNavigationType;\n\n\tconstructor(opts: MoveWordOptions) {\n\t\tsuper(opts);\n\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\tthis._wordNavigationType = opts.wordNavigationType;\n\t}\n\n\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\n\t\tconst result = selections.map((sel) => {\n\t\t\tconst inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\n\t\t\tconst outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);\n\t\t\treturn this._moveTo(sel, outPosition, this._inSelectionMode);\n\t\t});\n\n\t\tmodel.pushStackElement();\n\t\teditor._getViewModel().setCursorStates('moveWordCommand', CursorChangeReason.Explicit, result.map(r => CursorState.fromModelSelection(r)));\n\t\tif (result.length === 1) {\n\t\t\tconst pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\n\t\t\teditor.revealPosition(pos, ScrollType.Smooth);\n\t\t}\n\t}\n\n\tprivate _moveTo(from: Selection, to: Position, inSelectionMode: boolean): Selection {\n\t\tif (inSelectionMode) {\n\t\t\t// move just position\n\t\t\treturn new Selection(\n\t\t\t\tfrom.selectionStartLineNumber,\n\t\t\t\tfrom.selectionStartColumn,\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column\n\t\t\t);\n\t\t} else {\n\t\t\t// move everything\n\t\t\treturn new Selection(\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column,\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected abstract _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position;\n}\n\nexport class WordLeftCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\n\t}\n}\n\nexport class WordRightCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordStartLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStartFast,\n\t\t\tid: 'cursorWordLeft',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordStartLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStartFast,\n\t\t\tid: 'cursorWordLeftSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordStartRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndRight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordStartRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndRightSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordAccessibilityRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport interface DeleteWordOptions extends ICommandOptions {\n\twhitespaceHeuristics: boolean;\n\twordNavigationType: WordNavigationType;\n}\n\nexport abstract class DeleteWordCommand extends EditorCommand {\n\tprivate readonly _whitespaceHeuristics: boolean;\n\tprivate readonly _wordNavigationType: WordNavigationType;\n\n\tconstructor(opts: DeleteWordOptions) {\n\t\tsuper(opts);\n\t\tthis._whitespaceHeuristics = opts.whitespaceHeuristics;\n\t\tthis._wordNavigationType = opts.wordNavigationType;\n\t}\n\n\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\t\tconst autoClosingBrackets = editor.getOption(EditorOption.autoClosingBrackets);\n\t\tconst autoClosingQuotes = editor.getOption(EditorOption.autoClosingQuotes);\n\t\tconst autoClosingPairs = LanguageConfigurationRegistry.getAutoClosingPairs(model.getLanguageIdentifier().id);\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tconst commands = selections.map((sel) => {\n\t\t\tconst deleteRange = this._delete({\n\t\t\t\twordSeparators,\n\t\t\t\tmodel,\n\t\t\t\tselection: sel,\n\t\t\t\twhitespaceHeuristics: this._whitespaceHeuristics,\n\t\t\t\tautoClosingDelete: editor.getOption(EditorOption.autoClosingDelete),\n\t\t\t\tautoClosingBrackets,\n\t\t\t\tautoClosingQuotes,\n\t\t\t\tautoClosingPairs,\n\t\t\t\tautoClosedCharacters: viewModel.getCursorAutoClosedCharacters()\n\t\t\t}, this._wordNavigationType);\n\t\t\treturn new ReplaceCommand(deleteRange, '');\n\t\t});\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeCommands(this.id, commands);\n\t\teditor.pushUndoStop();\n\t}\n\n\tprotected abstract _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range;\n}\n\nexport class DeleteWordLeftCommand extends DeleteWordCommand {\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tlet r = WordOperations.deleteWordLeft(ctx, wordNavigationType);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\treturn new Range(1, 1, 1, 1);\n\t}\n}\n\nexport class DeleteWordRightCommand extends DeleteWordCommand {\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tlet r = WordOperations.deleteWordRight(ctx, wordNavigationType);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\tconst lineCount = ctx.model.getLineCount();\n\t\tconst maxColumn = ctx.model.getLineMaxColumn(lineCount);\n\t\treturn new Range(lineCount, maxColumn, lineCount, maxColumn);\n\t}\n}\n\nexport class DeleteWordStartLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordStartLeft',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordEndLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordEndLeft',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordLeft',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.Backspace },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class DeleteWordStartRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordStartRight',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordEndRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordEndRight',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordRight',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Delete,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.Delete },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class DeleteInsideWord extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'deleteInsideWord',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tlabel: nls.localize('deleteInsideWord', \"Delete Word\"),\n\t\t\talias: 'Delete Word'\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\n\t\tconst commands = selections.map((sel) => {\n\t\t\tconst deleteRange = WordOperations.deleteInsideWord(wordSeparators, model, sel);\n\t\t\treturn new ReplaceCommand(deleteRange, '');\n\t\t});\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeCommands(this.id, commands);\n\t\teditor.pushUndoStop();\n\t}\n}\n\nregisterEditorCommand(new CursorWordStartLeft());\nregisterEditorCommand(new CursorWordEndLeft());\nregisterEditorCommand(new CursorWordLeft());\nregisterEditorCommand(new CursorWordStartLeftSelect());\nregisterEditorCommand(new CursorWordEndLeftSelect());\nregisterEditorCommand(new CursorWordLeftSelect());\nregisterEditorCommand(new CursorWordStartRight());\nregisterEditorCommand(new CursorWordEndRight());\nregisterEditorCommand(new CursorWordRight());\nregisterEditorCommand(new CursorWordStartRightSelect());\nregisterEditorCommand(new CursorWordEndRightSelect());\nregisterEditorCommand(new CursorWordRightSelect());\nregisterEditorCommand(new CursorWordAccessibilityLeft());\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\nregisterEditorCommand(new CursorWordAccessibilityRight());\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\nregisterEditorCommand(new DeleteWordStartLeft());\nregisterEditorCommand(new DeleteWordEndLeft());\nregisterEditorCommand(new DeleteWordLeft());\nregisterEditorCommand(new DeleteWordStartRight());\nregisterEditorCommand(new DeleteWordEndRight());\nregisterEditorCommand(new DeleteWordRight());\nregisterEditorAction(DeleteInsideWord);\n"]}