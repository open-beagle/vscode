{"version":3,"sources":["vs/editor/contrib/message/messageController.ts"],"names":[],"mappings":"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","file":"messageController.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./messageController';\nimport * as nls from 'vs/nls';\nimport { TimeoutTimer } from 'vs/base/common/async';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IDisposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { registerEditorContribution, EditorCommand, registerEditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditor, IContentWidget, IContentWidgetPosition, ContentWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { IContextKeyService, RawContextKey, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport class MessageController implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.messageController';\n\n\tstatic readonly MESSAGE_VISIBLE = new RawContextKey<boolean>('messageVisible', false, nls.localize('messageVisible', 'Whether the editor is currently showing an inline message'));\n\n\tstatic get(editor: ICodeEditor): MessageController {\n\t\treturn editor.getContribution<MessageController>(MessageController.ID);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _visible: IContextKey<boolean>;\n\tprivate readonly _messageWidget = new MutableDisposable<MessageWidget>();\n\tprivate readonly _messageListeners = new DisposableStore();\n\tprivate readonly _editorListener: IDisposable;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\n\t\tthis._editor = editor;\n\t\tthis._visible = MessageController.MESSAGE_VISIBLE.bindTo(contextKeyService);\n\t\tthis._editorListener = this._editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit());\n\t}\n\n\tdispose(): void {\n\t\tthis._editorListener.dispose();\n\t\tthis._messageListeners.dispose();\n\t\tthis._messageWidget.dispose();\n\t\tthis._visible.reset();\n\t}\n\n\tisVisible() {\n\t\treturn this._visible.get();\n\t}\n\n\tshowMessage(message: string, position: IPosition): void {\n\n\t\talert(message);\n\n\t\tthis._visible.set(true);\n\t\tthis._messageWidget.clear();\n\t\tthis._messageListeners.clear();\n\t\tthis._messageWidget.value = new MessageWidget(this._editor, position, message);\n\n\t\t// close on blur, cursor, model change, dispose\n\t\tthis._messageListeners.add(this._editor.onDidBlurEditorText(() => this.closeMessage()));\n\t\tthis._messageListeners.add(this._editor.onDidChangeCursorPosition(() => this.closeMessage()));\n\t\tthis._messageListeners.add(this._editor.onDidDispose(() => this.closeMessage()));\n\t\tthis._messageListeners.add(this._editor.onDidChangeModel(() => this.closeMessage()));\n\n\t\t// 3sec\n\t\tthis._messageListeners.add(new TimeoutTimer(() => this.closeMessage(), 3000));\n\n\t\t// close on mouse move\n\t\tlet bounds: Range;\n\t\tthis._messageListeners.add(this._editor.onMouseMove(e => {\n\t\t\t// outside the text area\n\t\t\tif (!e.target.position) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!bounds) {\n\t\t\t\t// define bounding box around position and first mouse occurance\n\t\t\t\tbounds = new Range(position.lineNumber - 3, 1, e.target.position.lineNumber + 3, 1);\n\t\t\t} else if (!bounds.containsPosition(e.target.position)) {\n\t\t\t\t// check if position is still in bounds\n\t\t\t\tthis.closeMessage();\n\t\t\t}\n\t\t}));\n\t}\n\n\tcloseMessage(): void {\n\t\tthis._visible.reset();\n\t\tthis._messageListeners.clear();\n\t\tif (this._messageWidget.value) {\n\t\t\tthis._messageListeners.add(MessageWidget.fadeOut(this._messageWidget.value));\n\t\t}\n\t}\n\n\tprivate _onDidAttemptReadOnlyEdit(): void {\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this._editor.getPosition());\n\t\t}\n\t}\n}\n\nconst MessageCommand = EditorCommand.bindToContribution<MessageController>(MessageController.get);\n\n\nregisterEditorCommand(new MessageCommand({\n\tid: 'leaveEditorMessage',\n\tprecondition: MessageController.MESSAGE_VISIBLE,\n\thandler: c => c.closeMessage(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tprimary: KeyCode.Escape\n\t}\n}));\n\nclass MessageWidget implements IContentWidget {\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow = true;\n\treadonly suppressMouseDown = false;\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _position: IPosition;\n\tprivate readonly _domNode: HTMLDivElement;\n\n\tstatic fadeOut(messageWidget: MessageWidget): IDisposable {\n\t\tlet handle: any;\n\t\tconst dispose = () => {\n\t\t\tmessageWidget.dispose();\n\t\t\tclearTimeout(handle);\n\t\t\tmessageWidget.getDomNode().removeEventListener('animationend', dispose);\n\t\t};\n\t\thandle = setTimeout(dispose, 110);\n\t\tmessageWidget.getDomNode().addEventListener('animationend', dispose);\n\t\tmessageWidget.getDomNode().classList.add('fadeOut');\n\t\treturn { dispose };\n\t}\n\n\tconstructor(editor: ICodeEditor, { lineNumber, column }: IPosition, text: string) {\n\n\t\tthis._editor = editor;\n\t\tthis._editor.revealLinesInCenterIfOutsideViewport(lineNumber, lineNumber, ScrollType.Smooth);\n\t\tthis._position = { lineNumber, column: column - 1 };\n\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.classList.add('monaco-editor-overlaymessage');\n\n\t\tconst anchorTop = document.createElement('div');\n\t\tanchorTop.classList.add('anchor', 'top');\n\t\tthis._domNode.appendChild(anchorTop);\n\n\t\tconst message = document.createElement('div');\n\t\tmessage.classList.add('message');\n\t\tmessage.textContent = text;\n\t\tthis._domNode.appendChild(message);\n\n\t\tconst anchorBottom = document.createElement('div');\n\t\tanchorBottom.classList.add('anchor', 'below');\n\t\tthis._domNode.appendChild(anchorBottom);\n\n\t\tthis._editor.addContentWidget(this);\n\t\tthis._domNode.classList.add('fadeIn');\n\t}\n\n\tdispose() {\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn 'messageoverlay';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition {\n\t\treturn { position: this._position, preference: [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW] };\n\t}\n\n\tafterRender(position: ContentWidgetPositionPreference | null): void {\n\t\tthis._domNode.classList.toggle('below', position === ContentWidgetPositionPreference.BELOW);\n\t}\n\n}\n\nregisterEditorContribution(MessageController.ID, MessageController);\n\nregisterThemingParticipant((theme, collector) => {\n\tconst border = theme.getColor(inputValidationInfoBorder);\n\tif (border) {\n\t\tlet borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.below { border-top-color: ${border}; }`);\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.top { border-bottom-color: ${border}; }`);\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { border: ${borderWidth}px solid ${border}; }`);\n\t}\n\tconst background = theme.getColor(inputValidationInfoBackground);\n\tif (background) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { background-color: ${background}; }`);\n\t}\n\tconst foreground = theme.getColor(inputValidationInfoForeground);\n\tif (foreground) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { color: ${foreground}; }`);\n\t}\n});\n"]}