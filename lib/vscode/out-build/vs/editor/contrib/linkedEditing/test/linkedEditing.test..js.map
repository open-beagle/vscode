{"version":3,"file":"linkedEditing.test..js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/linkedEditing/test/linkedEditing.test..ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Handler } from 'vs/editor/common/editorCommon';\nimport * as modes from 'vs/editor/common/modes';\nimport { LinkedEditingContribution } from 'vs/editor/contrib/linkedEditing/linkedEditing';\nimport { createTestCodeEditor, ITestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { CoreEditingCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/model/wordHelper';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\n\nconst mockFile = URI.parse('test:somefile.ttt');\nconst mockFileSelector = { scheme: 'test' };\nconst timeout = 30;\n\ninterface TestEditor {\n\tsetPosition(pos: Position): Promise<any>;\n\tsetSelection(sel: IRange): Promise<any>;\n\ttrigger(source: string | null | undefined, handlerId: string, payload: any): Promise<any>;\n\tundo(): void;\n\tredo(): void;\n}\n\nconst languageIdentifier = new modes.LanguageIdentifier('linkedEditingTestLangage', 74);\nLanguageConfigurationRegistry.register(languageIdentifier, {\n\twordPattern: /[a-zA-Z]+/\n});\n\nsuite('linked editing', () => {\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.clear();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tfunction createMockEditor(text: string | string[]): ITestCodeEditor {\n\t\tconst model = typeof text === 'string'\n\t\t\t? createTextModel(text, undefined, languageIdentifier, mockFile)\n\t\t\t: createTextModel(text.join('\\n'), undefined, languageIdentifier, mockFile);\n\n\t\tconst editor = createTestCodeEditor({ model });\n\t\tdisposables.add(model);\n\t\tdisposables.add(editor);\n\n\t\treturn editor;\n\t}\n\n\n\tfunction testCase(\n\t\tname: string,\n\t\tinitialState: { text: string | string[], responseWordPattern?: RegExp },\n\t\toperations: (editor: TestEditor) => Promise<void>,\n\t\texpectedEndText: string | string[]\n\t) {\n\t\ttest(name, async () => {\n\t\t\tdisposables.add(modes.LinkedEditingRangeProviderRegistry.register(mockFileSelector, {\n\t\t\t\tprovideLinkedEditingRanges(model: ITextModel, pos: IPosition) {\n\t\t\t\t\tconst wordAtPos = model.getWordAtPosition(pos);\n\t\t\t\t\tif (wordAtPos) {\n\t\t\t\t\t\tconst matches = model.findMatches(wordAtPos.word, false, false, true, USUAL_WORD_SEPARATORS, false);\n\t\t\t\t\t\treturn { ranges: matches.map(m => m.range), wordPattern: initialState.responseWordPattern };\n\t\t\t\t\t}\n\t\t\t\t\treturn { ranges: [], wordPattern: initialState.responseWordPattern };\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst editor = createMockEditor(initialState.text);\n\t\t\teditor.updateOptions({ linkedEditing: true });\n\t\t\tconst linkedEditingContribution = editor.registerAndInstantiateContribution(\n\t\t\t\tLinkedEditingContribution.ID,\n\t\t\t\tLinkedEditingContribution\n\t\t\t);\n\t\t\tlinkedEditingContribution.setDebounceDuration(0);\n\n\t\t\tconst testEditor: TestEditor = {\n\t\t\t\tsetPosition(pos: Position) {\n\t\t\t\t\teditor.setPosition(pos);\n\t\t\t\t\treturn linkedEditingContribution.currentUpdateTriggerPromise;\n\t\t\t\t},\n\t\t\t\tsetSelection(sel: IRange) {\n\t\t\t\t\teditor.setSelection(sel);\n\t\t\t\t\treturn linkedEditingContribution.currentUpdateTriggerPromise;\n\t\t\t\t},\n\t\t\t\ttrigger(source: string | null | undefined, handlerId: string, payload: any) {\n\t\t\t\t\teditor.trigger(source, handlerId, payload);\n\t\t\t\t\treturn linkedEditingContribution.currentSyncTriggerPromise;\n\t\t\t\t},\n\t\t\t\tundo() {\n\t\t\t\t\tCoreEditingCommands.Undo.runEditorCommand(null, editor, null);\n\t\t\t\t},\n\t\t\t\tredo() {\n\t\t\t\t\tCoreEditingCommands.Redo.runEditorCommand(null, editor, null);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tawait operations(testEditor);\n\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (typeof expectedEndText === 'string') {\n\t\t\t\t\t\tassert.strictEqual(editor.getModel()!.getValue(), expectedEndText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.strictEqual(editor.getModel()!.getValue(), expectedEndText.join('\\n'));\n\t\t\t\t\t}\n\t\t\t\t\tresolve();\n\t\t\t\t}, timeout);\n\t\t\t});\n\t\t});\n\t}\n\n\tconst state = {\n\t\ttext: '<ooo></ooo>'\n\t};\n\n\t/**\n\t * Simple insertion\n\t */\n\ttestCase('Simple insert - initial', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iooo></iooo>');\n\n\ttestCase('Simple insert - middle', state, async (editor) => {\n\t\tconst pos = new Position(1, 3);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<oioo></oioo>');\n\n\ttestCase('Simple insert - end', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<oooi></oooi>');\n\n\t/**\n\t * Simple insertion - end\n\t */\n\ttestCase('Simple insert end - initial', state, async (editor) => {\n\t\tconst pos = new Position(1, 8);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iooo></iooo>');\n\n\ttestCase('Simple insert end - middle', state, async (editor) => {\n\t\tconst pos = new Position(1, 9);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<oioo></oioo>');\n\n\ttestCase('Simple insert end - end', state, async (editor) => {\n\t\tconst pos = new Position(1, 11);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<oooi></oooi>');\n\n\t/**\n\t * Boundary insertion\n\t */\n\ttestCase('Simple insert - out of boundary', state, async (editor) => {\n\t\tconst pos = new Position(1, 1);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, 'i<ooo></ooo>');\n\n\ttestCase('Simple insert - out of boundary 2', state, async (editor) => {\n\t\tconst pos = new Position(1, 6);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<ooo>i</ooo>');\n\n\ttestCase('Simple insert - out of boundary 3', state, async (editor) => {\n\t\tconst pos = new Position(1, 7);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<ooo><i/ooo>');\n\n\ttestCase('Simple insert - out of boundary 4', state, async (editor) => {\n\t\tconst pos = new Position(1, 12);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<ooo></ooo>i');\n\n\t/**\n\t * Insert + Move\n\t */\n\ttestCase('Continuous insert', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iiooo></iiooo>');\n\n\ttestCase('Insert - move - insert', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t\tawait editor.setPosition(new Position(1, 4));\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<ioioo></ioioo>');\n\n\ttestCase('Insert - move - insert outside region', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t\tawait editor.setPosition(new Position(1, 7));\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iooo>i</iooo>');\n\n\t/**\n\t * Selection insert\n\t */\n\ttestCase('Selection insert - simple', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.setSelection(new Range(1, 2, 1, 3));\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<ioo></ioo>');\n\n\ttestCase('Selection insert - whole', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.setSelection(new Range(1, 2, 1, 5));\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<i></i>');\n\n\ttestCase('Selection insert - across boundary', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.setSelection(new Range(1, 1, 1, 3));\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, 'ioo></oo>');\n\n\t/**\n\t * @todo\n\t * Undefined behavior\n\t */\n\t// testCase('Selection insert - across two boundary', state, async (editor) => {\n\t// \tconst pos = new Position(1, 2);\n\t// \tawait editor.setPosition(pos);\n\t// \tawait linkedEditingContribution.updateLinkedUI(pos);\n\t// \tawait editor.setSelection(new Range(1, 4, 1, 9));\n\t// \tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t// }, '<ooioo>');\n\n\t/**\n\t * Break out behavior\n\t */\n\ttestCase('Breakout - type space', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: ' ' });\n\t}, '<ooo ></ooo>');\n\n\ttestCase('Breakout - type space then undo', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: ' ' });\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\ttestCase('Breakout - type space in middle', state, async (editor) => {\n\t\tconst pos = new Position(1, 4);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: ' ' });\n\t}, '<oo o></ooo>');\n\n\ttestCase('Breakout - paste content starting with space', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Paste, { text: ' i=\"i\"' });\n\t}, '<ooo i=\"i\"></ooo>');\n\n\ttestCase('Breakout - paste content starting with space then undo', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Paste, { text: ' i=\"i\"' });\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\ttestCase('Breakout - paste content starting with space in middle', state, async (editor) => {\n\t\tconst pos = new Position(1, 4);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Paste, { text: ' i' });\n\t}, '<oo io></ooo>');\n\n\t/**\n\t * Break out with custom provider wordPattern\n\t */\n\n\tconst state3 = {\n\t\t...state,\n\t\tresponseWordPattern: /[a-yA-Y]+/\n\t};\n\n\ttestCase('Breakout with stop pattern - insert', state3, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iooo></iooo>');\n\n\ttestCase('Breakout with stop pattern - insert stop char', state3, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'z' });\n\t}, '<zooo></ooo>');\n\n\ttestCase('Breakout with stop pattern - paste char', state3, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Paste, { text: 'z' });\n\t}, '<zooo></ooo>');\n\n\ttestCase('Breakout with stop pattern - paste string', state3, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Paste, { text: 'zo' });\n\t}, '<zoooo></ooo>');\n\n\ttestCase('Breakout with stop pattern - insert at end', state3, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'z' });\n\t}, '<oooz></ooo>');\n\n\tconst state4 = {\n\t\t...state,\n\t\tresponseWordPattern: /[a-eA-E]+/\n\t};\n\n\ttestCase('Breakout with stop pattern - insert stop char, respos', state4, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, '<iooo></ooo>');\n\n\t/**\n\t * Delete\n\t */\n\ttestCase('Delete - left char', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', 'deleteLeft', {});\n\t}, '<oo></oo>');\n\n\ttestCase('Delete - left char then undo', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', 'deleteLeft', {});\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\ttestCase('Delete - left word', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', 'deleteWordLeft', {});\n\t}, '<></>');\n\n\ttestCase('Delete - left word then undo', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', 'deleteWordLeft', {});\n\t\teditor.undo();\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\t/**\n\t * Todo: Fix test\n\t */\n\t// testCase('Delete - left all', state, async (editor) => {\n\t// \tconst pos = new Position(1, 3);\n\t// \tawait editor.setPosition(pos);\n\t// \tawait linkedEditingContribution.updateLinkedUI(pos);\n\t// \tawait editor.trigger('keyboard', 'deleteAllLeft', {});\n\t// }, '></>');\n\n\t/**\n\t * Todo: Fix test\n\t */\n\t// testCase('Delete - left all then undo', state, async (editor) => {\n\t// \tconst pos = new Position(1, 5);\n\t// \tawait editor.setPosition(pos);\n\t// \tawait linkedEditingContribution.updateLinkedUI(pos);\n\t// \tawait editor.trigger('keyboard', 'deleteAllLeft', {});\n\t// \teditor.undo();\n\t// }, '></ooo>');\n\n\ttestCase('Delete - left all then undo twice', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', 'deleteAllLeft', {});\n\t\teditor.undo();\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\ttestCase('Delete - selection', state, async (editor) => {\n\t\tconst pos = new Position(1, 5);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.setSelection(new Range(1, 2, 1, 3));\n\t\tawait editor.trigger('keyboard', 'deleteLeft', {});\n\t}, '<oo></oo>');\n\n\ttestCase('Delete - selection across boundary', state, async (editor) => {\n\t\tconst pos = new Position(1, 3);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.setSelection(new Range(1, 1, 1, 3));\n\t\tawait editor.trigger('keyboard', 'deleteLeft', {});\n\t}, 'oo></oo>');\n\n\t/**\n\t * Undo / redo\n\t */\n\ttestCase('Undo/redo - simple undo', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t\teditor.undo();\n\t\teditor.undo();\n\t}, '<ooo></ooo>');\n\n\ttestCase('Undo/redo - simple undo/redo', state, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t\teditor.undo();\n\t\teditor.redo();\n\t}, '<iooo></iooo>');\n\n\t/**\n\t * Multi line\n\t */\n\tconst state2 = {\n\t\ttext: [\n\t\t\t'<ooo>',\n\t\t\t'</ooo>'\n\t\t]\n\t};\n\n\ttestCase('Multiline insert', state2, async (editor) => {\n\t\tconst pos = new Position(1, 2);\n\t\tawait editor.setPosition(pos);\n\t\tawait editor.trigger('keyboard', Handler.Type, { text: 'i' });\n\t}, [\n\t\t'<iooo>',\n\t\t'</iooo>'\n\t]);\n});\n"]}