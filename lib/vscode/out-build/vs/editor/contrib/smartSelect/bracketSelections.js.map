{"version":3,"file":"bracketSelections.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/smartSelect/bracketSelections.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SelectionRangeProvider, SelectionRange } from 'vs/editor/common/modes';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\nexport class BracketSelectionRangeProvider implements SelectionRangeProvider {\n\n\tasync provideSelectionRanges(model: ITextModel, positions: Position[]): Promise<SelectionRange[][]> {\n\t\tconst result: SelectionRange[][] = [];\n\n\t\tfor (const position of positions) {\n\t\t\tconst bucket: SelectionRange[] = [];\n\t\t\tresult.push(bucket);\n\n\t\t\tconst ranges = new Map<string, LinkedList<Range>>();\n\t\t\tawait new Promise<void>(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n\t\t\tawait new Promise<void>(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static _maxDuration = 30;\n\tprivate static readonly _maxRounds = 2;\n\n\tprivate static _bracketsRightYield(resolve: () => void, round: number, model: ITextModel, pos: Position, ranges: Map<string, LinkedList<Range>>): void {\n\t\tconst counts = new Map<string, number>();\n\t\tconst t1 = Date.now();\n\t\twhile (true) {\n\t\t\tif (round >= BracketSelectionRangeProvider._maxRounds) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!pos) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet bracket = model.findNextBracket(pos);\n\t\t\tif (!bracket) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet d = Date.now() - t1;\n\t\t\tif (d > BracketSelectionRangeProvider._maxDuration) {\n\t\t\t\tsetTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst key = bracket.close[0];\n\t\t\tif (bracket.isOpen) {\n\t\t\t\t// wait for closing\n\t\t\t\tlet val = counts.has(key) ? counts.get(key)! : 0;\n\t\t\t\tcounts.set(key, val + 1);\n\t\t\t} else {\n\t\t\t\t// process closing\n\t\t\t\tlet val = counts.has(key) ? counts.get(key)! : 0;\n\t\t\t\tval -= 1;\n\t\t\t\tcounts.set(key, Math.max(0, val));\n\t\t\t\tif (val < 0) {\n\t\t\t\t\tlet list = ranges.get(key);\n\t\t\t\t\tif (!list) {\n\t\t\t\t\t\tlist = new LinkedList();\n\t\t\t\t\t\tranges.set(key, list);\n\t\t\t\t\t}\n\t\t\t\t\tlist.push(bracket.range);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos = bracket.range.getEndPosition();\n\t\t}\n\t}\n\n\tprivate static _bracketsLeftYield(resolve: () => void, round: number, model: ITextModel, pos: Position, ranges: Map<string, LinkedList<Range>>, bucket: SelectionRange[]): void {\n\t\tconst counts = new Map<string, number>();\n\t\tconst t1 = Date.now();\n\t\twhile (true) {\n\t\t\tif (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!pos) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet bracket = model.findPrevBracket(pos);\n\t\t\tif (!bracket) {\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet d = Date.now() - t1;\n\t\t\tif (d > BracketSelectionRangeProvider._maxDuration) {\n\t\t\t\tsetTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst key = bracket.close[0];\n\t\t\tif (!bracket.isOpen) {\n\t\t\t\t// wait for opening\n\t\t\t\tlet val = counts.has(key) ? counts.get(key)! : 0;\n\t\t\t\tcounts.set(key, val + 1);\n\t\t\t} else {\n\t\t\t\t// opening\n\t\t\t\tlet val = counts.has(key) ? counts.get(key)! : 0;\n\t\t\t\tval -= 1;\n\t\t\t\tcounts.set(key, Math.max(0, val));\n\t\t\t\tif (val < 0) {\n\t\t\t\t\tlet list = ranges.get(key);\n\t\t\t\t\tif (list) {\n\t\t\t\t\t\tlet closing = list.shift();\n\t\t\t\t\t\tif (list.size === 0) {\n\t\t\t\t\t\t\tranges.delete(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing!.getStartPosition());\n\t\t\t\t\t\tconst outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing!.getEndPosition());\n\t\t\t\t\t\tbucket.push({ range: innerBracket });\n\t\t\t\t\t\tbucket.push({ range: outerBracket });\n\t\t\t\t\t\tBracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos = bracket.range.getStartPosition();\n\t\t}\n\t}\n\n\tprivate static _addBracketLeading(model: ITextModel, bracket: Range, bucket: SelectionRange[]): void {\n\t\tif (bracket.startLineNumber === bracket.endLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\t// xxxxxxxx {\n\t\t//\n\t\t// }\n\t\tconst startLine = bracket.startLineNumber;\n\t\tconst column = model.getLineFirstNonWhitespaceColumn(startLine);\n\t\tif (column !== 0 && column !== bracket.startColumn) {\n\t\t\tbucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\n\t\t\tbucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\n\t\t}\n\n\t\t// xxxxxxxx\n\t\t// {\n\t\t//\n\t\t// }\n\t\tconst aboveLine = startLine - 1;\n\t\tif (aboveLine > 0) {\n\t\t\tconst column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n\t\t\tif (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n\t\t\t\tbucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\n\t\t\t\tbucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\n\t\t\t}\n\t\t}\n\t}\n}\n"]}