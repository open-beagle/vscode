{"version":3,"sources":["vs/editor/contrib/caretOperations/transpose.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAahG,MAAM,sBAAuB,SAAQ,+BAAY;QAEhD;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,gCAAgC;gBACpC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAmB,CAAC;gBAClE,KAAK,EAAE,mBAAmB;gBAC1B,YAAY,EAAE,qCAAiB,CAAC,QAAQ;gBACxC,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,cAAc;oBACxC,OAAO,EAAE,CAAC;oBACV,GAAG,EAAE;wBACJ,OAAO,EAAE,kCAA8B;qBACvC;oBACD,MAAM,yBAAgC;iBACtC;aACD,CAAC,CAAC;QACJ,CAAC;QAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;YACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;gBACvB,OAAO;aACP;YAED,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,QAAQ,GAAe,EAAE,CAAC;YAC9B,IAAI,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;YAExC,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;gBACjC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;oBACzB,SAAS;iBACT;gBAED,IAAI,UAAU,GAAG,SAAS,CAAC,eAAe,CAAC;gBAC3C,IAAI,MAAM,GAAG,SAAS,CAAC,WAAW,CAAC;gBAEnC,IAAI,UAAU,GAAG,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBAEpD,IAAI,UAAU,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC7E,sCAAsC;oBACtC,SAAS;iBACT;gBAED,qEAAqE;gBACrE,4CAA4C;gBAC5C,IAAI,WAAW,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC1C,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;oBACzB,qCAAc,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;gBAEzG,IAAI,cAAc,GAAG,qCAAc,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;gBACpG,IAAI,aAAa,GAAG,qCAAc,CAAC,YAAY,CAAC,KAAK,EAAE,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;gBAEzG,IAAI,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAC,aAAK,CAAC,aAAa,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;gBACzF,IAAI,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,aAAK,CAAC,aAAa,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC;gBAExF,IAAI,YAAY,GAAG,aAAK,CAAC,aAAa,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;gBACnE,QAAQ,CAAC,IAAI,CAAC,IAAI,+BAAc,CAAC,YAAY,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;aACtE;YAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,MAAM,CAAC,YAAY,EAAE,CAAC;gBACtB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAC1C,MAAM,CAAC,YAAY,EAAE,CAAC;aACtB;QACF,CAAC;KACD;IAED,CAAA,GAAA,uCAAoB,CAAA,CAAC,sBAAsB,CAAC,CAAC","file":"transpose.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ReplaceCommand } from 'vs/editor/common/commands/replaceCommand';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ICommand } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { MoveOperations } from 'vs/editor/common/controller/cursorMoveOperations';\n\nclass TransposeLettersAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.transposeLetters',\n\t\t\tlabel: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n\t\t\talias: 'Transpose Letters',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.KEY_T\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet model = editor.getModel();\n\t\tlet commands: ICommand[] = [];\n\t\tlet selections = editor.getSelections();\n\n\t\tfor (let selection of selections) {\n\t\t\tif (!selection.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet lineNumber = selection.startLineNumber;\n\t\t\tlet column = selection.startColumn;\n\n\t\t\tlet lastColumn = model.getLineMaxColumn(lineNumber);\n\n\t\t\tif (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\n\t\t\t\t// at beginning of file, nothing to do\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// handle special case: when at end of line, transpose left two chars\n\t\t\t// otherwise, transpose left and right chars\n\t\t\tlet endPosition = (column === lastColumn) ?\n\t\t\t\tselection.getPosition() :\n\t\t\t\tMoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n\n\t\t\tlet middlePosition = MoveOperations.leftPosition(model, endPosition.lineNumber, endPosition.column);\n\t\t\tlet beginPosition = MoveOperations.leftPosition(model, middlePosition.lineNumber, middlePosition.column);\n\n\t\t\tlet leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n\t\t\tlet rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n\n\t\t\tlet replaceRange = Range.fromPositions(beginPosition, endPosition);\n\t\t\tcommands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n\t\t}\n\n\t\tif (commands.length > 0) {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, commands);\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t}\n}\n\nregisterEditorAction(TransposeLettersAction);\n"]}