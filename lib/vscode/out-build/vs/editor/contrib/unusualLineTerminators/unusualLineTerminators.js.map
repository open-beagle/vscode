{"version":3,"sources":["vs/editor/contrib/unusualLineTerminators/unusualLineTerminators.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAYhG,MAAM,4BAA4B,GAAG,8BAA8B,CAAC;IAEpE,SAAS,gBAAgB,CAAC,iBAAqC,EAAE,KAAiB,EAAE,KAAc;QACjG,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,4BAA4B,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IAED,SAAS,eAAe,CAAC,iBAAqC,EAAE,KAAiB;QAChF,OAAO,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;IACpF,CAAC;IAED,IAAM,8BAA8B,GAApC,MAAM,8BAA+B,SAAQ,sBAAU;QAMtD,YACkB,OAAoB,EACJ,cAA8B,EAC1B,kBAAsC;YAE3E,KAAK,EAAE,CAAC;YAJS,YAAO,GAAP,OAAO,CAAa;YACJ,mBAAc,GAAd,cAAc,CAAgB;YAC1B,uBAAkB,GAAlB,kBAAkB,CAAoB;YAI3E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,kCAAqC,CAAC;YAC3E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC1D,IAAI,CAAC,CAAC,UAAU,kCAAqC,EAAE;oBACtD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,kCAAqC,CAAC;oBAC3E,IAAI,CAAC,+BAA+B,EAAE,CAAC;iBACvC;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE;gBACjD,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,EAAE;gBACzD,IAAI,CAAC,CAAC,SAAS,EAAE;oBAChB,mCAAmC;oBACnC,OAAO;iBACP;gBACD,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,KAAK,CAAC,+BAA+B;YAC5C,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;gBAC3B,OAAO;aACP;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;gBAC7B,OAAO;aACP;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,kCAAkC,EAAE,EAAE;gBAChD,OAAO;aACP;YACD,MAAM,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,WAAW,KAAK,IAAI,EAAE;gBACzB,+BAA+B;gBAC/B,OAAO;aACP;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,mBAAuB,EAAE;gBAClD,6BAA6B;gBAC7B,OAAO;aACP;YAED,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;gBAC5B,cAAc;gBACd,KAAK,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;gBACjE,OAAO;aACP;YAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;gBAChD,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA8B,EAAE,IAA0B,CAAC;gBAC/E,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgC,EAAE,IAAmC,CAAC;gBAC5F,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAAyO,CAAC;gBAChS,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA4B,EAAE,IAAe,CAAC;gBAC1E,eAAe,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAA8B,CAAC;aAC9F,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBACtB,+BAA+B;gBAC/B,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBACvD,OAAO;aACP;YAED,KAAK,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;QAClE,CAAC;KACD,CAAA;IA3EuB,iCAAE,GAAG,+CAA+C,CAAC;IAFvE,8BAA8B;QAQjC,WAAA,wBAAc,CAAA;QACd,WAAA,sCAAkB,CAAA;OATf,8BAA8B,CA6EnC;IAED,CAAA,GAAA,6CAA0B,CAAA,CAAC,8BAA8B,CAAC,EAAE,EAAE,8BAA8B,CAAC,CAAC","file":"unusualLineTerminators.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\n\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\n\nfunction writeIgnoreState(codeEditorService: ICodeEditorService, model: ITextModel, state: boolean): void {\n\tcodeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\n}\n\nfunction readIgnoreState(codeEditorService: ICodeEditorService, model: ITextModel): boolean | undefined {\n\treturn codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\n}\n\nclass UnusualLineTerminatorsDetector extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.unusualLineTerminatorsDetector';\n\n\tprivate _config: 'auto' | 'off' | 'prompt';\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis._config = this._editor.getOption(EditorOption.unusualLineTerminators);\n\t\tthis._register(this._editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.hasChanged(EditorOption.unusualLineTerminators)) {\n\t\t\t\tthis._config = this._editor.getOption(EditorOption.unusualLineTerminators);\n\t\t\t\tthis._checkForUnusualLineTerminators();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._editor.onDidChangeModel(() => {\n\t\t\tthis._checkForUnusualLineTerminators();\n\t\t}));\n\n\t\tthis._register(this._editor.onDidChangeModelContent((e) => {\n\t\t\tif (e.isUndoing) {\n\t\t\t\t// skip checking in case of undoing\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._checkForUnusualLineTerminators();\n\t\t}));\n\t}\n\n\tprivate async _checkForUnusualLineTerminators(): Promise<void> {\n\t\tif (this._config === 'off') {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\tif (!model.mightContainUnusualLineTerminators()) {\n\t\t\treturn;\n\t\t}\n\t\tconst ignoreState = readIgnoreState(this._codeEditorService, model);\n\t\tif (ignoreState === true) {\n\t\t\t// this model should be ignored\n\t\t\treturn;\n\t\t}\n\t\tif (this._editor.getOption(EditorOption.readOnly)) {\n\t\t\t// read only editor => sorry!\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._config === 'auto') {\n\t\t\t// just do it!\n\t\t\tmodel.removeUnusualLineTerminators(this._editor.getSelections());\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this._dialogService.confirm({\n\t\t\ttitle: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\n\t\t\tmessage: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\n\t\t\tdetail: nls.localize('unusualLineTerminators.detail', \"This file contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\"),\n\t\t\tprimaryButton: nls.localize('unusualLineTerminators.fix', \"Fix this file\"),\n\t\t\tsecondaryButton: nls.localize('unusualLineTerminators.ignore', \"Ignore problem for this file\")\n\t\t});\n\n\t\tif (!result.confirmed) {\n\t\t\t// this model should be ignored\n\t\t\twriteIgnoreState(this._codeEditorService, model, true);\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.removeUnusualLineTerminators(this._editor.getSelections());\n\t}\n}\n\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector);\n"]}