{"version":3,"file":"snippetParser.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/snippet/test/snippetParser.test.ts"],"names":[],"mappings":";;;IAOA,KAAK,CAAC,eAAe,EAAE,GAAG,EAAE;QAE3B,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;YAEpB,MAAM,OAAO,GAAG,IAAI,uBAAO,EAAE,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,kBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,kBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,cAAgB,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,gBAAiB,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,cAAgB,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,gBAAkB,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;YAEvD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAE9D,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,iBAAmB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,oBAAsB,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,uBAAyB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,qBAAuB,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,eAAgB,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,SAAS,UAAU,CAAC,KAAa,EAAE,QAAgB;YAClD,MAAM,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,CAAC;QAED,SAAS,YAAY,CAAC,KAA0C,EAAE,GAAG,KAAiB;YACrF,IAAI,MAAgB,CAAC;YACrB,IAAI,KAAK,YAAY,+BAAe,EAAE;gBACrC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC;aACxB;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBACrC,MAAM,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC;gBAC9B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;aACjC;iBAAM;gBACN,MAAM,GAAG,KAAK,CAAC;aACf;YACD,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;gBACrB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC;aAC7B;YACD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACtC,CAAC;QAED,SAAS,mBAAmB,CAAC,KAAa,EAAE,OAAe,EAAE,GAAG,KAAiB;YAChF,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3B,YAAY,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC;QAC/B,CAAC;QAED,SAAS,aAAa,CAAC,KAAa,EAAE,QAAgB;YACrD,MAAM,MAAM,GAAG,6BAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,iBAAiB,EAAE;YACvB,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAClC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YACxC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YACxC,aAAa,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;YAChD,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;YACzB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACrB,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC3B,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACrB,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACvB,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7B,UAAU,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;YACxC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACzB,UAAU,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;YAC3C,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC3B,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC3B,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAE3B,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC/B,UAAU,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;YACvC,UAAU,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;YAC7C,UAAU,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;YACjD,UAAU,CAAC,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;YACrD,UAAU,CAAC,6BAA6B,EAAE,6BAA6B,CAAC,CAAC;YACzE,UAAU,CAAC,gCAAgC,EAAE,gCAAgC,CAAC,CAAC;YAC/E,UAAU,CAAC,iCAAiC,EAAE,iCAAiC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;YAC5B,mBAAmB,CAAC,cAAc,EAAE,SAAS,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,CAAC,CAAC;YACxE,mBAAmB,CAAC,sBAAsB,EAAE,YAAY,EAAE,oBAAI,EAAE,2BAAW,EAAE,2BAAW,EAAE,oBAAI,CAAC,CAAC;YAEhG,mBAAmB,CAAC,wBAAwB,EAAE,YAAY,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;YAE/E,IAAI,CAAC,EAAE,WAAW,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC;YACnF,IAAI,EAAE,QAAQ,EAAE,GAAiB,WAAY,CAAC;YAE9C,MAAM,CAAC,WAAW,CAAe,WAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,EAAE,oBAAI,CAAC,CAAC;YAC9C,mBAAmB,CAAC,YAAY,EAAE,YAAY,EAAE,oBAAI,CAAC,CAAC;YACtD,mBAAmB,CAAC,eAAe,EAAE,eAAe,EAAE,oBAAI,CAAC,CAAC;YAC5D,mBAAmB,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,oBAAI,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE;YACjC,mBAAmB,CAAC,aAAa,EAAE,aAAa,EAAE,oBAAI,CAAC,CAAC;YACxD,mBAAmB,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,oBAAI,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACtC,mBAAmB,CAAC,UAAU,EAAE,MAAM,EAAE,wBAAQ,EAAE,oBAAI,CAAC,CAAC;YACxD,mBAAmB,CAAC,YAAY,EAAE,UAAU,EAAE,oBAAI,CAAC,CAAC;YACpD,mBAAmB,CAAC,YAAY,EAAE,KAAK,EAAE,oBAAI,EAAE,wBAAQ,CAAC,CAAC;YACzD,mBAAmB,CAAC,cAAc,EAAE,KAAK,EAAE,oBAAI,EAAE,wBAAQ,CAAC,CAAC;YAC3D,mBAAmB,CAAC,MAAM,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;YAC7C,mBAAmB,CAAC,SAAS,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAC7C,mBAAmB,CAAC,WAAW,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAC/C,mBAAmB,CAAC,gBAAgB,EAAE,UAAU,EAAE,oBAAI,EAAE,wBAAQ,EAAE,oBAAI,CAAC,CAAC;YACxE,mBAAmB,CAAC,+BAA+B,EAAE,UAAU,EAAE,oBAAI,EAAE,wBAAQ,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,mBAAmB,CAAC,eAAe,EAAE,OAAO,EAAE,wBAAQ,CAAC,CAAC;YACxD,mBAAmB,CAAC,YAAY,EAAE,OAAO,EAAE,2BAAW,CAAC,CAAC;YACxD,mBAAmB,CAAC,qBAAqB,EAAE,WAAW,EAAE,2BAAW,CAAC,CAAC;YAErE,mBAAmB,CAAC,cAAc,EAAE,cAAc,EAAE,oBAAI,CAAC,CAAC;YAC1D,mBAAmB,CAAC,oBAAoB,EAAE,eAAe,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE;YACnC,mBAAmB,CAAC,WAAW,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAC/C,mBAAmB,CAAC,yBAAyB,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAC7D,mBAAmB,CAAC,6BAA6B,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAEjE,gBAAgB;YAChB,mBAAmB,CAAC,gCAAgC,EAAE,gCAAgC,EAAE,oBAAI,CAAC,CAAC;YAC9F,mBAAmB,CAAC,kCAAkC,EAAE,kCAAkC,EAAE,oBAAI,CAAC,CAAC;YAClG,mBAAmB,CAAC,4BAA4B,EAAE,4BAA4B,EAAE,oBAAI,CAAC,CAAC;YAEtF,eAAe;YACf,mBAAmB,CAAC,sBAAsB,EAAE,EAAE,EAAE,wBAAQ,CAAC,CAAC;YAC1D,YAAY,CAAC,8BAA8B,EAAE,oBAAI,CAAC,CAAC;YAEnD,aAAa;YACb,mBAAmB,CAAC,UAAU,EAAE,UAAU,EAAE,oBAAI,CAAC,CAAC;YAClD,mBAAmB,CAAC,4BAA4B,EAAE,4BAA4B,EAAE,oBAAI,CAAC,CAAC;YAEtF,gBAAgB;YAChB,YAAY,CAAC,uBAAuB,EAAE,wBAAQ,CAAC,CAAC;YAChD,YAAY,CAAC,kBAAkB,EAAE,wBAAQ,CAAC,CAAC;YAC3C,YAAY,CAAC,gBAAgB,EAAE,wBAAQ,CAAC,CAAC;YACzC,YAAY,CAAC,8BAA8B,EAAE,wBAAQ,CAAC,CAAC;YACvD,YAAY,CAAC,8BAA8B,EAAE,wBAAQ,CAAC,CAAC;YACvD,YAAY,CAAC,+BAA+B,EAAE,wBAAQ,CAAC,CAAC;YACxD,YAAY,CAAC,6BAA6B,EAAE,wBAAQ,CAAC,CAAC;YACtD,YAAY,CAAC,kCAAkC,EAAE,wBAAQ,CAAC,CAAC;YAC3D,YAAY,CAAC,iCAAiC,EAAE,wBAAQ,CAAC,CAAC;QAE3D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE;YACtC,mBAAmB,CAAC,SAAS,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;YAChD,mBAAmB,CAAC,uBAAuB,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;YAC9D,mBAAmB,CAAC,2BAA2B,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;YAElE,eAAe;YACf,mBAAmB,CAAC,oBAAoB,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;YAC3D,YAAY,CAAC,4BAA4B,EAAE,oBAAI,CAAC,CAAC;YAEjD,aAAa;YACb,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,EAAE,oBAAI,CAAC,CAAC;YAC9C,mBAAmB,CAAC,0BAA0B,EAAE,0BAA0B,EAAE,oBAAI,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE;YAC9D,YAAY,CAAC,4BAA4B,EAAE,wBAAQ,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iEAAiE,EAAE;YACvE,YAAY,CAAC,+BAA+B,EAAE,wBAAQ,CAAC,CAAC;YACxD,YAAY,CAAC,oCAAoC,EAAE,wBAAQ,CAAC,CAAC;YAC7D,YAAY,CAAC,gCAAgC,EAAE,wBAAQ,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAE5C,mBAAmB,CAAC,qBAAqB,EAAE,KAAK,EAAE,2BAAW,CAAC,CAAC;YAC/D,mBAAmB,CAAC,WAAW,EAAE,KAAK,EAAE,2BAAW,CAAC,CAAC;YACrD,mBAAmB,CAAC,iBAAiB,EAAE,MAAM,EAAE,2BAAW,CAAC,CAAC;YAC5D,mBAAmB,CAAC,mBAAmB,EAAE,WAAW,EAAE,2BAAW,CAAC,CAAC;YACnE,mBAAmB,CAAC,mBAAmB,EAAE,WAAW,EAAE,2BAAW,CAAC,CAAC;YACnE,mBAAmB,CAAC,mBAAmB,EAAE,aAAa,EAAE,2BAAW,CAAC,CAAC;YACrE,mBAAmB,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,oBAAI,CAAC,CAAC;YAC1E,mBAAmB,CAAC,UAAU,EAAE,UAAU,EAAE,oBAAI,CAAC,CAAC;YAElD,MAAM,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC;YAC9B,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC/C,YAAY,CAAC,OAAO,EAAE,2BAAW,CAAC,CAAC;YACnC,MAAM,QAAQ,GAAG,CAAC,2BAAW,EAAE,oBAAI,EAAE,oBAAI,EAAE,oBAAI,CAAC,CAAC;YACjD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBACrB,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0DAA0D,EAAE;YAChE,mBAAmB,CAAC,iDAAiD,EAAE,wBAAwB,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,CAAC,CAAC;QAC3H,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE;YAElC,SAAS,uBAAuB,CAAC,KAAa,EAAE,QAAgB;gBAC/D,MAAM,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjD,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;gBAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACtC,CAAC;YAED,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACpC,uBAAuB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACxC,uBAAuB,CAAC,iDAAiD,EAAE,iDAAiD,CAAC,CAAC;YAC9H,uBAAuB,CAAC,qDAAqD,EAAE,qDAAqD,CAAC,CAAC;YACtI,uBAAuB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YACxD,uBAAuB,CAAC,oCAAoC,EAAE,sCAAsC,CAAC,CAAC;YACtG,uBAAuB,CAAC,qCAAqC,EAAE,yCAAyC,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE;YAE/C,SAAS,WAAW,CAAC,KAAa;gBACjC,uGAAuG;gBACvG,MAAM,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjD,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;gBAC1C,MAAM,QAAQ,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAEnD,SAAS,kBAAkB,CAAC,OAAe,EAAE,OAAe;oBAC3D,MAAM,CAAC,EAAE,CAAC,OAAO,YAAY,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC;oBACzE,MAAM,CAAC,EAAE,CAAC,OAAO,YAAY,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC;oBAEzE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACrE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAE3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACjD,kBAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC7D;gBACF,CAAC;gBAED,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YACvC,CAAC;YAED,WAAW,CAAC,IAAI,CAAC,CAAC;YAClB,WAAW,CAAC,MAAM,CAAC,CAAC;YACpB,WAAW,CAAC,iDAAiD,CAAC,CAAC;YAC/D,WAAW,CAAC,qDAAqD,CAAC,CAAC;YACnE,WAAW,CAAC,cAAc,CAAC,CAAC;YAC5B,WAAW,CAAC,oCAAoC,CAAC,CAAC;YAClD,WAAW,CAAC,qCAAqC,CAAC,CAAC;YACnD,WAAW,CAAC,qDAAqD,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAClC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAE1E,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,YAAY,sBAAM,CAAC,CAAC;YACpD,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,sBAAM,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAU,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE5E,UAAU,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YACzC,UAAU,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;YAC3D,UAAU,CAAC,uBAAuB,EAAE,uBAAuB,CAAC,CAAC;YAC7D,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mEAAmE,EAAE;YAEzE,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC7E,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,YAAY,sBAAM,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAClC,MAAM,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC;YAC9B,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,oBAAI,CAAC,CAAC;YAC1C,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,oBAAI,CAAC,CAAC;YAC7C,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,oBAAI,CAAC,CAAC;YAE/C,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,CAAC,CAAC;YAC3D,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,CAAC,CAAC;YAC/D,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,oBAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC/B,IAAI,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC,QAAQ,CAAC;YAE1F,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,eAAe,CAAC,CAAC;YAC1D,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;YAE9C,MAAM,WAAW,GAAgB,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,wBAAQ,CAAC,CAAC;YACvD,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;YAE5D,MAAM,cAAc,GAAa,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEtD,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,wBAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACtC,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;YAExG,WAAW;YACX,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAe,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAEpE,IAAI;YACJ,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YAElD,WAAW;YACX,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YAE/D,+BAA+B;YAC/B,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,cAAc,CAAe,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YACvE,IAAI,SAAS,GAAiB,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAU,CAAC;YACtD,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,4BAAY,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAgB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAgB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACzE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,4BAAY,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAgB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAEnD,CAAC,CAAC,CAAC;QAEH,8EAA8E;QAC9E,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAE/C,YAAY,CAAC,qCAAqC,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;YAE1F,MAAM,CAAC,EAAE,EAAE,EAAE,AAAD,EAAG,EAAE,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC,QAAQ,CAAC;YAE9F,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAsB,EAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YAE5E,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAsB,EAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,8EAA8E;QAC9E,IAAI,CAAC,sDAAsD,EAAE,GAAG,EAAE;YAEjE,YAAY,CAAC,+CAA+C,EAAE,oBAAI,EAAE,2BAAW,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;YAEpG,MAAM,CAAC,EAAE,EAAE,EAAE,AAAD,EAAG,EAAE,CAAC,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC,QAAQ,CAAC;YAExG,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAsB,EAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAE3D,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAe,EAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAsB,EAAG,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YAC5E,MAAM,CAAC,cAAc,CAAe,EAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4DAA4D,EAAE;YAClE,UAAU,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;YAC7C,UAAU,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;YAC/C,UAAU,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;YACnD,UAAU,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAChD,MAAM,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,IAAI,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAEtC,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,mBAAmB,CAAC,OAAO,EAAE,EAAE,EAAE,2BAAW,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;YAEvB,SAAS,SAAS,CAAC,QAAgB,EAAE,GAAG,OAAiB;gBACxD,MAAM,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC1D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;oBAChB,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;oBACjC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;oBACtC,OAAO,IAAI,CAAC;gBACb,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACvC,CAAC;YAED,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,SAAS,CAAC,qCAAqC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAClE,SAAS,CAAC,uCAAuC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1E,SAAS,CAAC,qBAAqB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACvC,SAAS,CAAC,2BAA2B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE;YAC3B,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;YAE5E,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC;YAEpC,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEnC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,wBAAQ,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAClD,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC;YAE3C,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YACjE,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAE3D,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAY,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEnF,iBAAiB;YACjB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,oBAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC1D,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE3C,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACxD,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAG3C,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACxD,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE3C,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YACnE,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE;YACnC,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YAEvE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEpC,MAAM,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAE1C,IAAI,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3D,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;YAEzC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAErD,MAAM,YAAY,GAAG,OAAO,CAAC,qBAAqB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE;YACnC,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YAEvE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEpC,IAAI,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACzD,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;YAEzC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE;YAE9C,MAAM,GAAG,GAAG,IAAI,2BAAW,CAAC,EAAE,CAAC,CAAC;YAChC,MAAM,EAAE,GAAG,IAAI,2BAAW,CAAC,CAAC,CAAC,CAAC;YAE9B,MAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0CAA0C,EAAE;YAChD,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uCAAuC,EAAE;YAE7C,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;YAE/B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,mHAAmH,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC5J,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjB,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/D,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjB,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qDAAqD,EAAE;YAC3D,mBAAmB,CAAC,eAAe,EAAE,eAAe,EAAE,oBAAI,CAAC,CAAC;YAC5D,mBAAmB,CAAC,eAAe,EAAE,KAAK,EAAE,2BAAW,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,mCAAmC,EAAE;YAEzC,sBAAsB;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,CAAC;YAChG,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;YAE9E,KAAK;YACL,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5F,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YACrF,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAE3F,OAAO;YACP,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YAC/F,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACxF,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAE3F,UAAU;YACV,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3F,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACpF,MAAM,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+GAA+G,EAAE;YACrH,MAAM,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC9F,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,oDAAoD,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0FAA0F,EAAE;YAEhG,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACrE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,YAAY,CAAC;YAErC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAErC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8FAA8F,EAAE;YAEpG,MAAM,SAAS,GAAG,IAAI,yBAAS,EAAE,CAAC;YAClC,SAAS,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;YACrD,SAAS,CAAC,WAAW,CAAC,IAAI,4BAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;YACrD,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC;YAEhC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,CAAC;YAEpE,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;YAChC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE;YAE1C,MAAM,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;YAChF,YAAY,CAAC,OAAO,EAAE,wBAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kGAAkG,EAAE;YACxG,IAAI,SAAS,GAAG,IAAI,yBAAS,EAAE,CAAC;YAChC,SAAS,CAAC,WAAW,CAAC,IAAI,oBAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,SAAS,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,aAAa,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE;YACpC,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;YACnF,YAAY,CAAC,OAAO,EAAE,2BAAW,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE;YAC9D,mBAAmB,CAAC,mBAAmB,EAAE,cAAc,EAAE,oBAAI,EAAE,2BAAW,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uFAAuF,EAAE;YAC7F,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAC/E,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YACtD,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAI,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,2BAAW,CAAC,CAAC;YAEtD,SAAS,YAAY,CAAC,MAAc;gBACnC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACtC,IAAI,CAAC,CAAC,MAAM,YAAY,2BAAW,CAAC,EAAE;oBACrC,OAAO;iBACP;gBACD,IAAI,KAAK,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,GAAW,MAAM,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;oBACnB,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO,EAAE;wBACzB,KAAK,GAAG,IAAI,CAAC;qBACb;oBACD,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;iBACb;gBACD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;YACD,IAAI,CAAC,EAAE,AAAD,EAAG,KAAK,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mEAAmE,EAAE;YAEzE,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;YACnF,YAAY,CAAC,OAAO,EAAE,oBAAI,EAAE,wBAAQ,EAAE,oBAAI,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gGAAgG,EAAE;YAEtG,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;YACrG,IAAI,QAAQ,GAAa,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,QAAQ,YAAY,wBAAQ,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,4BAAY,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAgB,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,OAAO,EAAE,6BAA6B,CAAC,CAAC;YAC3G,MAAM,CAAC,WAAW,CAAgB,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qFAAqF,EAAE;YAE3F,IAAI,OAAO,GAAG,IAAI,6BAAa,EAAE,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;YAC5E,IAAI,QAAQ,GAAa,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,QAAQ,YAAY,wBAAQ,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,4BAAY,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAgB,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAClF,MAAM,CAAC,WAAW,CAAgB,QAAQ,CAAC,SAAU,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Scanner, TokenType, SnippetParser, Text, Placeholder, Variable, Marker, TextmateSnippet, Choice, FormatString, Transform } from 'vs/editor/contrib/snippet/snippetParser';\n\nsuite('SnippetParser', () => {\n\n\ttest('Scanner', () => {\n\n\t\tconst scanner = new Scanner();\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('abc');\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('{{abc}}');\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('abc() ');\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Format);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('abc 123');\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Format);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Int);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('$foo');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('$foo_bar');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('$foo-bar');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dash);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('${foo}');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('${1223:foo}');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Int);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Colon);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\n\t\tscanner.text('\\\\${}');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Backslash);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\n\t\tscanner.text('${foo/regex/format/option}');\n\t\tassert.strictEqual(scanner.next().type, TokenType.Dollar);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyOpen);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Forwardslash);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Forwardslash);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.Forwardslash);\n\t\tassert.strictEqual(scanner.next().type, TokenType.VariableName);\n\t\tassert.strictEqual(scanner.next().type, TokenType.CurlyClose);\n\t\tassert.strictEqual(scanner.next().type, TokenType.EOF);\n\t});\n\n\tfunction assertText(value: string, expected: string) {\n\t\tconst p = new SnippetParser();\n\t\tconst actual = p.text(value);\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\tfunction assertMarker(input: TextmateSnippet | Marker[] | string, ...ctors: Function[]) {\n\t\tlet marker: Marker[];\n\t\tif (input instanceof TextmateSnippet) {\n\t\t\tmarker = input.children;\n\t\t} else if (typeof input === 'string') {\n\t\t\tconst p = new SnippetParser();\n\t\t\tmarker = p.parse(input).children;\n\t\t} else {\n\t\t\tmarker = input;\n\t\t}\n\t\twhile (marker.length > 0) {\n\t\t\tlet m = marker.pop();\n\t\t\tlet ctor = ctors.pop()!;\n\t\t\tassert.ok(m instanceof ctor);\n\t\t}\n\t\tassert.strictEqual(marker.length, ctors.length);\n\t\tassert.strictEqual(marker.length, 0);\n\t}\n\n\tfunction assertTextAndMarker(value: string, escaped: string, ...ctors: Function[]) {\n\t\tassertText(value, escaped);\n\t\tassertMarker(value, ...ctors);\n\t}\n\n\tfunction assertEscaped(value: string, expected: string) {\n\t\tconst actual = SnippetParser.escape(value);\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\ttest('Parser, escaped', function () {\n\t\tassertEscaped('foo$0', 'foo\\\\$0');\n\t\tassertEscaped('foo\\\\$0', 'foo\\\\\\\\\\\\$0');\n\t\tassertEscaped('f$1oo$0', 'f\\\\$1oo\\\\$0');\n\t\tassertEscaped('${1:foo}$0', '\\\\${1:foo\\\\}\\\\$0');\n\t\tassertEscaped('$', '\\\\$');\n\t});\n\n\ttest('Parser, text', () => {\n\t\tassertText('$', '$');\n\t\tassertText('\\\\\\\\$', '\\\\$');\n\t\tassertText('{', '{');\n\t\tassertText('\\\\}', '}');\n\t\tassertText('\\\\abc', '\\\\abc');\n\t\tassertText('foo${f:\\\\}}bar', 'foo}bar');\n\t\tassertText('\\\\{', '\\\\{');\n\t\tassertText('I need \\\\\\\\\\\\$', 'I need \\\\$');\n\t\tassertText('\\\\', '\\\\');\n\t\tassertText('\\\\{{', '\\\\{{');\n\t\tassertText('{{', '{{');\n\t\tassertText('{{dd', '{{dd');\n\t\tassertText('}}', '}}');\n\t\tassertText('ff}}', 'ff}}');\n\n\t\tassertText('farboo', 'farboo');\n\t\tassertText('far{{}}boo', 'far{{}}boo');\n\t\tassertText('far{{123}}boo', 'far{{123}}boo');\n\t\tassertText('far\\\\{{123}}boo', 'far\\\\{{123}}boo');\n\t\tassertText('far{{id:bern}}boo', 'far{{id:bern}}boo');\n\t\tassertText('far{{id:bern {{basel}}}}boo', 'far{{id:bern {{basel}}}}boo');\n\t\tassertText('far{{id:bern {{id:basel}}}}boo', 'far{{id:bern {{id:basel}}}}boo');\n\t\tassertText('far{{id:bern {{id2:basel}}}}boo', 'far{{id:bern {{id2:basel}}}}boo');\n\t});\n\n\n\ttest('Parser, TM text', () => {\n\t\tassertTextAndMarker('foo${1:bar}}', 'foobar}', Text, Placeholder, Text);\n\t\tassertTextAndMarker('foo${1:bar}${2:foo}}', 'foobarfoo}', Text, Placeholder, Placeholder, Text);\n\n\t\tassertTextAndMarker('foo${1:bar\\\\}${2:foo}}', 'foobar}foo', Text, Placeholder);\n\n\t\tlet [, placeholder] = new SnippetParser().parse('foo${1:bar\\\\}${2:foo}}').children;\n\t\tlet { children } = (<Placeholder>placeholder);\n\n\t\tassert.strictEqual((<Placeholder>placeholder).index, 1);\n\t\tassert.ok(children[0] instanceof Text);\n\t\tassert.strictEqual(children[0].toString(), 'bar}');\n\t\tassert.ok(children[1] instanceof Placeholder);\n\t\tassert.strictEqual(children[1].toString(), 'foo');\n\t});\n\n\ttest('Parser, placeholder', () => {\n\t\tassertTextAndMarker('farboo', 'farboo', Text);\n\t\tassertTextAndMarker('far{{}}boo', 'far{{}}boo', Text);\n\t\tassertTextAndMarker('far{{123}}boo', 'far{{123}}boo', Text);\n\t\tassertTextAndMarker('far\\\\{{123}}boo', 'far\\\\{{123}}boo', Text);\n\t});\n\n\ttest('Parser, literal code', () => {\n\t\tassertTextAndMarker('far`123`boo', 'far`123`boo', Text);\n\t\tassertTextAndMarker('far\\\\`123\\\\`boo', 'far\\\\`123\\\\`boo', Text);\n\t});\n\n\ttest('Parser, variables/tabstop', () => {\n\t\tassertTextAndMarker('$far-boo', '-boo', Variable, Text);\n\t\tassertTextAndMarker('\\\\$far-boo', '$far-boo', Text);\n\t\tassertTextAndMarker('far$farboo', 'far', Text, Variable);\n\t\tassertTextAndMarker('far${farboo}', 'far', Text, Variable);\n\t\tassertTextAndMarker('$123', '', Placeholder);\n\t\tassertTextAndMarker('$farboo', '', Variable);\n\t\tassertTextAndMarker('$far12boo', '', Variable);\n\t\tassertTextAndMarker('000_${far}_000', '000__000', Text, Variable, Text);\n\t\tassertTextAndMarker('FFF_${TM_SELECTED_TEXT}_FFF$0', 'FFF__FFF', Text, Variable, Text, Placeholder);\n\t});\n\n\ttest('Parser, variables/placeholder with defaults', () => {\n\t\tassertTextAndMarker('${name:value}', 'value', Variable);\n\t\tassertTextAndMarker('${1:value}', 'value', Placeholder);\n\t\tassertTextAndMarker('${1:bar${2:foo}bar}', 'barfoobar', Placeholder);\n\n\t\tassertTextAndMarker('${name:value', '${name:value', Text);\n\t\tassertTextAndMarker('${1:bar${2:foobar}', '${1:barfoobar', Text, Placeholder);\n\t});\n\n\ttest('Parser, variable transforms', function () {\n\t\tassertTextAndMarker('${foo///}', '', Variable);\n\t\tassertTextAndMarker('${foo/regex/format/gmi}', '', Variable);\n\t\tassertTextAndMarker('${foo/([A-Z][a-z])/format/}', '', Variable);\n\n\t\t// invalid regex\n\t\tassertTextAndMarker('${foo/([A-Z][a-z])/format/GMI}', '${foo/([A-Z][a-z])/format/GMI}', Text);\n\t\tassertTextAndMarker('${foo/([A-Z][a-z])/format/funky}', '${foo/([A-Z][a-z])/format/funky}', Text);\n\t\tassertTextAndMarker('${foo/([A-Z][a-z]/format/}', '${foo/([A-Z][a-z]/format/}', Text);\n\n\t\t// tricky regex\n\t\tassertTextAndMarker('${foo/m\\\\/atch/$1/i}', '', Variable);\n\t\tassertMarker('${foo/regex\\/format/options}', Text);\n\n\t\t// incomplete\n\t\tassertTextAndMarker('${foo///', '${foo///', Text);\n\t\tassertTextAndMarker('${foo/regex/format/options', '${foo/regex/format/options', Text);\n\n\t\t// format string\n\t\tassertMarker('${foo/.*/${0:fooo}/i}', Variable);\n\t\tassertMarker('${foo/.*/${1}/i}', Variable);\n\t\tassertMarker('${foo/.*/$1/i}', Variable);\n\t\tassertMarker('${foo/.*/This-$1-encloses/i}', Variable);\n\t\tassertMarker('${foo/.*/complex${1:else}/i}', Variable);\n\t\tassertMarker('${foo/.*/complex${1:-else}/i}', Variable);\n\t\tassertMarker('${foo/.*/complex${1:+if}/i}', Variable);\n\t\tassertMarker('${foo/.*/complex${1:?if:else}/i}', Variable);\n\t\tassertMarker('${foo/.*/complex${1:/upcase}/i}', Variable);\n\n\t});\n\n\ttest('Parser, placeholder transforms', function () {\n\t\tassertTextAndMarker('${1///}', '', Placeholder);\n\t\tassertTextAndMarker('${1/regex/format/gmi}', '', Placeholder);\n\t\tassertTextAndMarker('${1/([A-Z][a-z])/format/}', '', Placeholder);\n\n\t\t// tricky regex\n\t\tassertTextAndMarker('${1/m\\\\/atch/$1/i}', '', Placeholder);\n\t\tassertMarker('${1/regex\\/format/options}', Text);\n\n\t\t// incomplete\n\t\tassertTextAndMarker('${1///', '${1///', Text);\n\t\tassertTextAndMarker('${1/regex/format/options', '${1/regex/format/options', Text);\n\t});\n\n\ttest('No way to escape forward slash in snippet regex #36715', function () {\n\t\tassertMarker('${TM_DIRECTORY/src\\\\//$1/}', Variable);\n\t});\n\n\ttest('No way to escape forward slash in snippet format section #37562', function () {\n\t\tassertMarker('${TM_SELECTED_TEXT/a/\\\\/$1/g}', Variable);\n\t\tassertMarker('${TM_SELECTED_TEXT/a/in\\\\/$1ner/g}', Variable);\n\t\tassertMarker('${TM_SELECTED_TEXT/a/end\\\\//g}', Variable);\n\t});\n\n\ttest('Parser, placeholder with choice', () => {\n\n\t\tassertTextAndMarker('${1|one,two,three|}', 'one', Placeholder);\n\t\tassertTextAndMarker('${1|one|}', 'one', Placeholder);\n\t\tassertTextAndMarker('${1|one1,two2|}', 'one1', Placeholder);\n\t\tassertTextAndMarker('${1|one1\\\\,two2|}', 'one1,two2', Placeholder);\n\t\tassertTextAndMarker('${1|one1\\\\|two2|}', 'one1|two2', Placeholder);\n\t\tassertTextAndMarker('${1|one1\\\\atwo2|}', 'one1\\\\atwo2', Placeholder);\n\t\tassertTextAndMarker('${1|one,two,three,|}', '${1|one,two,three,|}', Text);\n\t\tassertTextAndMarker('${1|one,', '${1|one,', Text);\n\n\t\tconst p = new SnippetParser();\n\t\tconst snippet = p.parse('${1|one,two,three|}');\n\t\tassertMarker(snippet, Placeholder);\n\t\tconst expected = [Placeholder, Text, Text, Text];\n\t\tsnippet.walk(marker => {\n\t\t\tassert.strictEqual(marker, expected.shift());\n\t\t\treturn true;\n\t\t});\n\t});\n\n\ttest('Snippet choices: unable to escape comma and pipe, #31521', function () {\n\t\tassertTextAndMarker('console.log(${1|not\\\\, not, five, 5, 1   23|});', 'console.log(not, not);', Text, Placeholder, Text);\n\t});\n\n\ttest('Marker, toTextmateString()', function () {\n\n\t\tfunction assertTextsnippetString(input: string, expected: string): void {\n\t\t\tconst snippet = new SnippetParser().parse(input);\n\t\t\tconst actual = snippet.toTextmateString();\n\t\t\tassert.strictEqual(actual, expected);\n\t\t}\n\n\t\tassertTextsnippetString('$1', '$1');\n\t\tassertTextsnippetString('\\\\$1', '\\\\$1');\n\t\tassertTextsnippetString('console.log(${1|not\\\\, not, five, 5, 1   23|});', 'console.log(${1|not\\\\, not, five, 5, 1   23|});');\n\t\tassertTextsnippetString('console.log(${1|not\\\\, not, \\\\| five, 5, 1   23|});', 'console.log(${1|not\\\\, not, \\\\| five, 5, 1   23|});');\n\t\tassertTextsnippetString('this is text', 'this is text');\n\t\tassertTextsnippetString('this ${1:is ${2:nested with $var}}', 'this ${1:is ${2:nested with ${var}}}');\n\t\tassertTextsnippetString('this ${1:is ${2:nested with $var}}}', 'this ${1:is ${2:nested with ${var}}}\\\\}');\n\t});\n\n\ttest('Marker, toTextmateString() <-> identity', function () {\n\n\t\tfunction assertIdent(input: string): void {\n\t\t\t// full loop: (1) parse input, (2) generate textmate string, (3) parse, (4) ensure both trees are equal\n\t\t\tconst snippet = new SnippetParser().parse(input);\n\t\t\tconst input2 = snippet.toTextmateString();\n\t\t\tconst snippet2 = new SnippetParser().parse(input2);\n\n\t\t\tfunction checkCheckChildren(marker1: Marker, marker2: Marker) {\n\t\t\t\tassert.ok(marker1 instanceof Object.getPrototypeOf(marker2).constructor);\n\t\t\t\tassert.ok(marker2 instanceof Object.getPrototypeOf(marker1).constructor);\n\n\t\t\t\tassert.strictEqual(marker1.children.length, marker2.children.length);\n\t\t\t\tassert.strictEqual(marker1.toString(), marker2.toString());\n\n\t\t\t\tfor (let i = 0; i < marker1.children.length; i++) {\n\t\t\t\t\tcheckCheckChildren(marker1.children[i], marker2.children[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckCheckChildren(snippet, snippet2);\n\t\t}\n\n\t\tassertIdent('$1');\n\t\tassertIdent('\\\\$1');\n\t\tassertIdent('console.log(${1|not\\\\, not, five, 5, 1   23|});');\n\t\tassertIdent('console.log(${1|not\\\\, not, \\\\| five, 5, 1   23|});');\n\t\tassertIdent('this is text');\n\t\tassertIdent('this ${1:is ${2:nested with $var}}');\n\t\tassertIdent('this ${1:is ${2:nested with $var}}}');\n\t\tassertIdent('this ${1:is ${2:nested with $var}} and repeating $1');\n\t});\n\n\ttest('Parser, choise marker', () => {\n\t\tconst { placeholders } = new SnippetParser().parse('${1|one,two,three|}');\n\n\t\tassert.strictEqual(placeholders.length, 1);\n\t\tassert.ok(placeholders[0].choice instanceof Choice);\n\t\tassert.ok(placeholders[0].children[0] instanceof Choice);\n\t\tassert.strictEqual((<Choice>placeholders[0].children[0]).options.length, 3);\n\n\t\tassertText('${1|one,two,three|}', 'one');\n\t\tassertText('\\\\${1|one,two,three|}', '${1|one,two,three|}');\n\t\tassertText('${1\\\\|one,two,three|}', '${1\\\\|one,two,three|}');\n\t\tassertText('${1||}', '${1||}');\n\t});\n\n\ttest('Backslash character escape in choice tabstop doesn\\'t work #58494', function () {\n\n\t\tconst { placeholders } = new SnippetParser().parse('${1|\\\\,,},$,\\\\|,\\\\\\\\|}');\n\t\tassert.strictEqual(placeholders.length, 1);\n\t\tassert.ok(placeholders[0].choice instanceof Choice);\n\t});\n\n\ttest('Parser, only textmate', () => {\n\t\tconst p = new SnippetParser();\n\t\tassertMarker(p.parse('far{{}}boo'), Text);\n\t\tassertMarker(p.parse('far{{123}}boo'), Text);\n\t\tassertMarker(p.parse('far\\\\{{123}}boo'), Text);\n\n\t\tassertMarker(p.parse('far$0boo'), Text, Placeholder, Text);\n\t\tassertMarker(p.parse('far${123}boo'), Text, Placeholder, Text);\n\t\tassertMarker(p.parse('far\\\\${123}boo'), Text);\n\t});\n\n\ttest('Parser, real world', () => {\n\t\tlet marker = new SnippetParser().parse('console.warn(${1: $TM_SELECTED_TEXT })').children;\n\n\t\tassert.strictEqual(marker[0].toString(), 'console.warn(');\n\t\tassert.ok(marker[1] instanceof Placeholder);\n\t\tassert.strictEqual(marker[2].toString(), ')');\n\n\t\tconst placeholder = <Placeholder>marker[1];\n\t\tassert.strictEqual(placeholder.index, 1);\n\t\tassert.strictEqual(placeholder.children.length, 3);\n\t\tassert.ok(placeholder.children[0] instanceof Text);\n\t\tassert.ok(placeholder.children[1] instanceof Variable);\n\t\tassert.ok(placeholder.children[2] instanceof Text);\n\t\tassert.strictEqual(placeholder.children[0].toString(), ' ');\n\t\tassert.strictEqual(placeholder.children[1].toString(), '');\n\t\tassert.strictEqual(placeholder.children[2].toString(), ' ');\n\n\t\tconst nestedVariable = <Variable>placeholder.children[1];\n\t\tassert.strictEqual(nestedVariable.name, 'TM_SELECTED_TEXT');\n\t\tassert.strictEqual(nestedVariable.children.length, 0);\n\n\t\tmarker = new SnippetParser().parse('$TM_SELECTED_TEXT').children;\n\t\tassert.strictEqual(marker.length, 1);\n\t\tassert.ok(marker[0] instanceof Variable);\n\t});\n\n\ttest('Parser, transform example', () => {\n\t\tlet { children } = new SnippetParser().parse('${1:name} : ${2:type}${3/\\\\s:=(.*)/${1:+ :=}${1}/};\\n$0');\n\n\t\t//${1:name}\n\t\tassert.ok(children[0] instanceof Placeholder);\n\t\tassert.strictEqual(children[0].children.length, 1);\n\t\tassert.strictEqual(children[0].children[0].toString(), 'name');\n\t\tassert.strictEqual((<Placeholder>children[0]).transform, undefined);\n\n\t\t// :\n\t\tassert.ok(children[1] instanceof Text);\n\t\tassert.strictEqual(children[1].toString(), ' : ');\n\n\t\t//${2:type}\n\t\tassert.ok(children[2] instanceof Placeholder);\n\t\tassert.strictEqual(children[2].children.length, 1);\n\t\tassert.strictEqual(children[2].children[0].toString(), 'type');\n\n\t\t//${3/\\\\s:=(.*)/${1:+ :=}${1}/}\n\t\tassert.ok(children[3] instanceof Placeholder);\n\t\tassert.strictEqual(children[3].children.length, 0);\n\t\tassert.notStrictEqual((<Placeholder>children[3]).transform, undefined);\n\t\tlet transform = (<Placeholder>children[3]).transform!;\n\t\tassert.deepStrictEqual(transform.regexp, /\\s:=(.*)/);\n\t\tassert.strictEqual(transform.children.length, 2);\n\t\tassert.ok(transform.children[0] instanceof FormatString);\n\t\tassert.strictEqual((<FormatString>transform.children[0]).index, 1);\n\t\tassert.strictEqual((<FormatString>transform.children[0]).ifValue, ' :=');\n\t\tassert.ok(transform.children[1] instanceof FormatString);\n\t\tassert.strictEqual((<FormatString>transform.children[1]).index, 1);\n\t\tassert.ok(children[4] instanceof Text);\n\t\tassert.strictEqual(children[4].toString(), ';\\n');\n\n\t});\n\n\t// TODO @jrieken making this strictEqul causes circular json conversion errors\n\ttest('Parser, default placeholder values', () => {\n\n\t\tassertMarker('errorContext: `${1:err}`, error: $1', Text, Placeholder, Text, Placeholder);\n\n\t\tconst [, p1, , p2] = new SnippetParser().parse('errorContext: `${1:err}`, error:$1').children;\n\n\t\tassert.strictEqual((<Placeholder>p1).index, 1);\n\t\tassert.strictEqual((<Placeholder>p1).children.length, 1);\n\t\tassert.strictEqual((<Text>(<Placeholder>p1).children[0]).toString(), 'err');\n\n\t\tassert.strictEqual((<Placeholder>p2).index, 1);\n\t\tassert.strictEqual((<Placeholder>p2).children.length, 1);\n\t\tassert.strictEqual((<Text>(<Placeholder>p2).children[0]).toString(), 'err');\n\t});\n\n\t// TODO @jrieken making this strictEqul causes circular json conversion errors\n\ttest('Parser, default placeholder values and one transform', () => {\n\n\t\tassertMarker('errorContext: `${1:err}`, error: ${1/err/ok/}', Text, Placeholder, Text, Placeholder);\n\n\t\tconst [, p3, , p4] = new SnippetParser().parse('errorContext: `${1:err}`, error:${1/err/ok/}').children;\n\n\t\tassert.strictEqual((<Placeholder>p3).index, 1);\n\t\tassert.strictEqual((<Placeholder>p3).children.length, 1);\n\t\tassert.strictEqual((<Text>(<Placeholder>p3).children[0]).toString(), 'err');\n\t\tassert.strictEqual((<Placeholder>p3).transform, undefined);\n\n\t\tassert.strictEqual((<Placeholder>p4).index, 1);\n\t\tassert.strictEqual((<Placeholder>p4).children.length, 1);\n\t\tassert.strictEqual((<Text>(<Placeholder>p4).children[0]).toString(), 'err');\n\t\tassert.notStrictEqual((<Placeholder>p4).transform, undefined);\n\t});\n\n\ttest('Repeated snippet placeholder should always inherit, #31040', function () {\n\t\tassertText('${1:foo}-abc-$1', 'foo-abc-foo');\n\t\tassertText('${1:foo}-abc-${1}', 'foo-abc-foo');\n\t\tassertText('${1:foo}-abc-${1:bar}', 'foo-abc-foo');\n\t\tassertText('${1}-abc-${1:foo}', 'foo-abc-foo');\n\t});\n\n\ttest('backspace esapce in TM only, #16212', () => {\n\t\tconst actual = new SnippetParser().text('Foo \\\\\\\\${abc}bar');\n\t\tassert.strictEqual(actual, 'Foo \\\\bar');\n\t});\n\n\ttest('colon as variable/placeholder value, #16717', () => {\n\t\tlet actual = new SnippetParser().text('${TM_SELECTED_TEXT:foo:bar}');\n\t\tassert.strictEqual(actual, 'foo:bar');\n\n\t\tactual = new SnippetParser().text('${1:foo:bar}');\n\t\tassert.strictEqual(actual, 'foo:bar');\n\t});\n\n\ttest('incomplete placeholder', () => {\n\t\tassertTextAndMarker('${1:}', '', Placeholder);\n\t});\n\n\ttest('marker#len', () => {\n\n\t\tfunction assertLen(template: string, ...lengths: number[]): void {\n\t\t\tconst snippet = new SnippetParser().parse(template, true);\n\t\t\tsnippet.walk(m => {\n\t\t\t\tconst expected = lengths.shift();\n\t\t\t\tassert.strictEqual(m.len(), expected);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tassert.strictEqual(lengths.length, 0);\n\t\t}\n\n\t\tassertLen('text$0', 4, 0);\n\t\tassertLen('$1text$0', 0, 4, 0);\n\t\tassertLen('te$1xt$0', 2, 0, 2, 0);\n\t\tassertLen('errorContext: `${1:err}`, error: $0', 15, 0, 3, 10, 0);\n\t\tassertLen('errorContext: `${1:err}`, error: $1$0', 15, 0, 3, 10, 0, 3, 0);\n\t\tassertLen('$TM_SELECTED_TEXT$0', 0, 0);\n\t\tassertLen('${TM_SELECTED_TEXT:def}$0', 0, 3, 0);\n\t});\n\n\ttest('parser, parent node', function () {\n\t\tlet snippet = new SnippetParser().parse('This ${1:is ${2:nested}}$0', true);\n\n\t\tassert.strictEqual(snippet.placeholders.length, 3);\n\t\tlet [first, second] = snippet.placeholders;\n\t\tassert.strictEqual(first.index, 1);\n\t\tassert.strictEqual(second.index, 2);\n\t\tassert.ok(second.parent === first);\n\t\tassert.ok(first.parent === snippet);\n\n\t\tsnippet = new SnippetParser().parse('${VAR:default${1:value}}$0', true);\n\t\tassert.strictEqual(snippet.placeholders.length, 2);\n\t\t[first] = snippet.placeholders;\n\t\tassert.strictEqual(first.index, 1);\n\n\t\tassert.ok(snippet.children[0] instanceof Variable);\n\t\tassert.ok(first.parent === snippet.children[0]);\n\t});\n\n\ttest('TextmateSnippet#enclosingPlaceholders', () => {\n\t\tlet snippet = new SnippetParser().parse('This ${1:is ${2:nested}}$0', true);\n\t\tlet [first, second] = snippet.placeholders;\n\n\t\tassert.deepStrictEqual(snippet.enclosingPlaceholders(first), []);\n\t\tassert.deepStrictEqual(snippet.enclosingPlaceholders(second), [first]);\n\t});\n\n\ttest('TextmateSnippet#offset', () => {\n\t\tlet snippet = new SnippetParser().parse('te$1xt', true);\n\t\tassert.strictEqual(snippet.offset(snippet.children[0]), 0);\n\t\tassert.strictEqual(snippet.offset(snippet.children[1]), 2);\n\t\tassert.strictEqual(snippet.offset(snippet.children[2]), 2);\n\n\t\tsnippet = new SnippetParser().parse('${TM_SELECTED_TEXT:def}', true);\n\t\tassert.strictEqual(snippet.offset(snippet.children[0]), 0);\n\t\tassert.strictEqual(snippet.offset((<Variable>snippet.children[0]).children[0]), 0);\n\n\t\t// forgein marker\n\t\tassert.strictEqual(snippet.offset(new Text('foo')), -1);\n\t});\n\n\ttest('TextmateSnippet#placeholder', () => {\n\t\tlet snippet = new SnippetParser().parse('te$1xt$0', true);\n\t\tlet placeholders = snippet.placeholders;\n\t\tassert.strictEqual(placeholders.length, 2);\n\n\t\tsnippet = new SnippetParser().parse('te$1xt$1$0', true);\n\t\tplaceholders = snippet.placeholders;\n\t\tassert.strictEqual(placeholders.length, 3);\n\n\n\t\tsnippet = new SnippetParser().parse('te$1xt$2$0', true);\n\t\tplaceholders = snippet.placeholders;\n\t\tassert.strictEqual(placeholders.length, 3);\n\n\t\tsnippet = new SnippetParser().parse('${1:bar${2:foo}bar}$0', true);\n\t\tplaceholders = snippet.placeholders;\n\t\tassert.strictEqual(placeholders.length, 3);\n\t});\n\n\ttest('TextmateSnippet#replace 1/2', function () {\n\t\tlet snippet = new SnippetParser().parse('aaa${1:bbb${2:ccc}}$0', true);\n\n\t\tassert.strictEqual(snippet.placeholders.length, 3);\n\t\tconst [, second] = snippet.placeholders;\n\t\tassert.strictEqual(second.index, 2);\n\n\t\tconst enclosing = snippet.enclosingPlaceholders(second);\n\t\tassert.strictEqual(enclosing.length, 1);\n\t\tassert.strictEqual(enclosing[0].index, 1);\n\n\t\tlet nested = new SnippetParser().parse('ddd$1eee$0', true);\n\t\tsnippet.replace(second, nested.children);\n\n\t\tassert.strictEqual(snippet.toString(), 'aaabbbdddeee');\n\t\tassert.strictEqual(snippet.placeholders.length, 4);\n\t\tassert.strictEqual(snippet.placeholders[0].index, 1);\n\t\tassert.strictEqual(snippet.placeholders[1].index, 1);\n\t\tassert.strictEqual(snippet.placeholders[2].index, 0);\n\t\tassert.strictEqual(snippet.placeholders[3].index, 0);\n\n\t\tconst newEnclosing = snippet.enclosingPlaceholders(snippet.placeholders[1]);\n\t\tassert.ok(newEnclosing[0] === snippet.placeholders[0]);\n\t\tassert.strictEqual(newEnclosing.length, 1);\n\t\tassert.strictEqual(newEnclosing[0].index, 1);\n\t});\n\n\ttest('TextmateSnippet#replace 2/2', function () {\n\t\tlet snippet = new SnippetParser().parse('aaa${1:bbb${2:ccc}}$0', true);\n\n\t\tassert.strictEqual(snippet.placeholders.length, 3);\n\t\tconst [, second] = snippet.placeholders;\n\t\tassert.strictEqual(second.index, 2);\n\n\t\tlet nested = new SnippetParser().parse('dddeee$0', true);\n\t\tsnippet.replace(second, nested.children);\n\n\t\tassert.strictEqual(snippet.toString(), 'aaabbbdddeee');\n\t\tassert.strictEqual(snippet.placeholders.length, 3);\n\t});\n\n\ttest('Snippet order for placeholders, #28185', function () {\n\n\t\tconst _10 = new Placeholder(10);\n\t\tconst _2 = new Placeholder(2);\n\n\t\tassert.strictEqual(Placeholder.compareByIndex(_10, _2), 1);\n\t});\n\n\ttest('Maximum call stack size exceeded, #28983', function () {\n\t\tnew SnippetParser().parse('${1:${foo:${1}}}');\n\t});\n\n\ttest('Snippet can freeze the editor, #30407', function () {\n\n\t\tconst seen = new Set<Marker>();\n\n\t\tseen.clear();\n\t\tnew SnippetParser().parse('class ${1:${TM_FILENAME/(?:\\\\A|_)([A-Za-z0-9]+)(?:\\\\.rb)?/(?2::\\\\u$1)/g}} < ${2:Application}Controller\\n  $3\\nend').walk(marker => {\n\t\t\tassert.ok(!seen.has(marker));\n\t\t\tseen.add(marker);\n\t\t\treturn true;\n\t\t});\n\n\t\tseen.clear();\n\t\tnew SnippetParser().parse('${1:${FOO:abc$1def}}').walk(marker => {\n\t\t\tassert.ok(!seen.has(marker));\n\t\t\tseen.add(marker);\n\t\t\treturn true;\n\t\t});\n\t});\n\n\ttest('Snippets: make parser ignore `${0|choice|}`, #31599', function () {\n\t\tassertTextAndMarker('${0|foo,bar|}', '${0|foo,bar|}', Text);\n\t\tassertTextAndMarker('${1|foo,bar|}', 'foo', Placeholder);\n\t});\n\n\n\ttest('Transform -> FormatString#resolve', function () {\n\n\t\t// shorthand functions\n\t\tassert.strictEqual(new FormatString(1, 'upcase').resolve('foo'), 'FOO');\n\t\tassert.strictEqual(new FormatString(1, 'downcase').resolve('FOO'), 'foo');\n\t\tassert.strictEqual(new FormatString(1, 'capitalize').resolve('bar'), 'Bar');\n\t\tassert.strictEqual(new FormatString(1, 'capitalize').resolve('bar no repeat'), 'Bar no repeat');\n\t\tassert.strictEqual(new FormatString(1, 'pascalcase').resolve('bar-foo'), 'BarFoo');\n\t\tassert.strictEqual(new FormatString(1, 'notKnown').resolve('input'), 'input');\n\n\t\t// if\n\t\tassert.strictEqual(new FormatString(1, undefined, 'foo', undefined).resolve(undefined), '');\n\t\tassert.strictEqual(new FormatString(1, undefined, 'foo', undefined).resolve(''), '');\n\t\tassert.strictEqual(new FormatString(1, undefined, 'foo', undefined).resolve('bar'), 'foo');\n\n\t\t// else\n\t\tassert.strictEqual(new FormatString(1, undefined, undefined, 'foo').resolve(undefined), 'foo');\n\t\tassert.strictEqual(new FormatString(1, undefined, undefined, 'foo').resolve(''), 'foo');\n\t\tassert.strictEqual(new FormatString(1, undefined, undefined, 'foo').resolve('bar'), 'bar');\n\n\t\t// if-else\n\t\tassert.strictEqual(new FormatString(1, undefined, 'bar', 'foo').resolve(undefined), 'foo');\n\t\tassert.strictEqual(new FormatString(1, undefined, 'bar', 'foo').resolve(''), 'foo');\n\t\tassert.strictEqual(new FormatString(1, undefined, 'bar', 'foo').resolve('baz'), 'bar');\n\t});\n\n\ttest('Snippet variable transformation doesn\\'t work if regex is complicated and snippet body contains \\'$$\\' #55627', function () {\n\t\tconst snippet = new SnippetParser().parse('const fileName = \"${TM_FILENAME/(.*)\\\\..+$/$1/}\"');\n\t\tassert.strictEqual(snippet.toTextmateString(), 'const fileName = \"${TM_FILENAME/(.*)\\\\..+$/${1}/}\"');\n\t});\n\n\ttest('[BUG] HTML attribute suggestions: Snippet session does not have end-position set, #33147', function () {\n\n\t\tconst { placeholders } = new SnippetParser().parse('src=\"$1\"', true);\n\t\tconst [first, second] = placeholders;\n\n\t\tassert.strictEqual(placeholders.length, 2);\n\t\tassert.strictEqual(first.index, 1);\n\t\tassert.strictEqual(second.index, 0);\n\n\t});\n\n\ttest('Snippet optional transforms are not applied correctly when reusing the same variable, #37702', function () {\n\n\t\tconst transform = new Transform();\n\t\ttransform.appendChild(new FormatString(1, 'upcase'));\n\t\ttransform.appendChild(new FormatString(2, 'upcase'));\n\t\ttransform.regexp = /^(.)|-(.)/g;\n\n\t\tassert.strictEqual(transform.resolve('my-file-name'), 'MyFileName');\n\n\t\tconst clone = transform.clone();\n\t\tassert.strictEqual(clone.resolve('my-file-name'), 'MyFileName');\n\t});\n\n\ttest('problem with snippets regex #40570', function () {\n\n\t\tconst snippet = new SnippetParser().parse('${TM_DIRECTORY/.*src[\\\\/](.*)/$1/}');\n\t\tassertMarker(snippet, Variable);\n\t});\n\n\ttest('Variable transformation doesn\\'t work if undefined variables are used in the same snippet #51769', function () {\n\t\tlet transform = new Transform();\n\t\ttransform.appendChild(new Text('bar'));\n\t\ttransform.regexp = new RegExp('foo', 'gi');\n\t\tassert.strictEqual(transform.toTextmateString(), '/foo/bar/ig');\n\t});\n\n\ttest('Snippet parser freeze #53144', function () {\n\t\tlet snippet = new SnippetParser().parse('${1/(void$)|(.+)/${1:?-\\treturn nil;}/}');\n\t\tassertMarker(snippet, Placeholder);\n\t});\n\n\ttest('snippets variable not resolved in JSON proposal #52931', function () {\n\t\tassertTextAndMarker('FOO${1:/bin/bash}', 'FOO/bin/bash', Text, Placeholder);\n\t});\n\n\ttest('Mirroring sequence of nested placeholders not selected properly on backjumping #58736', function () {\n\t\tlet snippet = new SnippetParser().parse('${3:nest1 ${1:nest2 ${2:nest3}}} $3');\n\t\tassert.strictEqual(snippet.children.length, 3);\n\t\tassert.ok(snippet.children[0] instanceof Placeholder);\n\t\tassert.ok(snippet.children[1] instanceof Text);\n\t\tassert.ok(snippet.children[2] instanceof Placeholder);\n\n\t\tfunction assertParent(marker: Marker) {\n\t\t\tmarker.children.forEach(assertParent);\n\t\t\tif (!(marker instanceof Placeholder)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tlet m: Marker = marker;\n\t\t\twhile (m && !found) {\n\t\t\t\tif (m.parent === snippet) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t\tm = m.parent;\n\t\t\t}\n\t\t\tassert.ok(found);\n\t\t}\n\t\tlet [, , clone] = snippet.children;\n\t\tassertParent(clone);\n\t});\n\n\ttest('Backspace can\\'t be escaped in snippet variable transforms #65412', function () {\n\n\t\tlet snippet = new SnippetParser().parse('namespace ${TM_DIRECTORY/[\\\\/]/\\\\\\\\/g};');\n\t\tassertMarker(snippet, Text, Variable, Text);\n\t});\n\n\ttest('Snippet cannot escape closing bracket inside conditional insertion variable replacement #78883', function () {\n\n\t\tlet snippet = new SnippetParser().parse('${TM_DIRECTORY/(.+)/${1:+import { hello \\\\} from world}/}');\n\t\tlet variable = <Variable>snippet.children[0];\n\t\tassert.strictEqual(snippet.children.length, 1);\n\t\tassert.ok(variable instanceof Variable);\n\t\tassert.ok(variable.transform);\n\t\tassert.strictEqual(variable.transform!.children.length, 1);\n\t\tassert.ok(variable.transform!.children[0] instanceof FormatString);\n\t\tassert.strictEqual((<FormatString>variable.transform!.children[0]).ifValue, 'import { hello } from world');\n\t\tassert.strictEqual((<FormatString>variable.transform!.children[0]).elseValue, undefined);\n\t});\n\n\ttest('Snippet escape backslashes inside conditional insertion variable replacement #80394', function () {\n\n\t\tlet snippet = new SnippetParser().parse('${CURRENT_YEAR/(.+)/${1:+\\\\\\\\}/}');\n\t\tlet variable = <Variable>snippet.children[0];\n\t\tassert.strictEqual(snippet.children.length, 1);\n\t\tassert.ok(variable instanceof Variable);\n\t\tassert.ok(variable.transform);\n\t\tassert.strictEqual(variable.transform!.children.length, 1);\n\t\tassert.ok(variable.transform!.children[0] instanceof FormatString);\n\t\tassert.strictEqual((<FormatString>variable.transform!.children[0]).ifValue, '\\\\');\n\t\tassert.strictEqual((<FormatString>variable.transform!.children[0]).elseValue, undefined);\n\t});\n});\n"]}