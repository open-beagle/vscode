{"version":3,"file":"snippetVariables.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/snippet/test/snippetVariables.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { SelectionBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, ClipboardBasedVariableResolver, TimeBasedVariableResolver, WorkspaceBasedVariableResolver } from 'vs/editor/contrib/snippet/snippetVariables';\nimport { SnippetParser, Variable, VariableResolver } from 'vs/editor/contrib/snippet/snippetParser';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { IWorkspace, IWorkspaceContextService, toWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { mock } from 'vs/base/test/common/mock';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { sep } from 'vs/base/common/path';\nimport { toWorkspaceFolders } from 'vs/platform/workspaces/common/workspaces';\n\nsuite('Snippet Variables Resolver', function () {\n\n\tconst labelService = new class extends mock<ILabelService>() {\n\t\toverride getUriLabel(uri: URI) {\n\t\t\treturn uri.fsPath;\n\t\t}\n\t};\n\n\tlet model: TextModel;\n\tlet resolver: VariableResolver;\n\n\tsetup(function () {\n\t\tmodel = createTextModel([\n\t\t\t'this is line one',\n\t\t\t'this is line two',\n\t\t\t'    this is line three'\n\t\t].join('\\n'), undefined, undefined, URI.parse('file:///foo/files/text.txt'));\n\n\t\tresolver = new CompositeSnippetVariableResolver([\n\t\t\tnew ModelBasedVariableResolver(labelService, model),\n\t\t\tnew SelectionBasedVariableResolver(model, new Selection(1, 1, 1, 1), 0, undefined),\n\t\t]);\n\t});\n\n\tteardown(function () {\n\t\tmodel.dispose();\n\t});\n\n\tfunction assertVariableResolve(resolver: VariableResolver, varName: string, expected?: string) {\n\t\tconst snippet = new SnippetParser().parse(`$${varName}`);\n\t\tconst variable = <Variable>snippet.children[0];\n\t\tvariable.resolve(resolver);\n\t\tif (variable.children.length === 0) {\n\t\t\tassert.strictEqual(undefined, expected);\n\t\t} else {\n\t\t\tassert.strictEqual(variable.toString(), expected);\n\t\t}\n\t}\n\n\ttest('editor variables, basics', function () {\n\t\tassertVariableResolve(resolver, 'TM_FILENAME', 'text.txt');\n\t\tassertVariableResolve(resolver, 'something', undefined);\n\t});\n\n\ttest('editor variables, file/dir', function () {\n\n\t\tassertVariableResolve(resolver, 'TM_FILENAME', 'text.txt');\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'TM_DIRECTORY', '/foo/files');\n\t\t\tassertVariableResolve(resolver, 'TM_FILEPATH', '/foo/files/text.txt');\n\t\t}\n\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tlabelService,\n\t\t\tcreateTextModel('', undefined, undefined, URI.parse('http://www.pb.o/abc/def/ghi'))\n\t\t);\n\t\tassertVariableResolve(resolver, 'TM_FILENAME', 'ghi');\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'TM_DIRECTORY', '/abc/def');\n\t\t\tassertVariableResolve(resolver, 'TM_FILEPATH', '/abc/def/ghi');\n\t\t}\n\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tlabelService,\n\t\t\tcreateTextModel('', undefined, undefined, URI.parse('mem:fff.ts'))\n\t\t);\n\t\tassertVariableResolve(resolver, 'TM_DIRECTORY', '');\n\t\tassertVariableResolve(resolver, 'TM_FILEPATH', 'fff.ts');\n\n\t});\n\n\ttest('Path delimiters in code snippet variables aren\\'t specific to remote OS #76840', function () {\n\n\t\tconst labelService = new class extends mock<ILabelService>() {\n\t\t\toverride getUriLabel(uri: URI) {\n\t\t\t\treturn uri.fsPath.replace(/\\/|\\\\/g, '|');\n\t\t\t}\n\t\t};\n\n\t\tconst model = createTextModel([].join('\\n'), undefined, undefined, URI.parse('foo:///foo/files/text.txt'));\n\n\t\tconst resolver = new CompositeSnippetVariableResolver([new ModelBasedVariableResolver(labelService, model)]);\n\n\t\tassertVariableResolve(resolver, 'TM_FILEPATH', '|foo|files|text.txt');\n\t});\n\n\ttest('editor variables, selection', function () {\n\n\t\tresolver = new SelectionBasedVariableResolver(model, new Selection(1, 2, 2, 3), 0, undefined);\n\t\tassertVariableResolve(resolver, 'TM_SELECTED_TEXT', 'his is line one\\nth');\n\t\tassertVariableResolve(resolver, 'TM_CURRENT_LINE', 'this is line two');\n\t\tassertVariableResolve(resolver, 'TM_LINE_INDEX', '1');\n\t\tassertVariableResolve(resolver, 'TM_LINE_NUMBER', '2');\n\n\t\tresolver = new SelectionBasedVariableResolver(model, new Selection(2, 3, 1, 2), 0, undefined);\n\t\tassertVariableResolve(resolver, 'TM_SELECTED_TEXT', 'his is line one\\nth');\n\t\tassertVariableResolve(resolver, 'TM_CURRENT_LINE', 'this is line one');\n\t\tassertVariableResolve(resolver, 'TM_LINE_INDEX', '0');\n\t\tassertVariableResolve(resolver, 'TM_LINE_NUMBER', '1');\n\n\t\tresolver = new SelectionBasedVariableResolver(model, new Selection(1, 2, 1, 2), 0, undefined);\n\t\tassertVariableResolve(resolver, 'TM_SELECTED_TEXT', undefined);\n\n\t\tassertVariableResolve(resolver, 'TM_CURRENT_WORD', 'this');\n\n\t\tresolver = new SelectionBasedVariableResolver(model, new Selection(3, 1, 3, 1), 0, undefined);\n\t\tassertVariableResolve(resolver, 'TM_CURRENT_WORD', undefined);\n\n\t});\n\n\ttest('TextmateSnippet, resolve variable', function () {\n\t\tconst snippet = new SnippetParser().parse('\"$TM_CURRENT_WORD\"', true);\n\t\tassert.strictEqual(snippet.toString(), '\"\"');\n\t\tsnippet.resolveVariables(resolver);\n\t\tassert.strictEqual(snippet.toString(), '\"this\"');\n\n\t});\n\n\ttest('TextmateSnippet, resolve variable with default', function () {\n\t\tconst snippet = new SnippetParser().parse('\"${TM_CURRENT_WORD:foo}\"', true);\n\t\tassert.strictEqual(snippet.toString(), '\"foo\"');\n\t\tsnippet.resolveVariables(resolver);\n\t\tassert.strictEqual(snippet.toString(), '\"this\"');\n\t});\n\n\ttest('More useful environment variables for snippets, #32737', function () {\n\n\t\tassertVariableResolve(resolver, 'TM_FILENAME_BASE', 'text');\n\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tlabelService,\n\t\t\tcreateTextModel('', undefined, undefined, URI.parse('http://www.pb.o/abc/def/ghi'))\n\t\t);\n\t\tassertVariableResolve(resolver, 'TM_FILENAME_BASE', 'ghi');\n\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tlabelService,\n\t\t\tcreateTextModel('', undefined, undefined, URI.parse('mem:.git'))\n\t\t);\n\t\tassertVariableResolve(resolver, 'TM_FILENAME_BASE', '.git');\n\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tlabelService,\n\t\t\tcreateTextModel('', undefined, undefined, URI.parse('mem:foo.'))\n\t\t);\n\t\tassertVariableResolve(resolver, 'TM_FILENAME_BASE', 'foo');\n\t});\n\n\n\tfunction assertVariableResolve2(input: string, expected: string, varValue?: string) {\n\t\tconst snippet = new SnippetParser().parse(input)\n\t\t\t.resolveVariables({ resolve(variable) { return varValue || variable.name; } });\n\n\t\tconst actual = snippet.toString();\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\ttest('Variable Snippet Transform', function () {\n\n\t\tconst snippet = new SnippetParser().parse('name=${TM_FILENAME/(.*)\\\\..+$/$1/}', true);\n\t\tsnippet.resolveVariables(resolver);\n\t\tassert.strictEqual(snippet.toString(), 'name=text');\n\n\t\tassertVariableResolve2('${ThisIsAVar/([A-Z]).*(Var)/$2/}', 'Var');\n\t\tassertVariableResolve2('${ThisIsAVar/([A-Z]).*(Var)/$2-${1:/downcase}/}', 'Var-t');\n\t\tassertVariableResolve2('${Foo/(.*)/${1:+Bar}/img}', 'Bar');\n\n\t\t//https://github.com/microsoft/vscode/issues/33162\n\t\tassertVariableResolve2('export default class ${TM_FILENAME/(\\\\w+)\\\\.js/$1/g}', 'export default class FooFile', 'FooFile.js');\n\n\t\tassertVariableResolve2('${foobarfoobar/(foo)/${1:+FAR}/g}', 'FARbarFARbar'); // global\n\t\tassertVariableResolve2('${foobarfoobar/(foo)/${1:+FAR}/}', 'FARbarfoobar'); // first match\n\t\tassertVariableResolve2('${foobarfoobar/(bazz)/${1:+FAR}/g}', 'foobarfoobar'); // no match, no else\n\t\t// assertVariableResolve2('${foobarfoobar/(bazz)/${1:+FAR}/g}', ''); // no match\n\n\t\tassertVariableResolve2('${foobarfoobar/(foo)/${2:+FAR}/g}', 'barbar'); // bad group reference\n\t});\n\n\ttest('Snippet transforms do not handle regex with alternatives or optional matches, #36089', function () {\n\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME/^(.)|(?:-(.))|(\\\\.js)/${1:/upcase}${2:/upcase}/g}',\n\t\t\t'MyClass',\n\t\t\t'my-class.js'\n\t\t);\n\n\t\t// no hyphens\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME/^(.)|(?:-(.))|(\\\\.js)/${1:/upcase}${2:/upcase}/g}',\n\t\t\t'Myclass',\n\t\t\t'myclass.js'\n\t\t);\n\n\t\t// none matching suffix\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME/^(.)|(?:-(.))|(\\\\.js)/${1:/upcase}${2:/upcase}/g}',\n\t\t\t'Myclass.foo',\n\t\t\t'myclass.foo'\n\t\t);\n\n\t\t// more than one hyphen\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME/^(.)|(?:-(.))|(\\\\.js)/${1:/upcase}${2:/upcase}/g}',\n\t\t\t'ThisIsAFile',\n\t\t\t'this-is-a-file.js'\n\t\t);\n\n\t\t// KEBAB CASE\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME_BASE/([A-Z][a-z]+)([A-Z][a-z]+$)?/${1:/downcase}-${2:/downcase}/g}',\n\t\t\t'capital-case',\n\t\t\t'CapitalCase'\n\t\t);\n\n\t\tassertVariableResolve2(\n\t\t\t'${TM_FILENAME_BASE/([A-Z][a-z]+)([A-Z][a-z]+$)?/${1:/downcase}-${2:/downcase}/g}',\n\t\t\t'capital-case-more',\n\t\t\t'CapitalCaseMore'\n\t\t);\n\t});\n\n\ttest('Add variable to insert value from clipboard to a snippet #40153', function () {\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => undefined, 1, 0, true), 'CLIPBOARD', undefined);\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => null!, 1, 0, true), 'CLIPBOARD', undefined);\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => '', 1, 0, true), 'CLIPBOARD', undefined);\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'foo', 1, 0, true), 'CLIPBOARD', 'foo');\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'foo', 1, 0, true), 'foo', undefined);\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'foo', 1, 0, true), 'cLIPBOARD', undefined);\n\t});\n\n\ttest('Add variable to insert value from clipboard to a snippet #40153', function () {\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'line1', 1, 2, true), 'CLIPBOARD', 'line1');\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'line1\\nline2\\nline3', 1, 2, true), 'CLIPBOARD', 'line1\\nline2\\nline3');\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'line1\\nline2', 1, 2, true), 'CLIPBOARD', 'line2');\n\t\tresolver = new ClipboardBasedVariableResolver(() => 'line1\\nline2', 0, 2, true);\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'line1\\nline2', 0, 2, true), 'CLIPBOARD', 'line1');\n\n\t\tassertVariableResolve(new ClipboardBasedVariableResolver(() => 'line1\\nline2', 0, 2, false), 'CLIPBOARD', 'line1\\nline2');\n\t});\n\n\n\tfunction assertVariableResolve3(resolver: VariableResolver, varName: string) {\n\t\tconst snippet = new SnippetParser().parse(`$${varName}`);\n\t\tconst variable = <Variable>snippet.children[0];\n\n\t\tassert.strictEqual(variable.resolve(resolver), true, `${varName} failed to resolve`);\n\t}\n\n\ttest('Add time variables for snippets #41631, #43140', function () {\n\n\t\tconst resolver = new TimeBasedVariableResolver;\n\n\t\tassertVariableResolve3(resolver, 'CURRENT_YEAR');\n\t\tassertVariableResolve3(resolver, 'CURRENT_YEAR_SHORT');\n\t\tassertVariableResolve3(resolver, 'CURRENT_MONTH');\n\t\tassertVariableResolve3(resolver, 'CURRENT_DATE');\n\t\tassertVariableResolve3(resolver, 'CURRENT_HOUR');\n\t\tassertVariableResolve3(resolver, 'CURRENT_MINUTE');\n\t\tassertVariableResolve3(resolver, 'CURRENT_SECOND');\n\t\tassertVariableResolve3(resolver, 'CURRENT_DAY_NAME');\n\t\tassertVariableResolve3(resolver, 'CURRENT_DAY_NAME_SHORT');\n\t\tassertVariableResolve3(resolver, 'CURRENT_MONTH_NAME');\n\t\tassertVariableResolve3(resolver, 'CURRENT_MONTH_NAME_SHORT');\n\t\tassertVariableResolve3(resolver, 'CURRENT_SECONDS_UNIX');\n\t});\n\n\ttest('creating snippet - format-condition doesn\\'t work #53617', function () {\n\n\t\tconst snippet = new SnippetParser().parse('${TM_LINE_NUMBER/(10)/${1:?It is:It is not}/} line 10', true);\n\t\tsnippet.resolveVariables({ resolve() { return '10'; } });\n\t\tassert.strictEqual(snippet.toString(), 'It is line 10');\n\n\t\tsnippet.resolveVariables({ resolve() { return '11'; } });\n\t\tassert.strictEqual(snippet.toString(), 'It is not line 10');\n\t});\n\n\ttest('Add workspace name and folder variables for snippets #68261', function () {\n\n\t\tlet workspace: IWorkspace;\n\t\tlet resolver: VariableResolver;\n\t\tconst workspaceService = new class implements IWorkspaceContextService {\n\t\t\tdeclare readonly _serviceBrand: undefined;\n\t\t\t_throw = () => { throw new Error(); };\n\t\t\tonDidChangeWorkbenchState = this._throw;\n\t\t\tonDidChangeWorkspaceName = this._throw;\n\t\t\tonWillChangeWorkspaceFolders = this._throw;\n\t\t\tonDidChangeWorkspaceFolders = this._throw;\n\t\t\tgetCompleteWorkspace = this._throw;\n\t\t\tgetWorkspace(): IWorkspace { return workspace; }\n\t\t\tgetWorkbenchState = this._throw;\n\t\t\tgetWorkspaceFolder = this._throw;\n\t\t\tisCurrentWorkspace = this._throw;\n\t\t\tisInsideWorkspace = this._throw;\n\t\t};\n\n\t\tresolver = new WorkspaceBasedVariableResolver(workspaceService);\n\n\t\t// empty workspace\n\t\tworkspace = new Workspace('');\n\t\tassertVariableResolve(resolver, 'WORKSPACE_NAME', undefined);\n\t\tassertVariableResolve(resolver, 'WORKSPACE_FOLDER', undefined);\n\n\t\t// single folder workspace without config\n\t\tworkspace = new Workspace('', [toWorkspaceFolder(URI.file('/folderName'))]);\n\t\tassertVariableResolve(resolver, 'WORKSPACE_NAME', 'folderName');\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'WORKSPACE_FOLDER', '/folderName');\n\t\t}\n\n\t\t// workspace with config\n\t\tconst workspaceConfigPath = URI.file('testWorkspace.code-workspace');\n\t\tworkspace = new Workspace('', toWorkspaceFolders([{ path: 'folderName' }], workspaceConfigPath, extUriBiasedIgnorePathCase), workspaceConfigPath);\n\t\tassertVariableResolve(resolver, 'WORKSPACE_NAME', 'testWorkspace');\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'WORKSPACE_FOLDER', '/');\n\t\t}\n\t});\n\n\ttest('Add RELATIVE_FILEPATH snippet variable #114208', function () {\n\n\t\tlet resolver: VariableResolver;\n\n\t\t// Mock a label service (only coded for file uris)\n\t\tconst workspaceLabelService = ((rootPath: string): ILabelService => {\n\t\t\tconst labelService = new class extends mock<ILabelService>() {\n\t\t\t\toverride getUriLabel(uri: URI, options: { relative?: boolean } = {}) {\n\t\t\t\t\tconst rootFsPath = URI.file(rootPath).fsPath + sep;\n\t\t\t\t\tconst fsPath = uri.fsPath;\n\t\t\t\t\tif (options.relative && rootPath && fsPath.startsWith(rootFsPath)) {\n\t\t\t\t\t\treturn fsPath.substring(rootFsPath.length);\n\t\t\t\t\t}\n\t\t\t\t\treturn fsPath;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn labelService;\n\t\t});\n\n\t\tconst model = createTextModel('', undefined, undefined, URI.parse('file:///foo/files/text.txt'));\n\n\t\t// empty workspace\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tworkspaceLabelService(''),\n\t\t\tmodel\n\t\t);\n\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'RELATIVE_FILEPATH', '/foo/files/text.txt');\n\t\t} else {\n\t\t\tassertVariableResolve(resolver, 'RELATIVE_FILEPATH', '\\\\foo\\\\files\\\\text.txt');\n\t\t}\n\n\t\t// single folder workspace\n\t\tresolver = new ModelBasedVariableResolver(\n\t\t\tworkspaceLabelService('/foo'),\n\t\t\tmodel\n\t\t);\n\t\tif (!isWindows) {\n\t\t\tassertVariableResolve(resolver, 'RELATIVE_FILEPATH', 'files/text.txt');\n\t\t} else {\n\t\t\tassertVariableResolve(resolver, 'RELATIVE_FILEPATH', 'files\\\\text.txt');\n\t\t}\n\t});\n});\n"]}