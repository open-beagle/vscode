{"version":3,"sources":["vs/editor/contrib/snippet/snippetController2.ts"],"names":[],"mappings":"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","file":"snippetController2.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CompletionItem, CompletionItemKind } from 'vs/editor/common/modes';\nimport { Choice } from 'vs/editor/contrib/snippet/snippetParser';\nimport { showSimpleSuggestions } from 'vs/editor/contrib/suggest/suggest';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { SnippetSession } from './snippetSession';\nimport { OvertypingCapturer } from 'vs/editor/contrib/suggest/suggestOvertypingCapturer';\nimport { localize } from 'vs/nls';\n\nexport interface ISnippetInsertOptions {\n\toverwriteBefore: number;\n\toverwriteAfter: number;\n\tadjustWhitespace: boolean;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n\tclipboardText: string | undefined;\n\tovertypingCapturer: OvertypingCapturer | undefined;\n}\n\nconst _defaultOptions: ISnippetInsertOptions = {\n\toverwriteBefore: 0,\n\toverwriteAfter: 0,\n\tundoStopBefore: true,\n\tundoStopAfter: true,\n\tadjustWhitespace: true,\n\tclipboardText: undefined,\n\tovertypingCapturer: undefined\n};\n\nexport class SnippetController2 implements IEditorContribution {\n\n\tpublic static ID = 'snippetController2';\n\n\tstatic get(editor: ICodeEditor): SnippetController2 {\n\t\treturn editor.getContribution<SnippetController2>(SnippetController2.ID);\n\t}\n\n\tstatic readonly InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\n\tstatic readonly HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\n\tstatic readonly HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\n\n\tprivate readonly _inSnippet: IContextKey<boolean>;\n\tprivate readonly _hasNextTabstop: IContextKey<boolean>;\n\tprivate readonly _hasPrevTabstop: IContextKey<boolean>;\n\n\tprivate _session?: SnippetSession;\n\tprivate _snippetListener = new DisposableStore();\n\tprivate _modelVersionId: number = -1;\n\tprivate _currentChoice?: Choice;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n\t\tthis._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n\t\tthis._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._session?.dispose();\n\t\tthis._snippetListener.dispose();\n\t}\n\n\tinsert(\n\t\ttemplate: string,\n\t\topts?: Partial<ISnippetInsertOptions>\n\t): void {\n\t\t// this is here to find out more about the yet-not-understood\n\t\t// error that sometimes happens when we fail to inserted a nested\n\t\t// snippet\n\t\ttry {\n\t\t\tthis._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n\n\t\t} catch (e) {\n\t\t\tthis.cancel();\n\t\t\tthis._logService.error(e);\n\t\t\tthis._logService.error('snippet_error');\n\t\t\tthis._logService.error('insert_template=', template);\n\t\t\tthis._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n\t\t}\n\t}\n\n\tprivate _doInsert(\n\t\ttemplate: string,\n\t\topts: ISnippetInsertOptions\n\t): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// don't listen while inserting the snippet\n\t\t// as that is the inflight state causing cancelation\n\t\tthis._snippetListener.clear();\n\n\t\tif (opts.undoStopBefore) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\tif (!this._session) {\n\t\t\tthis._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n\t\t\tthis._session = new SnippetSession(this._editor, template, opts);\n\t\t\tthis._session.insert();\n\t\t} else {\n\t\t\tthis._session.merge(template, opts);\n\t\t}\n\n\t\tif (opts.undoStopAfter) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\tthis._updateState();\n\n\t\tthis._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n\t}\n\n\tprivate _updateState(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\t// canceled in the meanwhile\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n\t\t\t// undo until the 'before' state happened\n\t\t\t// and makes use cancel snippet mode\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (!this._session.hasPlaceholder) {\n\t\t\t// don't listen for selection changes and don't\n\t\t\t// update context keys when the snippet is plain text\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tthis._inSnippet.set(true);\n\t\tthis._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n\t\tthis._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n\n\t\tthis._handleChoice();\n\t}\n\n\tprivate _handleChoice(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst { choice } = this._session;\n\t\tif (!choice) {\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\t\tif (this._currentChoice !== choice) {\n\t\t\tthis._currentChoice = choice;\n\n\t\t\tthis._editor.setSelections(this._editor.getSelections()\n\t\t\t\t.map(s => Selection.fromPositions(s.getStartPosition()))\n\t\t\t);\n\n\t\t\tconst [first] = choice.options;\n\n\t\t\tshowSimpleSuggestions(this._editor, choice.options.map((option, i) => {\n\n\t\t\t\t// let before = choice.options.slice(0, i);\n\t\t\t\t// let after = choice.options.slice(i);\n\n\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\tkind: CompletionItemKind.Value,\n\t\t\t\t\tlabel: option.value,\n\t\t\t\t\tinsertText: option.value,\n\t\t\t\t\t// insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\n\t\t\t\t\t// snippetType: 'textmate',\n\t\t\t\t\tsortText: 'a'.repeat(i + 1),\n\t\t\t\t\trange: Range.fromPositions(this._editor.getPosition()!, this._editor.getPosition()!.delta(0, first.value.length))\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\t}\n\n\tfinish(): void {\n\t\twhile (this._inSnippet.get()) {\n\t\t\tthis.next();\n\t\t}\n\t}\n\n\tcancel(resetSelection: boolean = false): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._snippetListener.clear();\n\t\tthis._session?.dispose();\n\t\tthis._session = undefined;\n\t\tthis._modelVersionId = -1;\n\t\tif (resetSelection) {\n\t\t\t// reset selection to the primary cursor when being asked\n\t\t\t// for. this happens when explicitly cancelling snippet mode,\n\t\t\t// e.g. when pressing ESC\n\t\t\tthis._editor.setSelections([this._editor.getSelection()!]);\n\t\t}\n\t}\n\n\tprev(): void {\n\t\tif (this._session) {\n\t\t\tthis._session.prev();\n\t\t}\n\t\tthis._updateState();\n\t}\n\n\tnext(): void {\n\t\tif (this._session) {\n\t\t\tthis._session.next();\n\t\t}\n\t\tthis._updateState();\n\t}\n\n\tisInSnippet(): boolean {\n\t\treturn Boolean(this._inSnippet.get());\n\t}\n\n\tgetSessionEnclosingRange(): Range | undefined {\n\t\tif (this._session) {\n\t\t\treturn this._session.getEnclosingRange();\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\n\nconst CommandCtor = EditorCommand.bindToContribution<SnippetController2>(SnippetController2.get);\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToNextSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n\thandler: ctrl => ctrl.next(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToPrevSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n\thandler: ctrl => ctrl.prev(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'leaveSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.cancel(true),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'acceptSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.finish(),\n\t// kbOpts: {\n\t// \tweight: KeybindingWeight.EditorContrib + 30,\n\t// \tkbExpr: EditorContextKeys.textFocus,\n\t// \tprimary: KeyCode.Enter,\n\t// }\n}));\n"]}