{"version":3,"file":"findModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/find/findModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAwBnF,QAAA,2BAA2B,GAAG,IAAI,0BAAa,CAAU,mBAAmB,EAAE,KAAK,CAAC,CAAC;IACrF,QAAA,+BAA+B,GAAG,mCAA2B,CAAC,SAAS,EAAE,CAAC;IACvF,8DAA8D;IACjD,QAAA,0BAA0B,GAAG,IAAI,0BAAa,CAAU,mBAAmB,EAAE,KAAK,CAAC,CAAC;IACpF,QAAA,6BAA6B,GAAG,IAAI,0BAAa,CAAU,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAE1F,QAAA,6BAA6B,GAAiB;QAC1D,OAAO,EAAE,8BAA0B;QACnC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA2B,iBAAgB,EAAE;KAC7D,CAAC;IACW,QAAA,yBAAyB,GAAiB;QACtD,OAAO,EAAE,8BAA0B;QACnC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA2B,iBAAgB,EAAE;KAC7D,CAAC;IACW,QAAA,qBAAqB,GAAiB;QAClD,OAAO,EAAE,8BAA0B;QACnC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA2B,iBAAgB,EAAE;KAC7D,CAAC;IACW,QAAA,2BAA2B,GAAiB;QACxD,OAAO,EAAE,8BAA0B;QACnC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA2B,iBAAgB,EAAE;KAC7D,CAAC;IACW,QAAA,4BAA4B,GAAiB;QACzD,OAAO,EAAE,8BAA0B;QACnC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA2B,iBAAgB,EAAE;KAC7D,CAAC;IAEW,QAAA,QAAQ,GAAG;QACvB,eAAe,EAAE,cAAc;QAC/B,sBAAsB,EAAE,2BAA2B;QACnD,mBAAmB,EAAE,mCAAmC;QACxD,uBAAuB,EAAE,uCAAuC;QAChE,4BAA4B,EAAE,4CAA4C;QAC1E,gCAAgC,EAAE,gDAAgD;QAClF,sBAAsB,EAAE,sCAAsC;QAC9D,sBAAsB,EAAE,iBAAiB;QACzC,0BAA0B,EAAE,yBAAyB;QACrD,sBAAsB,EAAE,qBAAqB;QAC7C,kBAAkB,EAAE,iBAAiB;QACrC,wBAAwB,EAAE,uBAAuB;QACjD,yBAAyB,EAAE,oBAAoB;QAC/C,gBAAgB,EAAE,0BAA0B;QAC5C,gBAAgB,EAAE,0BAA0B;QAC5C,sBAAsB,EAAE,gCAAgC;KACxD,CAAC;IAEW,QAAA,aAAa,GAAG,KAAK,CAAC;IACnC,MAAM,cAAc,GAAG,GAAG,CAAC;IAE3B,MAAa,2BAA2B;QAYvC,YAAY,MAAyB,EAAE,KAAuB;YAR7C,eAAU,GAAG,IAAI,2BAAe,EAAE,CAAC;YASnD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAY,EAAE,CAAC;YAE/C,IAAI,CAAC,YAAY,GAAG,IAAI,iCAAe,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEvC,IAAI,CAAC,2BAA2B,GAAG,IAAI,wBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YACzF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YAEtD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAA8B,EAAE,EAAE;gBAC7F,IACC,CAAC,CAAC,MAAM,qBAAgC;uBACrC,CAAC,CAAC,MAAM,iBAA4B;uBACpC,CAAC,CAAC,MAAM,iBAA4B,EACtC;oBACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;iBAC/D;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC9D,IAAI,IAAI,CAAC,0BAA0B,EAAE;oBACpC,OAAO;iBACP;gBACD,IAAI,CAAC,CAAC,OAAO,EAAE;oBACd,gCAAgC;oBAChC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBAC1B;gBACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC/D,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1F,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC;QAEM,OAAO;YACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,CAAA,GAAA,mBAAO,CAAA,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QAEO,eAAe,CAAC,CAA+B;YACtD,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,+DAA+D;gBAC/D,OAAO;aACP;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;gBAC7B,8CAA8C;gBAC9C,OAAO;aACP;YACD,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,WAAW,EAAE;gBACtG,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAEpC,IAAI,KAAK,CAAC,oBAAoB,EAAE,EAAE;oBACjC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;oBAEnC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,GAAG,EAAE;wBAC1C,IAAI,CAAC,CAAC,WAAW,EAAE;4BAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;yBACrD;6BAAM;4BACN,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;yBAC5B;oBACF,CAAC,EAAE,cAAc,CAAC,CAAC;iBACnB;qBAAM;oBACN,IAAI,CAAC,CAAC,WAAW,EAAE;wBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBACrD;yBAAM;wBACN,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;qBAC5B;iBACD;aACD;QACF,CAAC;QAEO,MAAM,CAAC,eAAe,CAAC,KAAiB,EAAE,SAAuB;YACxE,mFAAmF;YACnF,IAAI,SAAS,EAAE;gBACd,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAClC,CAAC;QAEO,QAAQ,CAAC,UAAmB,EAAE,YAAqC;YAC1E,IAAI,UAAU,GAAmB,IAAI,CAAC;YACtC,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;gBACxC,IAAI,YAAY,KAAK,IAAI,EAAE;oBAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;wBACjC,UAAU,GAAG,CAAC,YAAqB,CAAC,CAAC;qBACrC;yBAAM;wBACN,UAAU,GAAG,YAAY,CAAC;qBAC1B;iBACD;aACD;iBAAM;gBACN,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;aAC/C;YACD,IAAI,UAAU,KAAK,IAAI,EAAE;gBACxB,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;oBACvC,IAAI,SAAS,CAAC,eAAe,KAAK,SAAS,CAAC,aAAa,EAAE;wBAC1D,IAAI,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;wBAE5C,IAAI,SAAS,CAAC,SAAS,KAAK,CAAC,EAAE;4BAC9B,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;yBAClC;wBAED,OAAO,IAAI,aAAK,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;qBACvH;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC,CAAC,CAAC;aACH;YAED,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,EAAE,qBAAa,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;YAE/C,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YACpD,IAAI,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;YAC1F,IAAI,sBAAsB,KAAK,CAAC,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3D,6CAA6C;gBAC7C,8DAA8D;gBAC9D,MAAM,mBAAmB,GAAG,CAAA,GAAA,0BAAiB,CAAA,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,aAAK,CAAC,wBAAwB,CAAC,KAAK,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3J,sBAAsB,GAAG,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC,sBAAsB,CAAC;aAC3I;YAED,IAAI,CAAC,MAAM,CAAC,eAAe,CAC1B,sBAAsB,EACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAC5B,SAAS,CACT,CAAC;YAEF,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,eAAmB,CAAC,gBAAgB,EAAE;gBAC7E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,CAAC;aAC5D;QACF,CAAC;QAEO,WAAW;YAClB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvC,CAAC;QAEO,WAAW;YAClB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACxB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;gBACjD,IAAI,SAAS,EAAE;oBACd,wEAAwE;oBACxE,IAAI,CAAC,OAAO,CAAC,oCAAoC,CAAC,SAAS,iBAAoB,CAAC;iBAChF;gBACD,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,oBAAoB,CAAC,KAAY;YACxC,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,MAAM,CAAC,eAAe,CAC1B,eAAe,EACf,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAC5B,KAAK,CACL,CAAC;YAEF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,oCAAoC,CAAC,KAAK,iBAAoB,CAAC;QAC7E,CAAC;QAEO,mBAAmB,CAAC,MAAgB;YAC3C,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAC7C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;mBACvC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAC7C,CAAC;YACF,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;YACpC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEpC,IAAI,gBAAgB,IAAI,MAAM,KAAK,CAAC,EAAE;gBACrC,IAAI,UAAU,KAAK,CAAC,EAAE;oBACrB,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;iBAClC;qBAAM;oBACN,UAAU,EAAE,CAAC;iBACb;gBACD,MAAM,GAAG,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;aAC5C;iBAAM;gBACN,MAAM,EAAE,CAAC;aACT;YAED,OAAO,IAAI,mBAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC;QAEO,gBAAgB,CAAC,MAAgB,EAAE,aAAsB,KAAK;YACrE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;gBACnC,8CAA8C;gBAC9C,6DAA6D;gBAC7D,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAEpE,IAAI,cAAc,EAAE;oBACnB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;iBAC1C;gBACD,OAAO;aACP;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,qBAAa,EAAE;gBACjD,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAEnE,IAAI,cAAc,IAAI,cAAc,CAAC,OAAO,EAAE,IAAI,cAAc,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;oBACnG,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBAC1C,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;iBAC/D;gBAED,IAAI,cAAc,EAAE;oBACnB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;iBAC1C;gBAED,OAAO;aACP;YAED,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,OAAO;aACP;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACjD,IAAI,WAAW,GAAG,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;YAElG,mBAAmB;YACnB,IAAI,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAClD,MAAM,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;aACtC;YAED,mBAAmB;YACnB,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,EAAE;gBACpD,MAAM,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;aACtC;YAED,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;YACpC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEpC,IAAI,QAAQ,GAAG,IAAI,mBAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAEhD,IAAI,SAAS,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAEnN,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAClG,yDAAyD;gBACzD,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBAC9C,SAAS,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC/M;YAED,IAAI,CAAC,SAAS,EAAE;gBACf,6DAA6D;gBAC7D,OAAO;aACP;YAED,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC/D,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,CAAC;aACvE;YAED,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;QAEM,eAAe;YACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACvE,CAAC;QAEO,mBAAmB,CAAC,KAAe;YAC1C,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAC7C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;mBACvC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAC7C,CAAC;YAEF,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;YACnC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEpC,IAAI,gBAAgB,IAAI,MAAM,KAAK,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;gBACtE,IAAI,UAAU,KAAK,KAAK,CAAC,YAAY,EAAE,EAAE;oBACxC,UAAU,GAAG,CAAC,CAAC;iBACf;qBAAM;oBACN,UAAU,EAAE,CAAC;iBACb;gBACD,MAAM,GAAG,CAAC,CAAC;aACX;iBAAM;gBACN,MAAM,EAAE,CAAC;aACT;YAED,OAAO,IAAI,mBAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC;QAEO,gBAAgB,CAAC,KAAe;YACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;gBACtC,6CAA6C;gBAC7C,4DAA4D;gBAC5D,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBAEpE,IAAI,cAAc,EAAE;oBACnB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;iBAC1C;gBACD,OAAO;aACP;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,qBAAa,EAAE;gBACjD,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAEjE,IAAI,cAAc,IAAI,cAAc,CAAC,OAAO,EAAE,IAAI,cAAc,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;oBAClG,yDAAyD;oBACzD,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;oBACxC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;iBAC7D;gBACD,IAAI,cAAc,EAAE;oBACnB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;iBAC1C;gBAED,OAAO;aACP;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,SAAS,EAAE;gBACd,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC3C;QACF,CAAC;QAEO,aAAa,CAAC,KAAe,EAAE,cAAuB,EAAE,SAAkB,EAAE,aAAsB,KAAK;YAC9G,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvB,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACjD,IAAI,WAAW,GAAG,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;YAElG,mBAAmB;YACnB,IAAI,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACjD,KAAK,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;aACvC;YAED,mBAAmB;YACnB,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,EAAE;gBACnD,KAAK,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;aACvC;YAED,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;YACnC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEpC,IAAI,QAAQ,GAAG,IAAI,mBAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAEhD,IAAI,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YAExN,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAC/G,yDAAyD;gBACzD,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBAC9C,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;aACpN;YAED,IAAI,CAAC,SAAS,EAAE;gBACf,6DAA6D;gBAC7D,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC/D,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aAC7F;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEM,eAAe;YACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;QACrE,CAAC;QAEO,kBAAkB;YACzB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACxB,OAAO,CAAA,GAAA,mCAAkB,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aACrD;YACD,OAAO,+BAAc,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAClE,CAAC;QAEM,OAAO;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACxB,OAAO;aACP;YAED,IAAI,cAAc,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC/C,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YAC5C,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC9E,IAAI,SAAS,EAAE;gBACd,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBAC3C,gDAAgD;oBAChD,IAAI,aAAa,GAAG,cAAc,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAEnG,IAAI,OAAO,GAAG,IAAI,+BAAc,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;oBAE3D,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAE/C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,mBAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1H,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACpB;qBAAM;oBACN,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBAC3C;aACD;QACF,CAAC;QAEO,YAAY,CAAC,UAA0B,EAAE,cAAuB,EAAE,gBAAwB;YACjG,MAAM,YAAY,GAAG,CAAC,UAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAmB,EAAE,EAAE,CAC7E,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAC3E,CAAC;YAEF,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACtP,CAAC;QAEM,UAAU;YAChB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACxB,OAAO;aACP;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YAErD,IAAI,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,qBAAa,EAAE;gBACrE,2EAA2E;gBAC3E,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxB;iBAAM;gBACN,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QAEO,gBAAgB;YACvB,MAAM,YAAY,GAAG,IAAI,8BAAY,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChM,MAAM,UAAU,GAAG,YAAY,CAAC,kBAAkB,EAAE,CAAC;YACrD,IAAI,CAAC,UAAU,EAAE;gBAChB,OAAO;aACP;YAED,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC;gBACf,IAAI,WAAW,CAAC,UAAU,EAAE;oBAC3B,GAAG,IAAI,GAAG,CAAC;iBACX;gBACD,IAAI,WAAW,CAAC,MAAM,EAAE;oBACvB,GAAG,IAAI,GAAG,CAAC;iBACX;gBACD,WAAW,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aAClD;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACtC,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,YAAwB,CAAC;YACzD,MAAM,cAAc,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAEjD,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACjD,IAAI,UAAkB,CAAC;YACvB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAE9C,IAAI,cAAc,CAAC,sBAAsB,IAAI,YAAY,EAAE;gBAC1D,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE;oBAC3C,OAAO,cAAc,CAAC,kBAAkB,CAAgB,SAAS,EAAE,YAAY,CAAC,CAAC;gBAClF,CAAC,CAAC,CAAC;aACH;iBAAM;gBACN,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;aACnG;YAED,IAAI,OAAO,GAAG,IAAI,qDAAoC,CAAC,cAAc,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;YAChH,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;QAEO,kBAAkB,CAAC,UAA0B;YACpD,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACjD,2DAA2D;YAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,sBAAsB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,0CAAmC,CAAC;YAEjJ,IAAI,cAAc,GAAa,EAAE,CAAC;YAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACnD,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;aACpG;YAED,IAAI,OAAO,GAAG,IAAI,qCAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,cAAc,CAAC,CAAC;YAC5G,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;QAEM,gBAAgB;YACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACxB,OAAO;aACP;YAED,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YAEnD,2DAA2D;YAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,0CAAmC,CAAC;YACrF,IAAI,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,qBAAS,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAEzI,4EAA4E;YAC5E,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACtD,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE;oBACrC,UAAU,GAAG,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9F,MAAM;iBACN;aACD;YAED,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;QAEO,qBAAqB,CAAC,MAAc,EAAE,OAAiB;YAC9D,IAAI;gBACH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC7C,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;aAC5B;oBAAS;gBACT,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;aACxC;QACF,CAAC;KACD;IAvgBD,kEAugBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler, TimeoutTimer } from 'vs/base/common/async';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from 'vs/editor/common/commands/replaceCommand';\nimport { CursorChangeReason, ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Constants } from 'vs/base/common/uint';\nimport { ScrollType, ICommand } from 'vs/editor/common/editorCommon';\nimport { EndOfLinePreference, FindMatch, ITextModel } from 'vs/editor/common/model';\nimport { SearchParams } from 'vs/editor/common/model/textModelSearch';\nimport { FindDecorations } from 'vs/editor/contrib/find/findDecorations';\nimport { FindReplaceState, FindReplaceStateChangedEvent } from 'vs/editor/contrib/find/findState';\nimport { ReplaceAllCommand } from 'vs/editor/contrib/find/replaceAllCommand';\nimport { ReplacePattern, parseReplaceString } from 'vs/editor/contrib/find/replacePattern';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IKeybindings } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { findFirstInSorted } from 'vs/base/common/arrays';\n\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey<boolean>('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey<boolean>('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey<boolean>('replaceInputFocussed', false);\n\nexport const ToggleCaseSensitiveKeybinding: IKeybindings = {\n\tprimary: KeyMod.Alt | KeyCode.KEY_C,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_C }\n};\nexport const ToggleWholeWordKeybinding: IKeybindings = {\n\tprimary: KeyMod.Alt | KeyCode.KEY_W,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_W }\n};\nexport const ToggleRegexKeybinding: IKeybindings = {\n\tprimary: KeyMod.Alt | KeyCode.KEY_R,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_R }\n};\nexport const ToggleSearchScopeKeybinding: IKeybindings = {\n\tprimary: KeyMod.Alt | KeyCode.KEY_L,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_L }\n};\nexport const TogglePreserveCaseKeybinding: IKeybindings = {\n\tprimary: KeyMod.Alt | KeyCode.KEY_P,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_P }\n};\n\nexport const FIND_IDS = {\n\tStartFindAction: 'actions.find',\n\tStartFindWithSelection: 'actions.findWithSelection',\n\tNextMatchFindAction: 'editor.action.nextMatchFindAction',\n\tPreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n\tNextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n\tPreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n\tStartFindReplaceAction: 'editor.action.startFindReplaceAction',\n\tCloseFindWidgetCommand: 'closeFindWidget',\n\tToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n\tToggleWholeWordCommand: 'toggleFindWholeWord',\n\tToggleRegexCommand: 'toggleFindRegex',\n\tToggleSearchScopeCommand: 'toggleFindInSelection',\n\tTogglePreserveCaseCommand: 'togglePreserveCase',\n\tReplaceOneAction: 'editor.action.replaceOne',\n\tReplaceAllAction: 'editor.action.replaceAll',\n\tSelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\n\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\n\nexport class FindModelBoundToEditorModel {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate readonly _state: FindReplaceState;\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _decorations: FindDecorations;\n\tprivate _ignoreModelContentChanged: boolean;\n\tprivate readonly _startSearchingTimer: TimeoutTimer;\n\n\tprivate readonly _updateDecorationsScheduler: RunOnceScheduler;\n\tprivate _isDisposed: boolean;\n\n\tconstructor(editor: IActiveCodeEditor, state: FindReplaceState) {\n\t\tthis._editor = editor;\n\t\tthis._state = state;\n\t\tthis._isDisposed = false;\n\t\tthis._startSearchingTimer = new TimeoutTimer();\n\n\t\tthis._decorations = new FindDecorations(editor);\n\t\tthis._toDispose.add(this._decorations);\n\n\t\tthis._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n\t\tthis._toDispose.add(this._updateDecorationsScheduler);\n\n\t\tthis._toDispose.add(this._editor.onDidChangeCursorPosition((e: ICursorPositionChangedEvent) => {\n\t\t\tif (\n\t\t\t\te.reason === CursorChangeReason.Explicit\n\t\t\t\t|| e.reason === CursorChangeReason.Undo\n\t\t\t\t|| e.reason === CursorChangeReason.Redo\n\t\t\t) {\n\t\t\t\tthis._decorations.setStartPosition(this._editor.getPosition());\n\t\t\t}\n\t\t}));\n\n\t\tthis._ignoreModelContentChanged = false;\n\t\tthis._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n\t\t\tif (this._ignoreModelContentChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.isFlush) {\n\t\t\t\t// a model.setValue() was called\n\t\t\t\tthis._decorations.reset();\n\t\t\t}\n\t\t\tthis._decorations.setStartPosition(this._editor.getPosition());\n\t\t\tthis._updateDecorationsScheduler.schedule();\n\t\t}));\n\n\t\tthis._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n\n\t\tthis.research(false, this._state.searchScope);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tdispose(this._startSearchingTimer);\n\t\tthis._toDispose.dispose();\n\t}\n\n\tprivate _onStateChanged(e: FindReplaceStateChangedEvent): void {\n\t\tif (this._isDisposed) {\n\t\t\t// The find model is disposed during a find state changed event\n\t\t\treturn;\n\t\t}\n\t\tif (!this._editor.hasModel()) {\n\t\t\t// The find model will be disposed momentarily\n\t\t\treturn;\n\t\t}\n\t\tif (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n\t\t\tlet model = this._editor.getModel();\n\n\t\t\tif (model.isTooLargeForSyncing()) {\n\t\t\t\tthis._startSearchingTimer.cancel();\n\n\t\t\t\tthis._startSearchingTimer.setIfNotSet(() => {\n\t\t\t\t\tif (e.searchScope) {\n\t\t\t\t\t\tthis.research(e.moveCursor, this._state.searchScope);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.research(e.moveCursor);\n\t\t\t\t\t}\n\t\t\t\t}, RESEARCH_DELAY);\n\t\t\t} else {\n\t\t\t\tif (e.searchScope) {\n\t\t\t\t\tthis.research(e.moveCursor, this._state.searchScope);\n\t\t\t\t} else {\n\t\t\t\t\tthis.research(e.moveCursor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _getSearchRange(model: ITextModel, findScope: Range | null): Range {\n\t\t// If we have set now or before a find scope, use it for computing the search range\n\t\tif (findScope) {\n\t\t\treturn findScope;\n\t\t}\n\n\t\treturn model.getFullModelRange();\n\t}\n\n\tprivate research(moveCursor: boolean, newFindScope?: Range | Range[] | null): void {\n\t\tlet findScopes: Range[] | null = null;\n\t\tif (typeof newFindScope !== 'undefined') {\n\t\t\tif (newFindScope !== null) {\n\t\t\t\tif (!Array.isArray(newFindScope)) {\n\t\t\t\t\tfindScopes = [newFindScope as Range];\n\t\t\t\t} else {\n\t\t\t\t\tfindScopes = newFindScope;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfindScopes = this._decorations.getFindScopes();\n\t\t}\n\t\tif (findScopes !== null) {\n\t\t\tfindScopes = findScopes.map(findScope => {\n\t\t\t\tif (findScope.startLineNumber !== findScope.endLineNumber) {\n\t\t\t\t\tlet endLineNumber = findScope.endLineNumber;\n\n\t\t\t\t\tif (findScope.endColumn === 1) {\n\t\t\t\t\t\tendLineNumber = endLineNumber - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n\t\t\t\t}\n\t\t\t\treturn findScope;\n\t\t\t});\n\t\t}\n\n\t\tlet findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n\t\tthis._decorations.set(findMatches, findScopes);\n\n\t\tconst editorSelection = this._editor.getSelection();\n\t\tlet currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n\t\tif (currentMatchesPosition === 0 && findMatches.length > 0) {\n\t\t\t// current selection is not on top of a match\n\t\t\t// try to find its nearest result from the top of the document\n\t\t\tconst matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n\t\t\tcurrentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n\t\t}\n\n\t\tthis._state.changeMatchInfo(\n\t\t\tcurrentMatchesPosition,\n\t\t\tthis._decorations.getCount(),\n\t\t\tundefined\n\t\t);\n\n\t\tif (moveCursor && this._editor.getOption(EditorOption.find).cursorMoveOnType) {\n\t\t\tthis._moveToNextMatch(this._decorations.getStartPosition());\n\t\t}\n\t}\n\n\tprivate _hasMatches(): boolean {\n\t\treturn (this._state.matchesCount > 0);\n\t}\n\n\tprivate _cannotFind(): boolean {\n\t\tif (!this._hasMatches()) {\n\t\t\tlet findScope = this._decorations.getFindScope();\n\t\t\tif (findScope) {\n\t\t\t\t// Reveal the selection so user is reminded that 'selection find' is on.\n\t\t\t\tthis._editor.revealRangeInCenterIfOutsideViewport(findScope, ScrollType.Smooth);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _setCurrentFindMatch(match: Range): void {\n\t\tlet matchesPosition = this._decorations.setCurrentFindMatch(match);\n\t\tthis._state.changeMatchInfo(\n\t\t\tmatchesPosition,\n\t\t\tthis._decorations.getCount(),\n\t\t\tmatch\n\t\t);\n\n\t\tthis._editor.setSelection(match);\n\t\tthis._editor.revealRangeInCenterIfOutsideViewport(match, ScrollType.Smooth);\n\t}\n\n\tprivate _prevSearchPosition(before: Position) {\n\t\tlet isUsingLineStops = this._state.isRegex && (\n\t\t\tthis._state.searchString.indexOf('^') >= 0\n\t\t\t|| this._state.searchString.indexOf('$') >= 0\n\t\t);\n\t\tlet { lineNumber, column } = before;\n\t\tlet model = this._editor.getModel();\n\n\t\tif (isUsingLineStops || column === 1) {\n\t\t\tif (lineNumber === 1) {\n\t\t\t\tlineNumber = model.getLineCount();\n\t\t\t} else {\n\t\t\t\tlineNumber--;\n\t\t\t}\n\t\t\tcolumn = model.getLineMaxColumn(lineNumber);\n\t\t} else {\n\t\t\tcolumn--;\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tprivate _moveToPrevMatch(before: Position, isRecursed: boolean = false): void {\n\t\tif (!this._state.canNavigateBack()) {\n\t\t\t// we are beyond the first matched find result\n\t\t\t// instead of doing nothing, we should refocus the first item\n\t\t\tconst nextMatchRange = this._decorations.matchAfterPosition(before);\n\n\t\t\tif (nextMatchRange) {\n\t\t\t\tthis._setCurrentFindMatch(nextMatchRange);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this._decorations.getCount() < MATCHES_LIMIT) {\n\t\t\tlet prevMatchRange = this._decorations.matchBeforePosition(before);\n\n\t\t\tif (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n\t\t\t\tbefore = this._prevSearchPosition(before);\n\t\t\t\tprevMatchRange = this._decorations.matchBeforePosition(before);\n\t\t\t}\n\n\t\t\tif (prevMatchRange) {\n\t\t\t\tthis._setCurrentFindMatch(prevMatchRange);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._cannotFind()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet findScope = this._decorations.getFindScope();\n\t\tlet searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n\n\t\t// ...(----)...|...\n\t\tif (searchRange.getEndPosition().isBefore(before)) {\n\t\t\tbefore = searchRange.getEndPosition();\n\t\t}\n\n\t\t// ...|...(----)...\n\t\tif (before.isBefore(searchRange.getStartPosition())) {\n\t\t\tbefore = searchRange.getEndPosition();\n\t\t}\n\n\t\tlet { lineNumber, column } = before;\n\t\tlet model = this._editor.getModel();\n\n\t\tlet position = new Position(lineNumber, column);\n\n\t\tlet prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false);\n\n\t\tif (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n\t\t\t// Looks like we're stuck at this position, unacceptable!\n\t\t\tposition = this._prevSearchPosition(position);\n\t\t\tprevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, false);\n\t\t}\n\n\t\tif (!prevMatch) {\n\t\t\t// there is precisely one match and selection is on top of it\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n\t\t\treturn this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n\t\t}\n\n\t\tthis._setCurrentFindMatch(prevMatch.range);\n\t}\n\n\tpublic moveToPrevMatch(): void {\n\t\tthis._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n\t}\n\n\tprivate _nextSearchPosition(after: Position) {\n\t\tlet isUsingLineStops = this._state.isRegex && (\n\t\t\tthis._state.searchString.indexOf('^') >= 0\n\t\t\t|| this._state.searchString.indexOf('$') >= 0\n\t\t);\n\n\t\tlet { lineNumber, column } = after;\n\t\tlet model = this._editor.getModel();\n\n\t\tif (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n\t\t\tif (lineNumber === model.getLineCount()) {\n\t\t\t\tlineNumber = 1;\n\t\t\t} else {\n\t\t\t\tlineNumber++;\n\t\t\t}\n\t\t\tcolumn = 1;\n\t\t} else {\n\t\t\tcolumn++;\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tprivate _moveToNextMatch(after: Position): void {\n\t\tif (!this._state.canNavigateForward()) {\n\t\t\t// we are beyond the last matched find result\n\t\t\t// instead of doing nothing, we should refocus the last item\n\t\t\tconst prevMatchRange = this._decorations.matchBeforePosition(after);\n\n\t\t\tif (prevMatchRange) {\n\t\t\t\tthis._setCurrentFindMatch(prevMatchRange);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this._decorations.getCount() < MATCHES_LIMIT) {\n\t\t\tlet nextMatchRange = this._decorations.matchAfterPosition(after);\n\n\t\t\tif (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n\t\t\t\t// Looks like we're stuck at this position, unacceptable!\n\t\t\t\tafter = this._nextSearchPosition(after);\n\t\t\t\tnextMatchRange = this._decorations.matchAfterPosition(after);\n\t\t\t}\n\t\t\tif (nextMatchRange) {\n\t\t\t\tthis._setCurrentFindMatch(nextMatchRange);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet nextMatch = this._getNextMatch(after, false, true);\n\t\tif (nextMatch) {\n\t\t\tthis._setCurrentFindMatch(nextMatch.range);\n\t\t}\n\t}\n\n\tprivate _getNextMatch(after: Position, captureMatches: boolean, forceMove: boolean, isRecursed: boolean = false): FindMatch | null {\n\t\tif (this._cannotFind()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet findScope = this._decorations.getFindScope();\n\t\tlet searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n\n\t\t// ...(----)...|...\n\t\tif (searchRange.getEndPosition().isBefore(after)) {\n\t\t\tafter = searchRange.getStartPosition();\n\t\t}\n\n\t\t// ...|...(----)...\n\t\tif (after.isBefore(searchRange.getStartPosition())) {\n\t\t\tafter = searchRange.getStartPosition();\n\t\t}\n\n\t\tlet { lineNumber, column } = after;\n\t\tlet model = this._editor.getModel();\n\n\t\tlet position = new Position(lineNumber, column);\n\n\t\tlet nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, captureMatches);\n\n\t\tif (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n\t\t\t// Looks like we're stuck at this position, unacceptable!\n\t\t\tposition = this._nextSearchPosition(position);\n\t\t\tnextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, captureMatches);\n\t\t}\n\n\t\tif (!nextMatch) {\n\t\t\t// there is precisely one match and selection is on top of it\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n\t\t\treturn this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n\t\t}\n\n\t\treturn nextMatch;\n\t}\n\n\tpublic moveToNextMatch(): void {\n\t\tthis._moveToNextMatch(this._editor.getSelection().getEndPosition());\n\t}\n\n\tprivate _getReplacePattern(): ReplacePattern {\n\t\tif (this._state.isRegex) {\n\t\t\treturn parseReplaceString(this._state.replaceString);\n\t\t}\n\t\treturn ReplacePattern.fromStaticValue(this._state.replaceString);\n\t}\n\n\tpublic replace(): void {\n\t\tif (!this._hasMatches()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet replacePattern = this._getReplacePattern();\n\t\tlet selection = this._editor.getSelection();\n\t\tlet nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n\t\tif (nextMatch) {\n\t\t\tif (selection.equalsRange(nextMatch.range)) {\n\t\t\t\t// selection sits on a find match => replace it!\n\t\t\t\tlet replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n\n\t\t\t\tlet command = new ReplaceCommand(selection, replaceString);\n\n\t\t\t\tthis._executeEditorCommand('replace', command);\n\n\t\t\t\tthis._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n\t\t\t\tthis.research(true);\n\t\t\t} else {\n\t\t\t\tthis._decorations.setStartPosition(this._editor.getPosition());\n\t\t\t\tthis._setCurrentFindMatch(nextMatch.range);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _findMatches(findScopes: Range[] | null, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst searchRanges = (findScopes as [] || [null]).map((scope: Range | null) =>\n\t\t\tFindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope)\n\t\t);\n\n\t\treturn this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null, captureMatches, limitResultCount);\n\t}\n\n\tpublic replaceAll(): void {\n\t\tif (!this._hasMatches()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst findScopes = this._decorations.getFindScopes();\n\n\t\tif (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n\t\t\t// Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n\t\t\tthis._largeReplaceAll();\n\t\t} else {\n\t\t\tthis._regularReplaceAll(findScopes);\n\t\t}\n\n\t\tthis.research(false);\n\t}\n\n\tprivate _largeReplaceAll(): void {\n\t\tconst searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(EditorOption.wordSeparators) : null);\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchRegex = searchData.regex;\n\t\tif (!searchRegex.multiline) {\n\t\t\tlet mod = 'mu';\n\t\t\tif (searchRegex.ignoreCase) {\n\t\t\t\tmod += 'i';\n\t\t\t}\n\t\t\tif (searchRegex.global) {\n\t\t\t\tmod += 'g';\n\t\t\t}\n\t\t\tsearchRegex = new RegExp(searchRegex.source, mod);\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst modelText = model.getValue(EndOfLinePreference.LF);\n\t\tconst fullModelRange = model.getFullModelRange();\n\n\t\tconst replacePattern = this._getReplacePattern();\n\t\tlet resultText: string;\n\t\tconst preserveCase = this._state.preserveCase;\n\n\t\tif (replacePattern.hasReplacementPatterns || preserveCase) {\n\t\t\tresultText = modelText.replace(searchRegex, function () {\n\t\t\t\treturn replacePattern.buildReplaceString(<string[]><any>arguments, preserveCase);\n\t\t\t});\n\t\t} else {\n\t\t\tresultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n\t\t}\n\n\t\tlet command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n\t\tthis._executeEditorCommand('replaceAll', command);\n\t}\n\n\tprivate _regularReplaceAll(findScopes: Range[] | null): void {\n\t\tconst replacePattern = this._getReplacePattern();\n\t\t// Get all the ranges (even more than the highlighted ones)\n\t\tlet matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, Constants.MAX_SAFE_SMALL_INTEGER);\n\n\t\tlet replaceStrings: string[] = [];\n\t\tfor (let i = 0, len = matches.length; i < len; i++) {\n\t\t\treplaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n\t\t}\n\n\t\tlet command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n\t\tthis._executeEditorCommand('replaceAll', command);\n\t}\n\n\tpublic selectAllMatches(): void {\n\t\tif (!this._hasMatches()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet findScopes = this._decorations.getFindScopes();\n\n\t\t// Get all the ranges (even more than the highlighted ones)\n\t\tlet matches = this._findMatches(findScopes, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\tlet selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n\n\t\t// If one of the ranges is the editor selection, then maintain it as primary\n\t\tlet editorSelection = this._editor.getSelection();\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tlet sel = selections[i];\n\t\t\tif (sel.equalsRange(editorSelection)) {\n\t\t\t\tselections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.setSelections(selections);\n\t}\n\n\tprivate _executeEditorCommand(source: string, command: ICommand): void {\n\t\ttry {\n\t\t\tthis._ignoreModelContentChanged = true;\n\t\t\tthis._editor.pushUndoStop();\n\t\t\tthis._editor.executeCommand(source, command);\n\t\t\tthis._editor.pushUndoStop();\n\t\t} finally {\n\t\t\tthis._ignoreModelContentChanged = false;\n\t\t}\n\t}\n}\n"]}