{"version":3,"sources":["vs/editor/contrib/gotoSymbol/peek/referencesController.ts"],"names":[],"mappings":"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","file":"referencesController.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKey, IContextKeyService, RawContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ReferencesModel, OneReference } from '../referencesModel';\nimport { ReferenceWidget, LayoutData } from './referencesWidget';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Location } from 'vs/editor/common/modes';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { getOuterEditor, PeekContext } from 'vs/editor/contrib/peekView/peekView';\nimport { IListService, WorkbenchListFocusContextKey } from 'vs/platform/list/browser/listService';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyCode, KeyMod, KeyChord } from 'vs/base/common/keyCodes';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\nexport const ctxReferenceSearchVisible = new RawContextKey<boolean>('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\n\nexport abstract class ReferencesController implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.contrib.referencesController';\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _widget?: ReferenceWidget;\n\tprivate _model?: ReferencesModel;\n\tprivate _peekMode?: boolean;\n\tprivate _requestIdPool = 0;\n\tprivate _ignoreModelChangeEvent = false;\n\n\tprivate readonly _referenceSearchVisible: IContextKey<boolean>;\n\n\tstatic get(editor: ICodeEditor): ReferencesController {\n\t\treturn editor.getContribution<ReferencesController>(ReferencesController.ID);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _defaultTreeKeyboardSupport: boolean,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\n\t\tthis._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._referenceSearchVisible.reset();\n\t\tthis._disposables.dispose();\n\t\tthis._widget?.dispose();\n\t\tthis._model?.dispose();\n\t\tthis._widget = undefined;\n\t\tthis._model = undefined;\n\t}\n\n\ttoggleWidget(range: Range, modelPromise: CancelablePromise<ReferencesModel>, peekMode: boolean): void {\n\n\t\t// close current widget and return early is position didn't change\n\t\tlet widgetPosition: Position | undefined;\n\t\tif (this._widget) {\n\t\t\twidgetPosition = this._widget.position;\n\t\t}\n\t\tthis.closeWidget();\n\t\tif (!!widgetPosition && range.containsPosition(widgetPosition)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._peekMode = peekMode;\n\t\tthis._referenceSearchVisible.set(true);\n\n\t\t// close the widget on model/mode changes\n\t\tthis._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n\t\tthis._disposables.add(this._editor.onDidChangeModel(() => {\n\t\t\tif (!this._ignoreModelChangeEvent) {\n\t\t\t\tthis.closeWidget();\n\t\t\t}\n\t\t}));\n\t\tconst storageKey = 'peekViewLayout';\n\t\tconst data = LayoutData.fromJSON(this._storageService.get(storageKey, StorageScope.GLOBAL, '{}'));\n\t\tthis._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n\t\tthis._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n\t\tthis._widget.show(range);\n\n\t\tthis._disposables.add(this._widget.onDidClose(() => {\n\t\t\tmodelPromise.cancel();\n\t\t\tif (this._widget) {\n\t\t\t\tthis._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\tthis._widget = undefined;\n\t\t\t}\n\t\t\tthis.closeWidget();\n\t\t}));\n\n\t\tthis._disposables.add(this._widget.onDidSelectReference(event => {\n\t\t\tlet { element, kind } = event;\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (kind) {\n\t\t\t\tcase 'open':\n\t\t\t\t\tif (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n\t\t\t\t\t\t// when stable peek is configured we don't close\n\t\t\t\t\t\t// the peek window on selecting the editor\n\t\t\t\t\t\tthis.openReference(element, false, false);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'side':\n\t\t\t\t\tthis.openReference(element, true, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'goto':\n\t\t\t\t\tif (peekMode) {\n\t\t\t\t\t\tthis._gotoReference(element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.openReference(element, false, true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\tconst requestId = ++this._requestIdPool;\n\n\t\tmodelPromise.then(model => {\n\n\t\t\t// still current request? widget still open?\n\t\t\tif (requestId !== this._requestIdPool || !this._widget) {\n\t\t\t\tmodel.dispose();\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis._model?.dispose();\n\t\t\tthis._model = model;\n\n\t\t\t// show widget\n\t\t\treturn this._widget.setModel(this._model).then(() => {\n\t\t\t\tif (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n\n\t\t\t\t\t// set title\n\t\t\t\t\tif (!this._model.isEmpty) {\n\t\t\t\t\t\tthis._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._widget.setMetaTitle('');\n\t\t\t\t\t}\n\n\t\t\t\t\t// set 'best' selection\n\t\t\t\t\tlet uri = this._editor.getModel().uri;\n\t\t\t\t\tlet pos = new Position(range.startLineNumber, range.startColumn);\n\t\t\t\t\tlet selection = this._model.nearestReference(uri, pos);\n\t\t\t\t\tif (selection) {\n\t\t\t\t\t\treturn this._widget.setSelection(selection).then(() => {\n\t\t\t\t\t\t\tif (this._widget && this._editor.getOption(EditorOption.peekWidgetDefaultFocus) === 'editor') {\n\t\t\t\t\t\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t}, error => {\n\t\t\tthis._notificationService.error(error);\n\t\t});\n\t}\n\n\tchangeFocusBetweenPreviewAndReferences() {\n\t\tif (!this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\t\tif (this._widget.isPreviewEditorFocused()) {\n\t\t\tthis._widget.focusOnReferenceTree();\n\t\t} else {\n\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t}\n\t}\n\n\tasync goToNextOrPreviousReference(fwd: boolean) {\n\t\tif (!this._editor.hasModel() || !this._model || !this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\t\tconst currentPosition = this._widget.position;\n\t\tif (!currentPosition) {\n\t\t\treturn;\n\t\t}\n\t\tconst source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n\t\tif (!source) {\n\t\t\treturn;\n\t\t}\n\t\tconst target = this._model.nextOrPreviousReference(source, fwd);\n\t\tconst editorFocus = this._editor.hasTextFocus();\n\t\tconst previewEditorFocus = this._widget.isPreviewEditorFocused();\n\t\tawait this._widget.setSelection(target);\n\t\tawait this._gotoReference(target);\n\t\tif (editorFocus) {\n\t\t\tthis._editor.focus();\n\t\t} else if (this._widget && previewEditorFocus) {\n\t\t\tthis._widget.focusOnPreviewEditor();\n\t\t}\n\t}\n\n\tasync revealReference(reference: OneReference): Promise<void> {\n\t\tif (!this._editor.hasModel() || !this._model || !this._widget) {\n\t\t\t// can be called while still resolving...\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._widget.revealReference(reference);\n\t}\n\n\tcloseWidget(focusEditor = true): void {\n\t\tthis._widget?.dispose();\n\t\tthis._model?.dispose();\n\t\tthis._referenceSearchVisible.reset();\n\t\tthis._disposables.clear();\n\t\tthis._widget = undefined;\n\t\tthis._model = undefined;\n\t\tif (focusEditor) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t\tthis._requestIdPool += 1; // Cancel pending requests\n\t}\n\n\tprivate _gotoReference(ref: Location): Promise<any> {\n\t\tif (this._widget) {\n\t\t\tthis._widget.hide();\n\t\t}\n\n\t\tthis._ignoreModelChangeEvent = true;\n\t\tconst range = Range.lift(ref.range).collapseToStart();\n\n\t\treturn this._editorService.openCodeEditor({\n\t\t\tresource: ref.uri,\n\t\t\toptions: { selection: range }\n\t\t}, this._editor).then(openedEditor => {\n\t\t\tthis._ignoreModelChangeEvent = false;\n\n\t\t\tif (!openedEditor || !this._widget) {\n\t\t\t\t// something went wrong...\n\t\t\t\tthis.closeWidget();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._editor === openedEditor) {\n\t\t\t\t//\n\t\t\t\tthis._widget.show(range);\n\t\t\t\tthis._widget.focusOnReferenceTree();\n\n\t\t\t} else {\n\t\t\t\t// we opened a different editor instance which means a different controller instance.\n\t\t\t\t// therefore we stop with this controller and continue with the other\n\t\t\t\tconst other = ReferencesController.get(openedEditor);\n\t\t\t\tconst model = this._model!.clone();\n\n\t\t\t\tthis.closeWidget();\n\t\t\t\topenedEditor.focus();\n\n\t\t\t\tother.toggleWidget(\n\t\t\t\t\trange,\n\t\t\t\t\tcreateCancelablePromise(_ => Promise.resolve(model)),\n\t\t\t\t\tthis._peekMode ?? false\n\t\t\t\t);\n\t\t\t}\n\n\t\t}, (err) => {\n\t\t\tthis._ignoreModelChangeEvent = false;\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n\n\topenReference(ref: Location, sideBySide: boolean, pinned: boolean): void {\n\t\t// clear stage\n\t\tif (!sideBySide) {\n\t\t\tthis.closeWidget();\n\t\t}\n\n\t\tconst { uri, range } = ref;\n\t\tthis._editorService.openCodeEditor({\n\t\t\tresource: uri,\n\t\t\toptions: { selection: range, pinned }\n\t\t}, this._editor, sideBySide);\n\t}\n}\n\nfunction withController(accessor: ServicesAccessor, fn: (controller: ReferencesController) => void): void {\n\tconst outerEditor = getOuterEditor(accessor);\n\tif (!outerEditor) {\n\t\treturn;\n\t}\n\tlet controller = ReferencesController.get(outerEditor);\n\tif (controller) {\n\t\tfn(controller);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'togglePeekWidgetFocus',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.F2),\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.changeFocusBetweenPreviewAndReferences();\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToNextReference',\n\tweight: KeybindingWeight.EditorContrib - 10,\n\tprimary: KeyCode.F4,\n\tsecondary: [KeyCode.F12],\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(true);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToPreviousReference',\n\tweight: KeybindingWeight.EditorContrib - 10,\n\tprimary: KeyMod.Shift | KeyCode.F4,\n\tsecondary: [KeyMod.Shift | KeyCode.F12],\n\twhen: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(false);\n\t\t});\n\t}\n});\n\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand(\n\t'closeReferenceSearch',\n\taccessor => withController(accessor, controller => controller.closeWidget())\n);\nKeybindingsRegistry.registerKeybindingRule({\n\tid: 'closeReferenceSearch',\n\tweight: KeybindingWeight.EditorContrib - 101,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n\tid: 'closeReferenceSearch',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\n});\n\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'revealReference',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyCode.Enter,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t},\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\n\thandler(accessor: ServicesAccessor) {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\t\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\t\twithController(accessor, controller => controller.revealReference(focus[0]));\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'openReferenceToSide',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\n\thandler(accessor: ServicesAccessor) {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\t\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\t\twithController(accessor, controller => controller.openReference(focus[0], true, true));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n\tconst listService = accessor.get(IListService);\n\tconst focus = <any[]>listService.lastFocusedList?.getFocus();\n\tif (Array.isArray(focus) && focus[0] instanceof OneReference) {\n\t\twithController(accessor, controller => controller.openReference(focus[0], false, true));\n\t}\n});\n"]}