{"version":3,"sources":["vs/editor/contrib/suggest/suggestWidgetStatus.ts"],"names":[],"mappings":"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","file":"suggestWidgetStatus.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionBar, IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IAction } from 'vs/base/common/actions';\nimport { ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { suggestWidgetStatusbarMenu } from 'vs/editor/contrib/suggest/suggest';\nimport { localize } from 'vs/nls';\nimport { MenuEntryActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuService, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n\n\toverride updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tthis.label.textContent = localize('ddd', '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\n\t\t}\n\t}\n\n\tstatic symbolPrintEnter(kb: ResolvedKeybinding) {\n\t\treturn kb.getLabel()?.replace(/\\benter\\b/gi, '\\u23CE');\n\t}\n}\n\nexport class SuggestWidgetStatus {\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly _leftActions: ActionBar;\n\tprivate readonly _rightActions: ActionBar;\n\tprivate readonly _menuDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private _menuService: IMenuService,\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.element = dom.append(container, dom.$('.suggest-status-bar'));\n\n\t\tconst actionViewItemProvider = <IActionViewItemProvider>(action => {\n\t\t\treturn action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action) : undefined;\n\t\t});\n\t\tthis._leftActions = new ActionBar(this.element, { actionViewItemProvider });\n\t\tthis._rightActions = new ActionBar(this.element, { actionViewItemProvider });\n\n\t\tthis._leftActions.domNode.classList.add('left');\n\t\tthis._rightActions.domNode.classList.add('right');\n\t}\n\n\tdispose(): void {\n\t\tthis._menuDisposables.dispose();\n\t\tthis.element.remove();\n\t}\n\n\tshow(): void {\n\t\tconst menu = this._menuService.createMenu(suggestWidgetStatusbarMenu, this._contextKeyService);\n\t\tconst renderMenu = () => {\n\t\t\tconst left: IAction[] = [];\n\t\t\tconst right: IAction[] = [];\n\t\t\tfor (let [group, actions] of menu.getActions()) {\n\t\t\t\tif (group === 'left') {\n\t\t\t\t\tleft.push(...actions);\n\t\t\t\t} else {\n\t\t\t\t\tright.push(...actions);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._leftActions.clear();\n\t\t\tthis._leftActions.push(left);\n\t\t\tthis._rightActions.clear();\n\t\t\tthis._rightActions.push(right);\n\t\t};\n\t\tthis._menuDisposables.add(menu.onDidChange(() => renderMenu()));\n\t\tthis._menuDisposables.add(menu);\n\t}\n\n\thide(): void {\n\t\tthis._menuDisposables.clear();\n\t}\n}\n"]}