{"version":3,"sources":["vs/editor/contrib/suggest/suggest.ts"],"names":[],"mappings":"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","file":"suggest.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedExternalError, canceled, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport { Position, IPosition } from 'vs/editor/common/core/position';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { isDisposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { SnippetParser } from 'vs/editor/contrib/snippet/snippetParser';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { localize } from 'vs/nls';\n\nexport const Context = {\n\tVisible: new RawContextKey<boolean>('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\n\tDetailsVisible: new RawContextKey<boolean>('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n\tMultipleSuggestions: new RawContextKey<boolean>('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n\tMakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n\tAcceptSuggestionsOnEnter: new RawContextKey<boolean>('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n\tHasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n\tInsertMode: new RawContextKey<'insert' | 'replace'>('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n\tCanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\n\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\n\nexport class CompletionItem {\n\n\t_brand!: 'ISuggestionItem';\n\n\t//\n\treadonly editStart: IPosition;\n\treadonly editInsertEnd: IPosition;\n\treadonly editReplaceEnd: IPosition;\n\n\t//\n\treadonly textLabel: string;\n\n\t// perf\n\treadonly labelLow: string;\n\treadonly sortTextLow?: string;\n\treadonly filterTextLow?: string;\n\n\t// validation\n\treadonly isInvalid: boolean = false;\n\n\t// sorting, filtering\n\tscore: FuzzyScore = FuzzyScore.Default;\n\tdistance: number = 0;\n\tidx?: number;\n\tword?: string;\n\n\t// resolving\n\tprivate _isResolved?: boolean;\n\tprivate _resolveCache?: Promise<void>;\n\n\tconstructor(\n\t\treadonly position: IPosition,\n\t\treadonly completion: modes.CompletionItem,\n\t\treadonly container: modes.CompletionList,\n\t\treadonly provider: modes.CompletionItemProvider,\n\t) {\n\t\tthis.textLabel = typeof completion.label === 'string'\n\t\t\t? completion.label\n\t\t\t: completion.label.name;\n\n\t\t// ensure lower-variants (perf)\n\t\tthis.labelLow = this.textLabel.toLowerCase();\n\n\t\t// validate label\n\t\tthis.isInvalid = !this.textLabel;\n\n\t\tthis.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n\t\tthis.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n\n\t\t// normalize ranges\n\t\tif (Range.isIRange(completion.range)) {\n\t\t\tthis.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\n\t\t\t// validate range\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n\n\t\t} else {\n\t\t\tthis.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n\n\t\t\t// validate ranges\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n\t\t\t\t|| completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n\t\t\t\t|| completion.range.insert.startColumn !== completion.range.replace.startColumn;\n\t\t}\n\n\t\t// create the suggestion resolver\n\t\tif (typeof provider.resolveCompletionItem !== 'function') {\n\t\t\tthis._resolveCache = Promise.resolve();\n\t\t\tthis._isResolved = true;\n\t\t}\n\t}\n\n\t// ---- resolving\n\n\tget isResolved(): boolean {\n\t\treturn !!this._isResolved;\n\t}\n\n\tasync resolve(token: CancellationToken) {\n\t\tif (!this._resolveCache) {\n\t\t\tconst sub = token.onCancellationRequested(() => {\n\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\tthis._isResolved = false;\n\t\t\t});\n\t\t\tthis._resolveCache = Promise.resolve(this.provider.resolveCompletionItem!(this.completion, token)).then(value => {\n\t\t\t\tObject.assign(this.completion, value);\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tsub.dispose();\n\t\t\t}, err => {\n\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t// the IPC queue will reject the request with the\n\t\t\t\t\t// cancellation error -> reset cached\n\t\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\t\tthis._isResolved = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._resolveCache;\n\t}\n}\n\nexport const enum SnippetSortOrder {\n\tTop, Inline, Bottom\n}\n\nexport class CompletionOptions {\n\n\tstatic readonly default = new CompletionOptions();\n\n\tconstructor(\n\t\treadonly snippetSortOrder = SnippetSortOrder.Bottom,\n\t\treadonly kindFilter = new Set<modes.CompletionItemKind>(),\n\t\treadonly providerFilter = new Set<modes.CompletionItemProvider>(),\n\t) { }\n}\n\nlet _snippetSuggestSupport: modes.CompletionItemProvider;\n\nexport function getSnippetSuggestSupport(): modes.CompletionItemProvider {\n\treturn _snippetSuggestSupport;\n}\n\nexport function setSnippetSuggestSupport(support: modes.CompletionItemProvider): modes.CompletionItemProvider {\n\tconst old = _snippetSuggestSupport;\n\t_snippetSuggestSupport = support;\n\treturn old;\n}\n\nexport interface CompletionDurationEntry {\n\treadonly providerName: string;\n\treadonly elapsedProvider: number;\n\treadonly elapsedOverall: number;\n}\n\nexport interface CompletionDurations {\n\treadonly entries: readonly CompletionDurationEntry[];\n\treadonly elapsed: number;\n}\n\nexport class CompletionItemModel {\n\tconstructor(\n\t\treadonly items: CompletionItem[],\n\t\treadonly needsClipboard: boolean,\n\t\treadonly durations: CompletionDurations,\n\t\treadonly disposable: IDisposable,\n\t) { }\n}\n\nexport async function provideSuggestionItems(\n\tmodel: ITextModel,\n\tposition: Position,\n\toptions: CompletionOptions = CompletionOptions.default,\n\tcontext: modes.CompletionContext = { triggerKind: modes.CompletionTriggerKind.Invoke },\n\ttoken: CancellationToken = CancellationToken.None\n): Promise<CompletionItemModel> {\n\n\tconst sw = new StopWatch(true);\n\tposition = position.clone();\n\n\tconst word = model.getWordAtPosition(position);\n\tconst defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n\tconst defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n\n\tconst result: CompletionItem[] = [];\n\tconst disposables = new DisposableStore();\n\tconst durations: CompletionDurationEntry[] = [];\n\tlet needsClipboard = false;\n\n\tconst onCompletionList = (provider: modes.CompletionItemProvider, container: modes.CompletionList | null | undefined, sw: StopWatch) => {\n\t\tif (!container) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let suggestion of container.suggestions) {\n\t\t\tif (!options.kindFilter.has(suggestion.kind)) {\n\t\t\t\t// fill in default range when missing\n\t\t\t\tif (!suggestion.range) {\n\t\t\t\t\tsuggestion.range = defaultRange;\n\t\t\t\t}\n\t\t\t\t// fill in default sortText when missing\n\t\t\t\tif (!suggestion.sortText) {\n\t\t\t\t\tsuggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.name;\n\t\t\t\t}\n\t\t\t\tif (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & modes.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\t\t\tneedsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n\t\t\t\t}\n\t\t\t\tresult.push(new CompletionItem(position, suggestion, container, provider));\n\t\t\t}\n\t\t}\n\t\tif (isDisposable(container)) {\n\t\t\tdisposables.add(container);\n\t\t}\n\t\tdurations.push({\n\t\t\tproviderName: provider._debugDisplayName ?? 'unkown_provider', elapsedProvider: container.duration ?? -1, elapsedOverall: sw.elapsed()\n\t\t});\n\t};\n\n\t// ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n\t// do so - no snippet filter, no special-providers-only request\n\tconst snippetCompletions = (async () => {\n\t\tif (!_snippetSuggestSupport || options.kindFilter.has(modes.CompletionItemKind.Snippet)) {\n\t\t\treturn;\n\t\t}\n\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n\t\t\treturn;\n\t\t}\n\t\tconst sw = new StopWatch(true);\n\t\tconst list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n\t\tonCompletionList(_snippetSuggestSupport, list, sw);\n\t})();\n\n\t// add suggestions from contributed providers - providers are ordered in groups of\n\t// equal score and once a group produces a result the process stops\n\t// get provider groups, always add snippet suggestion provider\n\tfor (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\n\n\t\t// for each support in the group ask for suggestions\n\t\tlet lenBefore = result.length;\n\n\t\tawait Promise.all(providerGroup.map(async provider => {\n\t\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst sw = new StopWatch(true);\n\t\t\t\tconst list = await provider.provideCompletionItems(model, position, context, token);\n\t\t\t\tonCompletionList(provider, list, sw);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t}));\n\n\t\tif (lenBefore !== result.length || token.isCancellationRequested) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tawait snippetCompletions;\n\n\tif (token.isCancellationRequested) {\n\t\tdisposables.dispose();\n\t\treturn Promise.reject<any>(canceled());\n\t}\n\n\treturn new CompletionItemModel(\n\t\tresult.sort(getSuggestionComparator(options.snippetSortOrder)),\n\t\tneedsClipboard,\n\t\t{ entries: durations, elapsed: sw.elapsed() },\n\t\tdisposables,\n\t);\n}\n\n\nfunction defaultComparator(a: CompletionItem, b: CompletionItem): number {\n\t// check with 'sortText'\n\tif (a.sortTextLow && b.sortTextLow) {\n\t\tif (a.sortTextLow < b.sortTextLow) {\n\t\t\treturn -1;\n\t\t} else if (a.sortTextLow > b.sortTextLow) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t// check with 'label'\n\tif (a.completion.label < b.completion.label) {\n\t\treturn -1;\n\t} else if (a.completion.label > b.completion.label) {\n\t\treturn 1;\n\t}\n\t// check with 'type'\n\treturn a.completion.kind - b.completion.kind;\n}\n\nfunction snippetUpComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === modes.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t} else if (b.completion.kind === modes.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\nfunction snippetDownComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === modes.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t} else if (b.completion.kind === modes.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\ninterface Comparator<T> { (a: T, b: T): number; }\nconst _snippetComparators = new Map<SnippetSortOrder, Comparator<CompletionItem>>();\n_snippetComparators.set(SnippetSortOrder.Top, snippetUpComparator);\n_snippetComparators.set(SnippetSortOrder.Bottom, snippetDownComparator);\n_snippetComparators.set(SnippetSortOrder.Inline, defaultComparator);\n\nexport function getSuggestionComparator(snippetConfig: SnippetSortOrder): (a: CompletionItem, b: CompletionItem) => number {\n\treturn _snippetComparators.get(snippetConfig)!;\n}\n\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args: [URI, IPosition, string?, number?]) => {\n\tconst [uri, position, triggerCharacter, maxItemsToResolve] = args;\n\tassertType(URI.isUri(uri));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n\tassertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n\n\tconst ref = await accessor.get(ITextModelService).createModelReference(uri);\n\ttry {\n\n\t\tconst result: modes.CompletionList = {\n\t\t\tincomplete: false,\n\t\t\tsuggestions: []\n\t\t};\n\n\t\tconst resolving: Promise<any>[] = [];\n\t\tconst completions = await provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? modes.CompletionTriggerKind.TriggerCharacter : modes.CompletionTriggerKind.Invoke });\n\t\tfor (const item of completions.items) {\n\t\t\tif (resolving.length < (maxItemsToResolve ?? 0)) {\n\t\t\t\tresolving.push(item.resolve(CancellationToken.None));\n\t\t\t}\n\t\t\tresult.incomplete = result.incomplete || item.container.incomplete;\n\t\t\tresult.suggestions.push(item.completion);\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(resolving);\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tsetTimeout(() => completions.disposable.dispose(), 100);\n\t\t}\n\n\t} finally {\n\t\tref.dispose();\n\t}\n\n});\n\ninterface SuggestController extends IEditorContribution {\n\ttriggerSuggest(onlyFrom?: Set<modes.CompletionItemProvider>): void;\n}\n\nconst _provider = new class implements modes.CompletionItemProvider {\n\n\tonlyOnceSuggestions: modes.CompletionItem[] = [];\n\n\tprovideCompletionItems(): modes.CompletionList {\n\t\tlet suggestions = this.onlyOnceSuggestions.slice(0);\n\t\tlet result = { suggestions };\n\t\tthis.onlyOnceSuggestions.length = 0;\n\t\treturn result;\n\t}\n};\n\nmodes.CompletionProviderRegistry.register('*', _provider);\n\nexport function showSimpleSuggestions(editor: ICodeEditor, suggestions: modes.CompletionItem[]) {\n\tsetTimeout(() => {\n\t\t_provider.onlyOnceSuggestions.push(...suggestions);\n\t\teditor.getContribution<SuggestController>('editor.contrib.suggestController').triggerSuggest(new Set<modes.CompletionItemProvider>().add(_provider));\n\t}, 0);\n}\n"]}