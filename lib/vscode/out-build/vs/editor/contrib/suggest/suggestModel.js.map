{"version":3,"file":"suggestModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/suggest/suggestModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TimeoutTimer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { CursorChangeReason, ICursorSelectionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Position, IPosition } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ITextModel, IWordAtPosition } from 'vs/editor/common/model';\nimport { CompletionItemProvider, StandardTokenType, CompletionContext, CompletionProviderRegistry, CompletionTriggerKind, CompletionItemKind } from 'vs/editor/common/modes';\nimport { CompletionModel } from './completionModel';\nimport { CompletionItem, getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, SnippetSortOrder, CompletionOptions, CompletionDurations } from './suggest';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/snippetController2';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { WordDistance } from 'vs/editor/contrib/suggest/wordDistance';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { isLowSurrogate, isHighSurrogate, getLeadingWhitespace } from 'vs/base/common/strings';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport interface ICancelEvent {\n\treadonly retrigger: boolean;\n}\n\nexport interface ITriggerEvent {\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n\treadonly position: IPosition;\n}\n\nexport interface ISuggestEvent {\n\treadonly completionModel: CompletionModel;\n\treadonly isFrozen: boolean;\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n}\n\nexport interface SuggestTriggerContext {\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n\treadonly triggerKind?: CompletionTriggerKind;\n\treadonly triggerCharacter?: string;\n}\n\nexport class LineContext {\n\n\tstatic shouldAutoTrigger(editor: ICodeEditor): boolean {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tconst pos = editor.getPosition();\n\t\tmodel.tokenizeIfCheap(pos.lineNumber);\n\n\t\tconst word = model.getWordAtPosition(pos);\n\t\tif (!word) {\n\t\t\treturn false;\n\t\t}\n\t\tif (word.endColumn !== pos.column) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!isNaN(Number(word.word))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\treadonly lineNumber: number;\n\treadonly column: number;\n\treadonly leadingLineContent: string;\n\treadonly leadingWord: IWordAtPosition;\n\treadonly auto: boolean;\n\treadonly shy: boolean;\n\n\tconstructor(model: ITextModel, position: Position, auto: boolean, shy: boolean) {\n\t\tthis.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\t\tthis.leadingWord = model.getWordUntilPosition(position);\n\t\tthis.lineNumber = position.lineNumber;\n\t\tthis.column = position.column;\n\t\tthis.auto = auto;\n\t\tthis.shy = shy;\n\t}\n}\n\nexport const enum State {\n\tIdle = 0,\n\tManual = 1,\n\tAuto = 2\n}\n\nexport class SuggestModel implements IDisposable {\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _quickSuggestDelay: number = 10;\n\tprivate readonly _triggerCharacterListener = new DisposableStore();\n\tprivate readonly _triggerQuickSuggest = new TimeoutTimer();\n\tprivate _state: State = State.Idle;\n\n\tprivate _requestToken?: CancellationTokenSource;\n\tprivate _context?: LineContext;\n\tprivate _currentSelection: Selection;\n\n\tprivate _completionModel: CompletionModel | undefined;\n\tprivate readonly _completionDisposables = new DisposableStore();\n\tprivate readonly _onDidCancel = new Emitter<ICancelEvent>();\n\tprivate readonly _onDidTrigger = new Emitter<ITriggerEvent>();\n\tprivate readonly _onDidSuggest = new Emitter<ISuggestEvent>();\n\n\treadonly onDidCancel: Event<ICancelEvent> = this._onDidCancel.event;\n\treadonly onDidTrigger: Event<ITriggerEvent> = this._onDidTrigger.event;\n\treadonly onDidSuggest: Event<ISuggestEvent> = this._onDidSuggest.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n\n\t\t// wire up various listeners\n\t\tthis._toDispose.add(this._editor.onDidChangeModel(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis.cancel();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis.cancel();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeConfiguration(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis._updateQuickSuggest();\n\t\t}));\n\t\tthis._toDispose.add(CompletionProviderRegistry.onDidChange(() => {\n\t\t\tthis._updateTriggerCharacters();\n\t\t\tthis._updateActiveSuggestSession();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\n\t\t\tthis._onCursorChange(e);\n\t\t}));\n\n\t\tlet editorIsComposing = false;\n\t\tthis._toDispose.add(this._editor.onDidCompositionStart(() => {\n\t\t\teditorIsComposing = true;\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidCompositionEnd(() => {\n\t\t\t// refilter when composition ends\n\t\t\teditorIsComposing = false;\n\t\t\tthis._refilterCompletionItems();\n\t\t}));\n\t\tthis._toDispose.add(this._editor.onDidChangeModelContent(() => {\n\t\t\t// only filter completions when the editor isn't\n\t\t\t// composing a character, e.g. ¨ + u makes ü but just\n\t\t\t// ¨ cannot be used for filtering\n\t\t\tif (!editorIsComposing) {\n\t\t\t\tthis._refilterCompletionItems();\n\t\t\t}\n\t\t}));\n\n\t\tthis._updateTriggerCharacters();\n\t\tthis._updateQuickSuggest();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._triggerCharacterListener);\n\t\tdispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n\t\tthis._toDispose.dispose();\n\t\tthis._completionDisposables.dispose();\n\t\tthis.cancel();\n\t}\n\n\t// --- handle configuration & precondition changes\n\n\tprivate _updateQuickSuggest(): void {\n\t\tthis._quickSuggestDelay = this._editor.getOption(EditorOption.quickSuggestionsDelay);\n\n\t\tif (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\n\t\t\tthis._quickSuggestDelay = 10;\n\t\t}\n\t}\n\n\tprivate _updateTriggerCharacters(): void {\n\t\tthis._triggerCharacterListener.clear();\n\n\t\tif (this._editor.getOption(EditorOption.readOnly)\n\t\t\t|| !this._editor.hasModel()\n\t\t\t|| !this._editor.getOption(EditorOption.suggestOnTriggerCharacters)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst supportsByTriggerCharacter = new Map<string, Set<CompletionItemProvider>>();\n\t\tfor (const support of CompletionProviderRegistry.all(this._editor.getModel())) {\n\t\t\tfor (const ch of support.triggerCharacters || []) {\n\t\t\t\tlet set = supportsByTriggerCharacter.get(ch);\n\t\t\t\tif (!set) {\n\t\t\t\t\tset = new Set();\n\t\t\t\t\tset.add(getSnippetSuggestSupport());\n\t\t\t\t\tsupportsByTriggerCharacter.set(ch, set);\n\t\t\t\t}\n\t\t\t\tset.add(support);\n\t\t\t}\n\t\t}\n\n\n\t\tconst checkTriggerCharacter = (text?: string) => {\n\n\t\t\tif (!text) {\n\t\t\t\t// came here from the compositionEnd-event\n\t\t\t\tconst position = this._editor.getPosition()!;\n\t\t\t\tconst model = this._editor.getModel()!;\n\t\t\t\ttext = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\t\t\t}\n\n\t\t\tlet lastChar = '';\n\t\t\tif (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n\t\t\t\tif (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n\t\t\t\t\tlastChar = text.substr(text.length - 2);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlastChar = text.charAt(text.length - 1);\n\t\t\t}\n\n\t\t\tconst supports = supportsByTriggerCharacter.get(lastChar);\n\t\t\tif (supports) {\n\t\t\t\t// keep existing items that where not computed by the\n\t\t\t\t// supports/providers that want to trigger now\n\t\t\t\tconst existing = this._completionModel\n\t\t\t\t\t? { items: this._completionModel.adopt(supports), clipboardText: this._completionModel.clipboardText }\n\t\t\t\t\t: undefined;\n\t\t\t\tthis.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(this._completionModel), supports, existing);\n\t\t\t}\n\t\t};\n\n\t\tthis._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n\t\tthis._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\n\t}\n\n\t// --- trigger/retrigger/cancel suggest\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tcancel(retrigger: boolean = false): void {\n\t\tif (this._state !== State.Idle) {\n\t\t\tthis._triggerQuickSuggest.cancel();\n\t\t\tthis._requestToken?.cancel();\n\t\t\tthis._requestToken = undefined;\n\t\t\tthis._state = State.Idle;\n\t\t\tthis._completionModel = undefined;\n\t\t\tthis._context = undefined;\n\t\t\tthis._onDidCancel.fire({ retrigger });\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis._completionDisposables.clear();\n\t}\n\n\tprivate _updateActiveSuggestSession(): void {\n\t\tif (this._state !== State.Idle) {\n\t\t\tif (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\n\t\t\t\tthis.cancel();\n\t\t\t} else {\n\t\t\t\tthis.trigger({ auto: this._state === State.Auto, shy: false }, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onCursorChange(e: ICursorSelectionChangedEvent): void {\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst prevSelection = this._currentSelection;\n\t\tthis._currentSelection = this._editor.getSelection();\n\n\t\tif (!e.selection.isEmpty()\n\t\t\t|| (e.reason !== CursorChangeReason.NotSet && e.reason !== CursorChangeReason.Explicit)\n\t\t\t|| (e.source !== 'keyboard' && e.source !== 'deleteLeft')\n\t\t) {\n\t\t\t// Early exit if nothing needs to be done!\n\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!CompletionProviderRegistry.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._state === State.Idle && e.reason === CursorChangeReason.NotSet) {\n\n\t\t\tif (this._editor.getOption(EditorOption.quickSuggestions) === false) {\n\t\t\t\t// not enabled\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n\t\t\t\t// cursor didn't move RIGHT\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._editor.getOption(EditorOption.suggest).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\n\t\t\t\t// no quick suggestion when in snippet mode\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.cancel();\n\n\t\t\tthis._triggerQuickSuggest.cancelAndSet(() => {\n\t\t\t\tif (this._state !== State.Idle) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!LineContext.shouldAutoTrigger(this._editor)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\tconst pos = this._editor.getPosition();\n\t\t\t\t// validate enabled now\n\t\t\t\tconst quickSuggestions = this._editor.getOption(EditorOption.quickSuggestions);\n\t\t\t\tif (quickSuggestions === false) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (quickSuggestions === true) {\n\t\t\t\t\t// all good\n\t\t\t\t} else {\n\t\t\t\t\t// Check the type of the token that triggered this\n\t\t\t\t\tmodel.tokenizeIfCheap(pos.lineNumber);\n\t\t\t\t\tconst lineTokens = model.getLineTokens(pos.lineNumber);\n\t\t\t\t\tconst tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n\t\t\t\t\tconst inValidScope = quickSuggestions.other && tokenType === StandardTokenType.Other\n\t\t\t\t\t\t|| quickSuggestions.comments && tokenType === StandardTokenType.Comment\n\t\t\t\t\t\t|| quickSuggestions.strings && tokenType === StandardTokenType.String;\n\n\t\t\t\t\tif (!inValidScope) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we made it till here -> trigger now\n\t\t\t\tthis.trigger({ auto: true, shy: false });\n\n\t\t\t}, this._quickSuggestDelay);\n\n\n\t\t} else if (this._state !== State.Idle && e.reason === CursorChangeReason.Explicit) {\n\t\t\t// suggest is active and something like cursor keys are used to move\n\t\t\t// the cursor. this means we can refilter at the new position\n\t\t\tthis._refilterCompletionItems();\n\t\t}\n\t}\n\n\tprivate _refilterCompletionItems(): void {\n\t\t// Re-filter suggestions. This MUST run async because filtering/scoring\n\t\t// uses the model content AND the cursor position. The latter is NOT\n\t\t// updated when the document has changed (the event which drives this method)\n\t\t// and therefore a little pause (next mirco task) is needed. See:\n\t\t// https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\n\t\tPromise.resolve().then(() => {\n\t\t\tif (this._state === State.Idle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = this._editor.getModel();\n\t\t\tconst position = this._editor.getPosition();\n\t\t\tconst ctx = new LineContext(model, position, this._state === State.Auto, false);\n\t\t\tthis._onNewContext(ctx);\n\t\t});\n\t}\n\n\ttrigger(context: SuggestTriggerContext, retrigger: boolean = false, onlyFrom?: Set<CompletionItemProvider>, existing?: { items: CompletionItem[], clipboardText: string | undefined }): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst auto = context.auto;\n\t\tconst ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\n\n\t\t// Cancel previous requests, change state & update UI\n\t\tthis.cancel(retrigger);\n\t\tthis._state = auto ? State.Auto : State.Manual;\n\t\tthis._onDidTrigger.fire({ auto, shy: context.shy, position: this._editor.getPosition() });\n\n\t\t// Capture context when request was sent\n\t\tthis._context = ctx;\n\n\t\t// Build context for request\n\t\tlet suggestCtx: CompletionContext = { triggerKind: context.triggerKind ?? CompletionTriggerKind.Invoke };\n\t\tif (context.triggerCharacter) {\n\t\t\tsuggestCtx = {\n\t\t\t\ttriggerKind: CompletionTriggerKind.TriggerCharacter,\n\t\t\t\ttriggerCharacter: context.triggerCharacter\n\t\t\t};\n\t\t}\n\n\t\tthis._requestToken = new CancellationTokenSource();\n\n\t\t// kind filter and snippet sort rules\n\t\tconst snippetSuggestions = this._editor.getOption(EditorOption.snippetSuggestions);\n\t\tlet snippetSortOrder = SnippetSortOrder.Inline;\n\t\tswitch (snippetSuggestions) {\n\t\t\tcase 'top':\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Top;\n\t\t\t\tbreak;\n\t\t\t// \t↓ that's the default anyways...\n\t\t\t// case 'inline':\n\t\t\t// \tsnippetSortOrder = SnippetSortOrder.Inline;\n\t\t\t// \tbreak;\n\t\t\tcase 'bottom':\n\t\t\t\tsnippetSortOrder = SnippetSortOrder.Bottom;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst itemKindFilter = SuggestModel._createItemKindFilter(this._editor);\n\t\tconst wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\n\n\t\tconst completions = provideSuggestionItems(\n\t\t\tmodel,\n\t\t\tthis._editor.getPosition(),\n\t\t\tnew CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom),\n\t\t\tsuggestCtx,\n\t\t\tthis._requestToken.token\n\t\t);\n\n\t\tPromise.all([completions, wordDistance]).then(async ([completions, wordDistance]) => {\n\n\t\t\tthis._requestToken?.dispose();\n\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet clipboardText = existing?.clipboardText;\n\t\t\tif (!clipboardText && completions.needsClipboard) {\n\t\t\t\tclipboardText = await this._clipboardService.readText();\n\t\t\t}\n\n\t\t\tif (this._state === State.Idle) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = this._editor.getModel();\n\t\t\tlet items = completions.items;\n\n\t\t\tif (existing) {\n\t\t\t\tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n\t\t\t\titems = items.concat(existing.items).sort(cmpFn);\n\t\t\t}\n\n\t\t\tconst ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\n\t\t\tthis._completionModel = new CompletionModel(items, this._context!.column, {\n\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\tcharacterCountDelta: ctx.column - this._context!.column\n\t\t\t},\n\t\t\t\twordDistance,\n\t\t\t\tthis._editor.getOption(EditorOption.suggest),\n\t\t\t\tthis._editor.getOption(EditorOption.snippetSuggestions),\n\t\t\t\tclipboardText\n\t\t\t);\n\n\t\t\t// store containers so that they can be disposed later\n\t\t\tthis._completionDisposables.add(completions.disposable);\n\n\t\t\tthis._onNewContext(ctx);\n\n\t\t\t// finally report telemetry about durations\n\t\t\tthis._reportDurationsTelemetry(completions.durations);\n\n\t\t}).catch(onUnexpectedError);\n\t}\n\n\tprivate _telemetryGate: number = 0;\n\n\tprivate _reportDurationsTelemetry(durations: CompletionDurations): void {\n\n\t\tif (this._telemetryGate++ % 230 !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\ttype Durations = { data: string; };\n\t\t\ttype DurationsClassification = { data: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' } };\n\t\t\tthis._telemetryService.publicLog2<Durations, DurationsClassification>('suggest.durations.json', { data: JSON.stringify(durations) });\n\t\t\tthis._logService.debug('suggest.durations.json', durations);\n\t\t});\n\t}\n\n\tprivate static _createItemKindFilter(editor: ICodeEditor): Set<CompletionItemKind> {\n\t\t// kind filter and snippet sort rules\n\t\tconst result = new Set<CompletionItemKind>();\n\n\t\t// snippet setting\n\t\tconst snippetSuggestions = editor.getOption(EditorOption.snippetSuggestions);\n\t\tif (snippetSuggestions === 'none') {\n\t\t\tresult.add(CompletionItemKind.Snippet);\n\t\t}\n\n\t\t// type setting\n\t\tconst suggestOptions = editor.getOption(EditorOption.suggest);\n\t\tif (!suggestOptions.showMethods) { result.add(CompletionItemKind.Method); }\n\t\tif (!suggestOptions.showFunctions) { result.add(CompletionItemKind.Function); }\n\t\tif (!suggestOptions.showConstructors) { result.add(CompletionItemKind.Constructor); }\n\t\tif (!suggestOptions.showFields) { result.add(CompletionItemKind.Field); }\n\t\tif (!suggestOptions.showVariables) { result.add(CompletionItemKind.Variable); }\n\t\tif (!suggestOptions.showClasses) { result.add(CompletionItemKind.Class); }\n\t\tif (!suggestOptions.showStructs) { result.add(CompletionItemKind.Struct); }\n\t\tif (!suggestOptions.showInterfaces) { result.add(CompletionItemKind.Interface); }\n\t\tif (!suggestOptions.showModules) { result.add(CompletionItemKind.Module); }\n\t\tif (!suggestOptions.showProperties) { result.add(CompletionItemKind.Property); }\n\t\tif (!suggestOptions.showEvents) { result.add(CompletionItemKind.Event); }\n\t\tif (!suggestOptions.showOperators) { result.add(CompletionItemKind.Operator); }\n\t\tif (!suggestOptions.showUnits) { result.add(CompletionItemKind.Unit); }\n\t\tif (!suggestOptions.showValues) { result.add(CompletionItemKind.Value); }\n\t\tif (!suggestOptions.showConstants) { result.add(CompletionItemKind.Constant); }\n\t\tif (!suggestOptions.showEnums) { result.add(CompletionItemKind.Enum); }\n\t\tif (!suggestOptions.showEnumMembers) { result.add(CompletionItemKind.EnumMember); }\n\t\tif (!suggestOptions.showKeywords) { result.add(CompletionItemKind.Keyword); }\n\t\tif (!suggestOptions.showWords) { result.add(CompletionItemKind.Text); }\n\t\tif (!suggestOptions.showColors) { result.add(CompletionItemKind.Color); }\n\t\tif (!suggestOptions.showFiles) { result.add(CompletionItemKind.File); }\n\t\tif (!suggestOptions.showReferences) { result.add(CompletionItemKind.Reference); }\n\t\tif (!suggestOptions.showColors) { result.add(CompletionItemKind.Customcolor); }\n\t\tif (!suggestOptions.showFolders) { result.add(CompletionItemKind.Folder); }\n\t\tif (!suggestOptions.showTypeParameters) { result.add(CompletionItemKind.TypeParameter); }\n\t\tif (!suggestOptions.showSnippets) { result.add(CompletionItemKind.Snippet); }\n\t\tif (!suggestOptions.showUsers) { result.add(CompletionItemKind.User); }\n\t\tif (!suggestOptions.showIssues) { result.add(CompletionItemKind.Issue); }\n\n\t\treturn result;\n\t}\n\n\tprivate _onNewContext(ctx: LineContext): void {\n\n\t\tif (!this._context) {\n\t\t\t// happens when 24x7 IntelliSense is enabled and still in its delay\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.lineNumber !== this._context.lineNumber) {\n\t\t\t// e.g. happens when pressing Enter while IntelliSense is computed\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\n\t\t\t// cancel IntelliSense when line start changes\n\t\t\t// happens when the current word gets outdented\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.column < this._context.column) {\n\t\t\t// typed -> moved cursor LEFT -> retrigger if still on a word\n\t\t\tif (ctx.leadingWord.word) {\n\t\t\t\tthis.trigger({ auto: this._context.auto, shy: false }, true);\n\t\t\t} else {\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._completionModel) {\n\t\t\t// happens when IntelliSense is not yet computed\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\n\t\t\t// started a new word while IntelliSense shows -> retrigger\n\n\t\t\t// Select those providers have not contributed to this completion model and re-trigger completions for\n\t\t\t// them. Also adopt the existing items and merge them into the new completion model\n\t\t\tconst inactiveProvider = new Set(CompletionProviderRegistry.all(this._editor.getModel()!));\n\t\t\tfor (let provider of this._completionModel.allProvider) {\n\t\t\t\tinactiveProvider.delete(provider);\n\t\t\t}\n\t\t\tconst items = this._completionModel.adopt(new Set());\n\t\t\tthis.trigger({ auto: this._context.auto, shy: false }, true, inactiveProvider, { items, clipboardText: this._completionModel.clipboardText });\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\n\t\t\t// typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n\t\t\tconst { incomplete } = this._completionModel;\n\t\t\tconst items = this._completionModel.adopt(incomplete);\n\t\t\tthis.trigger({ auto: this._state === State.Auto, shy: false, triggerKind: CompletionTriggerKind.TriggerForIncompleteCompletions }, true, incomplete, { items, clipboardText: this._completionModel.clipboardText });\n\n\t\t} else {\n\t\t\t// typed -> moved cursor RIGHT -> update UI\n\t\t\tlet oldLineContext = this._completionModel.lineContext;\n\t\t\tlet isFrozen = false;\n\n\t\t\tthis._completionModel.lineContext = {\n\t\t\t\tleadingLineContent: ctx.leadingLineContent,\n\t\t\t\tcharacterCountDelta: ctx.column - this._context.column\n\t\t\t};\n\n\t\t\tif (this._completionModel.items.length === 0) {\n\n\t\t\t\tif (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n\t\t\t\t\t// retrigger when heading into a new word\n\t\t\t\t\tthis.trigger({ auto: this._context.auto, shy: false }, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._context.auto) {\n\t\t\t\t\t// freeze when IntelliSense was manually requested\n\t\t\t\t\tthis._completionModel.lineContext = oldLineContext;\n\t\t\t\t\tisFrozen = this._completionModel.items.length > 0;\n\n\t\t\t\t\tif (isFrozen && ctx.leadingWord.word.length === 0) {\n\t\t\t\t\t\t// there were results before but now there aren't\n\t\t\t\t\t\t// and also we are not on a word anymore -> cancel\n\t\t\t\t\t\tthis.cancel();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// nothing left\n\t\t\t\t\tthis.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidSuggest.fire({\n\t\t\t\tcompletionModel: this._completionModel,\n\t\t\t\tauto: this._context.auto,\n\t\t\t\tshy: this._context.shy,\n\t\t\t\tisFrozen,\n\t\t\t});\n\t\t}\n\t}\n}\n"]}