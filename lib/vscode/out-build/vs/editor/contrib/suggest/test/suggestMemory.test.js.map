{"version":3,"file":"suggestMemory.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/suggest/test/suggestMemory.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { LRUMemory, NoMemory, PrefixMemory, Memory } from 'vs/editor/contrib/suggest/suggestMemory';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { createSuggestItem } from 'vs/editor/contrib/suggest/test/completionModel.test';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { CompletionItem } from 'vs/editor/contrib/suggest/suggest';\n\nsuite('SuggestMemories', function () {\n\n\tlet pos: IPosition;\n\tlet buffer: ITextModel;\n\tlet items: CompletionItem[];\n\n\tsetup(function () {\n\t\tpos = { lineNumber: 1, column: 1 };\n\t\tbuffer = createTextModel('This is some text.\\nthis.\\nfoo: ,');\n\t\titems = [\n\t\t\tcreateSuggestItem('foo', 0),\n\t\t\tcreateSuggestItem('bar', 0)\n\t\t];\n\t});\n\n\ttest('AbstractMemory, select', function () {\n\n\t\tconst mem = new class extends Memory {\n\t\t\tconstructor() {\n\t\t\t\tsuper('first');\n\t\t\t}\n\t\t\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void {\n\t\t\t\tthrow new Error('Method not implemented.');\n\t\t\t} toJSON(): object {\n\t\t\t\tthrow new Error('Method not implemented.');\n\t\t\t}\n\t\t\tfromJSON(data: object): void {\n\t\t\t\tthrow new Error('Method not implemented.');\n\t\t\t}\n\t\t};\n\n\t\tlet item1 = createSuggestItem('fazz', 0);\n\t\tlet item2 = createSuggestItem('bazz', 0);\n\t\tlet item3 = createSuggestItem('bazz', 0);\n\t\tlet item4 = createSuggestItem('bazz', 0);\n\t\titem1.completion.preselect = false;\n\t\titem2.completion.preselect = true;\n\t\titem3.completion.preselect = true;\n\n\t\tassert.strictEqual(mem.select(buffer, pos, [item1, item2, item3, item4]), 1);\n\t});\n\n\ttest('[No|Prefix|LRU]Memory honor selection boost', function () {\n\t\tlet item1 = createSuggestItem('fazz', 0);\n\t\tlet item2 = createSuggestItem('bazz', 0);\n\t\tlet item3 = createSuggestItem('bazz', 0);\n\t\tlet item4 = createSuggestItem('bazz', 0);\n\t\titem1.completion.preselect = false;\n\t\titem2.completion.preselect = true;\n\t\titem3.completion.preselect = true;\n\t\tlet items = [item1, item2, item3, item4];\n\n\n\t\tassert.strictEqual(new NoMemory().select(buffer, pos, items), 1);\n\t\tassert.strictEqual(new LRUMemory().select(buffer, pos, items), 1);\n\t\tassert.strictEqual(new PrefixMemory().select(buffer, pos, items), 1);\n\t});\n\n\ttest('NoMemory', () => {\n\n\t\tconst mem = new NoMemory();\n\n\t\tassert.strictEqual(mem.select(buffer, pos, items), 0);\n\t\tassert.strictEqual(mem.select(buffer, pos, []), 0);\n\n\t\tmem.memorize(buffer, pos, items[0]);\n\t\tmem.memorize(buffer, pos, null!);\n\t});\n\n\ttest('LRUMemory', () => {\n\n\t\tpos = { lineNumber: 2, column: 6 };\n\n\t\tconst mem = new LRUMemory();\n\t\tmem.memorize(buffer, pos, items[1]);\n\n\t\tassert.strictEqual(mem.select(buffer, pos, items), 1);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 3 }, items), 0);\n\n\t\tmem.memorize(buffer, pos, items[0]);\n\t\tassert.strictEqual(mem.select(buffer, pos, items), 0);\n\n\t\tassert.strictEqual(mem.select(buffer, pos, [\n\t\t\tcreateSuggestItem('new', 0),\n\t\t\tcreateSuggestItem('bar', 0)\n\t\t]), 1);\n\n\t\tassert.strictEqual(mem.select(buffer, pos, [\n\t\t\tcreateSuggestItem('new1', 0),\n\t\t\tcreateSuggestItem('new2', 0)\n\t\t]), 0);\n\t});\n\n\ttest('`\"editor.suggestSelection\": \"recentlyUsed\"` should be a little more sticky #78571', function () {\n\n\t\tlet item1 = createSuggestItem('gamma', 0);\n\t\tlet item2 = createSuggestItem('game', 0);\n\t\titems = [item1, item2];\n\n\t\tlet mem = new LRUMemory();\n\t\tbuffer.setValue('    foo.');\n\t\tmem.memorize(buffer, { lineNumber: 1, column: 1 }, item2);\n\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 2 }, items), 0); // leading whitespace -> ignore recent items\n\n\t\tmem.memorize(buffer, { lineNumber: 1, column: 9 }, item2);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 9 }, items), 1); // foo.\n\n\t\tbuffer.setValue('    foo.g');\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 10 }, items), 1); // foo.g, 'gamma' and 'game' have the same score\n\n\t\titem1.score = [10, 0, 0];\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 10 }, items), 0); // foo.g, 'gamma' has higher score\n\n\t});\n\n\ttest('intellisense is not showing top options first #43429', function () {\n\t\t// ensure we don't memorize for whitespace prefixes\n\n\t\tpos = { lineNumber: 2, column: 6 };\n\t\tconst mem = new LRUMemory();\n\n\t\tmem.memorize(buffer, pos, items[1]);\n\t\tassert.strictEqual(mem.select(buffer, pos, items), 1);\n\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 3, column: 5 }, items), 0); // foo: |,\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 3, column: 6 }, items), 1); // foo: ,|\n\t});\n\n\ttest('PrefixMemory', () => {\n\n\t\tconst mem = new PrefixMemory();\n\t\tbuffer.setValue('constructor');\n\t\tconst item0 = createSuggestItem('console', 0);\n\t\tconst item1 = createSuggestItem('const', 0);\n\t\tconst item2 = createSuggestItem('constructor', 0);\n\t\tconst item3 = createSuggestItem('constant', 0);\n\t\tconst items = [item0, item1, item2, item3];\n\n\t\tmem.memorize(buffer, { lineNumber: 1, column: 2 }, item1); // c -> const\n\t\tmem.memorize(buffer, { lineNumber: 1, column: 3 }, item0); // co -> console\n\t\tmem.memorize(buffer, { lineNumber: 1, column: 4 }, item2); // con -> constructor\n\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 1 }, items), 0);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 2 }, items), 1);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 3 }, items), 0);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 4 }, items), 2);\n\t\tassert.strictEqual(mem.select(buffer, { lineNumber: 1, column: 7 }, items), 2); // find substr\n\t});\n\n});\n"]}