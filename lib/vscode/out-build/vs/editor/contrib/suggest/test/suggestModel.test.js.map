{"version":3,"file":"suggestModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/suggest/test/suggestModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { CoreEditingCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TokenizationResult2 } from 'vs/editor/common/core/token';\nimport { Handler } from 'vs/editor/common/editorCommon';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { IState, CompletionList, CompletionItemProvider, LanguageIdentifier, MetadataConsts, CompletionProviderRegistry, CompletionTriggerKind, TokenizationRegistry, CompletionItemKind } from 'vs/editor/common/modes';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { NULL_STATE } from 'vs/editor/common/modes/nullMode';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/snippetController2';\nimport { SuggestController } from 'vs/editor/contrib/suggest/suggestController';\nimport { LineContext, SuggestModel } from 'vs/editor/contrib/suggest/suggestModel';\nimport { ISelectedSuggestion } from 'vs/editor/contrib/suggest/suggestWidget';\nimport { ITestCodeEditor, createTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { MockMode } from 'vs/editor/test/common/mocks/mockMode';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IStorageService, InMemoryStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { ISuggestMemoryService } from 'vs/editor/contrib/suggest/suggestMemory';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { MockKeybindingService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\n\nfunction createMockEditor(model: TextModel): ITestCodeEditor {\n\tlet editor = createTestCodeEditor({\n\t\tmodel: model,\n\t\tserviceCollection: new ServiceCollection(\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[IStorageService, new InMemoryStorageService()],\n\t\t\t[IKeybindingService, new MockKeybindingService()],\n\t\t\t[ISuggestMemoryService, new class implements ISuggestMemoryService {\n\t\t\t\tdeclare readonly _serviceBrand: undefined;\n\t\t\t\tmemorize(): void {\n\t\t\t\t}\n\t\t\t\tselect(): number {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}],\n\t\t),\n\t});\n\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\treturn editor;\n}\n\nsuite('SuggestModel - Context', function () {\n\tconst OUTER_LANGUAGE_ID = new LanguageIdentifier('outerMode', 3);\n\tconst INNER_LANGUAGE_ID = new LanguageIdentifier('innerMode', 4);\n\n\tclass OuterMode extends MockMode {\n\t\tconstructor() {\n\t\t\tsuper(OUTER_LANGUAGE_ID);\n\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {}));\n\n\t\t\tthis._register(TokenizationRegistry.register(this.getLanguageIdentifier().language, {\n\t\t\t\tgetInitialState: (): IState => NULL_STATE,\n\t\t\t\ttokenize: undefined!,\n\t\t\t\ttokenize2: (line: string, hasEOL: boolean, state: IState): TokenizationResult2 => {\n\t\t\t\t\tconst tokensArr: number[] = [];\n\t\t\t\t\tlet prevLanguageId: LanguageIdentifier | undefined = undefined;\n\t\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\t\tconst languageId = (line.charAt(i) === 'x' ? INNER_LANGUAGE_ID : OUTER_LANGUAGE_ID);\n\t\t\t\t\t\tif (prevLanguageId !== languageId) {\n\t\t\t\t\t\t\ttokensArr.push(i);\n\t\t\t\t\t\t\ttokensArr.push((languageId.id << MetadataConsts.LANGUAGEID_OFFSET));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevLanguageId = languageId;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tokens = new Uint32Array(tokensArr.length);\n\t\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\ttokens[i] = tokensArr[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn new TokenizationResult2(tokens, state);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tclass InnerMode extends MockMode {\n\t\tconstructor() {\n\t\t\tsuper(INNER_LANGUAGE_ID);\n\t\t\tthis._register(LanguageConfigurationRegistry.register(this.getLanguageIdentifier(), {}));\n\t\t}\n\t}\n\n\tconst assertAutoTrigger = (model: TextModel, offset: number, expected: boolean, message?: string): void => {\n\t\tconst pos = model.getPositionAt(offset);\n\t\tconst editor = createMockEditor(model);\n\t\teditor.setPosition(pos);\n\t\tassert.strictEqual(LineContext.shouldAutoTrigger(editor), expected, message);\n\t\teditor.dispose();\n\t};\n\n\tlet disposables: Disposable[] = [];\n\n\tsetup(() => {\n\t\tdisposables = [];\n\t});\n\n\tteardown(function () {\n\t\tdispose(disposables);\n\t\tdisposables = [];\n\t});\n\n\ttest('Context - shouldAutoTrigger', function () {\n\t\tconst model = createTextModel('Das Pferd frisst keinen Gurkensalat - Philipp Reis 1861.\\nWer hat\\'s erfunden?');\n\t\tdisposables.push(model);\n\n\t\tassertAutoTrigger(model, 3, true, 'end of word, Das|');\n\t\tassertAutoTrigger(model, 4, false, 'no word Das |');\n\t\tassertAutoTrigger(model, 1, false, 'middle of word D|as');\n\t\tassertAutoTrigger(model, 55, false, 'number, 1861|');\n\t});\n\n\ttest('shouldAutoTrigger at embedded language boundaries', () => {\n\t\tconst outerMode = new OuterMode();\n\t\tconst innerMode = new InnerMode();\n\t\tdisposables.push(outerMode, innerMode);\n\n\t\tconst model = createTextModel('a<xx>a<x>', undefined, outerMode.getLanguageIdentifier());\n\t\tdisposables.push(model);\n\n\t\tassertAutoTrigger(model, 1, true, 'a|<x — should trigger at end of word');\n\t\tassertAutoTrigger(model, 2, false, 'a<|x — should NOT trigger at start of word');\n\t\tassertAutoTrigger(model, 3, false, 'a<x|x —  should NOT trigger in middle of word');\n\t\tassertAutoTrigger(model, 4, true, 'a<xx|> — should trigger at boundary between languages');\n\t\tassertAutoTrigger(model, 5, false, 'a<xx>|a — should NOT trigger at start of word');\n\t\tassertAutoTrigger(model, 6, true, 'a<xx>a|< — should trigger at end of word');\n\t\tassertAutoTrigger(model, 8, true, 'a<xx>a<x|> — should trigger at end of word at boundary');\n\t});\n});\n\nsuite('SuggestModel - TriggerAndCancelOracle', function () {\n\n\n\tfunction getDefaultSuggestRange(model: ITextModel, position: Position) {\n\t\tconst wordUntil = model.getWordUntilPosition(position);\n\t\treturn new Range(position.lineNumber, wordUntil.startColumn, position.lineNumber, wordUntil.endColumn);\n\t}\n\n\tconst alwaysEmptySupport: CompletionItemProvider = {\n\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\treturn {\n\t\t\t\tincomplete: false,\n\t\t\t\tsuggestions: []\n\t\t\t};\n\t\t}\n\t};\n\n\tconst alwaysSomethingSupport: CompletionItemProvider = {\n\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\treturn {\n\t\t\t\tincomplete: false,\n\t\t\t\tsuggestions: [{\n\t\t\t\t\tlabel: doc.getWordUntilPosition(pos).word,\n\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\tinsertText: 'foofoo',\n\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\t};\n\n\tlet disposables: IDisposable[] = [];\n\tlet model: TextModel;\n\n\tsetup(function () {\n\t\tdisposables = dispose(disposables);\n\t\tmodel = createTextModel('abc def', undefined, undefined, URI.parse('test:somefile.ttt'));\n\t\tdisposables.push(model);\n\t});\n\n\tfunction withOracle(callback: (model: SuggestModel, editor: ITestCodeEditor) => any): Promise<any> {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst editor = createMockEditor(model);\n\t\t\tconst oracle = new SuggestModel(\n\t\t\t\teditor,\n\t\t\t\tnew class extends mock<IEditorWorkerService>() {\n\t\t\t\t\toverride computeWordRanges() {\n\t\t\t\t\t\treturn Promise.resolve({});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnew class extends mock<IClipboardService>() {\n\t\t\t\t\toverride readText() {\n\t\t\t\t\t\treturn Promise.resolve('CLIPPY');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tNullTelemetryService,\n\t\t\t\tnew NullLogService()\n\t\t\t);\n\t\t\tdisposables.push(oracle, editor);\n\n\t\t\ttry {\n\t\t\t\tresolve(callback(oracle, editor));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction assertEvent<E>(event: Event<E>, action: () => any, assert: (e: E) => any) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sub = event(e => {\n\t\t\t\tsub.dispose();\n\t\t\t\ttry {\n\t\t\t\t\tresolve(assert(e));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\ttry {\n\t\t\t\taction();\n\t\t\t} catch (err) {\n\t\t\t\tsub.dispose();\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\ttest('events - cancel/trigger', function () {\n\t\treturn withOracle(model => {\n\n\t\t\treturn Promise.all([\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: true, shy: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\n\t\t\t\t\treturn assertEvent(model.onDidCancel, function () {\n\t\t\t\t\t\tmodel.cancel();\n\t\t\t\t\t}, function (event) {\n\t\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t\t});\n\t\t\t\t}),\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: true, shy: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\t}),\n\n\t\t\t\tassertEvent(model.onDidTrigger, function () {\n\t\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\t})\n\t\t\t]);\n\t\t});\n\t});\n\n\n\ttest('events - suggest/empty', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysEmptySupport));\n\n\t\treturn withOracle(model => {\n\t\t\treturn Promise.all([\n\t\t\t\tassertEvent(model.onDidCancel, function () {\n\t\t\t\t\tmodel.trigger({ auto: true, shy: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t}),\n\t\t\t\tassertEvent(model.onDidSuggest, function () {\n\t\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t\t}, function (event) {\n\t\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 0);\n\t\t\t\t})\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('trigger - on type', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'd' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('#17400: Keep filtering suggestModel.ts after space', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'My Table',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'My Table',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t// make sure completionModel starts here!\n\t\t\t\tmodel.trigger({ auto: true, shy: false });\n\t\t\t}, event => {\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'My' });\n\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\t\tassert.strictEqual(first.completion.label, 'My Table');\n\n\t\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\t\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' ' });\n\n\t\t\t\t\t}, event => {\n\t\t\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\t\t\tassert.strictEqual(first.completion.label, 'My Table');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('#21484: Trigger character always force a new completion session', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo.bar',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo.bar',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'boom',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'boom',\n\t\t\t\t\t\trange: Range.fromPositions(\n\t\t\t\t\t\t\tpos.delta(0, doc.getLineContent(pos.lineNumber)[pos.column - 2] === '.' ? 0 : -1),\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'foo' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'foo.bar');\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '.' });\n\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\t\tconst [first, second] = event.completionModel.items;\n\t\t\t\t\tassert.strictEqual(first.completion.label, 'foo.bar');\n\t\t\t\t\tassert.strictEqual(second.completion.label, 'boom');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Intellisense Completion doesn\\'t respect space after equal sign (.html file), #29353 [1/2]', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('fo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: '+' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Intellisense Completion doesn\\'t respect space after equal sign (.html file), #29353 [2/2]', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('fo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\tassert.strictEqual(event.isFrozen, false);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' ' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (1/2)', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('foo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\tassert.strictEqual(event.completionModel.incomplete.size, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidCancel, () => {\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ';' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.retrigger, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Incomplete suggestion results cause re-triggering when typing w/o further context, #28400 (2/2)', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'foo;',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'foo',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\teditor.getModel()!.setValue('foo');\n\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\tmodel.trigger({ auto: false, shy: false });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\tassert.strictEqual(event.completionModel.incomplete.size, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\t// while we cancel incrementally enriching the set of\n\t\t\t\t\t// completions we still filter against those that we have\n\t\t\t\t\t// until now\n\t\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ';' });\n\t\t\t\t}, event => {\n\t\t\t\t\tassert.strictEqual(event.auto, false);\n\t\t\t\t\tassert.strictEqual(event.completionModel.incomplete.size, 1);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Trigger character is provided in suggest context', function () {\n\t\tlet triggerCharacter = '';\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\ttriggerCharacters: ['.'],\n\t\t\tprovideCompletionItems(doc, pos, context): CompletionList {\n\t\t\t\tassert.strictEqual(context.triggerKind, CompletionTriggerKind.TriggerCharacter);\n\t\t\t\ttriggerCharacter = context.triggerCharacter!;\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'foo.bar',\n\t\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\t\tinsertText: 'foo.bar',\n\t\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'foo.' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(triggerCharacter, '.');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Mac press and hold accent character insertion does not update suggestions, #35269', function () {\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'abc',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'abc',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'äbc',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'äbc',\n\t\t\t\t\t\trange: Range.fromPositions(pos.with(undefined, 1), pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('');\n\t\treturn withOracle((model, editor) => {\n\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'a' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].completion.label, 'abc');\n\n\t\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\t\teditor.executeEdits('test', [EditOperation.replace(new Range(1, 1, 1, 2), 'ä')]);\n\n\t\t\t\t}, event => {\n\t\t\t\t\t// suggest model changed to äbc\n\t\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\t\tassert.strictEqual(event.completionModel.items[0].completion.label, 'äbc');\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Backspace should not always cancel code completion, #36491', function () {\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle(async (model, editor) => {\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 4 });\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'd' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, editor, null);\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Text changes for completion CodeAction are affected by the completion #39893', function () {\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos): CompletionList {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tlabel: 'bar',\n\t\t\t\t\t\tkind: CompletionItemKind.Property,\n\t\t\t\t\t\tinsertText: 'bar',\n\t\t\t\t\t\trange: Range.fromPositions(pos.delta(0, -2), pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: ', bar',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, endLineNumber: 1, startColumn: 17, endColumn: 17 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setValue('ba; import { foo } from \"./b\"');\n\n\t\treturn withOracle(async (sugget, editor) => {\n\t\t\tclass TestCtrl extends SuggestController {\n\t\t\t\toverride _insertSuggestion(item: ISelectedSuggestion, flags: number = 0) {\n\t\t\t\t\tsuper._insertSuggestion(item, flags);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst ctrl = <TestCtrl>editor.registerAndInstantiateContribution(TestCtrl.ID, TestCtrl);\n\t\t\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\n\t\t\tawait assertEvent(sugget.onDidSuggest, () => {\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 3 });\n\t\t\t\tsugget.trigger({ auto: false, shy: false });\n\t\t\t}, event => {\n\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\t\t\t\tassert.strictEqual(first.completion.label, 'bar');\n\n\t\t\t\tctrl._insertSuggestion({ item: first, index: 0, model: event.completionModel });\n\t\t\t});\n\n\t\t\tassert.strictEqual(\n\t\t\t\tmodel.getValue(),\n\t\t\t\t'bar; import { foo, bar } from \"./b\"'\n\t\t\t);\n\t\t});\n\t});\n\n\ttest('Completion unexpectedly triggers on second keypress of an edit group in a snippet #43523', function () {\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, alwaysSomethingSupport));\n\n\t\treturn withOracle((model, editor) => {\n\t\t\treturn assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('d');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 2));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'e' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tconst [first] = event.completionModel.items;\n\n\t\t\t\tassert.strictEqual(first.provider, alwaysSomethingSupport);\n\t\t\t});\n\t\t});\n\t});\n\n\n\ttest('Fails to render completion details #47988', function () {\n\n\t\tlet disposeA = 0;\n\t\tlet disposeB = 0;\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: true,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'CompleteNot',\n\t\t\t\t\t\tinsertText: 'Incomplete',\n\t\t\t\t\t\tsortText: 'a',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t\tdispose() { disposeA += 1; }\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'Complete',\n\t\t\t\t\t\tinsertText: 'Complete',\n\t\t\t\t\t\tsortText: 'z',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t\tdispose() { disposeB += 1; }\n\t\t\t\t};\n\t\t\t},\n\t\t\tresolveCompletionItem(item) {\n\t\t\t\treturn item;\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'c' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(disposeA, 0);\n\t\t\t\tassert.strictEqual(disposeB, 0);\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'o' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\n\t\t\t\t// clean up\n\t\t\t\tmodel.clear();\n\t\t\t\tassert.strictEqual(disposeA, 2); // provide got called two times!\n\t\t\t\tassert.strictEqual(disposeB, 1);\n\t\t\t});\n\n\t\t});\n\t});\n\n\n\ttest('Trigger (full) completions when (incomplete) completions are already active #99504', function () {\n\n\t\tlet countA = 0;\n\t\tlet countB = 0;\n\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\tcountA += 1;\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false, // doesn't matter if incomplete or not\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Class,\n\t\t\t\t\t\tlabel: 'Z aaa',\n\t\t\t\t\t\tinsertText: 'Z aaa',\n\t\t\t\t\t\trange: new Range(1, 1, pos.lineNumber, pos.column)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(CompletionProviderRegistry.register({ scheme: 'test' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\tcountB += 1;\n\t\t\t\tif (!doc.getWordUntilPosition(pos).word.startsWith('a')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tincomplete: false,\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Folder,\n\t\t\t\t\t\tlabel: 'aaa',\n\t\t\t\t\t\tinsertText: 'aaa',\n\t\t\t\t\t\trange: getDefaultSuggestRange(doc, pos)\n\t\t\t\t\t}],\n\t\t\t\t};\n\t\t\t},\n\t\t}));\n\n\t\treturn withOracle(async (model, editor) => {\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\teditor.setValue('');\n\t\t\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: 'Z' });\n\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 1);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'Z aaa');\n\t\t\t});\n\n\t\t\tawait assertEvent(model.onDidSuggest, () => {\n\t\t\t\t// started another word: Z a|\n\t\t\t\t// item should be: Z aaa, aaa\n\t\t\t\teditor.trigger('keyboard', Handler.Type, { text: ' a' });\n\t\t\t}, event => {\n\t\t\t\tassert.strictEqual(event.auto, true);\n\t\t\t\tassert.strictEqual(event.completionModel.items.length, 2);\n\t\t\t\tassert.strictEqual(event.completionModel.items[0].textLabel, 'Z aaa');\n\t\t\t\tassert.strictEqual(event.completionModel.items[1].textLabel, 'aaa');\n\n\t\t\t\tassert.strictEqual(countA, 1); // should we keep the suggestions from the \"active\" provider?, Yes! See: #106573\n\t\t\t\tassert.strictEqual(countB, 2);\n\t\t\t});\n\t\t});\n\t});\n});\n"]}