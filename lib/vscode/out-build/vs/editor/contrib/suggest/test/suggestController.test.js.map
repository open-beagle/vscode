{"version":3,"file":"suggestController.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/suggest/test/suggestController.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { SuggestController } from 'vs/editor/contrib/suggest/suggestController';\nimport { createTestCodeEditor, ITestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IStorageService, InMemoryStorageService } from 'vs/platform/storage/common/storage';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { MockKeybindingService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ISuggestMemoryService } from 'vs/editor/contrib/suggest/suggestMemory';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CompletionProviderRegistry, CompletionItemKind, CompletionItemInsertTextRule } from 'vs/editor/common/modes';\nimport { Event } from 'vs/base/common/event';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/snippetController2';\nimport { IMenuService, IMenu } from 'vs/platform/actions/common/actions';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\nimport { Range } from 'vs/editor/common/core/range';\nimport { timeout } from 'vs/base/common/async';\nimport { NullLogService, ILogService } from 'vs/platform/log/common/log';\n\nsuite('SuggestController', function () {\n\n\tconst disposables = new DisposableStore();\n\n\tlet controller: SuggestController;\n\tlet editor: ITestCodeEditor;\n\tlet model: TextModel;\n\n\tsetup(function () {\n\t\tdisposables.clear();\n\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[ILogService, new NullLogService()],\n\t\t\t[IStorageService, new InMemoryStorageService()],\n\t\t\t[IKeybindingService, new MockKeybindingService()],\n\t\t\t[IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\t\t\t\toverride computeWordRanges() {\n\t\t\t\t\treturn Promise.resolve({});\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[ISuggestMemoryService, new class extends mock<ISuggestMemoryService>() {\n\t\t\t\toverride memorize(): void { }\n\t\t\t\toverride select(): number { return 0; }\n\t\t\t}],\n\t\t\t[IMenuService, new class extends mock<IMenuService>() {\n\t\t\t\toverride createMenu() {\n\t\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\t\toverride dispose() { }\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}]\n\t\t);\n\n\t\tmodel = createTextModel('', undefined, undefined, URI.from({ scheme: 'test-ctrl', path: '/path.tst' }));\n\t\teditor = createTestCodeEditor({\n\t\t\tmodel,\n\t\t\tserviceCollection,\n\t\t});\n\n\t\teditor.registerAndInstantiateContribution(SnippetController2.ID, SnippetController2);\n\t\tcontroller = editor.registerAndInstantiateContribution(SuggestController.ID, SuggestController);\n\t});\n\n\ttest('postfix completion reports incorrect position #86984', async function () {\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'let ${1:name} = foo$0',\n\t\t\t\t\t\tinsertTextRules: CompletionItemInsertTextRule.InsertAsSnippet,\n\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 9, endLineNumber: 1, endColumn: 11 },\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 5, endLineNumber: 1, endColumn: 9 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('    foo.le');\n\t\teditor.setSelection(new Selection(1, 11, 1, 11));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\tassert.strictEqual(editor.getValue(), '    let name = foo');\n\t});\n\n\ttest('use additionalTextEdits sync when possible', async function () {\n\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos),\n\t\t\t\t\t\tadditionalTextEdits: [{\n\t\t\t\t\t\t\ttext: 'I came sync',\n\t\t\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t\t\t}]\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'I came synchello\\nhallohello');\n\t});\n\n\ttest('resolve additionalTextEdits async when needed', async function () {\n\n\t\tlet resolveCallCount = 0;\n\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait timeout(10);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\tawait timeout(20);\n\t\tassert.strictEqual(editor.getValue(), 'I came latehello\\nhallohello');\n\n\t\t// single undo stop\n\t\teditor.getModel()?.undo();\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallo');\n\t});\n\n\ttest('resolve additionalTextEdits async when needed (typing)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(2, 11, 2, 11)));\n\t\teditor.trigger('test', 'type', { text: 'TYPING' });\n\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohelloTYPING');\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'I came latehello\\nhallohelloTYPING');\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(2, 17, 2, 17)));\n\t});\n\n\t// additional edit come late and are AFTER the selection -> cancel\n\ttest('resolve additionalTextEdits async when needed (simple conflict)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 6, endLineNumber: 1, endColumn: 6 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'hello');\n\t});\n\n\t// additional edit come late and are AFTER the position at which the user typed -> cancelled\n\ttest('resolve additionalTextEdits async when needed (conflict)', async function () {\n\n\t\tlet resolveCallCount = 0;\n\t\tlet resolve: Function = () => { };\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tresolveCallCount += 1;\n\t\t\t\tawait new Promise(_resolve => resolve = _resolve);\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'I came late',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 2 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('hello\\nhallo');\n\t\teditor.setSelection(new Selection(2, 6, 2, 6));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(false, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'hello\\nhallohello');\n\t\tassert.strictEqual(resolveCallCount, 1);\n\n\t\t// additional edits happened after a litte wait\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\t\teditor.trigger('test', 'type', { text: 'TYPING' });\n\n\t\tassert.strictEqual(editor.getValue(), 'TYPINGhello\\nhallohello');\n\n\t\tresolve();\n\t\tawait timeout(10);\n\t\tassert.strictEqual(editor.getValue(), 'TYPINGhello\\nhallohello');\n\t\tassert.ok(editor.getSelection()?.equalsSelection(new Selection(1, 7, 1, 7)));\n\t});\n\n\ttest('resolve additionalTextEdits async when needed (cancel)', async function () {\n\n\t\tlet resolve: Function[] = [];\n\t\tdisposables.add(CompletionProviderRegistry.register({ scheme: 'test-ctrl' }, {\n\t\t\tprovideCompletionItems(doc, pos) {\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [{\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hello',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tkind: CompletionItemKind.Snippet,\n\t\t\t\t\t\tlabel: 'let',\n\t\t\t\t\t\tinsertText: 'hallo',\n\t\t\t\t\t\trange: Range.fromPositions(pos)\n\t\t\t\t\t}]\n\t\t\t\t};\n\t\t\t},\n\t\t\tasync resolveCompletionItem(item) {\n\t\t\t\tawait new Promise(_resolve => resolve.push(_resolve));\n\t\t\t\titem.additionalTextEdits = [{\n\t\t\t\t\ttext: 'additionalTextEdits',\n\t\t\t\t\trange: { startLineNumber: 1, startColumn: 2, endLineNumber: 1, endColumn: 2 }\n\t\t\t\t}];\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}));\n\n\t\teditor.setValue('abc');\n\t\teditor.setSelection(new Selection(1, 1, 1, 1));\n\n\t\t// trigger\n\t\tlet p1 = Event.toPromise(controller.model.onDidSuggest);\n\t\tcontroller.triggerSuggest();\n\t\tawait p1;\n\n\t\t//\n\t\tlet p2 = Event.toPromise(controller.model.onDidCancel);\n\t\tcontroller.acceptSelectedSuggestion(true, false);\n\t\tawait p2;\n\n\t\t// insertText happens sync!\n\t\tassert.strictEqual(editor.getValue(), 'helloabc');\n\n\t\t// next\n\t\tcontroller.acceptNextSuggestion();\n\n\t\t// resolve additional edits (MUST be cancelled)\n\t\tresolve.forEach(fn => fn);\n\t\tresolve.length = 0;\n\t\tawait timeout(10);\n\n\t\t// next suggestion used\n\t\tassert.strictEqual(editor.getValue(), 'halloabc');\n\t});\n});\n"]}