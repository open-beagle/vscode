{"version":3,"sources":["vs/editor/contrib/format/format.ts"],"names":[],"mappings":"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","file":"format.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { asArray, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { illegalArgument, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from 'vs/editor/browser/core/editorState';\nimport { IActiveCodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation, ITextModel } from 'vs/editor/common/model';\nimport { DocumentFormattingEditProvider, DocumentFormattingEditProviderRegistry, DocumentRangeFormattingEditProvider, DocumentRangeFormattingEditProviderRegistry, FormattingOptions, OnTypeFormattingEditProviderRegistry, TextEdit } from 'vs/editor/common/modes';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { FormattingEdit } from 'vs/editor/contrib/format/formattingEdit';\nimport * as nls from 'vs/nls';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { IProgress } from 'vs/platform/progress/common/progress';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport function alertFormattingEdits(edits: ISingleEditOperation[]): void {\n\n\tedits = edits.filter(edit => edit.range);\n\tif (!edits.length) {\n\t\treturn;\n\t}\n\n\tlet { range } = edits[0];\n\tfor (let i = 1; i < edits.length; i++) {\n\t\trange = Range.plusRange(range, edits[i].range);\n\t}\n\tconst { startLineNumber, endLineNumber } = range;\n\tif (startLineNumber === endLineNumber) {\n\t\tif (edits.length === 1) {\n\t\t\talert(nls.localize('hint11', \"Made 1 formatting edit on line {0}\", startLineNumber));\n\t\t} else {\n\t\t\talert(nls.localize('hintn1', \"Made {0} formatting edits on line {1}\", edits.length, startLineNumber));\n\t\t}\n\t} else {\n\t\tif (edits.length === 1) {\n\t\t\talert(nls.localize('hint1n', \"Made 1 formatting edit between lines {0} and {1}\", startLineNumber, endLineNumber));\n\t\t} else {\n\t\t\talert(nls.localize('hintnn', \"Made {0} formatting edits between lines {1} and {2}\", edits.length, startLineNumber, endLineNumber));\n\t\t}\n\t}\n}\n\nexport function getRealAndSyntheticDocumentFormattersOrdered(model: ITextModel): DocumentFormattingEditProvider[] {\n\tconst result: DocumentFormattingEditProvider[] = [];\n\tconst seen = new Set<string>();\n\n\t// (1) add all document formatter\n\tconst docFormatter = DocumentFormattingEditProviderRegistry.ordered(model);\n\tfor (const formatter of docFormatter) {\n\t\tresult.push(formatter);\n\t\tif (formatter.extensionId) {\n\t\t\tseen.add(ExtensionIdentifier.toKey(formatter.extensionId));\n\t\t}\n\t}\n\n\t// (2) add all range formatter as document formatter (unless the same extension already did that)\n\tconst rangeFormatter = DocumentRangeFormattingEditProviderRegistry.ordered(model);\n\tfor (const formatter of rangeFormatter) {\n\t\tif (formatter.extensionId) {\n\t\t\tif (seen.has(ExtensionIdentifier.toKey(formatter.extensionId))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen.add(ExtensionIdentifier.toKey(formatter.extensionId));\n\t\t}\n\t\tresult.push({\n\t\t\tdisplayName: formatter.displayName,\n\t\t\textensionId: formatter.extensionId,\n\t\t\tprovideDocumentFormattingEdits(model, options, token) {\n\t\t\t\treturn formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\n\t\t\t}\n\t\t});\n\t}\n\treturn result;\n}\n\nexport const enum FormattingMode {\n\tExplicit = 1,\n\tSilent = 2\n}\n\nexport interface IFormattingEditProviderSelector {\n\t<T extends (DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider)>(formatter: T[], document: ITextModel, mode: FormattingMode): Promise<T | undefined>;\n}\n\nexport abstract class FormattingConflicts {\n\n\tprivate static readonly _selectors = new LinkedList<IFormattingEditProviderSelector>();\n\n\tstatic setFormatterSelector(selector: IFormattingEditProviderSelector): IDisposable {\n\t\tconst remove = FormattingConflicts._selectors.unshift(selector);\n\t\treturn { dispose: remove };\n\t}\n\n\tstatic async select<T extends (DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider)>(formatter: T[], document: ITextModel, mode: FormattingMode): Promise<T | undefined> {\n\t\tif (formatter.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst selector = Iterable.first(FormattingConflicts._selectors);\n\t\tif (selector) {\n\t\t\treturn await selector(formatter, document, mode);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport async function formatDocumentRangesWithSelectedProvider(\n\taccessor: ServicesAccessor,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\trangeOrRanges: Range | Range[],\n\tmode: FormattingMode,\n\tprogress: IProgress<DocumentRangeFormattingEditProvider>,\n\ttoken: CancellationToken\n): Promise<void> {\n\n\tconst instaService = accessor.get(IInstantiationService);\n\tconst model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n\tconst provider = DocumentRangeFormattingEditProviderRegistry.ordered(model);\n\tconst selected = await FormattingConflicts.select(provider, model, mode);\n\tif (selected) {\n\t\tprogress.report(selected);\n\t\tawait instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token);\n\t}\n}\n\nexport async function formatDocumentRangesWithProvider(\n\taccessor: ServicesAccessor,\n\tprovider: DocumentRangeFormattingEditProvider,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\trangeOrRanges: Range | Range[],\n\ttoken: CancellationToken\n): Promise<boolean> {\n\tconst workerService = accessor.get(IEditorWorkerService);\n\n\tlet model: ITextModel;\n\tlet cts: CancellationTokenSource;\n\tif (isCodeEditor(editorOrModel)) {\n\t\tmodel = editorOrModel.getModel();\n\t\tcts = new EditorStateCancellationTokenSource(editorOrModel, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position, undefined, token);\n\t} else {\n\t\tmodel = editorOrModel;\n\t\tcts = new TextModelCancellationTokenSource(editorOrModel, token);\n\t}\n\n\t// make sure that ranges don't overlap nor touch each other\n\tlet ranges: Range[] = [];\n\tlet len = 0;\n\tfor (let range of asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts)) {\n\t\tif (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], range)) {\n\t\t\tranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), range.getEndPosition());\n\t\t} else {\n\t\t\tlen = ranges.push(range);\n\t\t}\n\t}\n\n\tconst allEdits: TextEdit[] = [];\n\tfor (let range of ranges) {\n\t\ttry {\n\t\t\tconst rawEdits = await provider.provideDocumentRangeFormattingEdits(\n\t\t\t\tmodel,\n\t\t\t\trange,\n\t\t\t\tmodel.getFormattingOptions(),\n\t\t\t\tcts.token\n\t\t\t);\n\t\t\tconst minEdits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t\tif (minEdits) {\n\t\t\t\tallEdits.push(...minEdits);\n\t\t\t}\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} finally {\n\t\t\tcts.dispose();\n\t\t}\n\t}\n\n\tif (allEdits.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (isCodeEditor(editorOrModel)) {\n\t\t// use editor to apply edits\n\t\tFormattingEdit.execute(editorOrModel, allEdits, true);\n\t\talertFormattingEdits(allEdits);\n\t\teditorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), ScrollType.Immediate);\n\n\t} else {\n\t\t// use model to apply edits\n\t\tconst [{ range }] = allEdits;\n\t\tconst initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\tmodel.pushEditOperations([initialSelection], allEdits.map(edit => {\n\t\t\treturn {\n\t\t\t\ttext: edit.text,\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\tforceMoveMarkers: true\n\t\t\t};\n\t\t}), undoEdits => {\n\t\t\tfor (const { range } of undoEdits) {\n\t\t\t\tif (Range.areIntersectingOrTouching(range, initialSelection)) {\n\t\t\t\t\treturn [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport async function formatDocumentWithSelectedProvider(\n\taccessor: ServicesAccessor,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\tmode: FormattingMode,\n\tprogress: IProgress<DocumentFormattingEditProvider>,\n\ttoken: CancellationToken\n): Promise<void> {\n\n\tconst instaService = accessor.get(IInstantiationService);\n\tconst model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n\tconst provider = getRealAndSyntheticDocumentFormattersOrdered(model);\n\tconst selected = await FormattingConflicts.select(provider, model, mode);\n\tif (selected) {\n\t\tprogress.report(selected);\n\t\tawait instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token);\n\t}\n}\n\nexport async function formatDocumentWithProvider(\n\taccessor: ServicesAccessor,\n\tprovider: DocumentFormattingEditProvider,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\tmode: FormattingMode,\n\ttoken: CancellationToken\n): Promise<boolean> {\n\tconst workerService = accessor.get(IEditorWorkerService);\n\n\tlet model: ITextModel;\n\tlet cts: CancellationTokenSource;\n\tif (isCodeEditor(editorOrModel)) {\n\t\tmodel = editorOrModel.getModel();\n\t\tcts = new EditorStateCancellationTokenSource(editorOrModel, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position, undefined, token);\n\t} else {\n\t\tmodel = editorOrModel;\n\t\tcts = new TextModelCancellationTokenSource(editorOrModel, token);\n\t}\n\n\tlet edits: TextEdit[] | undefined;\n\ttry {\n\t\tconst rawEdits = await provider.provideDocumentFormattingEdits(\n\t\t\tmodel,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token\n\t\t);\n\n\t\tedits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\treturn true;\n\t\t}\n\n\t} finally {\n\t\tcts.dispose();\n\t}\n\n\tif (!edits || edits.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (isCodeEditor(editorOrModel)) {\n\t\t// use editor to apply edits\n\t\tFormattingEdit.execute(editorOrModel, edits, mode !== FormattingMode.Silent);\n\n\t\tif (mode !== FormattingMode.Silent) {\n\t\t\talertFormattingEdits(edits);\n\t\t\teditorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), ScrollType.Immediate);\n\t\t}\n\n\t} else {\n\t\t// use model to apply edits\n\t\tconst [{ range }] = edits;\n\t\tconst initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\tmodel.pushEditOperations([initialSelection], edits.map(edit => {\n\t\t\treturn {\n\t\t\t\ttext: edit.text,\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\tforceMoveMarkers: true\n\t\t\t};\n\t\t}), undoEdits => {\n\t\t\tfor (const { range } of undoEdits) {\n\t\t\t\tif (Range.areIntersectingOrTouching(range, initialSelection)) {\n\t\t\t\t\treturn [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport async function getDocumentRangeFormattingEditsUntilResult(\n\tworkerService: IEditorWorkerService,\n\tmodel: ITextModel,\n\trange: Range,\n\toptions: FormattingOptions,\n\ttoken: CancellationToken\n): Promise<TextEdit[] | undefined> {\n\n\tconst providers = DocumentRangeFormattingEditProviderRegistry.ordered(model);\n\tfor (const provider of providers) {\n\t\tlet rawEdits = await Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token)).catch(onUnexpectedExternalError);\n\t\tif (isNonEmptyArray(rawEdits)) {\n\t\t\treturn await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport async function getDocumentFormattingEditsUntilResult(\n\tworkerService: IEditorWorkerService,\n\tmodel: ITextModel,\n\toptions: FormattingOptions,\n\ttoken: CancellationToken\n): Promise<TextEdit[] | undefined> {\n\n\tconst providers = getRealAndSyntheticDocumentFormattersOrdered(model);\n\tfor (const provider of providers) {\n\t\tlet rawEdits = await Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token)).catch(onUnexpectedExternalError);\n\t\tif (isNonEmptyArray(rawEdits)) {\n\t\t\treturn await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport function getOnTypeFormattingEdits(\n\tworkerService: IEditorWorkerService,\n\tmodel: ITextModel,\n\tposition: Position,\n\tch: string,\n\toptions: FormattingOptions\n): Promise<TextEdit[] | null | undefined> {\n\n\tconst providers = OnTypeFormattingEditProviderRegistry.ordered(model);\n\n\tif (providers.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tif (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\treturn Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, CancellationToken.None)).catch(onUnexpectedExternalError).then(edits => {\n\t\treturn workerService.computeMoreMinimalEdits(model.uri, edits);\n\t});\n}\n\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', function (accessor, ...args) {\n\tconst [resource, range, options] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Range.isIRange(range));\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\treturn getDocumentRangeFormattingEditsUntilResult(accessor.get(IEditorWorkerService), model, Range.lift(range), options, CancellationToken.None);\n});\n\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', function (accessor, ...args) {\n\tconst [resource, options] = args;\n\tassertType(URI.isUri(resource));\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\n\treturn getDocumentFormattingEditsUntilResult(accessor.get(IEditorWorkerService), model, options, CancellationToken.None);\n});\n\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', function (accessor, ...args) {\n\tconst [resource, position, ch, options] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof ch === 'string');\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\n\treturn getOnTypeFormattingEdits(accessor.get(IEditorWorkerService), model, Position.lift(position), ch, options);\n});\n"]}