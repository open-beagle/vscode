{"version":3,"file":"dnd.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/dnd/dnd.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAqBhG,SAAS,kBAAkB,CAAC,CAA+B;QAC1D,IAAI,sBAAW,EAAE;YAChB,OAAO,CAAC,CAAC,MAAM,CAAC;SAChB;aAAM;YACN,OAAO,CAAC,CAAC,OAAO,CAAC;SACjB;IACF,CAAC;IAED,MAAa,qBAAsB,SAAQ,sBAAU;QAepD,YAAY,MAAmB;YAC9B,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAA2B,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC;YAC1F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAC5E,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC5B,CAAC;QApBD,MAAM,CAAC,GAAG,CAAC,MAAmB;YAC7B,OAAO,MAAM,CAAC,eAAe,CAAwB,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAChF,CAAC;QAoBO,YAAY;YACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC/B,CAAC;QAEO,eAAe,CAAC,CAAiB;YACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,sBAA0B,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA8B,EAAE;gBAC9G,OAAO;aACP;YAED,IAAI,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,UAAU,IAAI,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC1B,UAAU,EAAE,MAAM;iBAClB,CAAC,CAAC;aACH;QACF,CAAC;QAEO,aAAa,CAAC,CAAiB;YACtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,sBAA0B,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,0BAA8B,EAAE;gBAC9G,OAAO;aACP;YAED,IAAI,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC9B;YAED,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,OAAO,KAAK,qBAAqB,CAAC,iBAAiB,EAAE;gBAC7E,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC1B,UAAU,EAAE,SAAS;iBACrB,CAAC,CAAC;aACH;QACF,CAAC;QAEO,kBAAkB,CAAC,UAA6B;YACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACxB,CAAC;QAEO,gBAAgB,CAAC,UAA6B;YACrD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,oHAAoH;YACpH,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;gBAC1B,UAAU,EAAE,MAAM;aAClB,CAAC,CAAC;QACJ,CAAC;QAEO,kBAAkB,CAAC,UAA6B;YACvD,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAE/B,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;gBACjC,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,CAAC;gBACtD,IAAI,kBAAkB,GAAG,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,IAAI,SAAS,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxH,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpC,IAAI,CAAC,cAAc,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;iBAC5C;qBAAM;oBACN,OAAO;iBACP;aACD;YAED,IAAI,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC1B,UAAU,EAAE,MAAM;iBAClB,CAAC,CAAC;aACH;iBAAM;gBACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;oBAC1B,UAAU,EAAE,SAAS;iBACrB,CAAC,CAAC;aACH;YAED,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACpB,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oBAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBACzB;qBAAM;oBACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC7B;aACD;QACF,CAAC;QAEO,0BAA0B;YACjC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;gBAC1B,UAAU,EAAE,MAAM;aAClB,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;QAEO,kBAAkB,CAAC,UAAoC;YAC9D,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACnI,IAAI,iBAAiB,GAAG,IAAI,mBAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE/G,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;oBACjC,IAAI,aAAa,GAAuB,IAAI,CAAC;oBAC7C,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE;wBAC9B,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;wBACnD,IAAI,gBAAgB,EAAE;4BACrB,MAAM,EAAE,wBAAwB,EAAE,oBAAoB,EAAE,GAAG,gBAAgB,CAAC;4BAC5E,aAAa,GAAG,CAAC,IAAI,qBAAS,CAAC,wBAAwB,EAAE,oBAAoB,EAAE,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;yBACxI;qBACD;yBAAM;wBACN,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;4BACpE,IAAI,SAAS,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;gCAClD,OAAO,IAAI,qBAAS,CAAC,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,MAAM,EAAE,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;6BACrI;iCAAM;gCACN,OAAO,SAAS,CAAC;6BACjB;wBACF,CAAC,CAAC,CAAC;qBACH;oBACD,4HAA4H;oBACzG,IAAI,CAAC,OAAQ,CAAC,aAAa,CAAC,aAAa,IAAI,EAAE,EAAE,OAAO,mBAA8B,CAAC;iBAC1G;qBAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;oBAClE,CACC,CACC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC;wBACpC,IAAI,CAAC,gBAAgB,CACrB,IAAI,CACJ,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAClI,CAAC,uDAAuD;qBACzD,EAAE;oBACH,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;oBAC5B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,uCAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,iBAAiB,EAAE,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACrL,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;iBAC5B;aACD;YAED,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;gBAC1B,UAAU,EAAE,MAAM;aAClB,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;QAMM,MAAM,CAAC,QAAkB;YAC/B,IAAI,cAAc,GAA4B,CAAC;oBAC9C,KAAK,EAAE,IAAI,aAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC;oBAC5F,OAAO,EAAE,qBAAqB,CAAC,mBAAmB;iBAClD,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;YAC/F,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,oBAAuB,CAAC;QAC7D,CAAC;QAEO,iBAAiB;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;QACpF,CAAC;QAEO,WAAW,CAAC,MAAoB;YACvC,OAAO,MAAM,CAAC,IAAI,yBAAiC;gBAClD,MAAM,CAAC,IAAI,0BAAkC,CAAC;QAChD,CAAC;QAEO,UAAU,CAAC,MAAoB;YACtC,OAAO,MAAM,CAAC,IAAI,gCAAwC;gBACzD,MAAM,CAAC,IAAI,gCAAwC;gBACnD,MAAM,CAAC,IAAI,oCAA4C,CAAC;QAC1D,CAAC;QAEe,OAAO;YACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;;IAhNF,sDAiNC;IA/MuB,wBAAE,GAAG,4BAA4B,CAAC;IAOzC,uCAAiB,GAAG,sBAAW,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;IAoKrD,yCAAmB,GAAG,kCAAsB,CAAC,QAAQ,CAAC;QAC7E,SAAS,EAAE,YAAY;KACvB,CAAC,CAAC;IAoCJ,CAAA,GAAA,6CAA0B,CAAA,CAAC,qBAAqB,CAAC,EAAE,EAAE,qBAAqB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./dnd';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ICodeEditor, IEditorMouseEvent, IMouseTarget, MouseTargetType, IPartialEditorMouseEvent } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { DragAndDropCommand } from 'vs/editor/contrib/dnd/dragAndDropCommand';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { IModelDeltaDecoration } from 'vs/editor/common/model';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { CursorChangeReason } from 'vs/editor/common/controller/cursorEvents';\n\nfunction hasTriggerModifier(e: IKeyboardEvent | IMouseEvent): boolean {\n\tif (isMacintosh) {\n\t\treturn e.altKey;\n\t} else {\n\t\treturn e.ctrlKey;\n\t}\n}\n\nexport class DragAndDropController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dragAndDrop';\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _dragSelection: Selection | null;\n\tprivate _dndDecorationIds: string[];\n\tprivate _mouseDown: boolean;\n\tprivate _modifierPressed: boolean;\n\tstatic readonly TRIGGER_KEY_VALUE = isMacintosh ? KeyCode.Alt : KeyCode.Ctrl;\n\n\tstatic get(editor: ICodeEditor): DragAndDropController {\n\t\treturn editor.getContribution<DragAndDropController>(DragAndDropController.ID);\n\t}\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._register(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(e)));\n\t\tthis._register(this._editor.onMouseUp((e: IEditorMouseEvent) => this._onEditorMouseUp(e)));\n\t\tthis._register(this._editor.onMouseDrag((e: IEditorMouseEvent) => this._onEditorMouseDrag(e)));\n\t\tthis._register(this._editor.onMouseDrop((e: IPartialEditorMouseEvent) => this._onEditorMouseDrop(e)));\n\t\tthis._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n\t\tthis._register(this._editor.onKeyDown((e: IKeyboardEvent) => this.onEditorKeyDown(e)));\n\t\tthis._register(this._editor.onKeyUp((e: IKeyboardEvent) => this.onEditorKeyUp(e)));\n\t\tthis._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n\t\tthis._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n\t\tthis._dndDecorationIds = [];\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t\tthis._dragSelection = null;\n\t}\n\n\tprivate onEditorBlur() {\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t}\n\n\tprivate onEditorKeyDown(e: IKeyboardEvent): void {\n\t\tif (!this._editor.getOption(EditorOption.dragAndDrop) || this._editor.getOption(EditorOption.columnSelection)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (hasTriggerModifier(e)) {\n\t\t\tthis._modifierPressed = true;\n\t\t}\n\n\t\tif (this._mouseDown && hasTriggerModifier(e)) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'copy'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onEditorKeyUp(e: IKeyboardEvent): void {\n\t\tif (!this._editor.getOption(EditorOption.dragAndDrop) || this._editor.getOption(EditorOption.columnSelection)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (hasTriggerModifier(e)) {\n\t\t\tthis._modifierPressed = false;\n\t\t}\n\n\t\tif (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'default'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._mouseDown = true;\n\t}\n\n\tprivate _onEditorMouseUp(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._mouseDown = false;\n\t\t// Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\t}\n\n\tprivate _onEditorMouseDrag(mouseEvent: IEditorMouseEvent): void {\n\t\tlet target = mouseEvent.target;\n\n\t\tif (this._dragSelection === null) {\n\t\t\tconst selections = this._editor.getSelections() || [];\n\t\t\tlet possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n\t\t\tif (possibleSelections.length === 1) {\n\t\t\t\tthis._dragSelection = possibleSelections[0];\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (hasTriggerModifier(mouseEvent.event)) {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'copy'\n\t\t\t});\n\t\t} else {\n\t\t\tthis._editor.updateOptions({\n\t\t\t\tmouseStyle: 'default'\n\t\t\t});\n\t\t}\n\n\t\tif (target.position) {\n\t\t\tif (this._dragSelection.containsPosition(target.position)) {\n\t\t\t\tthis._removeDecoration();\n\t\t\t} else {\n\t\t\t\tthis.showAt(target.position);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDropCanceled() {\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t}\n\n\tprivate _onEditorMouseDrop(mouseEvent: IPartialEditorMouseEvent): void {\n\t\tif (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n\t\t\tlet newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n\n\t\t\tif (this._dragSelection === null) {\n\t\t\t\tlet newSelections: Selection[] | null = null;\n\t\t\t\tif (mouseEvent.event.shiftKey) {\n\t\t\t\t\tlet primarySelection = this._editor.getSelection();\n\t\t\t\t\tif (primarySelection) {\n\t\t\t\t\t\tconst { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n\t\t\t\t\t\tnewSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewSelections = (this._editor.getSelections() || []).map(selection => {\n\t\t\t\t\t\tif (selection.containsPosition(newCursorPosition)) {\n\t\t\t\t\t\t\treturn new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn selection;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n\t\t\t\t(<CodeEditorWidget>this._editor).setSelections(newSelections || [], 'mouse', CursorChangeReason.Explicit);\n\t\t\t} else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n\t\t\t\t(\n\t\t\t\t\t(\n\t\t\t\t\t\thasTriggerModifier(mouseEvent.event) ||\n\t\t\t\t\t\tthis._modifierPressed\n\t\t\t\t\t) && (\n\t\t\t\t\t\tthis._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)\n\t\t\t\t\t) // we allow users to paste content beside the selection\n\t\t\t\t)) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.updateOptions({\n\t\t\tmouseStyle: 'text'\n\t\t});\n\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t}\n\n\tprivate static readonly _DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tclassName: 'dnd-target'\n\t});\n\n\tpublic showAt(position: Position): void {\n\t\tlet newDecorations: IModelDeltaDecoration[] = [{\n\t\t\trange: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n\t\t\toptions: DragAndDropController._DECORATION_OPTIONS\n\t\t}];\n\n\t\tthis._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\n\t\tthis._editor.revealPosition(position, ScrollType.Immediate);\n\t}\n\n\tprivate _removeDecoration(): void {\n\t\tthis._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\n\t}\n\n\tprivate _hitContent(target: IMouseTarget): boolean {\n\t\treturn target.type === MouseTargetType.CONTENT_TEXT ||\n\t\t\ttarget.type === MouseTargetType.CONTENT_EMPTY;\n\t}\n\n\tprivate _hitMargin(target: IMouseTarget): boolean {\n\t\treturn target.type === MouseTargetType.GUTTER_GLYPH_MARGIN ||\n\t\t\ttarget.type === MouseTargetType.GUTTER_LINE_NUMBERS ||\n\t\t\ttarget.type === MouseTargetType.GUTTER_LINE_DECORATIONS;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._removeDecoration();\n\t\tthis._dragSelection = null;\n\t\tthis._mouseDown = false;\n\t\tthis._modifierPressed = false;\n\t\tsuper.dispose();\n\t}\n}\n\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\n"]}