{"version":3,"file":"colorContributions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/colorPicker/colorContributions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAahG,MAAa,iBAAkB,SAAQ,sBAAU;QAMhD,YAA6B,OAAoB;YAEhD,KAAK,EAAE,CAAC;YAFoB,YAAO,GAAP,OAAO,CAAa;YAGhD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC;QAEQ,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEO,WAAW,CAAC,UAA6B;;YAChD,MAAM,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;YAE1C,IAAI,UAAU,yBAAiC,EAAE;gBAChD,OAAO;aACP;YAED,MAAM,qBAAqB,GAAG,CAAC,GAAG,CAAA,MAAA,UAAU,CAAC,MAAM,CAAC,OAAO,0CAAE,SAAS,CAAC,MAAM,EAAE,KAAI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;YAC/I,IAAI,CAAC,qBAAqB,EAAE;gBAC3B,OAAO;aACP;YAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC7B,OAAO;aACP;YAED,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAuB,4BAAoB,CAAC,EAAE,CAAC,CAAC;YACpG,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,EAAE;gBAC5C,MAAM,KAAK,GAAG,IAAI,aAAK,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBACxL,eAAe,CAAC,gBAAgB,CAAC,KAAK,mBAA0B,KAAK,CAAC,CAAC;aACvE;QACF,CAAC;;IArCF,8CAsCC;IApCuB,oBAAE,GAAW,kCAAkC,CAAC;IAEvD,gCAAc,GAAG,IAAI,CAAC,CAAC,KAAK;IAoC7C,CAAA,GAAA,6CAA0B,CAAA,CAAC,iBAAiB,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// import color detector contribution\nimport 'vs/editor/contrib/colorPicker/colorDetector';\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ModesHoverController } from 'vs/editor/contrib/hover/hover';\nimport { Range } from 'vs/editor/common/core/range';\nimport { HoverStartMode } from 'vs/editor/contrib/hover/hoverOperation';\n\nexport class ColorContribution extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID: string = 'editor.contrib.colorContribution';\n\n\tstatic readonly RECOMPUTE_TIME = 1000; // ms\n\n\tconstructor(private readonly _editor: ICodeEditor,\n\t) {\n\t\tsuper();\n\t\tthis._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate onMouseDown(mouseEvent: IEditorMouseEvent) {\n\t\tconst targetType = mouseEvent.target.type;\n\n\t\tif (targetType !== MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverOnColorDecorator = [...mouseEvent.target.element?.classList.values() || []].find(className => className.startsWith('ced-colorBox'));\n\t\tif (!hoverOnColorDecorator) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!mouseEvent.target.range) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverController = this._editor.getContribution<ModesHoverController>(ModesHoverController.ID);\n\t\tif (!hoverController.isColorPickerVisible()) {\n\t\t\tconst range = new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1);\n\t\t\thoverController.showContentHover(range, HoverStartMode.Delayed, false);\n\t\t}\n\t}\n}\n\nregisterEditorContribution(ColorContribution.ID, ColorContribution);\n"]}