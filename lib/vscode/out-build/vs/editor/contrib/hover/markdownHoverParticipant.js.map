{"version":3,"sources":["vs/editor/contrib/hover/markdownHoverParticipant.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAmBhG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAEhB,MAAa,aAAa;QAEzB,YACiB,KAAY,EACZ,QAA2B;YAD3B,UAAK,GAAL,KAAK,CAAO;YACZ,aAAQ,GAAR,QAAQ,CAAmB;QACxC,CAAC;QAEE,MAAM,CAAC,KAAiB;YAC9B,IAAI,KAAK,YAAY,aAAa,EAAE;gBACnC,OAAO,CAAA,GAAA,iCAAmB,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;aAC1D;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD;IAbD,sCAaC;IAED,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;QAEpC,YACkB,OAAoB,EACpB,MAAoB,EACN,YAA0B,EACxB,cAA8B;YAH9C,YAAO,GAAP,OAAO,CAAa;YACpB,WAAM,GAAN,MAAM,CAAc;YACN,iBAAY,GAAZ,YAAY,CAAc;YACxB,mBAAc,GAAd,cAAc,CAAgB;QAC5D,CAAC;QAEE,oBAAoB,CAAC,KAAY;YACvC,OAAO,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC,IAAI,4BAAc,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7H,CAAC;QAEM,WAAW,CAAC,UAAiB,EAAE,eAAmC;YACxE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;gBAC7B,OAAO,EAAE,CAAC;aACV;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACtC,MAAM,UAAU,GAAG,UAAU,CAAC,eAAe,CAAC;YAC9C,MAAM,SAAS,GAAG,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACrD,MAAM,MAAM,GAAoB,EAAE,CAAC;YACnC,KAAK,MAAM,CAAC,IAAI,eAAe,EAAE;gBAChC,MAAM,WAAW,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvF,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBAEzF,MAAM,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC;gBAC5C,IAAI,CAAC,YAAY,IAAI,CAAA,GAAA,mCAAqB,CAAA,CAAC,YAAY,CAAC,EAAE;oBACzD,SAAS;iBACT;gBAED,MAAM,KAAK,GAAG,IAAI,aAAK,CAAC,UAAU,CAAC,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;gBACxG,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,KAAK,EAAE,CAAA,GAAA,gBAAO,CAAA,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC7D;YAED,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,KAAK,CAAC,YAAY,CAAC,KAAY,EAAE,KAAwB;YAC/D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE;gBACvC,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC3B;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEtC,IAAI,CAAC,6BAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACtC,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC3B;YAED,MAAM,MAAM,GAAG,MAAM,CAAA,GAAA,mBAAQ,CAAA,CAAC,KAAK,EAAE,IAAI,mBAAQ,CAChD,KAAK,CAAC,eAAe,EACrB,KAAK,CAAC,WAAW,CACjB,EAAE,KAAK,CAAC,CAAC;YAEV,MAAM,MAAM,GAAoB,EAAE,CAAC;YACnC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,IAAI,CAAA,GAAA,mCAAqB,CAAA,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;oBAC1C,SAAS;iBACT;gBACD,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,aAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;aACpD;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,gBAAgB,CAAC,UAA2B,EAAE,QAA0B;YAC9E,MAAM,WAAW,GAAG,IAAI,2BAAe,EAAE,CAAC;YAC1C,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;gBACnC,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAC,QAAQ,EAAE;oBAC1C,IAAI,CAAA,GAAA,mCAAqB,CAAA,CAAC,QAAQ,CAAC,EAAE;wBACpC,SAAS;qBACT;oBACD,MAAM,oBAAoB,GAAG,CAAC,CAAC,8BAA8B,CAAC,CAAC;oBAC/D,MAAM,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;oBACvF,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,mCAAgB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACzH,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,EAAE;wBAC9C,oBAAoB,CAAC,SAAS,GAAG,oCAAoC,CAAC;wBACtE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;oBACjC,CAAC,CAAC,CAAC,CAAC;oBACJ,MAAM,gBAAgB,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACpE,oBAAoB,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;oBAC3D,QAAQ,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;iBAC3C;aACD;YACD,OAAO,WAAW,CAAC;QACpB,CAAC;KACD,CAAA;IAtFY,wBAAwB;QAKlC,WAAA,0BAAY,CAAA;QACZ,WAAA,uBAAc,CAAA;OANJ,wBAAwB,CAsFpC;IAtFY,4DAAwB","file":"markdownHoverParticipant.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { IMarkdownString, MarkdownString, isEmptyMarkdownString, markedStringsEquals } from 'vs/base/common/htmlContent';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Range } from 'vs/editor/common/core/range';\nimport { MarkdownRenderer } from 'vs/editor/browser/core/markdownRenderer';\nimport { asArray } from 'vs/base/common/arrays';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelDecoration } from 'vs/editor/common/model';\nimport { IEditorHover, IEditorHoverParticipant, IHoverPart } from 'vs/editor/contrib/hover/modesContentHover';\nimport { HoverProviderRegistry } from 'vs/editor/common/modes';\nimport { getHover } from 'vs/editor/contrib/hover/getHover';\nimport { Position } from 'vs/editor/common/core/position';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nconst $ = dom.$;\n\nexport class MarkdownHover implements IHoverPart {\n\n\tconstructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly contents: IMarkdownString[]\n\t) { }\n\n\tpublic equals(other: IHoverPart): boolean {\n\t\tif (other instanceof MarkdownHover) {\n\t\t\treturn markedStringsEquals(this.contents, other.contents);\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class MarkdownHoverParticipant implements IEditorHoverParticipant<MarkdownHover> {\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _hover: IEditorHover,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t) { }\n\n\tpublic createLoadingMessage(range: Range): MarkdownHover {\n\t\treturn new MarkdownHover(range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))]);\n\t}\n\n\tpublic computeSync(hoverRange: Range, lineDecorations: IModelDecoration[]): MarkdownHover[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst lineNumber = hoverRange.startLineNumber;\n\t\tconst maxColumn = model.getLineMaxColumn(lineNumber);\n\t\tconst result: MarkdownHover[] = [];\n\t\tfor (const d of lineDecorations) {\n\t\t\tconst startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n\t\t\tconst endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n\n\t\t\tconst hoverMessage = d.options.hoverMessage;\n\t\t\tif (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst range = new Range(hoverRange.startLineNumber, startColumn, hoverRange.startLineNumber, endColumn);\n\t\t\tresult.push(new MarkdownHover(range, asArray(hoverMessage)));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async computeAsync(range: Range, token: CancellationToken): Promise<MarkdownHover[]> {\n\t\tif (!this._editor.hasModel() || !range) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\n\t\tif (!HoverProviderRegistry.has(model)) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst hovers = await getHover(model, new Position(\n\t\t\trange.startLineNumber,\n\t\t\trange.startColumn\n\t\t), token);\n\n\t\tconst result: MarkdownHover[] = [];\n\t\tfor (const hover of hovers) {\n\t\t\tif (isEmptyMarkdownString(hover.contents)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst rng = hover.range ? Range.lift(hover.range) : range;\n\t\t\tresult.push(new MarkdownHover(rng, hover.contents));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renderHoverParts(hoverParts: MarkdownHover[], fragment: DocumentFragment): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const hoverPart of hoverParts) {\n\t\t\tfor (const contents of hoverPart.contents) {\n\t\t\t\tif (isEmptyMarkdownString(contents)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\t\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n\t\t\t\tconst renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\n\t\t\t\tdisposables.add(renderer.onDidRenderAsync(() => {\n\t\t\t\t\thoverContentsElement.className = 'hover-contents code-hover-contents';\n\t\t\t\t\tthis._hover.onContentsChanged();\n\t\t\t\t}));\n\t\t\t\tconst renderedContents = disposables.add(renderer.render(contents));\n\t\t\t\thoverContentsElement.appendChild(renderedContents.element);\n\t\t\t\tfragment.appendChild(markdownHoverElement);\n\t\t\t}\n\t\t}\n\t\treturn disposables;\n\t}\n}\n"]}