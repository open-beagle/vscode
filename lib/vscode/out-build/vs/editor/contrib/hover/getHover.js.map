{"version":3,"file":"getHover.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/hover/getHover.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,SAAgB,QAAQ,CAAC,KAAiB,EAAE,QAAkB,EAAE,KAAwB;QAEvF,MAAM,QAAQ,GAAG,6BAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEtD,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACvC,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACjF,OAAO,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,CAAC,EAAE,GAAG,CAAC,EAAE;gBACR,CAAA,GAAA,kCAAyB,CAAA,CAAC,GAAG,CAAC,CAAC;gBAC/B,OAAO,SAAS,CAAC;YAClB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAQ,CAAC,CAAC;IAC7C,CAAC;IAdD,4BAcC;IAED,CAAA,GAAA,kDAA+B,CAAA,CAAC,uBAAuB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAEjI,SAAS,OAAO,CAAC,MAAa;QAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;QACvD,MAAM,cAAc,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/G,OAAO,QAAQ,IAAI,cAAc,CAAC;IACnC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { registerModelAndPositionCommand } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Hover, HoverProviderRegistry } from 'vs/editor/common/modes';\n\nexport function getHover(model: ITextModel, position: Position, token: CancellationToken): Promise<Hover[]> {\n\n\tconst supports = HoverProviderRegistry.ordered(model);\n\n\tconst promises = supports.map(support => {\n\t\treturn Promise.resolve(support.provideHover(model, position, token)).then(hover => {\n\t\t\treturn hover && isValid(hover) ? hover : undefined;\n\t\t}, err => {\n\t\t\tonUnexpectedExternalError(err);\n\t\t\treturn undefined;\n\t\t});\n\t});\n\n\treturn Promise.all(promises).then(coalesce);\n}\n\nregisterModelAndPositionCommand('_executeHoverProvider', (model, position) => getHover(model, position, CancellationToken.None));\n\nfunction isValid(result: Hover) {\n\tconst hasRange = (typeof result.range !== 'undefined');\n\tconst hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n\treturn hasRange && hasHtmlContent;\n}\n"]}