{"version":3,"file":"codeActionModel.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/codeAction/test/codeActionModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport * as modes from 'vs/editor/common/modes';\nimport { CodeActionModel, CodeActionsState } from 'vs/editor/contrib/codeAction/codeActionModel';\nimport { createTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { MarkerService } from 'vs/platform/markers/common/markerService';\nimport { createTextModel } from 'vs/editor/test/common/editorTestUtils';\n\nconst testProvider = {\n\tprovideCodeActions(): modes.CodeActionList {\n\t\treturn {\n\t\t\tactions: [\n\t\t\t\t{ title: 'test', command: { id: 'test-command', title: 'test', arguments: [] } }\n\t\t\t],\n\t\t\tdispose() { /* noop*/ }\n\t\t};\n\t}\n};\nsuite('CodeActionModel', () => {\n\n\tconst languageIdentifier = new modes.LanguageIdentifier('foo-lang', 3);\n\tlet uri = URI.parse('untitled:path');\n\tlet model: TextModel;\n\tlet markerService: MarkerService;\n\tlet editor: ICodeEditor;\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.clear();\n\t\tmarkerService = new MarkerService();\n\t\tmodel = createTextModel('foobar  foo bar\\nfarboo far boo', undefined, languageIdentifier, uri);\n\t\teditor = createTestCodeEditor({ model: model });\n\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t\tmarkerService.dispose();\n\t});\n\n\ttest('Orcale -> marker added', done => {\n\t\tconst reg = modes.CodeActionProviderRegistry.register(languageIdentifier.language, testProvider);\n\t\tdisposables.add(reg);\n\n\t\tconst contextKeys = new MockContextKeyService();\n\t\tconst model = disposables.add(new CodeActionModel(editor, markerService, contextKeys, undefined));\n\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\tassert.strictEqual(e.trigger.type, modes.CodeActionTriggerType.Auto);\n\t\t\tassert.ok(e.actions);\n\n\t\t\te.actions.then(fixes => {\n\t\t\t\tmodel.dispose();\n\t\t\t\tassert.strictEqual(fixes.validActions.length, 1);\n\t\t\t\tdone();\n\t\t\t}, done);\n\t\t}));\n\n\t\t// start here\n\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\tmessage: 'error',\n\t\t\tseverity: 1,\n\t\t\tcode: '',\n\t\t\tsource: ''\n\t\t}]);\n\n\t});\n\n\ttest('Orcale -> position changed', () => {\n\t\tconst reg = modes.CodeActionProviderRegistry.register(languageIdentifier.language, testProvider);\n\t\tdisposables.add(reg);\n\n\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\tmessage: 'error',\n\t\t\tseverity: 1,\n\t\t\tcode: '',\n\t\t\tsource: ''\n\t\t}]);\n\n\t\teditor.setPosition({ lineNumber: 2, column: 1 });\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst contextKeys = new MockContextKeyService();\n\t\t\tconst model = disposables.add(new CodeActionModel(editor, markerService, contextKeys, undefined));\n\t\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\t\tassert.strictEqual(e.trigger.type, modes.CodeActionTriggerType.Auto);\n\t\t\t\tassert.ok(e.actions);\n\t\t\t\te.actions.then(fixes => {\n\t\t\t\t\tmodel.dispose();\n\t\t\t\t\tassert.strictEqual(fixes.validActions.length, 1);\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}, reject);\n\t\t\t}));\n\t\t\t// start here\n\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t});\n\t});\n\n\ttest('Lightbulb is in the wrong place, #29933', async function () {\n\t\tconst reg = modes.CodeActionProviderRegistry.register(languageIdentifier.language, {\n\t\t\tprovideCodeActions(_doc, _range): modes.CodeActionList {\n\t\t\t\treturn { actions: [], dispose() { /* noop*/ } };\n\t\t\t}\n\t\t});\n\t\tdisposables.add(reg);\n\n\t\teditor.getModel()!.setValue('// @ts-check\\n2\\ncon\\n');\n\n\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\tstartLineNumber: 3, startColumn: 1, endLineNumber: 3, endColumn: 4,\n\t\t\tmessage: 'error',\n\t\t\tseverity: 1,\n\t\t\tcode: '',\n\t\t\tsource: ''\n\t\t}]);\n\n\t\t// case 1 - drag selection over multiple lines -> range of enclosed marker, position or marker\n\t\tawait new Promise(resolve => {\n\t\t\tconst contextKeys = new MockContextKeyService();\n\t\t\tconst model = disposables.add(new CodeActionModel(editor, markerService, contextKeys, undefined));\n\t\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\t\tassert.strictEqual(e.trigger.type, modes.CodeActionTriggerType.Auto);\n\t\t\t\tconst selection = <Selection>e.rangeOrSelection;\n\t\t\t\tassert.strictEqual(selection.selectionStartLineNumber, 1);\n\t\t\t\tassert.strictEqual(selection.selectionStartColumn, 1);\n\t\t\t\tassert.strictEqual(selection.endLineNumber, 4);\n\t\t\t\tassert.strictEqual(selection.endColumn, 1);\n\t\t\t\tassert.strictEqual(e.position.lineNumber, 3);\n\t\t\t\tassert.strictEqual(e.position.column, 1);\n\t\t\t\tmodel.dispose();\n\t\t\t\tresolve(undefined);\n\t\t\t}, 5));\n\n\t\t\teditor.setSelection({ startLineNumber: 1, startColumn: 1, endLineNumber: 4, endColumn: 1 });\n\t\t});\n\t});\n\n\ttest('Orcale -> should only auto trigger once for cursor and marker update right after each other', done => {\n\t\tconst reg = modes.CodeActionProviderRegistry.register(languageIdentifier.language, testProvider);\n\t\tdisposables.add(reg);\n\n\t\tlet triggerCount = 0;\n\t\tconst contextKeys = new MockContextKeyService();\n\t\tconst model = disposables.add(new CodeActionModel(editor, markerService, contextKeys, undefined));\n\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\tassert.strictEqual(e.trigger.type, modes.CodeActionTriggerType.Auto);\n\t\t\t++triggerCount;\n\n\t\t\t// give time for second trigger before completing test\n\t\t\tsetTimeout(() => {\n\t\t\t\tmodel.dispose();\n\t\t\t\tassert.strictEqual(triggerCount, 1);\n\t\t\t\tdone();\n\t\t\t}, 50);\n\t\t}, 5 /*delay*/));\n\n\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\tmessage: 'error',\n\t\t\tseverity: 1,\n\t\t\tcode: '',\n\t\t\tsource: ''\n\t\t}]);\n\n\t\teditor.setSelection({ startLineNumber: 1, startColumn: 1, endLineNumber: 4, endColumn: 1 });\n\t});\n});\n"]}