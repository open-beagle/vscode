{"version":3,"file":"codeActionMenu.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/contrib/codeAction/codeActionMenu.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getDomNodePagePosition } from 'vs/base/browser/dom';\nimport { IAnchor } from 'vs/base/browser/ui/contextview/contextview';\nimport { Action, IAction, Separator } from 'vs/base/common/actions';\nimport { canceled } from 'vs/base/common/errors';\nimport { ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { CodeAction, CodeActionProviderRegistry, Command } from 'vs/editor/common/modes';\nimport { codeActionCommandId, CodeActionItem, CodeActionSet, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from 'vs/editor/contrib/codeAction/codeAction';\nimport { CodeActionAutoApply, CodeActionCommandArgs, CodeActionTrigger, CodeActionKind } from 'vs/editor/contrib/codeAction/types';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\n\ninterface CodeActionWidgetDelegate {\n\tonSelectCodeAction: (action: CodeActionItem) => Promise<any>;\n}\n\ninterface ResolveCodeActionKeybinding {\n\treadonly kind: CodeActionKind;\n\treadonly preferred: boolean;\n\treadonly resolvedKeybinding: ResolvedKeybinding;\n}\n\nclass CodeActionAction extends Action {\n\tconstructor(\n\t\tpublic readonly action: CodeAction,\n\t\tcallback: () => Promise<void>,\n\t) {\n\t\tsuper(action.command ? action.command.id : action.title, stripNewlines(action.title), undefined, !action.disabled, callback);\n\t}\n}\n\nfunction stripNewlines(str: string): string {\n\treturn str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n\nexport interface CodeActionShowOptions {\n\treadonly includeDisabledActions: boolean;\n}\n\nexport class CodeActionMenu extends Disposable {\n\n\tprivate _visible: boolean = false;\n\tprivate readonly _showingActions = this._register(new MutableDisposable<CodeActionSet>());\n\n\tprivate readonly _keybindingResolver: CodeActionKeybindingResolver;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _delegate: CodeActionWidgetDelegate,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._keybindingResolver = new CodeActionKeybindingResolver({\n\t\t\tgetKeybindings: () => keybindingService.getKeybindings()\n\t\t});\n\t}\n\n\tget isVisible(): boolean {\n\t\treturn this._visible;\n\t}\n\n\tpublic async show(trigger: CodeActionTrigger, codeActions: CodeActionSet, at: IAnchor | IPosition, options: CodeActionShowOptions): Promise<void> {\n\t\tconst actionsToShow = options.includeDisabledActions ? codeActions.allActions : codeActions.validActions;\n\t\tif (!actionsToShow.length) {\n\t\t\tthis._visible = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._editor.getDomNode()) {\n\t\t\t// cancel when editor went off-dom\n\t\t\tthis._visible = false;\n\t\t\tthrow canceled();\n\t\t}\n\n\t\tthis._visible = true;\n\t\tthis._showingActions.value = codeActions;\n\n\t\tconst menuActions = this.getMenuActions(trigger, actionsToShow, codeActions.documentation);\n\n\t\tconst anchor = Position.isIPosition(at) ? this._toCoords(at) : at || { x: 0, y: 0 };\n\t\tconst resolver = this._keybindingResolver.getResolver();\n\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tdomForShadowRoot: this._editor.getDomNode()!,\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => menuActions,\n\t\t\tonHide: () => {\n\t\t\t\tthis._visible = false;\n\t\t\t\tthis._editor.focus();\n\t\t\t},\n\t\t\tautoSelectFirstItem: true,\n\t\t\tgetKeyBinding: action => action instanceof CodeActionAction ? resolver(action.action) : undefined,\n\t\t});\n\t}\n\n\tprivate getMenuActions(\n\t\ttrigger: CodeActionTrigger,\n\t\tactionsToShow: readonly CodeActionItem[],\n\t\tdocumentation: readonly Command[]\n\t): IAction[] {\n\t\tconst toCodeActionAction = (item: CodeActionItem): CodeActionAction => new CodeActionAction(item.action, () => this._delegate.onSelectCodeAction(item));\n\n\t\tconst result: IAction[] = actionsToShow\n\t\t\t.map(toCodeActionAction);\n\n\t\tconst allDocumentation: Command[] = [...documentation];\n\n\t\tconst model = this._editor.getModel();\n\t\tif (model && result.length) {\n\t\t\tfor (const provider of CodeActionProviderRegistry.all(model)) {\n\t\t\t\tif (provider._getAdditionalMenuItems) {\n\t\t\t\t\tallDocumentation.push(...provider._getAdditionalMenuItems({ trigger: trigger.type, only: trigger.filter?.include?.value }, actionsToShow.map(item => item.action)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (allDocumentation.length) {\n\t\t\tresult.push(new Separator(), ...allDocumentation.map(command => toCodeActionAction(new CodeActionItem({\n\t\t\t\ttitle: command.title,\n\t\t\t\tcommand: command,\n\t\t\t}, undefined))));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _toCoords(position: IPosition): { x: number, y: number } {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn { x: 0, y: 0 };\n\t\t}\n\t\tthis._editor.revealPosition(position, ScrollType.Immediate);\n\t\tthis._editor.render();\n\n\t\t// Translate to absolute editor position\n\t\tconst cursorCoords = this._editor.getScrolledVisiblePosition(position);\n\t\tconst editorCoords = getDomNodePagePosition(this._editor.getDomNode());\n\t\tconst x = editorCoords.left + cursorCoords.left;\n\t\tconst y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n\n\t\treturn { x, y };\n\t}\n}\n\nexport class CodeActionKeybindingResolver {\n\tprivate static readonly codeActionCommands: readonly string[] = [\n\t\trefactorCommandId,\n\t\tcodeActionCommandId,\n\t\tsourceActionCommandId,\n\t\torganizeImportsCommandId,\n\t\tfixAllCommandId\n\t];\n\n\tconstructor(\n\t\tprivate readonly _keybindingProvider: {\n\t\t\tgetKeybindings(): readonly ResolvedKeybindingItem[],\n\t\t},\n\t) { }\n\n\tpublic getResolver(): (action: CodeAction) => ResolvedKeybinding | undefined {\n\t\t// Lazy since we may not actually ever read the value\n\t\tconst allCodeActionBindings = new Lazy<readonly ResolveCodeActionKeybinding[]>(() =>\n\t\t\tthis._keybindingProvider.getKeybindings()\n\t\t\t\t.filter(item => CodeActionKeybindingResolver.codeActionCommands.indexOf(item.command!) >= 0)\n\t\t\t\t.filter(item => item.resolvedKeybinding)\n\t\t\t\t.map((item): ResolveCodeActionKeybinding => {\n\t\t\t\t\t// Special case these commands since they come built-in with VS Code and don't use 'commandArgs'\n\t\t\t\t\tlet commandArgs = item.commandArgs;\n\t\t\t\t\tif (item.command === organizeImportsCommandId) {\n\t\t\t\t\t\tcommandArgs = { kind: CodeActionKind.SourceOrganizeImports.value };\n\t\t\t\t\t} else if (item.command === fixAllCommandId) {\n\t\t\t\t\t\tcommandArgs = { kind: CodeActionKind.SourceFixAll.value };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresolvedKeybinding: item.resolvedKeybinding!,\n\t\t\t\t\t\t...CodeActionCommandArgs.fromUser(commandArgs, {\n\t\t\t\t\t\t\tkind: CodeActionKind.None,\n\t\t\t\t\t\t\tapply: CodeActionAutoApply.Never\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\treturn (action) => {\n\t\t\tif (action.kind) {\n\t\t\t\tconst binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.getValue());\n\t\t\t\treturn binding?.resolvedKeybinding;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t}\n\n\tprivate bestKeybindingForCodeAction(\n\t\taction: CodeAction,\n\t\tcandidates: readonly ResolveCodeActionKeybinding[],\n\t): ResolveCodeActionKeybinding | undefined {\n\t\tif (!action.kind) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst kind = new CodeActionKind(action.kind);\n\n\t\treturn candidates\n\t\t\t.filter(candidate => candidate.kind.contains(kind))\n\t\t\t.filter(candidate => {\n\t\t\t\tif (candidate.preferred) {\n\t\t\t\t\t// If the candidate keybinding only applies to preferred actions, the this action must also be preferred\n\t\t\t\t\treturn action.isPreferred;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.reduceRight((currentBest, candidate) => {\n\t\t\t\tif (!currentBest) {\n\t\t\t\t\treturn candidate;\n\t\t\t\t}\n\t\t\t\t// Select the more specific binding\n\t\t\t\treturn currentBest.kind.contains(candidate.kind) ? candidate : currentBest;\n\t\t\t}, undefined as ResolveCodeActionKeybinding | undefined);\n\t}\n}\n\n\n"]}