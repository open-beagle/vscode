{"version":3,"sources":["vs/editor/contrib/codeAction/codeActionCommands.ts"],"names":[],"mappings":"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","file":"codeActionCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAnchor } from 'vs/base/browser/ui/contextview/contextview';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, EditorCommand, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { IBulkEditService, ResourceEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CodeActionTriggerType } from 'vs/editor/common/modes';\nimport { codeActionCommandId, CodeActionItem, CodeActionSet, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from 'vs/editor/contrib/codeAction/codeAction';\nimport { CodeActionUi } from 'vs/editor/contrib/codeAction/codeActionUi';\nimport { MessageController } from 'vs/editor/contrib/message/messageController';\nimport * as nls from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IEditorProgressService } from 'vs/platform/progress/common/progress';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { CodeActionModel, CodeActionsState, SUPPORTED_CODE_ACTIONS } from './codeActionModel';\nimport { CodeActionAutoApply, CodeActionCommandArgs, CodeActionFilter, CodeActionKind, CodeActionTrigger } from './types';\n\nfunction contextKeyForSupportedActions(kind: CodeActionKind) {\n\treturn ContextKeyExpr.regex(\n\t\tSUPPORTED_CODE_ACTIONS.keys()[0],\n\t\tnew RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\n\nconst argsSchema: IJSONSchema = {\n\ttype: 'object',\n\tdefaultSnippets: [{ body: { kind: '' } }],\n\tproperties: {\n\t\t'kind': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\n\t\t},\n\t\t'apply': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n\t\t\tdefault: CodeActionAutoApply.IfSingle,\n\t\t\tenum: [CodeActionAutoApply.First, CodeActionAutoApply.IfSingle, CodeActionAutoApply.Never],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\n\t\t\t\tnls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\n\t\t\t\tnls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\n\t\t\t]\n\t\t},\n\t\t'preferred': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\n\t\t}\n\t}\n};\n\nexport class QuickFixController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.quickFixController';\n\n\tpublic static get(editor: ICodeEditor): QuickFixController {\n\t\treturn editor.getContribution<QuickFixController>(QuickFixController.ID);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate readonly _model: CodeActionModel;\n\tprivate readonly _ui: Lazy<CodeActionUi>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IMarkerService markerService: IMarkerService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorProgressService progressService: IEditorProgressService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\t\tthis._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\n\t\tthis._register(this._model.onDidChangeState(newState => this.update(newState)));\n\n\t\tthis._ui = new Lazy(() =>\n\t\t\tthis._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\n\t\t\t\tapplyCodeAction: async (action, retrigger) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this._applyCodeAction(action);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (retrigger) {\n\t\t\t\t\t\t\tthis._trigger({ type: CodeActionTriggerType.Auto, filter: {} });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this._instantiationService))\n\t\t);\n\t}\n\n\tprivate update(newState: CodeActionsState.State): void {\n\t\tthis._ui.getValue().update(newState);\n\t}\n\n\tpublic showCodeActions(trigger: CodeActionTrigger, actions: CodeActionSet, at: IAnchor | IPosition) {\n\t\treturn this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\n\t}\n\n\tpublic manualTriggerAtCurrentPosition(\n\t\tnotAvailableMessage: string,\n\t\tfilter?: CodeActionFilter,\n\t\tautoApply?: CodeActionAutoApply\n\t): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMessageController.get(this._editor).closeMessage();\n\t\tconst triggerPosition = this._editor.getPosition();\n\t\tthis._trigger({ type: CodeActionTriggerType.Invoke, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\n\t}\n\n\tprivate _trigger(trigger: CodeActionTrigger) {\n\t\treturn this._model.trigger(trigger);\n\t}\n\n\tprivate _applyCodeAction(action: CodeActionItem): Promise<void> {\n\t\treturn this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\n\t}\n}\n\nexport async function applyCodeAction(\n\taccessor: ServicesAccessor,\n\titem: CodeActionItem,\n\teditor?: ICodeEditor,\n): Promise<void> {\n\tconst bulkEditService = accessor.get(IBulkEditService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst telemetryService = accessor.get(ITelemetryService);\n\tconst notificationService = accessor.get(INotificationService);\n\n\ttype ApplyCodeActionEvent = {\n\t\tcodeActionTitle: string;\n\t\tcodeActionKind: string | undefined;\n\t\tcodeActionIsPreferred: boolean;\n\t};\n\ttype ApplyCodeEventClassification = {\n\t\tcodeActionTitle: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\tcodeActionKind: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\tcodeActionIsPreferred: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t};\n\n\ttelemetryService.publicLog2<ApplyCodeActionEvent, ApplyCodeEventClassification>('codeAction.applyCodeAction', {\n\t\tcodeActionTitle: item.action.title,\n\t\tcodeActionKind: item.action.kind,\n\t\tcodeActionIsPreferred: !!item.action.isPreferred,\n\t});\n\n\tawait item.resolve(CancellationToken.None);\n\n\tif (item.action.edit) {\n\t\tawait bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\n\t}\n\n\tif (item.action.command) {\n\t\ttry {\n\t\t\tawait commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n\t\t} catch (err) {\n\t\t\tconst message = asMessage(err);\n\t\t\tnotificationService.error(\n\t\t\t\ttypeof message === 'string'\n\t\t\t\t\t? message\n\t\t\t\t\t: nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n\t\t}\n\t}\n}\n\nfunction asMessage(err: any): string | undefined {\n\tif (typeof err === 'string') {\n\t\treturn err;\n\t} else if (err instanceof Error && typeof err.message === 'string') {\n\t\treturn err.message;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction triggerCodeActionsForEditorSelection(\n\teditor: ICodeEditor,\n\tnotAvailableMessage: string,\n\tfilter: CodeActionFilter | undefined,\n\tautoApply: CodeActionAutoApply | undefined\n): void {\n\tif (editor.hasModel()) {\n\t\tconst controller = QuickFixController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\n\t\t}\n\t}\n}\n\nexport class QuickFixAction extends EditorAction {\n\n\tstatic readonly Id = 'editor.action.quickFix';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: QuickFixAction.Id,\n\t\t\tlabel: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n\t\t\talias: 'Quick Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.US_DOT,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\n\t}\n}\n\nexport class CodeActionCommand extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: codeActionCommandId,\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Trigger a code action',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema, }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any) {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Empty,\n\t\t\tapply: CodeActionAutoApply.IfSingle,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"),\n\t\t\t{\n\t\t\t\tinclude: args.kind,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply);\n\t}\n}\n\n\nexport class RefactorAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: refactorCommandId,\n\t\t\tlabel: nls.localize('refactor.label', \"Refactor...\"),\n\t\t\talias: 'Refactor...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_R,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_R\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Refactor)),\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Refactor...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Refactor,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply);\n\t}\n}\n\nexport class SourceAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: sourceActionCommandId,\n\t\t\tlabel: nls.localize('source.label', \"Source Action...\"),\n\t\t\talias: 'Source Action...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2.1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Source)),\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Source Action...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Source,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage', \"No source actions available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply);\n\t}\n}\n\nexport class OrganizeImportsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: organizeImportsCommandId,\n\t\t\tlabel: nls.localize('organizeImports.label', \"Organize Imports\"),\n\t\t\talias: 'Organize Imports',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_O,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"),\n\t\t\t{ include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle);\n\t}\n}\n\nexport class FixAllAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: fixAllCommandId,\n\t\t\tlabel: nls.localize('fixAll.label', \"Fix All\"),\n\t\t\talias: 'Fix All',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('fixAll.noneMessage', \"No fix all action available\"),\n\t\t\t{ include: CodeActionKind.SourceFixAll, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle);\n\t}\n}\n\nexport class AutoFixAction extends EditorAction {\n\n\tstatic readonly Id = 'editor.action.autoFix';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AutoFixAction.Id,\n\t\t\tlabel: nls.localize('autoFix.label', \"Auto Fix...\"),\n\t\t\talias: 'Auto Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.QuickFix)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.US_DOT,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.US_DOT\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.QuickFix,\n\t\t\t\tonlyIncludePreferredActions: true\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle);\n\t}\n}\n"]}