{"version":3,"sources":["vs/editor/contrib/inPlaceReplace/inPlaceReplace.ts"],"names":[],"mappings":"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","file":"inPlaceReplace.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { registerEditorAction, ServicesAccessor, EditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand';\nimport { EditorState, CodeEditorStateFlag } from 'vs/editor/browser/core/editorState';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { editorBracketMatchBorder } from 'vs/editor/common/view/editorColorRegistry';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nclass InPlaceReplaceController implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.inPlaceReplaceController';\n\n\tstatic get(editor: ICodeEditor): InPlaceReplaceController {\n\t\treturn editor.getContribution<InPlaceReplaceController>(InPlaceReplaceController.ID);\n\t}\n\n\tprivate static readonly DECORATION = ModelDecorationOptions.register({\n\t\tclassName: 'valueSetReplacement'\n\t});\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly editorWorkerService: IEditorWorkerService;\n\tprivate decorationIds: string[] = [];\n\tprivate currentRequest?: CancelablePromise<IInplaceReplaceSupportResult | null>;\n\tprivate decorationRemover?: CancelablePromise<void>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.editorWorkerService = editorWorkerService;\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\tpublic run(source: string, up: boolean): Promise<void> | undefined {\n\n\t\t// cancel any pending request\n\t\tif (this.currentRequest) {\n\t\t\tthis.currentRequest.cancel();\n\t\t}\n\n\t\tconst editorSelection = this.editor.getSelection();\n\t\tconst model = this.editor.getModel();\n\t\tif (!model || !editorSelection) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet selection = editorSelection;\n\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t// Can't accept multiline selection\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst state = new EditorState(this.editor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position);\n\t\tconst modelURI = model.uri;\n\t\tif (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection!, up));\n\n\t\treturn this.currentRequest.then(result => {\n\n\t\t\tif (!result || !result.range || !result.value) {\n\t\t\t\t// No proper result\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!state.validate(this.editor)) {\n\t\t\t\t// state has changed\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Selection\n\t\t\tlet editRange = Range.lift(result.range);\n\t\t\tlet highlightRange = result.range;\n\t\t\tlet diff = result.value.length - (selection!.endColumn - selection!.startColumn);\n\n\t\t\t// highlight\n\t\t\thighlightRange = {\n\t\t\t\tstartLineNumber: highlightRange.startLineNumber,\n\t\t\t\tstartColumn: highlightRange.startColumn,\n\t\t\t\tendLineNumber: highlightRange.endLineNumber,\n\t\t\t\tendColumn: highlightRange.startColumn + result.value.length\n\t\t\t};\n\t\t\tif (diff > 1) {\n\t\t\t\tselection = new Selection(selection!.startLineNumber, selection!.startColumn, selection!.endLineNumber, selection!.endColumn + diff - 1);\n\t\t\t}\n\n\t\t\t// Insert new text\n\t\t\tconst command = new InPlaceReplaceCommand(editRange, selection!, result.value);\n\n\t\t\tthis.editor.pushUndoStop();\n\t\t\tthis.editor.executeCommand(source, command);\n\t\t\tthis.editor.pushUndoStop();\n\n\t\t\t// add decoration\n\t\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\n\t\t\t\trange: highlightRange,\n\t\t\t\toptions: InPlaceReplaceController.DECORATION\n\t\t\t}]);\n\n\t\t\t// remove decoration after delay\n\t\t\tif (this.decorationRemover) {\n\t\t\t\tthis.decorationRemover.cancel();\n\t\t\t}\n\t\t\tthis.decorationRemover = timeout(350);\n\t\t\tthis.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\n\n\t\t}).catch(onUnexpectedError);\n\t}\n}\n\nclass InPlaceReplaceUp extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inPlaceReplace.up',\n\t\t\tlabel: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n\t\t\talias: 'Replace with Previous Value',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_COMMA,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, true);\n\t}\n}\n\nclass InPlaceReplaceDown extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inPlaceReplace.down',\n\t\t\tlabel: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n\t\t\talias: 'Replace with Next Value',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_DOT,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> | undefined {\n\t\tconst controller = InPlaceReplaceController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn controller.run(this.id, false);\n\t}\n}\n\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n\nregisterThemingParticipant((theme, collector) => {\n\tconst border = theme.getColor(editorBracketMatchBorder);\n\tif (border) {\n\t\tcollector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n\t}\n});\n"]}