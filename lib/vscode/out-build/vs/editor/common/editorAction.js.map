{"version":3,"file":"editorAction.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/editorAction.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,oBAAoB;QAUhC,YACC,EAAU,EACV,KAAa,EACb,KAAa,EACb,YAA8C,EAC9C,GAAwB,EACxB,iBAAqC;YAErC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC7C,CAAC;QAEM,WAAW;YACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxE,CAAC;QAEM,GAAG;YACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACxB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC;KACD;IArCD,oDAqCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorAction } from 'vs/editor/common/editorCommon';\nimport { IContextKeyService, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\n\nexport class InternalEditorAction implements IEditorAction {\n\n\tpublic readonly id: string;\n\tpublic readonly label: string;\n\tpublic readonly alias: string;\n\n\tprivate readonly _precondition: ContextKeyExpression | undefined;\n\tprivate readonly _run: () => Promise<void>;\n\tprivate readonly _contextKeyService: IContextKeyService;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\talias: string,\n\t\tprecondition: ContextKeyExpression | undefined,\n\t\trun: () => Promise<void>,\n\t\tcontextKeyService: IContextKeyService\n\t) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.alias = alias;\n\t\tthis._precondition = precondition;\n\t\tthis._run = run;\n\t\tthis._contextKeyService = contextKeyService;\n\t}\n\n\tpublic isSupported(): boolean {\n\t\treturn this._contextKeyService.contextMatchesRules(this._precondition);\n\t}\n\n\tpublic run(): Promise<void> {\n\t\tif (!this.isSupported()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._run();\n\t}\n}\n"]}