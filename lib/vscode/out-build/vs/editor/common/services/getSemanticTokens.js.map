{"version":3,"file":"getSemanticTokens.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/services/getSemanticTokens.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DocumentSemanticTokensProviderRegistry, DocumentSemanticTokensProvider, SemanticTokens, SemanticTokensEdits, SemanticTokensLegend, DocumentRangeSemanticTokensProviderRegistry, DocumentRangeSemanticTokensProvider } from 'vs/editor/common/modes';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { encodeSemanticTokensDto } from 'vs/editor/common/services/semanticTokensDto';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport function isSemanticTokens(v: SemanticTokens | SemanticTokensEdits): v is SemanticTokens {\n\treturn v && !!((<SemanticTokens>v).data);\n}\n\nexport function isSemanticTokensEdits(v: SemanticTokens | SemanticTokensEdits): v is SemanticTokensEdits {\n\treturn v && Array.isArray((<SemanticTokensEdits>v).edits);\n}\n\nexport interface IDocumentSemanticTokensResult {\n\tprovider: DocumentSemanticTokensProvider;\n\trequest: Promise<SemanticTokens | SemanticTokensEdits | null | undefined>;\n}\n\nexport function getDocumentSemanticTokens(model: ITextModel, lastResultId: string | null, token: CancellationToken): IDocumentSemanticTokensResult | null {\n\tconst provider = _getDocumentSemanticTokensProvider(model);\n\tif (!provider) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tprovider: provider,\n\t\trequest: Promise.resolve(provider.provideDocumentSemanticTokens(model, lastResultId, token))\n\t};\n}\n\nfunction _getDocumentSemanticTokensProvider(model: ITextModel): DocumentSemanticTokensProvider | null {\n\tconst result = DocumentSemanticTokensProviderRegistry.ordered(model);\n\treturn (result.length > 0 ? result[0] : null);\n}\n\nexport function getDocumentRangeSemanticTokensProvider(model: ITextModel): DocumentRangeSemanticTokensProvider | null {\n\tconst result = DocumentRangeSemanticTokensProviderRegistry.ordered(model);\n\treturn (result.length > 0 ? result[0] : null);\n}\n\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', async (accessor, ...args): Promise<SemanticTokensLegend | undefined> => {\n\tconst [uri] = args;\n\tassertType(uri instanceof URI);\n\n\tconst model = accessor.get(IModelService).getModel(uri);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\tconst provider = _getDocumentSemanticTokensProvider(model);\n\tif (!provider) {\n\t\t// there is no provider => fall back to a document range semantic tokens provider\n\t\treturn accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri);\n\t}\n\n\treturn provider.getLegend();\n});\n\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', async (accessor, ...args): Promise<VSBuffer | undefined> => {\n\tconst [uri] = args;\n\tassertType(uri instanceof URI);\n\n\tconst model = accessor.get(IModelService).getModel(uri);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\tconst r = getDocumentSemanticTokens(model, null, CancellationToken.None);\n\tif (!r) {\n\t\t// there is no provider => fall back to a document range semantic tokens provider\n\t\treturn accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange());\n\t}\n\n\tconst { provider, request } = r;\n\n\tlet result: SemanticTokens | SemanticTokensEdits | null | undefined;\n\ttry {\n\t\tresult = await request;\n\t} catch (err) {\n\t\tonUnexpectedExternalError(err);\n\t\treturn undefined;\n\t}\n\n\tif (!result || !isSemanticTokens(result)) {\n\t\treturn undefined;\n\t}\n\n\tconst buff = encodeSemanticTokensDto({\n\t\tid: 0,\n\t\ttype: 'full',\n\t\tdata: result.data\n\t});\n\tif (result.resultId) {\n\t\tprovider.releaseDocumentSemanticTokens(result.resultId);\n\t}\n\treturn buff;\n});\n\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', async (accessor, ...args): Promise<SemanticTokensLegend | undefined> => {\n\tconst [uri] = args;\n\tassertType(uri instanceof URI);\n\n\tconst model = accessor.get(IModelService).getModel(uri);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\tconst provider = getDocumentRangeSemanticTokensProvider(model);\n\tif (!provider) {\n\t\treturn undefined;\n\t}\n\n\treturn provider.getLegend();\n});\n\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', async (accessor, ...args): Promise<VSBuffer | undefined> => {\n\tconst [uri, range] = args;\n\tassertType(uri instanceof URI);\n\tassertType(Range.isIRange(range));\n\n\tconst model = accessor.get(IModelService).getModel(uri);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\tconst provider = getDocumentRangeSemanticTokensProvider(model);\n\tif (!provider) {\n\t\t// there is no provider\n\t\treturn undefined;\n\t}\n\n\tlet result: SemanticTokens | null | undefined;\n\ttry {\n\t\tresult = await provider.provideDocumentRangeSemanticTokens(model, Range.lift(range), CancellationToken.None);\n\t} catch (err) {\n\t\tonUnexpectedExternalError(err);\n\t\treturn undefined;\n\t}\n\n\tif (!result || !isSemanticTokens(result)) {\n\t\treturn undefined;\n\t}\n\n\treturn encodeSemanticTokensDto({\n\t\tid: 0,\n\t\ttype: 'full',\n\t\tdata: result.data\n\t});\n});\n"]}