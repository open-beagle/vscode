{"version":3,"file":"markersDecorationService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/services/markersDecorationService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IASnF,QAAA,yBAAyB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAA4B,0BAA0B,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel, IModelDecoration } from 'vs/editor/common/model';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMarker } from 'vs/platform/markers/common/markers';\nimport { Event } from 'vs/base/common/event';\nimport { Range } from 'vs/editor/common/core/range';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeMarker: Event<ITextModel>;\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null;\n\n\tgetLiveMarkers(uri: URI): [Range, IMarker][];\n}\n"]}