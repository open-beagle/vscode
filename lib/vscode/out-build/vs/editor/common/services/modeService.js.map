{"version":3,"file":"modeService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/services/modeService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOnF,QAAA,YAAY,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAe,aAAa,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IMode, LanguageId, LanguageIdentifier } from 'vs/editor/common/modes';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IModeService = createDecorator<IModeService>('modeService');\n\nexport interface ILanguageExtensionPoint {\n\tid: string;\n\textensions?: string[];\n\tfilenames?: string[];\n\tfilenamePatterns?: string[];\n\tfirstLine?: string;\n\taliases?: string[];\n\tmimetypes?: string[];\n\tconfiguration?: URI;\n}\n\nexport interface ILanguageSelection {\n\treadonly languageIdentifier: LanguageIdentifier;\n\treadonly onDidChange: Event<LanguageIdentifier>;\n}\n\nexport interface IModeService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidCreateMode: Event<IMode>;\n\tonLanguagesMaybeChanged: Event<void>;\n\n\t// --- reading\n\tisRegisteredMode(mimetypeOrModeId: string): boolean;\n\tgetRegisteredModes(): string[];\n\tgetRegisteredLanguageNames(): string[];\n\tgetExtensions(alias: string): string[];\n\tgetFilenames(alias: string): string[];\n\tgetMimeForMode(modeId: string): string | null;\n\tgetLanguageName(modeId: string): string | null;\n\tgetModeIdForLanguageName(alias: string): string | null;\n\tgetModeIdByFilepathOrFirstLine(resource: URI, firstLine?: string): string | null;\n\tgetModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string | null;\n\tgetLanguageIdentifier(modeId: string | LanguageId): LanguageIdentifier | null;\n\tgetConfigurationFiles(modeId: string): URI[];\n\n\t// --- instantiation\n\tcreate(commaSeparatedMimetypesOrCommaSeparatedIds: string | undefined): ILanguageSelection;\n\tcreateByLanguageName(languageName: string): ILanguageSelection;\n\tcreateByFilepathOrFirstLine(resource: URI | null, firstLine?: string): ILanguageSelection;\n\n\ttriggerMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): void;\n}\n"]}