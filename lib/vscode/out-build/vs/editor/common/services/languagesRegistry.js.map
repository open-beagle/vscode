{"version":3,"file":"languagesRegistry.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/services/languagesRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as mime from 'vs/base/common/mime';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { LanguageId, LanguageIdentifier } from 'vs/editor/common/modes';\nimport { ModesRegistry } from 'vs/editor/common/modes/modesRegistry';\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from 'vs/editor/common/modes/nullMode';\nimport { ILanguageExtensionPoint } from 'vs/editor/common/services/modeService';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport interface IResolvedLanguage {\n\tidentifier: LanguageIdentifier;\n\tname: string | null;\n\tmimetypes: string[];\n\taliases: string[];\n\textensions: string[];\n\tfilenames: string[];\n\tconfigurationFiles: URI[];\n}\n\nexport class LanguagesRegistry extends Disposable {\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _warnOnOverwrite: boolean;\n\n\tprivate _nextLanguageId2: number;\n\tprivate readonly _languageIdToLanguage: string[];\n\tprivate readonly _languageToLanguageId: { [id: string]: number; };\n\n\tprivate _languages: { [id: string]: IResolvedLanguage; };\n\tprivate _mimeTypesMap: { [mimeType: string]: LanguageIdentifier; };\n\tprivate _nameMap: { [name: string]: LanguageIdentifier; };\n\tprivate _lowercaseNameMap: { [name: string]: LanguageIdentifier; };\n\n\tconstructor(useModesRegistry = true, warnOnOverwrite = false) {\n\t\tsuper();\n\n\t\tthis._warnOnOverwrite = warnOnOverwrite;\n\n\t\tthis._nextLanguageId2 = 1;\n\t\tthis._languageIdToLanguage = [];\n\t\tthis._languageToLanguageId = Object.create(null);\n\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tif (useModesRegistry) {\n\t\t\tthis._initializeFromRegistry();\n\t\t\tthis._register(ModesRegistry.onDidChangeLanguages((m) => this._initializeFromRegistry()));\n\t\t}\n\t}\n\n\tprivate _initializeFromRegistry(): void {\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tconst desc = ModesRegistry.getLanguages();\n\t\tthis._registerLanguages(desc);\n\t}\n\n\t_registerLanguages(desc: ILanguageExtensionPoint[]): void {\n\n\t\tfor (const d of desc) {\n\t\t\tthis._registerLanguage(d);\n\t\t}\n\n\t\t// Rebuild fast path maps\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\t\tObject.keys(this._languages).forEach((langId) => {\n\t\t\tlet language = this._languages[langId];\n\t\t\tif (language.name) {\n\t\t\t\tthis._nameMap[language.name] = language.identifier;\n\t\t\t}\n\t\t\tlanguage.aliases.forEach((alias) => {\n\t\t\t\tthis._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n\t\t\t});\n\t\t\tlanguage.mimetypes.forEach((mimetype) => {\n\t\t\t\tthis._mimeTypesMap[mimetype] = language.identifier;\n\t\t\t});\n\t\t});\n\n\t\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(language => language.id));\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _getLanguageId(language: string): number {\n\t\tif (this._languageToLanguageId[language]) {\n\t\t\treturn this._languageToLanguageId[language];\n\t\t}\n\n\t\tconst languageId = this._nextLanguageId2++;\n\t\tthis._languageIdToLanguage[languageId] = language;\n\t\tthis._languageToLanguageId[language] = languageId;\n\n\t\treturn languageId;\n\t}\n\n\tprivate _registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet resolvedLanguage: IResolvedLanguage;\n\t\tif (hasOwnProperty.call(this._languages, langId)) {\n\t\t\tresolvedLanguage = this._languages[langId];\n\t\t} else {\n\t\t\tconst languageId = this._getLanguageId(langId);\n\t\t\tresolvedLanguage = {\n\t\t\t\tidentifier: new LanguageIdentifier(langId, languageId),\n\t\t\t\tname: null,\n\t\t\t\tmimetypes: [],\n\t\t\t\taliases: [],\n\t\t\t\textensions: [],\n\t\t\t\tfilenames: [],\n\t\t\t\tconfigurationFiles: []\n\t\t\t};\n\t\t\tthis._languages[langId] = resolvedLanguage;\n\t\t}\n\n\t\tthis._mergeLanguage(resolvedLanguage, lang);\n\t}\n\n\tprivate _mergeLanguage(resolvedLanguage: IResolvedLanguage, lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet primaryMime: string | null = null;\n\n\t\tif (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n\t\t\tresolvedLanguage.mimetypes.push(...lang.mimetypes);\n\t\t\tprimaryMime = lang.mimetypes[0];\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = `text/x-${langId}`;\n\t\t\tresolvedLanguage.mimetypes.push(primaryMime);\n\t\t}\n\n\t\tif (Array.isArray(lang.extensions)) {\n\t\t\tif (lang.configuration) {\n\t\t\t\t// insert first as this appears to be the 'primary' language definition\n\t\t\t\tresolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n\t\t\t} else {\n\t\t\t\tresolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n\t\t\t}\n\t\t\tfor (let extension of lang.extensions) {\n\t\t\t\tmime.registerTextMime({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenames)) {\n\t\t\tfor (let filename of lang.filenames) {\n\t\t\t\tmime.registerTextMime({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n\t\t\t\tresolvedLanguage.filenames.push(filename);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenamePatterns)) {\n\t\t\tfor (let filenamePattern of lang.filenamePatterns) {\n\t\t\t\tmime.registerTextMime({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tlet firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tlet firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tmime.registerTextMime({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tresolvedLanguage.aliases.push(langId);\n\n\t\tlet langAliases: Array<string | null> | null = null;\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tif (lang.aliases.length === 0) {\n\t\t\t\t// signal that this language should not get a name\n\t\t\t\tlangAliases = [null];\n\t\t\t} else {\n\t\t\t\tlangAliases = lang.aliases;\n\t\t\t}\n\t\t}\n\n\t\tif (langAliases !== null) {\n\t\t\tfor (const langAlias of langAliases) {\n\t\t\t\tif (!langAlias || langAlias.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedLanguage.aliases.push(langAlias);\n\t\t\t}\n\t\t}\n\n\t\tlet containsAliases = (langAliases !== null && langAliases.length > 0);\n\t\tif (containsAliases && langAliases![0] === null) {\n\t\t\t// signal that this language should not get a name\n\t\t} else {\n\t\t\tlet bestName = (containsAliases ? langAliases![0] : null) || langId;\n\t\t\tif (containsAliases || !resolvedLanguage.name) {\n\t\t\t\tresolvedLanguage.name = bestName;\n\t\t\t}\n\t\t}\n\n\t\tif (lang.configuration) {\n\t\t\tresolvedLanguage.configurationFiles.push(lang.configuration);\n\t\t}\n\t}\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\t// Is this a known mime type ?\n\t\tif (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\n\t\t\treturn true;\n\t\t}\n\t\t// Is this a known mode id ?\n\t\treturn hasOwnProperty.call(this._languages, mimetypeOrModeId);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn Object.keys(this._languages);\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[] {\n\t\treturn Object.keys(this._nameMap);\n\t}\n\n\tpublic getLanguageName(modeId: string): string | null {\n\t\tif (!hasOwnProperty.call(this._languages, modeId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._languages[modeId].name;\n\t}\n\n\tpublic getModeIdForLanguageNameLowercase(languageNameLower: string): string | null {\n\t\tif (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._lowercaseNameMap[languageNameLower].language;\n\t}\n\n\tpublic getConfigurationFiles(modeId: string): URI[] {\n\t\tif (!hasOwnProperty.call(this._languages, modeId)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._languages[modeId].configurationFiles || [];\n\t}\n\n\tpublic getMimeForMode(modeId: string): string | null {\n\t\tif (!hasOwnProperty.call(this._languages, modeId)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst language = this._languages[modeId];\n\t\treturn (language.mimetypes[0] || null);\n\t}\n\n\tpublic extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds: string | undefined): string[] {\n\t\tif (!commaSeparatedMimetypesOrCommaSeparatedIds) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn (\n\t\t\tcommaSeparatedMimetypesOrCommaSeparatedIds.\n\t\t\t\tsplit(',').\n\t\t\t\tmap((mimeTypeOrId) => mimeTypeOrId.trim()).\n\t\t\t\tmap((mimeTypeOrId) => {\n\t\t\t\t\tif (hasOwnProperty.call(this._mimeTypesMap, mimeTypeOrId)) {\n\t\t\t\t\t\treturn this._mimeTypesMap[mimeTypeOrId].language;\n\t\t\t\t\t}\n\t\t\t\t\treturn mimeTypeOrId;\n\t\t\t\t}).\n\t\t\t\tfilter((modeId) => {\n\t\t\t\t\treturn hasOwnProperty.call(this._languages, modeId);\n\t\t\t\t})\n\t\t);\n\t}\n\n\tpublic getLanguageIdentifier(_modeId: string | LanguageId): LanguageIdentifier | null {\n\t\tif (_modeId === NULL_MODE_ID || _modeId === LanguageId.Null) {\n\t\t\treturn NULL_LANGUAGE_IDENTIFIER;\n\t\t}\n\n\t\tlet modeId: string;\n\t\tif (typeof _modeId === 'string') {\n\t\t\tmodeId = _modeId;\n\t\t} else {\n\t\t\tmodeId = this._languageIdToLanguage[_modeId];\n\t\t\tif (!modeId) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasOwnProperty.call(this._languages, modeId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._languages[modeId].identifier;\n\t}\n\n\tpublic getModeIdsFromLanguageName(languageName: string): string[] {\n\t\tif (!languageName) {\n\t\t\treturn [];\n\t\t}\n\t\tif (hasOwnProperty.call(this._nameMap, languageName)) {\n\t\t\treturn [this._nameMap[languageName].language];\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic getModeIdsFromFilepathOrFirstLine(resource: URI | null, firstLine?: string): string[] {\n\t\tif (!resource && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\tlet mimeTypes = mime.guessMimeTypes(resource, firstLine);\n\t\treturn this.extractModeIds(mimeTypes.join(','));\n\t}\n\n\tpublic getExtensions(languageName: string): string[] {\n\t\tif (!hasOwnProperty.call(this._nameMap, languageName)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst languageId = this._nameMap[languageName];\n\t\treturn this._languages[languageId.language].extensions;\n\t}\n\n\tpublic getFilenames(languageName: string): string[] {\n\t\tif (!hasOwnProperty.call(this._nameMap, languageName)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst languageId = this._nameMap[languageName];\n\t\treturn this._languages[languageId.language].filenames;\n\t}\n}\n"]}