{"version":3,"file":"viewModelImpl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/viewModel/viewModelImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { ConfigurationChangedEvent, EDITOR_FONT_DEFAULTS, EditorOption, filterValidationDecorations } from 'vs/editor/common/config/editorOptions';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IConfiguration, IViewState, ScrollType, ICursorState, ICommand, INewScrollPosition } from 'vs/editor/common/editorCommon';\nimport { EndOfLinePreference, IActiveIndentGuideInfo, ITextModel, TrackedRangeStickiness, TextModelResolvedOptions, IIdentifiedSingleEditOperation, ICursorStateComputer } from 'vs/editor/common/model';\nimport { ModelDecorationOverviewRulerOptions, ModelDecorationMinimapOptions } from 'vs/editor/common/model/textModel';\nimport * as textModelEvents from 'vs/editor/common/model/textModelEvents';\nimport { ColorId, LanguageId, TokenizationRegistry } from 'vs/editor/common/modes';\nimport { tokenizeLineToHTML } from 'vs/editor/common/modes/textToHtmlTokenizer';\nimport { MinimapTokensColorTracker } from 'vs/editor/common/viewModel/minimapTokensColorTracker';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewLayout } from 'vs/editor/common/viewLayout/viewLayout';\nimport { IViewModelLinesCollection, IdentityLinesCollection, SplitLinesCollection, ILineBreaksComputerFactory } from 'vs/editor/common/viewModel/splitLinesCollection';\nimport { ICoordinatesConverter, ILineBreaksComputer, IOverviewRulerDecorations, IViewModel, MinimapLinesRenderingData, ViewLineData, ViewLineRenderingData, ViewModelDecoration } from 'vs/editor/common/viewModel/viewModel';\nimport { ViewModelDecorations } from 'vs/editor/common/viewModel/viewModelDecorations';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as platform from 'vs/base/common/platform';\nimport { EditorTheme } from 'vs/editor/common/view/viewContext';\nimport { Cursor } from 'vs/editor/common/controller/cursor';\nimport { PartialCursorState, CursorState, IColumnSelectData, EditOperationType, CursorConfiguration } from 'vs/editor/common/controller/cursorCommon';\nimport { CursorChangeReason } from 'vs/editor/common/controller/cursorEvents';\nimport { IWhitespaceChangeAccessor } from 'vs/editor/common/viewLayout/linesLayout';\nimport { ViewModelEventDispatcher, OutgoingViewModelEvent, FocusChangedEvent, ScrollChangedEvent, ViewZonesChangedEvent, ViewModelEventsCollector, ReadOnlyEditAttemptEvent } from 'vs/editor/common/viewModel/viewModelEventDispatcher';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\n\nconst USE_IDENTITY_LINES_COLLECTION = true;\n\nexport class ViewModel extends Disposable implements IViewModel {\n\n\tprivate readonly _editorId: number;\n\tprivate readonly _configuration: IConfiguration;\n\tpublic readonly model: ITextModel;\n\tprivate readonly _eventDispatcher: ViewModelEventDispatcher;\n\tpublic readonly onEvent: Event<OutgoingViewModelEvent>;\n\tpublic cursorConfig: CursorConfiguration;\n\tprivate readonly _tokenizeViewportSoon: RunOnceScheduler;\n\tprivate readonly _updateConfigurationViewLineCount: RunOnceScheduler;\n\tprivate _hasFocus: boolean;\n\tprivate _viewportStartLine: number;\n\tprivate _viewportStartLineTrackedRange: string | null;\n\tprivate _viewportStartLineDelta: number;\n\tprivate readonly _lines: IViewModelLinesCollection;\n\tpublic readonly coordinatesConverter: ICoordinatesConverter;\n\tpublic readonly viewLayout: ViewLayout;\n\tprivate readonly _cursor: Cursor;\n\tprivate readonly _decorations: ViewModelDecorations;\n\n\tconstructor(\n\t\teditorId: number,\n\t\tconfiguration: IConfiguration,\n\t\tmodel: ITextModel,\n\t\tdomLineBreaksComputerFactory: ILineBreaksComputerFactory,\n\t\tmonospaceLineBreaksComputerFactory: ILineBreaksComputerFactory,\n\t\tscheduleAtNextAnimationFrame: (callback: () => void) => IDisposable\n\t) {\n\t\tsuper();\n\n\t\tthis._editorId = editorId;\n\t\tthis._configuration = configuration;\n\t\tthis.model = model;\n\t\tthis._eventDispatcher = new ViewModelEventDispatcher();\n\t\tthis.onEvent = this._eventDispatcher.onEvent;\n\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageIdentifier(), this.model.getOptions(), this._configuration);\n\t\tthis._tokenizeViewportSoon = this._register(new RunOnceScheduler(() => this.tokenizeViewport(), 50));\n\t\tthis._updateConfigurationViewLineCount = this._register(new RunOnceScheduler(() => this._updateConfigurationViewLineCountNow(), 0));\n\t\tthis._hasFocus = false;\n\t\tthis._viewportStartLine = -1;\n\t\tthis._viewportStartLineTrackedRange = null;\n\t\tthis._viewportStartLineDelta = 0;\n\n\t\tif (USE_IDENTITY_LINES_COLLECTION && this.model.isTooLargeForTokenization()) {\n\n\t\t\tthis._lines = new IdentityLinesCollection(this.model);\n\n\t\t} else {\n\t\t\tconst options = this._configuration.options;\n\t\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tconst wrappingStrategy = options.get(EditorOption.wrappingStrategy);\n\t\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\t\tconst wrappingIndent = options.get(EditorOption.wrappingIndent);\n\n\t\t\tthis._lines = new SplitLinesCollection(\n\t\t\t\tthis.model,\n\t\t\t\tdomLineBreaksComputerFactory,\n\t\t\t\tmonospaceLineBreaksComputerFactory,\n\t\t\t\tfontInfo,\n\t\t\t\tthis.model.getOptions().tabSize,\n\t\t\t\twrappingStrategy,\n\t\t\t\twrappingInfo.wrappingColumn,\n\t\t\t\twrappingIndent\n\t\t\t);\n\t\t}\n\n\t\tthis.coordinatesConverter = this._lines.createCoordinatesConverter();\n\n\t\tthis._cursor = this._register(new Cursor(model, this, this.coordinatesConverter, this.cursorConfig));\n\n\t\tthis.viewLayout = this._register(new ViewLayout(this._configuration, this.getLineCount(), scheduleAtNextAnimationFrame));\n\n\t\tthis._register(this.viewLayout.onDidScroll((e) => {\n\t\t\tif (e.scrollTopChanged) {\n\t\t\t\tthis._tokenizeViewportSoon.schedule();\n\t\t\t}\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewScrollChangedEvent(e));\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ScrollChangedEvent(\n\t\t\t\te.oldScrollWidth, e.oldScrollLeft, e.oldScrollHeight, e.oldScrollTop,\n\t\t\t\te.scrollWidth, e.scrollLeft, e.scrollHeight, e.scrollTop\n\t\t\t));\n\t\t}));\n\n\t\tthis._register(this.viewLayout.onDidContentSizeChange((e) => {\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(e);\n\t\t}));\n\n\t\tthis._decorations = new ViewModelDecorations(this._editorId, this.model, this._configuration, this._lines, this.coordinatesConverter);\n\n\t\tthis._registerModelEvents();\n\n\t\tthis._register(this._configuration.onDidChangeFast((e) => {\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\tthis._onConfigurationChanged(eventsCollector, e);\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(MinimapTokensColorTracker.getInstance().onDidChange(() => {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewTokensColorsChangedEvent());\n\t\t}));\n\n\t\tthis._updateConfigurationViewLineCountNow();\n\t}\n\n\tpublic override dispose(): void {\n\t\t// First remove listeners, as disposing the lines might end up sending\n\t\t// model decoration changed events ... and we no longer care about them ...\n\t\tsuper.dispose();\n\t\tthis._decorations.dispose();\n\t\tthis._lines.dispose();\n\t\tthis.invalidateMinimapColorCache();\n\t\tthis._viewportStartLineTrackedRange = this.model._setTrackedRange(this._viewportStartLineTrackedRange, null, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t\tthis._eventDispatcher.dispose();\n\t}\n\n\tpublic createLineBreaksComputer(): ILineBreaksComputer {\n\t\treturn this._lines.createLineBreaksComputer();\n\t}\n\n\tpublic addViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tthis._eventDispatcher.addViewEventHandler(eventHandler);\n\t}\n\n\tpublic removeViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tthis._eventDispatcher.removeViewEventHandler(eventHandler);\n\t}\n\n\tprivate _updateConfigurationViewLineCountNow(): void {\n\t\tthis._configuration.setViewLineCount(this._lines.getViewLineCount());\n\t}\n\n\tpublic tokenizeViewport(): void {\n\t\tconst linesViewportData = this.viewLayout.getLinesViewportData();\n\t\tconst startPosition = this.coordinatesConverter.convertViewPositionToModelPosition(new Position(linesViewportData.startLineNumber, 1));\n\t\tconst endPosition = this.coordinatesConverter.convertViewPositionToModelPosition(new Position(linesViewportData.endLineNumber, 1));\n\t\tthis.model.tokenizeViewport(startPosition.lineNumber, endPosition.lineNumber);\n\t}\n\n\tpublic setHasFocus(hasFocus: boolean): void {\n\t\tthis._hasFocus = hasFocus;\n\t\tthis._cursor.setHasFocus(hasFocus);\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewFocusChangedEvent(hasFocus));\n\t\tthis._eventDispatcher.emitOutgoingEvent(new FocusChangedEvent(!hasFocus, hasFocus));\n\t}\n\n\tpublic onCompositionStart(): void {\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewCompositionStartEvent());\n\t}\n\n\tpublic onCompositionEnd(): void {\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewCompositionEndEvent());\n\t}\n\n\tpublic onDidColorThemeChange(): void {\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewThemeChangedEvent());\n\t}\n\n\tprivate _onConfigurationChanged(eventsCollector: ViewModelEventsCollector, e: ConfigurationChangedEvent): void {\n\n\t\t// We might need to restore the current centered view range, so save it (if available)\n\t\tlet previousViewportStartModelPosition: Position | null = null;\n\t\tif (this._viewportStartLine !== -1) {\n\t\t\tlet previousViewportStartViewPosition = new Position(this._viewportStartLine, this.getLineMinColumn(this._viewportStartLine));\n\t\t\tpreviousViewportStartModelPosition = this.coordinatesConverter.convertViewPositionToModelPosition(previousViewportStartViewPosition);\n\t\t}\n\t\tlet restorePreviousViewportStart = false;\n\n\t\tconst options = this._configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingStrategy = options.get(EditorOption.wrappingStrategy);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst wrappingIndent = options.get(EditorOption.wrappingIndent);\n\n\t\tif (this._lines.setWrappingSettings(fontInfo, wrappingStrategy, wrappingInfo.wrappingColumn, wrappingIndent)) {\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\n\t\t\tif (this.viewLayout.getCurrentScrollTop() !== 0) {\n\t\t\t\t// Never change the scroll position from 0 to something else...\n\t\t\t\trestorePreviousViewportStart = true;\n\t\t\t}\n\n\t\t\tthis._updateConfigurationViewLineCount.schedule();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.readOnly)) {\n\t\t\t// Must read again all decorations due to readOnly filtering\n\t\t\tthis._decorations.reset();\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t}\n\n\t\teventsCollector.emitViewEvent(new viewEvents.ViewConfigurationChangedEvent(e));\n\t\tthis.viewLayout.onConfigurationChanged(e);\n\n\t\tif (restorePreviousViewportStart && previousViewportStartModelPosition) {\n\t\t\tconst viewPosition = this.coordinatesConverter.convertModelPositionToViewPosition(previousViewportStartModelPosition);\n\t\t\tconst viewPositionTop = this.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n\t\t\tthis.viewLayout.setScrollPosition({ scrollTop: viewPositionTop + this._viewportStartLineDelta }, ScrollType.Immediate);\n\t\t}\n\n\t\tif (CursorConfiguration.shouldRecreate(e)) {\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageIdentifier(), this.model.getOptions(), this._configuration);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t}\n\t}\n\n\tprivate _registerModelEvents(): void {\n\n\t\tthis._register(this.model.onDidChangeRawContentFast((e) => {\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\n\t\t\t\tlet hadOtherModelChange = false;\n\t\t\t\tlet hadModelLineChangeThatChangedLineMapping = false;\n\n\t\t\t\tconst changes = e.changes;\n\t\t\t\tconst versionId = e.versionId;\n\n\t\t\t\t// Do a first pass to compute line mappings, and a second pass to actually interpret them\n\t\t\t\tconst lineBreaksComputer = this._lines.createLineBreaksComputer();\n\t\t\t\tfor (const change of changes) {\n\t\t\t\t\tswitch (change.changeType) {\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesInserted: {\n\t\t\t\t\t\t\tfor (const line of change.detail) {\n\t\t\t\t\t\t\t\tlineBreaksComputer.addRequest(line, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LineChanged: {\n\t\t\t\t\t\t\tlineBreaksComputer.addRequest(change.detail, null);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst lineBreaks = lineBreaksComputer.finalize();\n\t\t\t\tlet lineBreaksOffset = 0;\n\n\t\t\t\tfor (const change of changes) {\n\n\t\t\t\t\tswitch (change.changeType) {\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.Flush: {\n\t\t\t\t\t\t\tthis._lines.onModelFlushed();\n\t\t\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\t\t\t\tthis._decorations.reset();\n\t\t\t\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesDeleted: {\n\t\t\t\t\t\t\tconst linesDeletedEvent = this._lines.onModelLinesDeleted(versionId, change.fromLineNumber, change.toLineNumber);\n\t\t\t\t\t\t\tif (linesDeletedEvent !== null) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesDeletedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesDeleted(linesDeletedEvent.fromLineNumber, linesDeletedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesInserted: {\n\t\t\t\t\t\t\tconst insertedLineBreaks = lineBreaks.slice(lineBreaksOffset, lineBreaksOffset + change.detail.length);\n\t\t\t\t\t\t\tlineBreaksOffset += change.detail.length;\n\n\t\t\t\t\t\t\tconst linesInsertedEvent = this._lines.onModelLinesInserted(versionId, change.fromLineNumber, change.toLineNumber, insertedLineBreaks);\n\t\t\t\t\t\t\tif (linesInsertedEvent !== null) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesInsertedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesInserted(linesInsertedEvent.fromLineNumber, linesInsertedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LineChanged: {\n\t\t\t\t\t\t\tconst changedLineBreakData = lineBreaks[lineBreaksOffset];\n\t\t\t\t\t\t\tlineBreaksOffset++;\n\n\t\t\t\t\t\t\tconst [lineMappingChanged, linesChangedEvent, linesInsertedEvent, linesDeletedEvent] = this._lines.onModelLineChanged(versionId, change.lineNumber, changedLineBreakData);\n\t\t\t\t\t\t\thadModelLineChangeThatChangedLineMapping = lineMappingChanged;\n\t\t\t\t\t\t\tif (linesChangedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesChangedEvent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (linesInsertedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesInsertedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesInserted(linesInsertedEvent.fromLineNumber, linesInsertedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (linesDeletedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesDeletedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesDeleted(linesDeletedEvent.fromLineNumber, linesDeletedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.EOLChanged: {\n\t\t\t\t\t\t\t// Nothing to do. The new version will be accepted below\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._lines.acceptVersionId(versionId);\n\t\t\t\tthis.viewLayout.onHeightMaybeChanged();\n\n\t\t\t\tif (!hadOtherModelChange && hadModelLineChangeThatChangedLineMapping) {\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\n\t\t\t// Update the configuration and reset the centered view line\n\t\t\tthis._viewportStartLine = -1;\n\t\t\tthis._configuration.setMaxLineNumber(this.model.getLineCount());\n\t\t\tthis._updateConfigurationViewLineCountNow();\n\n\t\t\t// Recover viewport\n\t\t\tif (!this._hasFocus && this.model.getAttachedEditorCount() >= 2 && this._viewportStartLineTrackedRange) {\n\t\t\t\tconst modelRange = this.model._getTrackedRange(this._viewportStartLineTrackedRange);\n\t\t\t\tif (modelRange) {\n\t\t\t\t\tconst viewPosition = this.coordinatesConverter.convertModelPositionToViewPosition(modelRange.getStartPosition());\n\t\t\t\t\tconst viewPositionTop = this.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n\t\t\t\t\tthis.viewLayout.setScrollPosition({ scrollTop: viewPositionTop + this._viewportStartLineDelta }, ScrollType.Immediate);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\tthis._cursor.onModelContentChanged(eventsCollector, e);\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeTokens((e) => {\n\t\t\tlet viewRanges: { fromLineNumber: number; toLineNumber: number; }[] = [];\n\t\t\tfor (let j = 0, lenJ = e.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst modelRange = e.ranges[j];\n\t\t\t\tconst viewStartLineNumber = this.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.fromLineNumber, 1)).lineNumber;\n\t\t\t\tconst viewEndLineNumber = this.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.toLineNumber, this.model.getLineMaxColumn(modelRange.toLineNumber))).lineNumber;\n\t\t\t\tviewRanges[j] = {\n\t\t\t\t\tfromLineNumber: viewStartLineNumber,\n\t\t\t\t\ttoLineNumber: viewEndLineNumber\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewTokensChangedEvent(viewRanges));\n\n\t\t\tif (e.tokenizationSupportChanged) {\n\t\t\t\tthis._tokenizeViewportSoon.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeLanguageConfiguration((e) => {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewLanguageConfigurationEvent());\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageIdentifier(), this.model.getOptions(), this._configuration);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeLanguage((e) => {\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageIdentifier(), this.model.getOptions(), this._configuration);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeOptions((e) => {\n\t\t\t// A tab size change causes a line mapping changed event => all view parts will repaint OK, no further event needed here\n\t\t\tif (this._lines.setTabSize(this.model.getOptions().tabSize)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\t} finally {\n\t\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t\t}\n\t\t\t\tthis._updateConfigurationViewLineCount.schedule();\n\t\t\t}\n\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageIdentifier(), this.model.getOptions(), this._configuration);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeDecorations((e) => {\n\t\t\tthis._decorations.onModelDecorationsChanged();\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewDecorationsChangedEvent(e));\n\t\t}));\n\t}\n\n\tpublic setHiddenAreas(ranges: Range[]): void {\n\t\ttry {\n\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\tlet lineMappingChanged = this._lines.setHiddenAreas(ranges);\n\t\t\tif (lineMappingChanged) {\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\tthis.viewLayout.onHeightMaybeChanged();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t}\n\t\tthis._updateConfigurationViewLineCount.schedule();\n\t}\n\n\tpublic getVisibleRangesPlusViewportAboveBelow(): Range[] {\n\t\tconst layoutInfo = this._configuration.options.get(EditorOption.layoutInfo);\n\t\tconst lineHeight = this._configuration.options.get(EditorOption.lineHeight);\n\t\tconst linesAround = Math.max(20, Math.round(layoutInfo.height / lineHeight));\n\t\tconst partialData = this.viewLayout.getLinesViewportData();\n\t\tconst startViewLineNumber = Math.max(1, partialData.completelyVisibleStartLineNumber - linesAround);\n\t\tconst endViewLineNumber = Math.min(this.getLineCount(), partialData.completelyVisibleEndLineNumber + linesAround);\n\n\t\treturn this._toModelVisibleRanges(new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t));\n\t}\n\n\tpublic getVisibleRanges(): Range[] {\n\t\tconst visibleViewRange = this.getCompletelyVisibleViewRange();\n\t\treturn this._toModelVisibleRanges(visibleViewRange);\n\t}\n\n\tprivate _toModelVisibleRanges(visibleViewRange: Range): Range[] {\n\t\tconst visibleRange = this.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n\t\tconst hiddenAreas = this._lines.getHiddenAreas();\n\n\t\tif (hiddenAreas.length === 0) {\n\t\t\treturn [visibleRange];\n\t\t}\n\n\t\tlet result: Range[] = [], resultLen = 0;\n\t\tlet startLineNumber = visibleRange.startLineNumber;\n\t\tlet startColumn = visibleRange.startColumn;\n\t\tlet endLineNumber = visibleRange.endLineNumber;\n\t\tlet endColumn = visibleRange.endColumn;\n\t\tfor (let i = 0, len = hiddenAreas.length; i < len; i++) {\n\t\t\tconst hiddenStartLineNumber = hiddenAreas[i].startLineNumber;\n\t\t\tconst hiddenEndLineNumber = hiddenAreas[i].endLineNumber;\n\n\t\t\tif (hiddenEndLineNumber < startLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (hiddenStartLineNumber > endLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (startLineNumber < hiddenStartLineNumber) {\n\t\t\t\tresult[resultLen++] = new Range(\n\t\t\t\t\tstartLineNumber, startColumn,\n\t\t\t\t\thiddenStartLineNumber - 1, this.model.getLineMaxColumn(hiddenStartLineNumber - 1)\n\t\t\t\t);\n\t\t\t}\n\t\t\tstartLineNumber = hiddenEndLineNumber + 1;\n\t\t\tstartColumn = 1;\n\t\t}\n\n\t\tif (startLineNumber < endLineNumber || (startLineNumber === endLineNumber && startColumn < endColumn)) {\n\t\t\tresult[resultLen++] = new Range(\n\t\t\t\tstartLineNumber, startColumn,\n\t\t\t\tendLineNumber, endColumn\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getCompletelyVisibleViewRange(): Range {\n\t\tconst partialData = this.viewLayout.getLinesViewportData();\n\t\tconst startViewLineNumber = partialData.completelyVisibleStartLineNumber;\n\t\tconst endViewLineNumber = partialData.completelyVisibleEndLineNumber;\n\n\t\treturn new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t);\n\t}\n\n\tpublic getCompletelyVisibleViewRangeAtScrollTop(scrollTop: number): Range {\n\t\tconst partialData = this.viewLayout.getLinesViewportDataAtScrollTop(scrollTop);\n\t\tconst startViewLineNumber = partialData.completelyVisibleStartLineNumber;\n\t\tconst endViewLineNumber = partialData.completelyVisibleEndLineNumber;\n\n\t\treturn new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t);\n\t}\n\n\tpublic saveState(): IViewState {\n\t\tconst compatViewState = this.viewLayout.saveState();\n\n\t\tconst scrollTop = compatViewState.scrollTop;\n\t\tconst firstViewLineNumber = this.viewLayout.getLineNumberAtVerticalOffset(scrollTop);\n\t\tconst firstPosition = this.coordinatesConverter.convertViewPositionToModelPosition(new Position(firstViewLineNumber, this.getLineMinColumn(firstViewLineNumber)));\n\t\tconst firstPositionDeltaTop = this.viewLayout.getVerticalOffsetForLineNumber(firstViewLineNumber) - scrollTop;\n\n\t\treturn {\n\t\t\tscrollLeft: compatViewState.scrollLeft,\n\t\t\tfirstPosition: firstPosition,\n\t\t\tfirstPositionDeltaTop: firstPositionDeltaTop\n\t\t};\n\t}\n\n\tpublic reduceRestoreState(state: IViewState): { scrollLeft: number; scrollTop: number; } {\n\t\tif (typeof state.firstPosition === 'undefined') {\n\t\t\t// This is a view state serialized by an older version\n\t\t\treturn this._reduceRestoreStateCompatibility(state);\n\t\t}\n\n\t\tconst modelPosition = this.model.validatePosition(state.firstPosition);\n\t\tconst viewPosition = this.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n\t\tconst scrollTop = this.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber) - state.firstPositionDeltaTop;\n\t\treturn {\n\t\t\tscrollLeft: state.scrollLeft,\n\t\t\tscrollTop: scrollTop\n\t\t};\n\t}\n\n\tprivate _reduceRestoreStateCompatibility(state: IViewState): { scrollLeft: number; scrollTop: number; } {\n\t\treturn {\n\t\t\tscrollLeft: state.scrollLeft,\n\t\t\tscrollTop: state.scrollTopWithoutViewZones!\n\t\t};\n\t}\n\n\tprivate getTabSize(): number {\n\t\treturn this.model.getOptions().tabSize;\n\t}\n\n\tpublic getTextModelOptions(): TextModelResolvedOptions {\n\t\treturn this.model.getOptions();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.getViewLineCount();\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these line numbers.\n\t */\n\tpublic setViewport(startLineNumber: number, endLineNumber: number, centeredLineNumber: number): void {\n\t\tthis._viewportStartLine = startLineNumber;\n\t\tlet position = this.coordinatesConverter.convertViewPositionToModelPosition(new Position(startLineNumber, this.getLineMinColumn(startLineNumber)));\n\t\tthis._viewportStartLineTrackedRange = this.model._setTrackedRange(this._viewportStartLineTrackedRange, new Range(position.lineNumber, position.column, position.lineNumber, position.column), TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t\tconst viewportStartLineTop = this.viewLayout.getVerticalOffsetForLineNumber(startLineNumber);\n\t\tconst scrollTop = this.viewLayout.getCurrentScrollTop();\n\t\tthis._viewportStartLineDelta = scrollTop - viewportStartLineTop;\n\t}\n\n\tpublic getActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo {\n\t\treturn this._lines.getActiveIndentGuide(lineNumber, minLineNumber, maxLineNumber);\n\t}\n\n\tpublic getLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[] {\n\t\treturn this._lines.getViewLinesIndentGuides(startLineNumber, endLineNumber);\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines.getViewLineContent(lineNumber);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._lines.getViewLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn this._lines.getViewLineMinColumn(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this._lines.getViewLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tpublic getDecorationsInViewport(visibleRange: Range): ViewModelDecoration[] {\n\t\treturn this._decorations.getDecorationsViewportData(visibleRange).decorations;\n\t}\n\n\tpublic getViewLineRenderingData(visibleRange: Range, lineNumber: number): ViewLineRenderingData {\n\t\tlet mightContainRTL = this.model.mightContainRTL();\n\t\tlet mightContainNonBasicASCII = this.model.mightContainNonBasicASCII();\n\t\tlet tabSize = this.getTabSize();\n\t\tlet lineData = this._lines.getViewLineData(lineNumber);\n\t\tlet allInlineDecorations = this._decorations.getDecorationsViewportData(visibleRange).inlineDecorations;\n\t\tlet inlineDecorations = allInlineDecorations[lineNumber - visibleRange.startLineNumber];\n\n\t\treturn new ViewLineRenderingData(\n\t\t\tlineData.minColumn,\n\t\t\tlineData.maxColumn,\n\t\t\tlineData.content,\n\t\t\tlineData.continuesWithWrappedLine,\n\t\t\tmightContainRTL,\n\t\t\tmightContainNonBasicASCII,\n\t\t\tlineData.tokens,\n\t\t\tinlineDecorations,\n\t\t\ttabSize,\n\t\t\tlineData.startVisibleColumn\n\t\t);\n\t}\n\n\tpublic getViewLineData(lineNumber: number): ViewLineData {\n\t\treturn this._lines.getViewLineData(lineNumber);\n\t}\n\n\tpublic getMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): MinimapLinesRenderingData {\n\t\tlet result = this._lines.getViewLinesData(startLineNumber, endLineNumber, needed);\n\t\treturn new MinimapLinesRenderingData(\n\t\t\tthis.getTabSize(),\n\t\t\tresult\n\t\t);\n\t}\n\n\tpublic getAllOverviewRulerDecorations(theme: EditorTheme): IOverviewRulerDecorations {\n\t\treturn this._lines.getAllOverviewRulerDecorations(this._editorId, filterValidationDecorations(this._configuration.options), theme);\n\t}\n\n\tpublic invalidateOverviewRulerColorCache(): void {\n\t\tconst decorations = this.model.getOverviewRulerDecorations();\n\t\tfor (const decoration of decorations) {\n\t\t\tconst opts = <ModelDecorationOverviewRulerOptions>decoration.options.overviewRuler;\n\t\t\tif (opts) {\n\t\t\t\topts.invalidateCachedColor();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic invalidateMinimapColorCache(): void {\n\t\tconst decorations = this.model.getAllDecorations();\n\t\tfor (const decoration of decorations) {\n\t\t\tconst opts = <ModelDecorationMinimapOptions>decoration.options.minimap;\n\t\t\tif (opts) {\n\t\t\t\topts.invalidateCachedColor();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference): string {\n\t\tconst modelRange = this.coordinatesConverter.convertViewRangeToModelRange(range);\n\t\treturn this.model.getValueInRange(modelRange, eol);\n\t}\n\n\tpublic getModelLineMaxColumn(modelLineNumber: number): number {\n\t\treturn this.model.getLineMaxColumn(modelLineNumber);\n\t}\n\n\tpublic validateModelPosition(position: IPosition): Position {\n\t\treturn this.model.validatePosition(position);\n\t}\n\n\tpublic validateModelRange(range: IRange): Range {\n\t\treturn this.model.validateRange(range);\n\t}\n\n\tpublic deduceModelPositionRelativeToViewPosition(viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position {\n\t\tconst modelAnchor = this.coordinatesConverter.convertViewPositionToModelPosition(viewAnchorPosition);\n\t\tif (this.model.getEOL().length === 2) {\n\t\t\t// This model uses CRLF, so the delta must take that into account\n\t\t\tif (deltaOffset < 0) {\n\t\t\t\tdeltaOffset -= lineFeedCnt;\n\t\t\t} else {\n\t\t\t\tdeltaOffset += lineFeedCnt;\n\t\t\t}\n\t\t}\n\n\t\tconst modelAnchorOffset = this.model.getOffsetAt(modelAnchor);\n\t\tconst resultOffset = modelAnchorOffset + deltaOffset;\n\t\treturn this.model.getPositionAt(resultOffset);\n\t}\n\n\tpublic getEOL(): string {\n\t\treturn this.model.getEOL();\n\t}\n\n\tpublic getPlainTextToCopy(modelRanges: Range[], emptySelectionClipboard: boolean, forceCRLF: boolean): string | string[] {\n\t\tconst newLineCharacter = forceCRLF ? '\\r\\n' : this.model.getEOL();\n\n\t\tmodelRanges = modelRanges.slice(0);\n\t\tmodelRanges.sort(Range.compareRangesUsingStarts);\n\n\t\tlet hasEmptyRange = false;\n\t\tlet hasNonEmptyRange = false;\n\t\tfor (const range of modelRanges) {\n\t\t\tif (range.isEmpty()) {\n\t\t\t\thasEmptyRange = true;\n\t\t\t} else {\n\t\t\t\thasNonEmptyRange = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasNonEmptyRange) {\n\t\t\t// all ranges are empty\n\t\t\tif (!emptySelectionClipboard) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst modelLineNumbers = modelRanges.map((r) => r.startLineNumber);\n\n\t\t\tlet result = '';\n\t\t\tfor (let i = 0; i < modelLineNumbers.length; i++) {\n\t\t\t\tif (i > 0 && modelLineNumbers[i - 1] === modelLineNumbers[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresult += this.model.getLineContent(modelLineNumbers[i]) + newLineCharacter;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (hasEmptyRange && emptySelectionClipboard) {\n\t\t\t// mixed empty selections and non-empty selections\n\t\t\tlet result: string[] = [];\n\t\t\tlet prevModelLineNumber = 0;\n\t\t\tfor (const modelRange of modelRanges) {\n\t\t\t\tconst modelLineNumber = modelRange.startLineNumber;\n\t\t\t\tif (modelRange.isEmpty()) {\n\t\t\t\t\tif (modelLineNumber !== prevModelLineNumber) {\n\t\t\t\t\t\tresult.push(this.model.getLineContent(modelLineNumber));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(this.model.getValueInRange(modelRange, forceCRLF ? EndOfLinePreference.CRLF : EndOfLinePreference.TextDefined));\n\t\t\t\t}\n\t\t\t\tprevModelLineNumber = modelLineNumber;\n\t\t\t}\n\t\t\treturn result.length === 1 ? result[0] : result;\n\t\t}\n\n\t\tlet result: string[] = [];\n\t\tfor (const modelRange of modelRanges) {\n\t\t\tif (!modelRange.isEmpty()) {\n\t\t\t\tresult.push(this.model.getValueInRange(modelRange, forceCRLF ? EndOfLinePreference.CRLF : EndOfLinePreference.TextDefined));\n\t\t\t}\n\t\t}\n\t\treturn result.length === 1 ? result[0] : result;\n\t}\n\n\tpublic getRichTextToCopy(modelRanges: Range[], emptySelectionClipboard: boolean): { html: string, mode: string } | null {\n\t\tconst languageId = this.model.getLanguageIdentifier();\n\t\tif (languageId.id === LanguageId.PlainText) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (modelRanges.length !== 1) {\n\t\t\t// no multiple selection support at this time\n\t\t\treturn null;\n\t\t}\n\n\t\tlet range = modelRanges[0];\n\t\tif (range.isEmpty()) {\n\t\t\tif (!emptySelectionClipboard) {\n\t\t\t\t// nothing to copy\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst lineNumber = range.startLineNumber;\n\t\t\trange = new Range(lineNumber, this.model.getLineMinColumn(lineNumber), lineNumber, this.model.getLineMaxColumn(lineNumber));\n\t\t}\n\n\t\tconst fontInfo = this._configuration.options.get(EditorOption.fontInfo);\n\t\tconst colorMap = this._getColorMap();\n\t\tconst hasBadChars = (/[:;\\\\\\/<>]/.test(fontInfo.fontFamily));\n\t\tconst useDefaultFontFamily = (hasBadChars || fontInfo.fontFamily === EDITOR_FONT_DEFAULTS.fontFamily);\n\t\tlet fontFamily: string;\n\t\tif (useDefaultFontFamily) {\n\t\t\tfontFamily = EDITOR_FONT_DEFAULTS.fontFamily;\n\t\t} else {\n\t\t\tfontFamily = fontInfo.fontFamily;\n\t\t\tfontFamily = fontFamily.replace(/\"/g, '\\'');\n\t\t\tconst hasQuotesOrIsList = /[,']/.test(fontFamily);\n\t\t\tif (!hasQuotesOrIsList) {\n\t\t\t\tconst needsQuotes = /[+ ]/.test(fontFamily);\n\t\t\t\tif (needsQuotes) {\n\t\t\t\t\tfontFamily = `'${fontFamily}'`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfontFamily = `${fontFamily}, ${EDITOR_FONT_DEFAULTS.fontFamily}`;\n\t\t}\n\n\t\treturn {\n\t\t\tmode: languageId.language,\n\t\t\thtml: (\n\t\t\t\t`<div style=\"`\n\t\t\t\t+ `color: ${colorMap[ColorId.DefaultForeground]};`\n\t\t\t\t+ `background-color: ${colorMap[ColorId.DefaultBackground]};`\n\t\t\t\t+ `font-family: ${fontFamily};`\n\t\t\t\t+ `font-weight: ${fontInfo.fontWeight};`\n\t\t\t\t+ `font-size: ${fontInfo.fontSize}px;`\n\t\t\t\t+ `line-height: ${fontInfo.lineHeight}px;`\n\t\t\t\t+ `white-space: pre;`\n\t\t\t\t+ `\">`\n\t\t\t\t+ this._getHTMLToCopy(range, colorMap)\n\t\t\t\t+ '</div>'\n\t\t\t)\n\t\t};\n\t}\n\n\tprivate _getHTMLToCopy(modelRange: Range, colorMap: string[]): string {\n\t\tconst startLineNumber = modelRange.startLineNumber;\n\t\tconst startColumn = modelRange.startColumn;\n\t\tconst endLineNumber = modelRange.endLineNumber;\n\t\tconst endColumn = modelRange.endColumn;\n\n\t\tconst tabSize = this.getTabSize();\n\n\t\tlet result = '';\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst lineTokens = this.model.getLineTokens(lineNumber);\n\t\t\tconst lineContent = lineTokens.getLineContent();\n\t\t\tconst startOffset = (lineNumber === startLineNumber ? startColumn - 1 : 0);\n\t\t\tconst endOffset = (lineNumber === endLineNumber ? endColumn - 1 : lineContent.length);\n\n\t\t\tif (lineContent === '') {\n\t\t\t\tresult += '<br>';\n\t\t\t} else {\n\t\t\t\tresult += tokenizeLineToHTML(lineContent, lineTokens.inflate(), colorMap, startOffset, endOffset, tabSize, platform.isWindows);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _getColorMap(): string[] {\n\t\tlet colorMap = TokenizationRegistry.getColorMap();\n\t\tlet result: string[] = ['#000000'];\n\t\tif (colorMap) {\n\t\t\tfor (let i = 1, len = colorMap.length; i < len; i++) {\n\t\t\t\tresult[i] = Color.Format.CSS.formatHex(colorMap[i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#region model\n\n\tpublic pushStackElement(): void {\n\t\tthis.model.pushStackElement();\n\t}\n\n\t//#endregion\n\n\t//#region cursor operations\n\n\tpublic getPrimaryCursorState(): CursorState {\n\t\treturn this._cursor.getPrimaryCursorState();\n\t}\n\tpublic getLastAddedCursorIndex(): number {\n\t\treturn this._cursor.getLastAddedCursorIndex();\n\t}\n\tpublic getCursorStates(): CursorState[] {\n\t\treturn this._cursor.getCursorStates();\n\t}\n\tpublic setCursorStates(source: string | null | undefined, reason: CursorChangeReason, states: PartialCursorState[] | null): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.setStates(eventsCollector, source, reason, states));\n\t}\n\tpublic getCursorColumnSelectData(): IColumnSelectData {\n\t\treturn this._cursor.getCursorColumnSelectData();\n\t}\n\tpublic getCursorAutoClosedCharacters(): Range[] {\n\t\treturn this._cursor.getAutoClosedCharacters();\n\t}\n\tpublic setCursorColumnSelectData(columnSelectData: IColumnSelectData): void {\n\t\tthis._cursor.setCursorColumnSelectData(columnSelectData);\n\t}\n\tpublic getPrevEditOperationType(): EditOperationType {\n\t\treturn this._cursor.getPrevEditOperationType();\n\t}\n\tpublic setPrevEditOperationType(type: EditOperationType): void {\n\t\tthis._cursor.setPrevEditOperationType(type);\n\t}\n\tpublic getSelection(): Selection {\n\t\treturn this._cursor.getSelection();\n\t}\n\tpublic getSelections(): Selection[] {\n\t\treturn this._cursor.getSelections();\n\t}\n\tpublic getPosition(): Position {\n\t\treturn this._cursor.getPrimaryCursorState().modelState.position;\n\t}\n\tpublic setSelections(source: string | null | undefined, selections: readonly ISelection[], reason = CursorChangeReason.NotSet): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.setSelections(eventsCollector, source, selections, reason));\n\t}\n\tpublic saveCursorState(): ICursorState[] {\n\t\treturn this._cursor.saveState();\n\t}\n\tpublic restoreCursorState(states: ICursorState[]): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.restoreState(eventsCollector, states));\n\t}\n\n\tprivate _executeCursorEdit(callback: (eventsCollector: ViewModelEventsCollector) => void): void {\n\t\tif (this._cursor.context.cursorConfig.readOnly) {\n\t\t\t// we cannot edit when read only...\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ReadOnlyEditAttemptEvent());\n\t\t\treturn;\n\t\t}\n\t\tthis._withViewEventsCollector(callback);\n\t}\n\tpublic executeEdits(source: string | null | undefined, edits: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeEdits(eventsCollector, source, edits, cursorStateComputer));\n\t}\n\tpublic startComposition(): void {\n\t\tthis._cursor.setIsDoingComposition(true);\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.startComposition(eventsCollector));\n\t}\n\tpublic endComposition(source?: string | null | undefined): void {\n\t\tthis._cursor.setIsDoingComposition(false);\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.endComposition(eventsCollector, source));\n\t}\n\tpublic type(text: string, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.type(eventsCollector, text, source));\n\t}\n\tpublic compositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.compositionType(eventsCollector, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source));\n\t}\n\tpublic paste(text: string, pasteOnNewLine: boolean, multicursorText?: string[] | null | undefined, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.paste(eventsCollector, text, pasteOnNewLine, multicursorText, source));\n\t}\n\tpublic cut(source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.cut(eventsCollector, source));\n\t}\n\tpublic executeCommand(command: ICommand, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeCommand(eventsCollector, command, source));\n\t}\n\tpublic executeCommands(commands: ICommand[], source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeCommands(eventsCollector, commands, source));\n\t}\n\tpublic revealPrimaryCursor(source: string | null | undefined, revealHorizontal: boolean): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.revealPrimary(eventsCollector, source, revealHorizontal, ScrollType.Smooth));\n\t}\n\tpublic revealTopMostCursor(source: string | null | undefined): void {\n\t\tconst viewPosition = this._cursor.getTopMostViewPosition();\n\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, viewRange, null, viewEvents.VerticalRevealType.Simple, true, ScrollType.Smooth)));\n\t}\n\tpublic revealBottomMostCursor(source: string | null | undefined): void {\n\t\tconst viewPosition = this._cursor.getBottomMostViewPosition();\n\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, viewRange, null, viewEvents.VerticalRevealType.Simple, true, ScrollType.Smooth)));\n\t}\n\tpublic revealRange(source: string | null | undefined, revealHorizontal: boolean, viewRange: Range, verticalType: viewEvents.VerticalRevealType, scrollType: ScrollType): void {\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, viewRange, null, verticalType, revealHorizontal, scrollType)));\n\t}\n\n\t//#endregion\n\n\t//#region viewLayout\n\tpublic getVerticalOffsetForLineNumber(viewLineNumber: number): number {\n\t\treturn this.viewLayout.getVerticalOffsetForLineNumber(viewLineNumber);\n\t}\n\tpublic getScrollTop(): number {\n\t\treturn this.viewLayout.getCurrentScrollTop();\n\t}\n\tpublic setScrollTop(newScrollTop: number, scrollType: ScrollType): void {\n\t\tthis.viewLayout.setScrollPosition({ scrollTop: newScrollTop }, scrollType);\n\t}\n\tpublic setScrollPosition(position: INewScrollPosition, type: ScrollType): void {\n\t\tthis.viewLayout.setScrollPosition(position, type);\n\t}\n\tpublic deltaScrollNow(deltaScrollLeft: number, deltaScrollTop: number): void {\n\t\tthis.viewLayout.deltaScrollNow(deltaScrollLeft, deltaScrollTop);\n\t}\n\tpublic changeWhitespace(callback: (accessor: IWhitespaceChangeAccessor) => void): void {\n\t\tconst hadAChange = this.viewLayout.changeWhitespace(callback);\n\t\tif (hadAChange) {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewZonesChangedEvent());\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ViewZonesChangedEvent());\n\t\t}\n\t}\n\tpublic setMaxLineWidth(maxLineWidth: number): void {\n\t\tthis.viewLayout.setMaxLineWidth(maxLineWidth);\n\t}\n\t//#endregion\n\n\tprivate _withViewEventsCollector(callback: (eventsCollector: ViewModelEventsCollector) => void): void {\n\t\ttry {\n\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\tcallback(eventsCollector);\n\t\t} finally {\n\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t}\n\t}\n}\n"]}