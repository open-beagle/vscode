{"version":3,"sources":["vs/editor/common/standaloneStrings.ts"],"names":[],"mappings":"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","file":"standaloneStrings.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport namespace AccessibilityHelpNLS {\n\texport const noSelection = nls.localize(\"noSelection\", \"No selection\");\n\texport const singleSelectionRange = nls.localize(\"singleSelectionRange\", \"Line {0}, Column {1} ({2} selected)\");\n\texport const singleSelection = nls.localize(\"singleSelection\", \"Line {0}, Column {1}\");\n\texport const multiSelectionRange = nls.localize(\"multiSelectionRange\", \"{0} selections ({1} characters selected)\");\n\texport const multiSelection = nls.localize(\"multiSelection\", \"{0} selections\");\n\texport const emergencyConfOn = nls.localize(\"emergencyConfOn\", \"Now changing the setting `accessibilitySupport` to 'on'.\");\n\texport const openingDocs = nls.localize(\"openingDocs\", \"Now opening the Editor Accessibility documentation page.\");\n\texport const readonlyDiffEditor = nls.localize(\"readonlyDiffEditor\", \" in a read-only pane of a diff editor.\");\n\texport const editableDiffEditor = nls.localize(\"editableDiffEditor\", \" in a pane of a diff editor.\");\n\texport const readonlyEditor = nls.localize(\"readonlyEditor\", \" in a read-only code editor\");\n\texport const editableEditor = nls.localize(\"editableEditor\", \" in a code editor\");\n\texport const changeConfigToOnMac = nls.localize(\"changeConfigToOnMac\", \"To configure the editor to be optimized for usage with a Screen Reader press Command+E now.\");\n\texport const changeConfigToOnWinLinux = nls.localize(\"changeConfigToOnWinLinux\", \"To configure the editor to be optimized for usage with a Screen Reader press Control+E now.\");\n\texport const auto_on = nls.localize(\"auto_on\", \"The editor is configured to be optimized for usage with a Screen Reader.\");\n\texport const auto_off = nls.localize(\"auto_off\", \"The editor is configured to never be optimized for usage with a Screen Reader, which is not the case at this time.\");\n\texport const tabFocusModeOnMsg = nls.localize(\"tabFocusModeOnMsg\", \"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.\");\n\texport const tabFocusModeOnMsgNoKb = nls.localize(\"tabFocusModeOnMsgNoKb\", \"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.\");\n\texport const tabFocusModeOffMsg = nls.localize(\"tabFocusModeOffMsg\", \"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.\");\n\texport const tabFocusModeOffMsgNoKb = nls.localize(\"tabFocusModeOffMsgNoKb\", \"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.\");\n\texport const openDocMac = nls.localize(\"openDocMac\", \"Press Command+H now to open a browser window with more information related to editor accessibility.\");\n\texport const openDocWinLinux = nls.localize(\"openDocWinLinux\", \"Press Control+H now to open a browser window with more information related to editor accessibility.\");\n\texport const outroMsg = nls.localize(\"outroMsg\", \"You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.\");\n\texport const showAccessibilityHelpAction = nls.localize(\"showAccessibilityHelpAction\", \"Show Accessibility Help\");\n}\n\nexport namespace InspectTokensNLS {\n\texport const inspectTokensAction = nls.localize('inspectTokens', \"Developer: Inspect Tokens\");\n}\n\nexport namespace GoToLineNLS {\n\texport const gotoLineActionLabel = nls.localize('gotoLineActionLabel', \"Go to Line/Column...\");\n}\n\nexport namespace QuickHelpNLS {\n\texport const helpQuickAccessActionLabel = nls.localize('helpQuickAccess', \"Show all Quick Access Providers\");\n}\n\nexport namespace QuickCommandNLS {\n\texport const quickCommandActionLabel = nls.localize('quickCommandActionLabel', \"Command Palette\");\n\texport const quickCommandHelp = nls.localize('quickCommandActionHelp', \"Show And Run Commands\");\n}\n\nexport namespace QuickOutlineNLS {\n\texport const quickOutlineActionLabel = nls.localize('quickOutlineActionLabel', \"Go to Symbol...\");\n\texport const quickOutlineByCategoryActionLabel = nls.localize('quickOutlineByCategoryActionLabel', \"Go to Symbol by Category...\");\n}\n\nexport namespace StandaloneCodeEditorNLS {\n\texport const editorViewAccessibleLabel = nls.localize('editorViewAccessibleLabel', \"Editor content\");\n\texport const accessibilityHelpMessage = nls.localize('accessibilityHelpMessage', \"Press Alt+F1 for Accessibility Options.\");\n}\n\nexport namespace ToggleHighContrastNLS {\n\texport const toggleHighContrast = nls.localize('toggleHighContrast', \"Toggle High Contrast Theme\");\n}\n\nexport namespace SimpleServicesNLS {\n\texport const bulkEditServiceSummary = nls.localize('bulkEditServiceSummary', \"Made {0} edits in {1} files\");\n}\n"]}