{"version":3,"sources":["vs/editor/common/config/editorOptions.ts"],"names":[],"mappings":"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","file":"editorOptions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as platform from 'vs/base/common/platform';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { Constants } from 'vs/base/common/uint';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/model/wordHelper';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\n//#region typed options\n\n/**\n * Configuration options for auto closing quotes and brackets\n */\nexport type EditorAutoClosingStrategy = 'always' | 'languageDefined' | 'beforeWhitespace' | 'never';\n\n/**\n * Configuration options for auto wrapping quotes and brackets\n */\nexport type EditorAutoSurroundStrategy = 'languageDefined' | 'quotes' | 'brackets' | 'never';\n\n/**\n * Configuration options for typing over closing quotes or brackets\n */\nexport type EditorAutoClosingEditStrategy = 'always' | 'auto' | 'never';\n\n/**\n * Configuration options for auto indentation in the editor\n */\nexport const enum EditorAutoIndentStrategy {\n\tNone = 0,\n\tKeep = 1,\n\tBrackets = 2,\n\tAdvanced = 3,\n\tFull = 4\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\t/**\n\t * This editor is used inside a diff editor.\n\t */\n\tinDiffEditor?: boolean;\n\t/**\n\t * The aria label for the editor's textarea (when it is focused).\n\t */\n\tariaLabel?: string;\n\t/**\n\t * The `tabindex` property of the editor's textarea\n\t */\n\ttabIndex?: number;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: (number | IRulerOption)[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to `on`.\n\t */\n\tlineNumbers?: LineNumbersType;\n\t/**\n\t * Controls the minimal number of visible leading and trailing lines surrounding the cursor.\n\t * Defaults to 0.\n\t*/\n\tcursorSurroundingLines?: number;\n\t/**\n\t * Controls when `cursorSurroundingLines` should be enforced\n\t * Defaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\n\t * by mouse.\n\t*/\n\tcursorSurroundingLinesStyle?: 'default' | 'all';\n\t/**\n\t * Render last line number when the file ends with a newline.\n\t * Defaults to true.\n\t*/\n\trenderFinalNewline?: boolean;\n\t/**\n\t * Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\n\t * Defaults to 'prompt'.\n\t */\n\tunusualLineTerminators?: 'auto' | 'off' | 'prompt';\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?: boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?: number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to true in vscode and to false in monaco-editor.\n\t */\n\tglyphMargin?: boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?: number | string;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?: number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?: boolean;\n\t/**\n\t * Class name to be added to the editor.\n\t */\n\textraEditorClassName?: string;\n\t/**\n\t * Should the editor be read only. See also `domReadOnly`.\n\t * Defaults to false.\n\t */\n\treadOnly?: boolean;\n\t/**\n\t * Should the textarea used for input use the DOM `readonly` attribute.\n\t * Defaults to false.\n\t */\n\tdomReadOnly?: boolean;\n\t/**\n\t * Enable linked editing.\n\t * Defaults to false.\n\t */\n\tlinkedEditing?: boolean;\n\t/**\n\t * deprecated, use linkedEditing instead\n\t */\n\trenameOnType?: boolean;\n\t/**\n\t * Should the editor render validation decorations.\n\t * Defaults to editable.\n\t */\n\trenderValidationDecorations?: 'editable' | 'on' | 'off';\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?: IEditorScrollbarOptions;\n\t/**\n\t * Control the behavior and rendering of the minimap.\n\t */\n\tminimap?: IEditorMinimapOptions;\n\t/**\n\t * Control the behavior of the find widget.\n\t */\n\tfind?: IEditorFindOptions;\n\t/**\n\t * Display overflow widgets as `fixed`.\n\t * Defaults to `false`.\n\t */\n\tfixedOverflowWidgets?: boolean;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 3.\n\t */\n\toverviewRulerLanes?: number;\n\t/**\n\t * Controls if a border should be drawn around the overview ruler.\n\t * Defaults to `true`.\n\t */\n\toverviewRulerBorder?: boolean;\n\t/**\n\t * Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?: 'blink' | 'smooth' | 'phase' | 'expand' | 'solid';\n\t/**\n\t * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n\t * Defaults to false.\n\t */\n\tmouseWheelZoom?: boolean;\n\t/**\n\t * Control the mouse pointer style, either 'text' or 'default' or 'copy'\n\t * Defaults to 'text'\n\t */\n\tmouseStyle?: 'text' | 'default' | 'copy';\n\t/**\n\t * Enable smooth caret animation.\n\t * Defaults to false.\n\t */\n\tcursorSmoothCaretAnimation?: boolean;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?: 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin';\n\t/**\n\t * Control the width of the cursor when cursorStyle is set to 'line'\n\t */\n\tcursorWidth?: number;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?: boolean | string;\n\t/**\n\t * Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\n\t * The usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\n\t * Defaults to false.\n\t */\n\tdisableLayerHinting?: boolean;\n\t/**\n\t * Disable the optimizations for monospace fonts.\n\t * Defaults to false.\n\t */\n\tdisableMonospaceOptimizations?: boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?: boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?: boolean;\n\t/**\n\t * Enable that scrolling can go beyond the last column by a number of columns.\n\t * Defaults to 5.\n\t */\n\tscrollBeyondLastColumn?: number;\n\t/**\n\t * Enable that the editor animates scrolling to a position.\n\t * Defaults to false.\n\t */\n\tsmoothScrolling?: boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?: boolean;\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to \"off\".\n\t */\n\twordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\t/**\n\t * Override the `wordWrap` setting.\n\t */\n\twordWrapOverride1?: 'off' | 'on' | 'inherit';\n\t/**\n\t * Override the `wordWrapOverride1` setting.\n\t */\n\twordWrapOverride2?: 'off' | 'on' | 'inherit';\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to 80.\n\t */\n\twordWrapColumn?: number;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\n\t * Defaults to 'same' in vscode and to 'none' in monaco-editor.\n\t */\n\twrappingIndent?: 'none' | 'same' | 'indent' | 'deepIndent';\n\t/**\n\t * Controls the wrapping strategy to use.\n\t * Defaults to 'simple'.\n\t */\n\twrappingStrategy?: 'simple' | 'advanced';\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?: number;\n\t/**\n\t * Configure the editor's hover.\n\t */\n\thover?: IEditorHoverOptions;\n\t/**\n\t * Enable detecting links and making them clickable.\n\t * Defaults to true.\n\t */\n\tlinks?: boolean;\n\t/**\n\t * Enable inline color decorators and color picker rendering.\n\t */\n\tcolorDecorators?: boolean;\n\t/**\n\t * Control the behaviour of comments in the editor.\n\t */\n\tcomments?: IEditorCommentsOptions;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\n\t * Defaults to true.\n\t */\n\tscrollPredominantAxis?: boolean;\n\t/**\n\t * Enable that the selection with the mouse and keys is doing column selection.\n\t * Defaults to false.\n\t */\n\tcolumnSelection?: boolean;\n\t/**\n\t * The modifier to be used to add multiple cursors with the mouse.\n\t * Defaults to 'alt'\n\t */\n\tmultiCursorModifier?: 'ctrlCmd' | 'alt';\n\t/**\n\t * Merge overlapping selections.\n\t * Defaults to true\n\t */\n\tmultiCursorMergeOverlapping?: boolean;\n\t/**\n\t * Configure the behaviour when pasting a text with the line count equal to the cursor count.\n\t * Defaults to 'spread'.\n\t */\n\tmultiCursorPaste?: 'spread' | 'full';\n\t/**\n\t * Configure the editor's accessibility support.\n\t * Defaults to 'auto'. It is best to leave this to 'auto'.\n\t */\n\taccessibilitySupport?: 'auto' | 'off' | 'on';\n\t/**\n\t * Controls the number of lines in the editor that can be read out by a screen reader\n\t */\n\taccessibilityPageSize?: number;\n\t/**\n\t * Suggest options.\n\t */\n\tsuggest?: ISuggestOptions;\n\t/**\n\t * Smart select opptions;\n\t */\n\tsmartSelect?: ISmartSelectOptions;\n\t/**\n\t *\n\t */\n\tgotoLocation?: IGotoLocationOptions;\n\t/**\n\t * Enable quick suggestions (shadow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?: boolean | IQuickSuggestionsOptions;\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 10 (ms)\n\t */\n\tquickSuggestionsDelay?: number;\n\t/**\n\t * Controls the spacing around the editor.\n\t */\n\tpadding?: IEditorPaddingOptions;\n\t/**\n\t * Parameter hint options.\n\t */\n\tparameterHints?: IEditorParameterHintOptions;\n\t/**\n\t * Options for auto closing brackets.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingBrackets?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto closing quotes.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingQuotes?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for pressing backspace near quotes or bracket pairs.\n\t */\n\tautoClosingDelete?: EditorAutoClosingEditStrategy;\n\t/**\n\t * Options for typing over closing quotes or brackets.\n\t */\n\tautoClosingOvertype?: EditorAutoClosingEditStrategy;\n\t/**\n\t * Options for auto surrounding.\n\t * Defaults to always allowing auto surrounding.\n\t */\n\tautoSurround?: EditorAutoSurroundStrategy;\n\t/**\n\t * Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\n\t * Defaults to advanced.\n\t */\n\tautoIndent?: 'none' | 'keep' | 'brackets' | 'advanced' | 'full';\n\t/**\n\t * Emulate selection behaviour of tab characters when using spaces for indentation.\n\t * This means selection will stick to tab stops.\n\t */\n\tstickyTabStops?: boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?: boolean;\n\t/**\n\t * Enable format on paste.\n\t * Defaults to false.\n\t */\n\tformatOnPaste?: boolean;\n\t/**\n\t * Controls if the editor should allow to move selections via drag and drop.\n\t * Defaults to false.\n\t */\n\tdragAndDrop?: boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to 'on'.\n\t */\n\tacceptSuggestionOnEnter?: 'on' | 'smart' | 'off';\n\t/**\n\t * Accept suggestions on provider defined characters.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnCommitCharacter?: boolean;\n\t/**\n\t * Enable snippet suggestions. Default to 'true'.\n\t */\n\tsnippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n\t/**\n\t * Copying without a selection copies the current line.\n\t */\n\temptySelectionClipboard?: boolean;\n\t/**\n\t * Syntax highlighting is copied.\n\t */\n\tcopyWithSyntaxHighlighting?: boolean;\n\t/**\n\t * The history mode for suggestions.\n\t */\n\tsuggestSelection?: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\t/**\n\t * The font size for the suggest widget.\n\t * Defaults to the editor font size.\n\t */\n\tsuggestFontSize?: number;\n\t/**\n\t * The line height for the suggest widget.\n\t * Defaults to the editor line height.\n\t */\n\tsuggestLineHeight?: number;\n\t/**\n\t * Enable tab completion.\n\t */\n\ttabCompletion?: 'on' | 'off' | 'onlySnippets';\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?: boolean;\n\t/**\n\t * Enable semantic occurrences highlight.\n\t * Defaults to true.\n\t */\n\toccurrencesHighlight?: boolean;\n\t/**\n\t * Show code lens\n\t * Defaults to true.\n\t */\n\tcodeLens?: boolean;\n\t/**\n\t * Code lens font family. Defaults to editor font family.\n\t */\n\tcodeLensFontFamily?: string;\n\t/**\n\t * Code lens font size. Default to 90% of the editor font size\n\t */\n\tcodeLensFontSize?: number;\n\t/**\n\t * Control the behavior and rendering of the code action lightbulb.\n\t */\n\tlightbulb?: IEditorLightbulbOptions;\n\t/**\n\t * Timeout for running code actions on save.\n\t */\n\tcodeActionsOnSaveTimeout?: number;\n\t/**\n\t * Enable code folding.\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\n\t * Defaults to 'auto'.\n\t */\n\tfoldingStrategy?: 'auto' | 'indentation';\n\t/**\n\t * Enable highlight for folded regions.\n\t * Defaults to true.\n\t */\n\tfoldingHighlight?: boolean;\n\t/**\n\t * Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowFoldingControls?: 'always' | 'mouseover';\n\t/**\n\t * Controls whether clicking on the empty content after a folded line will unfold the line.\n\t * Defaults to false.\n\t */\n\tunfoldOnClickAfterEndOfLine?: boolean;\n\t/**\n\t * Enable highlighting of matching brackets.\n\t * Defaults to 'always'.\n\t */\n\tmatchBrackets?: 'never' | 'near' | 'always';\n\t/**\n\t * Enable rendering of whitespace.\n\t * Defaults to none.\n\t */\n\trenderWhitespace?: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\t/**\n\t * Enable rendering of control characters.\n\t * Defaults to false.\n\t */\n\trenderControlCharacters?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\trenderIndentGuides?: boolean;\n\t/**\n\t * Enable highlighting of the active indent guide.\n\t * Defaults to true.\n\t */\n\thighlightActiveIndentGuide?: boolean;\n\t/**\n\t * Enable rendering of current line highlight.\n\t * Defaults to all.\n\t */\n\trenderLineHighlight?: 'none' | 'gutter' | 'line' | 'all';\n\t/**\n\t * Control if the current line highlight should be rendered only the editor is focused.\n\t * Defaults to false.\n\t */\n\trenderLineHighlightOnlyWhenFocus?: boolean;\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font weight\n\t */\n\tfontWeight?: string;\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n\t/**\n\t * The letter spacing\n\t */\n\tletterSpacing?: number;\n\t/**\n\t * Controls fading out of unused variables.\n\t */\n\tshowUnused?: boolean;\n\t/**\n\t * Controls whether to focus the inline editor in the peek widget by default.\n\t * Defaults to false.\n\t */\n\tpeekWidgetDefaultFocus?: 'tree' | 'editor';\n\t/**\n\t * Controls whether the definition link opens element in the peek widget.\n\t * Defaults to false.\n\t */\n\tdefinitionLinkOpensInPeek?: boolean;\n\t/**\n\t * Controls strikethrough deprecated variables.\n\t */\n\tshowDeprecated?: boolean;\n\t/**\n\t * Control the behavior and rendering of the inline hints.\n\t */\n\tinlineHints?: IEditorInlineHintsOptions;\n}\n\n/**\n * @internal\n * The width of the minimap gutter, in pixels.\n */\nexport const MINIMAP_GUTTER_WIDTH = 8;\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Timeout in milliseconds after which diff computation is cancelled.\n\t * Defaults to 5000.\n\t */\n\tmaxComputationTime?: number;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Render +/- indicators for added/deleted changes.\n\t * Defaults to true.\n\t */\n\trenderIndicators?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n\t/**\n\t * Should the diff editor enable code lens?\n\t * Defaults to false.\n\t */\n\tdiffCodeLens?: boolean;\n\t/**\n\t * Is the diff editor inside another editor\n\t * Defaults to false\n\t */\n\tisInEmbeddedEditor?: boolean;\n\t/**\n\t * Is the diff editor should render overview ruler\n\t * Defaults to true\n\t */\n\trenderOverviewRuler?: boolean;\n\t/**\n\t * Control the wrapping of the diff editor.\n\t */\n\tdiffWordWrap?: 'off' | 'on' | 'inherit';\n\t/**\n\t * Aria label for original editor.\n\t */\n\toriginalAriaLabel?: string;\n\t/**\n\t * Aria label for modifed editor.\n\t */\n\tmodifiedAriaLabel?: string;\n}\n\n//#endregion\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport class ConfigurationChangedEvent {\n\tprivate readonly _values: boolean[];\n\t/**\n\t * @internal\n\t */\n\tconstructor(values: boolean[]) {\n\t\tthis._values = values;\n\t}\n\tpublic hasChanged(id: EditorOption): boolean {\n\t\treturn this._values[id];\n\t}\n}\n\n/**\n * @internal\n */\nexport class ValidatedEditorOptions {\n\tprivate readonly _values: any[] = [];\n\tpublic _read<T>(option: EditorOption): T {\n\t\treturn this._values[option];\n\t}\n\tpublic get<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T> {\n\t\treturn this._values[id];\n\t}\n\tpublic _write<T>(option: EditorOption, value: T): void {\n\t\tthis._values[option] = value;\n\t}\n}\n\n/**\n * All computed editor options.\n */\nexport interface IComputedEditorOptions {\n\tget<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T>;\n}\n\n//#region IEditorOption\n\n/**\n * @internal\n */\nexport interface IEnvironmentalOptions {\n\treadonly memory: ComputeOptionsMemory | null;\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly fontInfo: FontInfo;\n\treadonly extraEditorClassName: string;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly viewLineCount: number;\n\treadonly lineNumbersDigitCount: number;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly pixelRatio: number;\n\treadonly tabFocusMode: boolean;\n\treadonly accessibilitySupport: AccessibilitySupport;\n}\n\n/**\n * @internal\n */\nexport class ComputeOptionsMemory {\n\n\tpublic stableMinimapLayoutInput: IMinimapLayoutInput | null;\n\tpublic stableFitMaxMinimapScale: number;\n\tpublic stableFitRemainingWidth: number;\n\n\tconstructor() {\n\t\tthis.stableMinimapLayoutInput = null;\n\t\tthis.stableFitMaxMinimapScale = 0;\n\t\tthis.stableFitRemainingWidth = 0;\n\t}\n}\n\nexport interface IEditorOption<K1 extends EditorOption, V> {\n\treadonly id: K1;\n\treadonly name: string;\n\tdefaultValue: V;\n\t/**\n\t * @internal\n\t */\n\treadonly schema: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; } | undefined;\n\t/**\n\t * @internal\n\t */\n\tvalidate(input: any): V;\n\t/**\n\t * @internal\n\t */\n\tcompute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V;\n}\n\ntype PossibleKeyName0<V> = { [K in keyof IEditorOptions]: IEditorOptions[K] extends V | undefined ? K : never }[keyof IEditorOptions];\ntype PossibleKeyName<V> = NonNullable<PossibleKeyName0<V>>;\n\n/**\n * @internal\n */\nabstract class BaseEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: string;\n\tpublic readonly defaultValue: V;\n\tpublic readonly schema: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; } | undefined;\n\n\tconstructor(id: K1, name: string, defaultValue: V, schema?: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; }) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.schema = schema;\n\t}\n\n\tpublic abstract validate(input: any): V;\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V {\n\t\treturn value;\n\t}\n}\n\n/**\n * @internal\n */\nabstract class ComputedEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: '_never_';\n\tpublic readonly defaultValue: V;\n\tpublic readonly deps: EditorOption[] | null;\n\tpublic readonly schema: IConfigurationPropertySchema | undefined = undefined;\n\n\tconstructor(id: K1, deps: EditorOption[] | null = null) {\n\t\tthis.id = id;\n\t\tthis.name = '_never_';\n\t\tthis.defaultValue = <any>undefined;\n\t\tthis.deps = deps;\n\t}\n\n\tpublic validate(input: any): V {\n\t\treturn this.defaultValue;\n\t}\n\n\tpublic abstract compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V;\n}\n\nclass SimpleEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: PossibleKeyName<V>;\n\tpublic readonly defaultValue: V;\n\tpublic readonly schema: IConfigurationPropertySchema | undefined;\n\n\tconstructor(id: K1, name: PossibleKeyName<V>, defaultValue: V, schema?: IConfigurationPropertySchema) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.schema = schema;\n\t}\n\n\tpublic validate(input: any): V {\n\t\tif (typeof input === 'undefined') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\treturn input as any;\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V {\n\t\treturn value;\n\t}\n}\n\n/**\n * @internal\n */\nexport function boolean(value: any, defaultValue: boolean): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn defaultValue;\n\t}\n\tif (value === 'false') {\n\t\t// treat the string 'false' as false\n\t\treturn false;\n\t}\n\treturn Boolean(value);\n}\n\nclass EditorBooleanOption<K1 extends EditorOption> extends SimpleEditorOption<K1, boolean> {\n\n\tconstructor(id: K1, name: PossibleKeyName<boolean>, defaultValue: boolean, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'boolean';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t}\n\n\tpublic override validate(input: any): boolean {\n\t\treturn boolean(input, this.defaultValue);\n\t}\n}\n\nclass EditorIntOption<K1 extends EditorOption> extends SimpleEditorOption<K1, number> {\n\n\tpublic static clampedInt<T>(value: any, defaultValue: T, minimum: number, maximum: number): number | T {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tlet r = parseInt(value, 10);\n\t\tif (isNaN(r)) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tr = Math.max(minimum, r);\n\t\tr = Math.min(maximum, r);\n\t\treturn r | 0;\n\t}\n\n\tpublic readonly minimum: number;\n\tpublic readonly maximum: number;\n\n\tconstructor(id: K1, name: PossibleKeyName<number>, defaultValue: number, minimum: number, maximum: number, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'integer';\n\t\t\tschema.default = defaultValue;\n\t\t\tschema.minimum = minimum;\n\t\t\tschema.maximum = maximum;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis.minimum = minimum;\n\t\tthis.maximum = maximum;\n\t}\n\n\tpublic override validate(input: any): number {\n\t\treturn EditorIntOption.clampedInt(input, this.defaultValue, this.minimum, this.maximum);\n\t}\n}\n\nclass EditorFloatOption<K1 extends EditorOption> extends SimpleEditorOption<K1, number> {\n\n\tpublic static clamp(n: number, min: number, max: number): number {\n\t\tif (n < min) {\n\t\t\treturn min;\n\t\t}\n\t\tif (n > max) {\n\t\t\treturn max;\n\t\t}\n\t\treturn n;\n\t}\n\n\tpublic static float(value: any, defaultValue: number): number {\n\t\tif (typeof value === 'number') {\n\t\t\treturn value;\n\t\t}\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tconst r = parseFloat(value);\n\t\treturn (isNaN(r) ? defaultValue : r);\n\t}\n\n\tpublic readonly validationFn: (value: number) => number;\n\n\tconstructor(id: K1, name: PossibleKeyName<number>, defaultValue: number, validationFn: (value: number) => number, schema?: IConfigurationPropertySchema) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'number';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis.validationFn = validationFn;\n\t}\n\n\tpublic override validate(input: any): number {\n\t\treturn this.validationFn(EditorFloatOption.float(input, this.defaultValue));\n\t}\n}\n\nclass EditorStringOption<K1 extends EditorOption> extends SimpleEditorOption<K1, string> {\n\n\tpublic static string(value: any, defaultValue: string): string {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tconstructor(id: K1, name: PossibleKeyName<string>, defaultValue: string, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t}\n\n\tpublic override validate(input: any): string {\n\t\treturn EditorStringOption.string(input, this.defaultValue);\n\t}\n}\n\n/**\n * @internal\n */\nexport function stringSet<T>(value: T | undefined, defaultValue: T, allowedValues: ReadonlyArray<T>): T {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (allowedValues.indexOf(value) === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nclass EditorStringEnumOption<K1 extends EditorOption, V extends string> extends SimpleEditorOption<K1, V> {\n\n\tprivate readonly _allowedValues: ReadonlyArray<V>;\n\n\tconstructor(id: K1, name: PossibleKeyName<V>, defaultValue: V, allowedValues: ReadonlyArray<V>, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.enum = <any>allowedValues;\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis._allowedValues = allowedValues;\n\t}\n\n\tpublic override validate(input: any): V {\n\t\treturn stringSet<V>(input, this.defaultValue, this._allowedValues);\n\t}\n}\n\nclass EditorEnumOption<K1 extends EditorOption, T extends string, V> extends BaseEditorOption<K1, V> {\n\n\tprivate readonly _allowedValues: T[];\n\tprivate readonly _convert: (value: T) => V;\n\n\tconstructor(id: K1, name: PossibleKeyName<T>, defaultValue: V, defaultStringValue: string, allowedValues: T[], convert: (value: T) => V, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.enum = allowedValues;\n\t\t\tschema.default = defaultStringValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis._allowedValues = allowedValues;\n\t\tthis._convert = convert;\n\t}\n\n\tpublic validate(input: any): V {\n\t\tif (typeof input !== 'string') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tif (this._allowedValues.indexOf(<T>input) === -1) {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\treturn this._convert(<any>input);\n\t}\n}\n\n//#endregion\n\n//#region autoIndent\n\nfunction _autoIndentFromString(autoIndent: 'none' | 'keep' | 'brackets' | 'advanced' | 'full'): EditorAutoIndentStrategy {\n\tswitch (autoIndent) {\n\t\tcase 'none': return EditorAutoIndentStrategy.None;\n\t\tcase 'keep': return EditorAutoIndentStrategy.Keep;\n\t\tcase 'brackets': return EditorAutoIndentStrategy.Brackets;\n\t\tcase 'advanced': return EditorAutoIndentStrategy.Advanced;\n\t\tcase 'full': return EditorAutoIndentStrategy.Full;\n\t}\n}\n\n//#endregion\n\n//#region accessibilitySupport\n\nclass EditorAccessibilitySupport extends BaseEditorOption<EditorOption.accessibilitySupport, AccessibilitySupport> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.accessibilitySupport, 'accessibilitySupport', AccessibilitySupport.Unknown,\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['auto', 'on', 'off'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tnls.localize('accessibilitySupport.auto', \"The editor will use platform APIs to detect when a Screen Reader is attached.\"),\n\t\t\t\t\tnls.localize('accessibilitySupport.on', \"The editor will be permanently optimized for usage with a Screen Reader. Word wrapping will be disabled.\"),\n\t\t\t\t\tnls.localize('accessibilitySupport.off', \"The editor will never be optimized for usage with a Screen Reader.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'auto',\n\t\t\t\tdescription: nls.localize('accessibilitySupport', \"Controls whether the editor should run in a mode where it is optimized for screen readers. Setting to on will disable word wrapping.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): AccessibilitySupport {\n\t\tswitch (input) {\n\t\t\tcase 'auto': return AccessibilitySupport.Unknown;\n\t\t\tcase 'off': return AccessibilitySupport.Disabled;\n\t\t\tcase 'on': return AccessibilitySupport.Enabled;\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n\n\tpublic override compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: AccessibilitySupport): AccessibilitySupport {\n\t\tif (value === AccessibilitySupport.Unknown) {\n\t\t\t// The editor reads the `accessibilitySupport` from the environment\n\t\t\treturn env.accessibilitySupport;\n\t\t}\n\t\treturn value;\n\t}\n}\n\n//#endregion\n\n//#region comments\n\n/**\n * Configuration options for editor comments\n */\nexport interface IEditorCommentsOptions {\n\t/**\n\t * Insert a space after the line comment token and inside the block comments tokens.\n\t * Defaults to true.\n\t */\n\tinsertSpace?: boolean;\n\t/**\n\t * Ignore empty lines when inserting line comments.\n\t * Defaults to true.\n\t */\n\tignoreEmptyLines?: boolean;\n}\n\nexport type EditorCommentsOptions = Readonly<Required<IEditorCommentsOptions>>;\n\nclass EditorComments extends BaseEditorOption<EditorOption.comments, EditorCommentsOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorCommentsOptions = {\n\t\t\tinsertSpace: true,\n\t\t\tignoreEmptyLines: true,\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.comments, 'comments', defaults,\n\t\t\t{\n\t\t\t\t'editor.comments.insertSpace': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.insertSpace,\n\t\t\t\t\tdescription: nls.localize('comments.insertSpace', \"Controls whether a space character is inserted when commenting.\")\n\t\t\t\t},\n\t\t\t\t'editor.comments.ignoreEmptyLines': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.ignoreEmptyLines,\n\t\t\t\t\tdescription: nls.localize('comments.ignoreEmptyLines', 'Controls if empty lines should be ignored with toggle, add or remove actions for line comments.')\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorCommentsOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorCommentsOptions;\n\t\treturn {\n\t\t\tinsertSpace: boolean(input.insertSpace, this.defaultValue.insertSpace),\n\t\t\tignoreEmptyLines: boolean(input.ignoreEmptyLines, this.defaultValue.ignoreEmptyLines),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region cursorBlinking\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport const enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle: 'blink' | 'smooth' | 'phase' | 'expand' | 'solid'): TextEditorCursorBlinkingStyle {\n\tswitch (cursorBlinkingStyle) {\n\t\tcase 'blink': return TextEditorCursorBlinkingStyle.Blink;\n\t\tcase 'smooth': return TextEditorCursorBlinkingStyle.Smooth;\n\t\tcase 'phase': return TextEditorCursorBlinkingStyle.Phase;\n\t\tcase 'expand': return TextEditorCursorBlinkingStyle.Expand;\n\t\tcase 'solid': return TextEditorCursorBlinkingStyle.Solid;\n\t}\n}\n\n//#endregion\n\n//#region cursorStyle\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin' {\n\tswitch (cursorStyle) {\n\t\tcase TextEditorCursorStyle.Line: return 'line';\n\t\tcase TextEditorCursorStyle.Block: return 'block';\n\t\tcase TextEditorCursorStyle.Underline: return 'underline';\n\t\tcase TextEditorCursorStyle.LineThin: return 'line-thin';\n\t\tcase TextEditorCursorStyle.BlockOutline: return 'block-outline';\n\t\tcase TextEditorCursorStyle.UnderlineThin: return 'underline-thin';\n\t}\n}\n\nfunction _cursorStyleFromString(cursorStyle: 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin'): TextEditorCursorStyle {\n\tswitch (cursorStyle) {\n\t\tcase 'line': return TextEditorCursorStyle.Line;\n\t\tcase 'block': return TextEditorCursorStyle.Block;\n\t\tcase 'underline': return TextEditorCursorStyle.Underline;\n\t\tcase 'line-thin': return TextEditorCursorStyle.LineThin;\n\t\tcase 'block-outline': return TextEditorCursorStyle.BlockOutline;\n\t\tcase 'underline-thin': return TextEditorCursorStyle.UnderlineThin;\n\t}\n}\n\n//#endregion\n\n//#region editorClassName\n\nclass EditorClassName extends ComputedEditorOption<EditorOption.editorClassName, string> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.editorClassName, [EditorOption.mouseStyle, EditorOption.extraEditorClassName]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: string): string {\n\t\tconst classNames = ['monaco-editor'];\n\t\tif (options.get(EditorOption.extraEditorClassName)) {\n\t\t\tclassNames.push(options.get(EditorOption.extraEditorClassName));\n\t\t}\n\t\tif (env.extraEditorClassName) {\n\t\t\tclassNames.push(env.extraEditorClassName);\n\t\t}\n\t\tif (options.get(EditorOption.mouseStyle) === 'default') {\n\t\t\tclassNames.push('mouse-default');\n\t\t} else if (options.get(EditorOption.mouseStyle) === 'copy') {\n\t\t\tclassNames.push('mouse-copy');\n\t\t}\n\n\t\tif (options.get(EditorOption.showUnused)) {\n\t\t\tclassNames.push('showUnused');\n\t\t}\n\n\t\tif (options.get(EditorOption.showDeprecated)) {\n\t\t\tclassNames.push('showDeprecated');\n\t\t}\n\n\t\treturn classNames.join(' ');\n\t}\n}\n\n//#endregion\n\n//#region emptySelectionClipboard\n\nclass EditorEmptySelectionClipboard extends EditorBooleanOption<EditorOption.emptySelectionClipboard> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.emptySelectionClipboard, 'emptySelectionClipboard', true,\n\t\t\t{ description: nls.localize('emptySelectionClipboard', \"Controls whether copying without a selection copies the current line.\") }\n\t\t);\n\t}\n\n\tpublic override compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: boolean): boolean {\n\t\treturn value && env.emptySelectionClipboard;\n\t}\n}\n\n//#endregion\n\n//#region find\n\n/**\n * Configuration options for editor find widget\n */\nexport interface IEditorFindOptions {\n\t/**\n\t* Controls whether the cursor should move to find matches while typing.\n\t*/\n\tcursorMoveOnType?: boolean;\n\t/**\n\t * Controls if we seed search string in the Find Widget with editor selection.\n\t */\n\tseedSearchStringFromSelection?: boolean;\n\t/**\n\t * Controls if Find in Selection flag is turned on in the editor.\n\t */\n\tautoFindInSelection?: 'never' | 'always' | 'multiline';\n\t/*\n\t * Controls whether the Find Widget should add extra lines on top of the editor.\n\t */\n\taddExtraSpaceOnTop?: boolean;\n\t/**\n\t * @internal\n\t * Controls if the Find Widget should read or modify the shared find clipboard on macOS\n\t */\n\tglobalFindClipboard?: boolean;\n\t/**\n\t * Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found\n\t */\n\tloop?: boolean;\n}\n\nexport type EditorFindOptions = Readonly<Required<IEditorFindOptions>>;\n\nclass EditorFind extends BaseEditorOption<EditorOption.find, EditorFindOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorFindOptions = {\n\t\t\tcursorMoveOnType: true,\n\t\t\tseedSearchStringFromSelection: true,\n\t\t\tautoFindInSelection: 'never',\n\t\t\tglobalFindClipboard: false,\n\t\t\taddExtraSpaceOnTop: true,\n\t\t\tloop: true\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.find, 'find', defaults,\n\t\t\t{\n\t\t\t\t'editor.find.cursorMoveOnType': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.cursorMoveOnType,\n\t\t\t\t\tdescription: nls.localize('find.cursorMoveOnType', \"Controls whether the cursor should jump to find matches while typing.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.seedSearchStringFromSelection': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.seedSearchStringFromSelection,\n\t\t\t\t\tdescription: nls.localize('find.seedSearchStringFromSelection', \"Controls whether the search string in the Find Widget is seeded from the editor selection.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.autoFindInSelection': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['never', 'always', 'multiline'],\n\t\t\t\t\tdefault: defaults.autoFindInSelection,\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.never', 'Never turn on Find in selection automatically (default).'),\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.always', 'Always turn on Find in selection automatically.'),\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.multiline', 'Turn on Find in selection automatically when multiple lines of content are selected.')\n\t\t\t\t\t],\n\t\t\t\t\tdescription: nls.localize('find.autoFindInSelection', \"Controls the condition for turning on find in selection automatically.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.globalFindClipboard': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.globalFindClipboard,\n\t\t\t\t\tdescription: nls.localize('find.globalFindClipboard', \"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.\"),\n\t\t\t\t\tincluded: platform.isMacintosh\n\t\t\t\t},\n\t\t\t\t'editor.find.addExtraSpaceOnTop': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.addExtraSpaceOnTop,\n\t\t\t\t\tdescription: nls.localize('find.addExtraSpaceOnTop', \"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.loop': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.loop,\n\t\t\t\t\tdescription: nls.localize('find.loop', \"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.\")\n\t\t\t\t},\n\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorFindOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorFindOptions;\n\t\treturn {\n\t\t\tcursorMoveOnType: boolean(input.cursorMoveOnType, this.defaultValue.cursorMoveOnType),\n\t\t\tseedSearchStringFromSelection: boolean(input.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection),\n\t\t\tautoFindInSelection: typeof _input.autoFindInSelection === 'boolean'\n\t\t\t\t? (_input.autoFindInSelection ? 'always' : 'never')\n\t\t\t\t: stringSet<'never' | 'always' | 'multiline'>(input.autoFindInSelection, this.defaultValue.autoFindInSelection, ['never', 'always', 'multiline']),\n\t\t\tglobalFindClipboard: boolean(input.globalFindClipboard, this.defaultValue.globalFindClipboard),\n\t\t\taddExtraSpaceOnTop: boolean(input.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop),\n\t\t\tloop: boolean(input.loop, this.defaultValue.loop),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region fontLigatures\n\n/**\n * @internal\n */\nexport class EditorFontLigatures extends BaseEditorOption<EditorOption.fontLigatures, string> {\n\n\tpublic static OFF = '\"liga\" off, \"calt\" off';\n\tpublic static ON = '\"liga\" on, \"calt\" on';\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.fontLigatures, 'fontLigatures', EditorFontLigatures.OFF,\n\t\t\t{\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('fontLigatures', \"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('fontFeatureSettings', \"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.\")\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdescription: nls.localize('fontLigaturesGeneral', \"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.\"),\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): string {\n\t\tif (typeof input === 'undefined') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tif (typeof input === 'string') {\n\t\t\tif (input === 'false') {\n\t\t\t\treturn EditorFontLigatures.OFF;\n\t\t\t}\n\t\t\tif (input === 'true') {\n\t\t\t\treturn EditorFontLigatures.ON;\n\t\t\t}\n\t\t\treturn input;\n\t\t}\n\t\tif (Boolean(input)) {\n\t\t\treturn EditorFontLigatures.ON;\n\t\t}\n\t\treturn EditorFontLigatures.OFF;\n\t}\n}\n\n//#endregion\n\n//#region fontInfo\n\nclass EditorFontInfo extends ComputedEditorOption<EditorOption.fontInfo, FontInfo> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.fontInfo);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: FontInfo): FontInfo {\n\t\treturn env.fontInfo;\n\t}\n}\n\n//#endregion\n\n//#region fontSize\n\nclass EditorFontSize extends SimpleEditorOption<EditorOption.fontSize, number> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.fontSize, 'fontSize', EDITOR_FONT_DEFAULTS.fontSize,\n\t\t\t{\n\t\t\t\ttype: 'number',\n\t\t\t\tminimum: 6,\n\t\t\t\tmaximum: 100,\n\t\t\t\tdefault: EDITOR_FONT_DEFAULTS.fontSize,\n\t\t\t\tdescription: nls.localize('fontSize', \"Controls the font size in pixels.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic override validate(input: any): number {\n\t\tlet r = EditorFloatOption.float(input, this.defaultValue);\n\t\tif (r === 0) {\n\t\t\treturn EDITOR_FONT_DEFAULTS.fontSize;\n\t\t}\n\t\treturn EditorFloatOption.clamp(r, 6, 100);\n\t}\n\tpublic override compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: number): number {\n\t\t// The final fontSize respects the editor zoom level.\n\t\t// So take the result from env.fontInfo\n\t\treturn env.fontInfo.fontSize;\n\t}\n}\n\n//#endregion\n\n//#region fontWeight\n\nclass EditorFontWeight extends BaseEditorOption<EditorOption.fontWeight, string> {\n\tprivate static SUGGESTION_VALUES = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\tprivate static MINIMUM_VALUE = 1;\n\tprivate static MAXIMUM_VALUE = 1000;\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.fontWeight, 'fontWeight', EDITOR_FONT_DEFAULTS.fontWeight,\n\t\t\t{\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tminimum: EditorFontWeight.MINIMUM_VALUE,\n\t\t\t\t\t\tmaximum: EditorFontWeight.MAXIMUM_VALUE,\n\t\t\t\t\t\terrorMessage: nls.localize('fontWeightErrorMessage', \"Only \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000 are allowed.\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tpattern: '^(normal|bold|1000|[1-9][0-9]{0,2})$'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tenum: EditorFontWeight.SUGGESTION_VALUES\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdefault: EDITOR_FONT_DEFAULTS.fontWeight,\n\t\t\t\tdescription: nls.localize('fontWeight', \"Controls the font weight. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): string {\n\t\tif (input === 'normal' || input === 'bold') {\n\t\t\treturn input;\n\t\t}\n\t\treturn String(EditorIntOption.clampedInt(input, EDITOR_FONT_DEFAULTS.fontWeight, EditorFontWeight.MINIMUM_VALUE, EditorFontWeight.MAXIMUM_VALUE));\n\t}\n}\n\n//#endregion\n\n//#region gotoLocation\n\nexport type GoToLocationValues = 'peek' | 'gotoAndPeek' | 'goto';\n\n/**\n * Configuration options for go to location\n */\nexport interface IGotoLocationOptions {\n\n\tmultiple?: GoToLocationValues;\n\n\tmultipleDefinitions?: GoToLocationValues;\n\tmultipleTypeDefinitions?: GoToLocationValues;\n\tmultipleDeclarations?: GoToLocationValues;\n\tmultipleImplementations?: GoToLocationValues;\n\tmultipleReferences?: GoToLocationValues;\n\n\talternativeDefinitionCommand?: string;\n\talternativeTypeDefinitionCommand?: string;\n\talternativeDeclarationCommand?: string;\n\talternativeImplementationCommand?: string;\n\talternativeReferenceCommand?: string;\n}\n\nexport type GoToLocationOptions = Readonly<Required<IGotoLocationOptions>>;\n\nclass EditorGoToLocation extends BaseEditorOption<EditorOption.gotoLocation, GoToLocationOptions> {\n\n\tconstructor() {\n\t\tconst defaults: GoToLocationOptions = {\n\t\t\tmultiple: 'peek',\n\t\t\tmultipleDefinitions: 'peek',\n\t\t\tmultipleTypeDefinitions: 'peek',\n\t\t\tmultipleDeclarations: 'peek',\n\t\t\tmultipleImplementations: 'peek',\n\t\t\tmultipleReferences: 'peek',\n\t\t\talternativeDefinitionCommand: 'editor.action.goToReferences',\n\t\t\talternativeTypeDefinitionCommand: 'editor.action.goToReferences',\n\t\t\talternativeDeclarationCommand: 'editor.action.goToReferences',\n\t\t\talternativeImplementationCommand: '',\n\t\t\talternativeReferenceCommand: '',\n\t\t};\n\t\tconst jsonSubset: IJSONSchema = {\n\t\t\ttype: 'string',\n\t\t\tenum: ['peek', 'gotoAndPeek', 'goto'],\n\t\t\tdefault: defaults.multiple,\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.peek', 'Show peek view of the results (default)'),\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.gotoAndPeek', 'Go to the primary result and show a peek view'),\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.goto', 'Go to the primary result and enable peek-less navigation to others')\n\t\t\t]\n\t\t};\n\t\tconst alternativeCommandOptions = ['', 'editor.action.referenceSearch.trigger', 'editor.action.goToReferences', 'editor.action.peekImplementation', 'editor.action.goToImplementation', 'editor.action.peekTypeDefinition', 'editor.action.goToTypeDefinition', 'editor.action.peekDeclaration', 'editor.action.revealDeclaration', 'editor.action.peekDefinition', 'editor.action.revealDefinitionAside', 'editor.action.revealDefinition'];\n\t\tsuper(\n\t\t\tEditorOption.gotoLocation, 'gotoLocation', defaults,\n\t\t\t{\n\t\t\t\t'editor.gotoLocation.multiple': {\n\t\t\t\t\tdeprecationMessage: nls.localize('editor.gotoLocation.multiple.deprecated', \"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.\"),\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleDefinitions': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleDefinitions', \"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleTypeDefinitions': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleTypeDefinitions', \"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleDeclarations': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleDeclarations', \"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleImplementations': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleImplemenattions', \"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleReferences': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleReferences', \"Controls the behavior the 'Go to References'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeDefinitionCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeDefinitionCommand,\n\t\t\t\t\tenum: alternativeCommandOptions,\n\t\t\t\t\tdescription: nls.localize('alternativeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeTypeDefinitionCommand,\n\t\t\t\t\tenum: alternativeCommandOptions,\n\t\t\t\t\tdescription: nls.localize('alternativeTypeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeDeclarationCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeDeclarationCommand,\n\t\t\t\t\tenum: alternativeCommandOptions,\n\t\t\t\t\tdescription: nls.localize('alternativeDeclarationCommand', \"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeImplementationCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeImplementationCommand,\n\t\t\t\t\tenum: alternativeCommandOptions,\n\t\t\t\t\tdescription: nls.localize('alternativeImplementationCommand', \"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeReferenceCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeReferenceCommand,\n\t\t\t\t\tenum: alternativeCommandOptions,\n\t\t\t\t\tdescription: nls.localize('alternativeReferenceCommand', \"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): GoToLocationOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IGotoLocationOptions;\n\t\treturn {\n\t\t\tmultiple: stringSet<GoToLocationValues>(input.multiple, this.defaultValue.multiple!, ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleDefinitions: input.multipleDefinitions ?? stringSet<GoToLocationValues>(input.multipleDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleTypeDefinitions: input.multipleTypeDefinitions ?? stringSet<GoToLocationValues>(input.multipleTypeDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleDeclarations: input.multipleDeclarations ?? stringSet<GoToLocationValues>(input.multipleDeclarations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleImplementations: input.multipleImplementations ?? stringSet<GoToLocationValues>(input.multipleImplementations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleReferences: input.multipleReferences ?? stringSet<GoToLocationValues>(input.multipleReferences, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\talternativeDefinitionCommand: EditorStringOption.string(input.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand),\n\t\t\talternativeTypeDefinitionCommand: EditorStringOption.string(input.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand),\n\t\t\talternativeDeclarationCommand: EditorStringOption.string(input.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand),\n\t\t\talternativeImplementationCommand: EditorStringOption.string(input.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand),\n\t\t\talternativeReferenceCommand: EditorStringOption.string(input.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region hover\n\n/**\n * Configuration options for editor hover\n */\nexport interface IEditorHoverOptions {\n\t/**\n\t * Enable the hover.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Delay for showing the hover.\n\t * Defaults to 300.\n\t */\n\tdelay?: number;\n\t/**\n\t * Is the hover sticky such that it can be clicked and its contents selected?\n\t * Defaults to true.\n\t */\n\tsticky?: boolean;\n}\n\nexport type EditorHoverOptions = Readonly<Required<IEditorHoverOptions>>;\n\nclass EditorHover extends BaseEditorOption<EditorOption.hover, EditorHoverOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorHoverOptions = {\n\t\t\tenabled: true,\n\t\t\tdelay: 300,\n\t\t\tsticky: true\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.hover, 'hover', defaults,\n\t\t\t{\n\t\t\t\t'editor.hover.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('hover.enabled', \"Controls whether the hover is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.hover.delay': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.delay,\n\t\t\t\t\tdescription: nls.localize('hover.delay', \"Controls the delay in milliseconds after which the hover is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.hover.sticky': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.sticky,\n\t\t\t\t\tdescription: nls.localize('hover.sticky', \"Controls whether the hover should remain visible when mouse is moved over it.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorHoverOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorHoverOptions;\n\t\treturn {\n\t\t\tenabled: boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tdelay: EditorIntOption.clampedInt(input.delay, this.defaultValue.delay, 0, 10000),\n\t\t\tsticky: boolean(input.sticky, this.defaultValue.sticky)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region layoutInfo\n\n/**\n * A description for the overview ruler position.\n */\nexport interface OverviewRulerPosition {\n\t/**\n\t * Width of the overview ruler\n\t */\n\treadonly width: number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\treadonly height: number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\treadonly top: number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\treadonly right: number;\n}\n\nexport const enum RenderMinimap {\n\tNone = 0,\n\tText = 1,\n\tBlocks = 2,\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface EditorLayoutInfo {\n\n\t/**\n\t * Full editor width.\n\t */\n\treadonly width: number;\n\t/**\n\t * Full editor height.\n\t */\n\treadonly height: number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\treadonly glyphMarginLeft: number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\treadonly glyphMarginWidth: number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\treadonly lineNumbersLeft: number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\treadonly lineNumbersWidth: number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\treadonly decorationsLeft: number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\treadonly decorationsWidth: number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\treadonly contentLeft: number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\treadonly contentWidth: number;\n\n\t/**\n\t * Layout information for the minimap\n\t */\n\treadonly minimap: EditorMinimapLayoutInfo;\n\n\t/**\n\t * The number of columns (of typical characters) fitting on a viewport line.\n\t */\n\treadonly viewportColumn: number;\n\n\treadonly isWordWrapMinified: boolean;\n\treadonly isViewportWrapping: boolean;\n\treadonly wrappingColumn: number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\treadonly verticalScrollbarWidth: number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\treadonly horizontalScrollbarHeight: number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\treadonly overviewRuler: OverviewRulerPosition;\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface EditorMinimapLayoutInfo {\n\treadonly renderMinimap: RenderMinimap;\n\treadonly minimapLeft: number;\n\treadonly minimapWidth: number;\n\treadonly minimapHeightIsEditorHeight: boolean;\n\treadonly minimapIsSampling: boolean;\n\treadonly minimapScale: number;\n\treadonly minimapLineHeight: number;\n\treadonly minimapCanvasInnerWidth: number;\n\treadonly minimapCanvasInnerHeight: number;\n\treadonly minimapCanvasOuterWidth: number;\n\treadonly minimapCanvasOuterHeight: number;\n}\n\n/**\n * @internal\n */\nexport interface EditorLayoutInfoComputerEnv {\n\treadonly memory: ComputeOptionsMemory | null;\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly lineHeight: number;\n\treadonly viewLineCount: number;\n\treadonly lineNumbersDigitCount: number;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly maxDigitWidth: number;\n\treadonly pixelRatio: number;\n}\n\n/**\n * @internal\n */\nexport interface IEditorLayoutComputerInput {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly lineHeight: number;\n\treadonly lineNumbersDigitCount: number;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly maxDigitWidth: number;\n\treadonly pixelRatio: number;\n\treadonly glyphMargin: boolean;\n\treadonly lineDecorationsWidth: string | number;\n\treadonly folding: boolean;\n\treadonly minimap: Readonly<Required<IEditorMinimapOptions>>;\n\treadonly scrollbar: InternalEditorScrollbarOptions;\n\treadonly lineNumbers: InternalEditorRenderLineNumbersOptions;\n\treadonly lineNumbersMinChars: number;\n\treadonly scrollBeyondLastLine: boolean;\n\treadonly wordWrap: 'wordWrapColumn' | 'on' | 'off' | 'bounded';\n\treadonly wordWrapColumn: number;\n\treadonly wordWrapMinified: boolean;\n\treadonly accessibilitySupport: AccessibilitySupport;\n}\n\n/**\n * @internal\n */\nexport interface IMinimapLayoutInput {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly lineHeight: number;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly pixelRatio: number;\n\treadonly scrollBeyondLastLine: boolean;\n\treadonly minimap: Readonly<Required<IEditorMinimapOptions>>;\n\treadonly verticalScrollbarWidth: number;\n\treadonly viewLineCount: number;\n\treadonly remainingWidth: number;\n\treadonly isViewportWrapping: boolean;\n}\n\n/**\n * @internal\n */\nexport class EditorLayoutInfoComputer extends ComputedEditorOption<EditorOption.layoutInfo, EditorLayoutInfo> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.layoutInfo,\n\t\t\t[\n\t\t\t\tEditorOption.glyphMargin, EditorOption.lineDecorationsWidth, EditorOption.folding,\n\t\t\t\tEditorOption.minimap, EditorOption.scrollbar, EditorOption.lineNumbers,\n\t\t\t\tEditorOption.lineNumbersMinChars, EditorOption.scrollBeyondLastLine,\n\t\t\t\tEditorOption.wordWrap, EditorOption.wordWrapColumn, EditorOption.wordWrapOverride1, EditorOption.wordWrapOverride2,\n\t\t\t\tEditorOption.accessibilitySupport\n\t\t\t]\n\t\t);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: EditorLayoutInfo): EditorLayoutInfo {\n\t\treturn EditorLayoutInfoComputer.computeLayout(options, {\n\t\t\tmemory: env.memory,\n\t\t\touterWidth: env.outerWidth,\n\t\t\touterHeight: env.outerHeight,\n\t\t\tisDominatedByLongLines: env.isDominatedByLongLines,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\tviewLineCount: env.viewLineCount,\n\t\t\tlineNumbersDigitCount: env.lineNumbersDigitCount,\n\t\t\ttypicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n\t\t\tmaxDigitWidth: env.fontInfo.maxDigitWidth,\n\t\t\tpixelRatio: env.pixelRatio\n\t\t});\n\t}\n\n\tpublic static computeContainedMinimapLineCount(input: {\n\t\tviewLineCount: number;\n\t\tscrollBeyondLastLine: boolean;\n\t\theight: number;\n\t\tlineHeight: number;\n\t\tpixelRatio: number;\n\t}): { typicalViewportLineCount: number; extraLinesBeyondLastLine: number; desiredRatio: number; minimapLineCount: number; } {\n\t\tconst typicalViewportLineCount = input.height / input.lineHeight;\n\t\tconst extraLinesBeyondLastLine = input.scrollBeyondLastLine ? (typicalViewportLineCount - 1) : 0;\n\t\tconst desiredRatio = (input.viewLineCount + extraLinesBeyondLastLine) / (input.pixelRatio * input.height);\n\t\tconst minimapLineCount = Math.floor(input.viewLineCount / desiredRatio);\n\t\treturn { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount };\n\t}\n\n\tprivate static _computeMinimapLayout(input: IMinimapLayoutInput, memory: ComputeOptionsMemory): EditorMinimapLayoutInfo {\n\t\tconst outerWidth = input.outerWidth;\n\t\tconst outerHeight = input.outerHeight;\n\t\tconst pixelRatio = input.pixelRatio;\n\n\t\tif (!input.minimap.enabled) {\n\t\t\treturn {\n\t\t\t\trenderMinimap: RenderMinimap.None,\n\t\t\t\tminimapLeft: 0,\n\t\t\t\tminimapWidth: 0,\n\t\t\t\tminimapHeightIsEditorHeight: false,\n\t\t\t\tminimapIsSampling: false,\n\t\t\t\tminimapScale: 1,\n\t\t\t\tminimapLineHeight: 1,\n\t\t\t\tminimapCanvasInnerWidth: 0,\n\t\t\t\tminimapCanvasInnerHeight: Math.floor(pixelRatio * outerHeight),\n\t\t\t\tminimapCanvasOuterWidth: 0,\n\t\t\t\tminimapCanvasOuterHeight: outerHeight,\n\t\t\t};\n\t\t}\n\n\t\t// Can use memory if only the `viewLineCount` and `remainingWidth` have changed\n\t\tconst stableMinimapLayoutInput = memory.stableMinimapLayoutInput;\n\t\tconst couldUseMemory = (\n\t\t\tstableMinimapLayoutInput\n\t\t\t// && input.outerWidth === lastMinimapLayoutInput.outerWidth !!! INTENTIONAL OMITTED\n\t\t\t&& input.outerHeight === stableMinimapLayoutInput.outerHeight\n\t\t\t&& input.lineHeight === stableMinimapLayoutInput.lineHeight\n\t\t\t&& input.typicalHalfwidthCharacterWidth === stableMinimapLayoutInput.typicalHalfwidthCharacterWidth\n\t\t\t&& input.pixelRatio === stableMinimapLayoutInput.pixelRatio\n\t\t\t&& input.scrollBeyondLastLine === stableMinimapLayoutInput.scrollBeyondLastLine\n\t\t\t&& input.minimap.enabled === stableMinimapLayoutInput.minimap.enabled\n\t\t\t&& input.minimap.side === stableMinimapLayoutInput.minimap.side\n\t\t\t&& input.minimap.size === stableMinimapLayoutInput.minimap.size\n\t\t\t&& input.minimap.showSlider === stableMinimapLayoutInput.minimap.showSlider\n\t\t\t&& input.minimap.renderCharacters === stableMinimapLayoutInput.minimap.renderCharacters\n\t\t\t&& input.minimap.maxColumn === stableMinimapLayoutInput.minimap.maxColumn\n\t\t\t&& input.minimap.scale === stableMinimapLayoutInput.minimap.scale\n\t\t\t&& input.verticalScrollbarWidth === stableMinimapLayoutInput.verticalScrollbarWidth\n\t\t\t// && input.viewLineCount === lastMinimapLayoutInput.viewLineCount !!! INTENTIONAL OMITTED\n\t\t\t// && input.remainingWidth === lastMinimapLayoutInput.remainingWidth !!! INTENTIONAL OMITTED\n\t\t\t&& input.isViewportWrapping === stableMinimapLayoutInput.isViewportWrapping\n\t\t);\n\n\t\tconst lineHeight = input.lineHeight;\n\t\tconst typicalHalfwidthCharacterWidth = input.typicalHalfwidthCharacterWidth;\n\t\tconst scrollBeyondLastLine = input.scrollBeyondLastLine;\n\t\tconst minimapRenderCharacters = input.minimap.renderCharacters;\n\t\tlet minimapScale = (pixelRatio >= 2 ? Math.round(input.minimap.scale * 2) : input.minimap.scale);\n\t\tconst minimapMaxColumn = input.minimap.maxColumn;\n\t\tconst minimapSize = input.minimap.size;\n\t\tconst minimapSide = input.minimap.side;\n\t\tconst verticalScrollbarWidth = input.verticalScrollbarWidth;\n\t\tconst viewLineCount = input.viewLineCount;\n\t\tconst remainingWidth = input.remainingWidth;\n\t\tconst isViewportWrapping = input.isViewportWrapping;\n\n\t\tconst baseCharHeight = minimapRenderCharacters ? 2 : 3;\n\t\tlet minimapCanvasInnerHeight = Math.floor(pixelRatio * outerHeight);\n\t\tconst minimapCanvasOuterHeight = minimapCanvasInnerHeight / pixelRatio;\n\t\tlet minimapHeightIsEditorHeight = false;\n\t\tlet minimapIsSampling = false;\n\t\tlet minimapLineHeight = baseCharHeight * minimapScale;\n\t\tlet minimapCharWidth = minimapScale / pixelRatio;\n\t\tlet minimapWidthMultiplier: number = 1;\n\n\t\tif (minimapSize === 'fill' || minimapSize === 'fit') {\n\t\t\tconst { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n\t\t\t\tviewLineCount: viewLineCount,\n\t\t\t\tscrollBeyondLastLine: scrollBeyondLastLine,\n\t\t\t\theight: outerHeight,\n\t\t\t\tlineHeight: lineHeight,\n\t\t\t\tpixelRatio: pixelRatio\n\t\t\t});\n\t\t\t// ratio is intentionally not part of the layout to avoid the layout changing all the time\n\t\t\t// when doing sampling\n\t\t\tconst ratio = viewLineCount / minimapLineCount;\n\n\t\t\tif (ratio > 1) {\n\t\t\t\tminimapHeightIsEditorHeight = true;\n\t\t\t\tminimapIsSampling = true;\n\t\t\t\tminimapScale = 1;\n\t\t\t\tminimapLineHeight = 1;\n\t\t\t\tminimapCharWidth = minimapScale / pixelRatio;\n\t\t\t} else {\n\t\t\t\tlet fitBecomesFill = false;\n\t\t\t\tlet maxMinimapScale = minimapScale + 1;\n\n\t\t\t\tif (minimapSize === 'fit') {\n\t\t\t\t\tconst effectiveMinimapHeight = Math.ceil((viewLineCount + extraLinesBeyondLastLine) * minimapLineHeight);\n\t\t\t\t\tif (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n\t\t\t\t\t\t// There is a loop when using `fit` and viewport wrapping:\n\t\t\t\t\t\t// - view line count impacts minimap layout\n\t\t\t\t\t\t// - minimap layout impacts viewport width\n\t\t\t\t\t\t// - viewport width impacts view line count\n\t\t\t\t\t\t// To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n\t\t\t\t\t\tfitBecomesFill = true;\n\t\t\t\t\t\tmaxMinimapScale = memory.stableFitMaxMinimapScale;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfitBecomesFill = (effectiveMinimapHeight > minimapCanvasInnerHeight);\n\t\t\t\t\t\tif (isViewportWrapping && fitBecomesFill) {\n\t\t\t\t\t\t\t// remember for next time\n\t\t\t\t\t\t\tmemory.stableMinimapLayoutInput = input;\n\t\t\t\t\t\t\tmemory.stableFitRemainingWidth = remainingWidth;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmemory.stableMinimapLayoutInput = null;\n\t\t\t\t\t\t\tmemory.stableFitRemainingWidth = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (minimapSize === 'fill' || fitBecomesFill) {\n\t\t\t\t\tminimapHeightIsEditorHeight = true;\n\t\t\t\t\tconst configuredMinimapScale = minimapScale;\n\t\t\t\t\tminimapLineHeight = Math.min(lineHeight * pixelRatio, Math.max(1, Math.floor(1 / desiredRatio)));\n\t\t\t\t\tminimapScale = Math.min(maxMinimapScale, Math.max(1, Math.floor(minimapLineHeight / baseCharHeight)));\n\t\t\t\t\tif (minimapScale > configuredMinimapScale) {\n\t\t\t\t\t\tminimapWidthMultiplier = Math.min(2, minimapScale / configuredMinimapScale);\n\t\t\t\t\t}\n\t\t\t\t\tminimapCharWidth = minimapScale / pixelRatio / minimapWidthMultiplier;\n\t\t\t\t\tminimapCanvasInnerHeight = Math.ceil((Math.max(typicalViewportLineCount, viewLineCount + extraLinesBeyondLastLine)) * minimapLineHeight);\n\t\t\t\t\tif (isViewportWrapping && fitBecomesFill) {\n\t\t\t\t\t\tmemory.stableFitMaxMinimapScale = minimapScale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Given:\n\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\t// viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n\t\t// minimapWidth = viewportColumn * minimapCharWidth\n\t\t// contentWidth = remainingWidth - minimapWidth\n\t\t// What are good values for contentWidth and minimapWidth ?\n\n\t\t// minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t// (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t// minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n\n\t\tconst minimapMaxWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n\t\tconst minimapWidth = Math.min(minimapMaxWidth, Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth))) + MINIMAP_GUTTER_WIDTH);\n\n\t\tlet minimapCanvasInnerWidth = Math.floor(pixelRatio * minimapWidth);\n\t\tconst minimapCanvasOuterWidth = minimapCanvasInnerWidth / pixelRatio;\n\t\tminimapCanvasInnerWidth = Math.floor(minimapCanvasInnerWidth * minimapWidthMultiplier);\n\n\t\tconst renderMinimap = (minimapRenderCharacters ? RenderMinimap.Text : RenderMinimap.Blocks);\n\t\tconst minimapLeft = (minimapSide === 'left' ? 0 : (outerWidth - minimapWidth - verticalScrollbarWidth));\n\n\t\treturn {\n\t\t\trenderMinimap,\n\t\t\tminimapLeft,\n\t\t\tminimapWidth,\n\t\t\tminimapHeightIsEditorHeight,\n\t\t\tminimapIsSampling,\n\t\t\tminimapScale,\n\t\t\tminimapLineHeight,\n\t\t\tminimapCanvasInnerWidth,\n\t\t\tminimapCanvasInnerHeight,\n\t\t\tminimapCanvasOuterWidth,\n\t\t\tminimapCanvasOuterHeight,\n\t\t};\n\t}\n\n\tpublic static computeLayout(options: IComputedEditorOptions, env: EditorLayoutInfoComputerEnv): EditorLayoutInfo {\n\t\tconst outerWidth = env.outerWidth | 0;\n\t\tconst outerHeight = env.outerHeight | 0;\n\t\tconst lineHeight = env.lineHeight | 0;\n\t\tconst lineNumbersDigitCount = env.lineNumbersDigitCount | 0;\n\t\tconst typicalHalfwidthCharacterWidth = env.typicalHalfwidthCharacterWidth;\n\t\tconst maxDigitWidth = env.maxDigitWidth;\n\t\tconst pixelRatio = env.pixelRatio;\n\t\tconst viewLineCount = env.viewLineCount;\n\n\t\tconst wordWrapOverride2 = options.get(EditorOption.wordWrapOverride2);\n\t\tconst wordWrapOverride1 = (wordWrapOverride2 === 'inherit' ? options.get(EditorOption.wordWrapOverride1) : wordWrapOverride2);\n\t\tconst wordWrap = (wordWrapOverride1 === 'inherit' ? options.get(EditorOption.wordWrap) : wordWrapOverride1);\n\n\t\tconst wordWrapColumn = options.get(EditorOption.wordWrapColumn);\n\t\tconst accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tconst isDominatedByLongLines = env.isDominatedByLongLines;\n\n\t\tconst showGlyphMargin = options.get(EditorOption.glyphMargin);\n\t\tconst showLineNumbers = (options.get(EditorOption.lineNumbers).renderType !== RenderLineNumbersType.Off);\n\t\tconst lineNumbersMinChars = options.get(EditorOption.lineNumbersMinChars);\n\t\tconst scrollBeyondLastLine = options.get(EditorOption.scrollBeyondLastLine);\n\t\tconst minimap = options.get(EditorOption.minimap);\n\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst verticalScrollbarWidth = scrollbar.verticalScrollbarSize;\n\t\tconst verticalScrollbarHasArrows = scrollbar.verticalHasArrows;\n\t\tconst scrollbarArrowSize = scrollbar.arrowSize;\n\t\tconst horizontalScrollbarHeight = scrollbar.horizontalScrollbarSize;\n\n\t\tconst rawLineDecorationsWidth = options.get(EditorOption.lineDecorationsWidth);\n\t\tconst folding = options.get(EditorOption.folding);\n\n\t\tlet lineDecorationsWidth: number;\n\t\tif (typeof rawLineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(rawLineDecorationsWidth)) {\n\t\t\tconst multiple = parseFloat(rawLineDecorationsWidth.substr(0, rawLineDecorationsWidth.length - 2));\n\t\t\tlineDecorationsWidth = EditorIntOption.clampedInt(multiple * typicalHalfwidthCharacterWidth, 0, 0, 1000);\n\t\t} else {\n\t\t\tlineDecorationsWidth = EditorIntOption.clampedInt(rawLineDecorationsWidth, 0, 0, 1000);\n\t\t}\n\t\tif (folding) {\n\t\t\tlineDecorationsWidth += 16;\n\t\t}\n\n\t\tlet lineNumbersWidth = 0;\n\t\tif (showLineNumbers) {\n\t\t\tconst digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n\t\t\tlineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n\t\t}\n\n\t\tlet glyphMarginWidth = 0;\n\t\tif (showGlyphMargin) {\n\t\t\tglyphMarginWidth = lineHeight;\n\t\t}\n\n\t\tlet glyphMarginLeft = 0;\n\t\tlet lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n\t\tlet decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n\t\tlet contentLeft = decorationsLeft + lineDecorationsWidth;\n\n\t\tconst remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n\n\t\tlet isWordWrapMinified = false;\n\t\tlet isViewportWrapping = false;\n\t\tlet wrappingColumn = -1;\n\n\t\tif (accessibilitySupport !== AccessibilitySupport.Enabled) {\n\t\t\t// See https://github.com/microsoft/vscode/issues/27766\n\t\t\t// Never enable wrapping when a screen reader is attached\n\t\t\t// because arrow down etc. will not move the cursor in the way\n\t\t\t// a screen reader expects.\n\t\t\tif (wordWrapOverride1 === 'inherit' && isDominatedByLongLines) {\n\t\t\t\t// Force viewport width wrapping if model is dominated by long lines\n\t\t\t\tisWordWrapMinified = true;\n\t\t\t\tisViewportWrapping = true;\n\t\t\t} else if (wordWrap === 'on' || wordWrap === 'bounded') {\n\t\t\t\tisViewportWrapping = true;\n\t\t\t} else if (wordWrap === 'wordWrapColumn') {\n\t\t\t\twrappingColumn = wordWrapColumn;\n\t\t\t}\n\t\t}\n\n\t\tconst minimapLayout = EditorLayoutInfoComputer._computeMinimapLayout({\n\t\t\touterWidth: outerWidth,\n\t\t\touterHeight: outerHeight,\n\t\t\tlineHeight: lineHeight,\n\t\t\ttypicalHalfwidthCharacterWidth: typicalHalfwidthCharacterWidth,\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tscrollBeyondLastLine: scrollBeyondLastLine,\n\t\t\tminimap: minimap,\n\t\t\tverticalScrollbarWidth: verticalScrollbarWidth,\n\t\t\tviewLineCount: viewLineCount,\n\t\t\tremainingWidth: remainingWidth,\n\t\t\tisViewportWrapping: isViewportWrapping,\n\t\t}, env.memory || new ComputeOptionsMemory());\n\n\t\tif (minimapLayout.renderMinimap !== RenderMinimap.None && minimapLayout.minimapLeft === 0) {\n\t\t\t// the minimap is rendered to the left, so move everything to the right\n\t\t\tglyphMarginLeft += minimapLayout.minimapWidth;\n\t\t\tlineNumbersLeft += minimapLayout.minimapWidth;\n\t\t\tdecorationsLeft += minimapLayout.minimapWidth;\n\t\t\tcontentLeft += minimapLayout.minimapWidth;\n\t\t}\n\t\tconst contentWidth = remainingWidth - minimapLayout.minimapWidth;\n\n\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\tconst viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n\n\t\tconst verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n\n\t\tif (isViewportWrapping) {\n\t\t\t// compute the actual wrappingColumn\n\t\t\twrappingColumn = Math.max(1, viewportColumn);\n\t\t\tif (wordWrap === 'bounded') {\n\t\t\t\twrappingColumn = Math.min(wrappingColumn, wordWrapColumn);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\twidth: outerWidth,\n\t\t\theight: outerHeight,\n\n\t\t\tglyphMarginLeft: glyphMarginLeft,\n\t\t\tglyphMarginWidth: glyphMarginWidth,\n\n\t\t\tlineNumbersLeft: lineNumbersLeft,\n\t\t\tlineNumbersWidth: lineNumbersWidth,\n\n\t\t\tdecorationsLeft: decorationsLeft,\n\t\t\tdecorationsWidth: lineDecorationsWidth,\n\n\t\t\tcontentLeft: contentLeft,\n\t\t\tcontentWidth: contentWidth,\n\n\t\t\tminimap: minimapLayout,\n\n\t\t\tviewportColumn: viewportColumn,\n\n\t\t\tisWordWrapMinified: isWordWrapMinified,\n\t\t\tisViewportWrapping: isViewportWrapping,\n\t\t\twrappingColumn: wrappingColumn,\n\n\t\t\tverticalScrollbarWidth: verticalScrollbarWidth,\n\t\t\thorizontalScrollbarHeight: horizontalScrollbarHeight,\n\n\t\t\toverviewRuler: {\n\t\t\t\ttop: verticalArrowSize,\n\t\t\t\twidth: verticalScrollbarWidth,\n\t\t\t\theight: (outerHeight - 2 * verticalArrowSize),\n\t\t\t\tright: 0\n\t\t\t}\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region lightbulb\n\n/**\n * Configuration options for editor lightbulb\n */\nexport interface IEditorLightbulbOptions {\n\t/**\n\t * Enable the lightbulb code action.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n}\n\nexport type EditorLightbulbOptions = Readonly<Required<IEditorLightbulbOptions>>;\n\nclass EditorLightbulb extends BaseEditorOption<EditorOption.lightbulb, EditorLightbulbOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorLightbulbOptions = { enabled: true };\n\t\tsuper(\n\t\t\tEditorOption.lightbulb, 'lightbulb', defaults,\n\t\t\t{\n\t\t\t\t'editor.lightbulb.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('codeActions', \"Enables the code action lightbulb in the editor.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorLightbulbOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorLightbulbOptions;\n\t\treturn {\n\t\t\tenabled: boolean(input.enabled, this.defaultValue.enabled)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region inlineHints\n\n/**\n * Configuration options for editor inlineHints\n */\nexport interface IEditorInlineHintsOptions {\n\t/**\n\t * Enable the inline hints.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\n\t/**\n\t * Font size of inline hints.\n\t * Default to 90% of the editor font size.\n\t */\n\tfontSize?: number;\n\n\t/**\n\t * Font family of inline hints.\n\t * Defaults to editor font family.\n\t */\n\tfontFamily?: string;\n}\n\nexport type EditorInlineHintsOptions = Readonly<Required<IEditorInlineHintsOptions>>;\n\nclass EditorInlineHints extends BaseEditorOption<EditorOption.inlineHints, EditorInlineHintsOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorInlineHintsOptions = { enabled: true, fontSize: 0, fontFamily: EDITOR_FONT_DEFAULTS.fontFamily };\n\t\tsuper(\n\t\t\tEditorOption.inlineHints, 'inlineHints', defaults,\n\t\t\t{\n\t\t\t\t'editor.inlineHints.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('inlineHints.enable', \"Enables the inline hints in the editor.\")\n\t\t\t\t},\n\t\t\t\t'editor.inlineHints.fontSize': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.fontSize,\n\t\t\t\t\tdescription: nls.localize('inlineHints.fontSize', \"Controls font size of inline hints in the editor. When set to `0`, the 90% of `#editor.fontSize#` is used.\")\n\t\t\t\t},\n\t\t\t\t'editor.inlineHints.fontFamily': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.fontFamily,\n\t\t\t\t\tdescription: nls.localize('inlineHints.fontFamily', \"Controls font family of inline hints in the editor.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorInlineHintsOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorInlineHintsOptions;\n\t\treturn {\n\t\t\tenabled: boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tfontSize: EditorIntOption.clampedInt(input.fontSize, this.defaultValue.fontSize, 0, 100),\n\t\t\tfontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region lineHeight\n\nclass EditorLineHeight extends EditorIntOption<EditorOption.lineHeight> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.lineHeight, 'lineHeight',\n\t\t\tEDITOR_FONT_DEFAULTS.lineHeight, 0, 150,\n\t\t\t{ description: nls.localize('lineHeight', \"Controls the line height. Use 0 to compute the line height from the font size.\") }\n\t\t);\n\t}\n\n\tpublic override compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: number): number {\n\t\t// The lineHeight is computed from the fontSize if it is 0.\n\t\t// Moreover, the final lineHeight respects the editor zoom level.\n\t\t// So take the result from env.fontInfo\n\t\treturn env.fontInfo.lineHeight;\n\t}\n}\n\n//#endregion\n\n//#region minimap\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorMinimapOptions {\n\t/**\n\t * Enable the rendering of the minimap.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Control the side of the minimap in editor.\n\t * Defaults to 'right'.\n\t */\n\tside?: 'right' | 'left';\n\t/**\n\t * Control the minimap rendering mode.\n\t * Defaults to 'actual'.\n\t */\n\tsize?: 'proportional' | 'fill' | 'fit';\n\t/**\n\t * Control the rendering of the minimap slider.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowSlider?: 'always' | 'mouseover';\n\t/**\n\t * Render the actual text on a line (as opposed to color blocks).\n\t * Defaults to true.\n\t */\n\trenderCharacters?: boolean;\n\t/**\n\t * Limit the width of the minimap to render at most a certain number of columns.\n\t * Defaults to 120.\n\t */\n\tmaxColumn?: number;\n\t/**\n\t * Relative size of the font in the minimap. Defaults to 1.\n\t */\n\tscale?: number;\n}\n\nexport type EditorMinimapOptions = Readonly<Required<IEditorMinimapOptions>>;\n\nclass EditorMinimap extends BaseEditorOption<EditorOption.minimap, EditorMinimapOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorMinimapOptions = {\n\t\t\tenabled: true,\n\t\t\tsize: 'proportional',\n\t\t\tside: 'right',\n\t\t\tshowSlider: 'mouseover',\n\t\t\trenderCharacters: true,\n\t\t\tmaxColumn: 120,\n\t\t\tscale: 1,\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.minimap, 'minimap', defaults,\n\t\t\t{\n\t\t\t\t'editor.minimap.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('minimap.enabled', \"Controls whether the minimap is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.size': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['proportional', 'fill', 'fit'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('minimap.size.proportional', \"The minimap has the same size as the editor contents (and might scroll).\"),\n\t\t\t\t\t\tnls.localize('minimap.size.fill', \"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).\"),\n\t\t\t\t\t\tnls.localize('minimap.size.fit', \"The minimap will shrink as necessary to never be larger than the editor (no scrolling).\"),\n\t\t\t\t\t],\n\t\t\t\t\tdefault: defaults.size,\n\t\t\t\t\tdescription: nls.localize('minimap.size', \"Controls the size of the minimap.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.side': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['left', 'right'],\n\t\t\t\t\tdefault: defaults.side,\n\t\t\t\t\tdescription: nls.localize('minimap.side', \"Controls the side where to render the minimap.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.showSlider': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['always', 'mouseover'],\n\t\t\t\t\tdefault: defaults.showSlider,\n\t\t\t\t\tdescription: nls.localize('minimap.showSlider', \"Controls when the minimap slider is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.scale': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.scale,\n\t\t\t\t\tminimum: 1,\n\t\t\t\t\tmaximum: 3,\n\t\t\t\t\tenum: [1, 2, 3],\n\t\t\t\t\tdescription: nls.localize('minimap.scale', \"Scale of content drawn in the minimap: 1, 2 or 3.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.renderCharacters': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.renderCharacters,\n\t\t\t\t\tdescription: nls.localize('minimap.renderCharacters', \"Render the actual characters on a line as opposed to color blocks.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.maxColumn': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.maxColumn,\n\t\t\t\t\tdescription: nls.localize('minimap.maxColumn', \"Limit the width of the minimap to render at most a certain number of columns.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorMinimapOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorMinimapOptions;\n\t\treturn {\n\t\t\tenabled: boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tsize: stringSet<'proportional' | 'fill' | 'fit'>(input.size, this.defaultValue.size, ['proportional', 'fill', 'fit']),\n\t\t\tside: stringSet<'right' | 'left'>(input.side, this.defaultValue.side, ['right', 'left']),\n\t\t\tshowSlider: stringSet<'always' | 'mouseover'>(input.showSlider, this.defaultValue.showSlider, ['always', 'mouseover']),\n\t\t\trenderCharacters: boolean(input.renderCharacters, this.defaultValue.renderCharacters),\n\t\t\tscale: EditorIntOption.clampedInt(input.scale, 1, 1, 3),\n\t\t\tmaxColumn: EditorIntOption.clampedInt(input.maxColumn, this.defaultValue.maxColumn, 1, 10000),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region multiCursorModifier\n\nfunction _multiCursorModifierFromString(multiCursorModifier: 'ctrlCmd' | 'alt'): 'altKey' | 'metaKey' | 'ctrlKey' {\n\tif (multiCursorModifier === 'ctrlCmd') {\n\t\treturn (platform.isMacintosh ? 'metaKey' : 'ctrlKey');\n\t}\n\treturn 'altKey';\n}\n\n//#endregion\n\n//#region padding\n\n/**\n * Configuration options for editor padding\n */\nexport interface IEditorPaddingOptions {\n\t/**\n\t * Spacing between top edge of editor and first line.\n\t */\n\ttop?: number;\n\t/**\n\t * Spacing between bottom edge of editor and last line.\n\t */\n\tbottom?: number;\n}\n\nexport interface InternalEditorPaddingOptions {\n\treadonly top: number;\n\treadonly bottom: number;\n}\n\nclass EditorPadding extends BaseEditorOption<EditorOption.padding, InternalEditorPaddingOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.padding, 'padding', { top: 0, bottom: 0 },\n\t\t\t{\n\t\t\t\t'editor.padding.top': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t\tminimum: 0,\n\t\t\t\t\tmaximum: 1000,\n\t\t\t\t\tdescription: nls.localize('padding.top', \"Controls the amount of space between the top edge of the editor and the first line.\")\n\t\t\t\t},\n\t\t\t\t'editor.padding.bottom': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t\tminimum: 0,\n\t\t\t\t\tmaximum: 1000,\n\t\t\t\t\tdescription: nls.localize('padding.bottom', \"Controls the amount of space between the bottom edge of the editor and the last line.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalEditorPaddingOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorPaddingOptions;\n\n\t\treturn {\n\t\t\ttop: EditorIntOption.clampedInt(input.top, 0, 0, 1000),\n\t\t\tbottom: EditorIntOption.clampedInt(input.bottom, 0, 0, 1000)\n\t\t};\n\t}\n}\n//#endregion\n\n//#region parameterHints\n\n/**\n * Configuration options for parameter hints\n */\nexport interface IEditorParameterHintOptions {\n\t/**\n\t * Enable parameter hints.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Enable cycling of parameter hints.\n\t * Defaults to false.\n\t */\n\tcycle?: boolean;\n}\n\nexport type InternalParameterHintOptions = Readonly<Required<IEditorParameterHintOptions>>;\n\nclass EditorParameterHints extends BaseEditorOption<EditorOption.parameterHints, InternalParameterHintOptions> {\n\n\tconstructor() {\n\t\tconst defaults: InternalParameterHintOptions = {\n\t\t\tenabled: true,\n\t\t\tcycle: false\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.parameterHints, 'parameterHints', defaults,\n\t\t\t{\n\t\t\t\t'editor.parameterHints.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('parameterHints.enabled', \"Enables a pop-up that shows parameter documentation and type information as you type.\")\n\t\t\t\t},\n\t\t\t\t'editor.parameterHints.cycle': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.cycle,\n\t\t\t\t\tdescription: nls.localize('parameterHints.cycle', \"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalParameterHintOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorParameterHintOptions;\n\t\treturn {\n\t\t\tenabled: boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tcycle: boolean(input.cycle, this.defaultValue.cycle)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region pixelRatio\n\nclass EditorPixelRatio extends ComputedEditorOption<EditorOption.pixelRatio, number> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.pixelRatio);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: number): number {\n\t\treturn env.pixelRatio;\n\t}\n}\n\n//#endregion\n\n//#region quickSuggestions\n\n/**\n * Configuration options for quick suggestions\n */\nexport interface IQuickSuggestionsOptions {\n\tother?: boolean;\n\tcomments?: boolean;\n\tstrings?: boolean;\n}\n\nexport type ValidQuickSuggestionsOptions = boolean | Readonly<Required<IQuickSuggestionsOptions>>;\n\nclass EditorQuickSuggestions extends BaseEditorOption<EditorOption.quickSuggestions, ValidQuickSuggestionsOptions> {\n\n\tpublic override readonly defaultValue: Readonly<Required<IQuickSuggestionsOptions>>;\n\n\tconstructor() {\n\t\tconst defaults: ValidQuickSuggestionsOptions = {\n\t\t\tother: true,\n\t\t\tcomments: false,\n\t\t\tstrings: false\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.quickSuggestions, 'quickSuggestions', defaults,\n\t\t\t{\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tstrings: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.strings,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.strings', \"Enable quick suggestions inside strings.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomments: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.comments,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.comments', \"Enable quick suggestions inside comments.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.other,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.other', \"Enable quick suggestions outside of strings and comments.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdefault: defaults,\n\t\t\t\tdescription: nls.localize('quickSuggestions', \"Controls whether suggestions should automatically show up while typing.\")\n\t\t\t}\n\t\t);\n\t\tthis.defaultValue = defaults;\n\t}\n\n\tpublic validate(_input: any): ValidQuickSuggestionsOptions {\n\t\tif (typeof _input === 'boolean') {\n\t\t\treturn _input;\n\t\t}\n\t\tif (_input && typeof _input === 'object') {\n\t\t\tconst input = _input as IQuickSuggestionsOptions;\n\t\t\tconst opts = {\n\t\t\t\tother: boolean(input.other, this.defaultValue.other),\n\t\t\t\tcomments: boolean(input.comments, this.defaultValue.comments),\n\t\t\t\tstrings: boolean(input.strings, this.defaultValue.strings),\n\t\t\t};\n\t\t\tif (opts.other && opts.comments && opts.strings) {\n\t\t\t\treturn true; // all on\n\t\t\t} else if (!opts.other && !opts.comments && !opts.strings) {\n\t\t\t\treturn false; // all off\n\t\t\t} else {\n\t\t\t\treturn opts;\n\t\t\t}\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n}\n\n//#endregion\n\n//#region renderLineNumbers\n\nexport type LineNumbersType = 'on' | 'off' | 'relative' | 'interval' | ((lineNumber: number) => string);\n\nexport const enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport interface InternalEditorRenderLineNumbersOptions {\n\treadonly renderType: RenderLineNumbersType;\n\treadonly renderFn: ((lineNumber: number) => string) | null;\n}\n\nclass EditorRenderLineNumbersOption extends BaseEditorOption<EditorOption.lineNumbers, InternalEditorRenderLineNumbersOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.lineNumbers, 'lineNumbers', { renderType: RenderLineNumbersType.On, renderFn: null },\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'relative', 'interval'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tnls.localize('lineNumbers.off', \"Line numbers are not rendered.\"),\n\t\t\t\t\tnls.localize('lineNumbers.on', \"Line numbers are rendered as absolute number.\"),\n\t\t\t\t\tnls.localize('lineNumbers.relative', \"Line numbers are rendered as distance in lines to cursor position.\"),\n\t\t\t\t\tnls.localize('lineNumbers.interval', \"Line numbers are rendered every 10 lines.\")\n\t\t\t\t],\n\t\t\t\tdefault: 'on',\n\t\t\t\tdescription: nls.localize('lineNumbers', \"Controls the display of line numbers.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(lineNumbers: any): InternalEditorRenderLineNumbersOptions {\n\t\tlet renderType: RenderLineNumbersType = this.defaultValue.renderType;\n\t\tlet renderFn: ((lineNumber: number) => string) | null = this.defaultValue.renderFn;\n\n\t\tif (typeof lineNumbers !== 'undefined') {\n\t\t\tif (typeof lineNumbers === 'function') {\n\t\t\t\trenderType = RenderLineNumbersType.Custom;\n\t\t\t\trenderFn = lineNumbers;\n\t\t\t} else if (lineNumbers === 'interval') {\n\t\t\t\trenderType = RenderLineNumbersType.Interval;\n\t\t\t} else if (lineNumbers === 'relative') {\n\t\t\t\trenderType = RenderLineNumbersType.Relative;\n\t\t\t} else if (lineNumbers === 'on') {\n\t\t\t\trenderType = RenderLineNumbersType.On;\n\t\t\t} else {\n\t\t\t\trenderType = RenderLineNumbersType.Off;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trenderType,\n\t\t\trenderFn\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region renderValidationDecorations\n\n/**\n * @internal\n */\nexport function filterValidationDecorations(options: IComputedEditorOptions): boolean {\n\tconst renderValidationDecorations = options.get(EditorOption.renderValidationDecorations);\n\tif (renderValidationDecorations === 'editable') {\n\t\treturn options.get(EditorOption.readOnly);\n\t}\n\treturn renderValidationDecorations === 'on' ? false : true;\n}\n\n//#endregion\n\n//#region rulers\n\nexport interface IRulerOption {\n\treadonly column: number;\n\treadonly color: string | null;\n}\n\nclass EditorRulers extends BaseEditorOption<EditorOption.rulers, IRulerOption[]> {\n\n\tconstructor() {\n\t\tconst defaults: IRulerOption[] = [];\n\t\tconst columnSchema: IJSONSchema = { type: 'number', description: nls.localize('rulers.size', \"Number of monospace characters at which this editor ruler will render.\") };\n\t\tsuper(\n\t\t\tEditorOption.rulers, 'rulers', defaults,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\tcolumnSchema,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: [\n\t\t\t\t\t\t\t\t'object'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tcolumn: columnSchema,\n\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('rulers.color', \"Color of this editor ruler.\"),\n\t\t\t\t\t\t\t\t\tformat: 'color-hex'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tdefault: defaults,\n\t\t\t\tdescription: nls.localize('rulers', \"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): IRulerOption[] {\n\t\tif (Array.isArray(input)) {\n\t\t\tlet rulers: IRulerOption[] = [];\n\t\t\tfor (let _element of input) {\n\t\t\t\tif (typeof _element === 'number') {\n\t\t\t\t\trulers.push({\n\t\t\t\t\t\tcolumn: EditorIntOption.clampedInt(_element, 0, 0, 10000),\n\t\t\t\t\t\tcolor: null\n\t\t\t\t\t});\n\t\t\t\t} else if (_element && typeof _element === 'object') {\n\t\t\t\t\tconst element = _element as IRulerOption;\n\t\t\t\t\trulers.push({\n\t\t\t\t\t\tcolumn: EditorIntOption.clampedInt(element.column, 0, 0, 10000),\n\t\t\t\t\t\tcolor: element.color\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\trulers.sort((a, b) => a.column - b.column);\n\t\t\treturn rulers;\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n}\n\n//#endregion\n\n//#region scrollbar\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Render horizontal scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to true.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\n\t * Defaults to true.\n\t */\n\talwaysConsumeMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical slider.\n\t * Defaults to `verticalScrollbarSize`.\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Height in pixels for the horizontal slider.\n\t * Defaults to `horizontalScrollbarSize`.\n\t */\n\thorizontalSliderSize?: number;\n\t/**\n\t * Scroll gutter clicks move by page vs jump to position.\n\t * Defaults to false.\n\t */\n\tscrollByPage?: boolean;\n}\n\nexport interface InternalEditorScrollbarOptions {\n\treadonly arrowSize: number;\n\treadonly vertical: ScrollbarVisibility;\n\treadonly horizontal: ScrollbarVisibility;\n\treadonly useShadows: boolean;\n\treadonly verticalHasArrows: boolean;\n\treadonly horizontalHasArrows: boolean;\n\treadonly handleMouseWheel: boolean;\n\treadonly alwaysConsumeMouseWheel: boolean;\n\treadonly horizontalScrollbarSize: number;\n\treadonly horizontalSliderSize: number;\n\treadonly verticalScrollbarSize: number;\n\treadonly verticalSliderSize: number;\n\treadonly scrollByPage: boolean;\n}\n\nfunction _scrollbarVisibilityFromString(visibility: string | undefined, defaultValue: ScrollbarVisibility): ScrollbarVisibility {\n\tif (typeof visibility !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (visibility) {\n\t\tcase 'hidden': return ScrollbarVisibility.Hidden;\n\t\tcase 'visible': return ScrollbarVisibility.Visible;\n\t\tdefault: return ScrollbarVisibility.Auto;\n\t}\n}\n\nclass EditorScrollbar extends BaseEditorOption<EditorOption.scrollbar, InternalEditorScrollbarOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.scrollbar, 'scrollbar',\n\t\t\t{\n\t\t\t\tvertical: ScrollbarVisibility.Auto,\n\t\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\t\tarrowSize: 11,\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false,\n\t\t\t\thorizontalScrollbarSize: 12,\n\t\t\t\thorizontalSliderSize: 12,\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\tverticalSliderSize: 14,\n\t\t\t\thandleMouseWheel: true,\n\t\t\t\talwaysConsumeMouseWheel: true,\n\t\t\t\tscrollByPage: false\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalEditorScrollbarOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorScrollbarOptions;\n\t\tconst horizontalScrollbarSize = EditorIntOption.clampedInt(input.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1000);\n\t\tconst verticalScrollbarSize = EditorIntOption.clampedInt(input.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1000);\n\t\treturn {\n\t\t\tarrowSize: EditorIntOption.clampedInt(input.arrowSize, this.defaultValue.arrowSize, 0, 1000),\n\t\t\tvertical: _scrollbarVisibilityFromString(input.vertical, this.defaultValue.vertical),\n\t\t\thorizontal: _scrollbarVisibilityFromString(input.horizontal, this.defaultValue.horizontal),\n\t\t\tuseShadows: boolean(input.useShadows, this.defaultValue.useShadows),\n\t\t\tverticalHasArrows: boolean(input.verticalHasArrows, this.defaultValue.verticalHasArrows),\n\t\t\thorizontalHasArrows: boolean(input.horizontalHasArrows, this.defaultValue.horizontalHasArrows),\n\t\t\thandleMouseWheel: boolean(input.handleMouseWheel, this.defaultValue.handleMouseWheel),\n\t\t\talwaysConsumeMouseWheel: boolean(input.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel),\n\t\t\thorizontalScrollbarSize: horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: EditorIntOption.clampedInt(input.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n\t\t\tverticalScrollbarSize: verticalScrollbarSize,\n\t\t\tverticalSliderSize: EditorIntOption.clampedInt(input.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n\t\t\tscrollByPage: boolean(input.scrollByPage, this.defaultValue.scrollByPage),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region suggest\n\n/**\n * Configuration options for editor suggest widget\n */\nexport interface ISuggestOptions {\n\t/**\n\t * Overwrite word ends on accept. Default to false.\n\t */\n\tinsertMode?: 'insert' | 'replace';\n\t/**\n\t * Enable graceful matching. Defaults to true.\n\t */\n\tfilterGraceful?: boolean;\n\t/**\n\t * Prevent quick suggestions when a snippet is active. Defaults to true.\n\t */\n\tsnippetsPreventQuickSuggestions?: boolean;\n\t/**\n\t * Favors words that appear close to the cursor.\n\t */\n\tlocalityBonus?: boolean;\n\t/**\n\t * Enable using global storage for remembering suggestions.\n\t */\n\tshareSuggestSelections?: boolean;\n\t/**\n\t * Enable or disable icons in suggestions. Defaults to true.\n\t */\n\tshowIcons?: boolean;\n\t/**\n\t * Enable or disable the suggest status bar.\n\t */\n\tshowStatusBar?: boolean;\n\t/**\n\t * Show details inline with the label. Defaults to true.\n\t */\n\tshowInlineDetails?: boolean;\n\t/**\n\t * Show method-suggestions.\n\t */\n\tshowMethods?: boolean;\n\t/**\n\t * Show function-suggestions.\n\t */\n\tshowFunctions?: boolean;\n\t/**\n\t * Show constructor-suggestions.\n\t */\n\tshowConstructors?: boolean;\n\t/**\n\t * Show field-suggestions.\n\t */\n\tshowFields?: boolean;\n\t/**\n\t * Show variable-suggestions.\n\t */\n\tshowVariables?: boolean;\n\t/**\n\t * Show class-suggestions.\n\t */\n\tshowClasses?: boolean;\n\t/**\n\t * Show struct-suggestions.\n\t */\n\tshowStructs?: boolean;\n\t/**\n\t * Show interface-suggestions.\n\t */\n\tshowInterfaces?: boolean;\n\t/**\n\t * Show module-suggestions.\n\t */\n\tshowModules?: boolean;\n\t/**\n\t * Show property-suggestions.\n\t */\n\tshowProperties?: boolean;\n\t/**\n\t * Show event-suggestions.\n\t */\n\tshowEvents?: boolean;\n\t/**\n\t * Show operator-suggestions.\n\t */\n\tshowOperators?: boolean;\n\t/**\n\t * Show unit-suggestions.\n\t */\n\tshowUnits?: boolean;\n\t/**\n\t * Show value-suggestions.\n\t */\n\tshowValues?: boolean;\n\t/**\n\t * Show constant-suggestions.\n\t */\n\tshowConstants?: boolean;\n\t/**\n\t * Show enum-suggestions.\n\t */\n\tshowEnums?: boolean;\n\t/**\n\t * Show enumMember-suggestions.\n\t */\n\tshowEnumMembers?: boolean;\n\t/**\n\t * Show keyword-suggestions.\n\t */\n\tshowKeywords?: boolean;\n\t/**\n\t * Show text-suggestions.\n\t */\n\tshowWords?: boolean;\n\t/**\n\t * Show color-suggestions.\n\t */\n\tshowColors?: boolean;\n\t/**\n\t * Show file-suggestions.\n\t */\n\tshowFiles?: boolean;\n\t/**\n\t * Show reference-suggestions.\n\t */\n\tshowReferences?: boolean;\n\t/**\n\t * Show folder-suggestions.\n\t */\n\tshowFolders?: boolean;\n\t/**\n\t * Show typeParameter-suggestions.\n\t */\n\tshowTypeParameters?: boolean;\n\t/**\n\t * Show issue-suggestions.\n\t */\n\tshowIssues?: boolean;\n\t/**\n\t * Show user-suggestions.\n\t */\n\tshowUsers?: boolean;\n\t/**\n\t * Show snippet-suggestions.\n\t */\n\tshowSnippets?: boolean;\n}\n\nexport type InternalSuggestOptions = Readonly<Required<ISuggestOptions>>;\n\nclass EditorSuggest extends BaseEditorOption<EditorOption.suggest, InternalSuggestOptions> {\n\n\tconstructor() {\n\t\tconst defaults: InternalSuggestOptions = {\n\t\t\tinsertMode: 'insert',\n\t\t\tfilterGraceful: true,\n\t\t\tsnippetsPreventQuickSuggestions: true,\n\t\t\tlocalityBonus: false,\n\t\t\tshareSuggestSelections: false,\n\t\t\tshowIcons: true,\n\t\t\tshowStatusBar: false,\n\t\t\tshowInlineDetails: true,\n\t\t\tshowMethods: true,\n\t\t\tshowFunctions: true,\n\t\t\tshowConstructors: true,\n\t\t\tshowFields: true,\n\t\t\tshowVariables: true,\n\t\t\tshowClasses: true,\n\t\t\tshowStructs: true,\n\t\t\tshowInterfaces: true,\n\t\t\tshowModules: true,\n\t\t\tshowProperties: true,\n\t\t\tshowEvents: true,\n\t\t\tshowOperators: true,\n\t\t\tshowUnits: true,\n\t\t\tshowValues: true,\n\t\t\tshowConstants: true,\n\t\t\tshowEnums: true,\n\t\t\tshowEnumMembers: true,\n\t\t\tshowKeywords: true,\n\t\t\tshowWords: true,\n\t\t\tshowColors: true,\n\t\t\tshowFiles: true,\n\t\t\tshowReferences: true,\n\t\t\tshowFolders: true,\n\t\t\tshowTypeParameters: true,\n\t\t\tshowSnippets: true,\n\t\t\tshowUsers: true,\n\t\t\tshowIssues: true,\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.suggest, 'suggest', defaults,\n\t\t\t{\n\t\t\t\t'editor.suggest.insertMode': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['insert', 'replace'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('suggest.insertMode.insert', \"Insert suggestion without overwriting text right of the cursor.\"),\n\t\t\t\t\t\tnls.localize('suggest.insertMode.replace', \"Insert suggestion and overwrite text right of the cursor.\"),\n\t\t\t\t\t],\n\t\t\t\t\tdefault: defaults.insertMode,\n\t\t\t\t\tdescription: nls.localize('suggest.insertMode', \"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.filterGraceful': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.filterGraceful,\n\t\t\t\t\tdescription: nls.localize('suggest.filterGraceful', \"Controls whether filtering and sorting suggestions accounts for small typos.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.localityBonus': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.localityBonus,\n\t\t\t\t\tdescription: nls.localize('suggest.localityBonus', \"Controls whether sorting favors words that appear close to the cursor.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.shareSuggestSelections': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.shareSuggestSelections,\n\t\t\t\t\tmarkdownDescription: nls.localize('suggest.shareSuggestSelections', \"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.snippetsPreventQuickSuggestions': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.snippetsPreventQuickSuggestions,\n\t\t\t\t\tdescription: nls.localize('suggest.snippetsPreventQuickSuggestions', \"Controls whether an active snippet prevents quick suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showIcons': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.showIcons,\n\t\t\t\t\tdescription: nls.localize('suggest.showIcons', \"Controls whether to show or hide icons in suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showStatusBar': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.showStatusBar,\n\t\t\t\t\tdescription: nls.localize('suggest.showStatusBar', \"Controls the visibility of the status bar at the bottom of the suggest widget.\")\n\t\t\t\t},\n\n\t\t\t\t'editor.suggest.showInlineDetails': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.showInlineDetails,\n\t\t\t\t\tdescription: nls.localize('suggest.showInlineDetails', \"Controls whether suggest details show inline with the label or only in the details widget\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.maxVisibleSuggestions': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdeprecationMessage: nls.localize('suggest.maxVisibleSuggestions.dep', \"This setting is deprecated. The suggest widget can now be resized.\"),\n\t\t\t\t},\n\t\t\t\t'editor.suggest.filteredTypes': {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tdeprecationMessage: nls.localize('deprecated', \"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showMethods': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showMethods', \"When enabled IntelliSense shows `method`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFunctions': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFunctions', \"When enabled IntelliSense shows `function`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showConstructors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showConstructors', \"When enabled IntelliSense shows `constructor`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFields': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFields', \"When enabled IntelliSense shows `field`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showVariables': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showVariables', \"When enabled IntelliSense shows `variable`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showClasses': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showClasss', \"When enabled IntelliSense shows `class`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showStructs': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showStructs', \"When enabled IntelliSense shows `struct`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showInterfaces': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showInterfaces', \"When enabled IntelliSense shows `interface`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showModules': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showModules', \"When enabled IntelliSense shows `module`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showProperties': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showPropertys', \"When enabled IntelliSense shows `property`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEvents': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEvents', \"When enabled IntelliSense shows `event`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showOperators': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showOperators', \"When enabled IntelliSense shows `operator`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showUnits': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showUnits', \"When enabled IntelliSense shows `unit`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showValues': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showValues', \"When enabled IntelliSense shows `value`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showConstants': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showConstants', \"When enabled IntelliSense shows `constant`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEnums': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEnums', \"When enabled IntelliSense shows `enum`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEnumMembers': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEnumMembers', \"When enabled IntelliSense shows `enumMember`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showKeywords': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showKeywords', \"When enabled IntelliSense shows `keyword`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showWords': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showTexts', \"When enabled IntelliSense shows `text`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showColors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showColors', \"When enabled IntelliSense shows `color`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFiles': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFiles', \"When enabled IntelliSense shows `file`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showReferences': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showReferences', \"When enabled IntelliSense shows `reference`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showCustomcolors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showCustomcolors', \"When enabled IntelliSense shows `customcolor`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFolders': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFolders', \"When enabled IntelliSense shows `folder`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showTypeParameters': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showTypeParameters', \"When enabled IntelliSense shows `typeParameter`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showSnippets': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showSnippets', \"When enabled IntelliSense shows `snippet`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showUsers': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showUsers', \"When enabled IntelliSense shows `user`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showIssues': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showIssues', \"When enabled IntelliSense shows `issues`-suggestions.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalSuggestOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as ISuggestOptions;\n\t\treturn {\n\t\t\tinsertMode: stringSet(input.insertMode, this.defaultValue.insertMode, ['insert', 'replace']),\n\t\t\tfilterGraceful: boolean(input.filterGraceful, this.defaultValue.filterGraceful),\n\t\t\tsnippetsPreventQuickSuggestions: boolean(input.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful),\n\t\t\tlocalityBonus: boolean(input.localityBonus, this.defaultValue.localityBonus),\n\t\t\tshareSuggestSelections: boolean(input.shareSuggestSelections, this.defaultValue.shareSuggestSelections),\n\t\t\tshowIcons: boolean(input.showIcons, this.defaultValue.showIcons),\n\t\t\tshowStatusBar: boolean(input.showStatusBar, this.defaultValue.showStatusBar),\n\t\t\tshowInlineDetails: boolean(input.showInlineDetails, this.defaultValue.showInlineDetails),\n\t\t\tshowMethods: boolean(input.showMethods, this.defaultValue.showMethods),\n\t\t\tshowFunctions: boolean(input.showFunctions, this.defaultValue.showFunctions),\n\t\t\tshowConstructors: boolean(input.showConstructors, this.defaultValue.showConstructors),\n\t\t\tshowFields: boolean(input.showFields, this.defaultValue.showFields),\n\t\t\tshowVariables: boolean(input.showVariables, this.defaultValue.showVariables),\n\t\t\tshowClasses: boolean(input.showClasses, this.defaultValue.showClasses),\n\t\t\tshowStructs: boolean(input.showStructs, this.defaultValue.showStructs),\n\t\t\tshowInterfaces: boolean(input.showInterfaces, this.defaultValue.showInterfaces),\n\t\t\tshowModules: boolean(input.showModules, this.defaultValue.showModules),\n\t\t\tshowProperties: boolean(input.showProperties, this.defaultValue.showProperties),\n\t\t\tshowEvents: boolean(input.showEvents, this.defaultValue.showEvents),\n\t\t\tshowOperators: boolean(input.showOperators, this.defaultValue.showOperators),\n\t\t\tshowUnits: boolean(input.showUnits, this.defaultValue.showUnits),\n\t\t\tshowValues: boolean(input.showValues, this.defaultValue.showValues),\n\t\t\tshowConstants: boolean(input.showConstants, this.defaultValue.showConstants),\n\t\t\tshowEnums: boolean(input.showEnums, this.defaultValue.showEnums),\n\t\t\tshowEnumMembers: boolean(input.showEnumMembers, this.defaultValue.showEnumMembers),\n\t\t\tshowKeywords: boolean(input.showKeywords, this.defaultValue.showKeywords),\n\t\t\tshowWords: boolean(input.showWords, this.defaultValue.showWords),\n\t\t\tshowColors: boolean(input.showColors, this.defaultValue.showColors),\n\t\t\tshowFiles: boolean(input.showFiles, this.defaultValue.showFiles),\n\t\t\tshowReferences: boolean(input.showReferences, this.defaultValue.showReferences),\n\t\t\tshowFolders: boolean(input.showFolders, this.defaultValue.showFolders),\n\t\t\tshowTypeParameters: boolean(input.showTypeParameters, this.defaultValue.showTypeParameters),\n\t\t\tshowSnippets: boolean(input.showSnippets, this.defaultValue.showSnippets),\n\t\t\tshowUsers: boolean(input.showUsers, this.defaultValue.showUsers),\n\t\t\tshowIssues: boolean(input.showIssues, this.defaultValue.showIssues),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region smart select\n\nexport interface ISmartSelectOptions {\n\tselectLeadingAndTrailingWhitespace?: boolean\n}\n\nexport type SmartSelectOptions = Readonly<Required<ISmartSelectOptions>>;\n\nclass SmartSelect extends BaseEditorOption<EditorOption.smartSelect, SmartSelectOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.smartSelect, 'smartSelect',\n\t\t\t{\n\t\t\t\tselectLeadingAndTrailingWhitespace: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t'editor.smartSelect.selectLeadingAndTrailingWhitespace': {\n\t\t\t\t\tdescription: nls.localize('selectLeadingAndTrailingWhitespace', \"Whether leading and trailing whitespace should always be selected.\"),\n\t\t\t\t\tdefault: true,\n\t\t\t\t\ttype: 'boolean'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): Readonly<Required<ISmartSelectOptions>> {\n\t\tif (!input || typeof input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\treturn {\n\t\t\tselectLeadingAndTrailingWhitespace: boolean((input as ISmartSelectOptions).selectLeadingAndTrailingWhitespace, this.defaultValue.selectLeadingAndTrailingWhitespace)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region tabFocusMode\n\nclass EditorTabFocusMode extends ComputedEditorOption<EditorOption.tabFocusMode, boolean> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.tabFocusMode, [EditorOption.readOnly]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: boolean): boolean {\n\t\tconst readOnly = options.get(EditorOption.readOnly);\n\t\treturn (readOnly ? true : env.tabFocusMode);\n\t}\n}\n\n//#endregion\n\n//#region wrappingIndent\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport const enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\nfunction _wrappingIndentFromString(wrappingIndent: 'none' | 'same' | 'indent' | 'deepIndent'): WrappingIndent {\n\tswitch (wrappingIndent) {\n\t\tcase 'none': return WrappingIndent.None;\n\t\tcase 'same': return WrappingIndent.Same;\n\t\tcase 'indent': return WrappingIndent.Indent;\n\t\tcase 'deepIndent': return WrappingIndent.DeepIndent;\n\t}\n}\n\n//#endregion\n\n//#region wrappingInfo\n\nexport interface EditorWrappingInfo {\n\treadonly isDominatedByLongLines: boolean;\n\treadonly isWordWrapMinified: boolean;\n\treadonly isViewportWrapping: boolean;\n\treadonly wrappingColumn: number;\n}\n\nclass EditorWrappingInfoComputer extends ComputedEditorOption<EditorOption.wrappingInfo, EditorWrappingInfo> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.wrappingInfo, [EditorOption.layoutInfo]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: EditorWrappingInfo): EditorWrappingInfo {\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\treturn {\n\t\t\tisDominatedByLongLines: env.isDominatedByLongLines,\n\t\t\tisWordWrapMinified: layoutInfo.isWordWrapMinified,\n\t\t\tisViewportWrapping: layoutInfo.isViewportWrapping,\n\t\t\twrappingColumn: layoutInfo.wrappingColumn,\n\t\t};\n\t}\n}\n\n//#endregion\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n\tfontFamily: (\n\t\tplatform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t),\n\tfontWeight: 'normal',\n\tfontSize: (\n\t\tplatform.isMacintosh ? 12 : 14\n\t),\n\tlineHeight: 0,\n\tletterSpacing: 0,\n};\n\n/**\n * @internal\n */\nexport const EDITOR_MODEL_DEFAULTS = {\n\ttabSize: 4,\n\tindentSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true,\n\ttrimAutoWhitespace: true,\n\tlargeFileOptimizations: true\n};\n\n/**\n * @internal\n */\nexport const editorOptionsRegistry: IEditorOption<EditorOption, any>[] = [];\n\nfunction register<K1 extends EditorOption, V>(option: IEditorOption<K1, V>): IEditorOption<K1, V> {\n\teditorOptionsRegistry[option.id] = option;\n\treturn option;\n}\n\nexport const enum EditorOption {\n\tacceptSuggestionOnCommitCharacter,\n\tacceptSuggestionOnEnter,\n\taccessibilitySupport,\n\taccessibilityPageSize,\n\tariaLabel,\n\tautoClosingBrackets,\n\tautoClosingDelete,\n\tautoClosingOvertype,\n\tautoClosingQuotes,\n\tautoIndent,\n\tautomaticLayout,\n\tautoSurround,\n\tcodeLens,\n\tcodeLensFontFamily,\n\tcodeLensFontSize,\n\tcolorDecorators,\n\tcolumnSelection,\n\tcomments,\n\tcontextmenu,\n\tcopyWithSyntaxHighlighting,\n\tcursorBlinking,\n\tcursorSmoothCaretAnimation,\n\tcursorStyle,\n\tcursorSurroundingLines,\n\tcursorSurroundingLinesStyle,\n\tcursorWidth,\n\tdisableLayerHinting,\n\tdisableMonospaceOptimizations,\n\tdomReadOnly,\n\tdragAndDrop,\n\temptySelectionClipboard,\n\textraEditorClassName,\n\tfastScrollSensitivity,\n\tfind,\n\tfixedOverflowWidgets,\n\tfolding,\n\tfoldingStrategy,\n\tfoldingHighlight,\n\tunfoldOnClickAfterEndOfLine,\n\tfontFamily,\n\tfontInfo,\n\tfontLigatures,\n\tfontSize,\n\tfontWeight,\n\tformatOnPaste,\n\tformatOnType,\n\tglyphMargin,\n\tgotoLocation,\n\thideCursorInOverviewRuler,\n\thighlightActiveIndentGuide,\n\thover,\n\tinDiffEditor,\n\tletterSpacing,\n\tlightbulb,\n\tlineDecorationsWidth,\n\tlineHeight,\n\tlineNumbers,\n\tlineNumbersMinChars,\n\tlinkedEditing,\n\tlinks,\n\tmatchBrackets,\n\tminimap,\n\tmouseStyle,\n\tmouseWheelScrollSensitivity,\n\tmouseWheelZoom,\n\tmultiCursorMergeOverlapping,\n\tmultiCursorModifier,\n\tmultiCursorPaste,\n\toccurrencesHighlight,\n\toverviewRulerBorder,\n\toverviewRulerLanes,\n\tpadding,\n\tparameterHints,\n\tpeekWidgetDefaultFocus,\n\tdefinitionLinkOpensInPeek,\n\tquickSuggestions,\n\tquickSuggestionsDelay,\n\treadOnly,\n\trenameOnType,\n\trenderControlCharacters,\n\trenderIndentGuides,\n\trenderFinalNewline,\n\trenderLineHighlight,\n\trenderLineHighlightOnlyWhenFocus,\n\trenderValidationDecorations,\n\trenderWhitespace,\n\trevealHorizontalRightPadding,\n\troundedSelection,\n\trulers,\n\tscrollbar,\n\tscrollBeyondLastColumn,\n\tscrollBeyondLastLine,\n\tscrollPredominantAxis,\n\tselectionClipboard,\n\tselectionHighlight,\n\tselectOnLineNumbers,\n\tshowFoldingControls,\n\tshowUnused,\n\tsnippetSuggestions,\n\tsmartSelect,\n\tsmoothScrolling,\n\tstickyTabStops,\n\tstopRenderingLineAfter,\n\tsuggest,\n\tsuggestFontSize,\n\tsuggestLineHeight,\n\tsuggestOnTriggerCharacters,\n\tsuggestSelection,\n\ttabCompletion,\n\ttabIndex,\n\tunusualLineTerminators,\n\tuseTabStops,\n\twordSeparators,\n\twordWrap,\n\twordWrapBreakAfterCharacters,\n\twordWrapBreakBeforeCharacters,\n\twordWrapColumn,\n\twordWrapOverride1,\n\twordWrapOverride2,\n\twrappingIndent,\n\twrappingStrategy,\n\tshowDeprecated,\n\tinlineHints,\n\t// Leave these at the end (because they have dependencies!)\n\teditorClassName,\n\tpixelRatio,\n\ttabFocusMode,\n\tlayoutInfo,\n\twrappingInfo,\n}\n\n/**\n * WORKAROUND: TS emits \"any\" for complex editor options values (anything except string, bool, enum, etc. ends up being \"any\")\n * @monacodtsreplace\n * /accessibilitySupport, any/accessibilitySupport, AccessibilitySupport/\n * /comments, any/comments, EditorCommentsOptions/\n * /find, any/find, EditorFindOptions/\n * /fontInfo, any/fontInfo, FontInfo/\n * /gotoLocation, any/gotoLocation, GoToLocationOptions/\n * /hover, any/hover, EditorHoverOptions/\n * /lightbulb, any/lightbulb, EditorLightbulbOptions/\n * /minimap, any/minimap, EditorMinimapOptions/\n * /parameterHints, any/parameterHints, InternalParameterHintOptions/\n * /quickSuggestions, any/quickSuggestions, ValidQuickSuggestionsOptions/\n * /suggest, any/suggest, InternalSuggestOptions/\n */\nexport const EditorOptions = {\n\tacceptSuggestionOnCommitCharacter: register(new EditorBooleanOption(\n\t\tEditorOption.acceptSuggestionOnCommitCharacter, 'acceptSuggestionOnCommitCharacter', true,\n\t\t{ markdownDescription: nls.localize('acceptSuggestionOnCommitCharacter', \"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.\") }\n\t)),\n\tacceptSuggestionOnEnter: register(new EditorStringEnumOption(\n\t\tEditorOption.acceptSuggestionOnEnter, 'acceptSuggestionOnEnter',\n\t\t'on' as 'on' | 'smart' | 'off',\n\t\t['on', 'smart', 'off'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('acceptSuggestionOnEnterSmart', \"Only accept a suggestion with `Enter` when it makes a textual change.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\")\n\t\t}\n\t)),\n\taccessibilitySupport: register(new EditorAccessibilitySupport()),\n\taccessibilityPageSize: register(new EditorIntOption(EditorOption.accessibilityPageSize, 'accessibilityPageSize', 10, 1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{\n\t\t\tdescription: nls.localize('accessibilityPageSize', \"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.\")\n\t\t})),\n\tariaLabel: register(new EditorStringOption(\n\t\tEditorOption.ariaLabel, 'ariaLabel', nls.localize('editorViewAccessibleLabel', \"Editor content\")\n\t)),\n\tautoClosingBrackets: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingBrackets, 'autoClosingBrackets',\n\t\t'languageDefined' as 'always' | 'languageDefined' | 'beforeWhitespace' | 'never',\n\t\t['always', 'languageDefined', 'beforeWhitespace', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingBrackets.languageDefined', \"Use language configurations to determine when to autoclose brackets.\"),\n\t\t\t\tnls.localize('editor.autoClosingBrackets.beforeWhitespace', \"Autoclose brackets only when the cursor is to the left of whitespace.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingBrackets', \"Controls whether the editor should automatically close brackets after the user adds an opening bracket.\")\n\t\t}\n\t)),\n\tautoClosingDelete: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingDelete, 'autoClosingDelete',\n\t\t'auto' as 'always' | 'auto' | 'never',\n\t\t['always', 'auto', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingDelete.auto', \"Remove adjacent closing quotes or brackets only if they were automatically inserted.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingDelete', \"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.\")\n\t\t}\n\t)),\n\tautoClosingOvertype: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingOvertype, 'autoClosingOvertype',\n\t\t'auto' as 'always' | 'auto' | 'never',\n\t\t['always', 'auto', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingOvertype.auto', \"Type over closing quotes or brackets only if they were automatically inserted.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingOvertype', \"Controls whether the editor should type over closing quotes or brackets.\")\n\t\t}\n\t)),\n\tautoClosingQuotes: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingQuotes, 'autoClosingQuotes',\n\t\t'languageDefined' as 'always' | 'languageDefined' | 'beforeWhitespace' | 'never',\n\t\t['always', 'languageDefined', 'beforeWhitespace', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingQuotes.languageDefined', \"Use language configurations to determine when to autoclose quotes.\"),\n\t\t\t\tnls.localize('editor.autoClosingQuotes.beforeWhitespace', \"Autoclose quotes only when the cursor is to the left of whitespace.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingQuotes', \"Controls whether the editor should automatically close quotes after the user adds an opening quote.\")\n\t\t}\n\t)),\n\tautoIndent: register(new EditorEnumOption(\n\t\tEditorOption.autoIndent, 'autoIndent',\n\t\tEditorAutoIndentStrategy.Full, 'full',\n\t\t['none', 'keep', 'brackets', 'advanced', 'full'],\n\t\t_autoIndentFromString,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.autoIndent.none', \"The editor will not insert indentation automatically.\"),\n\t\t\t\tnls.localize('editor.autoIndent.keep', \"The editor will keep the current line's indentation.\"),\n\t\t\t\tnls.localize('editor.autoIndent.brackets', \"The editor will keep the current line's indentation and honor language defined brackets.\"),\n\t\t\t\tnls.localize('editor.autoIndent.advanced', \"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.\"),\n\t\t\t\tnls.localize('editor.autoIndent.full', \"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('autoIndent', \"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\")\n\t\t}\n\t)),\n\tautomaticLayout: register(new EditorBooleanOption(\n\t\tEditorOption.automaticLayout, 'automaticLayout', false,\n\t)),\n\tautoSurround: register(new EditorStringEnumOption(\n\t\tEditorOption.autoSurround, 'autoSurround',\n\t\t'languageDefined' as 'languageDefined' | 'quotes' | 'brackets' | 'never',\n\t\t['languageDefined', 'quotes', 'brackets', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.autoSurround.languageDefined', \"Use language configurations to determine when to automatically surround selections.\"),\n\t\t\t\tnls.localize('editor.autoSurround.quotes', \"Surround with quotes but not brackets.\"),\n\t\t\t\tnls.localize('editor.autoSurround.brackets', \"Surround with brackets but not quotes.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tdescription: nls.localize('autoSurround', \"Controls whether the editor should automatically surround selections when typing quotes or brackets.\")\n\t\t}\n\t)),\n\tstickyTabStops: register(new EditorBooleanOption(\n\t\tEditorOption.stickyTabStops, 'stickyTabStops', false,\n\t\t{ description: nls.localize('stickyTabStops', \"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.\") }\n\t)),\n\tcodeLens: register(new EditorBooleanOption(\n\t\tEditorOption.codeLens, 'codeLens', true,\n\t\t{ description: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\") }\n\t)),\n\tcodeLensFontFamily: register(new EditorStringOption(\n\t\tEditorOption.codeLensFontFamily, 'codeLensFontFamily', '',\n\t\t{ description: nls.localize('codeLensFontFamily', \"Controls the font family for CodeLens.\") }\n\t)),\n\tcodeLensFontSize: register(new EditorIntOption(EditorOption.codeLensFontSize, 'codeLensFontSize', 0, 0, 100, {\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tdescription: nls.localize('codeLensFontSize', \"Controls the font size in pixels for CodeLens. When set to `0`, the 90% of `#editor.fontSize#` is used.\")\n\t})),\n\tcolorDecorators: register(new EditorBooleanOption(\n\t\tEditorOption.colorDecorators, 'colorDecorators', true,\n\t\t{ description: nls.localize('colorDecorators', \"Controls whether the editor should render the inline color decorators and color picker.\") }\n\t)),\n\tcolumnSelection: register(new EditorBooleanOption(\n\t\tEditorOption.columnSelection, 'columnSelection', false,\n\t\t{ description: nls.localize('columnSelection', \"Enable that the selection with the mouse and keys is doing column selection.\") }\n\t)),\n\tcomments: register(new EditorComments()),\n\tcontextmenu: register(new EditorBooleanOption(\n\t\tEditorOption.contextmenu, 'contextmenu', true,\n\t)),\n\tcopyWithSyntaxHighlighting: register(new EditorBooleanOption(\n\t\tEditorOption.copyWithSyntaxHighlighting, 'copyWithSyntaxHighlighting', true,\n\t\t{ description: nls.localize('copyWithSyntaxHighlighting', \"Controls whether syntax highlighting should be copied into the clipboard.\") }\n\t)),\n\tcursorBlinking: register(new EditorEnumOption(\n\t\tEditorOption.cursorBlinking, 'cursorBlinking',\n\t\tTextEditorCursorBlinkingStyle.Blink, 'blink',\n\t\t['blink', 'smooth', 'phase', 'expand', 'solid'],\n\t\t_cursorBlinkingStyleFromString,\n\t\t{ description: nls.localize('cursorBlinking', \"Control the cursor animation style.\") }\n\t)),\n\tcursorSmoothCaretAnimation: register(new EditorBooleanOption(\n\t\tEditorOption.cursorSmoothCaretAnimation, 'cursorSmoothCaretAnimation', false,\n\t\t{ description: nls.localize('cursorSmoothCaretAnimation', \"Controls whether the smooth caret animation should be enabled.\") }\n\t)),\n\tcursorStyle: register(new EditorEnumOption(\n\t\tEditorOption.cursorStyle, 'cursorStyle',\n\t\tTextEditorCursorStyle.Line, 'line',\n\t\t['line', 'block', 'underline', 'line-thin', 'block-outline', 'underline-thin'],\n\t\t_cursorStyleFromString,\n\t\t{ description: nls.localize('cursorStyle', \"Controls the cursor style.\") }\n\t)),\n\tcursorSurroundingLines: register(new EditorIntOption(\n\t\tEditorOption.cursorSurroundingLines, 'cursorSurroundingLines',\n\t\t0, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('cursorSurroundingLines', \"Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.\") }\n\t)),\n\tcursorSurroundingLinesStyle: register(new EditorStringEnumOption(\n\t\tEditorOption.cursorSurroundingLinesStyle, 'cursorSurroundingLinesStyle',\n\t\t'default' as 'default' | 'all',\n\t\t['default', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('cursorSurroundingLinesStyle.default', \"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.\"),\n\t\t\t\tnls.localize('cursorSurroundingLinesStyle.all', \"`cursorSurroundingLines` is enforced always.\")\n\t\t\t],\n\t\t\tdescription: nls.localize('cursorSurroundingLinesStyle', \"Controls when `cursorSurroundingLines` should be enforced.\")\n\t\t}\n\t)),\n\tcursorWidth: register(new EditorIntOption(\n\t\tEditorOption.cursorWidth, 'cursorWidth',\n\t\t0, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ markdownDescription: nls.localize('cursorWidth', \"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.\") }\n\t)),\n\tdisableLayerHinting: register(new EditorBooleanOption(\n\t\tEditorOption.disableLayerHinting, 'disableLayerHinting', false,\n\t)),\n\tdisableMonospaceOptimizations: register(new EditorBooleanOption(\n\t\tEditorOption.disableMonospaceOptimizations, 'disableMonospaceOptimizations', false\n\t)),\n\tdomReadOnly: register(new EditorBooleanOption(\n\t\tEditorOption.domReadOnly, 'domReadOnly', false,\n\t)),\n\tdragAndDrop: register(new EditorBooleanOption(\n\t\tEditorOption.dragAndDrop, 'dragAndDrop', true,\n\t\t{ description: nls.localize('dragAndDrop', \"Controls whether the editor should allow moving selections via drag and drop.\") }\n\t)),\n\temptySelectionClipboard: register(new EditorEmptySelectionClipboard()),\n\textraEditorClassName: register(new EditorStringOption(\n\t\tEditorOption.extraEditorClassName, 'extraEditorClassName', '',\n\t)),\n\tfastScrollSensitivity: register(new EditorFloatOption(\n\t\tEditorOption.fastScrollSensitivity, 'fastScrollSensitivity',\n\t\t5, x => (x <= 0 ? 5 : x),\n\t\t{ markdownDescription: nls.localize('fastScrollSensitivity', \"Scrolling speed multiplier when pressing `Alt`.\") }\n\t)),\n\tfind: register(new EditorFind()),\n\tfixedOverflowWidgets: register(new EditorBooleanOption(\n\t\tEditorOption.fixedOverflowWidgets, 'fixedOverflowWidgets', false,\n\t)),\n\tfolding: register(new EditorBooleanOption(\n\t\tEditorOption.folding, 'folding', true,\n\t\t{ description: nls.localize('folding', \"Controls whether the editor has code folding enabled.\") }\n\t)),\n\tfoldingStrategy: register(new EditorStringEnumOption(\n\t\tEditorOption.foldingStrategy, 'foldingStrategy',\n\t\t'auto' as 'auto' | 'indentation',\n\t\t['auto', 'indentation'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('foldingStrategy.auto', \"Use a language-specific folding strategy if available, else the indentation-based one.\"),\n\t\t\t\tnls.localize('foldingStrategy.indentation', \"Use the indentation-based folding strategy.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('foldingStrategy', \"Controls the strategy for computing folding ranges.\")\n\t\t}\n\t)),\n\tfoldingHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.foldingHighlight, 'foldingHighlight', true,\n\t\t{ description: nls.localize('foldingHighlight', \"Controls whether the editor should highlight folded ranges.\") }\n\t)),\n\tunfoldOnClickAfterEndOfLine: register(new EditorBooleanOption(\n\t\tEditorOption.unfoldOnClickAfterEndOfLine, 'unfoldOnClickAfterEndOfLine', false,\n\t\t{ description: nls.localize('unfoldOnClickAfterEndOfLine', \"Controls whether clicking on the empty content after a folded line will unfold the line.\") }\n\t)),\n\tfontFamily: register(new EditorStringOption(\n\t\tEditorOption.fontFamily, 'fontFamily', EDITOR_FONT_DEFAULTS.fontFamily,\n\t\t{ description: nls.localize('fontFamily', \"Controls the font family.\") }\n\t)),\n\tfontInfo: register(new EditorFontInfo()),\n\tfontLigatures2: register(new EditorFontLigatures()),\n\tfontSize: register(new EditorFontSize()),\n\tfontWeight: register(new EditorFontWeight()),\n\tformatOnPaste: register(new EditorBooleanOption(\n\t\tEditorOption.formatOnPaste, 'formatOnPaste', false,\n\t\t{ description: nls.localize('formatOnPaste', \"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.\") }\n\t)),\n\tformatOnType: register(new EditorBooleanOption(\n\t\tEditorOption.formatOnType, 'formatOnType', false,\n\t\t{ description: nls.localize('formatOnType', \"Controls whether the editor should automatically format the line after typing.\") }\n\t)),\n\tglyphMargin: register(new EditorBooleanOption(\n\t\tEditorOption.glyphMargin, 'glyphMargin', true,\n\t\t{ description: nls.localize('glyphMargin', \"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.\") }\n\t)),\n\tgotoLocation: register(new EditorGoToLocation()),\n\thideCursorInOverviewRuler: register(new EditorBooleanOption(\n\t\tEditorOption.hideCursorInOverviewRuler, 'hideCursorInOverviewRuler', false,\n\t\t{ description: nls.localize('hideCursorInOverviewRuler', \"Controls whether the cursor should be hidden in the overview ruler.\") }\n\t)),\n\thighlightActiveIndentGuide: register(new EditorBooleanOption(\n\t\tEditorOption.highlightActiveIndentGuide, 'highlightActiveIndentGuide', true,\n\t\t{ description: nls.localize('highlightActiveIndentGuide', \"Controls whether the editor should highlight the active indent guide.\") }\n\t)),\n\thover: register(new EditorHover()),\n\tinDiffEditor: register(new EditorBooleanOption(\n\t\tEditorOption.inDiffEditor, 'inDiffEditor', false\n\t)),\n\tletterSpacing: register(new EditorFloatOption(\n\t\tEditorOption.letterSpacing, 'letterSpacing',\n\t\tEDITOR_FONT_DEFAULTS.letterSpacing, x => EditorFloatOption.clamp(x, -5, 20),\n\t\t{ description: nls.localize('letterSpacing', \"Controls the letter spacing in pixels.\") }\n\t)),\n\tlightbulb: register(new EditorLightbulb()),\n\tlineDecorationsWidth: register(new SimpleEditorOption(EditorOption.lineDecorationsWidth, 'lineDecorationsWidth', 10 as number | string)),\n\tlineHeight: register(new EditorLineHeight()),\n\tlineNumbers: register(new EditorRenderLineNumbersOption()),\n\tlineNumbersMinChars: register(new EditorIntOption(\n\t\tEditorOption.lineNumbersMinChars, 'lineNumbersMinChars',\n\t\t5, 1, 300\n\t)),\n\tlinkedEditing: register(new EditorBooleanOption(\n\t\tEditorOption.linkedEditing, 'linkedEditing', false,\n\t\t{ description: nls.localize('linkedEditing', \"Controls whether the editor has linked editing enabled. Depending on the language, related symbols, e.g. HTML tags, are updated while editing.\") }\n\t)),\n\tlinks: register(new EditorBooleanOption(\n\t\tEditorOption.links, 'links', true,\n\t\t{ description: nls.localize('links', \"Controls whether the editor should detect links and make them clickable.\") }\n\t)),\n\tmatchBrackets: register(new EditorStringEnumOption(\n\t\tEditorOption.matchBrackets, 'matchBrackets',\n\t\t'always' as 'never' | 'near' | 'always',\n\t\t['always', 'near', 'never'] as const,\n\t\t{ description: nls.localize('matchBrackets', \"Highlight matching brackets.\") }\n\t)),\n\tminimap: register(new EditorMinimap()),\n\tmouseStyle: register(new EditorStringEnumOption(\n\t\tEditorOption.mouseStyle, 'mouseStyle',\n\t\t'text' as 'text' | 'default' | 'copy',\n\t\t['text', 'default', 'copy'] as const,\n\t)),\n\tmouseWheelScrollSensitivity: register(new EditorFloatOption(\n\t\tEditorOption.mouseWheelScrollSensitivity, 'mouseWheelScrollSensitivity',\n\t\t1, x => (x === 0 ? 1 : x),\n\t\t{ markdownDescription: nls.localize('mouseWheelScrollSensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\") }\n\t)),\n\tmouseWheelZoom: register(new EditorBooleanOption(\n\t\tEditorOption.mouseWheelZoom, 'mouseWheelZoom', false,\n\t\t{ markdownDescription: nls.localize('mouseWheelZoom', \"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.\") }\n\t)),\n\tmultiCursorMergeOverlapping: register(new EditorBooleanOption(\n\t\tEditorOption.multiCursorMergeOverlapping, 'multiCursorMergeOverlapping', true,\n\t\t{ description: nls.localize('multiCursorMergeOverlapping', \"Merge multiple cursors when they are overlapping.\") }\n\t)),\n\tmultiCursorModifier: register(new EditorEnumOption(\n\t\tEditorOption.multiCursorModifier, 'multiCursorModifier',\n\t\t'altKey', 'alt',\n\t\t['ctrlCmd', 'alt'],\n\t\t_multiCursorModifierFromString,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('multiCursorModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n\t\t\t\tnls.localize('multiCursorModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize({\n\t\t\t\tkey: 'multiCursorModifier',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n\t\t\t\t\t'- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n\t\t\t\t]\n\t\t\t}, \"The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).\")\n\t\t}\n\t)),\n\tmultiCursorPaste: register(new EditorStringEnumOption(\n\t\tEditorOption.multiCursorPaste, 'multiCursorPaste',\n\t\t'spread' as 'spread' | 'full',\n\t\t['spread', 'full'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('multiCursorPaste.spread', \"Each cursor pastes a single line of the text.\"),\n\t\t\t\tnls.localize('multiCursorPaste.full', \"Each cursor pastes the full text.\")\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('multiCursorPaste', \"Controls pasting when the line count of the pasted text matches the cursor count.\")\n\t\t}\n\t)),\n\toccurrencesHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.occurrencesHighlight, 'occurrencesHighlight', true,\n\t\t{ description: nls.localize('occurrencesHighlight', \"Controls whether the editor should highlight semantic symbol occurrences.\") }\n\t)),\n\toverviewRulerBorder: register(new EditorBooleanOption(\n\t\tEditorOption.overviewRulerBorder, 'overviewRulerBorder', true,\n\t\t{ description: nls.localize('overviewRulerBorder', \"Controls whether a border should be drawn around the overview ruler.\") }\n\t)),\n\toverviewRulerLanes: register(new EditorIntOption(\n\t\tEditorOption.overviewRulerLanes, 'overviewRulerLanes',\n\t\t3, 0, 3\n\t)),\n\tpadding: register(new EditorPadding()),\n\tparameterHints: register(new EditorParameterHints()),\n\tpeekWidgetDefaultFocus: register(new EditorStringEnumOption(\n\t\tEditorOption.peekWidgetDefaultFocus, 'peekWidgetDefaultFocus',\n\t\t'tree' as 'tree' | 'editor',\n\t\t['tree', 'editor'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('peekWidgetDefaultFocus.tree', \"Focus the tree when opening peek\"),\n\t\t\t\tnls.localize('peekWidgetDefaultFocus.editor', \"Focus the editor when opening peek\")\n\t\t\t],\n\t\t\tdescription: nls.localize('peekWidgetDefaultFocus', \"Controls whether to focus the inline editor or the tree in the peek widget.\")\n\t\t}\n\t)),\n\tdefinitionLinkOpensInPeek: register(new EditorBooleanOption(\n\t\tEditorOption.definitionLinkOpensInPeek, 'definitionLinkOpensInPeek', false,\n\t\t{ description: nls.localize('definitionLinkOpensInPeek', \"Controls whether the Go to Definition mouse gesture always opens the peek widget.\") }\n\t)),\n\tquickSuggestions: register(new EditorQuickSuggestions()),\n\tquickSuggestionsDelay: register(new EditorIntOption(\n\t\tEditorOption.quickSuggestionsDelay, 'quickSuggestionsDelay',\n\t\t10, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('quickSuggestionsDelay', \"Controls the delay in milliseconds after which quick suggestions will show up.\") }\n\t)),\n\treadOnly: register(new EditorBooleanOption(\n\t\tEditorOption.readOnly, 'readOnly', false,\n\t)),\n\trenameOnType: register(new EditorBooleanOption(\n\t\tEditorOption.renameOnType, 'renameOnType', false,\n\t\t{ description: nls.localize('renameOnType', \"Controls whether the editor auto renames on type.\"), markdownDeprecationMessage: nls.localize('renameOnTypeDeprecate', \"Deprecated, use `editor.linkedEditing` instead.\") }\n\t)),\n\trenderControlCharacters: register(new EditorBooleanOption(\n\t\tEditorOption.renderControlCharacters, 'renderControlCharacters', false,\n\t\t{ description: nls.localize('renderControlCharacters', \"Controls whether the editor should render control characters.\") }\n\t)),\n\trenderIndentGuides: register(new EditorBooleanOption(\n\t\tEditorOption.renderIndentGuides, 'renderIndentGuides', true,\n\t\t{ description: nls.localize('renderIndentGuides', \"Controls whether the editor should render indent guides.\") }\n\t)),\n\trenderFinalNewline: register(new EditorBooleanOption(\n\t\tEditorOption.renderFinalNewline, 'renderFinalNewline', true,\n\t\t{ description: nls.localize('renderFinalNewline', \"Render last line number when the file ends with a newline.\") }\n\t)),\n\trenderLineHighlight: register(new EditorStringEnumOption(\n\t\tEditorOption.renderLineHighlight, 'renderLineHighlight',\n\t\t'line' as 'none' | 'gutter' | 'line' | 'all',\n\t\t['none', 'gutter', 'line', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\tnls.localize('renderLineHighlight.all', \"Highlights both the gutter and the current line.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('renderLineHighlight', \"Controls how the editor should render the current line highlight.\")\n\t\t}\n\t)),\n\trenderLineHighlightOnlyWhenFocus: register(new EditorBooleanOption(\n\t\tEditorOption.renderLineHighlightOnlyWhenFocus, 'renderLineHighlightOnlyWhenFocus', false,\n\t\t{ description: nls.localize('renderLineHighlightOnlyWhenFocus', \"Controls if the editor should render the current line highlight only when the editor is focused.\") }\n\t)),\n\trenderValidationDecorations: register(new EditorStringEnumOption(\n\t\tEditorOption.renderValidationDecorations, 'renderValidationDecorations',\n\t\t'editable' as 'editable' | 'on' | 'off',\n\t\t['editable', 'on', 'off'] as const\n\t)),\n\trenderWhitespace: register(new EditorStringEnumOption(\n\t\tEditorOption.renderWhitespace, 'renderWhitespace',\n\t\t'selection' as 'selection' | 'none' | 'boundary' | 'trailing' | 'all',\n\t\t['none', 'boundary', 'selection', 'trailing', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('renderWhitespace.boundary', \"Render whitespace characters except for single spaces between words.\"),\n\t\t\t\tnls.localize('renderWhitespace.selection', \"Render whitespace characters only on selected text.\"),\n\t\t\t\tnls.localize('renderWhitespace.trailing', \"Render only trailing whitespace characters.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tdescription: nls.localize('renderWhitespace', \"Controls how the editor should render whitespace characters.\")\n\t\t}\n\t)),\n\trevealHorizontalRightPadding: register(new EditorIntOption(\n\t\tEditorOption.revealHorizontalRightPadding, 'revealHorizontalRightPadding',\n\t\t30, 0, 1000,\n\t)),\n\troundedSelection: register(new EditorBooleanOption(\n\t\tEditorOption.roundedSelection, 'roundedSelection', true,\n\t\t{ description: nls.localize('roundedSelection', \"Controls whether selections should have rounded corners.\") }\n\t)),\n\trulers: register(new EditorRulers()),\n\tscrollbar: register(new EditorScrollbar()),\n\tscrollBeyondLastColumn: register(new EditorIntOption(\n\t\tEditorOption.scrollBeyondLastColumn, 'scrollBeyondLastColumn',\n\t\t5, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('scrollBeyondLastColumn', \"Controls the number of extra characters beyond which the editor will scroll horizontally.\") }\n\t)),\n\tscrollBeyondLastLine: register(new EditorBooleanOption(\n\t\tEditorOption.scrollBeyondLastLine, 'scrollBeyondLastLine', true,\n\t\t{ description: nls.localize('scrollBeyondLastLine', \"Controls whether the editor will scroll beyond the last line.\") }\n\t)),\n\tscrollPredominantAxis: register(new EditorBooleanOption(\n\t\tEditorOption.scrollPredominantAxis, 'scrollPredominantAxis', true,\n\t\t{ description: nls.localize('scrollPredominantAxis', \"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.\") }\n\t)),\n\tselectionClipboard: register(new EditorBooleanOption(\n\t\tEditorOption.selectionClipboard, 'selectionClipboard', true,\n\t\t{\n\t\t\tdescription: nls.localize('selectionClipboard', \"Controls whether the Linux primary clipboard should be supported.\"),\n\t\t\tincluded: platform.isLinux\n\t\t}\n\t)),\n\tselectionHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.selectionHighlight, 'selectionHighlight', true,\n\t\t{ description: nls.localize('selectionHighlight', \"Controls whether the editor should highlight matches similar to the selection.\") }\n\t)),\n\tselectOnLineNumbers: register(new EditorBooleanOption(\n\t\tEditorOption.selectOnLineNumbers, 'selectOnLineNumbers', true,\n\t)),\n\tshowFoldingControls: register(new EditorStringEnumOption(\n\t\tEditorOption.showFoldingControls, 'showFoldingControls',\n\t\t'mouseover' as 'always' | 'mouseover',\n\t\t['always', 'mouseover'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('showFoldingControls.always', \"Always show the folding controls.\"),\n\t\t\t\tnls.localize('showFoldingControls.mouseover', \"Only show the folding controls when the mouse is over the gutter.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('showFoldingControls', \"Controls when the folding controls on the gutter are shown.\")\n\t\t}\n\t)),\n\tshowUnused: register(new EditorBooleanOption(\n\t\tEditorOption.showUnused, 'showUnused', true,\n\t\t{ description: nls.localize('showUnused', \"Controls fading out of unused code.\") }\n\t)),\n\tshowDeprecated: register(new EditorBooleanOption(\n\t\tEditorOption.showDeprecated, 'showDeprecated', true,\n\t\t{ description: nls.localize('showDeprecated', \"Controls strikethrough deprecated variables.\") }\n\t)),\n\tinlineHints: register(new EditorInlineHints()),\n\tsnippetSuggestions: register(new EditorStringEnumOption(\n\t\tEditorOption.snippetSuggestions, 'snippetSuggestions',\n\t\t'inline' as 'top' | 'bottom' | 'inline' | 'none',\n\t\t['top', 'bottom', 'inline', 'none'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('snippetSuggestions.top', \"Show snippet suggestions on top of other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.bottom', \"Show snippet suggestions below other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.inline', \"Show snippets suggestions with other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.none', \"Do not show snippet suggestions.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('snippetSuggestions', \"Controls whether snippets are shown with other suggestions and how they are sorted.\")\n\t\t}\n\t)),\n\tsmartSelect: register(new SmartSelect()),\n\tsmoothScrolling: register(new EditorBooleanOption(\n\t\tEditorOption.smoothScrolling, 'smoothScrolling', false,\n\t\t{ description: nls.localize('smoothScrolling', \"Controls whether the editor will scroll using an animation.\") }\n\t)),\n\tstopRenderingLineAfter: register(new EditorIntOption(\n\t\tEditorOption.stopRenderingLineAfter, 'stopRenderingLineAfter',\n\t\t10000, -1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t)),\n\tsuggest: register(new EditorSuggest()),\n\tsuggestFontSize: register(new EditorIntOption(\n\t\tEditorOption.suggestFontSize, 'suggestFontSize',\n\t\t0, 0, 1000,\n\t\t{ markdownDescription: nls.localize('suggestFontSize', \"Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.\") }\n\t)),\n\tsuggestLineHeight: register(new EditorIntOption(\n\t\tEditorOption.suggestLineHeight, 'suggestLineHeight',\n\t\t0, 0, 1000,\n\t\t{ markdownDescription: nls.localize('suggestLineHeight', \"Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.\") }\n\t)),\n\tsuggestOnTriggerCharacters: register(new EditorBooleanOption(\n\t\tEditorOption.suggestOnTriggerCharacters, 'suggestOnTriggerCharacters', true,\n\t\t{ description: nls.localize('suggestOnTriggerCharacters', \"Controls whether suggestions should automatically show up when typing trigger characters.\") }\n\t)),\n\tsuggestSelection: register(new EditorStringEnumOption(\n\t\tEditorOption.suggestSelection, 'suggestSelection',\n\t\t'recentlyUsed' as 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix',\n\t\t['first', 'recentlyUsed', 'recentlyUsedByPrefix'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('suggestSelection.first', \"Always select the first suggestion.\"),\n\t\t\t\tnls.localize('suggestSelection.recentlyUsed', \"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\"),\n\t\t\t\tnls.localize('suggestSelection.recentlyUsedByPrefix', \"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('suggestSelection', \"Controls how suggestions are pre-selected when showing the suggest list.\")\n\t\t}\n\t)),\n\ttabCompletion: register(new EditorStringEnumOption(\n\t\tEditorOption.tabCompletion, 'tabCompletion',\n\t\t'off' as 'on' | 'off' | 'onlySnippets',\n\t\t['on', 'off', 'onlySnippets'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('tabCompletion.on', \"Tab complete will insert the best matching suggestion when pressing tab.\"),\n\t\t\t\tnls.localize('tabCompletion.off', \"Disable tab completions.\"),\n\t\t\t\tnls.localize('tabCompletion.onlySnippets', \"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('tabCompletion', \"Enables tab completions.\")\n\t\t}\n\t)),\n\ttabIndex: register(new EditorIntOption(\n\t\tEditorOption.tabIndex, 'tabIndex',\n\t\t0, -1, Constants.MAX_SAFE_SMALL_INTEGER\n\t)),\n\tunusualLineTerminators: register(new EditorStringEnumOption(\n\t\tEditorOption.unusualLineTerminators, 'unusualLineTerminators',\n\t\t'prompt' as 'auto' | 'off' | 'prompt',\n\t\t['auto', 'off', 'prompt'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('unusualLineTerminators.auto', \"Unusual line terminators are automatically removed.\"),\n\t\t\t\tnls.localize('unusualLineTerminators.off', \"Unusual line terminators are ignored.\"),\n\t\t\t\tnls.localize('unusualLineTerminators.prompt', \"Unusual line terminators prompt to be removed.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('unusualLineTerminators', \"Remove unusual line terminators that might cause problems.\")\n\t\t}\n\t)),\n\tuseTabStops: register(new EditorBooleanOption(\n\t\tEditorOption.useTabStops, 'useTabStops', true,\n\t\t{ description: nls.localize('useTabStops', \"Inserting and deleting whitespace follows tab stops.\") }\n\t)),\n\twordSeparators: register(new EditorStringOption(\n\t\tEditorOption.wordSeparators, 'wordSeparators', USUAL_WORD_SEPARATORS,\n\t\t{ description: nls.localize('wordSeparators', \"Characters that will be used as word separators when doing word related navigations or operations.\") }\n\t)),\n\twordWrap: register(new EditorStringEnumOption(\n\t\tEditorOption.wordWrap, 'wordWrap',\n\t\t'off' as 'off' | 'on' | 'wordWrapColumn' | 'bounded',\n\t\t['off', 'on', 'wordWrapColumn', 'bounded'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('wordWrap.off', \"Lines will never wrap.\"),\n\t\t\t\tnls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n\t\t\t\tnls.localize({\n\t\t\t\t\tkey: 'wordWrap.wordWrapColumn',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t\t]\n\t\t\t\t}, \"Lines will wrap at `#editor.wordWrapColumn#`.\"),\n\t\t\t\tnls.localize({\n\t\t\t\t\tkey: 'wordWrap.bounded',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'- viewport means the edge of the visible window size.',\n\t\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t\t]\n\t\t\t\t}, \"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize({\n\t\t\t\tkey: 'wordWrap',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- \\'off\\', \\'on\\', \\'wordWrapColumn\\' and \\'bounded\\' refer to values the setting can take and should not be localized.',\n\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t]\n\t\t\t}, \"Controls how lines should wrap.\")\n\t\t}\n\t)),\n\twordWrapBreakAfterCharacters: register(new EditorStringOption(\n\t\tEditorOption.wordWrapBreakAfterCharacters, 'wordWrapBreakAfterCharacters',\n\t\t' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣',\n\t)),\n\twordWrapBreakBeforeCharacters: register(new EditorStringOption(\n\t\tEditorOption.wordWrapBreakBeforeCharacters, 'wordWrapBreakBeforeCharacters',\n\t\t'([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'\n\t)),\n\twordWrapColumn: register(new EditorIntOption(\n\t\tEditorOption.wordWrapColumn, 'wordWrapColumn',\n\t\t80, 1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{\n\t\t\tmarkdownDescription: nls.localize({\n\t\t\t\tkey: 'wordWrapColumn',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- `editor.wordWrap` refers to a different setting and should not be localized.',\n\t\t\t\t\t'- \\'wordWrapColumn\\' and \\'bounded\\' refer to values the different setting can take and should not be localized.'\n\t\t\t\t]\n\t\t\t}, \"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.\")\n\t\t}\n\t)),\n\twordWrapOverride1: register(new EditorStringEnumOption(\n\t\tEditorOption.wordWrapOverride1, 'wordWrapOverride1',\n\t\t'inherit' as 'off' | 'on' | 'inherit',\n\t\t['off', 'on', 'inherit'] as const\n\t)),\n\twordWrapOverride2: register(new EditorStringEnumOption(\n\t\tEditorOption.wordWrapOverride2, 'wordWrapOverride2',\n\t\t'inherit' as 'off' | 'on' | 'inherit',\n\t\t['off', 'on', 'inherit'] as const\n\t)),\n\twrappingIndent: register(new EditorEnumOption(\n\t\tEditorOption.wrappingIndent, 'wrappingIndent',\n\t\tWrappingIndent.Same, 'same',\n\t\t['none', 'same', 'indent', 'deepIndent'],\n\t\t_wrappingIndentFromString,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wrappingIndent.none', \"No indentation. Wrapped lines begin at column 1.\"),\n\t\t\t\tnls.localize('wrappingIndent.same', \"Wrapped lines get the same indentation as the parent.\"),\n\t\t\t\tnls.localize('wrappingIndent.indent', \"Wrapped lines get +1 indentation toward the parent.\"),\n\t\t\t\tnls.localize('wrappingIndent.deepIndent', \"Wrapped lines get +2 indentation toward the parent.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('wrappingIndent', \"Controls the indentation of wrapped lines.\"),\n\t\t}\n\t)),\n\twrappingStrategy: register(new EditorStringEnumOption(\n\t\tEditorOption.wrappingStrategy, 'wrappingStrategy',\n\t\t'simple' as 'simple' | 'advanced',\n\t\t['simple', 'advanced'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wrappingStrategy.simple', \"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.\"),\n\t\t\t\tnls.localize('wrappingStrategy.advanced', \"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.\")\n\t\t\t],\n\t\t\tdescription: nls.localize('wrappingStrategy', \"Controls the algorithm that computes wrapping points.\")\n\t\t}\n\t)),\n\n\t// Leave these at the end (because they have dependencies!)\n\teditorClassName: register(new EditorClassName()),\n\tpixelRatio: register(new EditorPixelRatio()),\n\ttabFocusMode: register(new EditorTabFocusMode()),\n\tlayoutInfo: register(new EditorLayoutInfoComputer()),\n\twrappingInfo: register(new EditorWrappingInfoComputer())\n};\n\ntype EditorOptionsType = typeof EditorOptions;\ntype FindEditorOptionsKeyById<T extends EditorOption> = { [K in keyof EditorOptionsType]: EditorOptionsType[K]['id'] extends T ? K : never }[keyof EditorOptionsType];\ntype ComputedEditorOptionValue<T extends IEditorOption<any, any>> = T extends IEditorOption<any, infer R> ? R : never;\nexport type FindComputedEditorOptionValueById<T extends EditorOption> = NonNullable<ComputedEditorOptionValue<EditorOptionsType[FindEditorOptionsKeyById<T>]>>;\n"]}