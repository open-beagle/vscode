{"version":3,"file":"cursorMoveCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/controller/cursorMoveCommands.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as types from 'vs/base/common/types';\nimport { CursorState, ICursorSimpleModel, PartialCursorState, SingleCursorState } from 'vs/editor/common/controller/cursorCommon';\nimport { MoveOperations } from 'vs/editor/common/controller/cursorMoveOperations';\nimport { WordOperations } from 'vs/editor/common/controller/cursorWordOperations';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { IViewModel } from 'vs/editor/common/viewModel/viewModel';\n\nexport class CursorMoveCommands {\n\n\tpublic static addCursorDown(viewModel: IViewModel, cursors: CursorState[], useLogicalLine: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [], resultLen = 0;\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[resultLen++] = new CursorState(cursor.modelState, cursor.viewState);\n\t\t\tif (useLogicalLine) {\n\t\t\t\tresult[resultLen++] = CursorState.fromModelState(MoveOperations.translateDown(viewModel.cursorConfig, viewModel.model, cursor.modelState));\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = CursorState.fromViewState(MoveOperations.translateDown(viewModel.cursorConfig, viewModel, cursor.viewState));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static addCursorUp(viewModel: IViewModel, cursors: CursorState[], useLogicalLine: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [], resultLen = 0;\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[resultLen++] = new CursorState(cursor.modelState, cursor.viewState);\n\t\t\tif (useLogicalLine) {\n\t\t\t\tresult[resultLen++] = CursorState.fromModelState(MoveOperations.translateUp(viewModel.cursorConfig, viewModel.model, cursor.modelState));\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = CursorState.fromViewState(MoveOperations.translateUp(viewModel.cursorConfig, viewModel, cursor.viewState));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static moveToBeginningOfLine(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = this._moveToLineStart(viewModel, cursor, inSelectionMode);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _moveToLineStart(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean): PartialCursorState {\n\t\tconst currentViewStateColumn = cursor.viewState.position.column;\n\t\tconst currentModelStateColumn = cursor.modelState.position.column;\n\t\tconst isFirstLineOfWrappedLine = currentViewStateColumn === currentModelStateColumn;\n\n\t\tconst currentViewStatelineNumber = cursor.viewState.position.lineNumber;\n\t\tconst firstNonBlankColumn = viewModel.getLineFirstNonWhitespaceColumn(currentViewStatelineNumber);\n\t\tconst isBeginningOfViewLine = currentViewStateColumn === firstNonBlankColumn;\n\n\t\tif (!isFirstLineOfWrappedLine && !isBeginningOfViewLine) {\n\t\t\treturn this._moveToLineStartByView(viewModel, cursor, inSelectionMode);\n\t\t} else {\n\t\t\treturn this._moveToLineStartByModel(viewModel, cursor, inSelectionMode);\n\t\t}\n\t}\n\n\tprivate static _moveToLineStartByView(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean): PartialCursorState {\n\t\treturn CursorState.fromViewState(\n\t\t\tMoveOperations.moveToBeginningOfLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode)\n\t\t);\n\t}\n\n\tprivate static _moveToLineStartByModel(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean): PartialCursorState {\n\t\treturn CursorState.fromModelState(\n\t\t\tMoveOperations.moveToBeginningOfLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode)\n\t\t);\n\t}\n\n\tpublic static moveToEndOfLine(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, sticky: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = this._moveToLineEnd(viewModel, cursor, inSelectionMode, sticky);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _moveToLineEnd(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, sticky: boolean): PartialCursorState {\n\t\tconst viewStatePosition = cursor.viewState.position;\n\t\tconst viewModelMaxColumn = viewModel.getLineMaxColumn(viewStatePosition.lineNumber);\n\t\tconst isEndOfViewLine = viewStatePosition.column === viewModelMaxColumn;\n\n\t\tconst modelStatePosition = cursor.modelState.position;\n\t\tconst modelMaxColumn = viewModel.model.getLineMaxColumn(modelStatePosition.lineNumber);\n\t\tconst isEndLineOfWrappedLine = viewModelMaxColumn - viewStatePosition.column === modelMaxColumn - modelStatePosition.column;\n\n\t\tif (isEndOfViewLine || isEndLineOfWrappedLine) {\n\t\t\treturn this._moveToLineEndByModel(viewModel, cursor, inSelectionMode, sticky);\n\t\t} else {\n\t\t\treturn this._moveToLineEndByView(viewModel, cursor, inSelectionMode, sticky);\n\t\t}\n\t}\n\n\tprivate static _moveToLineEndByView(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, sticky: boolean): PartialCursorState {\n\t\treturn CursorState.fromViewState(\n\t\t\tMoveOperations.moveToEndOfLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, sticky)\n\t\t);\n\t}\n\n\tprivate static _moveToLineEndByModel(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, sticky: boolean): PartialCursorState {\n\t\treturn CursorState.fromModelState(\n\t\t\tMoveOperations.moveToEndOfLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, sticky)\n\t\t);\n\t}\n\n\tpublic static expandLineSelection(viewModel: IViewModel, cursors: CursorState[]): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\n\t\t\tconst startLineNumber = cursor.modelState.selection.startLineNumber;\n\t\t\tconst lineCount = viewModel.model.getLineCount();\n\n\t\t\tlet endLineNumber = cursor.modelState.selection.endLineNumber;\n\t\t\tlet endColumn: number;\n\t\t\tif (endLineNumber === lineCount) {\n\t\t\t\tendColumn = viewModel.model.getLineMaxColumn(lineCount);\n\t\t\t} else {\n\t\t\t\tendLineNumber++;\n\t\t\t\tendColumn = 1;\n\t\t\t}\n\n\t\t\tresult[i] = CursorState.fromModelState(new SingleCursorState(\n\t\t\t\tnew Range(startLineNumber, 1, startLineNumber, 1), 0,\n\t\t\t\tnew Position(endLineNumber, endColumn), 0\n\t\t\t));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static moveToBeginningOfBuffer(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromModelState(MoveOperations.moveToBeginningOfBuffer(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static moveToEndOfBuffer(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromModelState(MoveOperations.moveToEndOfBuffer(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static selectAll(viewModel: IViewModel, cursor: CursorState): PartialCursorState {\n\t\tconst lineCount = viewModel.model.getLineCount();\n\t\tconst maxColumn = viewModel.model.getLineMaxColumn(lineCount);\n\n\t\treturn CursorState.fromModelState(new SingleCursorState(\n\t\t\tnew Range(1, 1, 1, 1), 0,\n\t\t\tnew Position(lineCount, maxColumn), 0\n\t\t));\n\t}\n\n\tpublic static line(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, _position: IPosition, _viewPosition: IPosition): PartialCursorState {\n\t\tconst position = viewModel.model.validatePosition(_position);\n\t\tconst viewPosition = (\n\t\t\t_viewPosition\n\t\t\t\t? viewModel.coordinatesConverter.validateViewPosition(new Position(_viewPosition.lineNumber, _viewPosition.column), position)\n\t\t\t\t: viewModel.coordinatesConverter.convertModelPositionToViewPosition(position)\n\t\t);\n\n\t\tif (!inSelectionMode || !cursor.modelState.hasSelection()) {\n\t\t\t// Entering line selection for the first time\n\t\t\tconst lineCount = viewModel.model.getLineCount();\n\n\t\t\tlet selectToLineNumber = position.lineNumber + 1;\n\t\t\tlet selectToColumn = 1;\n\t\t\tif (selectToLineNumber > lineCount) {\n\t\t\t\tselectToLineNumber = lineCount;\n\t\t\t\tselectToColumn = viewModel.model.getLineMaxColumn(selectToLineNumber);\n\t\t\t}\n\n\t\t\treturn CursorState.fromModelState(new SingleCursorState(\n\t\t\t\tnew Range(position.lineNumber, 1, selectToLineNumber, selectToColumn), 0,\n\t\t\t\tnew Position(selectToLineNumber, selectToColumn), 0\n\t\t\t));\n\t\t}\n\n\t\t// Continuing line selection\n\t\tconst enteringLineNumber = cursor.modelState.selectionStart.getStartPosition().lineNumber;\n\n\t\tif (position.lineNumber < enteringLineNumber) {\n\n\t\t\treturn CursorState.fromViewState(cursor.viewState.move(\n\t\t\t\tcursor.modelState.hasSelection(), viewPosition.lineNumber, 1, 0\n\t\t\t));\n\n\t\t} else if (position.lineNumber > enteringLineNumber) {\n\n\t\t\tconst lineCount = viewModel.getLineCount();\n\n\t\t\tlet selectToViewLineNumber = viewPosition.lineNumber + 1;\n\t\t\tlet selectToViewColumn = 1;\n\t\t\tif (selectToViewLineNumber > lineCount) {\n\t\t\t\tselectToViewLineNumber = lineCount;\n\t\t\t\tselectToViewColumn = viewModel.getLineMaxColumn(selectToViewLineNumber);\n\t\t\t}\n\n\t\t\treturn CursorState.fromViewState(cursor.viewState.move(\n\t\t\t\tcursor.modelState.hasSelection(), selectToViewLineNumber, selectToViewColumn, 0\n\t\t\t));\n\n\t\t} else {\n\n\t\t\tconst endPositionOfSelectionStart = cursor.modelState.selectionStart.getEndPosition();\n\t\t\treturn CursorState.fromModelState(cursor.modelState.move(\n\t\t\t\tcursor.modelState.hasSelection(), endPositionOfSelectionStart.lineNumber, endPositionOfSelectionStart.column, 0\n\t\t\t));\n\n\t\t}\n\t}\n\n\tpublic static word(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, _position: IPosition): PartialCursorState {\n\t\tconst position = viewModel.model.validatePosition(_position);\n\t\treturn CursorState.fromModelState(WordOperations.word(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, position));\n\t}\n\n\tpublic static cancelSelection(viewModel: IViewModel, cursor: CursorState): PartialCursorState {\n\t\tif (!cursor.modelState.hasSelection()) {\n\t\t\treturn new CursorState(cursor.modelState, cursor.viewState);\n\t\t}\n\n\t\tconst lineNumber = cursor.viewState.position.lineNumber;\n\t\tconst column = cursor.viewState.position.column;\n\n\t\treturn CursorState.fromViewState(new SingleCursorState(\n\t\t\tnew Range(lineNumber, column, lineNumber, column), 0,\n\t\t\tnew Position(lineNumber, column), 0\n\t\t));\n\t}\n\n\tpublic static moveTo(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, _position: IPosition, _viewPosition: IPosition): PartialCursorState {\n\t\tconst position = viewModel.model.validatePosition(_position);\n\t\tconst viewPosition = (\n\t\t\t_viewPosition\n\t\t\t\t? viewModel.coordinatesConverter.validateViewPosition(new Position(_viewPosition.lineNumber, _viewPosition.column), position)\n\t\t\t\t: viewModel.coordinatesConverter.convertModelPositionToViewPosition(position)\n\t\t);\n\t\treturn CursorState.fromViewState(cursor.viewState.move(inSelectionMode, viewPosition.lineNumber, viewPosition.column, 0));\n\t}\n\n\tpublic static simpleMove(viewModel: IViewModel, cursors: CursorState[], direction: CursorMove.SimpleMoveDirection, inSelectionMode: boolean, value: number, unit: CursorMove.Unit): PartialCursorState[] | null {\n\t\tswitch (direction) {\n\t\t\tcase CursorMove.Direction.Left: {\n\t\t\t\tif (unit === CursorMove.Unit.HalfLine) {\n\t\t\t\t\t// Move left by half the current line length\n\t\t\t\t\treturn this._moveHalfLineLeft(viewModel, cursors, inSelectionMode);\n\t\t\t\t} else {\n\t\t\t\t\t// Move left by `moveParams.value` columns\n\t\t\t\t\treturn this._moveLeft(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.Right: {\n\t\t\t\tif (unit === CursorMove.Unit.HalfLine) {\n\t\t\t\t\t// Move right by half the current line length\n\t\t\t\t\treturn this._moveHalfLineRight(viewModel, cursors, inSelectionMode);\n\t\t\t\t} else {\n\t\t\t\t\t// Move right by `moveParams.value` columns\n\t\t\t\t\treturn this._moveRight(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.Up: {\n\t\t\t\tif (unit === CursorMove.Unit.WrappedLine) {\n\t\t\t\t\t// Move up by view lines\n\t\t\t\t\treturn this._moveUpByViewLines(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t} else {\n\t\t\t\t\t// Move up by model lines\n\t\t\t\t\treturn this._moveUpByModelLines(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.Down: {\n\t\t\t\tif (unit === CursorMove.Unit.WrappedLine) {\n\t\t\t\t\t// Move down by view lines\n\t\t\t\t\treturn this._moveDownByViewLines(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t} else {\n\t\t\t\t\t// Move down by model lines\n\t\t\t\t\treturn this._moveDownByModelLines(viewModel, cursors, inSelectionMode, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.PrevBlankLine: {\n\t\t\t\tif (unit === CursorMove.Unit.WrappedLine) {\n\t\t\t\t\treturn cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveToPrevBlankLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode)));\n\t\t\t\t} else {\n\t\t\t\t\treturn cursors.map(cursor => CursorState.fromModelState(MoveOperations.moveToPrevBlankLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.NextBlankLine: {\n\t\t\t\tif (unit === CursorMove.Unit.WrappedLine) {\n\t\t\t\t\treturn cursors.map(cursor => CursorState.fromViewState(MoveOperations.moveToNextBlankLine(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode)));\n\t\t\t\t} else {\n\t\t\t\t\treturn cursors.map(cursor => CursorState.fromModelState(MoveOperations.moveToNextBlankLine(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase CursorMove.Direction.WrappedLineStart: {\n\t\t\t\t// Move to the beginning of the current view line\n\t\t\t\treturn this._moveToViewMinColumn(viewModel, cursors, inSelectionMode);\n\t\t\t}\n\t\t\tcase CursorMove.Direction.WrappedLineFirstNonWhitespaceCharacter: {\n\t\t\t\t// Move to the first non-whitespace column of the current view line\n\t\t\t\treturn this._moveToViewFirstNonWhitespaceColumn(viewModel, cursors, inSelectionMode);\n\t\t\t}\n\t\t\tcase CursorMove.Direction.WrappedLineColumnCenter: {\n\t\t\t\t// Move to the \"center\" of the current view line\n\t\t\t\treturn this._moveToViewCenterColumn(viewModel, cursors, inSelectionMode);\n\t\t\t}\n\t\t\tcase CursorMove.Direction.WrappedLineEnd: {\n\t\t\t\t// Move to the end of the current view line\n\t\t\t\treturn this._moveToViewMaxColumn(viewModel, cursors, inSelectionMode);\n\t\t\t}\n\t\t\tcase CursorMove.Direction.WrappedLineLastNonWhitespaceCharacter: {\n\t\t\t\t// Move to the last non-whitespace column of the current view line\n\t\t\t\treturn this._moveToViewLastNonWhitespaceColumn(viewModel, cursors, inSelectionMode);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\n\t}\n\n\tpublic static viewportMove(viewModel: IViewModel, cursors: CursorState[], direction: CursorMove.ViewportDirection, inSelectionMode: boolean, value: number): PartialCursorState[] | null {\n\t\tconst visibleViewRange = viewModel.getCompletelyVisibleViewRange();\n\t\tconst visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n\t\tswitch (direction) {\n\t\t\tcase CursorMove.Direction.ViewPortTop: {\n\t\t\t\t// Move to the nth line start in the viewport (from the top)\n\t\t\t\tconst modelLineNumber = this._firstLineNumberInRange(viewModel.model, visibleModelRange, value);\n\t\t\t\tconst modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n\t\t\t\treturn [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n\t\t\t}\n\t\t\tcase CursorMove.Direction.ViewPortBottom: {\n\t\t\t\t// Move to the nth line start in the viewport (from the bottom)\n\t\t\t\tconst modelLineNumber = this._lastLineNumberInRange(viewModel.model, visibleModelRange, value);\n\t\t\t\tconst modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n\t\t\t\treturn [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n\t\t\t}\n\t\t\tcase CursorMove.Direction.ViewPortCenter: {\n\t\t\t\t// Move to the line start in the viewport center\n\t\t\t\tconst modelLineNumber = Math.round((visibleModelRange.startLineNumber + visibleModelRange.endLineNumber) / 2);\n\t\t\t\tconst modelColumn = viewModel.model.getLineFirstNonWhitespaceColumn(modelLineNumber);\n\t\t\t\treturn [this._moveToModelPosition(viewModel, cursors[0], inSelectionMode, modelLineNumber, modelColumn)];\n\t\t\t}\n\t\t\tcase CursorMove.Direction.ViewPortIfOutside: {\n\t\t\t\t// Move to a position inside the viewport\n\t\t\t\tlet result: PartialCursorState[] = [];\n\t\t\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\t\t\tconst cursor = cursors[i];\n\t\t\t\t\tresult[i] = this.findPositionInViewportIfOutside(viewModel, cursor, visibleViewRange, inSelectionMode);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static findPositionInViewportIfOutside(viewModel: IViewModel, cursor: CursorState, visibleViewRange: Range, inSelectionMode: boolean): PartialCursorState {\n\t\tlet viewLineNumber = cursor.viewState.position.lineNumber;\n\n\t\tif (visibleViewRange.startLineNumber <= viewLineNumber && viewLineNumber <= visibleViewRange.endLineNumber - 1) {\n\t\t\t// Nothing to do, cursor is in viewport\n\t\t\treturn new CursorState(cursor.modelState, cursor.viewState);\n\n\t\t} else {\n\t\t\tif (viewLineNumber > visibleViewRange.endLineNumber - 1) {\n\t\t\t\tviewLineNumber = visibleViewRange.endLineNumber - 1;\n\t\t\t}\n\t\t\tif (viewLineNumber < visibleViewRange.startLineNumber) {\n\t\t\t\tviewLineNumber = visibleViewRange.startLineNumber;\n\t\t\t}\n\t\t\tconst viewColumn = viewModel.getLineFirstNonWhitespaceColumn(viewLineNumber);\n\t\t\treturn this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Find the nth line start included in the range (from the start).\n\t */\n\tprivate static _firstLineNumberInRange(model: ICursorSimpleModel, range: Range, count: number): number {\n\t\tlet startLineNumber = range.startLineNumber;\n\t\tif (range.startColumn !== model.getLineMinColumn(startLineNumber)) {\n\t\t\t// Move on to the second line if the first line start is not included in the range\n\t\t\tstartLineNumber++;\n\t\t}\n\n\t\treturn Math.min(range.endLineNumber, startLineNumber + count - 1);\n\t}\n\n\t/**\n\t * Find the nth line start included in the range (from the end).\n\t */\n\tprivate static _lastLineNumberInRange(model: ICursorSimpleModel, range: Range, count: number): number {\n\t\tlet startLineNumber = range.startLineNumber;\n\t\tif (range.startColumn !== model.getLineMinColumn(startLineNumber)) {\n\t\t\t// Move on to the second line if the first line start is not included in the range\n\t\t\tstartLineNumber++;\n\t\t}\n\n\t\treturn Math.max(startLineNumber, range.endLineNumber - count + 1);\n\t}\n\n\tprivate static _moveLeft(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, noOfColumns: number): PartialCursorState[] {\n\t\tconst hasMultipleCursors = (cursors.length > 1);\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst skipWrappingPointStop = hasMultipleCursors || !cursor.viewState.hasSelection();\n\t\t\tlet newViewState = MoveOperations.moveLeft(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, noOfColumns);\n\n\t\t\tif (skipWrappingPointStop\n\t\t\t\t&& noOfColumns === 1\n\t\t\t\t&& cursor.viewState.position.column === viewModel.getLineMinColumn(cursor.viewState.position.lineNumber)\n\t\t\t\t&& newViewState.position.lineNumber !== cursor.viewState.position.lineNumber\n\t\t\t) {\n\t\t\t\t// moved over to the previous view line\n\t\t\t\tconst newViewModelPosition = viewModel.coordinatesConverter.convertViewPositionToModelPosition(newViewState.position);\n\t\t\t\tif (newViewModelPosition.lineNumber === cursor.modelState.position.lineNumber) {\n\t\t\t\t\t// stayed on the same model line => pass wrapping point where 2 view positions map to a single model position\n\t\t\t\t\tnewViewState = MoveOperations.moveLeft(viewModel.cursorConfig, viewModel, newViewState, inSelectionMode, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[i] = CursorState.fromViewState(newViewState);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveHalfLineLeft(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst halfLine = Math.round(viewModel.getLineContent(viewLineNumber).length / 2);\n\t\t\tresult[i] = CursorState.fromViewState(MoveOperations.moveLeft(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, halfLine));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveRight(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, noOfColumns: number): PartialCursorState[] {\n\t\tconst hasMultipleCursors = (cursors.length > 1);\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst skipWrappingPointStop = hasMultipleCursors || !cursor.viewState.hasSelection();\n\t\t\tlet newViewState = MoveOperations.moveRight(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, noOfColumns);\n\n\t\t\tif (skipWrappingPointStop\n\t\t\t\t&& noOfColumns === 1\n\t\t\t\t&& cursor.viewState.position.column === viewModel.getLineMaxColumn(cursor.viewState.position.lineNumber)\n\t\t\t\t&& newViewState.position.lineNumber !== cursor.viewState.position.lineNumber\n\t\t\t) {\n\t\t\t\t// moved over to the next view line\n\t\t\t\tconst newViewModelPosition = viewModel.coordinatesConverter.convertViewPositionToModelPosition(newViewState.position);\n\t\t\t\tif (newViewModelPosition.lineNumber === cursor.modelState.position.lineNumber) {\n\t\t\t\t\t// stayed on the same model line => pass wrapping point where 2 view positions map to a single model position\n\t\t\t\t\tnewViewState = MoveOperations.moveRight(viewModel.cursorConfig, viewModel, newViewState, inSelectionMode, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[i] = CursorState.fromViewState(newViewState);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveHalfLineRight(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst halfLine = Math.round(viewModel.getLineContent(viewLineNumber).length / 2);\n\t\t\tresult[i] = CursorState.fromViewState(MoveOperations.moveRight(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, halfLine));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveDownByViewLines(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, linesCount: number): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromViewState(MoveOperations.moveDown(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, linesCount));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveDownByModelLines(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, linesCount: number): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromModelState(MoveOperations.moveDown(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, linesCount));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveUpByViewLines(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, linesCount: number): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromViewState(MoveOperations.moveUp(viewModel.cursorConfig, viewModel, cursor.viewState, inSelectionMode, linesCount));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveUpByModelLines(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean, linesCount: number): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tresult[i] = CursorState.fromModelState(MoveOperations.moveUp(viewModel.cursorConfig, viewModel.model, cursor.modelState, inSelectionMode, linesCount));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveToViewPosition(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, toViewLineNumber: number, toViewColumn: number): PartialCursorState {\n\t\treturn CursorState.fromViewState(cursor.viewState.move(inSelectionMode, toViewLineNumber, toViewColumn, 0));\n\t}\n\n\tprivate static _moveToModelPosition(viewModel: IViewModel, cursor: CursorState, inSelectionMode: boolean, toModelLineNumber: number, toModelColumn: number): PartialCursorState {\n\t\treturn CursorState.fromModelState(cursor.modelState.move(inSelectionMode, toModelLineNumber, toModelColumn, 0));\n\t}\n\n\tprivate static _moveToViewMinColumn(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst viewColumn = viewModel.getLineMinColumn(viewLineNumber);\n\t\t\tresult[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveToViewFirstNonWhitespaceColumn(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst viewColumn = viewModel.getLineFirstNonWhitespaceColumn(viewLineNumber);\n\t\t\tresult[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveToViewCenterColumn(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst viewColumn = Math.round((viewModel.getLineMaxColumn(viewLineNumber) + viewModel.getLineMinColumn(viewLineNumber)) / 2);\n\t\t\tresult[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveToViewMaxColumn(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst viewColumn = viewModel.getLineMaxColumn(viewLineNumber);\n\t\t\tresult[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _moveToViewLastNonWhitespaceColumn(viewModel: IViewModel, cursors: CursorState[], inSelectionMode: boolean): PartialCursorState[] {\n\t\tlet result: PartialCursorState[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tconst cursor = cursors[i];\n\t\t\tconst viewLineNumber = cursor.viewState.position.lineNumber;\n\t\t\tconst viewColumn = viewModel.getLineLastNonWhitespaceColumn(viewLineNumber);\n\t\t\tresult[i] = this._moveToViewPosition(viewModel, cursor, inSelectionMode, viewLineNumber, viewColumn);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace CursorMove {\n\n\tconst isCursorMoveArgs = function (arg: any): boolean {\n\t\tif (!types.isObject(arg)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet cursorMoveArg: RawArguments = arg;\n\n\t\tif (!types.isString(cursorMoveArg.to)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(cursorMoveArg.select) && !types.isBoolean(cursorMoveArg.select)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(cursorMoveArg.by) && !types.isString(cursorMoveArg.by)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(cursorMoveArg.value) && !types.isNumber(cursorMoveArg.value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\texport const description = <ICommandHandlerDescription>{\n\t\tdescription: 'Move cursor to a logical position in the view',\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'Cursor move argument object',\n\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory logical position value providing where to move the cursor.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'left', 'right', 'up', 'down', 'prevBlankLine', 'nextBlankLine',\n\t\t\t\t\t\t'wrappedLineStart', 'wrappedLineEnd', 'wrappedLineColumnCenter'\n\t\t\t\t\t\t'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineLastNonWhitespaceCharacter'\n\t\t\t\t\t\t'viewPortTop', 'viewPortCenter', 'viewPortBottom', 'viewPortIfOutside'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'character', 'halfLine'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'select': If 'true' makes the selection. Default is 'false'.\n\t\t\t\t`,\n\t\t\t\tconstraint: isCursorMoveArgs,\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['to'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'to': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['left', 'right', 'up', 'down', 'prevBlankLine', 'nextBlankLine', 'wrappedLineStart', 'wrappedLineEnd', 'wrappedLineColumnCenter', 'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineLastNonWhitespaceCharacter', 'viewPortTop', 'viewPortCenter', 'viewPortBottom', 'viewPortIfOutside']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'by': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['line', 'wrappedLine', 'character', 'halfLine']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'select': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'default': false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\t/**\n\t * Positions in the view for cursor move command.\n\t */\n\texport const RawDirection = {\n\t\tLeft: 'left',\n\t\tRight: 'right',\n\t\tUp: 'up',\n\t\tDown: 'down',\n\n\t\tPrevBlankLine: 'prevBlankLine',\n\t\tNextBlankLine: 'nextBlankLine',\n\n\t\tWrappedLineStart: 'wrappedLineStart',\n\t\tWrappedLineFirstNonWhitespaceCharacter: 'wrappedLineFirstNonWhitespaceCharacter',\n\t\tWrappedLineColumnCenter: 'wrappedLineColumnCenter',\n\t\tWrappedLineEnd: 'wrappedLineEnd',\n\t\tWrappedLineLastNonWhitespaceCharacter: 'wrappedLineLastNonWhitespaceCharacter',\n\n\t\tViewPortTop: 'viewPortTop',\n\t\tViewPortCenter: 'viewPortCenter',\n\t\tViewPortBottom: 'viewPortBottom',\n\n\t\tViewPortIfOutside: 'viewPortIfOutside'\n\t};\n\n\t/**\n\t * Units for Cursor move 'by' argument\n\t */\n\texport const RawUnit = {\n\t\tLine: 'line',\n\t\tWrappedLine: 'wrappedLine',\n\t\tCharacter: 'character',\n\t\tHalfLine: 'halfLine'\n\t};\n\n\t/**\n\t * Arguments for Cursor move command\n\t */\n\texport interface RawArguments {\n\t\tto: string;\n\t\tselect?: boolean;\n\t\tby?: string;\n\t\tvalue?: number;\n\t}\n\n\texport function parse(args: RawArguments): ParsedArguments | null {\n\t\tif (!args.to) {\n\t\t\t// illegal arguments\n\t\t\treturn null;\n\t\t}\n\n\t\tlet direction: Direction;\n\t\tswitch (args.to) {\n\t\t\tcase RawDirection.Left:\n\t\t\t\tdirection = Direction.Left;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.Right:\n\t\t\t\tdirection = Direction.Right;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.Up:\n\t\t\t\tdirection = Direction.Up;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.Down:\n\t\t\t\tdirection = Direction.Down;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.PrevBlankLine:\n\t\t\t\tdirection = Direction.PrevBlankLine;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.NextBlankLine:\n\t\t\t\tdirection = Direction.NextBlankLine;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.WrappedLineStart:\n\t\t\t\tdirection = Direction.WrappedLineStart;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.WrappedLineFirstNonWhitespaceCharacter:\n\t\t\t\tdirection = Direction.WrappedLineFirstNonWhitespaceCharacter;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.WrappedLineColumnCenter:\n\t\t\t\tdirection = Direction.WrappedLineColumnCenter;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.WrappedLineEnd:\n\t\t\t\tdirection = Direction.WrappedLineEnd;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.WrappedLineLastNonWhitespaceCharacter:\n\t\t\t\tdirection = Direction.WrappedLineLastNonWhitespaceCharacter;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.ViewPortTop:\n\t\t\t\tdirection = Direction.ViewPortTop;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.ViewPortBottom:\n\t\t\t\tdirection = Direction.ViewPortBottom;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.ViewPortCenter:\n\t\t\t\tdirection = Direction.ViewPortCenter;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.ViewPortIfOutside:\n\t\t\t\tdirection = Direction.ViewPortIfOutside;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// illegal arguments\n\t\t\t\treturn null;\n\t\t}\n\n\t\tlet unit = Unit.None;\n\t\tswitch (args.by) {\n\t\t\tcase RawUnit.Line:\n\t\t\t\tunit = Unit.Line;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.WrappedLine:\n\t\t\t\tunit = Unit.WrappedLine;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.Character:\n\t\t\t\tunit = Unit.Character;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.HalfLine:\n\t\t\t\tunit = Unit.HalfLine;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn {\n\t\t\tdirection: direction,\n\t\t\tunit: unit,\n\t\t\tselect: (!!args.select),\n\t\t\tvalue: (args.value || 1)\n\t\t};\n\t}\n\n\texport interface ParsedArguments {\n\t\tdirection: Direction;\n\t\tunit: Unit;\n\t\tselect: boolean;\n\t\tvalue: number;\n\t}\n\n\texport interface SimpleMoveArguments {\n\t\tdirection: SimpleMoveDirection;\n\t\tunit: Unit;\n\t\tselect: boolean;\n\t\tvalue: number;\n\t}\n\n\texport const enum Direction {\n\t\tLeft,\n\t\tRight,\n\t\tUp,\n\t\tDown,\n\t\tPrevBlankLine,\n\t\tNextBlankLine,\n\n\t\tWrappedLineStart,\n\t\tWrappedLineFirstNonWhitespaceCharacter,\n\t\tWrappedLineColumnCenter,\n\t\tWrappedLineEnd,\n\t\tWrappedLineLastNonWhitespaceCharacter,\n\n\t\tViewPortTop,\n\t\tViewPortCenter,\n\t\tViewPortBottom,\n\n\t\tViewPortIfOutside,\n\t}\n\n\texport type SimpleMoveDirection = (\n\t\tDirection.Left\n\t\t| Direction.Right\n\t\t| Direction.Up\n\t\t| Direction.Down\n\t\t| Direction.PrevBlankLine\n\t\t| Direction.NextBlankLine\n\t\t| Direction.WrappedLineStart\n\t\t| Direction.WrappedLineFirstNonWhitespaceCharacter\n\t\t| Direction.WrappedLineColumnCenter\n\t\t| Direction.WrappedLineEnd\n\t\t| Direction.WrappedLineLastNonWhitespaceCharacter\n\t);\n\n\texport type ViewportDirection = (\n\t\tDirection.ViewPortTop\n\t\t| Direction.ViewPortCenter\n\t\t| Direction.ViewPortBottom\n\t\t| Direction.ViewPortIfOutside\n\t);\n\n\texport const enum Unit {\n\t\tNone,\n\t\tLine,\n\t\tWrappedLine,\n\t\tCharacter,\n\t\tHalfLine,\n\t}\n\n}\n"]}