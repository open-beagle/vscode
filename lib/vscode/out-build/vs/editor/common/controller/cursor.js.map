{"version":3,"file":"cursor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/controller/cursor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport { CursorCollection } from 'vs/editor/common/controller/cursorCollection';\nimport { CursorColumns, CursorConfiguration, CursorContext, CursorState, EditOperationResult, EditOperationType, IColumnSelectData, PartialCursorState, ICursorSimpleModel } from 'vs/editor/common/controller/cursorCommon';\nimport { DeleteOperations } from 'vs/editor/common/controller/cursorDeleteOperations';\nimport { CursorChangeReason } from 'vs/editor/common/controller/cursorEvents';\nimport { TypeOperations, TypeWithAutoClosingCommand } from 'vs/editor/common/controller/cursorTypeOperations';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { ISelection, Selection, SelectionDirection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { ITextModel, TrackedRangeStickiness, IModelDeltaDecoration, ICursorStateComputer, IIdentifiedSingleEditOperation, IValidEditOperation } from 'vs/editor/common/model';\nimport { RawContentChangedType, ModelRawContentChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { VerticalRevealType, ViewCursorStateChangedEvent, ViewRevealRangeRequestEvent } from 'vs/editor/common/view/viewEvents';\nimport { dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { ICoordinatesConverter } from 'vs/editor/common/viewModel/viewModel';\nimport { CursorStateChangedEvent, ViewModelEventsCollector } from 'vs/editor/common/viewModel/viewModelEventDispatcher';\n\n/**\n * A snapshot of the cursor and the model state\n */\nexport class CursorModelState {\n\n\tpublic readonly modelVersionId: number;\n\tpublic readonly cursorState: CursorState[];\n\n\tconstructor(model: ITextModel, cursor: Cursor) {\n\t\tthis.modelVersionId = model.getVersionId();\n\t\tthis.cursorState = cursor.getCursorStates();\n\t}\n\n\tpublic equals(other: CursorModelState | null): boolean {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.modelVersionId !== other.modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.cursorState.length !== other.cursorState.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = this.cursorState.length; i < len; i++) {\n\t\t\tif (!this.cursorState[i].equals(other.cursorState[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass AutoClosedAction {\n\n\tpublic static getAllAutoClosedCharacters(autoClosedActions: AutoClosedAction[]): Range[] {\n\t\tlet autoClosedCharacters: Range[] = [];\n\t\tfor (const autoClosedAction of autoClosedActions) {\n\t\t\tautoClosedCharacters = autoClosedCharacters.concat(autoClosedAction.getAutoClosedCharactersRanges());\n\t\t}\n\t\treturn autoClosedCharacters;\n\t}\n\n\tprivate readonly _model: ITextModel;\n\n\tprivate _autoClosedCharactersDecorations: string[];\n\tprivate _autoClosedEnclosingDecorations: string[];\n\n\tconstructor(model: ITextModel, autoClosedCharactersDecorations: string[], autoClosedEnclosingDecorations: string[]) {\n\t\tthis._model = model;\n\t\tthis._autoClosedCharactersDecorations = autoClosedCharactersDecorations;\n\t\tthis._autoClosedEnclosingDecorations = autoClosedEnclosingDecorations;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._autoClosedCharactersDecorations = this._model.deltaDecorations(this._autoClosedCharactersDecorations, []);\n\t\tthis._autoClosedEnclosingDecorations = this._model.deltaDecorations(this._autoClosedEnclosingDecorations, []);\n\t}\n\n\tpublic getAutoClosedCharactersRanges(): Range[] {\n\t\tlet result: Range[] = [];\n\t\tfor (let i = 0; i < this._autoClosedCharactersDecorations.length; i++) {\n\t\t\tconst decorationRange = this._model.getDecorationRange(this._autoClosedCharactersDecorations[i]);\n\t\t\tif (decorationRange) {\n\t\t\t\tresult.push(decorationRange);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic isValid(selections: Range[]): boolean {\n\t\tlet enclosingRanges: Range[] = [];\n\t\tfor (let i = 0; i < this._autoClosedEnclosingDecorations.length; i++) {\n\t\t\tconst decorationRange = this._model.getDecorationRange(this._autoClosedEnclosingDecorations[i]);\n\t\t\tif (decorationRange) {\n\t\t\t\tenclosingRanges.push(decorationRange);\n\t\t\t\tif (decorationRange.startLineNumber !== decorationRange.endLineNumber) {\n\t\t\t\t\t// Stop tracking if the range becomes multiline...\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tenclosingRanges.sort(Range.compareRangesUsingStarts);\n\n\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\tfor (let i = 0; i < selections.length; i++) {\n\t\t\tif (i >= enclosingRanges.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!enclosingRanges[i].strictContainsRange(selections[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport class Cursor extends Disposable {\n\n\tpublic static readonly MAX_CURSOR_COUNT = 10000;\n\n\tprivate readonly _model: ITextModel;\n\tprivate _knownModelVersionId: number;\n\tprivate readonly _viewModel: ICursorSimpleModel;\n\tprivate readonly _coordinatesConverter: ICoordinatesConverter;\n\tpublic context: CursorContext;\n\tprivate _cursors: CursorCollection;\n\n\tprivate _hasFocus: boolean;\n\tprivate _isHandling: boolean;\n\tprivate _isDoingComposition: boolean;\n\tprivate _selectionsWhenCompositionStarted: Selection[] | null;\n\tprivate _columnSelectData: IColumnSelectData | null;\n\tprivate _autoClosedActions: AutoClosedAction[];\n\tprivate _prevEditOperationType: EditOperationType;\n\n\tconstructor(model: ITextModel, viewModel: ICursorSimpleModel, coordinatesConverter: ICoordinatesConverter, cursorConfig: CursorConfiguration) {\n\t\tsuper();\n\t\tthis._model = model;\n\t\tthis._knownModelVersionId = this._model.getVersionId();\n\t\tthis._viewModel = viewModel;\n\t\tthis._coordinatesConverter = coordinatesConverter;\n\t\tthis.context = new CursorContext(this._model, this._coordinatesConverter, cursorConfig);\n\t\tthis._cursors = new CursorCollection(this.context);\n\n\t\tthis._hasFocus = false;\n\t\tthis._isHandling = false;\n\t\tthis._isDoingComposition = false;\n\t\tthis._selectionsWhenCompositionStarted = null;\n\t\tthis._columnSelectData = null;\n\t\tthis._autoClosedActions = [];\n\t\tthis._prevEditOperationType = EditOperationType.Other;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._cursors.dispose();\n\t\tthis._autoClosedActions = dispose(this._autoClosedActions);\n\t\tsuper.dispose();\n\t}\n\n\tpublic updateConfiguration(cursorConfig: CursorConfiguration): void {\n\t\tthis.context = new CursorContext(this._model, this._coordinatesConverter, cursorConfig);\n\t\tthis._cursors.updateContext(this.context);\n\t}\n\n\tpublic onLineMappingChanged(eventsCollector: ViewModelEventsCollector): void {\n\t\tif (this._knownModelVersionId !== this._model.getVersionId()) {\n\t\t\t// There are model change events that I didn't yet receive.\n\t\t\t//\n\t\t\t// This can happen when editing the model, and the view model receives the change events first,\n\t\t\t// and the view model emits line mapping changed events, all before the cursor gets a chance to\n\t\t\t// recover from markers.\n\t\t\t//\n\t\t\t// The model change listener above will be called soon and we'll ensure a valid cursor state there.\n\t\t\treturn;\n\t\t}\n\t\t// Ensure valid state\n\t\tthis.setStates(eventsCollector, 'viewModel', CursorChangeReason.NotSet, this.getCursorStates());\n\t}\n\n\tpublic setHasFocus(hasFocus: boolean): void {\n\t\tthis._hasFocus = hasFocus;\n\t}\n\n\tprivate _validateAutoClosedActions(): void {\n\t\tif (this._autoClosedActions.length > 0) {\n\t\t\tlet selections: Range[] = this._cursors.getSelections();\n\t\t\tfor (let i = 0; i < this._autoClosedActions.length; i++) {\n\t\t\t\tconst autoClosedAction = this._autoClosedActions[i];\n\t\t\t\tif (!autoClosedAction.isValid(selections)) {\n\t\t\t\t\tautoClosedAction.dispose();\n\t\t\t\t\tthis._autoClosedActions.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------ some getters/setters\n\n\tpublic getPrimaryCursorState(): CursorState {\n\t\treturn this._cursors.getPrimaryCursor();\n\t}\n\n\tpublic getLastAddedCursorIndex(): number {\n\t\treturn this._cursors.getLastAddedCursorIndex();\n\t}\n\n\tpublic getCursorStates(): CursorState[] {\n\t\treturn this._cursors.getAll();\n\t}\n\n\tpublic setStates(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, reason: CursorChangeReason, states: PartialCursorState[] | null): boolean {\n\t\tlet reachedMaxCursorCount = false;\n\t\tif (states !== null && states.length > Cursor.MAX_CURSOR_COUNT) {\n\t\t\tstates = states.slice(0, Cursor.MAX_CURSOR_COUNT);\n\t\t\treachedMaxCursorCount = true;\n\t\t}\n\n\t\tconst oldState = new CursorModelState(this._model, this);\n\n\t\tthis._cursors.setStates(states);\n\t\tthis._cursors.normalize();\n\t\tthis._columnSelectData = null;\n\n\t\tthis._validateAutoClosedActions();\n\n\t\treturn this._emitStateChangedIfNecessary(eventsCollector, source, reason, oldState, reachedMaxCursorCount);\n\t}\n\n\tpublic setCursorColumnSelectData(columnSelectData: IColumnSelectData): void {\n\t\tthis._columnSelectData = columnSelectData;\n\t}\n\n\tpublic revealPrimary(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, revealHorizontal: boolean, scrollType: editorCommon.ScrollType): void {\n\t\tconst viewPositions = this._cursors.getViewPositions();\n\t\tif (viewPositions.length > 1) {\n\t\t\tthis._emitCursorRevealRange(eventsCollector, source, null, this._cursors.getViewSelections(), VerticalRevealType.Simple, revealHorizontal, scrollType);\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst viewPosition = viewPositions[0];\n\t\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\t\tthis._emitCursorRevealRange(eventsCollector, source, viewRange, null, VerticalRevealType.Simple, revealHorizontal, scrollType);\n\t\t}\n\t}\n\n\tprivate _revealPrimaryCursor(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, verticalType: VerticalRevealType, revealHorizontal: boolean, scrollType: editorCommon.ScrollType): void {\n\t\tconst viewPositions = this._cursors.getViewPositions();\n\t\tif (viewPositions.length > 1) {\n\t\t\tthis._emitCursorRevealRange(eventsCollector, source, null, this._cursors.getViewSelections(), verticalType, revealHorizontal, scrollType);\n\t\t} else {\n\t\t\tconst viewPosition = viewPositions[0];\n\t\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\t\tthis._emitCursorRevealRange(eventsCollector, source, viewRange, null, verticalType, revealHorizontal, scrollType);\n\t\t}\n\t}\n\n\tprivate _emitCursorRevealRange(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, viewRange: Range | null, viewSelections: Selection[] | null, verticalType: VerticalRevealType, revealHorizontal: boolean, scrollType: editorCommon.ScrollType) {\n\t\teventsCollector.emitViewEvent(new ViewRevealRangeRequestEvent(source, viewRange, viewSelections, verticalType, revealHorizontal, scrollType));\n\t}\n\n\tpublic saveState(): editorCommon.ICursorState[] {\n\n\t\tlet result: editorCommon.ICursorState[] = [];\n\n\t\tconst selections = this._cursors.getSelections();\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\n\t\t\tresult.push({\n\t\t\t\tinSelectionMode: !selection.isEmpty(),\n\t\t\t\tselectionStart: {\n\t\t\t\t\tlineNumber: selection.selectionStartLineNumber,\n\t\t\t\t\tcolumn: selection.selectionStartColumn,\n\t\t\t\t},\n\t\t\t\tposition: {\n\t\t\t\t\tlineNumber: selection.positionLineNumber,\n\t\t\t\t\tcolumn: selection.positionColumn,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic restoreState(eventsCollector: ViewModelEventsCollector, states: editorCommon.ICursorState[]): void {\n\n\t\tlet desiredSelections: ISelection[] = [];\n\n\t\tfor (let i = 0, len = states.length; i < len; i++) {\n\t\t\tconst state = states[i];\n\n\t\t\tlet positionLineNumber = 1;\n\t\t\tlet positionColumn = 1;\n\n\t\t\t// Avoid missing properties on the literal\n\t\t\tif (state.position && state.position.lineNumber) {\n\t\t\t\tpositionLineNumber = state.position.lineNumber;\n\t\t\t}\n\t\t\tif (state.position && state.position.column) {\n\t\t\t\tpositionColumn = state.position.column;\n\t\t\t}\n\n\t\t\tlet selectionStartLineNumber = positionLineNumber;\n\t\t\tlet selectionStartColumn = positionColumn;\n\n\t\t\t// Avoid missing properties on the literal\n\t\t\tif (state.selectionStart && state.selectionStart.lineNumber) {\n\t\t\t\tselectionStartLineNumber = state.selectionStart.lineNumber;\n\t\t\t}\n\t\t\tif (state.selectionStart && state.selectionStart.column) {\n\t\t\t\tselectionStartColumn = state.selectionStart.column;\n\t\t\t}\n\n\t\t\tdesiredSelections.push({\n\t\t\t\tselectionStartLineNumber: selectionStartLineNumber,\n\t\t\t\tselectionStartColumn: selectionStartColumn,\n\t\t\t\tpositionLineNumber: positionLineNumber,\n\t\t\t\tpositionColumn: positionColumn\n\t\t\t});\n\t\t}\n\n\t\tthis.setStates(eventsCollector, 'restoreState', CursorChangeReason.NotSet, CursorState.fromModelSelections(desiredSelections));\n\t\tthis.revealPrimary(eventsCollector, 'restoreState', true, editorCommon.ScrollType.Immediate);\n\t}\n\n\tpublic onModelContentChanged(eventsCollector: ViewModelEventsCollector, e: ModelRawContentChangedEvent): void {\n\n\t\tthis._knownModelVersionId = e.versionId;\n\t\tif (this._isHandling) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hadFlushEvent = e.containsEvent(RawContentChangedType.Flush);\n\t\tthis._prevEditOperationType = EditOperationType.Other;\n\n\t\tif (hadFlushEvent) {\n\t\t\t// a model.setValue() was called\n\t\t\tthis._cursors.dispose();\n\t\t\tthis._cursors = new CursorCollection(this.context);\n\t\t\tthis._validateAutoClosedActions();\n\t\t\tthis._emitStateChangedIfNecessary(eventsCollector, 'model', CursorChangeReason.ContentFlush, null, false);\n\t\t} else {\n\t\t\tif (this._hasFocus && e.resultingSelection && e.resultingSelection.length > 0) {\n\t\t\t\tconst cursorState = CursorState.fromModelSelections(e.resultingSelection);\n\t\t\t\tif (this.setStates(eventsCollector, 'modelChange', e.isUndoing ? CursorChangeReason.Undo : e.isRedoing ? CursorChangeReason.Redo : CursorChangeReason.RecoverFromMarkers, cursorState)) {\n\t\t\t\t\tthis._revealPrimaryCursor(eventsCollector, 'modelChange', VerticalRevealType.Simple, true, editorCommon.ScrollType.Smooth);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst selectionsFromMarkers = this._cursors.readSelectionFromMarkers();\n\t\t\t\tthis.setStates(eventsCollector, 'modelChange', CursorChangeReason.RecoverFromMarkers, CursorState.fromModelSelections(selectionsFromMarkers));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getSelection(): Selection {\n\t\treturn this._cursors.getPrimaryCursor().modelState.selection;\n\t}\n\n\tpublic getTopMostViewPosition(): Position {\n\t\treturn this._cursors.getTopMostViewPosition();\n\t}\n\n\tpublic getBottomMostViewPosition(): Position {\n\t\treturn this._cursors.getBottomMostViewPosition();\n\t}\n\n\tpublic getCursorColumnSelectData(): IColumnSelectData {\n\t\tif (this._columnSelectData) {\n\t\t\treturn this._columnSelectData;\n\t\t}\n\t\tconst primaryCursor = this._cursors.getPrimaryCursor();\n\t\tconst viewSelectionStart = primaryCursor.viewState.selectionStart.getStartPosition();\n\t\tconst viewPosition = primaryCursor.viewState.position;\n\t\treturn {\n\t\t\tisReal: false,\n\t\t\tfromViewLineNumber: viewSelectionStart.lineNumber,\n\t\t\tfromViewVisualColumn: CursorColumns.visibleColumnFromColumn2(this.context.cursorConfig, this._viewModel, viewSelectionStart),\n\t\t\ttoViewLineNumber: viewPosition.lineNumber,\n\t\t\ttoViewVisualColumn: CursorColumns.visibleColumnFromColumn2(this.context.cursorConfig, this._viewModel, viewPosition),\n\t\t};\n\t}\n\n\tpublic getSelections(): Selection[] {\n\t\treturn this._cursors.getSelections();\n\t}\n\n\tpublic getPosition(): Position {\n\t\treturn this._cursors.getPrimaryCursor().modelState.position;\n\t}\n\n\tpublic setSelections(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, selections: readonly ISelection[], reason: CursorChangeReason): void {\n\t\tthis.setStates(eventsCollector, source, reason, CursorState.fromModelSelections(selections));\n\t}\n\n\tpublic getPrevEditOperationType(): EditOperationType {\n\t\treturn this._prevEditOperationType;\n\t}\n\n\tpublic setPrevEditOperationType(type: EditOperationType): void {\n\t\tthis._prevEditOperationType = type;\n\t}\n\n\t// ------ auxiliary handling logic\n\n\tprivate _pushAutoClosedAction(autoClosedCharactersRanges: Range[], autoClosedEnclosingRanges: Range[]): void {\n\t\tlet autoClosedCharactersDeltaDecorations: IModelDeltaDecoration[] = [];\n\t\tlet autoClosedEnclosingDeltaDecorations: IModelDeltaDecoration[] = [];\n\n\t\tfor (let i = 0, len = autoClosedCharactersRanges.length; i < len; i++) {\n\t\t\tautoClosedCharactersDeltaDecorations.push({\n\t\t\t\trange: autoClosedCharactersRanges[i],\n\t\t\t\toptions: {\n\t\t\t\t\tinlineClassName: 'auto-closed-character',\n\t\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t\t\t\t}\n\t\t\t});\n\t\t\tautoClosedEnclosingDeltaDecorations.push({\n\t\t\t\trange: autoClosedEnclosingRanges[i],\n\t\t\t\toptions: {\n\t\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst autoClosedCharactersDecorations = this._model.deltaDecorations([], autoClosedCharactersDeltaDecorations);\n\t\tconst autoClosedEnclosingDecorations = this._model.deltaDecorations([], autoClosedEnclosingDeltaDecorations);\n\t\tthis._autoClosedActions.push(new AutoClosedAction(this._model, autoClosedCharactersDecorations, autoClosedEnclosingDecorations));\n\t}\n\n\tprivate _executeEditOperation(opResult: EditOperationResult | null): void {\n\n\t\tif (!opResult) {\n\t\t\t// Nothing to execute\n\t\t\treturn;\n\t\t}\n\n\t\tif (opResult.shouldPushStackElementBefore) {\n\t\t\tthis._model.pushStackElement();\n\t\t}\n\n\t\tconst result = CommandExecutor.executeCommands(this._model, this._cursors.getSelections(), opResult.commands);\n\t\tif (result) {\n\t\t\t// The commands were applied correctly\n\t\t\tthis._interpretCommandResult(result);\n\n\t\t\t// Check for auto-closing closed characters\n\t\t\tlet autoClosedCharactersRanges: Range[] = [];\n\t\t\tlet autoClosedEnclosingRanges: Range[] = [];\n\n\t\t\tfor (let i = 0; i < opResult.commands.length; i++) {\n\t\t\t\tconst command = opResult.commands[i];\n\t\t\t\tif (command instanceof TypeWithAutoClosingCommand && command.enclosingRange && command.closeCharacterRange) {\n\t\t\t\t\tautoClosedCharactersRanges.push(command.closeCharacterRange);\n\t\t\t\t\tautoClosedEnclosingRanges.push(command.enclosingRange);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (autoClosedCharactersRanges.length > 0) {\n\t\t\t\tthis._pushAutoClosedAction(autoClosedCharactersRanges, autoClosedEnclosingRanges);\n\t\t\t}\n\n\t\t\tthis._prevEditOperationType = opResult.type;\n\t\t}\n\n\t\tif (opResult.shouldPushStackElementAfter) {\n\t\t\tthis._model.pushStackElement();\n\t\t}\n\t}\n\n\tprivate _interpretCommandResult(cursorState: Selection[] | null): void {\n\t\tif (!cursorState || cursorState.length === 0) {\n\t\t\tcursorState = this._cursors.readSelectionFromMarkers();\n\t\t}\n\n\t\tthis._columnSelectData = null;\n\t\tthis._cursors.setSelections(cursorState);\n\t\tthis._cursors.normalize();\n\t}\n\n\t// -----------------------------------------------------------------------------------------------------------\n\t// ----- emitting events\n\n\tprivate _emitStateChangedIfNecessary(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, reason: CursorChangeReason, oldState: CursorModelState | null, reachedMaxCursorCount: boolean): boolean {\n\t\tconst newState = new CursorModelState(this._model, this);\n\t\tif (newState.equals(oldState)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selections = this._cursors.getSelections();\n\t\tconst viewSelections = this._cursors.getViewSelections();\n\n\t\t// Let the view get the event first.\n\t\teventsCollector.emitViewEvent(new ViewCursorStateChangedEvent(viewSelections, selections));\n\n\t\t// Only after the view has been notified, let the rest of the world know...\n\t\tif (!oldState\n\t\t\t|| oldState.cursorState.length !== newState.cursorState.length\n\t\t\t|| newState.cursorState.some((newCursorState, i) => !newCursorState.modelState.equals(oldState.cursorState[i].modelState))\n\t\t) {\n\t\t\tconst oldSelections = oldState ? oldState.cursorState.map(s => s.modelState.selection) : null;\n\t\t\tconst oldModelVersionId = oldState ? oldState.modelVersionId : 0;\n\t\t\teventsCollector.emitOutgoingEvent(new CursorStateChangedEvent(oldSelections, selections, oldModelVersionId, newState.modelVersionId, source || 'keyboard', reason, reachedMaxCursorCount));\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// -----------------------------------------------------------------------------------------------------------\n\t// ----- handlers beyond this point\n\n\tprivate _findAutoClosingPairs(edits: IIdentifiedSingleEditOperation[]): [number, number][] | null {\n\t\tif (!edits.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet indices: [number, number][] = [];\n\t\tfor (let i = 0, len = edits.length; i < len; i++) {\n\t\t\tconst edit = edits[i];\n\t\t\tif (!edit.text || edit.text.indexOf('\\n') >= 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst m = edit.text.match(/([)\\]}>'\"`])([^)\\]}>'\"`]*)$/);\n\t\t\tif (!m) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst closeChar = m[1];\n\n\t\t\tconst autoClosingPairsCandidates = this.context.cursorConfig.autoClosingPairs.autoClosingPairsCloseSingleChar.get(closeChar);\n\t\t\tif (!autoClosingPairsCandidates || autoClosingPairsCandidates.length !== 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst openChar = autoClosingPairsCandidates[0].open;\n\t\t\tconst closeCharIndex = edit.text.length - m[2].length - 1;\n\t\t\tconst openCharIndex = edit.text.lastIndexOf(openChar, closeCharIndex - 1);\n\t\t\tif (openCharIndex === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tindices.push([openCharIndex, closeCharIndex]);\n\t\t}\n\n\t\treturn indices;\n\t}\n\n\tpublic executeEdits(eventsCollector: ViewModelEventsCollector, source: string | null | undefined, edits: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): void {\n\t\tlet autoClosingIndices: [number, number][] | null = null;\n\t\tif (source === 'snippet') {\n\t\t\tautoClosingIndices = this._findAutoClosingPairs(edits);\n\t\t}\n\n\t\tif (autoClosingIndices) {\n\t\t\tedits[0]._isTracked = true;\n\t\t}\n\t\tlet autoClosedCharactersRanges: Range[] = [];\n\t\tlet autoClosedEnclosingRanges: Range[] = [];\n\t\tconst selections = this._model.pushEditOperations(this.getSelections(), edits, (undoEdits) => {\n\t\t\tif (autoClosingIndices) {\n\t\t\t\tfor (let i = 0, len = autoClosingIndices.length; i < len; i++) {\n\t\t\t\t\tconst [openCharInnerIndex, closeCharInnerIndex] = autoClosingIndices[i];\n\t\t\t\t\tconst undoEdit = undoEdits[i];\n\t\t\t\t\tconst lineNumber = undoEdit.range.startLineNumber;\n\t\t\t\t\tconst openCharIndex = undoEdit.range.startColumn - 1 + openCharInnerIndex;\n\t\t\t\t\tconst closeCharIndex = undoEdit.range.startColumn - 1 + closeCharInnerIndex;\n\n\t\t\t\t\tautoClosedCharactersRanges.push(new Range(lineNumber, closeCharIndex + 1, lineNumber, closeCharIndex + 2));\n\t\t\t\t\tautoClosedEnclosingRanges.push(new Range(lineNumber, openCharIndex + 1, lineNumber, closeCharIndex + 2));\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst selections = cursorStateComputer(undoEdits);\n\t\t\tif (selections) {\n\t\t\t\t// Don't recover the selection from markers because\n\t\t\t\t// we know what it should be.\n\t\t\t\tthis._isHandling = true;\n\t\t\t}\n\n\t\t\treturn selections;\n\t\t});\n\t\tif (selections) {\n\t\t\tthis._isHandling = false;\n\t\t\tthis.setSelections(eventsCollector, source, selections, CursorChangeReason.NotSet);\n\t\t}\n\t\tif (autoClosedCharactersRanges.length > 0) {\n\t\t\tthis._pushAutoClosedAction(autoClosedCharactersRanges, autoClosedEnclosingRanges);\n\t\t}\n\t}\n\n\tprivate _executeEdit(callback: () => void, eventsCollector: ViewModelEventsCollector, source: string | null | undefined, cursorChangeReason: CursorChangeReason = CursorChangeReason.NotSet): void {\n\t\tif (this.context.cursorConfig.readOnly) {\n\t\t\t// we cannot edit when read only...\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldState = new CursorModelState(this._model, this);\n\t\tthis._cursors.stopTrackingSelections();\n\t\tthis._isHandling = true;\n\n\t\ttry {\n\t\t\tthis._cursors.ensureValidState();\n\t\t\tcallback();\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t}\n\n\t\tthis._isHandling = false;\n\t\tthis._cursors.startTrackingSelections();\n\t\tthis._validateAutoClosedActions();\n\t\tif (this._emitStateChangedIfNecessary(eventsCollector, source, cursorChangeReason, oldState, false)) {\n\t\t\tthis._revealPrimaryCursor(eventsCollector, source, VerticalRevealType.Simple, true, editorCommon.ScrollType.Smooth);\n\t\t}\n\t}\n\n\tpublic setIsDoingComposition(isDoingComposition: boolean): void {\n\t\tthis._isDoingComposition = isDoingComposition;\n\t}\n\n\tpublic getAutoClosedCharacters(): Range[] {\n\t\treturn AutoClosedAction.getAllAutoClosedCharacters(this._autoClosedActions);\n\t}\n\n\tpublic startComposition(eventsCollector: ViewModelEventsCollector): void {\n\t\tthis._selectionsWhenCompositionStarted = this.getSelections().slice(0);\n\t}\n\n\tpublic endComposition(eventsCollector: ViewModelEventsCollector, source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tif (source === 'keyboard') {\n\t\t\t\t// composition finishes, let's check if we need to auto complete if necessary.\n\t\t\t\tthis._executeEditOperation(TypeOperations.compositionEndWithInterceptors(this._prevEditOperationType, this.context.cursorConfig, this._model, this._selectionsWhenCompositionStarted, this.getSelections(), this.getAutoClosedCharacters()));\n\t\t\t\tthis._selectionsWhenCompositionStarted = null;\n\t\t\t}\n\t\t}, eventsCollector, source);\n\t}\n\n\tpublic type(eventsCollector: ViewModelEventsCollector, text: string, source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tif (source === 'keyboard') {\n\t\t\t\t// If this event is coming straight from the keyboard, look for electric characters and enter\n\n\t\t\t\tconst len = text.length;\n\t\t\t\tlet offset = 0;\n\t\t\t\twhile (offset < len) {\n\t\t\t\t\tconst charLength = strings.nextCharLength(text, offset);\n\t\t\t\t\tconst chr = text.substr(offset, charLength);\n\n\t\t\t\t\t// Here we must interpret each typed character individually\n\t\t\t\t\tthis._executeEditOperation(TypeOperations.typeWithInterceptors(this._isDoingComposition, this._prevEditOperationType, this.context.cursorConfig, this._model, this.getSelections(), this.getAutoClosedCharacters(), chr));\n\n\t\t\t\t\toffset += charLength;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis._executeEditOperation(TypeOperations.typeWithoutInterceptors(this._prevEditOperationType, this.context.cursorConfig, this._model, this.getSelections(), text));\n\t\t\t}\n\t\t}, eventsCollector, source);\n\t}\n\n\tpublic compositionType(eventsCollector: ViewModelEventsCollector, text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number, source?: string | null | undefined): void {\n\t\tif (text.length === 0 && replacePrevCharCnt === 0 && replaceNextCharCnt === 0) {\n\t\t\t// this edit is a no-op\n\t\t\tif (positionDelta !== 0) {\n\t\t\t\t// but it still wants to move the cursor\n\t\t\t\tconst newSelections = this.getSelections().map(selection => {\n\t\t\t\t\tconst position = selection.getPosition();\n\t\t\t\t\treturn new Selection(position.lineNumber, position.column + positionDelta, position.lineNumber, position.column + positionDelta);\n\t\t\t\t});\n\t\t\t\tthis.setSelections(eventsCollector, source, newSelections, CursorChangeReason.NotSet);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis._executeEdit(() => {\n\t\t\tthis._executeEditOperation(TypeOperations.compositionType(this._prevEditOperationType, this.context.cursorConfig, this._model, this.getSelections(), text, replacePrevCharCnt, replaceNextCharCnt, positionDelta));\n\t\t}, eventsCollector, source);\n\t}\n\n\tpublic paste(eventsCollector: ViewModelEventsCollector, text: string, pasteOnNewLine: boolean, multicursorText?: string[] | null | undefined, source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tthis._executeEditOperation(TypeOperations.paste(this.context.cursorConfig, this._model, this.getSelections(), text, pasteOnNewLine, multicursorText || []));\n\t\t}, eventsCollector, source, CursorChangeReason.Paste);\n\t}\n\n\tpublic cut(eventsCollector: ViewModelEventsCollector, source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tthis._executeEditOperation(DeleteOperations.cut(this.context.cursorConfig, this._model, this.getSelections()));\n\t\t}, eventsCollector, source);\n\t}\n\n\tpublic executeCommand(eventsCollector: ViewModelEventsCollector, command: editorCommon.ICommand, source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tthis._cursors.killSecondaryCursors();\n\n\t\t\tthis._executeEditOperation(new EditOperationResult(EditOperationType.Other, [command], {\n\t\t\t\tshouldPushStackElementBefore: false,\n\t\t\t\tshouldPushStackElementAfter: false\n\t\t\t}));\n\t\t}, eventsCollector, source);\n\t}\n\n\tpublic executeCommands(eventsCollector: ViewModelEventsCollector, commands: editorCommon.ICommand[], source?: string | null | undefined): void {\n\t\tthis._executeEdit(() => {\n\t\t\tthis._executeEditOperation(new EditOperationResult(EditOperationType.Other, commands, {\n\t\t\t\tshouldPushStackElementBefore: false,\n\t\t\t\tshouldPushStackElementAfter: false\n\t\t\t}));\n\t\t}, eventsCollector, source);\n\t}\n}\n\ninterface IExecContext {\n\treadonly model: ITextModel;\n\treadonly selectionsBefore: Selection[];\n\treadonly trackedRanges: string[];\n\treadonly trackedRangesDirection: SelectionDirection[];\n}\n\ninterface ICommandData {\n\toperations: IIdentifiedSingleEditOperation[];\n\thadTrackedEditOperation: boolean;\n}\n\ninterface ICommandsData {\n\toperations: IIdentifiedSingleEditOperation[];\n\thadTrackedEditOperation: boolean;\n}\n\nclass CommandExecutor {\n\n\tpublic static executeCommands(model: ITextModel, selectionsBefore: Selection[], commands: (editorCommon.ICommand | null)[]): Selection[] | null {\n\n\t\tconst ctx: IExecContext = {\n\t\t\tmodel: model,\n\t\t\tselectionsBefore: selectionsBefore,\n\t\t\ttrackedRanges: [],\n\t\t\ttrackedRangesDirection: []\n\t\t};\n\n\t\tconst result = this._innerExecuteCommands(ctx, commands);\n\n\t\tfor (let i = 0, len = ctx.trackedRanges.length; i < len; i++) {\n\t\t\tctx.model._setTrackedRange(ctx.trackedRanges[i], null, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _innerExecuteCommands(ctx: IExecContext, commands: (editorCommon.ICommand | null)[]): Selection[] | null {\n\n\t\tif (this._arrayIsEmpty(commands)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst commandsData = this._getEditOperations(ctx, commands);\n\t\tif (commandsData.operations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rawOperations = commandsData.operations;\n\n\t\tconst loserCursorsMap = this._getLoserCursorMap(rawOperations);\n\t\tif (loserCursorsMap.hasOwnProperty('0')) {\n\t\t\t// These commands are very messed up\n\t\t\tconsole.warn('Ignoring commands');\n\t\t\treturn null;\n\t\t}\n\n\t\t// Remove operations belonging to losing cursors\n\t\tlet filteredOperations: IIdentifiedSingleEditOperation[] = [];\n\t\tfor (let i = 0, len = rawOperations.length; i < len; i++) {\n\t\t\tif (!loserCursorsMap.hasOwnProperty(rawOperations[i].identifier!.major.toString())) {\n\t\t\t\tfilteredOperations.push(rawOperations[i]);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@Alex: find a better way to do this.\n\t\t// give the hint that edit operations are tracked to the model\n\t\tif (commandsData.hadTrackedEditOperation && filteredOperations.length > 0) {\n\t\t\tfilteredOperations[0]._isTracked = true;\n\t\t}\n\t\tlet selectionsAfter = ctx.model.pushEditOperations(ctx.selectionsBefore, filteredOperations, (inverseEditOperations: IValidEditOperation[]): Selection[] => {\n\t\t\tlet groupedInverseEditOperations: IValidEditOperation[][] = [];\n\t\t\tfor (let i = 0; i < ctx.selectionsBefore.length; i++) {\n\t\t\t\tgroupedInverseEditOperations[i] = [];\n\t\t\t}\n\t\t\tfor (const op of inverseEditOperations) {\n\t\t\t\tif (!op.identifier) {\n\t\t\t\t\t// perhaps auto whitespace trim edits\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tgroupedInverseEditOperations[op.identifier.major].push(op);\n\t\t\t}\n\t\t\tconst minorBasedSorter = (a: IValidEditOperation, b: IValidEditOperation) => {\n\t\t\t\treturn a.identifier!.minor - b.identifier!.minor;\n\t\t\t};\n\t\t\tlet cursorSelections: Selection[] = [];\n\t\t\tfor (let i = 0; i < ctx.selectionsBefore.length; i++) {\n\t\t\t\tif (groupedInverseEditOperations[i].length > 0) {\n\t\t\t\t\tgroupedInverseEditOperations[i].sort(minorBasedSorter);\n\t\t\t\t\tcursorSelections[i] = commands[i]!.computeCursorState(ctx.model, {\n\t\t\t\t\t\tgetInverseEditOperations: () => {\n\t\t\t\t\t\t\treturn groupedInverseEditOperations[i];\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tgetTrackedSelection: (id: string) => {\n\t\t\t\t\t\t\tconst idx = parseInt(id, 10);\n\t\t\t\t\t\t\tconst range = ctx.model._getTrackedRange(ctx.trackedRanges[idx])!;\n\t\t\t\t\t\t\tif (ctx.trackedRangesDirection[idx] === SelectionDirection.LTR) {\n\t\t\t\t\t\t\t\treturn new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcursorSelections[i] = ctx.selectionsBefore[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cursorSelections;\n\t\t});\n\t\tif (!selectionsAfter) {\n\t\t\tselectionsAfter = ctx.selectionsBefore;\n\t\t}\n\n\t\t// Extract losing cursors\n\t\tlet losingCursors: number[] = [];\n\t\tfor (let losingCursorIndex in loserCursorsMap) {\n\t\t\tif (loserCursorsMap.hasOwnProperty(losingCursorIndex)) {\n\t\t\t\tlosingCursors.push(parseInt(losingCursorIndex, 10));\n\t\t\t}\n\t\t}\n\n\t\t// Sort losing cursors descending\n\t\tlosingCursors.sort((a: number, b: number): number => {\n\t\t\treturn b - a;\n\t\t});\n\n\t\t// Remove losing cursors\n\t\tfor (const losingCursor of losingCursors) {\n\t\t\tselectionsAfter.splice(losingCursor, 1);\n\t\t}\n\n\t\treturn selectionsAfter;\n\t}\n\n\tprivate static _arrayIsEmpty(commands: (editorCommon.ICommand | null)[]): boolean {\n\t\tfor (let i = 0, len = commands.length; i < len; i++) {\n\t\t\tif (commands[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _getEditOperations(ctx: IExecContext, commands: (editorCommon.ICommand | null)[]): ICommandsData {\n\t\tlet operations: IIdentifiedSingleEditOperation[] = [];\n\t\tlet hadTrackedEditOperation: boolean = false;\n\n\t\tfor (let i = 0, len = commands.length; i < len; i++) {\n\t\t\tconst command = commands[i];\n\t\t\tif (command) {\n\t\t\t\tconst r = this._getEditOperationsFromCommand(ctx, i, command);\n\t\t\t\toperations = operations.concat(r.operations);\n\t\t\t\thadTrackedEditOperation = hadTrackedEditOperation || r.hadTrackedEditOperation;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\toperations: operations,\n\t\t\thadTrackedEditOperation: hadTrackedEditOperation\n\t\t};\n\t}\n\n\tprivate static _getEditOperationsFromCommand(ctx: IExecContext, majorIdentifier: number, command: editorCommon.ICommand): ICommandData {\n\t\t// This method acts as a transaction, if the command fails\n\t\t// everything it has done is ignored\n\t\tlet operations: IIdentifiedSingleEditOperation[] = [];\n\t\tlet operationMinor = 0;\n\n\t\tconst addEditOperation = (range: IRange, text: string | null, forceMoveMarkers: boolean = false) => {\n\t\t\tif (Range.isEmpty(range) && text === '') {\n\t\t\t\t// This command wants to add a no-op => no thank you\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toperations.push({\n\t\t\t\tidentifier: {\n\t\t\t\t\tmajor: majorIdentifier,\n\t\t\t\t\tminor: operationMinor++\n\t\t\t\t},\n\t\t\t\trange: range,\n\t\t\t\ttext: text,\n\t\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\t\tisAutoWhitespaceEdit: command.insertsAutoWhitespace\n\t\t\t});\n\t\t};\n\n\t\tlet hadTrackedEditOperation = false;\n\t\tconst addTrackedEditOperation = (selection: IRange, text: string | null, forceMoveMarkers?: boolean) => {\n\t\t\thadTrackedEditOperation = true;\n\t\t\taddEditOperation(selection, text, forceMoveMarkers);\n\t\t};\n\n\t\tconst trackSelection = (_selection: ISelection, trackPreviousOnEmpty?: boolean) => {\n\t\t\tconst selection = Selection.liftSelection(_selection);\n\t\t\tlet stickiness: TrackedRangeStickiness;\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tif (typeof trackPreviousOnEmpty === 'boolean') {\n\t\t\t\t\tif (trackPreviousOnEmpty) {\n\t\t\t\t\t\tstickiness = TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstickiness = TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Try to lock it with surrounding text\n\t\t\t\t\tconst maxLineColumn = ctx.model.getLineMaxColumn(selection.startLineNumber);\n\t\t\t\t\tif (selection.startColumn === maxLineColumn) {\n\t\t\t\t\t\tstickiness = TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstickiness = TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstickiness = TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\t\t\t}\n\n\t\t\tconst l = ctx.trackedRanges.length;\n\t\t\tconst id = ctx.model._setTrackedRange(null, selection, stickiness);\n\t\t\tctx.trackedRanges[l] = id;\n\t\t\tctx.trackedRangesDirection[l] = selection.getDirection();\n\t\t\treturn l.toString();\n\t\t};\n\n\t\tconst editOperationBuilder: editorCommon.IEditOperationBuilder = {\n\t\t\taddEditOperation: addEditOperation,\n\t\t\taddTrackedEditOperation: addTrackedEditOperation,\n\t\t\ttrackSelection: trackSelection\n\t\t};\n\n\t\ttry {\n\t\t\tcommand.getEditOperations(ctx.model, editOperationBuilder);\n\t\t} catch (e) {\n\t\t\t// TODO@Alex use notification service if this should be user facing\n\t\t\t// e.friendlyMessage = nls.localize('corrupt.commands', \"Unexpected exception while executing command.\");\n\t\t\tonUnexpectedError(e);\n\t\t\treturn {\n\t\t\t\toperations: [],\n\t\t\t\thadTrackedEditOperation: false\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\toperations: operations,\n\t\t\thadTrackedEditOperation: hadTrackedEditOperation\n\t\t};\n\t}\n\n\tprivate static _getLoserCursorMap(operations: IIdentifiedSingleEditOperation[]): { [index: string]: boolean; } {\n\t\t// This is destructive on the array\n\t\toperations = operations.slice(0);\n\n\t\t// Sort operations with last one first\n\t\toperations.sort((a: IIdentifiedSingleEditOperation, b: IIdentifiedSingleEditOperation): number => {\n\t\t\t// Note the minus!\n\t\t\treturn -(Range.compareRangesUsingEnds(a.range, b.range));\n\t\t});\n\n\t\t// Operations can not overlap!\n\t\tlet loserCursorsMap: { [index: string]: boolean; } = {};\n\n\t\tfor (let i = 1; i < operations.length; i++) {\n\t\t\tconst previousOp = operations[i - 1];\n\t\t\tconst currentOp = operations[i];\n\n\t\t\tif (Range.getStartPosition(previousOp.range).isBefore(Range.getEndPosition(currentOp.range))) {\n\n\t\t\t\tlet loserMajor: number;\n\n\t\t\t\tif (previousOp.identifier!.major > currentOp.identifier!.major) {\n\t\t\t\t\t// previousOp loses the battle\n\t\t\t\t\tloserMajor = previousOp.identifier!.major;\n\t\t\t\t} else {\n\t\t\t\t\tloserMajor = currentOp.identifier!.major;\n\t\t\t\t}\n\n\t\t\t\tloserCursorsMap[loserMajor.toString()] = true;\n\n\t\t\t\tfor (let j = 0; j < operations.length; j++) {\n\t\t\t\t\tif (operations[j].identifier!.major === loserMajor) {\n\t\t\t\t\t\toperations.splice(j, 1);\n\t\t\t\t\t\tif (j < i) {\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn loserCursorsMap;\n\t}\n}\n"]}