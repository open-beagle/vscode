{"version":3,"file":"cursorCollection.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/controller/cursorCollection.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CursorContext, CursorState, PartialCursorState } from 'vs/editor/common/controller/cursorCommon';\nimport { OneCursor } from 'vs/editor/common/controller/oneCursor';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\n\nexport class CursorCollection {\n\n\tprivate context: CursorContext;\n\n\tprivate primaryCursor: OneCursor;\n\tprivate secondaryCursors: OneCursor[];\n\n\t// An index which identifies the last cursor that was added / moved (think Ctrl+drag)\n\tprivate lastAddedCursorIndex: number;\n\n\tconstructor(context: CursorContext) {\n\t\tthis.context = context;\n\t\tthis.primaryCursor = new OneCursor(context);\n\t\tthis.secondaryCursors = [];\n\t\tthis.lastAddedCursorIndex = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.primaryCursor.dispose(this.context);\n\t\tthis.killSecondaryCursors();\n\t}\n\n\tpublic startTrackingSelections(): void {\n\t\tthis.primaryCursor.startTrackingSelection(this.context);\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tthis.secondaryCursors[i].startTrackingSelection(this.context);\n\t\t}\n\t}\n\n\tpublic stopTrackingSelections(): void {\n\t\tthis.primaryCursor.stopTrackingSelection(this.context);\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tthis.secondaryCursors[i].stopTrackingSelection(this.context);\n\t\t}\n\t}\n\n\tpublic updateContext(context: CursorContext): void {\n\t\tthis.context = context;\n\t}\n\n\tpublic ensureValidState(): void {\n\t\tthis.primaryCursor.ensureValidState(this.context);\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tthis.secondaryCursors[i].ensureValidState(this.context);\n\t\t}\n\t}\n\n\tpublic readSelectionFromMarkers(): Selection[] {\n\t\tlet result: Selection[] = [];\n\t\tresult[0] = this.primaryCursor.readSelectionFromMarkers(this.context);\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i].readSelectionFromMarkers(this.context);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getAll(): CursorState[] {\n\t\tlet result: CursorState[] = [];\n\t\tresult[0] = this.primaryCursor.asCursorState();\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i].asCursorState();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getViewPositions(): Position[] {\n\t\tlet result: Position[] = [];\n\t\tresult[0] = this.primaryCursor.viewState.position;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i].viewState.position;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getTopMostViewPosition(): Position {\n\t\tlet result = this.primaryCursor.viewState.position;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tconst viewPosition = this.secondaryCursors[i].viewState.position;\n\t\t\tif (viewPosition.isBefore(result)) {\n\t\t\t\tresult = viewPosition;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getBottomMostViewPosition(): Position {\n\t\tlet result = this.primaryCursor.viewState.position;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tconst viewPosition = this.secondaryCursors[i].viewState.position;\n\t\t\tif (result.isBeforeOrEqual(viewPosition)) {\n\t\t\t\tresult = viewPosition;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getSelections(): Selection[] {\n\t\tlet result: Selection[] = [];\n\t\tresult[0] = this.primaryCursor.modelState.selection;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i].modelState.selection;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getViewSelections(): Selection[] {\n\t\tlet result: Selection[] = [];\n\t\tresult[0] = this.primaryCursor.viewState.selection;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i].viewState.selection;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic setSelections(selections: ISelection[]): void {\n\t\tthis.setStates(CursorState.fromModelSelections(selections));\n\t}\n\n\tpublic getPrimaryCursor(): CursorState {\n\t\treturn this.primaryCursor.asCursorState();\n\t}\n\n\tpublic setStates(states: PartialCursorState[] | null): void {\n\t\tif (states === null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.primaryCursor.setState(this.context, states[0].modelState, states[0].viewState);\n\t\tthis._setSecondaryStates(states.slice(1));\n\t}\n\n\t/**\n\t * Creates or disposes secondary cursors as necessary to match the number of `secondarySelections`.\n\t */\n\tprivate _setSecondaryStates(secondaryStates: PartialCursorState[]): void {\n\t\tconst secondaryCursorsLength = this.secondaryCursors.length;\n\t\tconst secondaryStatesLength = secondaryStates.length;\n\n\t\tif (secondaryCursorsLength < secondaryStatesLength) {\n\t\t\tlet createCnt = secondaryStatesLength - secondaryCursorsLength;\n\t\t\tfor (let i = 0; i < createCnt; i++) {\n\t\t\t\tthis._addSecondaryCursor();\n\t\t\t}\n\t\t} else if (secondaryCursorsLength > secondaryStatesLength) {\n\t\t\tlet removeCnt = secondaryCursorsLength - secondaryStatesLength;\n\t\t\tfor (let i = 0; i < removeCnt; i++) {\n\t\t\t\tthis._removeSecondaryCursor(this.secondaryCursors.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < secondaryStatesLength; i++) {\n\t\t\tthis.secondaryCursors[i].setState(this.context, secondaryStates[i].modelState, secondaryStates[i].viewState);\n\t\t}\n\t}\n\n\tpublic killSecondaryCursors(): void {\n\t\tthis._setSecondaryStates([]);\n\t}\n\n\tprivate _addSecondaryCursor(): void {\n\t\tthis.secondaryCursors.push(new OneCursor(this.context));\n\t\tthis.lastAddedCursorIndex = this.secondaryCursors.length;\n\t}\n\n\tpublic getLastAddedCursorIndex(): number {\n\t\tif (this.secondaryCursors.length === 0 || this.lastAddedCursorIndex === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.lastAddedCursorIndex;\n\t}\n\n\tprivate _removeSecondaryCursor(removeIndex: number): void {\n\t\tif (this.lastAddedCursorIndex >= removeIndex + 1) {\n\t\t\tthis.lastAddedCursorIndex--;\n\t\t}\n\t\tthis.secondaryCursors[removeIndex].dispose(this.context);\n\t\tthis.secondaryCursors.splice(removeIndex, 1);\n\t}\n\n\tprivate _getAll(): OneCursor[] {\n\t\tlet result: OneCursor[] = [];\n\t\tresult[0] = this.primaryCursor;\n\t\tfor (let i = 0, len = this.secondaryCursors.length; i < len; i++) {\n\t\t\tresult[i + 1] = this.secondaryCursors[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic normalize(): void {\n\t\tif (this.secondaryCursors.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet cursors = this._getAll();\n\n\t\tinterface SortedCursor {\n\t\t\tindex: number;\n\t\t\tselection: Selection;\n\t\t}\n\t\tlet sortedCursors: SortedCursor[] = [];\n\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\tsortedCursors.push({\n\t\t\t\tindex: i,\n\t\t\t\tselection: cursors[i].modelState.selection,\n\t\t\t});\n\t\t}\n\t\tsortedCursors.sort((a, b) => {\n\t\t\tif (a.selection.startLineNumber === b.selection.startLineNumber) {\n\t\t\t\treturn a.selection.startColumn - b.selection.startColumn;\n\t\t\t}\n\t\t\treturn a.selection.startLineNumber - b.selection.startLineNumber;\n\t\t});\n\n\t\tfor (let sortedCursorIndex = 0; sortedCursorIndex < sortedCursors.length - 1; sortedCursorIndex++) {\n\t\t\tconst current = sortedCursors[sortedCursorIndex];\n\t\t\tconst next = sortedCursors[sortedCursorIndex + 1];\n\n\t\t\tconst currentSelection = current.selection;\n\t\t\tconst nextSelection = next.selection;\n\n\t\t\tif (!this.context.cursorConfig.multiCursorMergeOverlapping) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet shouldMergeCursors: boolean;\n\t\t\tif (nextSelection.isEmpty() || currentSelection.isEmpty()) {\n\t\t\t\t// Merge touching cursors if one of them is collapsed\n\t\t\t\tshouldMergeCursors = nextSelection.getStartPosition().isBeforeOrEqual(currentSelection.getEndPosition());\n\t\t\t} else {\n\t\t\t\t// Merge only overlapping cursors (i.e. allow touching ranges)\n\t\t\t\tshouldMergeCursors = nextSelection.getStartPosition().isBefore(currentSelection.getEndPosition());\n\t\t\t}\n\n\t\t\tif (shouldMergeCursors) {\n\t\t\t\tconst winnerSortedCursorIndex = current.index < next.index ? sortedCursorIndex : sortedCursorIndex + 1;\n\t\t\t\tconst looserSortedCursorIndex = current.index < next.index ? sortedCursorIndex + 1 : sortedCursorIndex;\n\n\t\t\t\tconst looserIndex = sortedCursors[looserSortedCursorIndex].index;\n\t\t\t\tconst winnerIndex = sortedCursors[winnerSortedCursorIndex].index;\n\n\t\t\t\tconst looserSelection = sortedCursors[looserSortedCursorIndex].selection;\n\t\t\t\tconst winnerSelection = sortedCursors[winnerSortedCursorIndex].selection;\n\n\t\t\t\tif (!looserSelection.equalsSelection(winnerSelection)) {\n\t\t\t\t\tconst resultingRange = looserSelection.plusRange(winnerSelection);\n\t\t\t\t\tconst looserSelectionIsLTR = (looserSelection.selectionStartLineNumber === looserSelection.startLineNumber && looserSelection.selectionStartColumn === looserSelection.startColumn);\n\t\t\t\t\tconst winnerSelectionIsLTR = (winnerSelection.selectionStartLineNumber === winnerSelection.startLineNumber && winnerSelection.selectionStartColumn === winnerSelection.startColumn);\n\n\t\t\t\t\t// Give more importance to the last added cursor (think Ctrl-dragging + hitting another cursor)\n\t\t\t\t\tlet resultingSelectionIsLTR: boolean;\n\t\t\t\t\tif (looserIndex === this.lastAddedCursorIndex) {\n\t\t\t\t\t\tresultingSelectionIsLTR = looserSelectionIsLTR;\n\t\t\t\t\t\tthis.lastAddedCursorIndex = winnerIndex;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Winner takes it all\n\t\t\t\t\t\tresultingSelectionIsLTR = winnerSelectionIsLTR;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet resultingSelection: Selection;\n\t\t\t\t\tif (resultingSelectionIsLTR) {\n\t\t\t\t\t\tresultingSelection = new Selection(resultingRange.startLineNumber, resultingRange.startColumn, resultingRange.endLineNumber, resultingRange.endColumn);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultingSelection = new Selection(resultingRange.endLineNumber, resultingRange.endColumn, resultingRange.startLineNumber, resultingRange.startColumn);\n\t\t\t\t\t}\n\n\t\t\t\t\tsortedCursors[winnerSortedCursorIndex].selection = resultingSelection;\n\t\t\t\t\tconst resultingState = CursorState.fromModelSelection(resultingSelection);\n\t\t\t\t\tcursors[winnerIndex].setState(this.context, resultingState.modelState, resultingState.viewState);\n\t\t\t\t}\n\n\t\t\t\tfor (const sortedCursor of sortedCursors) {\n\t\t\t\t\tif (sortedCursor.index > looserIndex) {\n\t\t\t\t\t\tsortedCursor.index--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcursors.splice(looserIndex, 1);\n\t\t\t\tsortedCursors.splice(looserSortedCursorIndex, 1);\n\t\t\t\tthis._removeSecondaryCursor(looserIndex - 1);\n\n\t\t\t\tsortedCursorIndex--;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}