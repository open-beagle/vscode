{"version":3,"file":"viewLayout.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/viewLayout/viewLayout.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IScrollPosition, ScrollEvent, Scrollable, ScrollbarVisibility, INewScrollPosition } from 'vs/base/common/scrollable';\nimport { ConfigurationChangedEvent, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IConfiguration, ScrollType } from 'vs/editor/common/editorCommon';\nimport { LinesLayout, IEditorWhitespace, IWhitespaceChangeAccessor } from 'vs/editor/common/viewLayout/linesLayout';\nimport { IPartialViewLinesViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { IViewLayout, IViewWhitespaceViewportData, Viewport } from 'vs/editor/common/viewModel/viewModel';\nimport { ContentSizeChangedEvent } from 'vs/editor/common/viewModel/viewModelEventDispatcher';\n\nconst SMOOTH_SCROLLING_TIME = 125;\n\nclass EditorScrollDimensions {\n\n\tpublic readonly width: number;\n\tpublic readonly contentWidth: number;\n\tpublic readonly scrollWidth: number;\n\n\tpublic readonly height: number;\n\tpublic readonly contentHeight: number;\n\tpublic readonly scrollHeight: number;\n\n\tconstructor(\n\t\twidth: number,\n\t\tcontentWidth: number,\n\t\theight: number,\n\t\tcontentHeight: number,\n\t) {\n\t\twidth = width | 0;\n\t\tcontentWidth = contentWidth | 0;\n\t\theight = height | 0;\n\t\tcontentHeight = contentHeight | 0;\n\n\t\tif (width < 0) {\n\t\t\twidth = 0;\n\t\t}\n\t\tif (contentWidth < 0) {\n\t\t\tcontentWidth = 0;\n\t\t}\n\n\t\tif (height < 0) {\n\t\t\theight = 0;\n\t\t}\n\t\tif (contentHeight < 0) {\n\t\t\tcontentHeight = 0;\n\t\t}\n\n\t\tthis.width = width;\n\t\tthis.contentWidth = contentWidth;\n\t\tthis.scrollWidth = Math.max(width, contentWidth);\n\n\t\tthis.height = height;\n\t\tthis.contentHeight = contentHeight;\n\t\tthis.scrollHeight = Math.max(height, contentHeight);\n\t}\n\n\tpublic equals(other: EditorScrollDimensions): boolean {\n\t\treturn (\n\t\t\tthis.width === other.width\n\t\t\t&& this.contentWidth === other.contentWidth\n\t\t\t&& this.height === other.height\n\t\t\t&& this.contentHeight === other.contentHeight\n\t\t);\n\t}\n}\n\nclass EditorScrollable extends Disposable {\n\n\tprivate readonly _scrollable: Scrollable;\n\tprivate _dimensions: EditorScrollDimensions;\n\n\tpublic readonly onDidScroll: Event<ScrollEvent>;\n\n\tprivate readonly _onDidContentSizeChange = this._register(new Emitter<ContentSizeChangedEvent>());\n\tpublic readonly onDidContentSizeChange: Event<ContentSizeChangedEvent> = this._onDidContentSizeChange.event;\n\n\tconstructor(smoothScrollDuration: number, scheduleAtNextAnimationFrame: (callback: () => void) => IDisposable) {\n\t\tsuper();\n\t\tthis._dimensions = new EditorScrollDimensions(0, 0, 0, 0);\n\t\tthis._scrollable = this._register(new Scrollable(smoothScrollDuration, scheduleAtNextAnimationFrame));\n\t\tthis.onDidScroll = this._scrollable.onScroll;\n\t}\n\n\tpublic getScrollable(): Scrollable {\n\t\treturn this._scrollable;\n\t}\n\n\tpublic setSmoothScrollDuration(smoothScrollDuration: number): void {\n\t\tthis._scrollable.setSmoothScrollDuration(smoothScrollDuration);\n\t}\n\n\tpublic validateScrollPosition(scrollPosition: INewScrollPosition): IScrollPosition {\n\t\treturn this._scrollable.validateScrollPosition(scrollPosition);\n\t}\n\n\tpublic getScrollDimensions(): EditorScrollDimensions {\n\t\treturn this._dimensions;\n\t}\n\n\tpublic setScrollDimensions(dimensions: EditorScrollDimensions): void {\n\t\tif (this._dimensions.equals(dimensions)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldDimensions = this._dimensions;\n\t\tthis._dimensions = dimensions;\n\n\t\tthis._scrollable.setScrollDimensions({\n\t\t\twidth: dimensions.width,\n\t\t\tscrollWidth: dimensions.scrollWidth,\n\t\t\theight: dimensions.height,\n\t\t\tscrollHeight: dimensions.scrollHeight\n\t\t}, true);\n\n\t\tconst contentWidthChanged = (oldDimensions.contentWidth !== dimensions.contentWidth);\n\t\tconst contentHeightChanged = (oldDimensions.contentHeight !== dimensions.contentHeight);\n\t\tif (contentWidthChanged || contentHeightChanged) {\n\t\t\tthis._onDidContentSizeChange.fire(new ContentSizeChangedEvent(\n\t\t\t\toldDimensions.contentWidth, oldDimensions.contentHeight,\n\t\t\t\tdimensions.contentWidth, dimensions.contentHeight\n\t\t\t));\n\t\t}\n\t}\n\n\tpublic getFutureScrollPosition(): IScrollPosition {\n\t\treturn this._scrollable.getFutureScrollPosition();\n\t}\n\n\tpublic getCurrentScrollPosition(): IScrollPosition {\n\t\treturn this._scrollable.getCurrentScrollPosition();\n\t}\n\n\tpublic setScrollPositionNow(update: INewScrollPosition): void {\n\t\tthis._scrollable.setScrollPositionNow(update);\n\t}\n\n\tpublic setScrollPositionSmooth(update: INewScrollPosition): void {\n\t\tthis._scrollable.setScrollPositionSmooth(update);\n\t}\n}\n\nexport class ViewLayout extends Disposable implements IViewLayout {\n\n\tprivate readonly _configuration: IConfiguration;\n\tprivate readonly _linesLayout: LinesLayout;\n\n\tprivate readonly _scrollable: EditorScrollable;\n\tpublic readonly onDidScroll: Event<ScrollEvent>;\n\tpublic readonly onDidContentSizeChange: Event<ContentSizeChangedEvent>;\n\n\tconstructor(configuration: IConfiguration, lineCount: number, scheduleAtNextAnimationFrame: (callback: () => void) => IDisposable) {\n\t\tsuper();\n\n\t\tthis._configuration = configuration;\n\t\tconst options = this._configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst padding = options.get(EditorOption.padding);\n\n\t\tthis._linesLayout = new LinesLayout(lineCount, options.get(EditorOption.lineHeight), padding.top, padding.bottom);\n\n\t\tthis._scrollable = this._register(new EditorScrollable(0, scheduleAtNextAnimationFrame));\n\t\tthis._configureSmoothScrollDuration();\n\n\t\tthis._scrollable.setScrollDimensions(new EditorScrollDimensions(\n\t\t\tlayoutInfo.contentWidth,\n\t\t\t0,\n\t\t\tlayoutInfo.height,\n\t\t\t0\n\t\t));\n\t\tthis.onDidScroll = this._scrollable.onDidScroll;\n\t\tthis.onDidContentSizeChange = this._scrollable.onDidContentSizeChange;\n\n\t\tthis._updateHeight();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic getScrollable(): Scrollable {\n\t\treturn this._scrollable.getScrollable();\n\t}\n\n\tpublic onHeightMaybeChanged(): void {\n\t\tthis._updateHeight();\n\t}\n\n\tprivate _configureSmoothScrollDuration(): void {\n\t\tthis._scrollable.setSmoothScrollDuration(this._configuration.options.get(EditorOption.smoothScrolling) ? SMOOTH_SCROLLING_TIME : 0);\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onConfigurationChanged(e: ConfigurationChangedEvent): void {\n\t\tconst options = this._configuration.options;\n\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\tthis._linesLayout.setLineHeight(options.get(EditorOption.lineHeight));\n\t\t}\n\t\tif (e.hasChanged(EditorOption.padding)) {\n\t\t\tconst padding = options.get(EditorOption.padding);\n\t\t\tthis._linesLayout.setPadding(padding.top, padding.bottom);\n\t\t}\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\t\tconst width = layoutInfo.contentWidth;\n\t\t\tconst height = layoutInfo.height;\n\t\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\t\tconst contentWidth = scrollDimensions.contentWidth;\n\t\t\tthis._scrollable.setScrollDimensions(new EditorScrollDimensions(\n\t\t\t\twidth,\n\t\t\t\tscrollDimensions.contentWidth,\n\t\t\t\theight,\n\t\t\t\tthis._getContentHeight(width, height, contentWidth)\n\t\t\t));\n\t\t} else {\n\t\t\tthis._updateHeight();\n\t\t}\n\t\tif (e.hasChanged(EditorOption.smoothScrolling)) {\n\t\t\tthis._configureSmoothScrollDuration();\n\t\t}\n\t}\n\tpublic onFlushed(lineCount: number): void {\n\t\tthis._linesLayout.onFlushed(lineCount);\n\t}\n\tpublic onLinesDeleted(fromLineNumber: number, toLineNumber: number): void {\n\t\tthis._linesLayout.onLinesDeleted(fromLineNumber, toLineNumber);\n\t}\n\tpublic onLinesInserted(fromLineNumber: number, toLineNumber: number): void {\n\t\tthis._linesLayout.onLinesInserted(fromLineNumber, toLineNumber);\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _getHorizontalScrollbarHeight(width: number, scrollWidth: number): number {\n\t\tconst options = this._configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tif (scrollbar.horizontal === ScrollbarVisibility.Hidden) {\n\t\t\t// horizontal scrollbar not visible\n\t\t\treturn 0;\n\t\t}\n\t\tif (width >= scrollWidth) {\n\t\t\t// horizontal scrollbar not visible\n\t\t\treturn 0;\n\t\t}\n\t\treturn scrollbar.horizontalScrollbarSize;\n\t}\n\n\tprivate _getContentHeight(width: number, height: number, contentWidth: number): number {\n\t\tconst options = this._configuration.options;\n\n\t\tlet result = this._linesLayout.getLinesTotalHeight();\n\t\tif (options.get(EditorOption.scrollBeyondLastLine)) {\n\t\t\tresult += Math.max(0, height - options.get(EditorOption.lineHeight) - options.get(EditorOption.padding).bottom);\n\t\t} else {\n\t\t\tresult += this._getHorizontalScrollbarHeight(width, contentWidth);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _updateHeight(): void {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\tconst width = scrollDimensions.width;\n\t\tconst height = scrollDimensions.height;\n\t\tconst contentWidth = scrollDimensions.contentWidth;\n\t\tthis._scrollable.setScrollDimensions(new EditorScrollDimensions(\n\t\t\twidth,\n\t\t\tscrollDimensions.contentWidth,\n\t\t\theight,\n\t\t\tthis._getContentHeight(width, height, contentWidth)\n\t\t));\n\t}\n\n\t// ---- Layouting logic\n\n\tpublic getCurrentViewport(): Viewport {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\tconst currentScrollPosition = this._scrollable.getCurrentScrollPosition();\n\t\treturn new Viewport(\n\t\t\tcurrentScrollPosition.scrollTop,\n\t\t\tcurrentScrollPosition.scrollLeft,\n\t\t\tscrollDimensions.width,\n\t\t\tscrollDimensions.height\n\t\t);\n\t}\n\n\tpublic getFutureViewport(): Viewport {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\tconst currentScrollPosition = this._scrollable.getFutureScrollPosition();\n\t\treturn new Viewport(\n\t\t\tcurrentScrollPosition.scrollTop,\n\t\t\tcurrentScrollPosition.scrollLeft,\n\t\t\tscrollDimensions.width,\n\t\t\tscrollDimensions.height\n\t\t);\n\t}\n\n\tprivate _computeContentWidth(maxLineWidth: number): number {\n\t\tconst options = this._configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tif (wrappingInfo.isViewportWrapping) {\n\t\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\t\tconst minimap = options.get(EditorOption.minimap);\n\t\t\tif (maxLineWidth > layoutInfo.contentWidth + fontInfo.typicalHalfwidthCharacterWidth) {\n\t\t\t\t// This is a case where viewport wrapping is on, but the line extends above the viewport\n\t\t\t\tif (minimap.enabled && minimap.side === 'right') {\n\t\t\t\t\t// We need to accomodate the scrollbar width\n\t\t\t\t\treturn maxLineWidth + layoutInfo.verticalScrollbarWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxLineWidth;\n\t\t} else {\n\t\t\tconst extraHorizontalSpace = options.get(EditorOption.scrollBeyondLastColumn) * fontInfo.typicalHalfwidthCharacterWidth;\n\t\t\tconst whitespaceMinWidth = this._linesLayout.getWhitespaceMinWidth();\n\t\t\treturn Math.max(maxLineWidth + extraHorizontalSpace, whitespaceMinWidth);\n\t\t}\n\t}\n\n\tpublic setMaxLineWidth(maxLineWidth: number): void {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\t// const newScrollWidth = ;\n\t\tthis._scrollable.setScrollDimensions(new EditorScrollDimensions(\n\t\t\tscrollDimensions.width,\n\t\t\tthis._computeContentWidth(maxLineWidth),\n\t\t\tscrollDimensions.height,\n\t\t\tscrollDimensions.contentHeight\n\t\t));\n\n\t\t// The height might depend on the fact that there is a horizontal scrollbar or not\n\t\tthis._updateHeight();\n\t}\n\n\t// ---- view state\n\n\tpublic saveState(): { scrollTop: number; scrollTopWithoutViewZones: number; scrollLeft: number; } {\n\t\tconst currentScrollPosition = this._scrollable.getFutureScrollPosition();\n\t\tlet scrollTop = currentScrollPosition.scrollTop;\n\t\tlet firstLineNumberInViewport = this._linesLayout.getLineNumberAtOrAfterVerticalOffset(scrollTop);\n\t\tlet whitespaceAboveFirstLine = this._linesLayout.getWhitespaceAccumulatedHeightBeforeLineNumber(firstLineNumberInViewport);\n\t\treturn {\n\t\t\tscrollTop: scrollTop,\n\t\t\tscrollTopWithoutViewZones: scrollTop - whitespaceAboveFirstLine,\n\t\t\tscrollLeft: currentScrollPosition.scrollLeft\n\t\t};\n\t}\n\n\t// ---- IVerticalLayoutProvider\n\tpublic changeWhitespace(callback: (accessor: IWhitespaceChangeAccessor) => void): boolean {\n\t\tconst hadAChange = this._linesLayout.changeWhitespace(callback);\n\t\tif (hadAChange) {\n\t\t\tthis.onHeightMaybeChanged();\n\t\t}\n\t\treturn hadAChange;\n\t}\n\tpublic getVerticalOffsetForLineNumber(lineNumber: number): number {\n\t\treturn this._linesLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t}\n\tpublic isAfterLines(verticalOffset: number): boolean {\n\t\treturn this._linesLayout.isAfterLines(verticalOffset);\n\t}\n\tpublic isInTopPadding(verticalOffset: number): boolean {\n\t\treturn this._linesLayout.isInTopPadding(verticalOffset);\n\t}\n\tisInBottomPadding(verticalOffset: number): boolean {\n\t\treturn this._linesLayout.isInBottomPadding(verticalOffset);\n\t}\n\n\tpublic getLineNumberAtVerticalOffset(verticalOffset: number): number {\n\t\treturn this._linesLayout.getLineNumberAtOrAfterVerticalOffset(verticalOffset);\n\t}\n\n\tpublic getWhitespaceAtVerticalOffset(verticalOffset: number): IViewWhitespaceViewportData | null {\n\t\treturn this._linesLayout.getWhitespaceAtVerticalOffset(verticalOffset);\n\t}\n\tpublic getLinesViewportData(): IPartialViewLinesViewportData {\n\t\tconst visibleBox = this.getCurrentViewport();\n\t\treturn this._linesLayout.getLinesViewportData(visibleBox.top, visibleBox.top + visibleBox.height);\n\t}\n\tpublic getLinesViewportDataAtScrollTop(scrollTop: number): IPartialViewLinesViewportData {\n\t\t// do some minimal validations on scrollTop\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\tif (scrollTop + scrollDimensions.height > scrollDimensions.scrollHeight) {\n\t\t\tscrollTop = scrollDimensions.scrollHeight - scrollDimensions.height;\n\t\t}\n\t\tif (scrollTop < 0) {\n\t\t\tscrollTop = 0;\n\t\t}\n\t\treturn this._linesLayout.getLinesViewportData(scrollTop, scrollTop + scrollDimensions.height);\n\t}\n\tpublic getWhitespaceViewportData(): IViewWhitespaceViewportData[] {\n\t\tconst visibleBox = this.getCurrentViewport();\n\t\treturn this._linesLayout.getWhitespaceViewportData(visibleBox.top, visibleBox.top + visibleBox.height);\n\t}\n\tpublic getWhitespaces(): IEditorWhitespace[] {\n\t\treturn this._linesLayout.getWhitespaces();\n\t}\n\n\t// ---- IScrollingProvider\n\n\tpublic getContentWidth(): number {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\treturn scrollDimensions.contentWidth;\n\t}\n\tpublic getScrollWidth(): number {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\treturn scrollDimensions.scrollWidth;\n\t}\n\tpublic getContentHeight(): number {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\treturn scrollDimensions.contentHeight;\n\t}\n\tpublic getScrollHeight(): number {\n\t\tconst scrollDimensions = this._scrollable.getScrollDimensions();\n\t\treturn scrollDimensions.scrollHeight;\n\t}\n\n\tpublic getCurrentScrollLeft(): number {\n\t\tconst currentScrollPosition = this._scrollable.getCurrentScrollPosition();\n\t\treturn currentScrollPosition.scrollLeft;\n\t}\n\tpublic getCurrentScrollTop(): number {\n\t\tconst currentScrollPosition = this._scrollable.getCurrentScrollPosition();\n\t\treturn currentScrollPosition.scrollTop;\n\t}\n\n\tpublic validateScrollPosition(scrollPosition: INewScrollPosition): IScrollPosition {\n\t\treturn this._scrollable.validateScrollPosition(scrollPosition);\n\t}\n\n\tpublic setScrollPosition(position: INewScrollPosition, type: ScrollType): void {\n\t\tif (type === ScrollType.Immediate) {\n\t\t\tthis._scrollable.setScrollPositionNow(position);\n\t\t} else {\n\t\t\tthis._scrollable.setScrollPositionSmooth(position);\n\t\t}\n\t}\n\n\tpublic deltaScrollNow(deltaScrollLeft: number, deltaScrollTop: number): void {\n\t\tconst currentScrollPosition = this._scrollable.getCurrentScrollPosition();\n\t\tthis._scrollable.setScrollPositionNow({\n\t\t\tscrollLeft: currentScrollPosition.scrollLeft + deltaScrollLeft,\n\t\t\tscrollTop: currentScrollPosition.scrollTop + deltaScrollTop\n\t\t});\n\t}\n}\n"]}