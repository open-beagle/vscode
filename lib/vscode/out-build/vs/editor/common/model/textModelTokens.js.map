{"version":3,"file":"textModelTokens.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/model/textModelTokens.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { TokenizationResult2 } from 'vs/editor/common/core/token';\nimport { RawContentChangedType } from 'vs/editor/common/model/textModelEvents';\nimport { IState, ITokenizationSupport, LanguageIdentifier, TokenizationRegistry } from 'vs/editor/common/modes';\nimport { nullTokenize2 } from 'vs/editor/common/modes/nullMode';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { MultilineTokensBuilder, countEOL } from 'vs/editor/common/model/tokensStore';\nimport * as platform from 'vs/base/common/platform';\n\nconst enum Constants {\n\tCHEAP_TOKENIZATION_LENGTH_LIMIT = 2048\n}\n\nexport class TokenizationStateStore {\n\tprivate _beginState: (IState | null)[];\n\tprivate _valid: boolean[];\n\tprivate _len: number;\n\tprivate _invalidLineStartIndex: number;\n\n\tconstructor() {\n\t\tthis._beginState = [];\n\t\tthis._valid = [];\n\t\tthis._len = 0;\n\t\tthis._invalidLineStartIndex = 0;\n\t}\n\n\tprivate _reset(initialState: IState | null): void {\n\t\tthis._beginState = [];\n\t\tthis._valid = [];\n\t\tthis._len = 0;\n\t\tthis._invalidLineStartIndex = 0;\n\n\t\tif (initialState) {\n\t\t\tthis._setBeginState(0, initialState);\n\t\t}\n\t}\n\n\tpublic flush(initialState: IState | null): void {\n\t\tthis._reset(initialState);\n\t}\n\n\tpublic get invalidLineStartIndex() {\n\t\treturn this._invalidLineStartIndex;\n\t}\n\n\tprivate _invalidateLine(lineIndex: number): void {\n\t\tif (lineIndex < this._len) {\n\t\t\tthis._valid[lineIndex] = false;\n\t\t}\n\n\t\tif (lineIndex < this._invalidLineStartIndex) {\n\t\t\tthis._invalidLineStartIndex = lineIndex;\n\t\t}\n\t}\n\n\tprivate _isValid(lineIndex: number): boolean {\n\t\tif (lineIndex < this._len) {\n\t\t\treturn this._valid[lineIndex];\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getBeginState(lineIndex: number): IState | null {\n\t\tif (lineIndex < this._len) {\n\t\t\treturn this._beginState[lineIndex];\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _ensureLine(lineIndex: number): void {\n\t\twhile (lineIndex >= this._len) {\n\t\t\tthis._beginState[this._len] = null;\n\t\t\tthis._valid[this._len] = false;\n\t\t\tthis._len++;\n\t\t}\n\t}\n\n\tprivate _deleteLines(start: number, deleteCount: number): void {\n\t\tif (deleteCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (start + deleteCount > this._len) {\n\t\t\tdeleteCount = this._len - start;\n\t\t}\n\t\tthis._beginState.splice(start, deleteCount);\n\t\tthis._valid.splice(start, deleteCount);\n\t\tthis._len -= deleteCount;\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet beginState: (IState | null)[] = [];\n\t\tlet valid: boolean[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tbeginState[i] = null;\n\t\t\tvalid[i] = false;\n\t\t}\n\t\tthis._beginState = arrays.arrayInsert(this._beginState, insertIndex, beginState);\n\t\tthis._valid = arrays.arrayInsert(this._valid, insertIndex, valid);\n\t\tthis._len += insertCount;\n\t}\n\n\tprivate _setValid(lineIndex: number, valid: boolean): void {\n\t\tthis._ensureLine(lineIndex);\n\t\tthis._valid[lineIndex] = valid;\n\t}\n\n\tprivate _setBeginState(lineIndex: number, beginState: IState | null): void {\n\t\tthis._ensureLine(lineIndex);\n\t\tthis._beginState[lineIndex] = beginState;\n\t}\n\n\tpublic setEndState(linesLength: number, lineIndex: number, endState: IState): void {\n\t\tthis._setValid(lineIndex, true);\n\t\tthis._invalidLineStartIndex = lineIndex + 1;\n\n\t\t// Check if this was the last line\n\t\tif (lineIndex === linesLength - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the end state has changed\n\t\tconst previousEndState = this.getBeginState(lineIndex + 1);\n\t\tif (previousEndState === null || !endState.equals(previousEndState)) {\n\t\t\tthis._setBeginState(lineIndex + 1, endState);\n\t\t\tthis._invalidateLine(lineIndex + 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// Perhaps we can skip tokenizing some lines...\n\t\tlet i = lineIndex + 1;\n\t\twhile (i < linesLength) {\n\t\t\tif (!this._isValid(i)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tthis._invalidLineStartIndex = i;\n\t}\n\n\tpublic setFakeTokens(lineIndex: number): void {\n\t\tthis._setValid(lineIndex, false);\n\t}\n\n\t//#region Editing\n\n\tpublic applyEdits(range: IRange, eolCount: number): void {\n\t\tconst deletingLinesCnt = range.endLineNumber - range.startLineNumber;\n\t\tconst insertingLinesCnt = eolCount;\n\t\tconst editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n\n\t\tfor (let j = editingLinesCnt; j >= 0; j--) {\n\t\t\tthis._invalidateLine(range.startLineNumber + j - 1);\n\t\t}\n\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tconst firstLineIndex = range.startLineNumber - 1;\n\t\tif (firstLineIndex >= this._len) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number): void {\n\n\t\tconst lineIndex = position.lineNumber - 1;\n\t\tif (lineIndex >= this._len) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\t//#endregion\n}\n\nexport class TextModelTokenization extends Disposable {\n\n\tprivate readonly _textModel: TextModel;\n\tprivate readonly _tokenizationStateStore: TokenizationStateStore;\n\tprivate _isDisposed: boolean;\n\tprivate _tokenizationSupport: ITokenizationSupport | null;\n\n\tconstructor(textModel: TextModel) {\n\t\tsuper();\n\t\tthis._isDisposed = false;\n\t\tthis._textModel = textModel;\n\t\tthis._tokenizationStateStore = new TokenizationStateStore();\n\t\tthis._tokenizationSupport = null;\n\n\t\tthis._register(TokenizationRegistry.onDidChange((e) => {\n\t\t\tconst languageIdentifier = this._textModel.getLanguageIdentifier();\n\t\t\tif (e.changedLanguages.indexOf(languageIdentifier.language) === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._resetTokenizationState();\n\t\t\tthis._textModel.clearTokens();\n\t\t}));\n\n\t\tthis._register(this._textModel.onDidChangeRawContentFast((e) => {\n\t\t\tif (e.containsEvent(RawContentChangedType.Flush)) {\n\t\t\t\tthis._resetTokenizationState();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._textModel.onDidChangeContentFast((e) => {\n\t\t\tfor (let i = 0, len = e.changes.length; i < len; i++) {\n\t\t\t\tconst change = e.changes[i];\n\t\t\t\tconst [eolCount] = countEOL(change.text);\n\t\t\t\tthis._tokenizationStateStore.applyEdits(change.range, eolCount);\n\t\t\t}\n\n\t\t\tthis._beginBackgroundTokenization();\n\t\t}));\n\n\t\tthis._register(this._textModel.onDidChangeAttached(() => {\n\t\t\tthis._beginBackgroundTokenization();\n\t\t}));\n\n\t\tthis._register(this._textModel.onDidChangeLanguage(() => {\n\t\t\tthis._resetTokenizationState();\n\t\t\tthis._textModel.clearTokens();\n\t\t}));\n\n\t\tthis._resetTokenizationState();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tprivate _resetTokenizationState(): void {\n\t\tconst [tokenizationSupport, initialState] = initializeTokenization(this._textModel);\n\t\tthis._tokenizationSupport = tokenizationSupport;\n\t\tthis._tokenizationStateStore.flush(initialState);\n\t\tthis._beginBackgroundTokenization();\n\t}\n\n\tprivate _beginBackgroundTokenization(): void {\n\t\tif (this._textModel.isAttachedToEditor() && this._hasLinesToTokenize()) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// disposed in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._revalidateTokensNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _revalidateTokensNow(toLineNumber: number = this._textModel.getLineCount()): void {\n\t\tconst MAX_ALLOWED_TIME = 1;\n\t\tconst builder = new MultilineTokensBuilder();\n\t\tconst sw = StopWatch.create(false);\n\n\t\twhile (this._hasLinesToTokenize()) {\n\t\t\tif (sw.elapsed() > MAX_ALLOWED_TIME) {\n\t\t\t\t// Stop if MAX_ALLOWED_TIME is reached\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n\n\t\t\tif (tokenizedLineNumber >= toLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._beginBackgroundTokenization();\n\t\tthis._textModel.setTokens(builder.tokens);\n\t}\n\n\tpublic tokenizeViewport(startLineNumber: number, endLineNumber: number): void {\n\t\tconst builder = new MultilineTokensBuilder();\n\t\tthis._tokenizeViewport(builder, startLineNumber, endLineNumber);\n\t\tthis._textModel.setTokens(builder.tokens);\n\t}\n\n\tpublic reset(): void {\n\t\tthis._resetTokenizationState();\n\t\tthis._textModel.clearTokens();\n\t}\n\n\tpublic forceTokenization(lineNumber: number): void {\n\t\tconst builder = new MultilineTokensBuilder();\n\t\tthis._updateTokensUntilLine(builder, lineNumber);\n\t\tthis._textModel.setTokens(builder.tokens);\n\t}\n\n\tpublic isCheapToTokenize(lineNumber: number): boolean {\n\t\tif (!this._tokenizationSupport) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n\t\tif (lineNumber > firstInvalidLineNumber) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (lineNumber < firstInvalidLineNumber) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._textModel.getLineLength(lineNumber) < Constants.CHEAP_TOKENIZATION_LENGTH_LIMIT) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _hasLinesToTokenize(): boolean {\n\t\tif (!this._tokenizationSupport) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount());\n\t}\n\n\tprivate _tokenizeOneInvalidLine(builder: MultilineTokensBuilder): number {\n\t\tif (!this._hasLinesToTokenize()) {\n\t\t\treturn this._textModel.getLineCount() + 1;\n\t\t}\n\t\tconst lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n\t\tthis._updateTokensUntilLine(builder, lineNumber);\n\t\treturn lineNumber;\n\t}\n\n\tprivate _updateTokensUntilLine(builder: MultilineTokensBuilder, lineNumber: number): void {\n\t\tif (!this._tokenizationSupport) {\n\t\t\treturn;\n\t\t}\n\t\tconst languageIdentifier = this._textModel.getLanguageIdentifier();\n\t\tconst linesLength = this._textModel.getLineCount();\n\t\tconst endLineIndex = lineNumber - 1;\n\n\t\t// Validate all states up to and including endLineIndex\n\t\tfor (let lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n\t\t\tconst text = this._textModel.getLineContent(lineIndex + 1);\n\t\t\tconst lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\n\n\t\t\tconst r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, true, lineStartState!);\n\t\t\tbuilder.add(lineIndex + 1, r.tokens);\n\t\t\tthis._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\n\t\t\tlineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\n\t\t}\n\t}\n\n\tprivate _tokenizeViewport(builder: MultilineTokensBuilder, startLineNumber: number, endLineNumber: number): void {\n\t\tif (!this._tokenizationSupport) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n\t\t\t// tokenization has reached the viewport start...\n\t\t\tthis._updateTokensUntilLine(builder, endLineNumber);\n\t\t\treturn;\n\t\t}\n\n\t\tlet nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\t\tlet fakeLines: string[] = [];\n\t\tlet initialState: IState | null = null;\n\t\tfor (let i = startLineNumber - 1; nonWhitespaceColumn > 0 && i >= 1; i--) {\n\t\t\tlet newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n\n\t\t\tif (newNonWhitespaceIndex === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (newNonWhitespaceIndex < nonWhitespaceColumn) {\n\t\t\t\tinitialState = this._tokenizationStateStore.getBeginState(i - 1);\n\t\t\t\tif (initialState) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfakeLines.push(this._textModel.getLineContent(i));\n\t\t\t\tnonWhitespaceColumn = newNonWhitespaceIndex;\n\t\t\t}\n\t\t}\n\n\t\tif (!initialState) {\n\t\t\tinitialState = this._tokenizationSupport.getInitialState();\n\t\t}\n\n\t\tconst languageIdentifier = this._textModel.getLanguageIdentifier();\n\t\tlet state = initialState;\n\t\tfor (let i = fakeLines.length - 1; i >= 0; i--) {\n\t\t\tlet r = safeTokenize(languageIdentifier, this._tokenizationSupport, fakeLines[i], false, state);\n\t\t\tstate = r.endState;\n\t\t}\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tlet text = this._textModel.getLineContent(lineNumber);\n\t\t\tlet r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, true, state);\n\t\t\tbuilder.add(lineNumber, r.tokens);\n\t\t\tthis._tokenizationStateStore.setFakeTokens(lineNumber - 1);\n\t\t\tstate = r.endState;\n\t\t}\n\t}\n}\n\nfunction initializeTokenization(textModel: TextModel): [ITokenizationSupport | null, IState | null] {\n\tconst languageIdentifier = textModel.getLanguageIdentifier();\n\tlet tokenizationSupport = (\n\t\ttextModel.isTooLargeForTokenization()\n\t\t\t? null\n\t\t\t: TokenizationRegistry.get(languageIdentifier.language)\n\t);\n\tlet initialState: IState | null = null;\n\tif (tokenizationSupport) {\n\t\ttry {\n\t\t\tinitialState = tokenizationSupport.getInitialState();\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t\ttokenizationSupport = null;\n\t\t}\n\t}\n\treturn [tokenizationSupport, initialState];\n}\n\nfunction safeTokenize(languageIdentifier: LanguageIdentifier, tokenizationSupport: ITokenizationSupport | null, text: string, hasEOL: boolean, state: IState): TokenizationResult2 {\n\tlet r: TokenizationResult2 | null = null;\n\n\tif (tokenizationSupport) {\n\t\ttry {\n\t\t\tr = tokenizationSupport.tokenize2(text, hasEOL, state.clone(), 0);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\tif (!r) {\n\t\tr = nullTokenize2(languageIdentifier.id, text, state, 0);\n\t}\n\n\tLineTokens.convertToEndOffset(r.tokens, text.length);\n\treturn r;\n}\n"]}