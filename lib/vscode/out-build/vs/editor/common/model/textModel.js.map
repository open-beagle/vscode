{"version":3,"file":"textModel.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/common/model/textModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { EDITOR_MODEL_DEFAULTS } from 'vs/editor/common/config/editorOptions';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport * as model from 'vs/editor/common/model';\nimport { EditStack } from 'vs/editor/common/model/editStack';\nimport { guessIndentation } from 'vs/editor/common/model/indentationGuesser';\nimport { IntervalNode, IntervalTree, getNodeIsInOverviewRuler, recomputeMaxEnd } from 'vs/editor/common/model/intervalTree';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, InternalModelContentChangeEvent, ModelRawChange, ModelRawContentChangedEvent, ModelRawEOLChanged, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from 'vs/editor/common/model/textModelEvents';\nimport { SearchData, SearchParams, TextModelSearch } from 'vs/editor/common/model/textModelSearch';\nimport { TextModelTokenization } from 'vs/editor/common/model/textModelTokens';\nimport { getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { LanguageId, LanguageIdentifier, FormattingOptions } from 'vs/editor/common/modes';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { NULL_LANGUAGE_IDENTIFIER } from 'vs/editor/common/modes/nullMode';\nimport { ignoreBracketsInToken } from 'vs/editor/common/modes/supports';\nimport { BracketsUtils, RichEditBracket, RichEditBrackets } from 'vs/editor/common/modes/supports/richEditBrackets';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { VSBufferReadableStream, VSBuffer } from 'vs/base/common/buffer';\nimport { TokensStore, MultilineTokens, countEOL, MultilineTokens2, TokensStore2 } from 'vs/editor/common/model/tokensStore';\nimport { Color } from 'vs/base/common/color';\nimport { EditorTheme } from 'vs/editor/common/view/viewContext';\nimport { IUndoRedoService, ResourceEditStackSnapshot } from 'vs/platform/undoRedo/common/undoRedo';\nimport { TextChange } from 'vs/editor/common/model/textChange';\nimport { Constants } from 'vs/base/common/uint';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\nimport { listenStream } from 'vs/base/common/stream';\n\nfunction createTextBufferBuilder() {\n\treturn new PieceTreeTextBufferBuilder();\n}\n\nexport function createTextBufferFactory(text: string): model.ITextBufferFactory {\n\tconst builder = createTextBufferBuilder();\n\tbuilder.acceptChunk(text);\n\treturn builder.finish();\n}\n\ninterface ITextStream {\n\ton(event: 'data', callback: (data: string) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: string, callback: any): void;\n}\n\nexport function createTextBufferFactoryFromStream(stream: ITextStream): Promise<model.ITextBufferFactory>;\nexport function createTextBufferFactoryFromStream(stream: VSBufferReadableStream): Promise<model.ITextBufferFactory>;\nexport function createTextBufferFactoryFromStream(stream: ITextStream | VSBufferReadableStream): Promise<model.ITextBufferFactory> {\n\treturn new Promise<model.ITextBufferFactory>((resolve, reject) => {\n\t\tconst builder = createTextBufferBuilder();\n\n\t\tlet done = false;\n\n\t\tlistenStream<string | VSBuffer>(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tbuilder.acceptChunk((typeof chunk === 'string') ? chunk : chunk.toString());\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (!done) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (!done) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(builder.finish());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function createTextBufferFactoryFromSnapshot(snapshot: model.ITextSnapshot): model.ITextBufferFactory {\n\tlet builder = createTextBufferBuilder();\n\n\tlet chunk: string | null;\n\twhile (typeof (chunk = snapshot.read()) === 'string') {\n\t\tbuilder.acceptChunk(chunk);\n\t}\n\n\treturn builder.finish();\n}\n\nexport function createTextBuffer(value: string | model.ITextBufferFactory, defaultEOL: model.DefaultEndOfLine): { textBuffer: model.ITextBuffer; disposable: IDisposable; } {\n\tconst factory = (typeof value === 'string' ? createTextBufferFactory(value) : value);\n\treturn factory.create(defaultEOL);\n}\n\nlet MODEL_ID = 0;\n\nconst LIMIT_FIND_COUNT = 999;\nexport const LONG_LINE_BOUNDARY = 10000;\n\nclass TextModelSnapshot implements model.ITextSnapshot {\n\n\tprivate readonly _source: model.ITextSnapshot;\n\tprivate _eos: boolean;\n\n\tconstructor(source: model.ITextSnapshot) {\n\t\tthis._source = source;\n\t\tthis._eos = false;\n\t}\n\n\tpublic read(): string | null {\n\t\tif (this._eos) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet result: string[] = [], resultCnt = 0, resultLength = 0;\n\n\t\tdo {\n\t\t\tlet tmp = this._source.read();\n\n\t\t\tif (tmp === null) {\n\t\t\t\t// end-of-stream\n\t\t\t\tthis._eos = true;\n\t\t\t\tif (resultCnt === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\treturn result.join('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tmp.length > 0) {\n\t\t\t\tresult[resultCnt++] = tmp;\n\t\t\t\tresultLength += tmp.length;\n\t\t\t}\n\n\t\t\tif (resultLength >= 64 * 1024) {\n\t\t\t\treturn result.join('');\n\t\t\t}\n\t\t} while (true);\n\t}\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\nconst enum StringOffsetValidationType {\n\t/**\n\t * Even allowed in surrogate pairs\n\t */\n\tRelaxed = 0,\n\t/**\n\t * Not allowed in surrogate pairs\n\t */\n\tSurrogatePairs = 1,\n}\n\ntype ContinueBracketSearchPredicate = null | (() => boolean);\n\nclass BracketSearchCanceled {\n\tpublic static INSTANCE = new BracketSearchCanceled();\n\t_searchCanceledBrand = undefined;\n\tprivate constructor() { }\n}\n\nfunction stripBracketSearchCanceled<T>(result: T | null | BracketSearchCanceled): T | null {\n\tif (result instanceof BracketSearchCanceled) {\n\t\treturn null;\n\t}\n\treturn result;\n}\n\nexport class TextModel extends Disposable implements model.ITextModel {\n\n\tprivate static readonly MODEL_SYNC_LIMIT = 50 * 1024 * 1024; // 50 MB\n\tprivate static readonly LARGE_FILE_SIZE_THRESHOLD = 20 * 1024 * 1024; // 20 MB;\n\tprivate static readonly LARGE_FILE_LINE_COUNT_THRESHOLD = 300 * 1000; // 300K lines\n\n\tpublic static DEFAULT_CREATION_OPTIONS: model.ITextModelCreationOptions = {\n\t\tisForSimpleWidget: false,\n\t\ttabSize: EDITOR_MODEL_DEFAULTS.tabSize,\n\t\tindentSize: EDITOR_MODEL_DEFAULTS.indentSize,\n\t\tinsertSpaces: EDITOR_MODEL_DEFAULTS.insertSpaces,\n\t\tdetectIndentation: false,\n\t\tdefaultEOL: model.DefaultEndOfLine.LF,\n\t\ttrimAutoWhitespace: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n\t\tlargeFileOptimizations: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n\t};\n\n\tpublic static resolveOptions(textBuffer: model.ITextBuffer, options: model.ITextModelCreationOptions): model.TextModelResolvedOptions {\n\t\tif (options.detectIndentation) {\n\t\t\tconst guessedIndentation = guessIndentation(textBuffer, options.tabSize, options.insertSpaces);\n\t\t\treturn new model.TextModelResolvedOptions({\n\t\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\t\tindentSize: guessedIndentation.tabSize, // TODO@Alex: guess indentSize independent of tabSize\n\t\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\t\ttrimAutoWhitespace: options.trimAutoWhitespace,\n\t\t\t\tdefaultEOL: options.defaultEOL\n\t\t\t});\n\t\t}\n\n\t\treturn new model.TextModelResolvedOptions({\n\t\t\ttabSize: options.tabSize,\n\t\t\tindentSize: options.indentSize,\n\t\t\tinsertSpaces: options.insertSpaces,\n\t\t\ttrimAutoWhitespace: options.trimAutoWhitespace,\n\t\t\tdefaultEOL: options.defaultEOL\n\t\t});\n\n\t}\n\n\t//#region Events\n\tprivate readonly _onWillDispose: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onWillDispose: Event<void> = this._onWillDispose.event;\n\n\tprivate readonly _onDidChangeDecorations: DidChangeDecorationsEmitter = this._register(new DidChangeDecorationsEmitter());\n\tpublic readonly onDidChangeDecorations: Event<IModelDecorationsChangedEvent> = this._onDidChangeDecorations.event;\n\n\tprivate readonly _onDidChangeLanguage: Emitter<IModelLanguageChangedEvent> = this._register(new Emitter<IModelLanguageChangedEvent>());\n\tpublic readonly onDidChangeLanguage: Event<IModelLanguageChangedEvent> = this._onDidChangeLanguage.event;\n\n\tprivate readonly _onDidChangeLanguageConfiguration: Emitter<IModelLanguageConfigurationChangedEvent> = this._register(new Emitter<IModelLanguageConfigurationChangedEvent>());\n\tpublic readonly onDidChangeLanguageConfiguration: Event<IModelLanguageConfigurationChangedEvent> = this._onDidChangeLanguageConfiguration.event;\n\n\tprivate readonly _onDidChangeTokens: Emitter<IModelTokensChangedEvent> = this._register(new Emitter<IModelTokensChangedEvent>());\n\tpublic readonly onDidChangeTokens: Event<IModelTokensChangedEvent> = this._onDidChangeTokens.event;\n\n\tprivate readonly _onDidChangeOptions: Emitter<IModelOptionsChangedEvent> = this._register(new Emitter<IModelOptionsChangedEvent>());\n\tpublic readonly onDidChangeOptions: Event<IModelOptionsChangedEvent> = this._onDidChangeOptions.event;\n\n\tprivate readonly _onDidChangeAttached: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeAttached: Event<void> = this._onDidChangeAttached.event;\n\n\tprivate readonly _eventEmitter: DidChangeContentEmitter = this._register(new DidChangeContentEmitter());\n\tpublic onDidChangeRawContentFast(listener: (e: ModelRawContentChangedEvent) => void): IDisposable {\n\t\treturn this._eventEmitter.fastEvent((e: InternalModelContentChangeEvent) => listener(e.rawContentChangedEvent));\n\t}\n\tpublic onDidChangeRawContent(listener: (e: ModelRawContentChangedEvent) => void): IDisposable {\n\t\treturn this._eventEmitter.slowEvent((e: InternalModelContentChangeEvent) => listener(e.rawContentChangedEvent));\n\t}\n\tpublic onDidChangeContentFast(listener: (e: IModelContentChangedEvent) => void): IDisposable {\n\t\treturn this._eventEmitter.fastEvent((e: InternalModelContentChangeEvent) => listener(e.contentChangedEvent));\n\t}\n\tpublic onDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable {\n\t\treturn this._eventEmitter.slowEvent((e: InternalModelContentChangeEvent) => listener(e.contentChangedEvent));\n\t}\n\t//#endregion\n\n\tpublic readonly id: string;\n\tpublic readonly isForSimpleWidget: boolean;\n\tprivate readonly _associatedResource: URI;\n\tprivate readonly _undoRedoService: IUndoRedoService;\n\tprivate _attachedEditorCount: number;\n\tprivate _buffer: model.ITextBuffer;\n\tprivate _bufferDisposable: IDisposable;\n\tprivate _options: model.TextModelResolvedOptions;\n\n\tprivate _isDisposed: boolean;\n\tprivate _isDisposing: boolean;\n\tprivate _versionId: number;\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId: number;\n\tprivate _initialUndoRedoSnapshot: ResourceEditStackSnapshot | null;\n\tprivate readonly _isTooLargeForSyncing: boolean;\n\tprivate readonly _isTooLargeForTokenization: boolean;\n\n\t//#region Editing\n\tprivate readonly _commandManager: EditStack;\n\tprivate _isUndoing: boolean;\n\tprivate _isRedoing: boolean;\n\tprivate _trimAutoWhitespaceLines: number[] | null;\n\t//#endregion\n\n\t//#region Decorations\n\t/**\n\t * Used to workaround broken clients that might attempt using a decoration id generated by a different model.\n\t * It is not globally unique in order to limit it to one character.\n\t */\n\tprivate readonly _instanceId: string;\n\tprivate _lastDecorationId: number;\n\tprivate _decorations: { [decorationId: string]: IntervalNode; };\n\tprivate _decorationsTree: DecorationsTrees;\n\t//#endregion\n\n\t//#region Tokenization\n\tprivate _languageIdentifier: LanguageIdentifier;\n\tprivate readonly _languageRegistryListener: IDisposable;\n\tprivate readonly _tokens: TokensStore;\n\tprivate readonly _tokens2: TokensStore2;\n\tprivate readonly _tokenization: TextModelTokenization;\n\t//#endregion\n\n\tconstructor(\n\t\tsource: string | model.ITextBufferFactory,\n\t\tcreationOptions: model.ITextModelCreationOptions,\n\t\tlanguageIdentifier: LanguageIdentifier | null,\n\t\tassociatedResource: URI | null = null,\n\t\tundoRedoService: IUndoRedoService\n\t) {\n\t\tsuper();\n\n\t\t// Generate a new unique model id\n\t\tMODEL_ID++;\n\t\tthis.id = '$model' + MODEL_ID;\n\t\tthis.isForSimpleWidget = creationOptions.isForSimpleWidget;\n\t\tif (typeof associatedResource === 'undefined' || associatedResource === null) {\n\t\t\tthis._associatedResource = URI.parse('inmemory://model/' + MODEL_ID);\n\t\t} else {\n\t\t\tthis._associatedResource = associatedResource;\n\t\t}\n\t\tthis._undoRedoService = undoRedoService;\n\t\tthis._attachedEditorCount = 0;\n\n\t\tconst { textBuffer, disposable } = createTextBuffer(source, creationOptions.defaultEOL);\n\t\tthis._buffer = textBuffer;\n\t\tthis._bufferDisposable = disposable;\n\n\t\tthis._options = TextModel.resolveOptions(this._buffer, creationOptions);\n\n\t\tconst bufferLineCount = this._buffer.getLineCount();\n\t\tconst bufferTextLength = this._buffer.getValueLengthInRange(new Range(1, 1, bufferLineCount, this._buffer.getLineLength(bufferLineCount) + 1), model.EndOfLinePreference.TextDefined);\n\n\t\t// !!! Make a decision in the ctor and permanently respect this decision !!!\n\t\t// If a model is too large at construction time, it will never get tokenized,\n\t\t// under no circumstances.\n\t\tif (creationOptions.largeFileOptimizations) {\n\t\t\tthis._isTooLargeForTokenization = (\n\t\t\t\t(bufferTextLength > TextModel.LARGE_FILE_SIZE_THRESHOLD)\n\t\t\t\t|| (bufferLineCount > TextModel.LARGE_FILE_LINE_COUNT_THRESHOLD)\n\t\t\t);\n\t\t} else {\n\t\t\tthis._isTooLargeForTokenization = false;\n\t\t}\n\n\t\tthis._isTooLargeForSyncing = (bufferTextLength > TextModel.MODEL_SYNC_LIMIT);\n\n\t\tthis._versionId = 1;\n\t\tthis._alternativeVersionId = 1;\n\t\tthis._initialUndoRedoSnapshot = null;\n\n\t\tthis._isDisposed = false;\n\t\tthis._isDisposing = false;\n\n\t\tthis._languageIdentifier = languageIdentifier || NULL_LANGUAGE_IDENTIFIER;\n\n\t\tthis._languageRegistryListener = LanguageConfigurationRegistry.onDidChange((e) => {\n\t\t\tif (e.languageIdentifier.id === this._languageIdentifier.id) {\n\t\t\t\tthis._onDidChangeLanguageConfiguration.fire({});\n\t\t\t}\n\t\t});\n\n\t\tthis._instanceId = strings.singleLetterHash(MODEL_ID);\n\t\tthis._lastDecorationId = 0;\n\t\tthis._decorations = Object.create(null);\n\t\tthis._decorationsTree = new DecorationsTrees();\n\n\t\tthis._commandManager = new EditStack(this, undoRedoService);\n\t\tthis._isUndoing = false;\n\t\tthis._isRedoing = false;\n\t\tthis._trimAutoWhitespaceLines = null;\n\n\t\tthis._tokens = new TokensStore();\n\t\tthis._tokens2 = new TokensStore2();\n\t\tthis._tokenization = new TextModelTokenization(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposing = true;\n\t\tthis._onWillDispose.fire();\n\t\tthis._languageRegistryListener.dispose();\n\t\tthis._tokenization.dispose();\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t\tthis._bufferDisposable.dispose();\n\t\tthis._isDisposing = false;\n\t\t// Manually release reference to previous text buffer to avoid large leaks\n\t\t// in case someone leaks a TextModel reference\n\t\tconst emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n\t\temptyDisposedTextBuffer.dispose();\n\t\tthis._buffer = emptyDisposedTextBuffer;\n\t}\n\n\tprivate _assertNotDisposed(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Model is disposed!');\n\t\t}\n\t}\n\n\tpublic equalsTextBuffer(other: model.ITextBuffer): boolean {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.equals(other);\n\t}\n\n\tpublic getTextBuffer(): model.ITextBuffer {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer;\n\t}\n\n\tprivate _emitContentChangedEvent(rawChange: ModelRawContentChangedEvent, change: IModelContentChangedEvent): void {\n\t\tif (this._isDisposing) {\n\t\t\t// Do not confuse listeners by emitting any event after disposing\n\t\t\treturn;\n\t\t}\n\t\tthis._eventEmitter.fire(new InternalModelContentChangeEvent(rawChange, change));\n\t}\n\n\tpublic setValue(value: string): void {\n\t\tthis._assertNotDisposed();\n\t\tif (value === null) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst { textBuffer, disposable } = createTextBuffer(value, this._options.defaultEOL);\n\t\tthis._setValueFromTextBuffer(textBuffer, disposable);\n\t}\n\n\tprivate _createContentChanged2(range: Range, rangeOffset: number, rangeLength: number, text: string, isUndoing: boolean, isRedoing: boolean, isFlush: boolean): IModelContentChangedEvent {\n\t\treturn {\n\t\t\tchanges: [{\n\t\t\t\trange: range,\n\t\t\t\trangeOffset: rangeOffset,\n\t\t\t\trangeLength: rangeLength,\n\t\t\t\ttext: text,\n\t\t\t}],\n\t\t\teol: this._buffer.getEOL(),\n\t\t\tversionId: this.getVersionId(),\n\t\t\tisUndoing: isUndoing,\n\t\t\tisRedoing: isRedoing,\n\t\t\tisFlush: isFlush\n\t\t};\n\t}\n\n\tprivate _setValueFromTextBuffer(textBuffer: model.ITextBuffer, textBufferDisposable: IDisposable): void {\n\t\tthis._assertNotDisposed();\n\t\tconst oldFullModelRange = this.getFullModelRange();\n\t\tconst oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tconst endLineNumber = this.getLineCount();\n\t\tconst endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._buffer = textBuffer;\n\t\tthis._bufferDisposable.dispose();\n\t\tthis._bufferDisposable = textBufferDisposable;\n\t\tthis._increaseVersionId();\n\n\t\t// Flush all tokens\n\t\tthis._tokens.flush();\n\t\tthis._tokens2.flush();\n\n\t\t// Destroy all my decorations\n\t\tthis._decorations = Object.create(null);\n\t\tthis._decorationsTree = new DecorationsTrees();\n\n\t\t// Destroy my edit history and settings\n\t\tthis._commandManager.clear();\n\t\tthis._trimAutoWhitespaceLines = null;\n\n\t\tthis._emitContentChangedEvent(\n\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t[\n\t\t\t\t\tnew ModelRawFlush()\n\t\t\t\t],\n\t\t\t\tthis._versionId,\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tthis._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, true)\n\t\t);\n\t}\n\n\tpublic setEOL(eol: model.EndOfLineSequence): void {\n\t\tthis._assertNotDisposed();\n\t\tconst newEOL = (eol === model.EndOfLineSequence.CRLF ? '\\r\\n' : '\\n');\n\t\tif (this._buffer.getEOL() === newEOL) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldFullModelRange = this.getFullModelRange();\n\t\tconst oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tconst endLineNumber = this.getLineCount();\n\t\tconst endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._onBeforeEOLChange();\n\t\tthis._buffer.setEOL(newEOL);\n\t\tthis._increaseVersionId();\n\t\tthis._onAfterEOLChange();\n\n\t\tthis._emitContentChangedEvent(\n\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t[\n\t\t\t\t\tnew ModelRawEOLChanged()\n\t\t\t\t],\n\t\t\t\tthis._versionId,\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tthis._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, false)\n\t\t);\n\t}\n\n\tprivate _onBeforeEOLChange(): void {\n\t\t// Ensure all decorations get their `range` set.\n\t\tconst versionId = this.getVersionId();\n\t\tconst allDecorations = this._decorationsTree.search(0, false, false, versionId);\n\t\tthis._ensureNodesHaveRanges(allDecorations);\n\t}\n\n\tprivate _onAfterEOLChange(): void {\n\t\t// Transform back `range` to offsets\n\t\tconst versionId = this.getVersionId();\n\t\tconst allDecorations = this._decorationsTree.collectNodesPostOrder();\n\t\tfor (let i = 0, len = allDecorations.length; i < len; i++) {\n\t\t\tconst node = allDecorations[i];\n\n\t\t\tconst delta = node.cachedAbsoluteStart - node.start;\n\n\t\t\tconst startOffset = this._buffer.getOffsetAt(node.range.startLineNumber, node.range.startColumn);\n\t\t\tconst endOffset = this._buffer.getOffsetAt(node.range.endLineNumber, node.range.endColumn);\n\n\t\t\tnode.cachedAbsoluteStart = startOffset;\n\t\t\tnode.cachedAbsoluteEnd = endOffset;\n\t\t\tnode.cachedVersionId = versionId;\n\n\t\t\tnode.start = startOffset - delta;\n\t\t\tnode.end = endOffset - delta;\n\n\t\t\trecomputeMaxEnd(node);\n\t\t}\n\t}\n\n\tpublic onBeforeAttached(): void {\n\t\tthis._attachedEditorCount++;\n\t\tif (this._attachedEditorCount === 1) {\n\t\t\tthis._onDidChangeAttached.fire(undefined);\n\t\t}\n\t}\n\n\tpublic onBeforeDetached(): void {\n\t\tthis._attachedEditorCount--;\n\t\tif (this._attachedEditorCount === 0) {\n\t\t\tthis._onDidChangeAttached.fire(undefined);\n\t\t}\n\t}\n\n\tpublic isAttachedToEditor(): boolean {\n\t\treturn this._attachedEditorCount > 0;\n\t}\n\n\tpublic getAttachedEditorCount(): number {\n\t\treturn this._attachedEditorCount;\n\t}\n\n\tpublic isTooLargeForSyncing(): boolean {\n\t\treturn this._isTooLargeForSyncing;\n\t}\n\n\tpublic isTooLargeForTokenization(): boolean {\n\t\treturn this._isTooLargeForTokenization;\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tpublic isDominatedByLongLines(): boolean {\n\t\tthis._assertNotDisposed();\n\t\tif (this.isTooLargeForTokenization()) {\n\t\t\t// Cannot word wrap huge files anyways, so it doesn't really matter\n\t\t\treturn false;\n\t\t}\n\t\tlet smallLineCharCount = 0;\n\t\tlet longLineCharCount = 0;\n\n\t\tconst lineCount = this._buffer.getLineCount();\n\t\tfor (let lineNumber = 1; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineLength = this._buffer.getLineLength(lineNumber);\n\t\t\tif (lineLength >= LONG_LINE_BOUNDARY) {\n\t\t\t\tlongLineCharCount += lineLength;\n\t\t\t} else {\n\t\t\t\tsmallLineCharCount += lineLength;\n\t\t\t}\n\t\t}\n\n\t\treturn (longLineCharCount > smallLineCharCount);\n\t}\n\n\tpublic get uri(): URI {\n\t\treturn this._associatedResource;\n\t}\n\n\t//#region Options\n\n\tpublic getOptions(): model.TextModelResolvedOptions {\n\t\tthis._assertNotDisposed();\n\t\treturn this._options;\n\t}\n\n\tpublic getFormattingOptions(): FormattingOptions {\n\t\treturn {\n\t\t\ttabSize: this._options.indentSize,\n\t\t\tinsertSpaces: this._options.insertSpaces\n\t\t};\n\t}\n\n\tpublic updateOptions(_newOpts: model.ITextModelUpdateOptions): void {\n\t\tthis._assertNotDisposed();\n\t\tlet tabSize = (typeof _newOpts.tabSize !== 'undefined') ? _newOpts.tabSize : this._options.tabSize;\n\t\tlet indentSize = (typeof _newOpts.indentSize !== 'undefined') ? _newOpts.indentSize : this._options.indentSize;\n\t\tlet insertSpaces = (typeof _newOpts.insertSpaces !== 'undefined') ? _newOpts.insertSpaces : this._options.insertSpaces;\n\t\tlet trimAutoWhitespace = (typeof _newOpts.trimAutoWhitespace !== 'undefined') ? _newOpts.trimAutoWhitespace : this._options.trimAutoWhitespace;\n\n\t\tlet newOpts = new model.TextModelResolvedOptions({\n\t\t\ttabSize: tabSize,\n\t\t\tindentSize: indentSize,\n\t\t\tinsertSpaces: insertSpaces,\n\t\t\tdefaultEOL: this._options.defaultEOL,\n\t\t\ttrimAutoWhitespace: trimAutoWhitespace\n\t\t});\n\n\t\tif (this._options.equals(newOpts)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet e = this._options.createChangeEvent(newOpts);\n\t\tthis._options = newOpts;\n\n\t\tthis._onDidChangeOptions.fire(e);\n\t}\n\n\tpublic detectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void {\n\t\tthis._assertNotDisposed();\n\t\tlet guessedIndentation = guessIndentation(this._buffer, defaultTabSize, defaultInsertSpaces);\n\t\tthis.updateOptions({\n\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\tindentSize: guessedIndentation.tabSize, // TODO@Alex: guess indentSize independent of tabSize\n\t\t});\n\t}\n\n\tprivate static _normalizeIndentationFromWhitespace(str: string, indentSize: number, insertSpaces: boolean): string {\n\t\tlet spacesCnt = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tif (str.charAt(i) === '\\t') {\n\t\t\t\tspacesCnt += indentSize;\n\t\t\t} else {\n\t\t\t\tspacesCnt++;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tif (!insertSpaces) {\n\t\t\tlet tabsCnt = Math.floor(spacesCnt / indentSize);\n\t\t\tspacesCnt = spacesCnt % indentSize;\n\t\t\tfor (let i = 0; i < tabsCnt; i++) {\n\t\t\t\tresult += '\\t';\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < spacesCnt; i++) {\n\t\t\tresult += ' ';\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static normalizeIndentation(str: string, indentSize: number, insertSpaces: boolean): string {\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tfirstNonWhitespaceIndex = str.length;\n\t\t}\n\t\treturn TextModel._normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex), indentSize, insertSpaces) + str.substring(firstNonWhitespaceIndex);\n\t}\n\n\tpublic normalizeIndentation(str: string): string {\n\t\tthis._assertNotDisposed();\n\t\treturn TextModel.normalizeIndentation(str, this._options.indentSize, this._options.insertSpaces);\n\t}\n\n\t//#endregion\n\n\t//#region Reading\n\n\tpublic getVersionId(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._versionId;\n\t}\n\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._buffer.mightContainRTL();\n\t}\n\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._buffer.mightContainUnusualLineTerminators();\n\t}\n\n\tpublic removeUnusualLineTerminators(selections: Selection[] | null = null): void {\n\t\tconst matches = this.findMatches(strings.UNUSUAL_LINE_TERMINATORS.source, false, true, false, null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\tthis._buffer.resetMightContainUnusualLineTerminators();\n\t\tthis.pushEditOperations(selections, matches.map(m => ({ range: m.range, text: null })), () => null);\n\t}\n\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._buffer.mightContainNonBasicASCII();\n\t}\n\n\tpublic getAlternativeVersionId(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._alternativeVersionId;\n\t}\n\n\tpublic getInitialUndoRedoSnapshot(): ResourceEditStackSnapshot | null {\n\t\tthis._assertNotDisposed();\n\t\treturn this._initialUndoRedoSnapshot;\n\t}\n\n\tpublic getOffsetAt(rawPosition: IPosition): number {\n\t\tthis._assertNotDisposed();\n\t\tlet position = this._validatePosition(rawPosition.lineNumber, rawPosition.column, StringOffsetValidationType.Relaxed);\n\t\treturn this._buffer.getOffsetAt(position.lineNumber, position.column);\n\t}\n\n\tpublic getPositionAt(rawOffset: number): Position {\n\t\tthis._assertNotDisposed();\n\t\tlet offset = (Math.min(this._buffer.getLength(), Math.max(0, rawOffset)));\n\t\treturn this._buffer.getPositionAt(offset);\n\t}\n\n\tprivate _increaseVersionId(): void {\n\t\tthis._versionId = this._versionId + 1;\n\t\tthis._alternativeVersionId = this._versionId;\n\t}\n\n\tpublic _overwriteVersionId(versionId: number): void {\n\t\tthis._versionId = versionId;\n\t}\n\n\tpublic _overwriteAlternativeVersionId(newAlternativeVersionId: number): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t}\n\n\tpublic _overwriteInitialUndoRedoSnapshot(newInitialUndoRedoSnapshot: ResourceEditStackSnapshot | null): void {\n\t\tthis._initialUndoRedoSnapshot = newInitialUndoRedoSnapshot;\n\t}\n\n\tpublic getValue(eol?: model.EndOfLinePreference, preserveBOM: boolean = false): string {\n\t\tthis._assertNotDisposed();\n\t\tconst fullModelRange = this.getFullModelRange();\n\t\tconst fullModelValue = this.getValueInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._buffer.getBOM() + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean = false): model.ITextSnapshot {\n\t\treturn new TextModelSnapshot(this._buffer.createSnapshot(preserveBOM));\n\t}\n\n\tpublic getValueLength(eol?: model.EndOfLinePreference, preserveBOM: boolean = false): number {\n\t\tthis._assertNotDisposed();\n\t\tconst fullModelRange = this.getFullModelRange();\n\t\tconst fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._buffer.getBOM().length + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getValueInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): string {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getValueInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getValueLengthInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getValueLengthInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getCharacterCountInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getCharacterCountInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getLineCount(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\treturn this._buffer.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\treturn this._buffer.getLineLength(lineNumber);\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getLinesContent();\n\t}\n\n\tpublic getEOL(): string {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getEOL();\n\t}\n\n\tpublic getEndOfLineSequence(): model.EndOfLineSequence {\n\t\tthis._assertNotDisposed();\n\t\treturn (\n\t\t\tthis._buffer.getEOL() === '\\n'\n\t\t\t\t? model.EndOfLineSequence.LF\n\t\t\t\t: model.EndOfLineSequence.CRLF\n\t\t);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineFirstNonWhitespaceColumn(lineNumber);\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineLastNonWhitespaceColumn(lineNumber);\n\t}\n\n\t/**\n\t * Validates `range` is within buffer bounds, but allows it to sit in between surrogate pairs, etc.\n\t * Will try to not allocate if possible.\n\t */\n\tpublic _validateRangeRelaxedNoAllocations(range: IRange): Range {\n\t\tconst linesCount = this._buffer.getLineCount();\n\n\t\tconst initialStartLineNumber = range.startLineNumber;\n\t\tconst initialStartColumn = range.startColumn;\n\t\tlet startLineNumber = Math.floor((typeof initialStartLineNumber === 'number' && !isNaN(initialStartLineNumber)) ? initialStartLineNumber : 1);\n\t\tlet startColumn = Math.floor((typeof initialStartColumn === 'number' && !isNaN(initialStartColumn)) ? initialStartColumn : 1);\n\n\t\tif (startLineNumber < 1) {\n\t\t\tstartLineNumber = 1;\n\t\t\tstartColumn = 1;\n\t\t} else if (startLineNumber > linesCount) {\n\t\t\tstartLineNumber = linesCount;\n\t\t\tstartColumn = this.getLineMaxColumn(startLineNumber);\n\t\t} else {\n\t\t\tif (startColumn <= 1) {\n\t\t\t\tstartColumn = 1;\n\t\t\t} else {\n\t\t\t\tconst maxColumn = this.getLineMaxColumn(startLineNumber);\n\t\t\t\tif (startColumn >= maxColumn) {\n\t\t\t\t\tstartColumn = maxColumn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst initialEndLineNumber = range.endLineNumber;\n\t\tconst initialEndColumn = range.endColumn;\n\t\tlet endLineNumber = Math.floor((typeof initialEndLineNumber === 'number' && !isNaN(initialEndLineNumber)) ? initialEndLineNumber : 1);\n\t\tlet endColumn = Math.floor((typeof initialEndColumn === 'number' && !isNaN(initialEndColumn)) ? initialEndColumn : 1);\n\n\t\tif (endLineNumber < 1) {\n\t\t\tendLineNumber = 1;\n\t\t\tendColumn = 1;\n\t\t} else if (endLineNumber > linesCount) {\n\t\t\tendLineNumber = linesCount;\n\t\t\tendColumn = this.getLineMaxColumn(endLineNumber);\n\t\t} else {\n\t\t\tif (endColumn <= 1) {\n\t\t\t\tendColumn = 1;\n\t\t\t} else {\n\t\t\t\tconst maxColumn = this.getLineMaxColumn(endLineNumber);\n\t\t\t\tif (endColumn >= maxColumn) {\n\t\t\t\t\tendColumn = maxColumn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tinitialStartLineNumber === startLineNumber\n\t\t\t&& initialStartColumn === startColumn\n\t\t\t&& initialEndLineNumber === endLineNumber\n\t\t\t&& initialEndColumn === endColumn\n\t\t\t&& range instanceof Range\n\t\t\t&& !(range instanceof Selection)\n\t\t) {\n\t\t\treturn range;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tprivate _isValidPosition(lineNumber: number, column: number, validationType: StringOffsetValidationType): boolean {\n\t\tif (typeof lineNumber !== 'number' || typeof column !== 'number') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isNaN(lineNumber) || isNaN(column)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (lineNumber < 1 || column < 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((lineNumber | 0) !== lineNumber || (column | 0) !== column) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst lineCount = this._buffer.getLineCount();\n\t\tif (lineNumber > lineCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (column === 1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst maxColumn = this.getLineMaxColumn(lineNumber);\n\t\tif (column > maxColumn) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\t// !!At this point, column > 1\n\t\t\tconst charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _validatePosition(_lineNumber: number, _column: number, validationType: StringOffsetValidationType): Position {\n\t\tconst lineNumber = Math.floor((typeof _lineNumber === 'number' && !isNaN(_lineNumber)) ? _lineNumber : 1);\n\t\tconst column = Math.floor((typeof _column === 'number' && !isNaN(_column)) ? _column : 1);\n\t\tconst lineCount = this._buffer.getLineCount();\n\n\t\tif (lineNumber < 1) {\n\t\t\treturn new Position(1, 1);\n\t\t}\n\n\t\tif (lineNumber > lineCount) {\n\t\t\treturn new Position(lineCount, this.getLineMaxColumn(lineCount));\n\t\t}\n\n\t\tif (column <= 1) {\n\t\t\treturn new Position(lineNumber, 1);\n\t\t}\n\n\t\tconst maxColumn = this.getLineMaxColumn(lineNumber);\n\t\tif (column >= maxColumn) {\n\t\t\treturn new Position(lineNumber, maxColumn);\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\t// If the position would end up in the middle of a high-low surrogate pair,\n\t\t\t// we move it to before the pair\n\t\t\t// !!At this point, column > 1\n\t\t\tconst charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\treturn new Position(lineNumber, column - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tpublic validatePosition(position: IPosition): Position {\n\t\tconst validationType = StringOffsetValidationType.SurrogatePairs;\n\t\tthis._assertNotDisposed();\n\n\t\t// Avoid object allocation and cover most likely case\n\t\tif (position instanceof Position) {\n\t\t\tif (this._isValidPosition(position.lineNumber, position.column, validationType)) {\n\t\t\t\treturn position;\n\t\t\t}\n\t\t}\n\n\t\treturn this._validatePosition(position.lineNumber, position.column, validationType);\n\t}\n\n\tprivate _isValidRange(range: Range, validationType: StringOffsetValidationType): boolean {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst endLineNumber = range.endLineNumber;\n\t\tconst endColumn = range.endColumn;\n\n\t\tif (!this._isValidPosition(startLineNumber, startColumn, StringOffsetValidationType.Relaxed)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this._isValidPosition(endLineNumber, endColumn, StringOffsetValidationType.Relaxed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\tconst charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n\t\t\tconst charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n\n\t\t\tconst startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n\t\t\tconst endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n\n\t\t\tif (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic validateRange(_range: IRange): Range {\n\t\tconst validationType = StringOffsetValidationType.SurrogatePairs;\n\t\tthis._assertNotDisposed();\n\n\t\t// Avoid object allocation and cover most likely case\n\t\tif ((_range instanceof Range) && !(_range instanceof Selection)) {\n\t\t\tif (this._isValidRange(_range, validationType)) {\n\t\t\t\treturn _range;\n\t\t\t}\n\t\t}\n\n\t\tconst start = this._validatePosition(_range.startLineNumber, _range.startColumn, StringOffsetValidationType.Relaxed);\n\t\tconst end = this._validatePosition(_range.endLineNumber, _range.endColumn, StringOffsetValidationType.Relaxed);\n\n\t\tconst startLineNumber = start.lineNumber;\n\t\tconst startColumn = start.column;\n\t\tconst endLineNumber = end.lineNumber;\n\t\tconst endColumn = end.column;\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\tconst charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n\t\t\tconst charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n\n\t\t\tconst startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n\t\t\tconst endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n\n\t\t\tif (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n\t\t\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\t}\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn) {\n\t\t\t\t// do not expand a collapsed range, simply move it to a valid location\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn - 1);\n\t\t\t}\n\n\t\t\tif (startInsideSurrogatePair && endInsideSurrogatePair) {\n\t\t\t\t// expand range at both ends\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn + 1);\n\t\t\t}\n\n\t\t\tif (startInsideSurrogatePair) {\n\t\t\t\t// only expand range at the start\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn);\n\t\t\t}\n\n\t\t\t// only expand range at the end\n\t\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn + 1);\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tpublic modifyPosition(rawPosition: IPosition, offset: number): Position {\n\t\tthis._assertNotDisposed();\n\t\tlet candidate = this.getOffsetAt(rawPosition) + offset;\n\t\treturn this.getPositionAt(Math.min(this._buffer.getLength(), Math.max(0, candidate)));\n\t}\n\n\tpublic getFullModelRange(): Range {\n\t\tthis._assertNotDisposed();\n\t\tconst lineCount = this.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n\t}\n\n\tprivate findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): model.FindMatch[] {\n\t\treturn this._buffer.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\tpublic findMatches(searchString: string, rawSearchScope: any, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount: number = LIMIT_FIND_COUNT): model.FindMatch[] {\n\t\tthis._assertNotDisposed();\n\n\t\tlet searchRanges: Range[] | null = null;\n\n\t\tif (rawSearchScope !== null) {\n\t\t\tif (!Array.isArray(rawSearchScope)) {\n\t\t\t\trawSearchScope = [rawSearchScope];\n\t\t\t}\n\n\t\t\tif (rawSearchScope.every((searchScope: Range) => Range.isIRange(searchScope))) {\n\t\t\t\tsearchRanges = rawSearchScope.map((searchScope: Range) => this.validateRange(searchScope));\n\t\t\t}\n\t\t}\n\n\t\tif (searchRanges === null) {\n\t\t\tsearchRanges = [this.getFullModelRange()];\n\t\t}\n\n\t\tsearchRanges = searchRanges.sort((d1, d2) => d1.startLineNumber - d2.startLineNumber || d1.startColumn - d2.startColumn);\n\n\t\tconst uniqueSearchRanges: Range[] = [];\n\t\tuniqueSearchRanges.push(searchRanges.reduce((prev, curr) => {\n\t\t\tif (Range.areIntersecting(prev, curr)) {\n\t\t\t\treturn prev.plusRange(curr);\n\t\t\t}\n\n\t\t\tuniqueSearchRanges.push(prev);\n\t\t\treturn curr;\n\t\t}));\n\n\t\tlet matchMapper: (value: Range, index: number, array: Range[]) => model.FindMatch[];\n\t\tif (!isRegex && searchString.indexOf('\\n') < 0) {\n\t\t\t// not regex, not multi line\n\t\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tmatchMapper = (searchRange: Range) => this.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t\t} else {\n\t\t\tmatchMapper = (searchRange: Range) => TextModelSearch.findMatches(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchRange, captureMatches, limitResultCount);\n\t\t}\n\n\t\treturn uniqueSearchRanges.map(matchMapper).reduce((arr, matches: model.FindMatch[]) => arr.concat(matches), []);\n\t}\n\n\tpublic findNextMatch(searchString: string, rawSearchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string, captureMatches: boolean): model.FindMatch | null {\n\t\tthis._assertNotDisposed();\n\t\tconst searchStart = this.validatePosition(rawSearchStart);\n\n\t\tif (!isRegex && searchString.indexOf('\\n') < 0) {\n\t\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\t\t\tif (!searchData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst lineCount = this.getLineCount();\n\t\t\tlet searchRange = new Range(searchStart.lineNumber, searchStart.column, lineCount, this.getLineMaxColumn(lineCount));\n\t\t\tlet ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n\t\t\tTextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t\t\tif (ret.length > 0) {\n\t\t\t\treturn ret[0];\n\t\t\t}\n\n\t\t\tsearchRange = new Range(1, 1, searchStart.lineNumber, this.getLineMaxColumn(searchStart.lineNumber));\n\t\t\tret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n\n\t\t\tif (ret.length > 0) {\n\t\t\t\treturn ret[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t}\n\n\tpublic findPreviousMatch(searchString: string, rawSearchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string, captureMatches: boolean): model.FindMatch | null {\n\t\tthis._assertNotDisposed();\n\t\tconst searchStart = this.validatePosition(rawSearchStart);\n\t\treturn TextModelSearch.findPreviousMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t}\n\n\t//#endregion\n\n\t//#region Editing\n\n\tpublic pushStackElement(): void {\n\t\tthis._commandManager.pushStackElement();\n\t}\n\n\tpublic popStackElement(): void {\n\t\tthis._commandManager.popStackElement();\n\t}\n\n\tpublic pushEOL(eol: model.EndOfLineSequence): void {\n\t\tconst currentEOL = (this.getEOL() === '\\n' ? model.EndOfLineSequence.LF : model.EndOfLineSequence.CRLF);\n\t\tif (currentEOL === eol) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tif (this._initialUndoRedoSnapshot === null) {\n\t\t\t\tthis._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n\t\t\t}\n\t\t\tthis._commandManager.pushEOL(eol);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _validateEditOperation(rawOperation: model.IIdentifiedSingleEditOperation): model.ValidAnnotatedEditOperation {\n\t\tif (rawOperation instanceof model.ValidAnnotatedEditOperation) {\n\t\t\treturn rawOperation;\n\t\t}\n\t\treturn new model.ValidAnnotatedEditOperation(\n\t\t\trawOperation.identifier || null,\n\t\t\tthis.validateRange(rawOperation.range),\n\t\t\trawOperation.text,\n\t\t\trawOperation.forceMoveMarkers || false,\n\t\t\trawOperation.isAutoWhitespaceEdit || false,\n\t\t\trawOperation._isTracked || false\n\t\t);\n\t}\n\n\tprivate _validateEditOperations(rawOperations: model.IIdentifiedSingleEditOperation[]): model.ValidAnnotatedEditOperation[] {\n\t\tconst result: model.ValidAnnotatedEditOperation[] = [];\n\t\tfor (let i = 0, len = rawOperations.length; i < len; i++) {\n\t\t\tresult[i] = this._validateEditOperation(rawOperations[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pushEditOperations(beforeCursorState: Selection[] | null, editOperations: model.IIdentifiedSingleEditOperation[], cursorStateComputer: model.ICursorStateComputer | null): Selection[] | null {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\treturn this._pushEditOperations(beforeCursorState, this._validateEditOperations(editOperations), cursorStateComputer);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _pushEditOperations(beforeCursorState: Selection[] | null, editOperations: model.ValidAnnotatedEditOperation[], cursorStateComputer: model.ICursorStateComputer | null): Selection[] | null {\n\t\tif (this._options.trimAutoWhitespace && this._trimAutoWhitespaceLines) {\n\t\t\t// Go through each saved line number and insert a trim whitespace edit\n\t\t\t// if it is safe to do so (no conflicts with other edits).\n\n\t\t\tlet incomingEdits = editOperations.map((op) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: this.validateRange(op.range),\n\t\t\t\t\ttext: op.text\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Sometimes, auto-formatters change ranges automatically which can cause undesired auto whitespace trimming near the cursor\n\t\t\t// We'll use the following heuristic: if the edits occur near the cursor, then it's ok to trim auto whitespace\n\t\t\tlet editsAreNearCursors = true;\n\t\t\tif (beforeCursorState) {\n\t\t\t\tfor (let i = 0, len = beforeCursorState.length; i < len; i++) {\n\t\t\t\t\tlet sel = beforeCursorState[i];\n\t\t\t\t\tlet foundEditNearSel = false;\n\t\t\t\t\tfor (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n\t\t\t\t\t\tlet editRange = incomingEdits[j].range;\n\t\t\t\t\t\tlet selIsAbove = editRange.startLineNumber > sel.endLineNumber;\n\t\t\t\t\t\tlet selIsBelow = sel.startLineNumber > editRange.endLineNumber;\n\t\t\t\t\t\tif (!selIsAbove && !selIsBelow) {\n\t\t\t\t\t\t\tfoundEditNearSel = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!foundEditNearSel) {\n\t\t\t\t\t\teditsAreNearCursors = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (editsAreNearCursors) {\n\t\t\t\tfor (let i = 0, len = this._trimAutoWhitespaceLines.length; i < len; i++) {\n\t\t\t\t\tlet trimLineNumber = this._trimAutoWhitespaceLines[i];\n\t\t\t\t\tlet maxLineColumn = this.getLineMaxColumn(trimLineNumber);\n\n\t\t\t\t\tlet allowTrimLine = true;\n\t\t\t\t\tfor (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n\t\t\t\t\t\tlet editRange = incomingEdits[j].range;\n\t\t\t\t\t\tlet editText = incomingEdits[j].text;\n\n\t\t\t\t\t\tif (trimLineNumber < editRange.startLineNumber || trimLineNumber > editRange.endLineNumber) {\n\t\t\t\t\t\t\t// `trimLine` is completely outside this edit\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// At this point:\n\t\t\t\t\t\t//   editRange.startLineNumber <= trimLine <= editRange.endLineNumber\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttrimLineNumber === editRange.startLineNumber && editRange.startColumn === maxLineColumn\n\t\t\t\t\t\t\t&& editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(0) === '\\n'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This edit inserts a new line (and maybe other text) after `trimLine`\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttrimLineNumber === editRange.startLineNumber && editRange.startColumn === 1\n\t\t\t\t\t\t\t&& editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(editText.length - 1) === '\\n'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This edit inserts a new line (and maybe other text) before `trimLine`\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Looks like we can't trim this line as it would interfere with an incoming edit\n\t\t\t\t\t\tallowTrimLine = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (allowTrimLine) {\n\t\t\t\t\t\tconst trimRange = new Range(trimLineNumber, 1, trimLineNumber, maxLineColumn);\n\t\t\t\t\t\teditOperations.push(new model.ValidAnnotatedEditOperation(null, trimRange, null, false, false, false));\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._trimAutoWhitespaceLines = null;\n\t\t}\n\t\tif (this._initialUndoRedoSnapshot === null) {\n\t\t\tthis._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n\t\t}\n\t\treturn this._commandManager.pushEditOperation(beforeCursorState, editOperations, cursorStateComputer);\n\t}\n\n\t_applyUndo(changes: TextChange[], eol: model.EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\tconst edits = changes.map<model.IIdentifiedSingleEditOperation>((change) => {\n\t\t\tconst rangeStart = this.getPositionAt(change.newPosition);\n\t\t\tconst rangeEnd = this.getPositionAt(change.newEnd);\n\t\t\treturn {\n\t\t\t\trange: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n\t\t\t\ttext: change.oldText\n\t\t\t};\n\t\t});\n\t\tthis._applyUndoRedoEdits(edits, eol, true, false, resultingAlternativeVersionId, resultingSelection);\n\t}\n\n\t_applyRedo(changes: TextChange[], eol: model.EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\tconst edits = changes.map<model.IIdentifiedSingleEditOperation>((change) => {\n\t\t\tconst rangeStart = this.getPositionAt(change.oldPosition);\n\t\t\tconst rangeEnd = this.getPositionAt(change.oldEnd);\n\t\t\treturn {\n\t\t\t\trange: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n\t\t\t\ttext: change.newText\n\t\t\t};\n\t\t});\n\t\tthis._applyUndoRedoEdits(edits, eol, false, true, resultingAlternativeVersionId, resultingSelection);\n\t}\n\n\tprivate _applyUndoRedoEdits(edits: model.IIdentifiedSingleEditOperation[], eol: model.EndOfLineSequence, isUndoing: boolean, isRedoing: boolean, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tthis._isUndoing = isUndoing;\n\t\t\tthis._isRedoing = isRedoing;\n\t\t\tthis.applyEdits(edits, false);\n\t\t\tthis.setEOL(eol);\n\t\t\tthis._overwriteAlternativeVersionId(resultingAlternativeVersionId);\n\t\t} finally {\n\t\t\tthis._isUndoing = false;\n\t\t\tthis._isRedoing = false;\n\t\t\tthis._eventEmitter.endDeferredEmit(resultingSelection);\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[]): void;\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: true): model.IValidEditOperation[];\n\tpublic applyEdits(rawOperations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: boolean = false): void | model.IValidEditOperation[] {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tconst operations = this._validateEditOperations(rawOperations);\n\t\t\treturn this._doApplyEdits(operations, computeUndoEdits);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _doApplyEdits(rawOperations: model.ValidAnnotatedEditOperation[], computeUndoEdits: boolean): void | model.IValidEditOperation[] {\n\n\t\tconst oldLineCount = this._buffer.getLineCount();\n\t\tconst result = this._buffer.applyEdits(rawOperations, this._options.trimAutoWhitespace, computeUndoEdits);\n\t\tconst newLineCount = this._buffer.getLineCount();\n\n\t\tconst contentChanges = result.changes;\n\t\tthis._trimAutoWhitespaceLines = result.trimAutoWhitespaceLineNumbers;\n\n\t\tif (contentChanges.length !== 0) {\n\t\t\tlet rawContentChanges: ModelRawChange[] = [];\n\n\t\t\tlet lineCount = oldLineCount;\n\t\t\tfor (let i = 0, len = contentChanges.length; i < len; i++) {\n\t\t\t\tconst change = contentChanges[i];\n\t\t\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(change.text);\n\t\t\t\tthis._tokens.acceptEdit(change.range, eolCount, firstLineLength);\n\t\t\t\tthis._tokens2.acceptEdit(change.range, eolCount, firstLineLength, lastLineLength, change.text.length > 0 ? change.text.charCodeAt(0) : CharCode.Null);\n\t\t\t\tthis._onDidChangeDecorations.fire();\n\t\t\t\tthis._decorationsTree.acceptReplace(change.rangeOffset, change.rangeLength, change.text.length, change.forceMoveMarkers);\n\n\t\t\t\tconst startLineNumber = change.range.startLineNumber;\n\t\t\t\tconst endLineNumber = change.range.endLineNumber;\n\n\t\t\t\tconst deletingLinesCnt = endLineNumber - startLineNumber;\n\t\t\t\tconst insertingLinesCnt = eolCount;\n\t\t\t\tconst editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n\n\t\t\t\tconst changeLineCountDelta = (insertingLinesCnt - deletingLinesCnt);\n\n\t\t\t\tfor (let j = editingLinesCnt; j >= 0; j--) {\n\t\t\t\t\tconst editLineNumber = startLineNumber + j;\n\t\t\t\t\tconst currentEditLineNumber = newLineCount - lineCount - changeLineCountDelta + editLineNumber;\n\t\t\t\t\trawContentChanges.push(new ModelRawLineChanged(editLineNumber, this.getLineContent(currentEditLineNumber)));\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < deletingLinesCnt) {\n\t\t\t\t\t// Must delete some lines\n\t\t\t\t\tconst spliceStartLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\trawContentChanges.push(new ModelRawLinesDeleted(spliceStartLineNumber + 1, endLineNumber));\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < insertingLinesCnt) {\n\t\t\t\t\t// Must insert some lines\n\t\t\t\t\tconst spliceLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\tconst cnt = insertingLinesCnt - editingLinesCnt;\n\t\t\t\t\tconst fromLineNumber = newLineCount - lineCount - cnt + spliceLineNumber + 1;\n\t\t\t\t\tlet newLines: string[] = [];\n\t\t\t\t\tfor (let i = 0; i < cnt; i++) {\n\t\t\t\t\t\tlet lineNumber = fromLineNumber + i;\n\t\t\t\t\t\tnewLines[lineNumber - fromLineNumber] = this.getLineContent(lineNumber);\n\t\t\t\t\t}\n\t\t\t\t\trawContentChanges.push(new ModelRawLinesInserted(spliceLineNumber + 1, startLineNumber + insertingLinesCnt, newLines));\n\t\t\t\t}\n\n\t\t\t\tlineCount += changeLineCountDelta;\n\t\t\t}\n\n\t\t\tthis._increaseVersionId();\n\n\t\t\tthis._emitContentChangedEvent(\n\t\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t\trawContentChanges,\n\t\t\t\t\tthis.getVersionId(),\n\t\t\t\t\tthis._isUndoing,\n\t\t\t\t\tthis._isRedoing\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tchanges: contentChanges,\n\t\t\t\t\teol: this._buffer.getEOL(),\n\t\t\t\t\tversionId: this.getVersionId(),\n\t\t\t\t\tisUndoing: this._isUndoing,\n\t\t\t\t\tisRedoing: this._isRedoing,\n\t\t\t\t\tisFlush: false\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn (result.reverseEdits === null ? undefined : result.reverseEdits);\n\t}\n\n\tpublic undo(): void | Promise<void> {\n\t\treturn this._undoRedoService.undo(this.uri);\n\t}\n\n\tpublic canUndo(): boolean {\n\t\treturn this._undoRedoService.canUndo(this.uri);\n\t}\n\n\tpublic redo(): void | Promise<void> {\n\t\treturn this._undoRedoService.redo(this.uri);\n\t}\n\n\tpublic canRedo(): boolean {\n\t\treturn this._undoRedoService.canRedo(this.uri);\n\t}\n\n\t//#endregion\n\n\t//#region Decorations\n\n\tpublic changeDecorations<T>(callback: (changeAccessor: model.IModelDecorationsChangeAccessor) => T, ownerId: number = 0): T | null {\n\t\tthis._assertNotDisposed();\n\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\treturn this._changeDecorations(ownerId, callback);\n\t\t} finally {\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _changeDecorations<T>(ownerId: number, callback: (changeAccessor: model.IModelDecorationsChangeAccessor) => T): T | null {\n\t\tlet changeAccessor: model.IModelDecorationsChangeAccessor = {\n\t\t\taddDecoration: (range: IRange, options: model.IModelDecorationOptions): string => {\n\t\t\t\treturn this._deltaDecorationsImpl(ownerId, [], [{ range: range, options: options }])[0];\n\t\t\t},\n\t\t\tchangeDecoration: (id: string, newRange: IRange): void => {\n\t\t\t\tthis._changeDecorationImpl(id, newRange);\n\t\t\t},\n\t\t\tchangeDecorationOptions: (id: string, options: model.IModelDecorationOptions) => {\n\t\t\t\tthis._changeDecorationOptionsImpl(id, _normalizeOptions(options));\n\t\t\t},\n\t\t\tremoveDecoration: (id: string): void => {\n\t\t\t\tthis._deltaDecorationsImpl(ownerId, [id], []);\n\t\t\t},\n\t\t\tdeltaDecorations: (oldDecorations: string[], newDecorations: model.IModelDeltaDecoration[]): string[] => {\n\t\t\t\tif (oldDecorations.length === 0 && newDecorations.length === 0) {\n\t\t\t\t\t// nothing to do\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n\t\t\t}\n\t\t};\n\t\tlet result: T | null = null;\n\t\ttry {\n\t\t\tresult = callback(changeAccessor);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t\t// Invalidate change accessor\n\t\tchangeAccessor.addDecoration = invalidFunc;\n\t\tchangeAccessor.changeDecoration = invalidFunc;\n\t\tchangeAccessor.changeDecorationOptions = invalidFunc;\n\t\tchangeAccessor.removeDecoration = invalidFunc;\n\t\tchangeAccessor.deltaDecorations = invalidFunc;\n\t\treturn result;\n\t}\n\n\tpublic deltaDecorations(oldDecorations: string[], newDecorations: model.IModelDeltaDecoration[], ownerId: number = 0): string[] {\n\t\tthis._assertNotDisposed();\n\t\tif (!oldDecorations) {\n\t\t\toldDecorations = [];\n\t\t}\n\t\tif (oldDecorations.length === 0 && newDecorations.length === 0) {\n\t\t\t// nothing to do\n\t\t\treturn [];\n\t\t}\n\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\treturn this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n\t\t} finally {\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\t_getTrackedRange(id: string): Range | null {\n\t\treturn this.getDecorationRange(id);\n\t}\n\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: model.TrackedRangeStickiness): null;\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: model.TrackedRangeStickiness): string;\n\t_setTrackedRange(id: string | null, newRange: Range | null, newStickiness: model.TrackedRangeStickiness): string | null {\n\t\tconst node = (id ? this._decorations[id] : null);\n\n\t\tif (!node) {\n\t\t\tif (!newRange) {\n\t\t\t\t// node doesn't exist, the request is to delete => nothing to do\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// node doesn't exist, the request is to set => add the tracked range\n\t\t\treturn this._deltaDecorationsImpl(0, [], [{ range: newRange, options: TRACKED_RANGE_OPTIONS[newStickiness] }])[0];\n\t\t}\n\n\t\tif (!newRange) {\n\t\t\t// node exists, the request is to delete => delete node\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t\treturn null;\n\t\t}\n\n\t\t// node exists, the request is to set => change the tracked range and its options\n\t\tconst range = this._validateRangeRelaxedNoAllocations(newRange);\n\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), startOffset, endOffset, range);\n\t\tnode.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n\t\tthis._decorationsTree.insert(node);\n\t\treturn node.id;\n\t}\n\n\tpublic removeAllDecorationsWithOwnerId(ownerId: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst nodes = this._decorationsTree.collectNodesFromOwner(ownerId);\n\t\tfor (let i = 0, len = nodes.length; i < len; i++) {\n\t\t\tconst node = nodes[i];\n\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t}\n\t}\n\n\tpublic getDecorationOptions(decorationId: string): model.IModelDecorationOptions | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\treturn node.options;\n\t}\n\n\tpublic getDecorationRange(decorationId: string): Range | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\tconst versionId = this.getVersionId();\n\t\tif (node.cachedVersionId !== versionId) {\n\t\t\tthis._decorationsTree.resolveNode(node, versionId);\n\t\t}\n\t\tif (node.range === null) {\n\t\t\tnode.range = this._getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n\t\t}\n\t\treturn node.range;\n\t}\n\n\tpublic getLineDecorations(lineNumber: number, ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.getLinesDecorations(lineNumber, lineNumber, ownerId, filterOutValidation);\n\t}\n\n\tpublic getLinesDecorations(_startLineNumber: number, _endLineNumber: number, ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tlet lineCount = this.getLineCount();\n\t\tlet startLineNumber = Math.min(lineCount, Math.max(1, _startLineNumber));\n\t\tlet endLineNumber = Math.min(lineCount, Math.max(1, _endLineNumber));\n\t\tlet endColumn = this.getLineMaxColumn(endLineNumber);\n\t\treturn this._getDecorationsInRange(new Range(startLineNumber, 1, endLineNumber, endColumn), ownerId, filterOutValidation);\n\t}\n\n\tpublic getDecorationsInRange(range: IRange, ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tlet validatedRange = this.validateRange(range);\n\t\treturn this._getDecorationsInRange(validatedRange, ownerId, filterOutValidation);\n\t}\n\n\tpublic getOverviewRulerDecorations(ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tconst versionId = this.getVersionId();\n\t\tconst result = this._decorationsTree.search(ownerId, filterOutValidation, true, versionId);\n\t\treturn this._ensureNodesHaveRanges(result);\n\t}\n\n\tpublic getAllDecorations(ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tconst versionId = this.getVersionId();\n\t\tconst result = this._decorationsTree.search(ownerId, filterOutValidation, false, versionId);\n\t\treturn this._ensureNodesHaveRanges(result);\n\t}\n\n\tprivate _getDecorationsInRange(filterRange: Range, filterOwnerId: number, filterOutValidation: boolean): IntervalNode[] {\n\t\tconst startOffset = this._buffer.getOffsetAt(filterRange.startLineNumber, filterRange.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(filterRange.endLineNumber, filterRange.endColumn);\n\n\t\tconst versionId = this.getVersionId();\n\t\tconst result = this._decorationsTree.intervalSearch(startOffset, endOffset, filterOwnerId, filterOutValidation, versionId);\n\n\t\treturn this._ensureNodesHaveRanges(result);\n\t}\n\n\tprivate _ensureNodesHaveRanges(nodes: IntervalNode[]): IntervalNode[] {\n\t\tfor (let i = 0, len = nodes.length; i < len; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (node.range === null) {\n\t\t\t\tnode.range = this._getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t}\n\n\tprivate _getRangeAt(start: number, end: number): Range {\n\t\treturn this._buffer.getRangeAt(start, end - start);\n\t}\n\n\tprivate _changeDecorationImpl(decorationId: string, _range: IRange): void {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = this._validateRangeRelaxedNoAllocations(_range);\n\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), startOffset, endOffset, range);\n\t\tthis._decorationsTree.insert(node);\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t}\n\n\tprivate _changeDecorationOptionsImpl(decorationId: string, options: ModelDecorationOptions): void {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodeWasInOverviewRuler = (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n\t\tconst nodeIsInOverviewRuler = (options.overviewRuler && options.overviewRuler.color ? true : false);\n\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(options);\n\n\t\tif (nodeWasInOverviewRuler !== nodeIsInOverviewRuler) {\n\t\t\t// Delete + Insert due to an overview ruler status change\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tnode.setOptions(options);\n\t\t\tthis._decorationsTree.insert(node);\n\t\t} else {\n\t\t\tnode.setOptions(options);\n\t\t}\n\t}\n\n\tprivate _deltaDecorationsImpl(ownerId: number, oldDecorationsIds: string[], newDecorations: model.IModelDeltaDecoration[]): string[] {\n\t\tconst versionId = this.getVersionId();\n\n\t\tconst oldDecorationsLen = oldDecorationsIds.length;\n\t\tlet oldDecorationIndex = 0;\n\n\t\tconst newDecorationsLen = newDecorations.length;\n\t\tlet newDecorationIndex = 0;\n\n\t\tlet result = new Array<string>(newDecorationsLen);\n\t\twhile (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n\n\t\t\tlet node: IntervalNode | null = null;\n\n\t\t\tif (oldDecorationIndex < oldDecorationsLen) {\n\t\t\t\t// (1) get ourselves an old node\n\t\t\t\tdo {\n\t\t\t\t\tnode = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n\t\t\t\t} while (!node && oldDecorationIndex < oldDecorationsLen);\n\n\t\t\t\t// (2) remove the node from the tree (if it exists)\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._decorationsTree.delete(node);\n\t\t\t\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newDecorationIndex < newDecorationsLen) {\n\t\t\t\t// (3) create a new node if necessary\n\t\t\t\tif (!node) {\n\t\t\t\t\tconst internalDecorationId = (++this._lastDecorationId);\n\t\t\t\t\tconst decorationId = `${this._instanceId};${internalDecorationId}`;\n\t\t\t\t\tnode = new IntervalNode(decorationId, 0, 0);\n\t\t\t\t\tthis._decorations[decorationId] = node;\n\t\t\t\t}\n\n\t\t\t\t// (4) initialize node\n\t\t\t\tconst newDecoration = newDecorations[newDecorationIndex];\n\t\t\t\tconst range = this._validateRangeRelaxedNoAllocations(newDecoration.range);\n\t\t\t\tconst options = _normalizeOptions(newDecoration.options);\n\t\t\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\t\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t\t\tnode.ownerId = ownerId;\n\t\t\t\tnode.reset(versionId, startOffset, endOffset, range);\n\t\t\t\tnode.setOptions(options);\n\t\t\t\tthis._onDidChangeDecorations.checkAffectedAndFire(options);\n\n\t\t\t\tthis._decorationsTree.insert(node);\n\n\t\t\t\tresult[newDecorationIndex] = node.id;\n\n\t\t\t\tnewDecorationIndex++;\n\t\t\t} else {\n\t\t\t\tif (node) {\n\t\t\t\t\tdelete this._decorations[node.id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\t//#region Tokenization\n\n\tpublic setLineTokens(lineNumber: number, tokens: Uint32Array | ArrayBuffer | null): void {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\tthis._tokens.setTokens(this._languageIdentifier.id, lineNumber - 1, this._buffer.getLineLength(lineNumber), tokens, false);\n\t}\n\n\tpublic setTokens(tokens: MultilineTokens[]): void {\n\t\tif (tokens.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet ranges: { fromLineNumber: number; toLineNumber: number; }[] = [];\n\n\t\tfor (let i = 0, len = tokens.length; i < len; i++) {\n\t\t\tconst element = tokens[i];\n\t\t\tlet minChangedLineNumber = 0;\n\t\t\tlet maxChangedLineNumber = 0;\n\t\t\tlet hasChange = false;\n\t\t\tfor (let j = 0, lenJ = element.tokens.length; j < lenJ; j++) {\n\t\t\t\tconst lineNumber = element.startLineNumber + j;\n\t\t\t\tif (hasChange) {\n\t\t\t\t\tthis._tokens.setTokens(this._languageIdentifier.id, lineNumber - 1, this._buffer.getLineLength(lineNumber), element.tokens[j], false);\n\t\t\t\t\tmaxChangedLineNumber = lineNumber;\n\t\t\t\t} else {\n\t\t\t\t\tconst lineHasChange = this._tokens.setTokens(this._languageIdentifier.id, lineNumber - 1, this._buffer.getLineLength(lineNumber), element.tokens[j], true);\n\t\t\t\t\tif (lineHasChange) {\n\t\t\t\t\t\thasChange = true;\n\t\t\t\t\t\tminChangedLineNumber = lineNumber;\n\t\t\t\t\t\tmaxChangedLineNumber = lineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasChange) {\n\t\t\t\tranges.push({ fromLineNumber: minChangedLineNumber, toLineNumber: maxChangedLineNumber });\n\t\t\t}\n\t\t}\n\n\t\tif (ranges.length > 0) {\n\t\t\tthis._emitModelTokensChangedEvent({\n\t\t\t\ttokenizationSupportChanged: false,\n\t\t\t\tsemanticTokensApplied: false,\n\t\t\t\tranges: ranges\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setSemanticTokens(tokens: MultilineTokens2[] | null, isComplete: boolean): void {\n\t\tthis._tokens2.set(tokens, isComplete);\n\n\t\tthis._emitModelTokensChangedEvent({\n\t\t\ttokenizationSupportChanged: false,\n\t\t\tsemanticTokensApplied: tokens !== null,\n\t\t\tranges: [{ fromLineNumber: 1, toLineNumber: this.getLineCount() }]\n\t\t});\n\t}\n\n\tpublic hasCompleteSemanticTokens(): boolean {\n\t\treturn this._tokens2.isComplete();\n\t}\n\n\tpublic hasSomeSemanticTokens(): boolean {\n\t\treturn !this._tokens2.isEmpty();\n\t}\n\n\tpublic setPartialSemanticTokens(range: Range, tokens: MultilineTokens2[]): void {\n\t\tif (this.hasCompleteSemanticTokens()) {\n\t\t\treturn;\n\t\t}\n\t\tconst changedRange = this._tokens2.setPartial(range, tokens);\n\n\t\tthis._emitModelTokensChangedEvent({\n\t\t\ttokenizationSupportChanged: false,\n\t\t\tsemanticTokensApplied: true,\n\t\t\tranges: [{ fromLineNumber: changedRange.startLineNumber, toLineNumber: changedRange.endLineNumber }]\n\t\t});\n\t}\n\n\tpublic tokenizeViewport(startLineNumber: number, endLineNumber: number): void {\n\t\tstartLineNumber = Math.max(1, startLineNumber);\n\t\tendLineNumber = Math.min(this._buffer.getLineCount(), endLineNumber);\n\t\tthis._tokenization.tokenizeViewport(startLineNumber, endLineNumber);\n\t}\n\n\tpublic clearTokens(): void {\n\t\tthis._tokens.flush();\n\t\tthis._emitModelTokensChangedEvent({\n\t\t\ttokenizationSupportChanged: true,\n\t\t\tsemanticTokensApplied: false,\n\t\t\tranges: [{\n\t\t\t\tfromLineNumber: 1,\n\t\t\t\ttoLineNumber: this._buffer.getLineCount()\n\t\t\t}]\n\t\t});\n\t}\n\n\tpublic clearSemanticTokens(): void {\n\t\tthis._tokens2.flush();\n\n\t\tthis._emitModelTokensChangedEvent({\n\t\t\ttokenizationSupportChanged: false,\n\t\t\tsemanticTokensApplied: false,\n\t\t\tranges: [{ fromLineNumber: 1, toLineNumber: this.getLineCount() }]\n\t\t});\n\t}\n\n\tprivate _emitModelTokensChangedEvent(e: IModelTokensChangedEvent): void {\n\t\tif (!this._isDisposing) {\n\t\t\tthis._onDidChangeTokens.fire(e);\n\t\t}\n\t}\n\n\tpublic resetTokenization(): void {\n\t\tthis._tokenization.reset();\n\t}\n\n\tpublic forceTokenization(lineNumber: number): void {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\tthis._tokenization.forceTokenization(lineNumber);\n\t}\n\n\tpublic isCheapToTokenize(lineNumber: number): boolean {\n\t\treturn this._tokenization.isCheapToTokenize(lineNumber);\n\t}\n\n\tpublic tokenizeIfCheap(lineNumber: number): void {\n\t\tif (this.isCheapToTokenize(lineNumber)) {\n\t\t\tthis.forceTokenization(lineNumber);\n\t\t}\n\t}\n\n\tpublic getLineTokens(lineNumber: number): LineTokens {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\treturn this._getLineTokens(lineNumber);\n\t}\n\n\tprivate _getLineTokens(lineNumber: number): LineTokens {\n\t\tconst lineText = this.getLineContent(lineNumber);\n\t\tconst syntacticTokens = this._tokens.getTokens(this._languageIdentifier.id, lineNumber - 1, lineText);\n\t\treturn this._tokens2.addSemanticTokens(lineNumber, syntacticTokens);\n\t}\n\n\tpublic getLanguageIdentifier(): LanguageIdentifier {\n\t\treturn this._languageIdentifier;\n\t}\n\n\tpublic getModeId(): string {\n\t\treturn this._languageIdentifier.language;\n\t}\n\n\tpublic setMode(languageIdentifier: LanguageIdentifier): void {\n\t\tif (this._languageIdentifier.id === languageIdentifier.id) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tlet e: IModelLanguageChangedEvent = {\n\t\t\toldLanguage: this._languageIdentifier.language,\n\t\t\tnewLanguage: languageIdentifier.language\n\t\t};\n\n\t\tthis._languageIdentifier = languageIdentifier;\n\n\t\tthis._onDidChangeLanguage.fire(e);\n\t\tthis._onDidChangeLanguageConfiguration.fire({});\n\t}\n\n\tpublic getLanguageIdAtPosition(lineNumber: number, column: number): LanguageId {\n\t\tconst position = this.validatePosition(new Position(lineNumber, column));\n\t\tconst lineTokens = this.getLineTokens(position.lineNumber);\n\t\treturn lineTokens.getLanguageId(lineTokens.findTokenIndexAtOffset(position.column - 1));\n\t}\n\n\t// Having tokens allows implementing additional helper methods\n\n\tpublic getWordAtPosition(_position: IPosition): model.IWordAtPosition | null {\n\t\tthis._assertNotDisposed();\n\t\tconst position = this.validatePosition(_position);\n\t\tconst lineContent = this.getLineContent(position.lineNumber);\n\t\tconst lineTokens = this._getLineTokens(position.lineNumber);\n\t\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\n\t\t// (1). First try checking right biased word\n\t\tconst [rbStartOffset, rbEndOffset] = TextModel._findLanguageBoundaries(lineTokens, tokenIndex);\n\t\tconst rightBiasedWord = getWordAtText(\n\t\t\tposition.column,\n\t\t\tLanguageConfigurationRegistry.getWordDefinition(lineTokens.getLanguageId(tokenIndex)),\n\t\t\tlineContent.substring(rbStartOffset, rbEndOffset),\n\t\t\trbStartOffset\n\t\t);\n\t\t// Make sure the result touches the original passed in position\n\t\tif (rightBiasedWord && rightBiasedWord.startColumn <= _position.column && _position.column <= rightBiasedWord.endColumn) {\n\t\t\treturn rightBiasedWord;\n\t\t}\n\n\t\t// (2). Else, if we were at a language boundary, check the left biased word\n\t\tif (tokenIndex > 0 && rbStartOffset === position.column - 1) {\n\t\t\t// edge case, where `position` sits between two tokens belonging to two different languages\n\t\t\tconst [lbStartOffset, lbEndOffset] = TextModel._findLanguageBoundaries(lineTokens, tokenIndex - 1);\n\t\t\tconst leftBiasedWord = getWordAtText(\n\t\t\t\tposition.column,\n\t\t\t\tLanguageConfigurationRegistry.getWordDefinition(lineTokens.getLanguageId(tokenIndex - 1)),\n\t\t\t\tlineContent.substring(lbStartOffset, lbEndOffset),\n\t\t\t\tlbStartOffset\n\t\t\t);\n\t\t\t// Make sure the result touches the original passed in position\n\t\t\tif (leftBiasedWord && leftBiasedWord.startColumn <= _position.column && _position.column <= leftBiasedWord.endColumn) {\n\t\t\t\treturn leftBiasedWord;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findLanguageBoundaries(lineTokens: LineTokens, tokenIndex: number): [number, number] {\n\t\tconst languageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t// go left until a different language is hit\n\t\tlet startOffset = 0;\n\t\tfor (let i = tokenIndex; i >= 0 && lineTokens.getLanguageId(i) === languageId; i--) {\n\t\t\tstartOffset = lineTokens.getStartOffset(i);\n\t\t}\n\n\t\t// go right until a different language is hit\n\t\tlet endOffset = lineTokens.getLineContent().length;\n\t\tfor (let i = tokenIndex, tokenCount = lineTokens.getCount(); i < tokenCount && lineTokens.getLanguageId(i) === languageId; i++) {\n\t\t\tendOffset = lineTokens.getEndOffset(i);\n\t\t}\n\n\t\treturn [startOffset, endOffset];\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition): model.IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic findMatchingBracketUp(_bracket: string, _position: IPosition): Range | null {\n\t\tlet bracket = _bracket.toLowerCase();\n\t\tlet position = this.validatePosition(_position);\n\n\t\tlet lineTokens = this._getLineTokens(position.lineNumber);\n\t\tlet languageId = lineTokens.getLanguageId(lineTokens.findTokenIndexAtOffset(position.column - 1));\n\t\tlet bracketsSupport = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\n\t\tif (!bracketsSupport) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet data = bracketsSupport.textIsBracket[bracket];\n\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn stripBracketSearchCanceled(this._findMatchingBracketUp(data, position, null));\n\t}\n\n\tpublic matchBracket(position: IPosition): [Range, Range] | null {\n\t\treturn this._matchBracket(this.validatePosition(position));\n\t}\n\n\tprivate _establishBracketSearchOffsets(position: Position, lineTokens: LineTokens, modeBrackets: RichEditBrackets, tokenIndex: number) {\n\t\tconst tokenCount = lineTokens.getCount();\n\t\tconst currentLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t// limit search to not go before `maxBracketLength`\n\t\tlet searchStartOffset = Math.max(0, position.column - 1 - modeBrackets.maxBracketLength);\n\t\tfor (let i = tokenIndex - 1; i >= 0; i--) {\n\t\t\tconst tokenEndOffset = lineTokens.getEndOffset(i);\n\t\t\tif (tokenEndOffset <= searchStartOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n\t\t\t\tsearchStartOffset = tokenEndOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// limit search to not go after `maxBracketLength`\n\t\tlet searchEndOffset = Math.min(lineTokens.getLineContent().length, position.column - 1 + modeBrackets.maxBracketLength);\n\t\tfor (let i = tokenIndex + 1; i < tokenCount; i++) {\n\t\t\tconst tokenStartOffset = lineTokens.getStartOffset(i);\n\t\t\tif (tokenStartOffset >= searchEndOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n\t\t\t\tsearchEndOffset = tokenStartOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn { searchStartOffset, searchEndOffset };\n\t}\n\n\tprivate _matchBracket(position: Position): [Range, Range] | null {\n\t\tconst lineNumber = position.lineNumber;\n\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\tif (tokenIndex < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst currentModeBrackets = LanguageConfigurationRegistry.getBracketsSupport(lineTokens.getLanguageId(tokenIndex));\n\n\t\t// check that the token is not to be ignored\n\t\tif (currentModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex))) {\n\n\t\t\tlet { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, currentModeBrackets, tokenIndex);\n\n\t\t\t// it might be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n\t\t\t// `bestResult` will contain the most right-side result\n\t\t\tlet bestResult: [Range, Range] | null = null;\n\t\t\twhile (true) {\n\t\t\t\tconst foundBracket = BracketsUtils.findNextBracketInRange(currentModeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!foundBracket) {\n\t\t\t\t\t// there are no more brackets in this text\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\tif (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\tconst foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n\t\t\t\t\tconst r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText], null);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tif (r instanceof BracketSearchCanceled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbestResult = r;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = foundBracket.endColumn - 1;\n\t\t\t}\n\n\t\t\tif (bestResult) {\n\t\t\t\treturn bestResult;\n\t\t\t}\n\t\t}\n\n\t\t// If position is in between two tokens, try also looking in the previous token\n\t\tif (tokenIndex > 0 && lineTokens.getStartOffset(tokenIndex) === position.column - 1) {\n\t\t\tconst prevTokenIndex = tokenIndex - 1;\n\t\t\tconst prevModeBrackets = LanguageConfigurationRegistry.getBracketsSupport(lineTokens.getLanguageId(prevTokenIndex));\n\n\t\t\t// check that previous token is not to be ignored\n\t\t\tif (prevModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(prevTokenIndex))) {\n\n\t\t\t\tlet { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, prevModeBrackets, prevTokenIndex);\n\n\t\t\t\tconst foundBracket = BracketsUtils.findPrevBracketInRange(prevModeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\n\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\tif (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\tconst foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n\t\t\t\t\tconst r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText], null);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tif (r instanceof BracketSearchCanceled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _matchFoundBracket(foundBracket: Range, data: RichEditBracket, isOpen: boolean, continueSearchPredicate: ContinueBracketSearchPredicate): [Range, Range] | null | BracketSearchCanceled {\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst matched = (\n\t\t\tisOpen\n\t\t\t\t? this._findMatchingBracketDown(data, foundBracket.getEndPosition(), continueSearchPredicate)\n\t\t\t\t: this._findMatchingBracketUp(data, foundBracket.getStartPosition(), continueSearchPredicate)\n\t\t);\n\n\t\tif (!matched) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (matched instanceof BracketSearchCanceled) {\n\t\t\treturn matched;\n\t\t}\n\n\t\treturn [foundBracket, matched];\n\t}\n\n\tprivate _findMatchingBracketUp(bracket: RichEditBracket, position: Position, continueSearchPredicate: ContinueBracketSearchPredicate): Range | null | BracketSearchCanceled {\n\t\t// console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tconst languageId = bracket.languageIdentifier.id;\n\t\tconst reversedBracketRegex = bracket.reversedRegex;\n\t\tlet count = -1;\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchPrevMatchingBracketInRange = (lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): Range | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\tcount++;\n\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\n\t\t\t\tsearchEndOffset = r.startColumn - 1;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = tokenCount - 1;\n\t\t\tlet searchStartOffset = lineText.length;\n\t\t\tlet searchEndOffset = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tconst searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchStartOffset\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMatchingBracketDown(bracket: RichEditBracket, position: Position, continueSearchPredicate: ContinueBracketSearchPredicate): Range | null | BracketSearchCanceled {\n\t\t// console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tconst languageId = bracket.languageIdentifier.id;\n\t\tconst bracketRegex = bracket.forwardRegex;\n\t\tlet count = 1;\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchNextMatchingBracketInRange = (lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): Range | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(bracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\tcount++;\n\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = r.endColumn - 1;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst lineCount = this.getLineCount();\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findPrevBracket(_position: IPosition): model.IFoundBracket | null {\n\t\tconst position = this.validatePosition(_position);\n\n\t\tlet languageId: LanguageId = -1;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = tokenCount - 1;\n\t\t\tlet searchStartOffset = lineText.length;\n\t\t\tlet searchEndOffset = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchStartOffset\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findNextBracket(_position: IPosition): model.IFoundBracket | null {\n\t\tconst position = this.validatePosition(_position);\n\t\tconst lineCount = this.getLineCount();\n\n\t\tlet languageId: LanguageId = -1;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn this._toFoundBracket(modeBrackets, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findEnclosingBrackets(_position: IPosition, maxDuration?: number): [Range, Range] | null {\n\t\tlet continueSearchPredicate: ContinueBracketSearchPredicate;\n\t\tif (typeof maxDuration === 'undefined') {\n\t\t\tcontinueSearchPredicate = null;\n\t\t} else {\n\t\t\tconst startTime = Date.now();\n\t\t\tcontinueSearchPredicate = () => {\n\t\t\t\treturn (Date.now() - startTime <= maxDuration);\n\t\t\t};\n\t\t}\n\t\tconst position = this.validatePosition(_position);\n\t\tconst lineCount = this.getLineCount();\n\t\tconst savedCounts = new Map<number, number[]>();\n\n\t\tlet counts: number[] = [];\n\t\tconst resetCounts = (languageId: number, modeBrackets: RichEditBrackets | null) => {\n\t\t\tif (!savedCounts.has(languageId)) {\n\t\t\t\tlet tmp = [];\n\t\t\t\tfor (let i = 0, len = modeBrackets ? modeBrackets.brackets.length : 0; i < len; i++) {\n\t\t\t\t\ttmp[i] = 0;\n\t\t\t\t}\n\t\t\t\tsavedCounts.set(languageId, tmp);\n\t\t\t}\n\t\t\tcounts = savedCounts.get(languageId)!;\n\t\t};\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchInRange = (modeBrackets: RichEditBrackets, lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): [Range, Range] | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tconst bracket = modeBrackets.textIsBracket[hitText];\n\t\t\t\tif (bracket) {\n\t\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\t\tcounts[bracket.index]++;\n\t\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\t\tcounts[bracket.index]--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (counts[bracket.index] === -1) {\n\t\t\t\t\t\treturn this._matchFoundBracket(r, bracket, false, continueSearchPredicate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = r.endColumn - 1;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet languageId: LanguageId = -1;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this._getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this._buffer.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t\tresetCounts(languageId, modeBrackets);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = LanguageConfigurationRegistry.getBracketsSupport(languageId);\n\t\t\t\t\tresetCounts(languageId, modeBrackets);\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _toFoundBracket(modeBrackets: RichEditBrackets, r: Range): model.IFoundBracket | null {\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet text = this.getValueInRange(r);\n\t\ttext = text.toLowerCase();\n\n\t\tlet data = modeBrackets.textIsBracket[text];\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\trange: r,\n\t\t\topen: data.open,\n\t\t\tclose: data.close,\n\t\t\tisOpen: modeBrackets.textIsOpenBracket[text]\n\t\t};\n\t}\n\n\t/**\n\t * Returns:\n\t *  - -1 => the line consists of whitespace\n\t *  - otherwise => the indent level is returned value\n\t */\n\tpublic static computeIndentLevel(line: string, tabSize: number): number {\n\t\tlet indent = 0;\n\t\tlet i = 0;\n\t\tlet len = line.length;\n\n\t\twhile (i < len) {\n\t\t\tlet chCode = line.charCodeAt(i);\n\t\t\tif (chCode === CharCode.Space) {\n\t\t\t\tindent++;\n\t\t\t} else if (chCode === CharCode.Tab) {\n\t\t\t\tindent = indent - indent % tabSize + tabSize;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tif (i === len) {\n\t\t\treturn -1; // line only consists of whitespace\n\t\t}\n\n\t\treturn indent;\n\t}\n\n\tprivate _computeIndentLevel(lineIndex: number): number {\n\t\treturn TextModel.computeIndentLevel(this._buffer.getLineContent(lineIndex + 1), this._options.tabSize);\n\t}\n\n\tpublic getActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): model.IActiveIndentGuideInfo {\n\t\tthis._assertNotDisposed();\n\t\tconst lineCount = this.getLineCount();\n\n\t\tif (lineNumber < 1 || lineNumber > lineCount) {\n\t\t\tthrow new Error('Illegal value for lineNumber');\n\t\t}\n\n\t\tconst foldingRules = LanguageConfigurationRegistry.getFoldingRules(this._languageIdentifier.id);\n\t\tconst offSide = Boolean(foldingRules && foldingRules.offSide);\n\n\t\tlet up_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet up_aboveContentLineIndent = -1;\n\t\tlet up_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet up_belowContentLineIndent = -1;\n\t\tconst up_resolveIndents = (lineNumber: number) => {\n\t\t\tif (up_aboveContentLineIndex !== -1 && (up_aboveContentLineIndex === -2 || up_aboveContentLineIndex > lineNumber - 1)) {\n\t\t\t\tup_aboveContentLineIndex = -1;\n\t\t\t\tup_aboveContentLineIndent = -1;\n\n\t\t\t\t// must find previous line with content\n\t\t\t\tfor (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\tup_aboveContentLineIndex = lineIndex;\n\t\t\t\t\t\tup_aboveContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (up_belowContentLineIndex === -2) {\n\t\t\t\tup_belowContentLineIndex = -1;\n\t\t\t\tup_belowContentLineIndent = -1;\n\n\t\t\t\t// must find next line with content\n\t\t\t\tfor (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\tup_belowContentLineIndex = lineIndex;\n\t\t\t\t\t\tup_belowContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet down_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet down_aboveContentLineIndent = -1;\n\t\tlet down_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet down_belowContentLineIndent = -1;\n\t\tconst down_resolveIndents = (lineNumber: number) => {\n\t\t\tif (down_aboveContentLineIndex === -2) {\n\t\t\t\tdown_aboveContentLineIndex = -1;\n\t\t\t\tdown_aboveContentLineIndent = -1;\n\n\t\t\t\t// must find previous line with content\n\t\t\t\tfor (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\tdown_aboveContentLineIndex = lineIndex;\n\t\t\t\t\t\tdown_aboveContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (down_belowContentLineIndex !== -1 && (down_belowContentLineIndex === -2 || down_belowContentLineIndex < lineNumber - 1)) {\n\t\t\t\tdown_belowContentLineIndex = -1;\n\t\t\t\tdown_belowContentLineIndent = -1;\n\n\t\t\t\t// must find next line with content\n\t\t\t\tfor (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\tdown_belowContentLineIndex = lineIndex;\n\t\t\t\t\t\tdown_belowContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet startLineNumber = 0;\n\t\tlet goUp = true;\n\t\tlet endLineNumber = 0;\n\t\tlet goDown = true;\n\t\tlet indent = 0;\n\n\t\tlet initialIndent = 0;\n\n\t\tfor (let distance = 0; goUp || goDown; distance++) {\n\t\t\tconst upLineNumber = lineNumber - distance;\n\t\t\tconst downLineNumber = lineNumber + distance;\n\n\t\t\tif (distance > 1 && (upLineNumber < 1 || upLineNumber < minLineNumber)) {\n\t\t\t\tgoUp = false;\n\t\t\t}\n\t\t\tif (distance > 1 && (downLineNumber > lineCount || downLineNumber > maxLineNumber)) {\n\t\t\t\tgoDown = false;\n\t\t\t}\n\t\t\tif (distance > 50000) {\n\t\t\t\t// stop processing\n\t\t\t\tgoUp = false;\n\t\t\t\tgoDown = false;\n\t\t\t}\n\n\t\t\tlet upLineIndentLevel: number = -1;\n\t\t\tif (goUp) {\n\t\t\t\t// compute indent level going up\n\t\t\t\tconst currentIndent = this._computeIndentLevel(upLineNumber - 1);\n\t\t\t\tif (currentIndent >= 0) {\n\t\t\t\t\t// This line has content (besides whitespace)\n\t\t\t\t\t// Use the line's indent\n\t\t\t\t\tup_belowContentLineIndex = upLineNumber - 1;\n\t\t\t\t\tup_belowContentLineIndent = currentIndent;\n\t\t\t\t\tupLineIndentLevel = Math.ceil(currentIndent / this._options.indentSize);\n\t\t\t\t} else {\n\t\t\t\t\tup_resolveIndents(upLineNumber);\n\t\t\t\t\tupLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, up_aboveContentLineIndent, up_belowContentLineIndent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet downLineIndentLevel = -1;\n\t\t\tif (goDown) {\n\t\t\t\t// compute indent level going down\n\t\t\t\tconst currentIndent = this._computeIndentLevel(downLineNumber - 1);\n\t\t\t\tif (currentIndent >= 0) {\n\t\t\t\t\t// This line has content (besides whitespace)\n\t\t\t\t\t// Use the line's indent\n\t\t\t\t\tdown_aboveContentLineIndex = downLineNumber - 1;\n\t\t\t\t\tdown_aboveContentLineIndent = currentIndent;\n\t\t\t\t\tdownLineIndentLevel = Math.ceil(currentIndent / this._options.indentSize);\n\t\t\t\t} else {\n\t\t\t\t\tdown_resolveIndents(downLineNumber);\n\t\t\t\t\tdownLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, down_aboveContentLineIndent, down_belowContentLineIndent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (distance === 0) {\n\t\t\t\tinitialIndent = upLineIndentLevel;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (distance === 1) {\n\t\t\t\tif (downLineNumber <= lineCount && downLineIndentLevel >= 0 && initialIndent + 1 === downLineIndentLevel) {\n\t\t\t\t\t// This is the beginning of a scope, we have special handling here, since we want the\n\t\t\t\t\t// child scope indent to be active, not the parent scope\n\t\t\t\t\tgoUp = false;\n\t\t\t\t\tstartLineNumber = downLineNumber;\n\t\t\t\t\tendLineNumber = downLineNumber;\n\t\t\t\t\tindent = downLineIndentLevel;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (upLineNumber >= 1 && upLineIndentLevel >= 0 && upLineIndentLevel - 1 === initialIndent) {\n\t\t\t\t\t// This is the end of a scope, just like above\n\t\t\t\t\tgoDown = false;\n\t\t\t\t\tstartLineNumber = upLineNumber;\n\t\t\t\t\tendLineNumber = upLineNumber;\n\t\t\t\t\tindent = upLineIndentLevel;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber = lineNumber;\n\t\t\t\tendLineNumber = lineNumber;\n\t\t\t\tindent = initialIndent;\n\t\t\t\tif (indent === 0) {\n\t\t\t\t\t// No need to continue\n\t\t\t\t\treturn { startLineNumber, endLineNumber, indent };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (goUp) {\n\t\t\t\tif (upLineIndentLevel >= indent) {\n\t\t\t\t\tstartLineNumber = upLineNumber;\n\t\t\t\t} else {\n\t\t\t\t\tgoUp = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (goDown) {\n\t\t\t\tif (downLineIndentLevel >= indent) {\n\t\t\t\t\tendLineNumber = downLineNumber;\n\t\t\t\t} else {\n\t\t\t\t\tgoDown = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { startLineNumber, endLineNumber, indent };\n\t}\n\n\tpublic getLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[] {\n\t\tthis._assertNotDisposed();\n\t\tconst lineCount = this.getLineCount();\n\n\t\tif (startLineNumber < 1 || startLineNumber > lineCount) {\n\t\t\tthrow new Error('Illegal value for startLineNumber');\n\t\t}\n\t\tif (endLineNumber < 1 || endLineNumber > lineCount) {\n\t\t\tthrow new Error('Illegal value for endLineNumber');\n\t\t}\n\n\t\tconst foldingRules = LanguageConfigurationRegistry.getFoldingRules(this._languageIdentifier.id);\n\t\tconst offSide = Boolean(foldingRules && foldingRules.offSide);\n\n\t\tlet result: number[] = new Array<number>(endLineNumber - startLineNumber + 1);\n\n\t\tlet aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet aboveContentLineIndent = -1;\n\n\t\tlet belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n\t\tlet belowContentLineIndent = -1;\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tlet resultIndex = lineNumber - startLineNumber;\n\n\t\t\tconst currentIndent = this._computeIndentLevel(lineNumber - 1);\n\t\t\tif (currentIndent >= 0) {\n\t\t\t\t// This line has content (besides whitespace)\n\t\t\t\t// Use the line's indent\n\t\t\t\taboveContentLineIndex = lineNumber - 1;\n\t\t\t\taboveContentLineIndent = currentIndent;\n\t\t\t\tresult[resultIndex] = Math.ceil(currentIndent / this._options.indentSize);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (aboveContentLineIndex === -2) {\n\t\t\t\taboveContentLineIndex = -1;\n\t\t\t\taboveContentLineIndent = -1;\n\n\t\t\t\t// must find previous line with content\n\t\t\t\tfor (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\taboveContentLineIndex = lineIndex;\n\t\t\t\t\t\taboveContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (belowContentLineIndex !== -1 && (belowContentLineIndex === -2 || belowContentLineIndex < lineNumber - 1)) {\n\t\t\t\tbelowContentLineIndex = -1;\n\t\t\t\tbelowContentLineIndent = -1;\n\n\t\t\t\t// must find next line with content\n\t\t\t\tfor (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n\t\t\t\t\tlet indent = this._computeIndentLevel(lineIndex);\n\t\t\t\t\tif (indent >= 0) {\n\t\t\t\t\t\tbelowContentLineIndex = lineIndex;\n\t\t\t\t\t\tbelowContentLineIndent = indent;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[resultIndex] = this._getIndentLevelForWhitespaceLine(offSide, aboveContentLineIndent, belowContentLineIndent);\n\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _getIndentLevelForWhitespaceLine(offSide: boolean, aboveContentLineIndent: number, belowContentLineIndent: number): number {\n\t\tif (aboveContentLineIndent === -1 || belowContentLineIndent === -1) {\n\t\t\t// At the top or bottom of the file\n\t\t\treturn 0;\n\n\t\t} else if (aboveContentLineIndent < belowContentLineIndent) {\n\t\t\t// we are inside the region above\n\t\t\treturn (1 + Math.floor(aboveContentLineIndent / this._options.indentSize));\n\n\t\t} else if (aboveContentLineIndent === belowContentLineIndent) {\n\t\t\t// we are in between two regions\n\t\t\treturn Math.ceil(belowContentLineIndent / this._options.indentSize);\n\n\t\t} else {\n\n\t\t\tif (offSide) {\n\t\t\t\t// same level as region below\n\t\t\t\treturn Math.ceil(belowContentLineIndent / this._options.indentSize);\n\t\t\t} else {\n\t\t\t\t// we are inside the region that ends below\n\t\t\t\treturn (1 + Math.floor(belowContentLineIndent / this._options.indentSize));\n\t\t\t}\n\n\t\t}\n\t}\n\n\t//#endregion\n}\n\n//#region Decorations\n\nclass DecorationsTrees {\n\n\t/**\n\t * This tree holds decorations that do not show up in the overview ruler.\n\t */\n\tprivate readonly _decorationsTree0: IntervalTree;\n\n\t/**\n\t * This tree holds decorations that show up in the overview ruler.\n\t */\n\tprivate readonly _decorationsTree1: IntervalTree;\n\n\tconstructor() {\n\t\tthis._decorationsTree0 = new IntervalTree();\n\t\tthis._decorationsTree1 = new IntervalTree();\n\t}\n\n\tpublic intervalSearch(start: number, end: number, filterOwnerId: number, filterOutValidation: boolean, cachedVersionId: number): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n\t\tconst r1 = this._decorationsTree1.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n\t\treturn r0.concat(r1);\n\t}\n\n\tpublic search(filterOwnerId: number, filterOutValidation: boolean, overviewRulerOnly: boolean, cachedVersionId: number): IntervalNode[] {\n\t\tif (overviewRulerOnly) {\n\t\t\treturn this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId);\n\t\t} else {\n\t\t\tconst r0 = this._decorationsTree0.search(filterOwnerId, filterOutValidation, cachedVersionId);\n\t\t\tconst r1 = this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId);\n\t\t\treturn r0.concat(r1);\n\t\t}\n\t}\n\n\tpublic collectNodesFromOwner(ownerId: number): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.collectNodesFromOwner(ownerId);\n\t\tconst r1 = this._decorationsTree1.collectNodesFromOwner(ownerId);\n\t\treturn r0.concat(r1);\n\t}\n\n\tpublic collectNodesPostOrder(): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.collectNodesPostOrder();\n\t\tconst r1 = this._decorationsTree1.collectNodesPostOrder();\n\t\treturn r0.concat(r1);\n\t}\n\n\tpublic insert(node: IntervalNode): void {\n\t\tif (getNodeIsInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.insert(node);\n\t\t} else {\n\t\t\tthis._decorationsTree0.insert(node);\n\t\t}\n\t}\n\n\tpublic delete(node: IntervalNode): void {\n\t\tif (getNodeIsInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.delete(node);\n\t\t} else {\n\t\t\tthis._decorationsTree0.delete(node);\n\t\t}\n\t}\n\n\tpublic resolveNode(node: IntervalNode, cachedVersionId: number): void {\n\t\tif (getNodeIsInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.resolveNode(node, cachedVersionId);\n\t\t} else {\n\t\t\tthis._decorationsTree0.resolveNode(node, cachedVersionId);\n\t\t}\n\t}\n\n\tpublic acceptReplace(offset: number, length: number, textLength: number, forceMoveMarkers: boolean): void {\n\t\tthis._decorationsTree0.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t\tthis._decorationsTree1.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t}\n}\n\nfunction cleanClassName(className: string): string {\n\treturn className.replace(/[^a-z0-9\\-_]/gi, ' ');\n}\n\nclass DecorationOptions implements model.IDecorationOptions {\n\treadonly color: string | ThemeColor;\n\treadonly darkColor: string | ThemeColor;\n\n\tconstructor(options: model.IDecorationOptions) {\n\t\tthis.color = options.color || '';\n\t\tthis.darkColor = options.darkColor || '';\n\n\t}\n}\n\nexport class ModelDecorationOverviewRulerOptions extends DecorationOptions {\n\treadonly position: model.OverviewRulerLane;\n\tprivate _resolvedColor: string | null;\n\n\tconstructor(options: model.IModelDecorationOverviewRulerOptions) {\n\t\tsuper(options);\n\t\tthis._resolvedColor = null;\n\t\tthis.position = (typeof options.position === 'number' ? options.position : model.OverviewRulerLane.Center);\n\t}\n\n\tpublic getColor(theme: EditorTheme): string {\n\t\tif (!this._resolvedColor) {\n\t\t\tif (theme.type !== 'light' && this.darkColor) {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.darkColor, theme);\n\t\t\t} else {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.color, theme);\n\t\t\t}\n\t\t}\n\t\treturn this._resolvedColor;\n\t}\n\n\tpublic invalidateCachedColor(): void {\n\t\tthis._resolvedColor = null;\n\t}\n\n\tprivate _resolveColor(color: string | ThemeColor, theme: EditorTheme): string {\n\t\tif (typeof color === 'string') {\n\t\t\treturn color;\n\t\t}\n\t\tlet c = color ? theme.getColor(color.id) : null;\n\t\tif (!c) {\n\t\t\treturn '';\n\t\t}\n\t\treturn c.toString();\n\t}\n}\n\nexport class ModelDecorationMinimapOptions extends DecorationOptions {\n\treadonly position: model.MinimapPosition;\n\tprivate _resolvedColor: Color | undefined;\n\n\n\tconstructor(options: model.IModelDecorationMinimapOptions) {\n\t\tsuper(options);\n\t\tthis.position = options.position;\n\t}\n\n\tpublic getColor(theme: EditorTheme): Color | undefined {\n\t\tif (!this._resolvedColor) {\n\t\t\tif (theme.type !== 'light' && this.darkColor) {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.darkColor, theme);\n\t\t\t} else {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.color, theme);\n\t\t\t}\n\t\t}\n\n\t\treturn this._resolvedColor;\n\t}\n\n\tpublic invalidateCachedColor(): void {\n\t\tthis._resolvedColor = undefined;\n\t}\n\n\tprivate _resolveColor(color: string | ThemeColor, theme: EditorTheme): Color | undefined {\n\t\tif (typeof color === 'string') {\n\t\t\treturn Color.fromHex(color);\n\t\t}\n\t\treturn theme.getColor(color.id);\n\t}\n}\n\nexport class ModelDecorationOptions implements model.IModelDecorationOptions {\n\n\tpublic static EMPTY: ModelDecorationOptions;\n\n\tpublic static register(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\t\treturn new ModelDecorationOptions(options);\n\t}\n\n\tpublic static createDynamic(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\t\treturn new ModelDecorationOptions(options);\n\t}\n\n\treadonly stickiness: model.TrackedRangeStickiness;\n\treadonly zIndex: number;\n\treadonly className: string | null;\n\treadonly hoverMessage: IMarkdownString | IMarkdownString[] | null;\n\treadonly glyphMarginHoverMessage: IMarkdownString | IMarkdownString[] | null;\n\treadonly isWholeLine: boolean;\n\treadonly showIfCollapsed: boolean;\n\treadonly collapseOnReplaceEdit: boolean;\n\treadonly overviewRuler: ModelDecorationOverviewRulerOptions | null;\n\treadonly minimap: ModelDecorationMinimapOptions | null;\n\treadonly glyphMarginClassName: string | null;\n\treadonly linesDecorationsClassName: string | null;\n\treadonly firstLineDecorationClassName: string | null;\n\treadonly marginClassName: string | null;\n\treadonly inlineClassName: string | null;\n\treadonly inlineClassNameAffectsLetterSpacing: boolean;\n\treadonly beforeContentClassName: string | null;\n\treadonly afterContentClassName: string | null;\n\n\tprivate constructor(options: model.IModelDecorationOptions) {\n\t\tthis.stickiness = options.stickiness || model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n\t\tthis.zIndex = options.zIndex || 0;\n\t\tthis.className = options.className ? cleanClassName(options.className) : null;\n\t\tthis.hoverMessage = options.hoverMessage || null;\n\t\tthis.glyphMarginHoverMessage = options.glyphMarginHoverMessage || null;\n\t\tthis.isWholeLine = options.isWholeLine || false;\n\t\tthis.showIfCollapsed = options.showIfCollapsed || false;\n\t\tthis.collapseOnReplaceEdit = options.collapseOnReplaceEdit || false;\n\t\tthis.overviewRuler = options.overviewRuler ? new ModelDecorationOverviewRulerOptions(options.overviewRuler) : null;\n\t\tthis.minimap = options.minimap ? new ModelDecorationMinimapOptions(options.minimap) : null;\n\t\tthis.glyphMarginClassName = options.glyphMarginClassName ? cleanClassName(options.glyphMarginClassName) : null;\n\t\tthis.linesDecorationsClassName = options.linesDecorationsClassName ? cleanClassName(options.linesDecorationsClassName) : null;\n\t\tthis.firstLineDecorationClassName = options.firstLineDecorationClassName ? cleanClassName(options.firstLineDecorationClassName) : null;\n\t\tthis.marginClassName = options.marginClassName ? cleanClassName(options.marginClassName) : null;\n\t\tthis.inlineClassName = options.inlineClassName ? cleanClassName(options.inlineClassName) : null;\n\t\tthis.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n\t\tthis.beforeContentClassName = options.beforeContentClassName ? cleanClassName(options.beforeContentClassName) : null;\n\t\tthis.afterContentClassName = options.afterContentClassName ? cleanClassName(options.afterContentClassName) : null;\n\t}\n}\nModelDecorationOptions.EMPTY = ModelDecorationOptions.register({});\n\n/**\n * The order carefully matches the values of the enum.\n */\nconst TRACKED_RANGE_OPTIONS = [\n\tModelDecorationOptions.register({ stickiness: model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ stickiness: model.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ stickiness: model.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore }),\n\tModelDecorationOptions.register({ stickiness: model.TrackedRangeStickiness.GrowsOnlyWhenTypingAfter }),\n];\n\nfunction _normalizeOptions(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\tif (options instanceof ModelDecorationOptions) {\n\t\treturn options;\n\t}\n\treturn ModelDecorationOptions.createDynamic(options);\n}\n\nexport class DidChangeDecorationsEmitter extends Disposable {\n\n\tprivate readonly _actual: Emitter<IModelDecorationsChangedEvent> = this._register(new Emitter<IModelDecorationsChangedEvent>());\n\tpublic readonly event: Event<IModelDecorationsChangedEvent> = this._actual.event;\n\n\tprivate _deferredCnt: number;\n\tprivate _shouldFire: boolean;\n\tprivate _affectsMinimap: boolean;\n\tprivate _affectsOverviewRuler: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._deferredCnt = 0;\n\t\tthis._shouldFire = false;\n\t\tthis._affectsMinimap = false;\n\t\tthis._affectsOverviewRuler = false;\n\t}\n\n\tpublic beginDeferredEmit(): void {\n\t\tthis._deferredCnt++;\n\t}\n\n\tpublic endDeferredEmit(): void {\n\t\tthis._deferredCnt--;\n\t\tif (this._deferredCnt === 0) {\n\t\t\tif (this._shouldFire) {\n\t\t\t\tconst event: IModelDecorationsChangedEvent = {\n\t\t\t\t\taffectsMinimap: this._affectsMinimap,\n\t\t\t\t\taffectsOverviewRuler: this._affectsOverviewRuler,\n\t\t\t\t};\n\t\t\t\tthis._shouldFire = false;\n\t\t\t\tthis._affectsMinimap = false;\n\t\t\t\tthis._affectsOverviewRuler = false;\n\t\t\t\tthis._actual.fire(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic checkAffectedAndFire(options: ModelDecorationOptions): void {\n\t\tif (!this._affectsMinimap) {\n\t\t\tthis._affectsMinimap = options.minimap && options.minimap.position ? true : false;\n\t\t}\n\t\tif (!this._affectsOverviewRuler) {\n\t\t\tthis._affectsOverviewRuler = options.overviewRuler && options.overviewRuler.color ? true : false;\n\t\t}\n\t\tthis._shouldFire = true;\n\t}\n\n\tpublic fire(): void {\n\t\tthis._affectsMinimap = true;\n\t\tthis._affectsOverviewRuler = true;\n\t\tthis._shouldFire = true;\n\t}\n}\n\n//#endregion\n\nexport class DidChangeContentEmitter extends Disposable {\n\n\t/**\n\t * Both `fastEvent` and `slowEvent` work the same way and contain the same events, but first we invoke `fastEvent` and then `slowEvent`.\n\t */\n\tprivate readonly _fastEmitter: Emitter<InternalModelContentChangeEvent> = this._register(new Emitter<InternalModelContentChangeEvent>());\n\tpublic readonly fastEvent: Event<InternalModelContentChangeEvent> = this._fastEmitter.event;\n\tprivate readonly _slowEmitter: Emitter<InternalModelContentChangeEvent> = this._register(new Emitter<InternalModelContentChangeEvent>());\n\tpublic readonly slowEvent: Event<InternalModelContentChangeEvent> = this._slowEmitter.event;\n\n\tprivate _deferredCnt: number;\n\tprivate _deferredEvent: InternalModelContentChangeEvent | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._deferredCnt = 0;\n\t\tthis._deferredEvent = null;\n\t}\n\n\tpublic beginDeferredEmit(): void {\n\t\tthis._deferredCnt++;\n\t}\n\n\tpublic endDeferredEmit(resultingSelection: Selection[] | null = null): void {\n\t\tthis._deferredCnt--;\n\t\tif (this._deferredCnt === 0) {\n\t\t\tif (this._deferredEvent !== null) {\n\t\t\t\tthis._deferredEvent.rawContentChangedEvent.resultingSelection = resultingSelection;\n\t\t\t\tconst e = this._deferredEvent;\n\t\t\t\tthis._deferredEvent = null;\n\t\t\t\tthis._fastEmitter.fire(e);\n\t\t\t\tthis._slowEmitter.fire(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic fire(e: InternalModelContentChangeEvent): void {\n\t\tif (this._deferredCnt > 0) {\n\t\t\tif (this._deferredEvent) {\n\t\t\t\tthis._deferredEvent = this._deferredEvent.merge(e);\n\t\t\t} else {\n\t\t\t\tthis._deferredEvent = e;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis._fastEmitter.fire(e);\n\t\tthis._slowEmitter.fire(e);\n\t}\n}\n"]}