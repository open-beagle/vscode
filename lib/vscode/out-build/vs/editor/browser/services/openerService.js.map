{"version":3,"file":"openerService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/services/openerService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizePath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { EditorOpenContext } from 'vs/platform/editor/common/editor';\nimport { IExternalOpener, IExternalUriResolver, IOpener, IOpenerService, IResolvedExternalUri, IValidator, matchesScheme, OpenOptions, ResolveExternalUriOptions } from 'vs/platform/opener/common/opener';\n\nclass CommandOpener implements IOpener {\n\n\tconstructor(@ICommandService private readonly _commandService: ICommandService) { }\n\n\tasync open(target: URI | string, options?: OpenOptions): Promise<boolean> {\n\t\tif (!matchesScheme(target, Schemas.command)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!options?.allowCommands) {\n\t\t\t// silently ignore commands when command-links are disabled, also\n\t\t\t// surpress other openers by returning TRUE\n\t\t\treturn true;\n\t\t}\n\t\t// run command or bail out if command isn't known\n\t\tif (typeof target === 'string') {\n\t\t\ttarget = URI.parse(target);\n\t\t}\n\t\t// execute as command\n\t\tlet args: any = [];\n\t\ttry {\n\t\t\targs = parse(decodeURIComponent(target.query));\n\t\t} catch {\n\t\t\t// ignore and retry\n\t\t\ttry {\n\t\t\t\targs = parse(target.query);\n\t\t\t} catch {\n\t\t\t\t// ignore error\n\t\t\t}\n\t\t}\n\t\tif (!Array.isArray(args)) {\n\t\t\targs = [args];\n\t\t}\n\t\tawait this._commandService.executeCommand(target.path, ...args);\n\t\treturn true;\n\t}\n}\n\nclass EditorOpener implements IOpener {\n\n\tconstructor(@ICodeEditorService private readonly _editorService: ICodeEditorService) { }\n\n\tasync open(target: URI | string, options: OpenOptions) {\n\t\tif (typeof target === 'string') {\n\t\t\ttarget = URI.parse(target);\n\t\t}\n\t\tlet selection: { startLineNumber: number; startColumn: number; } | undefined = undefined;\n\t\tconst match = /^L?(\\d+)(?:,(\\d+))?/.exec(target.fragment);\n\t\tif (match) {\n\t\t\t// support file:///some/file.js#73,84\n\t\t\t// support file:///some/file.js#L73\n\t\t\tselection = {\n\t\t\t\tstartLineNumber: parseInt(match[1]),\n\t\t\t\tstartColumn: match[2] ? parseInt(match[2]) : 1\n\t\t\t};\n\t\t\t// remove fragment\n\t\t\ttarget = target.with({ fragment: '' });\n\t\t}\n\n\t\tif (target.scheme === Schemas.file) {\n\t\t\ttarget = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n\t\t}\n\n\t\tawait this._editorService.openCodeEditor(\n\t\t\t{\n\t\t\t\tresource: target,\n\t\t\t\toptions: {\n\t\t\t\t\tselection,\n\t\t\t\t\tcontext: options?.fromUserGesture ? EditorOpenContext.USER : EditorOpenContext.API,\n\t\t\t\t\t...options?.editorOptions\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis._editorService.getFocusedCodeEditor(),\n\t\t\toptions?.openToSide\n\t\t);\n\n\t\treturn true;\n\t}\n}\n\nexport class OpenerService implements IOpenerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _openers = new LinkedList<IOpener>();\n\tprivate readonly _validators = new LinkedList<IValidator>();\n\tprivate readonly _resolvers = new LinkedList<IExternalUriResolver>();\n\tprivate readonly _resolvedUriTargets = new ResourceMap<URI>(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n\n\tprivate _defaultExternalOpener: IExternalOpener;\n\tprivate readonly _externalOpeners = new LinkedList<IExternalOpener>();\n\n\tconstructor(\n\t\t@ICodeEditorService editorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\t// Default external opener is going through window.open()\n\t\tthis._defaultExternalOpener = {\n\t\t\topenExternal: async href => {\n\t\t\t\t// ensure to open HTTP/HTTPS links into new windows\n\t\t\t\t// to not trigger a navigation. Any other link is\n\t\t\t\t// safe to be set as HREF to prevent a blank window\n\t\t\t\t// from opening.\n\t\t\t\tif (matchesScheme(href, Schemas.http) || matchesScheme(href, Schemas.https)) {\n\t\t\t\t\tdom.windowOpenNoOpener(href);\n\t\t\t\t} else {\n\t\t\t\t\twindow.location.href = href;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\t// Default opener: any external, maito, http(s), command, and catch-all-editors\n\t\tthis._openers.push({\n\t\t\topen: async (target: URI | string, options?: OpenOptions) => {\n\t\t\t\tif (options?.openExternal || matchesScheme(target, Schemas.mailto) || matchesScheme(target, Schemas.http) || matchesScheme(target, Schemas.https)) {\n\t\t\t\t\t// open externally\n\t\t\t\t\tawait this._doOpenExternal(target, options);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tthis._openers.push(new CommandOpener(commandService));\n\t\tthis._openers.push(new EditorOpener(editorService));\n\t}\n\n\tregisterOpener(opener: IOpener): IDisposable {\n\t\tconst remove = this._openers.unshift(opener);\n\t\treturn { dispose: remove };\n\t}\n\n\tregisterValidator(validator: IValidator): IDisposable {\n\t\tconst remove = this._validators.push(validator);\n\t\treturn { dispose: remove };\n\t}\n\n\tregisterExternalUriResolver(resolver: IExternalUriResolver): IDisposable {\n\t\tconst remove = this._resolvers.push(resolver);\n\t\treturn { dispose: remove };\n\t}\n\n\tsetDefaultExternalOpener(externalOpener: IExternalOpener): void {\n\t\tthis._defaultExternalOpener = externalOpener;\n\t}\n\n\tregisterExternalOpener(opener: IExternalOpener): IDisposable {\n\t\tconst remove = this._externalOpeners.push(opener);\n\t\treturn { dispose: remove };\n\t}\n\n\tasync open(target: URI | string, options?: OpenOptions): Promise<boolean> {\n\t\t// check with contributed validators\n\t\tconst targetURI = typeof target === 'string' ? URI.parse(target) : target;\n\t\t// validate against the original URI that this URI resolves to, if one exists\n\t\tconst validationTarget = this._resolvedUriTargets.get(targetURI) ?? target;\n\t\tfor (const validator of this._validators) {\n\t\t\tif (!(await validator.shouldOpen(validationTarget))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// check with contributed openers\n\t\tfor (const opener of this._openers) {\n\t\t\tconst handled = await opener.open(target, options);\n\t\t\tif (handled) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync resolveExternalUri(resource: URI, options?: ResolveExternalUriOptions): Promise<IResolvedExternalUri> {\n\t\tfor (const resolver of this._resolvers) {\n\t\t\tconst result = await resolver.resolveExternalUri(resource, options);\n\t\t\tif (result) {\n\t\t\t\tif (!this._resolvedUriTargets.has(result.resolved)) {\n\t\t\t\t\tthis._resolvedUriTargets.set(result.resolved, resource);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn { resolved: resource, dispose: () => { } };\n\t}\n\n\tprivate async _doOpenExternal(resource: URI | string, options: OpenOptions | undefined): Promise<boolean> {\n\n\t\t//todo@jrieken IExternalUriResolver should support `uri: URI | string`\n\t\tconst uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n\t\tconst { resolved } = await this.resolveExternalUri(uri, options);\n\n\t\tlet href: string;\n\t\tif (typeof resource === 'string' && uri.toString() === resolved.toString()) {\n\t\t\t// open the url-string AS IS\n\t\t\thref = resource;\n\t\t} else {\n\t\t\t// open URI using the toString(noEncode)+encodeURI-trick\n\t\t\thref = encodeURI(resolved.toString(true));\n\t\t}\n\n\t\tif (options?.allowContributedOpeners) {\n\t\t\tconst preferredOpenerId = typeof options?.allowContributedOpeners === 'string' ? options?.allowContributedOpeners : undefined;\n\t\t\tfor (const opener of this._externalOpeners) {\n\t\t\t\tconst didOpen = await opener.openExternal(href, {\n\t\t\t\t\tsourceUri: uri,\n\t\t\t\t\tpreferredOpenerId,\n\t\t\t\t}, CancellationToken.None);\n\t\t\t\tif (didOpen) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n\t}\n\n\tdispose() {\n\t\tthis._validators.clear();\n\t}\n}\n"]}