{"version":3,"file":"abstractCodeEditorService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/services/abstractCodeEditorService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IDecorationRenderOptions } from 'vs/editor/common/editorCommon';\nimport { IModelDecorationOptions, ITextModel } from 'vs/editor/common/model';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { URI } from 'vs/base/common/uri';\n\nexport abstract class AbstractCodeEditorService extends Disposable implements ICodeEditorService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onCodeEditorAdd: Emitter<ICodeEditor> = this._register(new Emitter<ICodeEditor>());\n\tpublic readonly onCodeEditorAdd: Event<ICodeEditor> = this._onCodeEditorAdd.event;\n\n\tprivate readonly _onCodeEditorRemove: Emitter<ICodeEditor> = this._register(new Emitter<ICodeEditor>());\n\tpublic readonly onCodeEditorRemove: Event<ICodeEditor> = this._onCodeEditorRemove.event;\n\n\tprivate readonly _onDiffEditorAdd: Emitter<IDiffEditor> = this._register(new Emitter<IDiffEditor>());\n\tpublic readonly onDiffEditorAdd: Event<IDiffEditor> = this._onDiffEditorAdd.event;\n\n\tprivate readonly _onDiffEditorRemove: Emitter<IDiffEditor> = this._register(new Emitter<IDiffEditor>());\n\tpublic readonly onDiffEditorRemove: Event<IDiffEditor> = this._onDiffEditorRemove.event;\n\n\tprivate readonly _onDidChangeTransientModelProperty: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onDidChangeTransientModelProperty: Event<ITextModel> = this._onDidChangeTransientModelProperty.event;\n\n\tprotected readonly _onDecorationTypeRegistered: Emitter<string> = this._register(new Emitter<string>());\n\tpublic onDecorationTypeRegistered: Event<string> = this._onDecorationTypeRegistered.event;\n\n\tprivate readonly _codeEditors: { [editorId: string]: ICodeEditor; };\n\tprivate readonly _diffEditors: { [editorId: string]: IDiffEditor; };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._codeEditors = Object.create(null);\n\t\tthis._diffEditors = Object.create(null);\n\t}\n\n\taddCodeEditor(editor: ICodeEditor): void {\n\t\tthis._codeEditors[editor.getId()] = editor;\n\t\tthis._onCodeEditorAdd.fire(editor);\n\t}\n\n\tremoveCodeEditor(editor: ICodeEditor): void {\n\t\tif (delete this._codeEditors[editor.getId()]) {\n\t\t\tthis._onCodeEditorRemove.fire(editor);\n\t\t}\n\t}\n\n\tlistCodeEditors(): ICodeEditor[] {\n\t\treturn Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n\t}\n\n\taddDiffEditor(editor: IDiffEditor): void {\n\t\tthis._diffEditors[editor.getId()] = editor;\n\t\tthis._onDiffEditorAdd.fire(editor);\n\t}\n\n\tremoveDiffEditor(editor: IDiffEditor): void {\n\t\tif (delete this._diffEditors[editor.getId()]) {\n\t\t\tthis._onDiffEditorRemove.fire(editor);\n\t\t}\n\t}\n\n\tlistDiffEditors(): IDiffEditor[] {\n\t\treturn Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n\t}\n\n\tgetFocusedCodeEditor(): ICodeEditor | null {\n\t\tlet editorWithWidgetFocus: ICodeEditor | null = null;\n\n\t\tconst editors = this.listCodeEditors();\n\t\tfor (const editor of editors) {\n\n\t\t\tif (editor.hasTextFocus()) {\n\t\t\t\t// bingo!\n\t\t\t\treturn editor;\n\t\t\t}\n\n\t\t\tif (editor.hasWidgetFocus()) {\n\t\t\t\teditorWithWidgetFocus = editor;\n\t\t\t}\n\t\t}\n\n\t\treturn editorWithWidgetFocus;\n\t}\n\n\tabstract registerDecorationType(key: string, options: IDecorationRenderOptions, parentTypeKey?: string, editor?: ICodeEditor): void;\n\tabstract removeDecorationType(key: string): void;\n\tabstract resolveDecorationOptions(decorationTypeKey: string | undefined, writable: boolean): IModelDecorationOptions;\n\tabstract resolveDecorationCSSRules(decorationTypeKey: string): CSSRuleList | null;\n\n\tprivate readonly _transientWatchers: { [uri: string]: ModelTransientSettingWatcher; } = {};\n\tprivate readonly _modelProperties = new Map<string, Map<string, any>>();\n\n\tpublic setModelProperty(resource: URI, key: string, value: any): void {\n\t\tconst key1 = resource.toString();\n\t\tlet dest: Map<string, any>;\n\t\tif (this._modelProperties.has(key1)) {\n\t\t\tdest = this._modelProperties.get(key1)!;\n\t\t} else {\n\t\t\tdest = new Map<string, any>();\n\t\t\tthis._modelProperties.set(key1, dest);\n\t\t}\n\n\t\tdest.set(key, value);\n\t}\n\n\tpublic getModelProperty(resource: URI, key: string): any {\n\t\tconst key1 = resource.toString();\n\t\tif (this._modelProperties.has(key1)) {\n\t\t\tconst innerMap = this._modelProperties.get(key1)!;\n\t\t\treturn innerMap.get(key);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic setTransientModelProperty(model: ITextModel, key: string, value: any): void {\n\t\tconst uri = model.uri.toString();\n\n\t\tlet w: ModelTransientSettingWatcher;\n\t\tif (this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\tw = this._transientWatchers[uri];\n\t\t} else {\n\t\t\tw = new ModelTransientSettingWatcher(uri, model, this);\n\t\t\tthis._transientWatchers[uri] = w;\n\t\t}\n\n\t\tw.set(key, value);\n\t\tthis._onDidChangeTransientModelProperty.fire(model);\n\t}\n\n\tpublic getTransientModelProperty(model: ITextModel, key: string): any {\n\t\tconst uri = model.uri.toString();\n\n\t\tif (!this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._transientWatchers[uri].get(key);\n\t}\n\n\tpublic getTransientModelProperties(model: ITextModel): [string, any][] | undefined {\n\t\tconst uri = model.uri.toString();\n\n\t\tif (!this._transientWatchers.hasOwnProperty(uri)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._transientWatchers[uri].keys().map(key => [key, this._transientWatchers[uri].get(key)]);\n\t}\n\n\t_removeWatcher(w: ModelTransientSettingWatcher): void {\n\t\tdelete this._transientWatchers[w.uri];\n\t}\n\n\tabstract getActiveCodeEditor(): ICodeEditor | null;\n\tabstract openCodeEditor(input: IResourceEditorInput, source: ICodeEditor | null, sideBySide?: boolean): Promise<ICodeEditor | null>;\n}\n\nexport class ModelTransientSettingWatcher {\n\tpublic readonly uri: string;\n\tprivate readonly _values: { [key: string]: any; };\n\n\tconstructor(uri: string, model: ITextModel, owner: AbstractCodeEditorService) {\n\t\tthis.uri = uri;\n\t\tthis._values = {};\n\t\tmodel.onWillDispose(() => owner._removeWatcher(this));\n\t}\n\n\tpublic set(key: string, value: any): void {\n\t\tthis._values[key] = value;\n\t}\n\n\tpublic get(key: string): any {\n\t\treturn this._values[key];\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn Object.keys(this._values);\n\t}\n}\n"]}