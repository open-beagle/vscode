{"version":3,"file":"bulkEditService.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/services/bulkEditService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYnF,QAAA,gBAAgB,GAAG,CAAA,GAAA,+BAAe,CAAA,CAAmB,uBAAuB,CAAC,CAAC;IAE3F,SAAS,mBAAmB,CAAC,KAAU;QACtC,OAAO,CAAA,GAAA,gBAAQ,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAqB,KAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAqB,KAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,SAAS,mBAAmB,CAAC,KAAU;QACtC,OAAO,CAAA,GAAA,gBAAQ,CAAA,CAAC,KAAK,CAAC,IAAI,SAAG,CAAC,KAAK,CAAqB,KAAM,CAAC,QAAQ,CAAC,IAAI,CAAA,GAAA,gBAAQ,CAAA,CAAqB,KAAM,CAAC,IAAI,CAAC,CAAC;IACvH,CAAC;IAED,MAAa,YAAY;QAExB,YAA+B,QAAgC;YAAhC,aAAQ,GAAR,QAAQ,CAAwB;QAAI,CAAC;QAEpE,MAAM,CAAC,OAAO,CAAC,IAAmB;YAGjC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;oBAC9B,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC1F;gBACD,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;oBAC9B,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnF;gBACD,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;IAjBD,oCAiBC;IAED,MAAa,gBAAiB,SAAQ,YAAY;QACjD,YACU,QAAa,EACb,QAAkB,EAClB,SAAkB,EAC3B,QAAgC;YAEhC,KAAK,CAAC,QAAQ,CAAC,CAAC;YALP,aAAQ,GAAR,QAAQ,CAAK;YACb,aAAQ,GAAR,QAAQ,CAAU;YAClB,cAAS,GAAT,SAAS,CAAS;QAI5B,CAAC;KACD;IATD,4CASC;IAED,MAAa,gBAAiB,SAAQ,YAAY;QACjD,YACU,WAA4B,EAC5B,WAA4B,EAC5B,OAAkC,EAC3C,QAAgC;YAEhC,KAAK,CAAC,QAAQ,CAAC,CAAC;YALP,gBAAW,GAAX,WAAW,CAAiB;YAC5B,gBAAW,GAAX,WAAW,CAAiB;YAC5B,YAAO,GAAP,OAAO,CAA2B;QAI5C,CAAC;KACD;IATD,4CASC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { TextEdit, WorkspaceEdit, WorkspaceEditMetadata, WorkspaceFileEdit, WorkspaceFileEditOptions, WorkspaceTextEdit } from 'vs/editor/common/modes';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProgress, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { isObject } from 'vs/base/common/types';\nimport { UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IBulkEditService = createDecorator<IBulkEditService>('IWorkspaceEditService');\n\nfunction isWorkspaceFileEdit(thing: any): thing is WorkspaceFileEdit {\n\treturn isObject(thing) && (Boolean((<WorkspaceFileEdit>thing).newUri) || Boolean((<WorkspaceFileEdit>thing).oldUri));\n}\n\nfunction isWorkspaceTextEdit(thing: any): thing is WorkspaceTextEdit {\n\treturn isObject(thing) && URI.isUri((<WorkspaceTextEdit>thing).resource) && isObject((<WorkspaceTextEdit>thing).edit);\n}\n\nexport class ResourceEdit {\n\n\tprotected constructor(readonly metadata?: WorkspaceEditMetadata) { }\n\n\tstatic convert(edit: WorkspaceEdit): ResourceEdit[] {\n\n\n\t\treturn edit.edits.map(edit => {\n\t\t\tif (isWorkspaceTextEdit(edit)) {\n\t\t\t\treturn new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\n\t\t\t}\n\t\t\tif (isWorkspaceFileEdit(edit)) {\n\t\t\t\treturn new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\n\t\t\t}\n\t\t\tthrow new Error('Unsupported edit');\n\t\t});\n\t}\n}\n\nexport class ResourceTextEdit extends ResourceEdit {\n\tconstructor(\n\t\treadonly resource: URI,\n\t\treadonly textEdit: TextEdit,\n\t\treadonly versionId?: number,\n\t\tmetadata?: WorkspaceEditMetadata\n\t) {\n\t\tsuper(metadata);\n\t}\n}\n\nexport class ResourceFileEdit extends ResourceEdit {\n\tconstructor(\n\t\treadonly oldResource: URI | undefined,\n\t\treadonly newResource: URI | undefined,\n\t\treadonly options?: WorkspaceFileEditOptions,\n\t\tmetadata?: WorkspaceEditMetadata\n\t) {\n\t\tsuper(metadata);\n\t}\n}\n\nexport interface IBulkEditOptions {\n\teditor?: ICodeEditor;\n\tprogress?: IProgress<IProgressStep>;\n\ttoken?: CancellationToken;\n\tshowPreview?: boolean;\n\tlabel?: string;\n\tquotableLabel?: string;\n\tundoRedoSource?: UndoRedoSource;\n\tundoRedoGroupId?: number;\n\tconfirmBeforeUndo?: boolean;\n}\n\nexport interface IBulkEditResult {\n\tariaSummary: string;\n}\n\nexport type IBulkEditPreviewHandler = (edits: ResourceEdit[], options?: IBulkEditOptions) => Promise<ResourceEdit[]>;\n\nexport interface IBulkEditService {\n\treadonly _serviceBrand: undefined;\n\n\thasPreviewHandler(): boolean;\n\n\tsetPreviewHandler(handler: IBulkEditPreviewHandler): IDisposable;\n\n\tapply(edit: ResourceEdit[], options?: IBulkEditOptions): Promise<IBulkEditResult>;\n}\n"]}