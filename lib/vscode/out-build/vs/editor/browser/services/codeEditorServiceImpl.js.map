{"version":3,"file":"codeEditorServiceImpl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/services/codeEditorServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { AbstractCodeEditorService } from 'vs/editor/browser/services/abstractCodeEditorService';\nimport { IContentDecorationRenderOptions, IDecorationRenderOptions, IThemeDecorationRenderOptions, isThemeColor } from 'vs/editor/common/editorCommon';\nimport { IModelDecorationOptions, IModelDecorationOverviewRulerOptions, OverviewRulerLane, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { IColorTheme, IThemeService, ThemeColor } from 'vs/platform/theme/common/themeService';\n\nexport class RefCountedStyleSheet {\n\n\tprivate readonly _parent: CodeEditorServiceImpl;\n\tprivate readonly _editorId: string;\n\tprivate readonly _styleSheet: HTMLStyleElement;\n\tprivate _refCount: number;\n\n\tpublic get sheet() {\n\t\treturn this._styleSheet.sheet as CSSStyleSheet;\n\t}\n\n\tconstructor(parent: CodeEditorServiceImpl, editorId: string, styleSheet: HTMLStyleElement) {\n\t\tthis._parent = parent;\n\t\tthis._editorId = editorId;\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._refCount = 0;\n\t}\n\n\tpublic ref(): void {\n\t\tthis._refCount++;\n\t}\n\n\tpublic unref(): void {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._styleSheet.parentNode?.removeChild(this._styleSheet);\n\t\t\tthis._parent._removeEditorStyleSheets(this._editorId);\n\t\t}\n\t}\n\n\tpublic insertRule(rule: string, index?: number): void {\n\t\tconst sheet = <CSSStyleSheet>this._styleSheet.sheet;\n\t\tsheet.insertRule(rule, index);\n\t}\n\n\tpublic removeRulesContainingSelector(ruleName: string): void {\n\t\tdom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n\t}\n}\n\nexport class GlobalStyleSheet {\n\tprivate readonly _styleSheet: HTMLStyleElement;\n\n\tpublic get sheet() {\n\t\treturn this._styleSheet.sheet as CSSStyleSheet;\n\t}\n\n\tconstructor(styleSheet: HTMLStyleElement) {\n\t\tthis._styleSheet = styleSheet;\n\t}\n\n\tpublic ref(): void {\n\t}\n\n\tpublic unref(): void {\n\t}\n\n\tpublic insertRule(rule: string, index?: number): void {\n\t\tconst sheet = <CSSStyleSheet>this._styleSheet.sheet;\n\t\tsheet.insertRule(rule, index);\n\t}\n\n\tpublic removeRulesContainingSelector(ruleName: string): void {\n\t\tdom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n\t}\n}\n\nexport abstract class CodeEditorServiceImpl extends AbstractCodeEditorService {\n\n\tprivate _globalStyleSheet: GlobalStyleSheet | null;\n\tprivate readonly _decorationOptionProviders = new Map<string, IModelDecorationOptionsProvider>();\n\tprivate readonly _editorStyleSheets = new Map<string, RefCountedStyleSheet>();\n\tprivate readonly _themeService: IThemeService;\n\n\tconstructor(\n\t\tstyleSheet: GlobalStyleSheet | null,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._globalStyleSheet = styleSheet ? styleSheet : null;\n\t\tthis._themeService = themeService;\n\t}\n\n\tprivate _getOrCreateGlobalStyleSheet(): GlobalStyleSheet {\n\t\tif (!this._globalStyleSheet) {\n\t\t\tthis._globalStyleSheet = new GlobalStyleSheet(dom.createStyleSheet());\n\t\t}\n\t\treturn this._globalStyleSheet;\n\t}\n\n\tprivate _getOrCreateStyleSheet(editor: ICodeEditor | undefined): GlobalStyleSheet | RefCountedStyleSheet {\n\t\tif (!editor) {\n\t\t\treturn this._getOrCreateGlobalStyleSheet();\n\t\t}\n\t\tconst domNode = editor.getContainerDomNode();\n\t\tif (!dom.isInShadowDOM(domNode)) {\n\t\t\treturn this._getOrCreateGlobalStyleSheet();\n\t\t}\n\t\tconst editorId = editor.getId();\n\t\tif (!this._editorStyleSheets.has(editorId)) {\n\t\t\tconst refCountedStyleSheet = new RefCountedStyleSheet(this, editorId, dom.createStyleSheet(domNode));\n\t\t\tthis._editorStyleSheets.set(editorId, refCountedStyleSheet);\n\t\t}\n\t\treturn this._editorStyleSheets.get(editorId)!;\n\t}\n\n\t_removeEditorStyleSheets(editorId: string): void {\n\t\tthis._editorStyleSheets.delete(editorId);\n\t}\n\n\tpublic registerDecorationType(key: string, options: IDecorationRenderOptions, parentTypeKey?: string, editor?: ICodeEditor): void {\n\t\tlet provider = this._decorationOptionProviders.get(key);\n\t\tif (!provider) {\n\t\t\tconst styleSheet = this._getOrCreateStyleSheet(editor);\n\t\t\tconst providerArgs: ProviderArguments = {\n\t\t\t\tstyleSheet: styleSheet,\n\t\t\t\tkey: key,\n\t\t\t\tparentTypeKey: parentTypeKey,\n\t\t\t\toptions: options || Object.create(null)\n\t\t\t};\n\t\t\tif (!parentTypeKey) {\n\t\t\t\tprovider = new DecorationTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\n\t\t\t} else {\n\t\t\t\tprovider = new DecorationSubTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\n\t\t\t}\n\t\t\tthis._decorationOptionProviders.set(key, provider);\n\t\t\tthis._onDecorationTypeRegistered.fire(key);\n\t\t}\n\t\tprovider.refCount++;\n\t}\n\n\tpublic removeDecorationType(key: string): void {\n\t\tconst provider = this._decorationOptionProviders.get(key);\n\t\tif (provider) {\n\t\t\tprovider.refCount--;\n\t\t\tif (provider.refCount <= 0) {\n\t\t\t\tthis._decorationOptionProviders.delete(key);\n\t\t\t\tprovider.dispose();\n\t\t\t\tthis.listCodeEditors().forEach((ed) => ed.removeDecorations(key));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolveDecorationOptions(decorationTypeKey: string, writable: boolean): IModelDecorationOptions {\n\t\tconst provider = this._decorationOptionProviders.get(decorationTypeKey);\n\t\tif (!provider) {\n\t\t\tthrow new Error('Unknown decoration type key: ' + decorationTypeKey);\n\t\t}\n\t\treturn provider.getOptions(this, writable);\n\t}\n\n\tpublic resolveDecorationCSSRules(decorationTypeKey: string) {\n\t\tconst provider = this._decorationOptionProviders.get(decorationTypeKey);\n\t\tif (!provider) {\n\t\t\treturn null;\n\t\t}\n\t\treturn provider.resolveDecorationCSSRules();\n\t}\n}\n\ninterface IModelDecorationOptionsProvider extends IDisposable {\n\trefCount: number;\n\tgetOptions(codeEditorService: AbstractCodeEditorService, writable: boolean): IModelDecorationOptions;\n\tresolveDecorationCSSRules(): CSSRuleList;\n}\n\nexport class DecorationSubTypeOptionsProvider implements IModelDecorationOptionsProvider {\n\n\tprivate readonly _styleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tpublic refCount: number;\n\n\tprivate readonly _parentTypeKey: string | undefined;\n\tprivate _beforeContentRules: DecorationCSSRules | null;\n\tprivate _afterContentRules: DecorationCSSRules | null;\n\n\tconstructor(themeService: IThemeService, styleSheet: GlobalStyleSheet | RefCountedStyleSheet, providerArgs: ProviderArguments) {\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._styleSheet.ref();\n\t\tthis._parentTypeKey = providerArgs.parentTypeKey;\n\t\tthis.refCount = 0;\n\n\t\tthis._beforeContentRules = new DecorationCSSRules(ModelDecorationCSSRuleType.BeforeContentClassName, providerArgs, themeService);\n\t\tthis._afterContentRules = new DecorationCSSRules(ModelDecorationCSSRuleType.AfterContentClassName, providerArgs, themeService);\n\t}\n\n\tpublic getOptions(codeEditorService: AbstractCodeEditorService, writable: boolean): IModelDecorationOptions {\n\t\tconst options = codeEditorService.resolveDecorationOptions(this._parentTypeKey, true);\n\t\tif (this._beforeContentRules) {\n\t\t\toptions.beforeContentClassName = this._beforeContentRules.className;\n\t\t}\n\t\tif (this._afterContentRules) {\n\t\t\toptions.afterContentClassName = this._afterContentRules.className;\n\t\t}\n\t\treturn options;\n\t}\n\n\tpublic resolveDecorationCSSRules(): CSSRuleList {\n\t\treturn this._styleSheet.sheet.cssRules;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._beforeContentRules) {\n\t\t\tthis._beforeContentRules.dispose();\n\t\t\tthis._beforeContentRules = null;\n\t\t}\n\t\tif (this._afterContentRules) {\n\t\t\tthis._afterContentRules.dispose();\n\t\t\tthis._afterContentRules = null;\n\t\t}\n\t\tthis._styleSheet.unref();\n\t}\n}\n\ninterface ProviderArguments {\n\tstyleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tkey: string;\n\tparentTypeKey?: string;\n\toptions: IDecorationRenderOptions;\n}\n\n\nexport class DecorationTypeOptionsProvider implements IModelDecorationOptionsProvider {\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _styleSheet: GlobalStyleSheet | RefCountedStyleSheet;\n\tpublic refCount: number;\n\n\tpublic className: string | undefined;\n\tpublic inlineClassName: string | undefined;\n\tpublic inlineClassNameAffectsLetterSpacing: boolean | undefined;\n\tpublic beforeContentClassName: string | undefined;\n\tpublic afterContentClassName: string | undefined;\n\tpublic glyphMarginClassName: string | undefined;\n\tpublic isWholeLine: boolean;\n\tpublic overviewRuler: IModelDecorationOverviewRulerOptions | undefined;\n\tpublic stickiness: TrackedRangeStickiness | undefined;\n\n\tconstructor(themeService: IThemeService, styleSheet: GlobalStyleSheet | RefCountedStyleSheet, providerArgs: ProviderArguments) {\n\t\tthis._styleSheet = styleSheet;\n\t\tthis._styleSheet.ref();\n\t\tthis.refCount = 0;\n\n\t\tconst createCSSRules = (type: ModelDecorationCSSRuleType) => {\n\t\t\tconst rules = new DecorationCSSRules(type, providerArgs, themeService);\n\t\t\tthis._disposables.add(rules);\n\t\t\tif (rules.hasContent) {\n\t\t\t\treturn rules.className;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\tconst createInlineCSSRules = (type: ModelDecorationCSSRuleType) => {\n\t\t\tconst rules = new DecorationCSSRules(type, providerArgs, themeService);\n\t\t\tthis._disposables.add(rules);\n\t\t\tif (rules.hasContent) {\n\t\t\t\treturn { className: rules.className, hasLetterSpacing: rules.hasLetterSpacing };\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tthis.className = createCSSRules(ModelDecorationCSSRuleType.ClassName);\n\t\tconst inlineData = createInlineCSSRules(ModelDecorationCSSRuleType.InlineClassName);\n\t\tif (inlineData) {\n\t\t\tthis.inlineClassName = inlineData.className;\n\t\t\tthis.inlineClassNameAffectsLetterSpacing = inlineData.hasLetterSpacing;\n\t\t}\n\t\tthis.beforeContentClassName = createCSSRules(ModelDecorationCSSRuleType.BeforeContentClassName);\n\t\tthis.afterContentClassName = createCSSRules(ModelDecorationCSSRuleType.AfterContentClassName);\n\t\tthis.glyphMarginClassName = createCSSRules(ModelDecorationCSSRuleType.GlyphMarginClassName);\n\n\t\tconst options = providerArgs.options;\n\t\tthis.isWholeLine = Boolean(options.isWholeLine);\n\t\tthis.stickiness = options.rangeBehavior;\n\n\t\tconst lightOverviewRulerColor = options.light && options.light.overviewRulerColor || options.overviewRulerColor;\n\t\tconst darkOverviewRulerColor = options.dark && options.dark.overviewRulerColor || options.overviewRulerColor;\n\t\tif (\n\t\t\ttypeof lightOverviewRulerColor !== 'undefined'\n\t\t\t|| typeof darkOverviewRulerColor !== 'undefined'\n\t\t) {\n\t\t\tthis.overviewRuler = {\n\t\t\t\tcolor: lightOverviewRulerColor || darkOverviewRulerColor,\n\t\t\t\tdarkColor: darkOverviewRulerColor || lightOverviewRulerColor,\n\t\t\t\tposition: options.overviewRulerLane || OverviewRulerLane.Center\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic getOptions(codeEditorService: AbstractCodeEditorService, writable: boolean): IModelDecorationOptions {\n\t\tif (!writable) {\n\t\t\treturn this;\n\t\t}\n\t\treturn {\n\t\t\tinlineClassName: this.inlineClassName,\n\t\t\tbeforeContentClassName: this.beforeContentClassName,\n\t\t\tafterContentClassName: this.afterContentClassName,\n\t\t\tclassName: this.className,\n\t\t\tglyphMarginClassName: this.glyphMarginClassName,\n\t\t\tisWholeLine: this.isWholeLine,\n\t\t\toverviewRuler: this.overviewRuler,\n\t\t\tstickiness: this.stickiness\n\t\t};\n\t}\n\n\tpublic resolveDecorationCSSRules(): CSSRuleList {\n\t\treturn this._styleSheet.sheet.rules;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._styleSheet.unref();\n\t}\n}\n\n\nexport const _CSS_MAP: { [prop: string]: string; } = {\n\tcolor: 'color:{0} !important;',\n\topacity: 'opacity:{0};',\n\tbackgroundColor: 'background-color:{0};',\n\n\toutline: 'outline:{0};',\n\toutlineColor: 'outline-color:{0};',\n\toutlineStyle: 'outline-style:{0};',\n\toutlineWidth: 'outline-width:{0};',\n\n\tborder: 'border:{0};',\n\tborderColor: 'border-color:{0};',\n\tborderRadius: 'border-radius:{0};',\n\tborderSpacing: 'border-spacing:{0};',\n\tborderStyle: 'border-style:{0};',\n\tborderWidth: 'border-width:{0};',\n\n\tfontStyle: 'font-style:{0};',\n\tfontWeight: 'font-weight:{0};',\n\tfontSize: 'font-size:{0};',\n\tfontFamily: 'font-family:{0};',\n\ttextDecoration: 'text-decoration:{0};',\n\tcursor: 'cursor:{0};',\n\tletterSpacing: 'letter-spacing:{0};',\n\n\tgutterIconPath: 'background:{0} center center no-repeat;',\n\tgutterIconSize: 'background-size:{0};',\n\n\tcontentText: 'content:\\'{0}\\';',\n\tcontentIconPath: 'content:{0};',\n\tmargin: 'margin:{0};',\n\tpadding: 'padding:{0};',\n\twidth: 'width:{0};',\n\theight: 'height:{0};'\n};\n\n\nclass DecorationCSSRules {\n\n\tprivate _theme: IColorTheme;\n\tprivate readonly _className: string;\n\tprivate readonly _unThemedSelector: string;\n\tprivate _hasContent: boolean;\n\tprivate _hasLetterSpacing: boolean;\n\tprivate readonly _ruleType: ModelDecorationCSSRuleType;\n\tprivate _themeListener: IDisposable | null;\n\tprivate readonly _providerArgs: ProviderArguments;\n\tprivate _usesThemeColors: boolean;\n\n\tconstructor(ruleType: ModelDecorationCSSRuleType, providerArgs: ProviderArguments, themeService: IThemeService) {\n\t\tthis._theme = themeService.getColorTheme();\n\t\tthis._ruleType = ruleType;\n\t\tthis._providerArgs = providerArgs;\n\t\tthis._usesThemeColors = false;\n\t\tthis._hasContent = false;\n\t\tthis._hasLetterSpacing = false;\n\n\t\tlet className = CSSNameHelper.getClassName(this._providerArgs.key, ruleType);\n\t\tif (this._providerArgs.parentTypeKey) {\n\t\t\tclassName = className + ' ' + CSSNameHelper.getClassName(this._providerArgs.parentTypeKey, ruleType);\n\t\t}\n\t\tthis._className = className;\n\n\t\tthis._unThemedSelector = CSSNameHelper.getSelector(this._providerArgs.key, this._providerArgs.parentTypeKey, ruleType);\n\n\t\tthis._buildCSS();\n\n\t\tif (this._usesThemeColors) {\n\t\t\tthis._themeListener = themeService.onDidColorThemeChange(theme => {\n\t\t\t\tthis._theme = themeService.getColorTheme();\n\t\t\t\tthis._removeCSS();\n\t\t\t\tthis._buildCSS();\n\t\t\t});\n\t\t} else {\n\t\t\tthis._themeListener = null;\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tif (this._hasContent) {\n\t\t\tthis._removeCSS();\n\t\t\tthis._hasContent = false;\n\t\t}\n\t\tif (this._themeListener) {\n\t\t\tthis._themeListener.dispose();\n\t\t\tthis._themeListener = null;\n\t\t}\n\t}\n\n\tpublic get hasContent(): boolean {\n\t\treturn this._hasContent;\n\t}\n\n\tpublic get hasLetterSpacing(): boolean {\n\t\treturn this._hasLetterSpacing;\n\t}\n\n\tpublic get className(): string {\n\t\treturn this._className;\n\t}\n\n\tprivate _buildCSS(): void {\n\t\tconst options = this._providerArgs.options;\n\t\tlet unthemedCSS: string, lightCSS: string, darkCSS: string;\n\t\tswitch (this._ruleType) {\n\t\t\tcase ModelDecorationCSSRuleType.ClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationClassName(options);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationClassName(options.light);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationClassName(options.dark);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.InlineClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationInlineClassName(options);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationInlineClassName(options.light);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationInlineClassName(options.dark);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.GlyphMarginClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.light);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.dark);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.BeforeContentClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.before);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.before);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.before);\n\t\t\t\tbreak;\n\t\t\tcase ModelDecorationCSSRuleType.AfterContentClassName:\n\t\t\t\tunthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.after);\n\t\t\t\tlightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.after);\n\t\t\t\tdarkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.after);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown rule type: ' + this._ruleType);\n\t\t}\n\t\tconst sheet = this._providerArgs.styleSheet;\n\n\t\tlet hasContent = false;\n\t\tif (unthemedCSS.length > 0) {\n\t\t\tsheet.insertRule(`${this._unThemedSelector} {${unthemedCSS}}`, 0);\n\t\t\thasContent = true;\n\t\t}\n\t\tif (lightCSS.length > 0) {\n\t\t\tsheet.insertRule(`.vs${this._unThemedSelector} {${lightCSS}}`, 0);\n\t\t\thasContent = true;\n\t\t}\n\t\tif (darkCSS.length > 0) {\n\t\t\tsheet.insertRule(`.vs-dark${this._unThemedSelector}, .hc-black${this._unThemedSelector} {${darkCSS}}`, 0);\n\t\t\thasContent = true;\n\t\t}\n\t\tthis._hasContent = hasContent;\n\t}\n\n\tprivate _removeCSS(): void {\n\t\tthis._providerArgs.styleSheet.removeRulesContainingSelector(this._unThemedSelector);\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `className`.\n\t */\n\tprivate getCSSTextForModelDecorationClassName(opts: IThemeDecorationRenderOptions | undefined): string {\n\t\tif (!opts) {\n\t\t\treturn '';\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\t\tthis.collectCSSText(opts, ['backgroundColor'], cssTextArr);\n\t\tthis.collectCSSText(opts, ['outline', 'outlineColor', 'outlineStyle', 'outlineWidth'], cssTextArr);\n\t\tthis.collectBorderSettingsCSSText(opts, cssTextArr);\n\t\treturn cssTextArr.join('');\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `inlineClassName`.\n\t */\n\tprivate getCSSTextForModelDecorationInlineClassName(opts: IThemeDecorationRenderOptions | undefined): string {\n\t\tif (!opts) {\n\t\t\treturn '';\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\t\tthis.collectCSSText(opts, ['fontStyle', 'fontWeight', 'textDecoration', 'cursor', 'color', 'opacity', 'letterSpacing'], cssTextArr);\n\t\tif (opts.letterSpacing) {\n\t\t\tthis._hasLetterSpacing = true;\n\t\t}\n\t\treturn cssTextArr.join('');\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled before or after content.\n\t */\n\tprivate getCSSTextForModelDecorationContentClassName(opts: IContentDecorationRenderOptions | undefined): string {\n\t\tif (!opts) {\n\t\t\treturn '';\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\n\t\tif (typeof opts !== 'undefined') {\n\t\t\tthis.collectBorderSettingsCSSText(opts, cssTextArr);\n\t\t\tif (typeof opts.contentIconPath !== 'undefined') {\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP.contentIconPath, dom.asCSSUrl(URI.revive(opts.contentIconPath))));\n\t\t\t}\n\t\t\tif (typeof opts.contentText === 'string') {\n\t\t\t\tconst truncated = opts.contentText.match(/^.*$/m)![0]; // only take first line\n\t\t\t\tconst escaped = truncated.replace(/['\\\\]/g, '\\\\$&');\n\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP.contentText, escaped));\n\t\t\t}\n\t\t\tthis.collectCSSText(opts, ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'textDecoration', 'color', 'opacity', 'backgroundColor', 'margin', 'padding'], cssTextArr);\n\t\t\tif (this.collectCSSText(opts, ['width', 'height'], cssTextArr)) {\n\t\t\t\tcssTextArr.push('display:inline-block;');\n\t\t\t}\n\t\t}\n\n\t\treturn cssTextArr.join('');\n\t}\n\n\t/**\n\t * Build the CSS for decorations styled via `glpyhMarginClassName`.\n\t */\n\tprivate getCSSTextForModelDecorationGlyphMarginClassName(opts: IThemeDecorationRenderOptions | undefined): string {\n\t\tif (!opts) {\n\t\t\treturn '';\n\t\t}\n\t\tconst cssTextArr: string[] = [];\n\n\t\tif (typeof opts.gutterIconPath !== 'undefined') {\n\t\t\tcssTextArr.push(strings.format(_CSS_MAP.gutterIconPath, dom.asCSSUrl(URI.revive(opts.gutterIconPath))));\n\t\t\tif (typeof opts.gutterIconSize !== 'undefined') {\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP.gutterIconSize, opts.gutterIconSize));\n\t\t\t}\n\t\t}\n\n\t\treturn cssTextArr.join('');\n\t}\n\n\tprivate collectBorderSettingsCSSText(opts: any, cssTextArr: string[]): boolean {\n\t\tif (this.collectCSSText(opts, ['border', 'borderColor', 'borderRadius', 'borderSpacing', 'borderStyle', 'borderWidth'], cssTextArr)) {\n\t\t\tcssTextArr.push(strings.format('box-sizing: border-box;'));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate collectCSSText(opts: any, properties: string[], cssTextArr: string[]): boolean {\n\t\tconst lenBefore = cssTextArr.length;\n\t\tfor (let property of properties) {\n\t\t\tconst value = this.resolveValue(opts[property]);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tcssTextArr.push(strings.format(_CSS_MAP[property], value));\n\t\t\t}\n\t\t}\n\t\treturn cssTextArr.length !== lenBefore;\n\t}\n\n\tprivate resolveValue(value: string | ThemeColor): string {\n\t\tif (isThemeColor(value)) {\n\t\t\tthis._usesThemeColors = true;\n\t\t\tconst color = this._theme.getColor(value.id);\n\t\t\tif (color) {\n\t\t\t\treturn color.toString();\n\t\t\t}\n\t\t\treturn 'transparent';\n\t\t}\n\t\treturn value;\n\t}\n}\n\nconst enum ModelDecorationCSSRuleType {\n\tClassName = 0,\n\tInlineClassName = 1,\n\tGlyphMarginClassName = 2,\n\tBeforeContentClassName = 3,\n\tAfterContentClassName = 4\n}\n\nclass CSSNameHelper {\n\n\tpublic static getClassName(key: string, type: ModelDecorationCSSRuleType): string {\n\t\treturn 'ced-' + key + '-' + type;\n\t}\n\n\tpublic static getSelector(key: string, parentKey: string | undefined, ruleType: ModelDecorationCSSRuleType): string {\n\t\tlet selector = '.monaco-editor .' + this.getClassName(key, ruleType);\n\t\tif (parentKey) {\n\t\t\tselector = selector + '.' + this.getClassName(parentKey, ruleType);\n\t\t}\n\t\tif (ruleType === ModelDecorationCSSRuleType.BeforeContentClassName) {\n\t\t\tselector += '::before';\n\t\t} else if (ruleType === ModelDecorationCSSRuleType.AfterContentClassName) {\n\t\t\tselector += '::after';\n\t\t}\n\t\treturn selector;\n\t}\n}\n"]}