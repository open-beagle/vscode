{"version":3,"sources":["vs/editor/browser/editorExtensions.ts"],"names":[],"mappings":"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","file":"editorExtensions.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor, IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IEditorContribution, IDiffEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { MenuId, MenuRegistry, Action2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, IContextKeyService, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { IConstructorSignature1, ServicesAccessor as InstantiationServicesAccessor, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindings, KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { withNullAsUndefined, assertType } from 'vs/base/common/types';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n\nexport type ServicesAccessor = InstantiationServicesAccessor;\nexport type IEditorContributionCtor = IConstructorSignature1<ICodeEditor, IEditorContribution>;\nexport type IDiffEditorContributionCtor = IConstructorSignature1<IDiffEditor, IDiffEditorContribution>;\n\nexport interface IEditorContributionDescription {\n\tid: string;\n\tctor: IEditorContributionCtor;\n}\n\nexport interface IDiffEditorContributionDescription {\n\tid: string;\n\tctor: IDiffEditorContributionCtor;\n}\n\n//#region Command\n\nexport interface ICommandKeybindingsOptions extends IKeybindings {\n\tkbExpr?: ContextKeyExpression | null;\n\tweight: number;\n\t/**\n\t * the default keybinding arguments\n\t */\n\targs?: any;\n}\nexport interface ICommandMenuOptions {\n\tmenuId: MenuId;\n\tgroup: string;\n\torder: number;\n\twhen?: ContextKeyExpression;\n\ttitle: string;\n\ticon?: ThemeIcon\n}\nexport interface ICommandOptions {\n\tid: string;\n\tprecondition: ContextKeyExpression | undefined;\n\tkbOpts?: ICommandKeybindingsOptions;\n\tdescription?: ICommandHandlerDescription;\n\tmenuOpts?: ICommandMenuOptions | ICommandMenuOptions[];\n}\nexport abstract class Command {\n\tpublic readonly id: string;\n\tpublic readonly precondition: ContextKeyExpression | undefined;\n\tprivate readonly _kbOpts: ICommandKeybindingsOptions | undefined;\n\tprivate readonly _menuOpts: ICommandMenuOptions | ICommandMenuOptions[] | undefined;\n\tprivate readonly _description: ICommandHandlerDescription | undefined;\n\n\tconstructor(opts: ICommandOptions) {\n\t\tthis.id = opts.id;\n\t\tthis.precondition = opts.precondition;\n\t\tthis._kbOpts = opts.kbOpts;\n\t\tthis._menuOpts = opts.menuOpts;\n\t\tthis._description = opts.description;\n\t}\n\n\tpublic register(): void {\n\n\t\tif (Array.isArray(this._menuOpts)) {\n\t\t\tthis._menuOpts.forEach(this._registerMenuItem, this);\n\t\t} else if (this._menuOpts) {\n\t\t\tthis._registerMenuItem(this._menuOpts);\n\t\t}\n\n\t\tif (this._kbOpts) {\n\t\t\tlet kbWhen = this._kbOpts.kbExpr;\n\t\t\tif (this.precondition) {\n\t\t\t\tif (kbWhen) {\n\t\t\t\t\tkbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n\t\t\t\t} else {\n\t\t\t\t\tkbWhen = this.precondition;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\t\tid: this.id,\n\t\t\t\thandler: (accessor, args) => this.runCommand(accessor, args),\n\t\t\t\tweight: this._kbOpts.weight,\n\t\t\t\targs: this._kbOpts.args,\n\t\t\t\twhen: kbWhen,\n\t\t\t\tprimary: this._kbOpts.primary,\n\t\t\t\tsecondary: this._kbOpts.secondary,\n\t\t\t\twin: this._kbOpts.win,\n\t\t\t\tlinux: this._kbOpts.linux,\n\t\t\t\tmac: this._kbOpts.mac,\n\t\t\t\tdescription: this._description\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tCommandsRegistry.registerCommand({\n\t\t\t\tid: this.id,\n\t\t\t\thandler: (accessor, args) => this.runCommand(accessor, args),\n\t\t\t\tdescription: this._description\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _registerMenuItem(item: ICommandMenuOptions): void {\n\t\tMenuRegistry.appendMenuItem(item.menuId, {\n\t\t\tgroup: item.group,\n\t\t\tcommand: {\n\t\t\t\tid: this.id,\n\t\t\t\ttitle: item.title,\n\t\t\t\ticon: item.icon,\n\t\t\t\tprecondition: this.precondition\n\t\t\t},\n\t\t\twhen: item.when,\n\t\t\torder: item.order\n\t\t});\n\t}\n\n\tpublic abstract runCommand(accessor: ServicesAccessor, args: any): void | Promise<void>;\n}\n\n//#endregion Command\n\n//#region MultiplexingCommand\n\n/**\n * Potential override for a command.\n *\n * @return `true` if the command was successfully run. This stops other overrides from being executed.\n */\nexport type CommandImplementation = (accessor: ServicesAccessor, args: unknown) => boolean | Promise<void>;\n\ninterface ICommandImplementationRegistration {\n\tpriority: number;\n\tname: string;\n\timplementation: CommandImplementation;\n}\n\nexport class MultiCommand extends Command {\n\n\tprivate readonly _implementations: ICommandImplementationRegistration[] = [];\n\n\t/**\n\t * A higher priority gets to be looked at first\n\t */\n\tpublic addImplementation(priority: number, name: string, implementation: CommandImplementation): IDisposable {\n\t\tthis._implementations.push({ priority, name, implementation });\n\t\tthis._implementations.sort((a, b) => b.priority - a.priority);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0; i < this._implementations.length; i++) {\n\t\t\t\t\tif (this._implementations[i].implementation === implementation) {\n\t\t\t\t\t\tthis._implementations.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic runCommand(accessor: ServicesAccessor, args: any): void | Promise<void> {\n\t\tconst logService = accessor.get(ILogService);\n\t\tfor (const impl of this._implementations) {\n\t\t\tconst result = impl.implementation(accessor, args);\n\t\t\tif (result) {\n\t\t\t\tlogService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n\t\t\t\tif (typeof result === 'boolean') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//#endregion\n\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n\tconstructor(\n\t\tprivate readonly command: Command,\n\t\topts: ICommandOptions\n\t) {\n\t\tsuper(opts);\n\t}\n\n\tpublic runCommand(accessor: ServicesAccessor, args: any): void | Promise<void> {\n\t\treturn this.command.runCommand(accessor, args);\n\t}\n}\n\n//#region EditorCommand\n\nexport interface IContributionCommandOptions<T> extends ICommandOptions {\n\thandler: (controller: T, args: any) => void;\n}\nexport interface EditorControllerCommand<T extends IEditorContribution> {\n\tnew(opts: IContributionCommandOptions<T>): EditorCommand;\n}\nexport abstract class EditorCommand extends Command {\n\n\t/**\n\t * Create a command class that is bound to a certain editor contribution.\n\t */\n\tpublic static bindToContribution<T extends IEditorContribution>(controllerGetter: (editor: ICodeEditor) => T): EditorControllerCommand<T> {\n\t\treturn class EditorControllerCommandImpl extends EditorCommand {\n\t\t\tprivate readonly _callback: (controller: T, args: any) => void;\n\n\t\t\tconstructor(opts: IContributionCommandOptions<T>) {\n\t\t\t\tsuper(opts);\n\n\t\t\t\tthis._callback = opts.handler;\n\t\t\t}\n\n\t\t\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\t\t\tconst controller = controllerGetter(editor);\n\t\t\t\tif (controller) {\n\t\t\t\t\tthis._callback(controllerGetter(editor), args);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic runCommand(accessor: ServicesAccessor, args: any): void | Promise<void> {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\n\t\t// Find the editor with text focus or active\n\t\tconst editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\t\tif (!editor) {\n\t\t\t// well, at least we tried...\n\t\t\treturn;\n\t\t}\n\n\t\treturn editor.invokeWithinContext((editorAccessor) => {\n\t\t\tconst kbService = editorAccessor.get(IContextKeyService);\n\t\t\tif (!kbService.contextMatchesRules(withNullAsUndefined(this.precondition))) {\n\t\t\t\t// precondition does not hold\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.runEditorCommand(editorAccessor, editor!, args);\n\t\t});\n\t}\n\n\tpublic abstract runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): void | Promise<void>;\n}\n\n//#endregion EditorCommand\n\n//#region EditorAction\n\nexport interface IEditorActionContextMenuOptions {\n\tgroup: string;\n\torder: number;\n\twhen?: ContextKeyExpression;\n\tmenuId?: MenuId;\n}\nexport interface IActionOptions extends ICommandOptions {\n\tlabel: string;\n\talias: string;\n\tcontextMenuOpts?: IEditorActionContextMenuOptions | IEditorActionContextMenuOptions[];\n}\n\nexport abstract class EditorAction extends EditorCommand {\n\n\tprivate static convertOptions(opts: IActionOptions): ICommandOptions {\n\n\t\tlet menuOpts: ICommandMenuOptions[];\n\t\tif (Array.isArray(opts.menuOpts)) {\n\t\t\tmenuOpts = opts.menuOpts;\n\t\t} else if (opts.menuOpts) {\n\t\t\tmenuOpts = [opts.menuOpts];\n\t\t} else {\n\t\t\tmenuOpts = [];\n\t\t}\n\n\t\tfunction withDefaults(item: Partial<ICommandMenuOptions>): ICommandMenuOptions {\n\t\t\tif (!item.menuId) {\n\t\t\t\titem.menuId = MenuId.EditorContext;\n\t\t\t}\n\t\t\tif (!item.title) {\n\t\t\t\titem.title = opts.label;\n\t\t\t}\n\t\t\titem.when = ContextKeyExpr.and(opts.precondition, item.when);\n\t\t\treturn <ICommandMenuOptions>item;\n\t\t}\n\n\t\tif (Array.isArray(opts.contextMenuOpts)) {\n\t\t\tmenuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n\t\t} else if (opts.contextMenuOpts) {\n\t\t\tmenuOpts.push(withDefaults(opts.contextMenuOpts));\n\t\t}\n\n\t\topts.menuOpts = menuOpts;\n\t\treturn <ICommandOptions>opts;\n\t}\n\n\tpublic readonly label: string;\n\tpublic readonly alias: string;\n\n\tconstructor(opts: IActionOptions) {\n\t\tsuper(EditorAction.convertOptions(opts));\n\t\tthis.label = opts.label;\n\t\tthis.alias = opts.alias;\n\t}\n\n\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void | Promise<void> {\n\t\tthis.reportTelemetry(accessor, editor);\n\t\treturn this.run(accessor, editor, args || {});\n\t}\n\n\tprotected reportTelemetry(accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\ttype EditorActionInvokedClassification = {\n\t\t\tname: { classification: 'SystemMetaData', purpose: 'FeatureInsight', };\n\t\t\tid: { classification: 'SystemMetaData', purpose: 'FeatureInsight', };\n\t\t};\n\t\ttype EditorActionInvokedEvent = {\n\t\t\tname: string;\n\t\t\tid: string;\n\t\t};\n\t\taccessor.get(ITelemetryService).publicLog2<EditorActionInvokedEvent, EditorActionInvokedClassification>('editorActionInvoked', { name: this.label, id: this.id });\n\t}\n\n\tpublic abstract run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void | Promise<void>;\n}\n\nexport class MultiEditorAction extends EditorAction {\n\n\tprivate readonly _implementations: [number, CommandImplementation][] = [];\n\n\t/**\n\t * A higher priority gets to be looked at first\n\t */\n\tpublic addImplementation(priority: number, implementation: CommandImplementation): IDisposable {\n\t\tthis._implementations.push([priority, implementation]);\n\t\tthis._implementations.sort((a, b) => b[0] - a[0]);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0; i < this._implementations.length; i++) {\n\t\t\t\t\tif (this._implementations[i][1] === implementation) {\n\t\t\t\t\t\tthis._implementations.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void | Promise<void> {\n\t\tfor (const impl of this._implementations) {\n\t\t\tconst result = impl[1](accessor, args);\n\t\t\tif (result) {\n\t\t\t\tif (typeof result === 'boolean') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n//#endregion EditorAction\n\n//#region EditorAction2\n\nexport abstract class EditorAction2 extends Action2 {\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t// Find the editor with text focus or active\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\t\tif (!editor) {\n\t\t\t// well, at least we tried...\n\t\t\treturn;\n\t\t}\n\t\t// precondition does hold\n\t\treturn editor.invokeWithinContext((editorAccessor) => {\n\t\t\tconst kbService = editorAccessor.get(IContextKeyService);\n\t\t\tif (kbService.contextMatchesRules(withNullAsUndefined(this.desc.precondition))) {\n\t\t\t\treturn this.runEditorCommand(editorAccessor, editor!, args);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): any;\n}\n\n//#endregion\n\n// --- Registration of commands and actions\n\n\nexport function registerModelAndPositionCommand(id: string, handler: (model: ITextModel, position: Position, ...args: any[]) => any) {\n\tCommandsRegistry.registerCommand(id, function (accessor, ...args) {\n\n\t\tconst [resource, position] = args;\n\t\tassertType(URI.isUri(resource));\n\t\tassertType(Position.isIPosition(position));\n\n\t\tconst model = accessor.get(IModelService).getModel(resource);\n\t\tif (model) {\n\t\t\tconst editorPosition = Position.lift(position);\n\t\t\treturn handler(model, editorPosition, ...args.slice(2));\n\t\t}\n\n\t\treturn accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\n\t\t\t\t\tresolve(result);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\treference.dispose();\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function registerModelCommand(id: string, handler: (model: ITextModel, ...args: any[]) => any) {\n\tCommandsRegistry.registerCommand(id, function (accessor, ...args) {\n\n\t\tconst [resource] = args;\n\t\tassertType(URI.isUri(resource));\n\n\t\tconst model = accessor.get(IModelService).getModel(resource);\n\t\tif (model) {\n\t\t\treturn handler(model, ...args.slice(1));\n\t\t}\n\n\t\treturn accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = handler(reference.object.textEditorModel, args.slice(1));\n\t\t\t\t\tresolve(result);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\treference.dispose();\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function registerEditorCommand<T extends EditorCommand>(editorCommand: T): T {\n\tEditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n\treturn editorCommand;\n}\n\nexport function registerEditorAction<T extends EditorAction>(ctor: { new(): T; }): T {\n\tconst action = new ctor();\n\tEditorContributionRegistry.INSTANCE.registerEditorAction(action);\n\treturn action;\n}\n\nexport function registerMultiEditorAction<T extends MultiEditorAction>(action: T): T {\n\tEditorContributionRegistry.INSTANCE.registerEditorAction(action);\n\treturn action;\n}\n\nexport function registerInstantiatedEditorAction(editorAction: EditorAction): void {\n\tEditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n\nexport function registerEditorContribution<Services extends BrandedService[]>(id: string, ctor: { new(editor: ICodeEditor, ...services: Services): IEditorContribution }): void {\n\tEditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\n\nexport function registerDiffEditorContribution<Services extends BrandedService[]>(id: string, ctor: { new(editor: IDiffEditor, ...services: Services): IEditorContribution }): void {\n\tEditorContributionRegistry.INSTANCE.registerDiffEditorContribution(id, ctor);\n}\n\nexport namespace EditorExtensionsRegistry {\n\n\texport function getEditorCommand(commandId: string): EditorCommand {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n\t}\n\n\texport function getEditorActions(): EditorAction[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorActions();\n\t}\n\n\texport function getEditorContributions(): IEditorContributionDescription[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorContributions();\n\t}\n\n\texport function getSomeEditorContributions(ids: string[]): IEditorContributionDescription[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n\t}\n\n\texport function getDiffEditorContributions(): IDiffEditorContributionDescription[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n\t}\n}\n\n// Editor extension points\nconst Extensions = {\n\tEditorCommonContributions: 'editor.contributions'\n};\n\nclass EditorContributionRegistry {\n\n\tpublic static readonly INSTANCE = new EditorContributionRegistry();\n\n\tprivate readonly editorContributions: IEditorContributionDescription[];\n\tprivate readonly diffEditorContributions: IDiffEditorContributionDescription[];\n\tprivate readonly editorActions: EditorAction[];\n\tprivate readonly editorCommands: { [commandId: string]: EditorCommand; };\n\n\tconstructor() {\n\t\tthis.editorContributions = [];\n\t\tthis.diffEditorContributions = [];\n\t\tthis.editorActions = [];\n\t\tthis.editorCommands = Object.create(null);\n\t}\n\n\tpublic registerEditorContribution<Services extends BrandedService[]>(id: string, ctor: { new(editor: ICodeEditor, ...services: Services): IEditorContribution }): void {\n\t\tthis.editorContributions.push({ id, ctor: ctor as IEditorContributionCtor });\n\t}\n\n\tpublic getEditorContributions(): IEditorContributionDescription[] {\n\t\treturn this.editorContributions.slice(0);\n\t}\n\n\tpublic registerDiffEditorContribution<Services extends BrandedService[]>(id: string, ctor: { new(editor: IDiffEditor, ...services: Services): IEditorContribution }): void {\n\t\tthis.diffEditorContributions.push({ id, ctor: ctor as IDiffEditorContributionCtor });\n\t}\n\n\tpublic getDiffEditorContributions(): IDiffEditorContributionDescription[] {\n\t\treturn this.diffEditorContributions.slice(0);\n\t}\n\n\tpublic registerEditorAction(action: EditorAction) {\n\t\taction.register();\n\t\tthis.editorActions.push(action);\n\t}\n\n\tpublic getEditorActions(): EditorAction[] {\n\t\treturn this.editorActions.slice(0);\n\t}\n\n\tpublic registerEditorCommand(editorCommand: EditorCommand) {\n\t\teditorCommand.register();\n\t\tthis.editorCommands[editorCommand.id] = editorCommand;\n\t}\n\n\tpublic getEditorCommand(commandId: string): EditorCommand {\n\t\treturn (this.editorCommands[commandId] || null);\n\t}\n\n}\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport const UndoCommand = registerCommand(new MultiCommand({\n\tid: 'undo',\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorCore,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_Z\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '1_do',\n\t\ttitle: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('undo', \"Undo\"),\n\t\torder: 1\n\t}]\n}));\n\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\n\nexport const RedoCommand = registerCommand(new MultiCommand({\n\tid: 'redo',\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorCore,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_Y,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z],\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z }\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '1_do',\n\t\ttitle: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n\t\torder: 2\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('redo', \"Redo\"),\n\t\torder: 1\n\t}]\n}));\n\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\n\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n\tid: 'editor.action.selectAll',\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorCore,\n\t\tkbExpr: null,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_A\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\tgroup: '1_basic',\n\t\ttitle: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('selectAll', \"Select All\"),\n\t\torder: 1\n\t}]\n}));\n"]}