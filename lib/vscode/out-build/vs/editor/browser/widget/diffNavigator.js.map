{"version":3,"file":"diffNavigator.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/widget/diffNavigator.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'vs/base/common/assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport { IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILineChange, ScrollType } from 'vs/editor/common/editorCommon';\n\n\ninterface IDiffRange {\n\trhs: boolean;\n\trange: Range;\n}\n\nexport interface Options {\n\tfollowsCaret?: boolean;\n\tignoreCharChanges?: boolean;\n\talwaysRevealFirst?: boolean;\n}\n\nconst defaultOptions: Options = {\n\tfollowsCaret: true,\n\tignoreCharChanges: true,\n\talwaysRevealFirst: true\n};\n\nexport interface IDiffNavigator {\n\tcanNavigate(): boolean;\n\tnext(): void;\n\tprevious(): void;\n\tdispose(): void;\n}\n\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport class DiffNavigator extends Disposable implements IDiffNavigator {\n\n\tprivate readonly _editor: IDiffEditor;\n\tprivate readonly _options: Options;\n\tprivate readonly _onDidUpdate = this._register(new Emitter<this>());\n\n\treadonly onDidUpdate: Event<this> = this._onDidUpdate.event;\n\n\tprivate disposed: boolean;\n\tprivate revealFirst: boolean;\n\tprivate nextIdx: number;\n\tprivate ranges: IDiffRange[];\n\tprivate ignoreSelectionChange: boolean;\n\n\tconstructor(editor: IDiffEditor, options: Options = {}) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._options = objects.mixin(options, defaultOptions, false);\n\n\t\tthis.disposed = false;\n\n\t\tthis.nextIdx = -1;\n\t\tthis.ranges = [];\n\t\tthis.ignoreSelectionChange = false;\n\t\tthis.revealFirst = Boolean(this._options.alwaysRevealFirst);\n\n\t\t// hook up to diff editor for diff, disposal, and caret move\n\t\tthis._register(this._editor.onDidDispose(() => this.dispose()));\n\t\tthis._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n\n\t\tif (this._options.followsCaret) {\n\t\t\tthis._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e: ICursorPositionChangedEvent) => {\n\t\t\t\tif (this.ignoreSelectionChange) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.nextIdx = -1;\n\t\t\t}));\n\t\t}\n\t\tif (this._options.alwaysRevealFirst) {\n\t\t\tthis._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n\t\t\t\tthis.revealFirst = true;\n\t\t\t}));\n\t\t}\n\n\t\t// init things\n\t\tthis._init();\n\t}\n\n\tprivate _init(): void {\n\t\tlet changes = this._editor.getLineChanges();\n\t\tif (!changes) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _onDiffUpdated(): void {\n\t\tthis._init();\n\n\t\tthis._compute(this._editor.getLineChanges());\n\t\tif (this.revealFirst) {\n\t\t\t// Only reveal first on first non-null changes\n\t\t\tif (this._editor.getLineChanges() !== null) {\n\t\t\t\tthis.revealFirst = false;\n\t\t\t\tthis.nextIdx = -1;\n\t\t\t\tthis.next(ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _compute(lineChanges: ILineChange[] | null): void {\n\n\t\t// new ranges\n\t\tthis.ranges = [];\n\n\t\tif (lineChanges) {\n\t\t\t// create ranges from changes\n\t\t\tlineChanges.forEach((lineChange) => {\n\n\t\t\t\tif (!this._options.ignoreCharChanges && lineChange.charChanges) {\n\n\t\t\t\t\tlineChange.charChanges.forEach((charChange) => {\n\t\t\t\t\t\tthis.ranges.push({\n\t\t\t\t\t\t\trhs: true,\n\t\t\t\t\t\t\trange: new Range(\n\t\t\t\t\t\t\t\tcharChange.modifiedStartLineNumber,\n\t\t\t\t\t\t\t\tcharChange.modifiedStartColumn,\n\t\t\t\t\t\t\t\tcharChange.modifiedEndLineNumber,\n\t\t\t\t\t\t\t\tcharChange.modifiedEndColumn)\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ranges.push({\n\t\t\t\t\t\trhs: true,\n\t\t\t\t\t\trange: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// sort\n\t\tthis.ranges.sort((left, right) => {\n\t\t\tif (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\n\t\t\t\treturn -1;\n\t\t\t} else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t\tthis._onDidUpdate.fire(this);\n\t}\n\n\tprivate _initIdx(fwd: boolean): void {\n\t\tlet found = false;\n\t\tlet position = this._editor.getPosition();\n\t\tif (!position) {\n\t\t\tthis.nextIdx = 0;\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n\t\t\tlet range = this.ranges[i].range;\n\t\t\tif (position.isBeforeOrEqual(range.getStartPosition())) {\n\t\t\t\tthis.nextIdx = i + (fwd ? 0 : -1);\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t\tif (!found) {\n\t\t\t// after the last change\n\t\t\tthis.nextIdx = fwd ? 0 : this.ranges.length - 1;\n\t\t}\n\t\tif (this.nextIdx < 0) {\n\t\t\tthis.nextIdx = this.ranges.length - 1;\n\t\t}\n\t}\n\n\tprivate _move(fwd: boolean, scrollType: ScrollType): void {\n\t\tassert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n\n\t\tif (!this.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.nextIdx === -1) {\n\t\t\tthis._initIdx(fwd);\n\n\t\t} else if (fwd) {\n\t\t\tthis.nextIdx += 1;\n\t\t\tif (this.nextIdx >= this.ranges.length) {\n\t\t\t\tthis.nextIdx = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.nextIdx -= 1;\n\t\t\tif (this.nextIdx < 0) {\n\t\t\t\tthis.nextIdx = this.ranges.length - 1;\n\t\t\t}\n\t\t}\n\n\t\tlet info = this.ranges[this.nextIdx];\n\t\tthis.ignoreSelectionChange = true;\n\t\ttry {\n\t\t\tlet pos = info.range.getStartPosition();\n\t\t\tthis._editor.setPosition(pos);\n\t\t\tthis._editor.revealPositionInCenter(pos, scrollType);\n\t\t} finally {\n\t\t\tthis.ignoreSelectionChange = false;\n\t\t}\n\t}\n\n\tcanNavigate(): boolean {\n\t\treturn this.ranges && this.ranges.length > 0;\n\t}\n\n\tnext(scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._move(true, scrollType);\n\t}\n\n\tprevious(scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._move(false, scrollType);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.ranges = [];\n\t\tthis.disposed = true;\n\t}\n}\n"]}