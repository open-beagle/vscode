{"version":3,"file":"viewController.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/view/viewController.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { CoreNavigationCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { IEditorMouseEvent, IPartialEditorMouseEvent } from 'vs/editor/browser/editorBrowser';\nimport { ViewUserInputEvents } from 'vs/editor/browser/view/viewUserInputEvents';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IConfiguration } from 'vs/editor/common/editorCommon';\nimport { IViewModel } from 'vs/editor/common/viewModel/viewModel';\nimport { IMouseWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport * as platform from 'vs/base/common/platform';\n\nexport interface IMouseDispatchData {\n\tposition: Position;\n\t/**\n\t * Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line).\n\t */\n\tmouseColumn: number;\n\tstartedOnLineNumbers: boolean;\n\n\tinSelectionMode: boolean;\n\tmouseDownCount: number;\n\taltKey: boolean;\n\tctrlKey: boolean;\n\tmetaKey: boolean;\n\tshiftKey: boolean;\n\n\tleftButton: boolean;\n\tmiddleButton: boolean;\n}\n\nexport interface ICommandDelegate {\n\tpaste(text: string, pasteOnNewLine: boolean, multicursorText: string[] | null, mode: string | null): void;\n\ttype(text: string): void;\n\tcompositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number): void;\n\tstartComposition(): void;\n\tendComposition(): void;\n\tcut(): void;\n}\n\nexport class ViewController {\n\n\tprivate readonly configuration: IConfiguration;\n\tprivate readonly viewModel: IViewModel;\n\tprivate readonly userInputEvents: ViewUserInputEvents;\n\tprivate readonly commandDelegate: ICommandDelegate;\n\n\tconstructor(\n\t\tconfiguration: IConfiguration,\n\t\tviewModel: IViewModel,\n\t\tuserInputEvents: ViewUserInputEvents,\n\t\tcommandDelegate: ICommandDelegate\n\t) {\n\t\tthis.configuration = configuration;\n\t\tthis.viewModel = viewModel;\n\t\tthis.userInputEvents = userInputEvents;\n\t\tthis.commandDelegate = commandDelegate;\n\t}\n\n\tpublic paste(text: string, pasteOnNewLine: boolean, multicursorText: string[] | null, mode: string | null): void {\n\t\tthis.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n\t}\n\n\tpublic type(text: string): void {\n\t\tthis.commandDelegate.type(text);\n\t}\n\n\tpublic compositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number): void {\n\t\tthis.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n\t}\n\n\tpublic compositionStart(): void {\n\t\tthis.commandDelegate.startComposition();\n\t}\n\n\tpublic compositionEnd(): void {\n\t\tthis.commandDelegate.endComposition();\n\t}\n\n\tpublic cut(): void {\n\t\tthis.commandDelegate.cut();\n\t}\n\n\tpublic setSelection(modelSelection: Selection): void {\n\t\tCoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'keyboard',\n\t\t\tselection: modelSelection\n\t\t});\n\t}\n\n\tprivate _validateViewColumn(viewPosition: Position): Position {\n\t\tconst minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n\t\tif (viewPosition.column < minColumn) {\n\t\t\treturn new Position(viewPosition.lineNumber, minColumn);\n\t\t}\n\t\treturn viewPosition;\n\t}\n\n\tprivate _hasMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (this.configuration.options.get(EditorOption.multiCursorModifier)) {\n\t\t\tcase 'altKey':\n\t\t\t\treturn data.altKey;\n\t\t\tcase 'ctrlKey':\n\t\t\t\treturn data.ctrlKey;\n\t\t\tcase 'metaKey':\n\t\t\t\treturn data.metaKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _hasNonMulticursorModifier(data: IMouseDispatchData): boolean {\n\t\tswitch (this.configuration.options.get(EditorOption.multiCursorModifier)) {\n\t\t\tcase 'altKey':\n\t\t\t\treturn data.ctrlKey || data.metaKey;\n\t\t\tcase 'ctrlKey':\n\t\t\t\treturn data.altKey || data.metaKey;\n\t\t\tcase 'metaKey':\n\t\t\t\treturn data.ctrlKey || data.altKey;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic dispatchMouse(data: IMouseDispatchData): void {\n\t\tconst options = this.configuration.options;\n\t\tconst selectionClipboardIsOn = (platform.isLinux && options.get(EditorOption.selectionClipboard));\n\t\tconst columnSelection = options.get(EditorOption.columnSelection);\n\t\tif (data.middleButton && !selectionClipboardIsOn) {\n\t\t\tthis._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n\t\t} else if (data.startedOnLineNumbers) {\n\t\t\t// If the dragging started on the gutter, then have operations work on the entire line\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position);\n\t\t\t\t} else {\n\t\t\t\t\tthis._createCursor(data.position, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lineSelectDrag(data.position);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lineSelect(data.position);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.mouseDownCount >= 4) {\n\t\t\tthis._selectAll();\n\t\t} else if (data.mouseDownCount === 3) {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lastCursorLineSelectDrag(data.position);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lastCursorLineSelect(data.position);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._lineSelectDrag(data.position);\n\t\t\t\t} else {\n\t\t\t\t\tthis._lineSelect(data.position);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.mouseDownCount === 2) {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tthis._lastCursorWordSelect(data.position);\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tthis._wordSelectDrag(data.position);\n\t\t\t\t} else {\n\t\t\t\t\tthis._wordSelect(data.position);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._hasMulticursorModifier(data)) {\n\t\t\t\tif (!this._hasNonMulticursorModifier(data)) {\n\t\t\t\t\tif (data.shiftKey) {\n\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Do multi-cursor operations only when purely alt is pressed\n\t\t\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\t\t\tthis._lastCursorMoveToSelect(data.position);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._createCursor(data.position, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (data.inSelectionMode) {\n\t\t\t\t\tif (data.altKey) {\n\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (columnSelection) {\n\t\t\t\t\t\t\tthis._columnSelect(data.position, data.mouseColumn, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._moveToSelect(data.position);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveTo(data.position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _usualArgs(viewPosition: Position) {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\treturn {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition: viewPosition\n\t\t};\n\t}\n\n\tpublic moveTo(viewPosition: Position): void {\n\t\tCoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _moveToSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _columnSelect(viewPosition: Position, mouseColumn: number, doColumnSelect: boolean): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition: viewPosition,\n\t\t\tmouseColumn: mouseColumn,\n\t\t\tdoColumnSelect: doColumnSelect\n\t\t});\n\t}\n\n\tprivate _createCursor(viewPosition: Position, wholeLine: boolean): void {\n\t\tviewPosition = this._validateViewColumn(viewPosition);\n\t\tCoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n\t\t\tsource: 'mouse',\n\t\t\tposition: this._convertViewToModelPosition(viewPosition),\n\t\t\tviewPosition: viewPosition,\n\t\t\twholeLine: wholeLine\n\t\t});\n\t}\n\n\tprivate _lastCursorMoveToSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _wordSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _wordSelectDrag(viewPosition: Position): void {\n\t\tCoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _lastCursorWordSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _lineSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _lineSelectDrag(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _lastCursorLineSelect(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _lastCursorLineSelectDrag(viewPosition: Position): void {\n\t\tCoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n\t}\n\n\tprivate _selectAll(): void {\n\t\tCoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n\t}\n\n\t// ----------------------\n\n\tprivate _convertViewToModelPosition(viewPosition: Position): Position {\n\t\treturn this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n\t}\n\n\tpublic emitKeyDown(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyDown(e);\n\t}\n\n\tpublic emitKeyUp(e: IKeyboardEvent): void {\n\t\tthis.userInputEvents.emitKeyUp(e);\n\t}\n\n\tpublic emitContextMenu(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitContextMenu(e);\n\t}\n\n\tpublic emitMouseMove(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseMove(e);\n\t}\n\n\tpublic emitMouseLeave(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseLeave(e);\n\t}\n\n\tpublic emitMouseUp(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseUp(e);\n\t}\n\n\tpublic emitMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDown(e);\n\t}\n\n\tpublic emitMouseDrag(e: IEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrag(e);\n\t}\n\n\tpublic emitMouseDrop(e: IPartialEditorMouseEvent): void {\n\t\tthis.userInputEvents.emitMouseDrop(e);\n\t}\n\n\tpublic emitMouseDropCanceled(): void {\n\t\tthis.userInputEvents.emitMouseDropCanceled();\n\t}\n\n\tpublic emitMouseWheel(e: IMouseWheelEvent): void {\n\t\tthis.userInputEvents.emitMouseWheel(e);\n\t}\n}\n"]}