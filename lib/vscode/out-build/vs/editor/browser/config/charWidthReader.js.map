{"version":3,"file":"charWidthReader.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/config/charWidthReader.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\n\nexport const enum CharWidthRequestType {\n\tRegular = 0,\n\tItalic = 1,\n\tBold = 2\n}\n\nexport class CharWidthRequest {\n\n\tpublic readonly chr: string;\n\tpublic readonly type: CharWidthRequestType;\n\tpublic width: number;\n\n\tconstructor(chr: string, type: CharWidthRequestType) {\n\t\tthis.chr = chr;\n\t\tthis.type = type;\n\t\tthis.width = 0;\n\t}\n\n\tpublic fulfill(width: number) {\n\t\tthis.width = width;\n\t}\n}\n\nclass DomCharWidthReader {\n\n\tprivate readonly _bareFontInfo: BareFontInfo;\n\tprivate readonly _requests: CharWidthRequest[];\n\n\tprivate _container: HTMLElement | null;\n\tprivate _testElements: HTMLSpanElement[] | null;\n\n\tconstructor(bareFontInfo: BareFontInfo, requests: CharWidthRequest[]) {\n\t\tthis._bareFontInfo = bareFontInfo;\n\t\tthis._requests = requests;\n\n\t\tthis._container = null;\n\t\tthis._testElements = null;\n\t}\n\n\tpublic read(): void {\n\t\t// Create a test container with all these test elements\n\t\tthis._createDomElements();\n\n\t\t// Add the container to the DOM\n\t\tdocument.body.appendChild(this._container!);\n\n\t\t// Read character widths\n\t\tthis._readFromDomElements();\n\n\t\t// Remove the container from the DOM\n\t\tdocument.body.removeChild(this._container!);\n\n\t\tthis._container = null;\n\t\tthis._testElements = null;\n\t}\n\n\tprivate _createDomElements(): void {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.position = 'absolute';\n\t\tcontainer.style.top = '-50000px';\n\t\tcontainer.style.width = '50000px';\n\n\t\tconst regularDomNode = document.createElement('div');\n\t\tregularDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n\t\tregularDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\n\t\tregularDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n\t\tregularDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n\t\tregularDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n\t\tregularDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n\t\tcontainer.appendChild(regularDomNode);\n\n\t\tconst boldDomNode = document.createElement('div');\n\t\tboldDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n\t\tboldDomNode.style.fontWeight = 'bold';\n\t\tboldDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n\t\tboldDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n\t\tboldDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n\t\tboldDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n\t\tcontainer.appendChild(boldDomNode);\n\n\t\tconst italicDomNode = document.createElement('div');\n\t\titalicDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n\t\titalicDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\n\t\titalicDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n\t\titalicDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n\t\titalicDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n\t\titalicDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n\t\titalicDomNode.style.fontStyle = 'italic';\n\t\tcontainer.appendChild(italicDomNode);\n\n\t\tconst testElements: HTMLSpanElement[] = [];\n\t\tfor (const request of this._requests) {\n\n\t\t\tlet parent: HTMLElement;\n\t\t\tif (request.type === CharWidthRequestType.Regular) {\n\t\t\t\tparent = regularDomNode;\n\t\t\t}\n\t\t\tif (request.type === CharWidthRequestType.Bold) {\n\t\t\t\tparent = boldDomNode;\n\t\t\t}\n\t\t\tif (request.type === CharWidthRequestType.Italic) {\n\t\t\t\tparent = italicDomNode;\n\t\t\t}\n\n\t\t\tparent!.appendChild(document.createElement('br'));\n\n\t\t\tconst testElement = document.createElement('span');\n\t\t\tDomCharWidthReader._render(testElement, request);\n\t\t\tparent!.appendChild(testElement);\n\n\t\t\ttestElements.push(testElement);\n\t\t}\n\n\t\tthis._container = container;\n\t\tthis._testElements = testElements;\n\t}\n\n\tprivate static _render(testElement: HTMLElement, request: CharWidthRequest): void {\n\t\tif (request.chr === ' ') {\n\t\t\tlet htmlString = '\\u00a0';\n\t\t\t// Repeat character 256 (2^8) times\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\thtmlString += htmlString;\n\t\t\t}\n\t\t\ttestElement.innerText = htmlString;\n\t\t} else {\n\t\t\tlet testString = request.chr;\n\t\t\t// Repeat character 256 (2^8) times\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\ttestString += testString;\n\t\t\t}\n\t\t\ttestElement.textContent = testString;\n\t\t}\n\t}\n\n\tprivate _readFromDomElements(): void {\n\t\tfor (let i = 0, len = this._requests.length; i < len; i++) {\n\t\t\tconst request = this._requests[i];\n\t\t\tconst testElement = this._testElements![i];\n\n\t\t\trequest.fulfill(testElement.offsetWidth / 256);\n\t\t}\n\t}\n}\n\nexport function readCharWidths(bareFontInfo: BareFontInfo, requests: CharWidthRequest[]): void {\n\tconst reader = new DomCharWidthReader(bareFontInfo, requests);\n\treader.read();\n}\n"]}