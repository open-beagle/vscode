{"version":3,"file":"elementSizeObserver.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/config/elementSizeObserver.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IDimension } from 'vs/editor/common/editorCommon';\n\ninterface ResizeObserver {\n\tobserve(target: Element): void;\n\tunobserve(target: Element): void;\n\tdisconnect(): void;\n}\n\ninterface ResizeObserverSize {\n\tinlineSize: number;\n\tblockSize: number;\n}\n\ninterface ResizeObserverEntry {\n\treadonly target: Element;\n\treadonly contentRect: DOMRectReadOnly;\n\treadonly borderBoxSize: ResizeObserverSize;\n\treadonly contentBoxSize: ResizeObserverSize;\n}\n\ntype ResizeObserverCallback = (entries: ReadonlyArray<ResizeObserverEntry>, observer: ResizeObserver) => void;\n\ndeclare const ResizeObserver: {\n\tprototype: ResizeObserver;\n\tnew(callback: ResizeObserverCallback): ResizeObserver;\n};\n\n\nexport class ElementSizeObserver extends Disposable {\n\n\tprivate readonly referenceDomElement: HTMLElement | null;\n\tprivate readonly changeCallback: () => void;\n\tprivate width: number;\n\tprivate height: number;\n\tprivate resizeObserver: ResizeObserver | null;\n\tprivate measureReferenceDomElementToken: number;\n\n\tconstructor(referenceDomElement: HTMLElement | null, dimension: IDimension | undefined, changeCallback: () => void) {\n\t\tsuper();\n\t\tthis.referenceDomElement = referenceDomElement;\n\t\tthis.changeCallback = changeCallback;\n\t\tthis.width = -1;\n\t\tthis.height = -1;\n\t\tthis.resizeObserver = null;\n\t\tthis.measureReferenceDomElementToken = -1;\n\t\tthis.measureReferenceDomElement(false, dimension);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.stopObserving();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tpublic startObserving(): void {\n\t\tif (typeof ResizeObserver !== 'undefined') {\n\t\t\tif (!this.resizeObserver && this.referenceDomElement) {\n\t\t\t\tthis.resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\t\tif (entries && entries[0] && entries[0].contentRect) {\n\t\t\t\t\t\tthis.observe({ width: entries[0].contentRect.width, height: entries[0].contentRect.height });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.observe();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.resizeObserver.observe(this.referenceDomElement);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.measureReferenceDomElementToken === -1) {\n\t\t\t\t// setInterval type defaults to NodeJS.Timeout instead of number, so specify it as a number\n\t\t\t\tthis.measureReferenceDomElementToken = <number><any>setInterval(() => this.observe(), 100);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic stopObserving(): void {\n\t\tif (this.resizeObserver) {\n\t\t\tthis.resizeObserver.disconnect();\n\t\t\tthis.resizeObserver = null;\n\t\t}\n\t\tif (this.measureReferenceDomElementToken !== -1) {\n\t\t\tclearInterval(this.measureReferenceDomElementToken);\n\t\t\tthis.measureReferenceDomElementToken = -1;\n\t\t}\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.measureReferenceDomElement(true, dimension);\n\t}\n\n\tprivate measureReferenceDomElement(callChangeCallback: boolean, dimension?: IDimension): void {\n\t\tlet observedWidth = 0;\n\t\tlet observedHeight = 0;\n\t\tif (dimension) {\n\t\t\tobservedWidth = dimension.width;\n\t\t\tobservedHeight = dimension.height;\n\t\t} else if (this.referenceDomElement) {\n\t\t\tobservedWidth = this.referenceDomElement.clientWidth;\n\t\t\tobservedHeight = this.referenceDomElement.clientHeight;\n\t\t}\n\t\tobservedWidth = Math.max(5, observedWidth);\n\t\tobservedHeight = Math.max(5, observedHeight);\n\t\tif (this.width !== observedWidth || this.height !== observedHeight) {\n\t\t\tthis.width = observedWidth;\n\t\t\tthis.height = observedHeight;\n\t\t\tif (callChangeCallback) {\n\t\t\t\tthis.changeCallback();\n\t\t\t}\n\t\t}\n\t}\n\n}\n"]}