{"version":3,"file":"minimapCharRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,mBAAmB;QAM/B,YAAY,QAA2B,EAAkB,KAAa;YAAb,UAAK,GAAL,KAAK,CAAQ;YACrE,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;QACpE,CAAC;QAEO,MAAM,CAAC,MAAM,CAAC,KAAwB,EAAE,KAAa;YAC5D,IAAI,MAAM,GAAG,IAAI,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACjD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAA,GAAA,cAAO,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;aACtC;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,UAAU,CAChB,MAAiB,EACjB,EAAU,EACV,EAAU,EACV,MAAc,EACd,KAAY,EACZ,eAAsB,EACtB,SAAiB,EACjB,cAAuB,EACvB,cAAuB;YAEvB,MAAM,SAAS,GAAG,0BAA4B,IAAI,CAAC,KAAK,CAAC;YACzD,MAAM,UAAU,GAAG,2BAA6B,IAAI,CAAC,KAAK,CAAC;YAC3D,MAAM,YAAY,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,GAAG,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE;gBACvE,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;gBACtD,OAAO;aACP;YAED,MAAM,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3E,MAAM,SAAS,GAAG,CAAA,GAAA,+BAAY,CAAA,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAElD,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,4BAA8B,CAAC;YAE7D,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YAEtC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YAErC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,IAAI,YAAY,GAAG,SAAS,GAAG,SAAS,GAAG,UAAU,CAAC;YAEtD,IAAI,GAAG,GAAG,EAAE,GAAG,SAAS,GAAG,EAAE,4BAA8B,CAAC;YAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,MAAM,GAAG,GAAG,CAAC;gBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;oBACnC,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC,GAAG,GAAG,CAAC;oBACzC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;oBAC1C,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;oBAC1C,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;oBAC1C,MAAM,EAAE,CAAC;iBACT;gBAED,GAAG,IAAI,SAAS,CAAC;aACjB;QACF,CAAC;QAEM,eAAe,CACrB,MAAiB,EACjB,EAAU,EACV,EAAU,EACV,KAAY,EACZ,eAAsB,EACtB,cAAuB,EACvB,cAAuB;YAEvB,MAAM,SAAS,GAAG,0BAA4B,IAAI,CAAC,KAAK,CAAC;YACzD,MAAM,UAAU,GAAG,2BAA6B,IAAI,CAAC,KAAK,CAAC;YAC3D,MAAM,YAAY,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,GAAG,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE;gBACvE,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;gBACtD,OAAO;aACP;YAED,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,4BAA8B,CAAC;YAE7D,MAAM,CAAC,GAAG,GAAG,CAAC;YAEd,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC;YAEtC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YACrC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YAErC,MAAM,MAAM,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;YACxC,MAAM,MAAM,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;YACxC,MAAM,MAAM,GAAG,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;YAExC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YAEzB,IAAI,GAAG,GAAG,EAAE,GAAG,SAAS,GAAG,EAAE,4BAA8B,CAAC;YAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,MAAM,GAAG,GAAG,CAAC;gBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;oBACnC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC;oBACxB,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC;oBACxB,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC;oBACxB,MAAM,EAAE,CAAC;iBACT;gBAED,GAAG,IAAI,SAAS,CAAC;aACjB;QACF,CAAC;KACD;IArHD,kDAqHC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RGBA8 } from 'vs/editor/common/core/rgba';\nimport { Constants, getCharIndex } from './minimapCharSheet';\nimport { toUint8 } from 'vs/base/common/uint';\n\nexport class MinimapCharRenderer {\n\t_minimapCharRendererBrand: void;\n\n\tprivate readonly charDataNormal: Uint8ClampedArray;\n\tprivate readonly charDataLight: Uint8ClampedArray;\n\n\tconstructor(charData: Uint8ClampedArray, public readonly scale: number) {\n\t\tthis.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n\t\tthis.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n\t}\n\n\tprivate static soften(input: Uint8ClampedArray, ratio: number): Uint8ClampedArray {\n\t\tlet result = new Uint8ClampedArray(input.length);\n\t\tfor (let i = 0, len = input.length; i < len; i++) {\n\t\t\tresult[i] = toUint8(input[i] * ratio);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tchCode: number,\n\t\tcolor: RGBA8,\n\t\tbackgroundColor: RGBA8,\n\t\tfontScale: number,\n\t\tuseLighterFont: boolean,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n\t\tconst charIndex = getCharIndex(chCode, fontScale);\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst dest = target.data;\n\t\tlet sourceOffset = charIndex * charWidth * charHeight;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tconst c = charData[sourceOffset++] / 255;\n\t\t\t\tdest[column++] = backgroundR + deltaR * c;\n\t\t\t\tdest[column++] = backgroundG + deltaG * c;\n\t\t\t\tdest[column++] = backgroundB + deltaB * c;\n\t\t\t\tcolumn++;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n\n\tpublic blockRenderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tcolor: RGBA8,\n\t\tbackgroundColor: RGBA8,\n\t\tuseLighterFont: boolean,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst c = 0.5;\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst colorR = backgroundR + deltaR * c;\n\t\tconst colorG = backgroundG + deltaG * c;\n\t\tconst colorB = backgroundB + deltaB * c;\n\n\t\tconst dest = target.data;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tdest[column++] = colorR;\n\t\t\t\tdest[column++] = colorG;\n\t\t\t\tdest[column++] = colorB;\n\t\t\t\tcolumn++;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n}\n"]}