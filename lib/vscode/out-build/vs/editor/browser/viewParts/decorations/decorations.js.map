{"version":3,"file":"decorations.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/decorations/decorations.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./decorations';\nimport { DynamicViewOverlay } from 'vs/editor/browser/view/dynamicViewOverlay';\nimport { Range } from 'vs/editor/common/core/range';\nimport { HorizontalRange, RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewModelDecoration } from 'vs/editor/common/viewModel/viewModel';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\nexport class DecorationsOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _lineHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst _decorations = ctx.getDecorationsInViewport();\n\n\t\t// Keep only decorations with `className`\n\t\tlet decorations: ViewModelDecoration[] = [], decorationsLen = 0;\n\t\tfor (let i = 0, len = _decorations.length; i < len; i++) {\n\t\t\tconst d = _decorations[i];\n\t\t\tif (d.options.className) {\n\t\t\t\tdecorations[decorationsLen++] = d;\n\t\t\t}\n\t\t}\n\n\t\t// Sort decorations for consistent render output\n\t\tdecorations = decorations.sort((a, b) => {\n\t\t\tif (a.options.zIndex! < b.options.zIndex!) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.options.zIndex! > b.options.zIndex!) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tconst aClassName = a.options.className!;\n\t\t\tconst bClassName = b.options.className!;\n\n\t\t\tif (aClassName < bClassName) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aClassName > bClassName) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t});\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = '';\n\t\t}\n\n\t\t// Render first whole line decorations and then regular decorations\n\t\tthis._renderWholeLineDecorations(ctx, decorations, output);\n\t\tthis._renderNormalDecorations(ctx, decorations, output);\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate _renderWholeLineDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst lineHeight = String(this._lineHeight);\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (!d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst decorationOutput = (\n\t\t\t\t'<div class=\"cdr '\n\t\t\t\t+ d.options.className\n\t\t\t\t+ '\" style=\"left:0;width:100%;height:'\n\t\t\t\t+ lineHeight\n\t\t\t\t+ 'px;\"></div>'\n\t\t\t);\n\n\t\t\tconst startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n\t\t\tconst endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\t\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\t\tconst lineIndex = j - visibleStartLineNumber;\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderNormalDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst lineHeight = String(this._lineHeight);\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevShowIfCollapsed: boolean = false;\n\t\tlet prevRange: Range | null = null;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst className = d.options.className!;\n\t\t\tconst showIfCollapsed = Boolean(d.options.showIfCollapsed);\n\n\t\t\tlet range = d.range;\n\t\t\tif (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.model.getLineMaxColumn(range.endLineNumber - 1));\n\t\t\t}\n\n\t\t\tif (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange!, range)) {\n\t\t\t\t// merge into previous decoration\n\t\t\t\tprevRange = Range.plusRange(prevRange!, range);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// flush previous decoration\n\t\t\tif (prevClassName !== null) {\n\t\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n\t\t\t}\n\n\t\t\tprevClassName = className;\n\t\t\tprevShowIfCollapsed = showIfCollapsed;\n\t\t\tprevRange = range;\n\t\t}\n\n\t\tif (prevClassName !== null) {\n\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n\t\t}\n\t}\n\n\tprivate _renderNormalDecoration(ctx: RenderingContext, range: Range, className: string, showIfCollapsed: boolean, lineHeight: string, visibleStartLineNumber: number, output: string[]): void {\n\t\tconst linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/className === 'findMatch');\n\t\tif (!linesVisibleRanges) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[j];\n\t\t\tif (lineVisibleRanges.outsideRenderedLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n\n\t\t\tif (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n\t\t\t\tconst singleVisibleRange = lineVisibleRanges.ranges[0];\n\t\t\t\tif (singleVisibleRange.width === 0) {\n\t\t\t\t\t// collapsed range case => make the decoration visible by faking its width\n\t\t\t\t\tlineVisibleRanges.ranges[0] = new HorizontalRange(singleVisibleRange.left, this._typicalHalfwidthCharacterWidth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[k];\n\t\t\t\tconst decorationOutput = (\n\t\t\t\t\t'<div class=\"cdr '\n\t\t\t\t\t+ className\n\t\t\t\t\t+ '\" style=\"left:'\n\t\t\t\t\t+ String(visibleRange.left)\n\t\t\t\t\t+ 'px;width:'\n\t\t\t\t\t+ String(visibleRange.width)\n\t\t\t\t\t+ 'px;height:'\n\t\t\t\t\t+ lineHeight\n\t\t\t\t\t+ 'px;\"></div>'\n\t\t\t\t);\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n"]}