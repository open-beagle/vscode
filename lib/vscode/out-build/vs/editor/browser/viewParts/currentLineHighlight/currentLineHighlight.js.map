{"version":3,"file":"currentLineHighlight.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./currentLineHighlight';\nimport { DynamicViewOverlay } from 'vs/editor/browser/view/dynamicViewOverlay';\nimport { editorLineHighlight, editorLineHighlightBorder } from 'vs/editor/common/view/editorColorRegistry';\nimport { RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport * as arrays from 'vs/base/common/arrays';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\nlet isRenderedUsingBorder = true;\n\nexport abstract class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprotected _lineHeight: number;\n\tprotected _renderLineHighlight: 'none' | 'gutter' | 'line' | 'all';\n\tprotected _contentLeft: number;\n\tprotected _contentWidth: number;\n\tprotected _selectionIsEmpty: boolean;\n\tprotected _renderLineHighlightOnlyWhenFocus: boolean;\n\tprotected _focused: boolean;\n\tprivate _cursorLineNumbers: number[];\n\tprivate _selections: Selection[];\n\tprivate _renderData: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._focused = false;\n\t\tthis._cursorLineNumbers = [1];\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._renderData = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tprivate _readFromSelections(): boolean {\n\t\tlet hasChanged = false;\n\n\t\t// Only render the first selection when using border\n\t\tconst renderSelections = isRenderedUsingBorder ? this._selections.slice(0, 1) : this._selections;\n\n\t\tconst cursorsLineNumbers = renderSelections.map(s => s.positionLineNumber);\n\t\tcursorsLineNumbers.sort((a, b) => a - b);\n\t\tif (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n\t\t\tthis._cursorLineNumbers = cursorsLineNumbers;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst selectionIsEmpty = renderSelections.every(s => s.isEmpty());\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\treturn hasChanged;\n\t}\n\n\t// --- begin event handlers\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollWidthChanged || e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tif (!this._renderLineHighlightOnlyWhenFocus) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._focused = e.isFocused;\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._shouldRenderThis()) {\n\t\t\tthis._renderData = null;\n\t\t\treturn;\n\t\t}\n\t\tconst renderedLine = this._renderOne(ctx);\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst len = this._cursorLineNumbers.length;\n\t\tlet index = 0;\n\t\tconst renderData: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\twhile (index < len && this._cursorLineNumbers[index] < lineNumber) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tif (index < len && this._cursorLineNumbers[index] === lineNumber) {\n\t\t\t\trenderData[lineIndex] = renderedLine;\n\t\t\t} else {\n\t\t\t\trenderData[lineIndex] = '';\n\t\t\t}\n\t\t}\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderData) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex >= this._renderData.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderData[lineIndex];\n\t}\n\n\tprotected abstract _shouldRenderThis(): boolean;\n\tprotected abstract _shouldRenderOther(): boolean;\n\tprotected abstract _renderOne(ctx: RenderingContext): string;\n}\n\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n\n\tprotected _renderOne(ctx: RenderingContext): string {\n\t\tconst className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px; height:${this._lineHeight}px;\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n\t\t\t&& this._selectionIsEmpty\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n}\n\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n\tprotected _renderOne(ctx: RenderingContext): string {\n\t\tconst className = 'current-line' + (this._shouldRenderMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${this._contentLeft}px; height:${this._lineHeight}px;\"></div>`;\n\t}\n\tprotected _shouldRenderMargin(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn true;\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n\t\t\t&& this._selectionIsEmpty\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tisRenderedUsingBorder = false;\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tif (lineHighlight) {\n\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n\t}\n\tif (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n\t\tconst lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n\t\tif (lineHighlightBorder) {\n\t\t\tisRenderedUsingBorder = true;\n\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tif (theme.type === 'hc') {\n\t\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line { border-width: 1px; }`);\n\t\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n"]}