{"version":3,"file":"indentGuides.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/indentGuides/indentGuides.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./indentGuides';\nimport { DynamicViewOverlay } from 'vs/editor/browser/view/dynamicViewOverlay';\nimport { Position } from 'vs/editor/common/core/position';\nimport { editorActiveIndentGuides, editorIndentGuides } from 'vs/editor/common/view/editorColorRegistry';\nimport { RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\n\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryLineNumber: number;\n\tprivate _lineHeight: number;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _enabled: boolean;\n\tprivate _activeIndentEnabled: boolean;\n\tprivate _maxIndentLeft: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryLineNumber = 0;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._enabled = options.get(EditorOption.renderIndentGuides);\n\t\tthis._activeIndentEnabled = options.get(EditorOption.highlightActiveIndentGuide);\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._enabled = options.get(EditorOption.renderIndentGuides);\n\t\tthis._activeIndentEnabled = options.get(EditorOption.highlightActiveIndentGuide);\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPrimaryLineNumber = selection.isEmpty() ? selection.positionLineNumber : 0;\n\n\t\tif (this._primaryLineNumber !== newPrimaryLineNumber) {\n\t\t\tthis._primaryLineNumber = newPrimaryLineNumber;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._enabled) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst { indentSize } = this._context.model.getTextModelOptions();\n\t\tconst indentWidth = indentSize * this._spaceWidth;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\t\tconst lineHeight = this._lineHeight;\n\n\t\tconst indents = this._context.model.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber);\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\t\tif (this._activeIndentEnabled && this._primaryLineNumber) {\n\t\t\tconst activeIndentInfo = this._context.model.getActiveIndentGuide(this._primaryLineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst containsActiveIndentGuide = (activeIndentStartLineNumber <= lineNumber && lineNumber <= activeIndentEndLineNumber);\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\n\t\t\tlet result = '';\n\t\t\tif (indent >= 1) {\n\t\t\t\tconst leftMostVisiblePosition = ctx.visibleRangeForPosition(new Position(lineNumber, 1));\n\t\t\t\tlet left = leftMostVisiblePosition ? leftMostVisiblePosition.left : 0;\n\t\t\t\tfor (let i = 1; i <= indent; i++) {\n\t\t\t\t\tconst className = (containsActiveIndentGuide && i === activeIndentLevel ? 'cigra' : 'cigr');\n\t\t\t\t\tresult += `<div class=\"${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${indentWidth}px\"></div>`;\n\t\t\t\t\tleft += indentWidth;\n\t\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n\tif (editorIndentGuidesColor) {\n\t\tcollector.addRule(`.monaco-editor .lines-content .cigr { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);\n\t}\n\tconst editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n\tif (editorActiveIndentGuidesColor) {\n\t\tcollector.addRule(`.monaco-editor .lines-content .cigra { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);\n\t}\n});\n"]}