{"version":3,"file":"glyphMargin.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/glyphMargin/glyphMargin.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./glyphMargin';\nimport { DynamicViewOverlay } from 'vs/editor/browser/view/dynamicViewOverlay';\nimport { RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\n\nexport class DecorationToRender {\n\t_decorationToRenderBrand: void;\n\n\tpublic startLineNumber: number;\n\tpublic endLineNumber: number;\n\tpublic className: string;\n\n\tconstructor(startLineNumber: number, endLineNumber: number, className: string) {\n\t\tthis.startLineNumber = +startLineNumber;\n\t\tthis.endLineNumber = +endLineNumber;\n\t\tthis.className = String(className);\n\t}\n}\n\nexport abstract class DedupOverlay extends DynamicViewOverlay {\n\n\tprotected _render(visibleStartLineNumber: number, visibleEndLineNumber: number, decorations: DecorationToRender[]): string[][] {\n\n\t\tconst output: string[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = [];\n\t\t}\n\n\t\tif (decorations.length === 0) {\n\t\t\treturn output;\n\t\t}\n\n\t\tdecorations.sort((a, b) => {\n\t\t\tif (a.className === b.className) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.endLineNumber - b.endLineNumber;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn (a.className < b.className ? -1 : 1);\n\t\t});\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevEndLineIndex = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst className = d.className;\n\t\t\tlet startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n\t\t\tconst endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n\n\t\t\tif (prevClassName === className) {\n\t\t\t\tstartLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n\t\t\t\tprevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n\t\t\t} else {\n\t\t\t\tprevClassName = className;\n\t\t\t\tprevEndLineIndex = endLineIndex;\n\t\t\t}\n\n\t\t\tfor (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n\t\t\t\toutput[i].push(prevClassName);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nexport class GlyphMarginOverlay extends DedupOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _lineHeight: number;\n\tprivate _glyphMargin: boolean;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tlet r: DecorationToRender[] = [], rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst glyphMarginClassName = d.options.glyphMarginClassName;\n\t\t\tif (glyphMarginClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, glyphMarginClassName);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._glyphMargin) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst lineHeight = this._lineHeight.toString();\n\t\tconst left = this._glyphMarginLeft.toString();\n\t\tconst width = this._glyphMarginWidth.toString();\n\t\tconst common = '\" style=\"left:' + left + 'px;width:' + width + 'px' + ';height:' + lineHeight + 'px;\"></div>';\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst classNames = toRender[lineIndex];\n\n\t\t\tif (classNames.length === 0) {\n\t\t\t\toutput[lineIndex] = '';\n\t\t\t} else {\n\t\t\t\toutput[lineIndex] = (\n\t\t\t\t\t'<div class=\"cgmr codicon '\n\t\t\t\t\t+ classNames.join(' ')\n\t\t\t\t\t+ common\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n"]}