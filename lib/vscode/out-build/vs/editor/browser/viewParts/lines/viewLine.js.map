{"version":3,"file":"viewLine.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/lines/viewLine.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport * as platform from 'vs/base/common/platform';\nimport { IVisibleLine } from 'vs/editor/browser/view/viewLayer';\nimport { RangeUtil } from 'vs/editor/browser/viewParts/lines/rangeUtil';\nimport { IStringBuilder } from 'vs/editor/common/core/stringBuilder';\nimport { IConfiguration } from 'vs/editor/common/editorCommon';\nimport { HorizontalRange, VisibleRanges } from 'vs/editor/common/view/renderingContext';\nimport { LineDecoration } from 'vs/editor/common/viewLayout/lineDecorations';\nimport { CharacterMapping, ForeignElementType, RenderLineInput, renderViewLine, LineRange } from 'vs/editor/common/viewLayout/viewLineRenderer';\nimport { ViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { InlineDecorationType } from 'vs/editor/common/viewModel/viewModel';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { EditorOption, EditorFontLigatures } from 'vs/editor/common/config/editorOptions';\n\nconst canUseFastRenderedViewLine = (function () {\n\tif (platform.isNative) {\n\t\t// In VSCode we know very well when the zoom level changes\n\t\treturn true;\n\t}\n\n\tif (platform.isLinux || browser.isFirefox || browser.isSafari) {\n\t\t// On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n\t\t// --\n\t\t// Even though we read character widths correctly, having read them at a specific zoom level\n\t\t// does not mean they are the same at the current zoom level.\n\t\t// --\n\t\t// This could be improved if we ever figure out how to get an event when browsers zoom,\n\t\t// but until then we have to stick with reading client rects.\n\t\t// --\n\t\t// The same has been observed with Firefox on Windows7\n\t\t// --\n\t\t// The same has been oversved with Safari\n\t\treturn false;\n\t}\n\n\treturn true;\n})();\n\nlet monospaceAssumptionsAreValid = true;\n\nexport class DomReadingContext {\n\n\tprivate readonly _domNode: HTMLElement;\n\tprivate _clientRectDeltaLeft: number;\n\tprivate _clientRectDeltaLeftRead: boolean;\n\tpublic get clientRectDeltaLeft(): number {\n\t\tif (!this._clientRectDeltaLeftRead) {\n\t\t\tthis._clientRectDeltaLeftRead = true;\n\t\t\tthis._clientRectDeltaLeft = this._domNode.getBoundingClientRect().left;\n\t\t}\n\t\treturn this._clientRectDeltaLeft;\n\t}\n\n\tpublic readonly endNode: HTMLElement;\n\n\tconstructor(domNode: HTMLElement, endNode: HTMLElement) {\n\t\tthis._domNode = domNode;\n\t\tthis._clientRectDeltaLeft = 0;\n\t\tthis._clientRectDeltaLeftRead = false;\n\t\tthis.endNode = endNode;\n\t}\n\n}\n\nexport class ViewLineOptions {\n\tpublic readonly themeType: ColorScheme;\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly renderControlCharacters: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly useMonospaceOptimizations: boolean;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\tpublic readonly fontLigatures: string;\n\n\tconstructor(config: IConfiguration, themeType: ColorScheme) {\n\t\tthis.themeType = themeType;\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\tthis.renderControlCharacters = options.get(EditorOption.renderControlCharacters);\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.useMonospaceOptimizations = (\n\t\t\tfontInfo.isMonospace\n\t\t\t&& !options.get(EditorOption.disableMonospaceOptimizations)\n\t\t);\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t\tthis.fontLigatures = options.get(EditorOption.fontLigatures);\n\t}\n\n\tpublic equals(other: ViewLineOptions): boolean {\n\t\treturn (\n\t\t\tthis.themeType === other.themeType\n\t\t\t&& this.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.renderControlCharacters === other.renderControlCharacters\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.useMonospaceOptimizations === other.useMonospaceOptimizations\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t\t&& this.fontLigatures === other.fontLigatures\n\t\t);\n\t}\n}\n\nexport class ViewLine implements IVisibleLine {\n\n\tpublic static readonly CLASS_NAME = 'view-line';\n\n\tprivate _options: ViewLineOptions;\n\tprivate _isMaybeInvalid: boolean;\n\tprivate _renderedViewLine: IRenderedViewLine | null;\n\n\tconstructor(options: ViewLineOptions) {\n\t\tthis._options = options;\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._renderedViewLine = null;\n\t}\n\n\t// --- begin IVisibleLineData\n\n\tpublic getDomNode(): HTMLElement | null {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\treturn this._renderedViewLine.domNode.domNode;\n\t\t}\n\t\treturn null;\n\t}\n\tpublic setDomNode(domNode: HTMLElement): void {\n\t\tif (this._renderedViewLine) {\n\t\t\tthis._renderedViewLine.domNode = createFastDomNode(domNode);\n\t\t} else {\n\t\t\tthrow new Error('I have no rendered view line to set the dom node to...');\n\t\t}\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onTokensChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onDecorationsChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onOptionsChanged(newOptions: ViewLineOptions): void {\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._options = newOptions;\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tif (this._options.themeType === ColorScheme.HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\n\t\t\tthis._isMaybeInvalid = true;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic renderLine(lineNumber: number, deltaTop: number, viewportData: ViewportData, sb: IStringBuilder): boolean {\n\t\tif (this._isMaybeInvalid === false) {\n\t\t\t// it appears that nothing relevant has changed\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._isMaybeInvalid = false;\n\n\t\tconst lineData = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst options = this._options;\n\t\tconst actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n\n\t\t// Only send selection information when needed for rendering whitespace\n\t\tlet selectionsOnLine: LineRange[] | null = null;\n\t\tif (options.themeType === ColorScheme.HIGH_CONTRAST || this._options.renderWhitespace === 'selection') {\n\t\t\tconst selections = viewportData.selections;\n\t\t\tfor (const selection of selections) {\n\n\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\tif (options.themeType === ColorScheme.HIGH_CONTRAST || this._options.renderWhitespace !== 'selection') {\n\t\t\t\t\t\tactualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', InlineDecorationType.Regular));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst renderLineInput = new RenderLineInput(\n\t\t\toptions.useMonospaceOptimizations,\n\t\t\toptions.canUseHalfwidthRightwardsArrow,\n\t\t\tlineData.content,\n\t\t\tlineData.continuesWithWrappedLine,\n\t\t\tlineData.isBasicASCII,\n\t\t\tlineData.containsRTL,\n\t\t\tlineData.minColumn - 1,\n\t\t\tlineData.tokens,\n\t\t\tactualInlineDecorations,\n\t\t\tlineData.tabSize,\n\t\t\tlineData.startVisibleColumn,\n\t\t\toptions.spaceWidth,\n\t\t\toptions.middotWidth,\n\t\t\toptions.wsmiddotWidth,\n\t\t\toptions.stopRenderingLineAfter,\n\t\t\toptions.renderWhitespace,\n\t\t\toptions.renderControlCharacters,\n\t\t\toptions.fontLigatures !== EditorFontLigatures.OFF,\n\t\t\tselectionsOnLine\n\t\t);\n\n\t\tif (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n\t\t\t// no need to do anything, we have the same render input\n\t\t\treturn false;\n\t\t}\n\n\t\tsb.appendASCIIString('<div style=\"top:');\n\t\tsb.appendASCIIString(String(deltaTop));\n\t\tsb.appendASCIIString('px;height:');\n\t\tsb.appendASCIIString(String(this._options.lineHeight));\n\t\tsb.appendASCIIString('px;\" class=\"');\n\t\tsb.appendASCIIString(ViewLine.CLASS_NAME);\n\t\tsb.appendASCIIString('\">');\n\n\t\tconst output = renderViewLine(renderLineInput, sb);\n\n\t\tsb.appendASCIIString('</div>');\n\n\t\tlet renderedViewLine: IRenderedViewLine | null = null;\n\t\tif (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === ForeignElementType.None) {\n\t\t\tif (lineData.content.length < 300 && renderLineInput.lineTokens.getCount() < 100) {\n\t\t\t\t// Browser rounding errors have been observed in Chrome and IE, so using the fast\n\t\t\t\t// view line only for short lines. Please test before removing the length check...\n\t\t\t\t// ---\n\t\t\t\t// Another rounding error has been observed on Linux in VSCode, where <span> width\n\t\t\t\t// rounding errors add up to an observable large number...\n\t\t\t\t// ---\n\t\t\t\t// Also see another example of rounding errors on Windows in\n\t\t\t\t// https://github.com/microsoft/vscode/issues/33178\n\t\t\t\trenderedViewLine = new FastRenderedViewLine(\n\t\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\t\trenderLineInput,\n\t\t\t\t\toutput.characterMapping\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (!renderedViewLine) {\n\t\t\trenderedViewLine = createRenderedLine(\n\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\trenderLineInput,\n\t\t\t\toutput.characterMapping,\n\t\t\t\toutput.containsRTL,\n\t\t\t\toutput.containsForeignElements\n\t\t\t);\n\t\t}\n\n\t\tthis._renderedViewLine = renderedViewLine;\n\n\t\treturn true;\n\t}\n\n\tpublic layoutLine(lineNumber: number, deltaTop: number): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\tthis._renderedViewLine.domNode.setTop(deltaTop);\n\t\t\tthis._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n\t\t}\n\t}\n\n\t// --- end IVisibleLineData\n\n\tpublic getWidth(): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._renderedViewLine.getWidth();\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this._renderedViewLine.getWidthIsFast();\n\t}\n\n\tpublic needsMonospaceFontCheck(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._renderedViewLine instanceof FastRenderedViewLine);\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tif (this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\treturn this._renderedViewLine.monospaceAssumptionsAreValid();\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic onMonospaceAssumptionsInvalidated(): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\tthis._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n\t\t}\n\t}\n\n\tpublic getVisibleRangesForRange(startColumn: number, endColumn: number, context: DomReadingContext): VisibleRanges | null {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn null;\n\t\t}\n\t\tstartColumn = startColumn | 0; // @perf\n\t\tendColumn = endColumn | 0; // @perf\n\n\t\tstartColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n\t\tendColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n\n\t\tconst stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter | 0; // @perf\n\t\tlet outsideRenderedLine = false;\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\t// This range is obviously not visible\n\t\t\toutsideRenderedLine = true;\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n\t\t\tstartColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\tendColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tconst horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(startColumn, endColumn, context);\n\t\tif (horizontalRanges && horizontalRanges.length > 0) {\n\t\t\treturn new VisibleRanges(outsideRenderedLine, horizontalRanges);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getColumnOfNodeOffset(lineNumber: number, spanNode: HTMLElement, offset: number): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn this._renderedViewLine.getColumnOfNodeOffset(lineNumber, spanNode, offset);\n\t}\n}\n\ninterface IRenderedViewLine {\n\tdomNode: FastDomNode<HTMLElement> | null;\n\treadonly input: RenderLineInput;\n\tgetWidth(): number;\n\tgetWidthIsFast(): boolean;\n\tgetVisibleRangesForRange(startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null;\n\tgetColumnOfNodeOffset(lineNumber: number, spanNode: HTMLElement, offset: number): number;\n}\n\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprivate readonly _characterMapping: CharacterMapping;\n\tprivate readonly _charWidth: number;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._charWidth = renderLineInput.spaceWidth;\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this._getCharPosition(this._characterMapping.length);\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this.domNode) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tconst expectedWidth = this.getWidth();\n\t\tconst actualWidth = (<HTMLSpanElement>this.domNode.domNode.firstChild).offsetWidth;\n\t\tif (Math.abs(expectedWidth - actualWidth) >= 2) {\n\t\t\t// more than 2px off\n\t\t\tconsole.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n\t\t\tmonospaceAssumptionsAreValid = false;\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic toSlowRenderedLine(): RenderedViewLine {\n\t\treturn createRenderedLine(this.domNode, this.input, this._characterMapping, false, ForeignElementType.None);\n\t}\n\n\tpublic getVisibleRangesForRange(startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null {\n\t\tconst startPosition = this._getCharPosition(startColumn);\n\t\tconst endPosition = this._getCharPosition(endColumn);\n\t\treturn [new HorizontalRange(startPosition, endPosition - startPosition)];\n\t}\n\n\tprivate _getCharPosition(column: number): number {\n\t\tconst charOffset = this._characterMapping.getAbsoluteOffsets();\n\t\tif (charOffset.length === 0) {\n\t\t\t// No characters on this line\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.round(this._charWidth * charOffset[column - 1]);\n\t}\n\n\tpublic getColumnOfNodeOffset(lineNumber: number, spanNode: HTMLElement, offset: number): number {\n\t\tconst spanNodeTextContentLength = spanNode.textContent!.length;\n\n\t\tlet spanIndex = -1;\n\t\twhile (spanNode) {\n\t\t\tspanNode = <HTMLElement>spanNode.previousSibling;\n\t\t\tspanIndex++;\n\t\t}\n\n\t\tconst charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\n\t\treturn charOffset + 1;\n\t}\n}\n\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprotected readonly _characterMapping: CharacterMapping;\n\tprivate readonly _isWhitespaceOnly: boolean;\n\tprivate readonly _containsForeignElements: ForeignElementType;\n\tprivate _cachedWidth: number;\n\n\t/**\n\t * This is a map that is used only when the line is guaranteed to have no RTL text.\n\t */\n\tprivate readonly _pixelOffsetCache: Int32Array | null;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsRTL: boolean, containsForeignElements: ForeignElementType) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n\t\tthis._containsForeignElements = containsForeignElements;\n\t\tthis._cachedWidth = -1;\n\n\t\tthis._pixelOffsetCache = null;\n\t\tif (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n\t\t\tthis._pixelOffsetCache = new Int32Array(Math.max(2, this._characterMapping.length + 1));\n\t\t\tfor (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n\t\t\t\tthis._pixelOffsetCache[column] = -1;\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- Reading from the DOM methods\n\n\tprotected _getReadingTarget(myDomNode: FastDomNode<HTMLElement>): HTMLElement {\n\t\treturn <HTMLSpanElement>myDomNode.domNode.firstChild;\n\t}\n\n\t/**\n\t * Width of the line in pixels\n\t */\n\tpublic getWidth(): number {\n\t\tif (!this.domNode) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (this._cachedWidth === -1) {\n\t\t\tthis._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n\t\t}\n\t\treturn this._cachedWidth;\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (this._cachedWidth === -1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Visible ranges for a model range\n\t */\n\tpublic getVisibleRangesForRange(startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null {\n\t\tif (!this.domNode) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is LTR\n\t\t\tconst startOffset = this._readPixelOffset(this.domNode, startColumn, context);\n\t\t\tif (startOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst endOffset = this._readPixelOffset(this.domNode, endColumn, context);\n\t\t\tif (endOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn [new HorizontalRange(startOffset, endOffset - startOffset)];\n\t\t}\n\n\t\treturn this._readVisibleRangesForRange(this.domNode, startColumn, endColumn, context);\n\t}\n\n\tprotected _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null {\n\t\tif (startColumn === endColumn) {\n\t\t\tconst pixelOffset = this._readPixelOffset(domNode, startColumn, context);\n\t\t\tif (pixelOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn [new HorizontalRange(pixelOffset, 0)];\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n\t\t}\n\t}\n\n\tprotected _readPixelOffset(domNode: FastDomNode<HTMLElement>, column: number, context: DomReadingContext): number {\n\t\tif (this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tif (this._containsForeignElements === ForeignElementType.None) {\n\t\t\t\t// We can assume the line is really empty\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.After) {\n\t\t\t\t// We have foreign elements after the (empty) line\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.Before) {\n\t\t\t\t// We have foreign elements before the (empty) line\n\t\t\t\treturn this.getWidth();\n\t\t\t}\n\t\t\t// We have foreign elements before & after the (empty) line\n\t\t\tconst readingTarget = this._getReadingTarget(domNode);\n\t\t\tif (readingTarget.firstChild) {\n\t\t\t\treturn (<HTMLSpanElement>readingTarget.firstChild).offsetWidth;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is LTR\n\n\t\t\tconst cachedPixelOffset = this._pixelOffsetCache[column];\n\t\t\tif (cachedPixelOffset !== -1) {\n\t\t\t\treturn cachedPixelOffset;\n\t\t\t}\n\n\t\t\tconst result = this._actualReadPixelOffset(domNode, column, context);\n\t\t\tthis._pixelOffsetCache[column] = result;\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._actualReadPixelOffset(domNode, column, context);\n\t}\n\n\tprivate _actualReadPixelOffset(domNode: FastDomNode<HTMLElement>, column: number, context: DomReadingContext): number {\n\t\tif (this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context.clientRectDeltaLeft, context.endNode);\n\t\t\tif (!r || r.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn r[0].left;\n\t\t}\n\n\t\tif (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === ForeignElementType.None) {\n\t\t\t// This branch helps in the case of whitespace only lines which have a width set\n\t\t\treturn this.getWidth();\n\t\t}\n\n\t\tconst partData = this._characterMapping.charOffsetToPartData(column - 1);\n\t\tconst partIndex = CharacterMapping.getPartIndex(partData);\n\t\tconst charOffsetInPart = CharacterMapping.getCharIndex(partData);\n\n\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), partIndex, charOffsetInPart, partIndex, charOffsetInPart, context.clientRectDeltaLeft, context.endNode);\n\t\tif (!r || r.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst result = r[0].left;\n\t\tif (this.input.isBasicASCII) {\n\t\t\tconst charOffset = this._characterMapping.getAbsoluteOffsets();\n\t\t\tconst expectedResult = Math.round(this.input.spaceWidth * charOffset[column - 1]);\n\t\t\tif (Math.abs(expectedResult - result) <= 1) {\n\t\t\t\treturn expectedResult;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _readRawVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null {\n\n\t\tif (startColumn === 1 && endColumn === this._characterMapping.length) {\n\t\t\t// This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n\n\t\t\treturn [new HorizontalRange(0, this.getWidth())];\n\t\t}\n\n\t\tconst startPartData = this._characterMapping.charOffsetToPartData(startColumn - 1);\n\t\tconst startPartIndex = CharacterMapping.getPartIndex(startPartData);\n\t\tconst startCharOffsetInPart = CharacterMapping.getCharIndex(startPartData);\n\n\t\tconst endPartData = this._characterMapping.charOffsetToPartData(endColumn - 1);\n\t\tconst endPartIndex = CharacterMapping.getPartIndex(endPartData);\n\t\tconst endCharOffsetInPart = CharacterMapping.getCharIndex(endPartData);\n\n\t\treturn RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startPartIndex, startCharOffsetInPart, endPartIndex, endCharOffsetInPart, context.clientRectDeltaLeft, context.endNode);\n\t}\n\n\t/**\n\t * Returns the column for the text found at a specific offset inside a rendered dom node\n\t */\n\tpublic getColumnOfNodeOffset(lineNumber: number, spanNode: HTMLElement, offset: number): number {\n\t\tconst spanNodeTextContentLength = spanNode.textContent!.length;\n\n\t\tlet spanIndex = -1;\n\t\twhile (spanNode) {\n\t\t\tspanNode = <HTMLElement>spanNode.previousSibling;\n\t\t\tspanIndex++;\n\t\t}\n\n\t\tconst charOffset = this._characterMapping.partDataToCharOffset(spanIndex, spanNodeTextContentLength, offset);\n\t\treturn charOffset + 1;\n\t}\n}\n\nclass WebKitRenderedViewLine extends RenderedViewLine {\n\tprotected override _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, startColumn: number, endColumn: number, context: DomReadingContext): HorizontalRange[] | null {\n\t\tconst output = super._readVisibleRangesForRange(domNode, startColumn, endColumn, context);\n\n\t\tif (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n\t\t\treturn output;\n\t\t}\n\n\t\t// WebKit is buggy and returns an expanded range (to contain words in some cases)\n\t\t// The last client rect is enlarged (I think)\n\t\tif (!this.input.containsRTL) {\n\t\t\t// This is an attempt to patch things up\n\t\t\t// Find position of last column\n\t\t\tconst endPixelOffset = this._readPixelOffset(domNode, endColumn, context);\n\t\t\tif (endPixelOffset !== -1) {\n\t\t\t\tconst lastRange = output[output.length - 1];\n\t\t\t\tif (lastRange.left < endPixelOffset) {\n\t\t\t\t\t// Trim down the width of the last visible range to not go after the last column's position\n\t\t\t\t\tlastRange.width = endPixelOffset - lastRange.left;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nconst createRenderedLine: (domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsRTL: boolean, containsForeignElements: ForeignElementType) => RenderedViewLine = (function () {\n\tif (browser.isWebKit) {\n\t\treturn createWebKitRenderedLine;\n\t}\n\treturn createNormalRenderedLine;\n})();\n\nfunction createWebKitRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsRTL: boolean, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\n\nfunction createNormalRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsRTL: boolean, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\n"]}