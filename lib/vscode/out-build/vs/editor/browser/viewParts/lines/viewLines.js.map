{"version":3,"file":"viewLines.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/lines/viewLines.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./viewLines';\nimport * as platform from 'vs/base/common/platform';\nimport { FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Configuration } from 'vs/editor/browser/config/configuration';\nimport { IVisibleLinesHost, VisibleLinesCollection } from 'vs/editor/browser/view/viewLayer';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { DomReadingContext, ViewLine, ViewLineOptions } from 'vs/editor/browser/viewParts/lines/viewLine';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { IViewLines, LineVisibleRanges, VisibleRanges, HorizontalPosition } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { Viewport } from 'vs/editor/common/viewModel/viewModel';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Constants } from 'vs/base/common/uint';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from 'vs/base/browser/ui/mouseCursor/mouseCursor';\n\nclass LastRenderedData {\n\n\tprivate _currentVisibleRange: Range;\n\n\tconstructor() {\n\t\tthis._currentVisibleRange = new Range(1, 1, 1, 1);\n\t}\n\n\tpublic getCurrentVisibleRange(): Range {\n\t\treturn this._currentVisibleRange;\n\t}\n\n\tpublic setCurrentVisibleRange(currentVisibleRange: Range): void {\n\t\tthis._currentVisibleRange = currentVisibleRange;\n\t}\n}\n\nclass HorizontalRevealRangeRequest {\n\tpublic readonly type = 'range';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly startColumn: number,\n\t\tpublic readonly endColumn: number,\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tthis.minLineNumber = lineNumber;\n\t\tthis.maxLineNumber = lineNumber;\n\t}\n}\n\nclass HorizontalRevealSelectionsRequest {\n\tpublic readonly type = 'selections';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t}\n\t\tthis.minLineNumber = minLineNumber;\n\t\tthis.maxLineNumber = maxLineNumber;\n\t}\n}\n\ntype HorizontalRevealRequest = HorizontalRevealRangeRequest | HorizontalRevealSelectionsRequest;\n\nexport class ViewLines extends ViewPart implements IVisibleLinesHost<ViewLine>, IViewLines {\n\t/**\n\t * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n\t */\n\tprivate static readonly HORIZONTAL_EXTRA_PX = 30;\n\n\tprivate readonly _linesContent: FastDomNode<HTMLElement>;\n\tprivate readonly _textRangeRestingSpot: HTMLElement;\n\tprivate readonly _visibleLines: VisibleLinesCollection<ViewLine>;\n\tprivate readonly domNode: FastDomNode<HTMLElement>;\n\n\t// --- config\n\tprivate _lineHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _isViewportWrapping: boolean;\n\tprivate _revealHorizontalRightPadding: number;\n\tprivate _cursorSurroundingLines: number;\n\tprivate _cursorSurroundingLinesStyle: 'default' | 'all';\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _viewLineOptions: ViewLineOptions;\n\n\t// --- width\n\tprivate _maxLineWidth: number;\n\tprivate readonly _asyncUpdateLineWidths: RunOnceScheduler;\n\tprivate readonly _asyncCheckMonospaceFontAssumptions: RunOnceScheduler;\n\n\tprivate _horizontalRevealRequest: HorizontalRevealRequest | null;\n\tprivate readonly _lastRenderedData: LastRenderedData;\n\n\tconstructor(context: ViewContext, linesContent: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._linesContent = linesContent;\n\t\tthis._textRangeRestingSpot = document.createElement('div');\n\t\tthis._visibleLines = new VisibleLinesCollection(this);\n\t\tthis.domNode = this._visibleLines.domNode;\n\n\t\tconst conf = this._context.configuration;\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ViewLines);\n\t\tthis.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tConfiguration.applyFontInfo(this.domNode, fontInfo);\n\n\t\t// --- width & height\n\t\tthis._maxLineWidth = 0;\n\t\tthis._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n\t\t\tthis._updateLineWidthsSlow();\n\t\t}, 200);\n\t\tthis._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n\t\t\tthis._checkMonospaceFontAssumptions();\n\t\t}, 2000);\n\n\t\tthis._lastRenderedData = new LastRenderedData();\n\n\t\tthis._horizontalRevealRequest = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._asyncUpdateLineWidths.dispose();\n\t\tthis._asyncCheckMonospaceFontAssumptions.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.domNode;\n\t}\n\n\t// ---- begin IVisibleLinesHost\n\n\tpublic createVisibleLine(): ViewLine {\n\t\treturn new ViewLine(this._viewLineOptions);\n\t}\n\n\t// ---- end IVisibleLinesHost\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._visibleLines.onConfigurationChanged(e);\n\t\tif (e.hasChanged(EditorOption.wrappingInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tConfiguration.applyFontInfo(this.domNode, fontInfo);\n\n\t\tthis._onOptionsMaybeChanged();\n\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst conf = this._context.configuration;\n\n\t\tconst newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\t\tif (!this._viewLineOptions.equals(newViewLineOptions)) {\n\t\t\tthis._viewLineOptions = newViewLineOptions;\n\n\t\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tline.onOptionsChanged(this._viewLineOptions);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tlet r = false;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tr = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n\t\t}\n\t\treturn r;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (true/*e.inlineDecorationsChanged*/) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tthis._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tconst shouldRender = this._visibleLines.onFlushed(e);\n\t\tthis._maxLineWidth = 0;\n\t\treturn shouldRender;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn this._visibleLines.onLinesChanged(e);\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn this._visibleLines.onLinesDeleted(e);\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn this._visibleLines.onLinesInserted(e);\n\t}\n\tpublic override onRevealRangeRequest(e: viewEvents.ViewRevealRangeRequestEvent): boolean {\n\t\t// Using the future viewport here in order to handle multiple\n\t\t// incoming reveal range requests that might all desire to be animated\n\t\tconst desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.range, e.selections, e.verticalType);\n\n\t\tif (desiredScrollTop === -1) {\n\t\t\t// marker to abort the reveal range request\n\t\t\treturn false;\n\t\t}\n\n\t\t// validate the new desired scroll top\n\t\tlet newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n\n\t\tif (e.revealHorizontal) {\n\t\t\tif (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n\t\t\t\t// Two or more lines? => scroll to base (That's how you see most of the two lines)\n\t\t\t\tnewScrollPosition = {\n\t\t\t\t\tscrollTop: newScrollPosition.scrollTop,\n\t\t\t\t\tscrollLeft: 0\n\t\t\t\t};\n\t\t\t} else if (e.range) {\n\t\t\t\t// We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t} else if (e.selections && e.selections.length > 0) {\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\n\t\tconst scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n\t\tconst scrollType = (scrollTopDelta <= this._lineHeight ? ScrollType.Immediate : e.scrollType);\n\t\tthis._context.model.setScrollPosition(newScrollPosition, scrollType);\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (this._horizontalRevealRequest && e.scrollLeftChanged) {\n\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\t\tif (this._horizontalRevealRequest && e.scrollTopChanged) {\n\t\t\tconst min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tconst max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tif (e.scrollTop < min || e.scrollTop > max) {\n\t\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n\t\t\t\tthis._horizontalRevealRequest = null;\n\t\t\t}\n\t\t}\n\t\tthis.domNode.setWidth(e.scrollWidth);\n\t\treturn this._visibleLines.onScrollChanged(e) || true;\n\t}\n\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\treturn this._visibleLines.onTokensChanged(e);\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\tthis._context.model.setMaxLineWidth(this._maxLineWidth);\n\t\treturn this._visibleLines.onZonesChanged(e);\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\n\t// ---- end view event handlers\n\n\t// ----------- HELPERS FOR OTHERS\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\tconst viewLineDomNode = this._getViewLineDomNode(spanNode);\n\t\tif (viewLineDomNode === null) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\t\tconst lineNumber = this._getLineNumberFor(viewLineDomNode);\n\n\t\tif (lineNumber === -1) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < 1 || lineNumber > this._context.model.getLineCount()) {\n\t\t\t// lineNumber is outside range\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._context.model.getLineMaxColumn(lineNumber) === 1) {\n\t\t\t// Line is empty\n\t\t\treturn new Position(lineNumber, 1);\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn null;\n\t\t}\n\n\t\tlet column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(lineNumber, spanNode, offset);\n\t\tconst minColumn = this._context.model.getLineMinColumn(lineNumber);\n\t\tif (column < minColumn) {\n\t\t\tcolumn = minColumn;\n\t\t}\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tprivate _getViewLineDomNode(node: HTMLElement | null): HTMLElement | null {\n\t\twhile (node && node.nodeType === 1) {\n\t\t\tif (node.className === ViewLine.CLASS_NAME) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tnode = node.parentElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @returns the line number of this view line dom node.\n\t */\n\tprivate _getLineNumberFor(domNode: HTMLElement): number {\n\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (domNode === line.getDomNode()) {\n\t\t\t\treturn lineNumber;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this._visibleLines.getVisibleLine(lineNumber).getWidth();\n\t}\n\n\tpublic linesVisibleRangesForRange(_range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalEndLineNumber = _range.endLineNumber;\n\t\tconst range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet visibleRanges: LineVisibleRanges[] = [], visibleRangesLen = 0;\n\t\tconst domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\n\t\tlet nextLineModelLineNumber: number = 0;\n\t\tif (includeNewLines) {\n\t\t\tnextLineModelLineNumber = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\n\t\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n\t\t\tconst endColumn = lineNumber === range.endLineNumber ? range.endColumn : this._context.model.getLineMaxColumn(lineNumber);\n\t\t\tconst visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(startColumn, endColumn, domReadingContext);\n\n\t\t\tif (!visibleRangesForLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (includeNewLines && lineNumber < originalEndLineNumber) {\n\t\t\t\tconst currentLineModelLineNumber = nextLineModelLineNumber;\n\t\t\t\tnextLineModelLineNumber = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n\n\t\t\t\tif (currentLineModelLineNumber !== nextLineModelLineNumber) {\n\t\t\t\t\tvisibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, visibleRangesForLine.ranges);\n\t\t}\n\n\t\tif (visibleRangesLen === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn visibleRanges;\n\t}\n\n\tprivate _visibleRangesForLineRange(lineNumber: number, startColumn: number, endColumn: number): VisibleRanges | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(startColumn, endColumn, new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot));\n\t}\n\n\tpublic visibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\tconst visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n\t\tif (!visibleRanges) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n\t}\n\n\t// --- implementation\n\n\tpublic updateLineWidths(): void {\n\t\tthis._updateLineWidths(false);\n\t}\n\n\t/**\n\t * Updates the max line width if it is fast to compute.\n\t * Returns true if all lines were taken into account.\n\t * Returns false if some lines need to be reevaluated (in a slow fashion).\n\t */\n\tprivate _updateLineWidthsFast(): boolean {\n\t\treturn this._updateLineWidths(true);\n\t}\n\n\tprivate _updateLineWidthsSlow(): void {\n\t\tthis._updateLineWidths(false);\n\t}\n\n\tprivate _updateLineWidths(fast: boolean): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\n\t\tlet localMaxLineWidth = 1;\n\t\tlet allWidthsComputed = true;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\n\t\t\tif (fast && !visibleLine.getWidthIsFast()) {\n\t\t\t\t// Cannot compute width in a fast way for this line\n\t\t\t\tallWidthsComputed = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlocalMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth());\n\t\t}\n\n\t\tif (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.model.getLineCount()) {\n\t\t\t// we know the max line width for all the lines\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tthis._ensureMaxLineWidth(localMaxLineWidth);\n\n\t\treturn allWidthsComputed;\n\t}\n\n\tprivate _checkMonospaceFontAssumptions(): void {\n\t\t// Problems with monospace assumptions are more apparent for longer lines,\n\t\t// as small rounding errors start to sum up, so we will select the longest\n\t\t// line for a closer inspection\n\t\tlet longestLineNumber = -1;\n\t\tlet longestWidth = -1;\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\tconst lineWidth = visibleLine.getWidth();\n\t\t\t\tif (lineWidth > longestWidth) {\n\t\t\t\t\tlongestWidth = lineWidth;\n\t\t\t\t\tlongestLineNumber = lineNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (longestLineNumber === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tvisibleLine.onMonospaceAssumptionsInvalidated();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic render(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic renderText(viewportData: ViewportData): void {\n\t\t// (1) render lines - ensures lines are in the DOM\n\t\tthis._visibleLines.renderLines(viewportData);\n\t\tthis._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n\t\tthis.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n\t\tthis.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n\n\t\t// (2) compute horizontal scroll position:\n\t\t//  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n\t\t//  - it might change `scrollWidth` and `scrollLeft`\n\t\tif (this._horizontalRevealRequest) {\n\n\t\t\tconst horizontalRevealRequest = this._horizontalRevealRequest;\n\n\t\t\t// Check that we have the line that contains the horizontal range in the viewport\n\t\t\tif (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n\n\t\t\t\tthis._horizontalRevealRequest = null;\n\n\t\t\t\t// allow `visibleRangesForRange2` to work\n\t\t\t\tthis.onDidRender();\n\n\t\t\t\t// compute new scroll position\n\t\t\t\tconst newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n\n\t\t\t\tif (newScrollLeft) {\n\t\t\t\t\tif (!this._isViewportWrapping) {\n\t\t\t\t\t\t// ensure `scrollWidth` is large enough\n\t\t\t\t\t\tthis._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n\t\t\t\t\t}\n\t\t\t\t\t// set `scrollLeft`\n\t\t\t\t\tthis._context.model.setScrollPosition({\n\t\t\t\t\t\tscrollLeft: newScrollLeft.scrollLeft\n\t\t\t\t\t}, horizontalRevealRequest.scrollType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n\t\tif (!this._updateLineWidthsFast()) {\n\t\t\t// Computing the width of some lines would be slow => delay it\n\t\t\tthis._asyncUpdateLineWidths.schedule();\n\t\t}\n\n\t\tif (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\t\tthis._asyncCheckMonospaceFontAssumptions.schedule();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3) handle scrolling\n\t\tthis._linesContent.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._linesContent.setContain('strict');\n\t\tconst adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n\t\tthis._linesContent.setTop(-adjustedScrollTop);\n\t\tthis._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n\t}\n\n\t// --- width\n\n\tprivate _ensureMaxLineWidth(lineWidth: number): void {\n\t\tconst iLineWidth = Math.ceil(lineWidth);\n\t\tif (this._maxLineWidth < iLineWidth) {\n\t\t\tthis._maxLineWidth = iLineWidth;\n\t\t\tthis._context.model.setMaxLineWidth(this._maxLineWidth);\n\t\t}\n\t}\n\n\tprivate _computeScrollTopToRevealRange(viewport: Viewport, source: string | null | undefined, range: Range | null, selections: Selection[] | null, verticalType: viewEvents.VerticalRevealType): number {\n\t\tconst viewportStartY = viewport.top;\n\t\tconst viewportHeight = viewport.height;\n\t\tconst viewportEndY = viewportStartY + viewportHeight;\n\t\tlet boxIsSingleRange: boolean;\n\t\tlet boxStartY: number;\n\t\tlet boxEndY: number;\n\n\t\t// Have a box that includes one extra line height (for the horizontal scrollbar)\n\t\tif (selections && selections.length > 0) {\n\t\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\t\tconst selection = selections[i];\n\t\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t\t}\n\t\t\tboxIsSingleRange = false;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n\t\t} else if (range) {\n\t\t\tboxIsSingleRange = true;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst shouldIgnoreScrollOff = source === 'mouse' && this._cursorSurroundingLinesStyle === 'default';\n\n\t\tif (!shouldIgnoreScrollOff) {\n\t\t\tconst context = Math.min((viewportHeight / this._lineHeight) / 2, this._cursorSurroundingLines);\n\t\t\tboxStartY -= context * this._lineHeight;\n\t\t\tboxEndY += Math.max(0, (context - 1)) * this._lineHeight;\n\t\t}\n\n\t\tif (verticalType === viewEvents.VerticalRevealType.Simple || verticalType === viewEvents.VerticalRevealType.Bottom) {\n\t\t\t// Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n\t\t\tboxEndY += this._lineHeight;\n\t\t}\n\n\t\tlet newScrollTop: number;\n\n\t\tif (boxEndY - boxStartY > viewportHeight) {\n\t\t\t// the box is larger than the viewport ... scroll to its top\n\t\t\tif (!boxIsSingleRange) {\n\t\t\t\t// do not reveal multiple cursors if there are more than fit the viewport\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tnewScrollTop = boxStartY;\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.NearTop || verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n\t\t\t\tconst desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n\t\t\t\t// Try to scroll just above the box with the desired gap\n\t\t\t\tconst desiredScrollTop = boxStartY - desiredGapAbove;\n\t\t\t\t// But ensure that the box is not pushed out of viewport\n\t\t\t\tconst minScrollTop = boxEndY - viewportHeight;\n\t\t\t\tnewScrollTop = Math.max(minScrollTop, desiredScrollTop);\n\t\t\t}\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.Center || verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// Box is outside the viewport... center it\n\t\t\t\tconst boxMiddleY = (boxStartY + boxEndY) / 2;\n\t\t\t\tnewScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n\t\t\t}\n\t\t} else {\n\t\t\tnewScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === viewEvents.VerticalRevealType.Top, verticalType === viewEvents.VerticalRevealType.Bottom);\n\t\t}\n\n\t\treturn newScrollTop;\n\t}\n\n\tprivate _computeScrollLeftToReveal(horizontalRevealRequest: HorizontalRevealRequest): { scrollLeft: number; maxHorizontalOffset: number; } | null {\n\n\t\tconst viewport = this._context.viewLayout.getCurrentViewport();\n\t\tconst viewportStartX = viewport.left;\n\t\tconst viewportEndX = viewportStartX + viewport.width;\n\n\t\tlet boxStartX = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tlet boxEndX = 0;\n\t\tif (horizontalRevealRequest.type === 'range') {\n\t\t\tconst visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n\t\t\tif (!visibleRanges) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\tboxStartX = Math.min(boxStartX, visibleRange.left);\n\t\t\t\tboxEndX = Math.max(boxEndX, visibleRange.left + visibleRange.width);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const selection of horizontalRevealRequest.selections) {\n\t\t\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n\t\t\t\tif (!visibleRanges) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\t\tboxStartX = Math.min(boxStartX, visibleRange.left);\n\t\t\t\t\tboxEndX = Math.max(boxEndX, visibleRange.left + visibleRange.width);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tboxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n\t\tboxEndX += this._revealHorizontalRightPadding;\n\n\t\tif (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n\t\treturn {\n\t\t\tscrollLeft: newScrollLeft,\n\t\t\tmaxHorizontalOffset: boxEndX\n\t\t};\n\t}\n\n\tprivate _computeMinimumScrolling(viewportStart: number, viewportEnd: number, boxStart: number, boxEnd: number, revealAtStart?: boolean, revealAtEnd?: boolean): number {\n\t\tviewportStart = viewportStart | 0;\n\t\tviewportEnd = viewportEnd | 0;\n\t\tboxStart = boxStart | 0;\n\t\tboxEnd = boxEnd | 0;\n\t\trevealAtStart = !!revealAtStart;\n\t\trevealAtEnd = !!revealAtEnd;\n\n\t\tconst viewportLength = viewportEnd - viewportStart;\n\t\tconst boxLength = boxEnd - boxStart;\n\n\t\tif (boxLength < viewportLength) {\n\t\t\t// The box would fit in the viewport\n\n\t\t\tif (revealAtStart) {\n\t\t\t\treturn boxStart;\n\t\t\t}\n\n\t\t\tif (revealAtEnd) {\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\n\t\t\tif (boxStart < viewportStart) {\n\t\t\t\t// The box is above the viewport\n\t\t\t\treturn boxStart;\n\t\t\t} else if (boxEnd > viewportEnd) {\n\t\t\t\t// The box is below the viewport\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\t\t} else {\n\t\t\t// The box would not fit in the viewport\n\t\t\t// Reveal the beginning of the box\n\t\t\treturn boxStart;\n\t\t}\n\n\t\treturn viewportStart;\n\t}\n}\n"]}