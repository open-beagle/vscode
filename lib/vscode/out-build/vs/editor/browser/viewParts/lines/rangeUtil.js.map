{"version":3,"file":"rangeUtil.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/viewParts/lines/rangeUtil.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAM,oBAAoB;QAMzB,YAAY,IAAY,EAAE,KAAa;YACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;QAEM,QAAQ;YACd,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;QACvC,CAAC;QAEM,MAAM,CAAC,OAAO,CAAC,CAAuB,EAAE,CAAuB;YACrE,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACxB,CAAC;KACD;IAED,MAAa,SAAS;QASb,MAAM,CAAC,YAAY;YAC1B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC9B,CAAC;QAEO,MAAM,CAAC,YAAY,CAAC,KAAY,EAAE,OAAoB;YAC7D,yEAAyE;YACzE,qEAAqE;YACrE,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;QAEO,MAAM,CAAC,gBAAgB,CAAC,YAAkB,EAAE,WAAmB,EAAE,UAAgB,EAAE,SAAiB,EAAE,OAAoB;YACjI,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClC,IAAI;gBACH,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;gBAC1C,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;gBAEpC,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC;aAC9B;YAAC,OAAO,CAAC,EAAE;gBACX,mBAAmB;gBACnB,OAAO,IAAI,CAAC;aACZ;oBAAS;gBACT,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;aAClC;QACF,CAAC;QAEO,MAAM,CAAC,oBAAoB,CAAC,MAA8B;YACjE,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,4BAA4B;gBAC5B,OAAO,CAAC,IAAI,kCAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D;YAED,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAE1C,IAAI,MAAM,GAAsB,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC;YAClD,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9B,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClD,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;gBAE5B,IAAI,QAAQ,GAAG,SAAS,GAAG,GAAG,CAAC,0CAA0C,IAAI,MAAM,EAAE;oBACpF,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,GAAG,OAAO,GAAG,QAAQ,CAAC,CAAC;iBAC7D;qBAAM;oBACN,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,kCAAe,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oBAC/D,QAAQ,GAAG,MAAM,CAAC;oBAClB,SAAS,GAAG,OAAO,CAAC;iBACpB;aACD;YAED,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,kCAAe,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAE/D,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,MAAM,CAAC,sCAAsC,CAAC,WAAgD,EAAE,mBAA2B;YAClI,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,OAAO,IAAI,CAAC;aACZ;YAED,gFAAgF;YAChF,iEAAiE;YAEjE,MAAM,MAAM,GAA2B,EAAE,CAAC;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACvD,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,GAAG,mBAAmB,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;aAC3G;YAED,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC;QAEM,MAAM,CAAC,oBAAoB,CAAC,OAAoB,EAAE,eAAuB,EAAE,WAAmB,EAAE,aAAqB,EAAE,SAAiB,EAAE,mBAA2B,EAAE,OAAoB;YACjM,cAAc;YACd,MAAM,GAAG,GAAG,CAAC,CAAC;YACd,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YACxC,IAAI,GAAG,GAAG,GAAG,EAAE;gBACd,OAAO,IAAI,CAAC;aACZ;YACD,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC;YAChE,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC;YAE5D,IAAI,eAAe,KAAK,aAAa,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,EAAE;gBACzI,yDAAyD;gBACzD,yFAAyF;gBACzF,MAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,cAAc,EAAE,CAAC;gBACvE,OAAO,IAAI,CAAC,sCAAsC,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;aACrF;YAED,kGAAkG;YAClG,+DAA+D;YAC/D,IAAI,eAAe,KAAK,aAAa,EAAE;gBACtC,IAAI,aAAa,GAAG,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;oBACzC,aAAa,EAAE,CAAC;oBAChB,SAAS,0CAAmC,CAAC;iBAC7C;aACD;YAED,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC;YAChE,IAAI,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC;YAE5D,IAAI,CAAC,YAAY,IAAI,CAAC,UAAU,EAAE;gBACjC,6FAA6F;gBAC7F,IAAI,CAAC,YAAY,IAAI,WAAW,KAAK,CAAC,IAAI,eAAe,GAAG,CAAC,EAAE;oBAC9D,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC;oBAChE,WAAW,0CAAmC,CAAC;iBAC/C;gBACD,IAAI,CAAC,UAAU,IAAI,SAAS,KAAK,CAAC,IAAI,aAAa,GAAG,CAAC,EAAE;oBACxD,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC5D,SAAS,0CAAmC,CAAC;iBAC7C;aACD;YAED,IAAI,CAAC,YAAY,IAAI,CAAC,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC;aACZ;YAED,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,WAAY,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;YACnF,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAY,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;YAE7E,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YACrG,OAAO,IAAI,CAAC,sCAAsC,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;QACtF,CAAC;KACD;IAxID,8BAwIC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Constants } from 'vs/base/common/uint';\nimport { HorizontalRange } from 'vs/editor/common/view/renderingContext';\n\nclass FloatHorizontalRange {\n\t_floatHorizontalRangeBrand: void;\n\n\tpublic readonly left: number;\n\tpublic readonly width: number;\n\n\tconstructor(left: number, width: number) {\n\t\tthis.left = left;\n\t\tthis.width = width;\n\t}\n\n\tpublic toString(): string {\n\t\treturn `[${this.left},${this.width}]`;\n\t}\n\n\tpublic static compare(a: FloatHorizontalRange, b: FloatHorizontalRange): number {\n\t\treturn a.left - b.left;\n\t}\n}\n\nexport class RangeUtil {\n\n\t/**\n\t * Reusing the same range here\n\t * because IE is buggy and constantly freezes when using a large number\n\t * of ranges and calling .detach on them\n\t */\n\tprivate static _handyReadyRange: Range;\n\n\tprivate static _createRange(): Range {\n\t\tif (!this._handyReadyRange) {\n\t\t\tthis._handyReadyRange = document.createRange();\n\t\t}\n\t\treturn this._handyReadyRange;\n\t}\n\n\tprivate static _detachRange(range: Range, endNode: HTMLElement): void {\n\t\t// Move range out of the span node, IE doesn't like having many ranges in\n\t\t// the same spot and will act badly for lines containing dashes ('-')\n\t\trange.selectNodeContents(endNode);\n\t}\n\n\tprivate static _readClientRects(startElement: Node, startOffset: number, endElement: Node, endOffset: number, endNode: HTMLElement): ClientRectList | DOMRectList | null {\n\t\tconst range = this._createRange();\n\t\ttry {\n\t\t\trange.setStart(startElement, startOffset);\n\t\t\trange.setEnd(endElement, endOffset);\n\n\t\t\treturn range.getClientRects();\n\t\t} catch (e) {\n\t\t\t// This is life ...\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tthis._detachRange(range, endNode);\n\t\t}\n\t}\n\n\tprivate static _mergeAdjacentRanges(ranges: FloatHorizontalRange[]): HorizontalRange[] {\n\t\tif (ranges.length === 1) {\n\t\t\t// There is nothing to merge\n\t\t\treturn [new HorizontalRange(ranges[0].left, ranges[0].width)];\n\t\t}\n\n\t\tranges.sort(FloatHorizontalRange.compare);\n\n\t\tlet result: HorizontalRange[] = [], resultLen = 0;\n\t\tlet prevLeft = ranges[0].left;\n\t\tlet prevWidth = ranges[0].width;\n\n\t\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\t\tconst range = ranges[i];\n\t\t\tconst myLeft = range.left;\n\t\t\tconst myWidth = range.width;\n\n\t\t\tif (prevLeft + prevWidth + 0.9 /* account for browser's rounding errors*/ >= myLeft) {\n\t\t\t\tprevWidth = Math.max(prevWidth, myLeft + myWidth - prevLeft);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = new HorizontalRange(prevLeft, prevWidth);\n\t\t\t\tprevLeft = myLeft;\n\t\t\t\tprevWidth = myWidth;\n\t\t\t}\n\t\t}\n\n\t\tresult[resultLen++] = new HorizontalRange(prevLeft, prevWidth);\n\n\t\treturn result;\n\t}\n\n\tprivate static _createHorizontalRangesFromClientRects(clientRects: ClientRectList | DOMRectList | null, clientRectDeltaLeft: number): HorizontalRange[] | null {\n\t\tif (!clientRects || clientRects.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We go through FloatHorizontalRange because it has been observed in bi-di text\n\t\t// that the clientRects are not coming in sorted from the browser\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tfor (let i = 0, len = clientRects.length; i < len; i++) {\n\t\t\tconst clientRect = clientRects[i];\n\t\t\tresult[i] = new FloatHorizontalRange(Math.max(0, clientRect.left - clientRectDeltaLeft), clientRect.width);\n\t\t}\n\n\t\treturn this._mergeAdjacentRanges(result);\n\t}\n\n\tpublic static readHorizontalRanges(domNode: HTMLElement, startChildIndex: number, startOffset: number, endChildIndex: number, endOffset: number, clientRectDeltaLeft: number, endNode: HTMLElement): HorizontalRange[] | null {\n\t\t// Panic check\n\t\tconst min = 0;\n\t\tconst max = domNode.children.length - 1;\n\t\tif (min > max) {\n\t\t\treturn null;\n\t\t}\n\t\tstartChildIndex = Math.min(max, Math.max(min, startChildIndex));\n\t\tendChildIndex = Math.min(max, Math.max(min, endChildIndex));\n\n\t\tif (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n\t\t\t// We must find the position at the beginning of a <span>\n\t\t\t// To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n\t\t\tconst clientRects = domNode.children[startChildIndex].getClientRects();\n\t\t\treturn this._createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft);\n\t\t}\n\n\t\t// If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n\t\t// Chrome is buggy and doesn't handle 0 offsets well sometimes.\n\t\tif (startChildIndex !== endChildIndex) {\n\t\t\tif (endChildIndex > 0 && endOffset === 0) {\n\t\t\t\tendChildIndex--;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tlet startElement = domNode.children[startChildIndex].firstChild;\n\t\tlet endElement = domNode.children[endChildIndex].firstChild;\n\n\t\tif (!startElement || !endElement) {\n\t\t\t// When having an empty <span> (without any text content), try to move to the previous <span>\n\t\t\tif (!startElement && startOffset === 0 && startChildIndex > 0) {\n\t\t\t\tstartElement = domNode.children[startChildIndex - 1].firstChild;\n\t\t\t\tstartOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t\tif (!endElement && endOffset === 0 && endChildIndex > 0) {\n\t\t\t\tendElement = domNode.children[endChildIndex - 1].firstChild;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tif (!startElement || !endElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartOffset = Math.min(startElement.textContent!.length, Math.max(0, startOffset));\n\t\tendOffset = Math.min(endElement.textContent!.length, Math.max(0, endOffset));\n\n\t\tconst clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, endNode);\n\t\treturn this._createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft);\n\t}\n}\n"]}