{"version":3,"file":"textAreaState.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/controller/textAreaState.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLinePreference } from 'vs/editor/common/model';\n\nexport const _debugComposition = false;\n\nexport interface ITextAreaWrapper {\n\tgetValue(): string;\n\tsetValue(reason: string, value: string): void;\n\n\tgetSelectionStart(): number;\n\tgetSelectionEnd(): number;\n\tsetSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void;\n}\n\nexport interface ISimpleModel {\n\tgetLineCount(): number;\n\tgetLineMaxColumn(lineNumber: number): number;\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n}\n\nexport interface ITypeData {\n\ttext: string;\n\treplacePrevCharCnt: number;\n\treplaceNextCharCnt: number;\n\tpositionDelta: number;\n}\n\nexport class TextAreaState {\n\n\tpublic static readonly EMPTY = new TextAreaState('', 0, 0, null, null);\n\n\tpublic readonly value: string;\n\tpublic readonly selectionStart: number;\n\tpublic readonly selectionEnd: number;\n\tpublic readonly selectionStartPosition: Position | null;\n\tpublic readonly selectionEndPosition: Position | null;\n\n\tconstructor(value: string, selectionStart: number, selectionEnd: number, selectionStartPosition: Position | null, selectionEndPosition: Position | null) {\n\t\tthis.value = value;\n\t\tthis.selectionStart = selectionStart;\n\t\tthis.selectionEnd = selectionEnd;\n\t\tthis.selectionStartPosition = selectionStartPosition;\n\t\tthis.selectionEndPosition = selectionEndPosition;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '[ <' + this.value + '>, selectionStart: ' + this.selectionStart + ', selectionEnd: ' + this.selectionEnd + ']';\n\t}\n\n\tpublic static readFromTextArea(textArea: ITextAreaWrapper): TextAreaState {\n\t\treturn new TextAreaState(textArea.getValue(), textArea.getSelectionStart(), textArea.getSelectionEnd(), null, null);\n\t}\n\n\tpublic collapseSelection(): TextAreaState {\n\t\treturn new TextAreaState(this.value, this.value.length, this.value.length, null, null);\n\t}\n\n\tpublic writeToTextArea(reason: string, textArea: ITextAreaWrapper, select: boolean): void {\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('writeToTextArea ' + reason + ': ' + this.toString());\n\t\t}\n\t\ttextArea.setValue(reason, this.value);\n\t\tif (select) {\n\t\t\ttextArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n\t\t}\n\t}\n\n\tpublic deduceEditorPosition(offset: number): [Position | null, number, number] {\n\t\tif (offset <= this.selectionStart) {\n\t\t\tconst str = this.value.substring(offset, this.selectionStart);\n\t\t\treturn this._finishDeduceEditorPosition(this.selectionStartPosition, str, -1);\n\t\t}\n\t\tif (offset >= this.selectionEnd) {\n\t\t\tconst str = this.value.substring(this.selectionEnd, offset);\n\t\t\treturn this._finishDeduceEditorPosition(this.selectionEndPosition, str, 1);\n\t\t}\n\t\tconst str1 = this.value.substring(this.selectionStart, offset);\n\t\tif (str1.indexOf(String.fromCharCode(8230)) === -1) {\n\t\t\treturn this._finishDeduceEditorPosition(this.selectionStartPosition, str1, 1);\n\t\t}\n\t\tconst str2 = this.value.substring(offset, this.selectionEnd);\n\t\treturn this._finishDeduceEditorPosition(this.selectionEndPosition, str2, -1);\n\t}\n\n\tprivate _finishDeduceEditorPosition(anchor: Position | null, deltaText: string, signum: number): [Position | null, number, number] {\n\t\tlet lineFeedCnt = 0;\n\t\tlet lastLineFeedIndex = -1;\n\t\twhile ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n\t\t\tlineFeedCnt++;\n\t\t}\n\t\treturn [anchor, signum * deltaText.length, lineFeedCnt];\n\t}\n\n\tpublic static selectedText(text: string): TextAreaState {\n\t\treturn new TextAreaState(text, 0, text.length, null, null);\n\t}\n\n\tpublic static deduceInput(previousState: TextAreaState, currentState: TextAreaState, couldBeEmojiInput: boolean): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceInput');\n\t\t\tconsole.log('PREVIOUS STATE: ' + previousState.toString());\n\t\t\tconsole.log('CURRENT STATE: ' + currentState.toString());\n\t\t}\n\n\t\tlet previousValue = previousState.value;\n\t\tlet previousSelectionStart = previousState.selectionStart;\n\t\tlet previousSelectionEnd = previousState.selectionEnd;\n\t\tlet currentValue = currentState.value;\n\t\tlet currentSelectionStart = currentState.selectionStart;\n\t\tlet currentSelectionEnd = currentState.selectionEnd;\n\n\t\t// Strip the previous suffix from the value (without interfering with the current selection)\n\t\tconst previousSuffix = previousValue.substring(previousSelectionEnd);\n\t\tconst currentSuffix = currentValue.substring(currentSelectionEnd);\n\t\tconst suffixLength = strings.commonSuffixLength(previousSuffix, currentSuffix);\n\t\tcurrentValue = currentValue.substring(0, currentValue.length - suffixLength);\n\t\tpreviousValue = previousValue.substring(0, previousValue.length - suffixLength);\n\n\t\tconst previousPrefix = previousValue.substring(0, previousSelectionStart);\n\t\tconst currentPrefix = currentValue.substring(0, currentSelectionStart);\n\t\tconst prefixLength = strings.commonPrefixLength(previousPrefix, currentPrefix);\n\t\tcurrentValue = currentValue.substring(prefixLength);\n\t\tpreviousValue = previousValue.substring(prefixLength);\n\t\tcurrentSelectionStart -= prefixLength;\n\t\tpreviousSelectionStart -= prefixLength;\n\t\tcurrentSelectionEnd -= prefixLength;\n\t\tpreviousSelectionEnd -= prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('AFTER DIFFING PREVIOUS STATE: <' + previousValue + '>, selectionStart: ' + previousSelectionStart + ', selectionEnd: ' + previousSelectionEnd);\n\t\t\tconsole.log('AFTER DIFFING CURRENT STATE: <' + currentValue + '>, selectionStart: ' + currentSelectionStart + ', selectionEnd: ' + currentSelectionEnd);\n\t\t}\n\n\t\tif (couldBeEmojiInput && currentSelectionStart === currentSelectionEnd && previousValue.length > 0) {\n\t\t\t// on OSX, emojis from the emoji picker are inserted at random locations\n\t\t\t// the only hints we can use is that the selection is immediately after the inserted emoji\n\t\t\t// and that none of the old text has been deleted\n\n\t\t\tlet potentialEmojiInput: string | null = null;\n\n\t\t\tif (currentSelectionStart === currentValue.length) {\n\t\t\t\t// emoji potentially inserted \"somewhere\" after the previous selection => it should appear at the end of `currentValue`\n\t\t\t\tif (currentValue.startsWith(previousValue)) {\n\t\t\t\t\t// only if all of the old text is accounted for\n\t\t\t\t\tpotentialEmojiInput = currentValue.substring(previousValue.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// emoji potentially inserted \"somewhere\" before the previous selection => it should appear at the start of `currentValue`\n\t\t\t\tif (currentValue.endsWith(previousValue)) {\n\t\t\t\t\t// only if all of the old text is accounted for\n\t\t\t\t\tpotentialEmojiInput = currentValue.substring(0, currentValue.length - previousValue.length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (potentialEmojiInput !== null && potentialEmojiInput.length > 0) {\n\t\t\t\t// now we check that this is indeed an emoji\n\t\t\t\t// emojis can grow quite long, so a length check is of no help\n\t\t\t\t// e.g. 1F3F4 E0067 E0062 E0065 E006E E0067 E007F  ; fully-qualified     # 🏴󠁧󠁢󠁥󠁮󠁧󠁿 England\n\n\t\t\t\t// Oftentimes, emojis use Variation Selector-16 (U+FE0F), so that is a good hint\n\t\t\t\t// http://emojipedia.org/variation-selector-16/\n\t\t\t\t// > An invisible codepoint which specifies that the preceding character\n\t\t\t\t// > should be displayed with emoji presentation. Only required if the\n\t\t\t\t// > preceding character defaults to text presentation.\n\t\t\t\tif (/\\uFE0F/.test(potentialEmojiInput) || strings.containsEmoji(potentialEmojiInput)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: potentialEmojiInput,\n\t\t\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\t\t\tpositionDelta: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (currentSelectionStart === currentSelectionEnd) {\n\t\t\t// composition accept case (noticed in FF + Japanese)\n\t\t\t// [blahblah] => blahblah|\n\t\t\tif (\n\t\t\t\tpreviousValue === currentValue\n\t\t\t\t&& previousSelectionStart === 0\n\t\t\t\t&& previousSelectionEnd === previousValue.length\n\t\t\t\t&& currentSelectionStart === currentValue.length\n\t\t\t\t&& currentValue.indexOf('\\n') === -1\n\t\t\t) {\n\t\t\t\tif (strings.containsFullWidthCharacter(currentValue)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\t\t\tpositionDelta: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// no current selection\n\t\t\tconst replacePreviousCharacters = (previousPrefix.length - prefixLength);\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log('REMOVE PREVIOUS: ' + (previousPrefix.length - prefixLength) + ' chars');\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttext: currentValue,\n\t\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\t// there is a current selection => composition case\n\t\tconst replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0\n\t\t};\n\t}\n\n\tpublic static deduceAndroidCompositionInput(previousState: TextAreaState, currentState: TextAreaState): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceAndroidCompositionInput');\n\t\t\tconsole.log('PREVIOUS STATE: ' + previousState.toString());\n\t\t\tconsole.log('CURRENT STATE: ' + currentState.toString());\n\t\t}\n\n\t\tif (previousState.value === currentState.value) {\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: currentState.selectionEnd - previousState.selectionEnd\n\t\t\t};\n\t\t}\n\n\t\tconst prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n\t\tconst suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n\t\tconst previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n\t\tconst currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n\t\tconst previousSelectionStart = previousState.selectionStart - prefixLength;\n\t\tconst previousSelectionEnd = previousState.selectionEnd - prefixLength;\n\t\tconst currentSelectionStart = currentState.selectionStart - prefixLength;\n\t\tconst currentSelectionEnd = currentState.selectionEnd - prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('AFTER DIFFING PREVIOUS STATE: <' + previousValue + '>, selectionStart: ' + previousSelectionStart + ', selectionEnd: ' + previousSelectionEnd);\n\t\t\tconsole.log('AFTER DIFFING CURRENT STATE: <' + currentValue + '>, selectionStart: ' + currentSelectionStart + ', selectionEnd: ' + currentSelectionEnd);\n\t\t}\n\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: previousSelectionEnd,\n\t\t\treplaceNextCharCnt: previousValue.length - previousSelectionEnd,\n\t\t\tpositionDelta: currentSelectionEnd - currentValue.length\n\t\t};\n\t}\n}\n\nexport class PagedScreenReaderStrategy {\n\tprivate static _getPageOfLine(lineNumber: number, linesPerPage: number): number {\n\t\treturn Math.floor((lineNumber - 1) / linesPerPage);\n\t}\n\n\tprivate static _getRangeForPage(page: number, linesPerPage: number): Range {\n\t\tconst offset = page * linesPerPage;\n\t\tconst startLineNumber = offset + 1;\n\t\tconst endLineNumber = offset + linesPerPage;\n\t\treturn new Range(startLineNumber, 1, endLineNumber + 1, 1);\n\t}\n\n\tpublic static fromEditorSelection(previousState: TextAreaState, model: ISimpleModel, selection: Range, linesPerPage: number, trimLongText: boolean): TextAreaState {\n\n\t\tconst selectionStartPage = PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber, linesPerPage);\n\t\tconst selectionStartPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionStartPage, linesPerPage);\n\n\t\tconst selectionEndPage = PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber, linesPerPage);\n\t\tconst selectionEndPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionEndPage, linesPerPage);\n\n\t\tconst pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn))!;\n\t\tlet pretext = model.getValueInRange(pretextRange, EndOfLinePreference.LF);\n\n\t\tconst lastLine = model.getLineCount();\n\t\tconst lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n\t\tconst posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn))!;\n\t\tlet posttext = model.getValueInRange(posttextRange, EndOfLinePreference.LF);\n\n\n\t\tlet text: string;\n\t\tif (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n\t\t\t// take full selection\n\t\t\ttext = model.getValueInRange(selection, EndOfLinePreference.LF);\n\t\t} else {\n\t\t\tconst selectionRange1 = selectionStartPageRange.intersectRanges(selection)!;\n\t\t\tconst selectionRange2 = selectionEndPageRange.intersectRanges(selection)!;\n\t\t\ttext = (\n\t\t\t\tmodel.getValueInRange(selectionRange1, EndOfLinePreference.LF)\n\t\t\t\t+ String.fromCharCode(8230)\n\t\t\t\t+ model.getValueInRange(selectionRange2, EndOfLinePreference.LF)\n\t\t\t);\n\t\t}\n\n\t\t// Chromium handles very poorly text even of a few thousand chars\n\t\t// Cut text to avoid stalling the entire UI\n\t\tif (trimLongText) {\n\t\t\tconst LIMIT_CHARS = 500;\n\t\t\tif (pretext.length > LIMIT_CHARS) {\n\t\t\t\tpretext = pretext.substring(pretext.length - LIMIT_CHARS, pretext.length);\n\t\t\t}\n\t\t\tif (posttext.length > LIMIT_CHARS) {\n\t\t\t\tposttext = posttext.substring(0, LIMIT_CHARS);\n\t\t\t}\n\t\t\tif (text.length > 2 * LIMIT_CHARS) {\n\t\t\t\ttext = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n\t\t\t}\n\t\t}\n\n\t\treturn new TextAreaState(pretext + text + posttext, pretext.length, pretext.length + text.length, new Position(selection.startLineNumber, selection.startColumn), new Position(selection.endLineNumber, selection.endColumn));\n\t}\n}\n"]}