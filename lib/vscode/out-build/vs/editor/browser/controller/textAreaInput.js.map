{"version":3,"file":"textAreaInput.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/controller/textAreaInput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { ITextAreaWrapper, ITypeData, TextAreaState, _debugComposition } from 'vs/editor/browser/controller/textAreaState';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\n\nexport namespace TextAreaSyntethicEvents {\n\texport const Tap = '-monaco-textarea-synthetic-tap';\n}\n\nexport interface ICompositionData {\n\tdata: string;\n}\n\nexport const CopyOptions = {\n\tforceCopyWithSyntaxHighlighting: false\n};\n\nconst enum ReadFromTextArea {\n\tType,\n\tPaste\n}\n\nexport interface IPasteData {\n\ttext: string;\n\tmetadata: ClipboardStoredMetadata | null;\n}\n\nexport interface ClipboardDataToCopy {\n\tisFromEmptySelection: boolean;\n\tmulticursorText: string[] | null | undefined;\n\ttext: string;\n\thtml: string | null | undefined;\n\tmode: string | null;\n}\n\nexport interface ClipboardStoredMetadata {\n\tversion: 1;\n\tisFromEmptySelection: boolean | undefined;\n\tmulticursorText: string[] | null | undefined;\n\tmode: string | null;\n}\n\nexport interface ITextAreaInputHost {\n\tgetDataToCopy(html: boolean): ClipboardDataToCopy;\n\tgetScreenReaderContent(currentState: TextAreaState): TextAreaState;\n\tdeduceModelPosition(viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position;\n}\n\ninterface CompositionEvent extends UIEvent {\n\treadonly data: string;\n\treadonly locale: string;\n}\n\ninterface InMemoryClipboardMetadata {\n\tlastCopiedValue: string;\n\tdata: ClipboardStoredMetadata;\n}\n\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n\tpublic static readonly INSTANCE = new InMemoryClipboardMetadataManager();\n\n\tprivate _lastState: InMemoryClipboardMetadata | null;\n\n\tconstructor() {\n\t\tthis._lastState = null;\n\t}\n\n\tpublic set(lastCopiedValue: string, data: ClipboardStoredMetadata): void {\n\t\tthis._lastState = { lastCopiedValue, data };\n\t}\n\n\tpublic get(pastedText: string): ClipboardStoredMetadata | null {\n\t\tif (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n\t\t\t// match!\n\t\t\treturn this._lastState.data;\n\t\t}\n\t\tthis._lastState = null;\n\t\treturn null;\n\t}\n}\n\nexport interface ICompositionStartEvent {\n\trevealDeltaColumns: number;\n}\n\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nexport class TextAreaInput extends Disposable {\n\n\tprivate _onFocus = this._register(new Emitter<void>());\n\tpublic readonly onFocus: Event<void> = this._onFocus.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\tpublic readonly onBlur: Event<void> = this._onBlur.event;\n\n\tprivate _onKeyDown = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyDown: Event<IKeyboardEvent> = this._onKeyDown.event;\n\n\tprivate _onKeyUp = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyUp: Event<IKeyboardEvent> = this._onKeyUp.event;\n\n\tprivate _onCut = this._register(new Emitter<void>());\n\tpublic readonly onCut: Event<void> = this._onCut.event;\n\n\tprivate _onPaste = this._register(new Emitter<IPasteData>());\n\tpublic readonly onPaste: Event<IPasteData> = this._onPaste.event;\n\n\tprivate _onType = this._register(new Emitter<ITypeData>());\n\tpublic readonly onType: Event<ITypeData> = this._onType.event;\n\n\tprivate _onCompositionStart = this._register(new Emitter<ICompositionStartEvent>());\n\tpublic readonly onCompositionStart: Event<ICompositionStartEvent> = this._onCompositionStart.event;\n\n\tprivate _onCompositionUpdate = this._register(new Emitter<ICompositionData>());\n\tpublic readonly onCompositionUpdate: Event<ICompositionData> = this._onCompositionUpdate.event;\n\n\tprivate _onCompositionEnd = this._register(new Emitter<void>());\n\tpublic readonly onCompositionEnd: Event<void> = this._onCompositionEnd.event;\n\n\tprivate _onSelectionChangeRequest = this._register(new Emitter<Selection>());\n\tpublic readonly onSelectionChangeRequest: Event<Selection> = this._onSelectionChangeRequest.event;\n\n\t// ---\n\n\tprivate readonly _host: ITextAreaInputHost;\n\tprivate readonly _textArea: TextAreaWrapper;\n\tprivate readonly _asyncTriggerCut: RunOnceScheduler;\n\tprivate readonly _asyncFocusGainWriteScreenReaderContent: RunOnceScheduler;\n\n\tprivate _textAreaState: TextAreaState;\n\tprivate _selectionChangeListener: IDisposable | null;\n\n\tprivate _hasFocus: boolean;\n\tprivate _isDoingComposition: boolean;\n\tprivate _nextCommand: ReadFromTextArea;\n\n\tconstructor(host: ITextAreaInputHost, private textArea: FastDomNode<HTMLTextAreaElement>) {\n\t\tsuper();\n\t\tthis._host = host;\n\t\tthis._textArea = this._register(new TextAreaWrapper(textArea));\n\t\tthis._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n\t\tthis._asyncFocusGainWriteScreenReaderContent = this._register(new RunOnceScheduler(() => this.writeScreenReaderContent('asyncFocusGain'), 0));\n\n\t\tthis._textAreaState = TextAreaState.EMPTY;\n\t\tthis._selectionChangeListener = null;\n\t\tthis.writeScreenReaderContent('ctor');\n\n\t\tthis._hasFocus = false;\n\t\tthis._isDoingComposition = false;\n\t\tthis._nextCommand = ReadFromTextArea.Type;\n\n\t\tlet lastKeyDown: IKeyboardEvent | null = null;\n\n\t\tthis._register(dom.addStandardDisposableListener(textArea.domNode, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tif (e.keyCode === KeyCode.KEY_IN_COMPOSITION\n\t\t\t\t|| (this._isDoingComposition && e.keyCode === KeyCode.Backspace)) {\n\t\t\t\t// Stop propagation for keyDown events if the IME is processing key input\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t// Prevent default always for `Esc`, otherwise it will generate a keypress\n\t\t\t\t// See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tlastKeyDown = e;\n\t\t\tthis._onKeyDown.fire(e);\n\t\t}));\n\n\t\tthis._register(dom.addStandardDisposableListener(textArea.domNode, 'keyup', (e: IKeyboardEvent) => {\n\t\t\tthis._onKeyUp.fire(e);\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'compositionstart', (e: CompositionEvent) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionstart]`, e);\n\t\t\t}\n\n\t\t\tif (this._isDoingComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isDoingComposition = true;\n\n\t\t\tif (\n\t\t\t\tplatform.isMacintosh\n\t\t\t\t&& this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n\t\t\t\t&& this._textAreaState.selectionStart > 0\n\t\t\t\t&& this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n\t\t\t) {\n\t\t\t\tconst isArrowKey = (\n\t\t\t\t\tlastKeyDown && lastKeyDown.equals(KeyCode.KEY_IN_COMPOSITION)\n\t\t\t\t\t&& (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')\n\t\t\t\t);\n\t\t\t\tif (isArrowKey || browser.isFirefox) {\n\t\t\t\t\t// Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n\t\t\t\t\t// or long press case on Firefox on macOS\n\t\t\t\t\tif (_debugComposition) {\n\t\t\t\t\t\tconsole.log(`[compositionstart] Handling long press case on macOS + arrow key or Firefox`, e);\n\t\t\t\t\t}\n\t\t\t\t\tthis._textAreaState = new TextAreaState(\n\t\t\t\t\t\tthis._textAreaState.value,\n\t\t\t\t\t\tthis._textAreaState.selectionStart - 1,\n\t\t\t\t\t\tthis._textAreaState.selectionEnd,\n\t\t\t\t\t\tthis._textAreaState.selectionStartPosition ? new Position(this._textAreaState.selectionStartPosition.lineNumber, this._textAreaState.selectionStartPosition.column - 1) : null,\n\t\t\t\t\t\tthis._textAreaState.selectionEndPosition\n\t\t\t\t\t);\n\t\t\t\t\tthis._onCompositionStart.fire({ revealDeltaColumns: -1 });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (browser.isAndroid) {\n\t\t\t\t// when tapping on the editor, Android enters composition mode to edit the current word\n\t\t\t\t// so we cannot clear the textarea on Android and we must pretend the current word was selected\n\t\t\t\tthis._onCompositionStart.fire({ revealDeltaColumns: -this._textAreaState.selectionStart });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._setAndWriteTextAreaState('compositionstart', TextAreaState.EMPTY);\n\t\t\tthis._onCompositionStart.fire({ revealDeltaColumns: 0 });\n\t\t}));\n\n\t\t/**\n\t\t * Deduce the typed input from a text area's value and the last observed state.\n\t\t */\n\t\tconst deduceInputFromTextAreaValue = (couldBeEmojiInput: boolean): [TextAreaState, ITypeData] => {\n\t\t\tconst oldState = this._textAreaState;\n\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea);\n\t\t\treturn [newState, TextAreaState.deduceInput(oldState, newState, couldBeEmojiInput)];\n\t\t};\n\n\t\tconst deduceAndroidCompositionInput = (): [TextAreaState, ITypeData] => {\n\t\t\tconst oldState = this._textAreaState;\n\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea);\n\t\t\treturn [newState, TextAreaState.deduceAndroidCompositionInput(oldState, newState)];\n\t\t};\n\n\t\t/**\n\t\t * Deduce the composition input from a string.\n\t\t */\n\t\tconst deduceComposition = (text: string): [TextAreaState, ITypeData] => {\n\t\t\tconst oldState = this._textAreaState;\n\t\t\tconst newState = TextAreaState.selectedText(text);\n\t\t\tconst typeInput: ITypeData = {\n\t\t\t\ttext: newState.value,\n\t\t\t\treplacePrevCharCnt: oldState.selectionEnd - oldState.selectionStart,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t\treturn [newState, typeInput];\n\t\t};\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'compositionupdate', (e: CompositionEvent) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionupdate]`, e);\n\t\t\t}\n\t\t\tif (browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst [newState, typeInput] = deduceAndroidCompositionInput();\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst [newState, typeInput] = deduceComposition(e.data || '');\n\t\t\tthis._textAreaState = newState;\n\t\t\tthis._onType.fire(typeInput);\n\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'compositionend', (e: CompositionEvent) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionend]`, e);\n\t\t\t}\n\t\t\t// https://github.com/microsoft/monaco-editor/issues/1663\n\t\t\t// On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n\t\t\tif (!this._isDoingComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isDoingComposition = false;\n\n\t\t\tif (browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst [newState, typeInput] = deduceAndroidCompositionInput();\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [newState, typeInput] = deduceComposition(e.data || '');\n\t\t\tthis._textAreaState = newState;\n\t\t\tthis._onType.fire(typeInput);\n\n\t\t\t// isChrome: the textarea is not updated correctly when composition ends\n\t\t\t// isFirefox: the textarea is not updated correctly after inserting emojis\n\t\t\t// => we cannot assume the text at the end consists only of the composited text\n\t\t\tif (browser.isChrome || browser.isFirefox) {\n\t\t\t\tthis._textAreaState = TextAreaState.readFromTextArea(this._textArea);\n\t\t\t}\n\n\t\t\tthis._onCompositionEnd.fire();\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'input', () => {\n\t\t\t// Pretend here we touched the text area, as the `input` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received input event');\n\n\t\t\tif (this._isDoingComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [newState, typeInput] = deduceInputFromTextAreaValue(/*couldBeEmojiInput*/platform.isMacintosh);\n\t\t\tif (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1 && strings.isHighSurrogate(typeInput.text.charCodeAt(0))) {\n\t\t\t\t// Ignore invalid input but keep it around for next time\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._textAreaState = newState;\n\t\t\tif (this._nextCommand === ReadFromTextArea.Type) {\n\t\t\t\tif (typeInput.text !== '' || typeInput.replacePrevCharCnt !== 0) {\n\t\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeInput.text !== '' || typeInput.replacePrevCharCnt !== 0) {\n\t\t\t\t\tthis._firePaste(typeInput.text, null);\n\t\t\t\t}\n\t\t\t\tthis._nextCommand = ReadFromTextArea.Type;\n\t\t\t}\n\t\t}));\n\n\t\t// --- Clipboard operations\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'cut', (e: ClipboardEvent) => {\n\t\t\t// Pretend here we touched the text area, as the `cut` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received cut event');\n\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis._asyncTriggerCut.schedule();\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'copy', (e: ClipboardEvent) => {\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'paste', (e: ClipboardEvent) => {\n\t\t\t// Pretend here we touched the text area, as the `paste` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received paste event');\n\n\t\t\tif (ClipboardEventUtils.canUseTextData(e)) {\n\t\t\t\tconst [pastePlainText, metadata] = ClipboardEventUtils.getTextData(e);\n\t\t\t\tif (pastePlainText !== '') {\n\t\t\t\t\tthis._firePaste(pastePlainText, metadata);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._textArea.getSelectionStart() !== this._textArea.getSelectionEnd()) {\n\t\t\t\t\t// Clean up the textarea, to get a clean paste\n\t\t\t\t\tthis._setAndWriteTextAreaState('paste', TextAreaState.EMPTY);\n\t\t\t\t}\n\t\t\t\tthis._nextCommand = ReadFromTextArea.Paste;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'focus', () => {\n\t\t\tconst hadFocus = this._hasFocus;\n\n\t\t\tthis._setHasFocus(true);\n\n\t\t\tif (browser.isSafari && !hadFocus && this._hasFocus) {\n\t\t\t\t// When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n\t\t\t\t// Safari will always move the selection at offset 0 in the textarea\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, 'blur', () => {\n\t\t\tif (this._isDoingComposition) {\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/112621\n\t\t\t\t// where compositionend is not triggered when the editor\n\t\t\t\t// is taken off-dom during a composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._isDoingComposition = false;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeScreenReaderContent('blurWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t\tthis._setHasFocus(false);\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(textArea.domNode, TextAreaSyntethicEvents.Tap, () => {\n\t\t\tif (browser.isAndroid && this._isDoingComposition) {\n\t\t\t\t// on Android, tapping does not cancel the current composition, so the\n\t\t\t\t// textarea is stuck showing the old composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._isDoingComposition = false;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeScreenReaderContent('tapWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _installSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event.\n\t\t//\n\t\t// The `selectionchange` event appears to be emitted under numerous other circumstances,\n\t\t// so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n\t\t// using a Braille display from all the other cases.\n\t\t//\n\t\t// The problems with the `selectionchange` event are:\n\t\t//  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n\t\t//  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n\t\t//  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n\t\t//  * the event is emitted when tabbing into the textarea\n\t\t//  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n\t\t//  * the event sometimes comes in bursts for a single logical textarea operation\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn dom.addDisposableListener(document, 'selectionchange', (e) => {\n\t\t\tif (!this._hasFocus) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._isDoingComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!browser.isChrome) {\n\t\t\t\t// Support only for Chrome until testing happens on other browsers\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst now = Date.now();\n\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n\t\t\tthis._textArea.resetSelectionChangeTime();\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the textarea\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textAreaState.selectionStartPosition || !this._textAreaState.selectionEndPosition) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = this._textArea.getValue();\n\t\t\tif (this._textAreaState.value !== newValue) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newSelectionStart = this._textArea.getSelectionStart();\n\t\t\tconst newSelectionEnd = this._textArea.getSelectionEnd();\n\t\t\tif (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n\t\t\t\t// Nothing to do...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n\t\t\tconst newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0]!, _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n\n\t\t\tconst _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n\t\t\tconst newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0]!, _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n\n\t\t\tconst newSelection = new Selection(\n\t\t\t\tnewSelectionStartPosition.lineNumber, newSelectionStartPosition.column,\n\t\t\t\tnewSelectionEndPosition.lineNumber, newSelectionEndPosition.column\n\t\t\t);\n\n\t\t\tthis._onSelectionChangeRequest.fire(newSelection);\n\t\t});\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t}\n\n\tpublic focusTextArea(): void {\n\t\t// Setting this._hasFocus and writing the screen reader content\n\t\t// will result in a focus() and setSelectionRange() in the textarea\n\t\tthis._setHasFocus(true);\n\n\t\t// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._hasFocus;\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tconst shadowRoot = dom.getShadowRoot(this.textArea.domNode);\n\t\tif (shadowRoot) {\n\t\t\tthis._setHasFocus(shadowRoot.activeElement === this.textArea.domNode);\n\t\t} else if (dom.isInDOM(this.textArea.domNode)) {\n\t\t\tthis._setHasFocus(document.activeElement === this.textArea.domNode);\n\t\t} else {\n\t\t\tthis._setHasFocus(false);\n\t\t}\n\t}\n\n\tprivate _setHasFocus(newHasFocus: boolean): void {\n\t\tif (this._hasFocus === newHasFocus) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._hasFocus = newHasFocus;\n\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t\tif (this._hasFocus) {\n\t\t\tthis._selectionChangeListener = this._installSelectionChangeListener();\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis.writeScreenReaderContent('focusgain');\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis._onFocus.fire();\n\t\t} else {\n\t\t\tthis._onBlur.fire();\n\t\t}\n\t}\n\n\tprivate _setAndWriteTextAreaState(reason: string, textAreaState: TextAreaState): void {\n\t\tif (!this._hasFocus) {\n\t\t\ttextAreaState = textAreaState.collapseSelection();\n\t\t}\n\n\t\ttextAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n\t\tthis._textAreaState = textAreaState;\n\t}\n\n\tpublic writeScreenReaderContent(reason: string): void {\n\t\tif (this._isDoingComposition) {\n\t\t\t// Do not write to the text area when doing composition\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent(this._textAreaState));\n\t}\n\n\tprivate _ensureClipboardGetsEditorSelection(e: ClipboardEvent): void {\n\t\tconst dataToCopy = this._host.getDataToCopy(ClipboardEventUtils.canUseTextData(e));\n\t\tconst storedMetadata: ClipboardStoredMetadata = {\n\t\t\tversion: 1,\n\t\t\tisFromEmptySelection: dataToCopy.isFromEmptySelection,\n\t\t\tmulticursorText: dataToCopy.multicursorText,\n\t\t\tmode: dataToCopy.mode\n\t\t};\n\t\tInMemoryClipboardMetadataManager.INSTANCE.set(\n\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t(browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text),\n\t\t\tstoredMetadata\n\t\t);\n\n\t\tif (!ClipboardEventUtils.canUseTextData(e)) {\n\t\t\t// Looks like an old browser. The strategy is to place the text\n\t\t\t// we'd like to be copied to the clipboard in the textarea and select it.\n\t\t\tthis._setAndWriteTextAreaState('copy or cut', TextAreaState.selectedText(dataToCopy.text));\n\t\t\treturn;\n\t\t}\n\n\t\tClipboardEventUtils.setTextData(e, dataToCopy.text, dataToCopy.html, storedMetadata);\n\t}\n\n\tprivate _firePaste(text: string, metadata: ClipboardStoredMetadata | null): void {\n\t\tif (!metadata) {\n\t\t\t// try the in-memory store\n\t\t\tmetadata = InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\t\t}\n\t\tthis._onPaste.fire({\n\t\t\ttext: text,\n\t\t\tmetadata: metadata\n\t\t});\n\t}\n}\n\nclass ClipboardEventUtils {\n\n\tpublic static canUseTextData(e: ClipboardEvent): boolean {\n\t\tif (e.clipboardData) {\n\t\t\treturn true;\n\t\t}\n\t\tif ((<any>window).clipboardData) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTextData(e: ClipboardEvent): [string, ClipboardStoredMetadata | null] {\n\t\tif (e.clipboardData) {\n\t\t\te.preventDefault();\n\n\t\t\tconst text = e.clipboardData.getData('text/plain');\n\t\t\tlet metadata: ClipboardStoredMetadata | null = null;\n\t\t\tconst rawmetadata = e.clipboardData.getData('vscode-editor-data');\n\t\t\tif (typeof rawmetadata === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tmetadata = <ClipboardStoredMetadata>JSON.parse(rawmetadata);\n\t\t\t\t\tif (metadata.version !== 1) {\n\t\t\t\t\t\tmetadata = null;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// no problem!\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [text, metadata];\n\t\t}\n\n\t\tif ((<any>window).clipboardData) {\n\t\t\te.preventDefault();\n\t\t\tconst text: string = (<any>window).clipboardData.getData('Text');\n\t\t\treturn [text, null];\n\t\t}\n\n\t\tthrow new Error('ClipboardEventUtils.getTextData: Cannot use text data!');\n\t}\n\n\tpublic static setTextData(e: ClipboardEvent, text: string, html: string | null | undefined, metadata: ClipboardStoredMetadata): void {\n\t\tif (e.clipboardData) {\n\t\t\te.clipboardData.setData('text/plain', text);\n\t\t\tif (typeof html === 'string') {\n\t\t\t\te.clipboardData.setData('text/html', html);\n\t\t\t}\n\t\t\te.clipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ((<any>window).clipboardData) {\n\t\t\t(<any>window).clipboardData.setData('Text', text);\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthrow new Error('ClipboardEventUtils.setTextData: Cannot use text data!');\n\t}\n}\n\nclass TextAreaWrapper extends Disposable implements ITextAreaWrapper {\n\n\tprivate readonly _actual: FastDomNode<HTMLTextAreaElement>;\n\tprivate _ignoreSelectionChangeTime: number;\n\n\tconstructor(_textArea: FastDomNode<HTMLTextAreaElement>) {\n\t\tsuper();\n\t\tthis._actual = _textArea;\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t}\n\n\tpublic setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tpublic getIgnoreSelectionChangeTime(): number {\n\t\treturn this._ignoreSelectionChangeTime;\n\t}\n\n\tpublic resetSelectionChangeTime(): void {\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t}\n\n\tpublic getValue(): string {\n\t\t// console.log('current value: ' + this._textArea.value);\n\t\treturn this._actual.domNode.value;\n\t}\n\n\tpublic setValue(reason: string, value: string): void {\n\t\tconst textArea = this._actual.domNode;\n\t\tif (textArea.value === value) {\n\t\t\t// No change\n\t\t\treturn;\n\t\t}\n\t\t// console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n\t\tthis.setIgnoreSelectionChangeTime('setValue');\n\t\ttextArea.value = value;\n\t}\n\n\tpublic getSelectionStart(): number {\n\t\treturn this._actual.domNode.selectionDirection === 'backward' ? this._actual.domNode.selectionEnd : this._actual.domNode.selectionStart;\n\t}\n\n\tpublic getSelectionEnd(): number {\n\t\treturn this._actual.domNode.selectionDirection === 'backward' ? this._actual.domNode.selectionStart : this._actual.domNode.selectionEnd;\n\t}\n\n\tpublic setSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void {\n\t\tconst textArea = this._actual.domNode;\n\n\t\tlet activeElement: Element | null = null;\n\t\tconst shadowRoot = dom.getShadowRoot(textArea);\n\t\tif (shadowRoot) {\n\t\t\tactiveElement = shadowRoot.activeElement;\n\t\t} else {\n\t\t\tactiveElement = document.activeElement;\n\t\t}\n\n\t\tconst currentIsFocused = (activeElement === textArea);\n\t\tconst currentSelectionStart = textArea.selectionStart;\n\t\tconst currentSelectionEnd = textArea.selectionEnd;\n\n\t\tif (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n\t\t\t// No change\n\t\t\t// Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n\t\t\tif (browser.isFirefox && window.parent !== window) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n\n\t\tif (currentIsFocused) {\n\t\t\t// No need to focus, only need to change the selection range\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tif (browser.isFirefox && window.parent !== window) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n\t\t// Here, we try to undo the browser's desperate reveal.\n\t\ttry {\n\t\t\tconst scrollState = dom.saveParentsScrollTop(textArea);\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.focus();\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tdom.restoreParentsScrollTop(textArea, scrollState);\n\t\t} catch (e) {\n\t\t\t// Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n\t\t}\n\t}\n}\n"]}