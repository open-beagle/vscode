{"version":3,"sources":["vs/editor/browser/controller/coreCommands.ts"],"names":[],"mappings":"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","file":"coreCommands.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { isFirefox } from 'vs/base/browser/browser';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as types from 'vs/base/common/types';\nimport { status } from 'vs/base/browser/ui/aria/aria';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Command, EditorCommand, ICommandOptions, registerEditorCommand, MultiCommand, UndoCommand, RedoCommand, SelectAllCommand } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { ColumnSelection, IColumnSelectResult } from 'vs/editor/common/controller/cursorColumnSelection';\nimport { CursorState, EditOperationType, IColumnSelectData, PartialCursorState } from 'vs/editor/common/controller/cursorCommon';\nimport { DeleteOperations } from 'vs/editor/common/controller/cursorDeleteOperations';\nimport { CursorChangeReason } from 'vs/editor/common/controller/cursorEvents';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from 'vs/editor/common/controller/cursorMoveCommands';\nimport { TypeOperations } from 'vs/editor/common/controller/cursorTypeOperations';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Handler, ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { VerticalRevealType } from 'vs/editor/common/view/viewEvents';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight, KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IViewModel } from 'vs/editor/common/viewModel/viewModel';\n\nconst CORE_WEIGHT = KeybindingWeight.EditorCore;\n\nexport abstract class CoreEditorCommand extends EditorCommand {\n\tpublic runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): void {\n\t\tconst viewModel = editor._getViewModel();\n\t\tif (!viewModel) {\n\t\t\t// the editor has no view => has no cursors\n\t\t\treturn;\n\t\t}\n\t\tthis.runCoreEditorCommand(viewModel, args || {});\n\t}\n\n\tpublic abstract runCoreEditorCommand(viewModel: IViewModel, args: any): void;\n}\n\nexport namespace EditorScroll_ {\n\n\tconst isEditorScrollArgs = function (arg: any): boolean {\n\t\tif (!types.isObject(arg)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst scrollArg: RawArguments = arg;\n\n\t\tif (!types.isString(scrollArg.to)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\texport const description = <ICommandHandlerDescription>{\n\t\tdescription: 'Scroll editor in the given direction',\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'Editor scroll argument object',\n\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t`,\n\t\t\t\tconstraint: isEditorScrollArgs,\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['to'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'to': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['up', 'down']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'by': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['line', 'wrappedLine', 'page', 'halfPage']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'revealCursor': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\t/**\n\t * Directions in the view for editor scroll command.\n\t */\n\texport const RawDirection = {\n\t\tUp: 'up',\n\t\tDown: 'down',\n\t};\n\n\t/**\n\t * Units for editor scroll 'by' argument\n\t */\n\texport const RawUnit = {\n\t\tLine: 'line',\n\t\tWrappedLine: 'wrappedLine',\n\t\tPage: 'page',\n\t\tHalfPage: 'halfPage'\n\t};\n\n\t/**\n\t * Arguments for editor scroll command\n\t */\n\texport interface RawArguments {\n\t\tto: string;\n\t\tby?: string;\n\t\tvalue?: number;\n\t\trevealCursor?: boolean;\n\t\tselect?: boolean;\n\t}\n\n\texport function parse(args: RawArguments): ParsedArguments | null {\n\t\tlet direction: Direction;\n\t\tswitch (args.to) {\n\t\t\tcase RawDirection.Up:\n\t\t\t\tdirection = Direction.Up;\n\t\t\t\tbreak;\n\t\t\tcase RawDirection.Down:\n\t\t\t\tdirection = Direction.Down;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Illegal arguments\n\t\t\t\treturn null;\n\t\t}\n\n\t\tlet unit: Unit;\n\t\tswitch (args.by) {\n\t\t\tcase RawUnit.Line:\n\t\t\t\tunit = Unit.Line;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.WrappedLine:\n\t\t\t\tunit = Unit.WrappedLine;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.Page:\n\t\t\t\tunit = Unit.Page;\n\t\t\t\tbreak;\n\t\t\tcase RawUnit.HalfPage:\n\t\t\t\tunit = Unit.HalfPage;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tunit = Unit.WrappedLine;\n\t\t}\n\n\t\tconst value = Math.floor(args.value || 1);\n\t\tconst revealCursor = !!args.revealCursor;\n\n\t\treturn {\n\t\t\tdirection: direction,\n\t\t\tunit: unit,\n\t\t\tvalue: value,\n\t\t\trevealCursor: revealCursor,\n\t\t\tselect: (!!args.select)\n\t\t};\n\t}\n\n\texport interface ParsedArguments {\n\t\tdirection: Direction;\n\t\tunit: Unit;\n\t\tvalue: number;\n\t\trevealCursor: boolean;\n\t\tselect: boolean;\n\t}\n\n\texport const enum Direction {\n\t\tUp = 1,\n\t\tDown = 2\n\t}\n\n\texport const enum Unit {\n\t\tLine = 1,\n\t\tWrappedLine = 2,\n\t\tPage = 3,\n\t\tHalfPage = 4\n\t}\n}\n\nexport namespace RevealLine_ {\n\n\tconst isRevealLineArgs = function (arg: any): boolean {\n\t\tif (!types.isObject(arg)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst reveaLineArg: RawArguments = arg;\n\n\t\tif (!types.isNumber(reveaLineArg.lineNumber) && !types.isString(reveaLineArg.lineNumber)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\texport const description = <ICommandHandlerDescription>{\n\t\tdescription: 'Reveal the given line at the given logical position',\n\t\targs: [\n\t\t\t{\n\t\t\t\tname: 'Reveal line argument object',\n\t\t\t\tdescription: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t`,\n\t\t\t\tconstraint: isRevealLineArgs,\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['lineNumber'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'lineNumber': {\n\t\t\t\t\t\t\t'type': ['number', 'string'],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'at': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['top', 'center', 'bottom']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\t/**\n\t * Arguments for reveal line command\n\t */\n\texport interface RawArguments {\n\t\tlineNumber?: number | string;\n\t\tat?: string;\n\t}\n\n\t/**\n\t * Values for reveal line 'at' argument\n\t */\n\texport const RawAtArgument = {\n\t\tTop: 'top',\n\t\tCenter: 'center',\n\t\tBottom: 'bottom'\n\t};\n}\n\nabstract class EditorOrNativeTextInputCommand {\n\n\tconstructor(target: MultiCommand) {\n\t\t// 1. handle case when focus is in editor.\n\t\ttarget.addImplementation(10000, 'code-editor', (accessor: ServicesAccessor, args: any) => {\n\t\t\t// Only if editor text focus (i.e. not if editor has widget focus).\n\t\t\tconst focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\t\tif (focusedEditor && focusedEditor.hasTextFocus()) {\n\t\t\t\treturn this._runEditorCommand(accessor, focusedEditor, args);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t// 2. handle case when focus is in some other `input` / `textarea`.\n\t\ttarget.addImplementation(1000, 'generic-dom-input-textarea', (accessor: ServicesAccessor, args: any) => {\n\t\t\t// Only if focused on an element that allows for entering text\n\t\t\tconst activeElement = <HTMLElement>document.activeElement;\n\t\t\tif (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n\t\t\t\tthis.runDOMCommand();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t// 3. (default) handle case when focus is somewhere else.\n\t\ttarget.addImplementation(0, 'generic-dom', (accessor: ServicesAccessor, args: any) => {\n\t\t\t// Redirecting to active editor\n\t\t\tconst activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n\t\t\tif (activeEditor) {\n\t\t\t\tactiveEditor.focus();\n\t\t\t\treturn this._runEditorCommand(accessor, activeEditor, args);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tpublic _runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): boolean | Promise<void> {\n\t\tconst result = this.runEditorCommand(accessor, editor, args);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic abstract runDOMCommand(): void;\n\tpublic abstract runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): void | Promise<void>;\n}\n\nexport namespace CoreNavigationCommands {\n\n\tclass BaseMoveToCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n\t\t\t\t]\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const MoveTo: CoreEditorCommand = registerEditorCommand(new BaseMoveToCommand({\n\t\tid: '_moveTo',\n\t\tinSelectionMode: false,\n\t\tprecondition: undefined\n\t}));\n\n\texport const MoveToSelect: CoreEditorCommand = registerEditorCommand(new BaseMoveToCommand({\n\t\tid: '_moveToSelect',\n\t\tinSelectionMode: true,\n\t\tprecondition: undefined\n\t}));\n\n\tabstract class ColumnSelectCommand extends CoreEditorCommand {\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tconst result = this._getColumnSelectResult(viewModel, viewModel.getPrimaryCursorState(), viewModel.getCursorColumnSelectData(), args);\n\t\t\tviewModel.setCursorStates(args.source, CursorChangeReason.Explicit, result.viewStates.map((viewState) => CursorState.fromViewState(viewState)));\n\t\t\tviewModel.setCursorColumnSelectData({\n\t\t\t\tisReal: true,\n\t\t\t\tfromViewLineNumber: result.fromLineNumber,\n\t\t\t\tfromViewVisualColumn: result.fromVisualColumn,\n\t\t\t\ttoViewLineNumber: result.toLineNumber,\n\t\t\t\ttoViewVisualColumn: result.toVisualColumn\n\t\t\t});\n\t\t\tif (result.reversed) {\n\t\t\t\tviewModel.revealTopMostCursor(args.source);\n\t\t\t} else {\n\t\t\t\tviewModel.revealBottomMostCursor(args.source);\n\t\t\t}\n\t\t}\n\n\t\tprotected abstract _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult;\n\n\t}\n\n\texport const ColumnSelect: CoreEditorCommand = registerEditorCommand(new class extends ColumnSelectCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'columnSelect',\n\t\t\t\tprecondition: undefined\n\t\t\t});\n\t\t}\n\n\t\tprotected _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult {\n\n\t\t\t// validate `args`\n\t\t\tconst validatedPosition = viewModel.model.validatePosition(args.position);\n\t\t\tconst validatedViewPosition = viewModel.coordinatesConverter.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n\n\t\t\tlet fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n\t\t\tlet fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n\t\t\treturn ColumnSelection.columnSelect(viewModel.cursorConfig, viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n\t\t}\n\t});\n\n\texport const CursorColumnSelectLeft: CoreEditorCommand = registerEditorCommand(new class extends ColumnSelectCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'cursorColumnSelectLeft',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\t\tlinux: { primary: 0 }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprotected _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult {\n\t\t\treturn ColumnSelection.columnSelectLeft(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n\t\t}\n\t});\n\n\texport const CursorColumnSelectRight: CoreEditorCommand = registerEditorCommand(new class extends ColumnSelectCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'cursorColumnSelectRight',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\t\tlinux: { primary: 0 }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprotected _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult {\n\t\t\treturn ColumnSelection.columnSelectRight(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n\t\t}\n\t});\n\n\tclass ColumnSelectUpCommand extends ColumnSelectCommand {\n\n\t\tprivate readonly _isPaged: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { isPaged: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._isPaged = opts.isPaged;\n\t\t}\n\n\t\tprotected _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult {\n\t\t\treturn ColumnSelection.columnSelectUp(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n\t\t}\n\t}\n\n\texport const CursorColumnSelectUp: CoreEditorCommand = registerEditorCommand(new ColumnSelectUpCommand({\n\t\tisPaged: false,\n\t\tid: 'cursorColumnSelectUp',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.UpArrow,\n\t\t\tlinux: { primary: 0 }\n\t\t}\n\t}));\n\n\texport const CursorColumnSelectPageUp: CoreEditorCommand = registerEditorCommand(new ColumnSelectUpCommand({\n\t\tisPaged: true,\n\t\tid: 'cursorColumnSelectPageUp',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.PageUp,\n\t\t\tlinux: { primary: 0 }\n\t\t}\n\t}));\n\n\tclass ColumnSelectDownCommand extends ColumnSelectCommand {\n\n\t\tprivate readonly _isPaged: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { isPaged: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._isPaged = opts.isPaged;\n\t\t}\n\n\t\tprotected _getColumnSelectResult(viewModel: IViewModel, primary: CursorState, prevColumnSelectData: IColumnSelectData, args: any): IColumnSelectResult {\n\t\t\treturn ColumnSelection.columnSelectDown(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n\t\t}\n\t}\n\n\texport const CursorColumnSelectDown: CoreEditorCommand = registerEditorCommand(new ColumnSelectDownCommand({\n\t\tisPaged: false,\n\t\tid: 'cursorColumnSelectDown',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.DownArrow,\n\t\t\tlinux: { primary: 0 }\n\t\t}\n\t}));\n\n\texport const CursorColumnSelectPageDown: CoreEditorCommand = registerEditorCommand(new ColumnSelectDownCommand({\n\t\tisPaged: true,\n\t\tid: 'cursorColumnSelectPageDown',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.PageDown,\n\t\t\tlinux: { primary: 0 }\n\t\t}\n\t}));\n\n\texport class CursorMoveImpl extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'cursorMove',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tdescription: CursorMove_.description\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst parsed = CursorMove_.parse(args);\n\t\t\tif (!parsed) {\n\t\t\t\t// illegal arguments\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._runCursorMove(viewModel, args.source, parsed);\n\t\t}\n\n\t\tprivate _runCursorMove(viewModel: IViewModel, source: string | null | undefined, args: CursorMove_.ParsedArguments): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\tsource,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveImpl._move(viewModel, viewModel.getCursorStates(), args)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(source, true);\n\t\t}\n\n\t\tprivate static _move(viewModel: IViewModel, cursors: CursorState[], args: CursorMove_.ParsedArguments): PartialCursorState[] | null {\n\t\t\tconst inSelectionMode = args.select;\n\t\t\tconst value = args.value;\n\n\t\t\tswitch (args.direction) {\n\t\t\t\tcase CursorMove_.Direction.Left:\n\t\t\t\tcase CursorMove_.Direction.Right:\n\t\t\t\tcase CursorMove_.Direction.Up:\n\t\t\t\tcase CursorMove_.Direction.Down:\n\t\t\t\tcase CursorMove_.Direction.PrevBlankLine:\n\t\t\t\tcase CursorMove_.Direction.NextBlankLine:\n\t\t\t\tcase CursorMove_.Direction.WrappedLineStart:\n\t\t\t\tcase CursorMove_.Direction.WrappedLineFirstNonWhitespaceCharacter:\n\t\t\t\tcase CursorMove_.Direction.WrappedLineColumnCenter:\n\t\t\t\tcase CursorMove_.Direction.WrappedLineEnd:\n\t\t\t\tcase CursorMove_.Direction.WrappedLineLastNonWhitespaceCharacter:\n\t\t\t\t\treturn CursorMoveCommands.simpleMove(viewModel, cursors, args.direction, inSelectionMode, value, args.unit);\n\n\t\t\t\tcase CursorMove_.Direction.ViewPortTop:\n\t\t\t\tcase CursorMove_.Direction.ViewPortBottom:\n\t\t\t\tcase CursorMove_.Direction.ViewPortCenter:\n\t\t\t\tcase CursorMove_.Direction.ViewPortIfOutside:\n\t\t\t\t\treturn CursorMoveCommands.viewportMove(viewModel, cursors, args.direction, inSelectionMode, value);\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\texport const CursorMove: CursorMoveImpl = registerEditorCommand(new CursorMoveImpl());\n\n\tconst enum Constants {\n\t\tPAGE_SIZE_MARKER = -1\n\t}\n\n\tclass CursorMoveBasedCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _staticArgs: CursorMove_.SimpleMoveArguments;\n\n\t\tconstructor(opts: ICommandOptions & { args: CursorMove_.SimpleMoveArguments }) {\n\t\t\tsuper(opts);\n\t\t\tthis._staticArgs = opts.args;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, dynamicArgs: any): void {\n\t\t\tlet args = this._staticArgs;\n\t\t\tif (this._staticArgs.value === Constants.PAGE_SIZE_MARKER) {\n\t\t\t\t// -1 is a marker for page size\n\t\t\t\targs = {\n\t\t\t\t\tdirection: this._staticArgs.direction,\n\t\t\t\t\tunit: this._staticArgs.unit,\n\t\t\t\t\tselect: this._staticArgs.select,\n\t\t\t\t\tvalue: viewModel.cursorConfig.pageSize\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\tdynamicArgs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.simpleMove(viewModel, viewModel.getCursorStates(), args.direction, args.select, args.value, args.unit)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(dynamicArgs.source, true);\n\t\t}\n\t}\n\n\texport const CursorLeft: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Left,\n\t\t\tunit: CursorMove_.Unit.None,\n\t\t\tselect: false,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorLeft',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.LeftArrow,\n\t\t\tmac: { primary: KeyCode.LeftArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_B] }\n\t\t}\n\t}));\n\n\texport const CursorLeftSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Left,\n\t\t\tunit: CursorMove_.Unit.None,\n\t\t\tselect: true,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorLeftSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.LeftArrow\n\t\t}\n\t}));\n\n\texport const CursorRight: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Right,\n\t\t\tunit: CursorMove_.Unit.None,\n\t\t\tselect: false,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorRight',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.RightArrow,\n\t\t\tmac: { primary: KeyCode.RightArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_F] }\n\t\t}\n\t}));\n\n\texport const CursorRightSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Right,\n\t\t\tunit: CursorMove_.Unit.None,\n\t\t\tselect: true,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorRightSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.RightArrow\n\t\t}\n\t}));\n\n\texport const CursorUp: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Up,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: false,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorUp',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.UpArrow,\n\t\t\tmac: { primary: KeyCode.UpArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_P] }\n\t\t}\n\t}));\n\n\texport const CursorUpSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Up,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: true,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorUpSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.UpArrow,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow],\n\t\t\tmac: { primary: KeyMod.Shift | KeyCode.UpArrow },\n\t\t\tlinux: { primary: KeyMod.Shift | KeyCode.UpArrow }\n\t\t}\n\t}));\n\n\texport const CursorPageUp: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Up,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: false,\n\t\t\tvalue: Constants.PAGE_SIZE_MARKER\n\t\t},\n\t\tid: 'cursorPageUp',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.PageUp\n\t\t}\n\t}));\n\n\texport const CursorPageUpSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Up,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: true,\n\t\t\tvalue: Constants.PAGE_SIZE_MARKER\n\t\t},\n\t\tid: 'cursorPageUpSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.PageUp\n\t\t}\n\t}));\n\n\texport const CursorDown: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Down,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: false,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorDown',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.DownArrow,\n\t\t\tmac: { primary: KeyCode.DownArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_N] }\n\t\t}\n\t}));\n\n\texport const CursorDownSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Down,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: true,\n\t\t\tvalue: 1\n\t\t},\n\t\tid: 'cursorDownSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.DownArrow,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow],\n\t\t\tmac: { primary: KeyMod.Shift | KeyCode.DownArrow },\n\t\t\tlinux: { primary: KeyMod.Shift | KeyCode.DownArrow }\n\t\t}\n\t}));\n\n\texport const CursorPageDown: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Down,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: false,\n\t\t\tvalue: Constants.PAGE_SIZE_MARKER\n\t\t},\n\t\tid: 'cursorPageDown',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.PageDown\n\t\t}\n\t}));\n\n\texport const CursorPageDownSelect: CoreEditorCommand = registerEditorCommand(new CursorMoveBasedCommand({\n\t\targs: {\n\t\t\tdirection: CursorMove_.Direction.Down,\n\t\t\tunit: CursorMove_.Unit.WrappedLine,\n\t\t\tselect: true,\n\t\t\tvalue: Constants.PAGE_SIZE_MARKER\n\t\t},\n\t\tid: 'cursorPageDownSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.PageDown\n\t\t}\n\t}));\n\n\texport const CreateCursor: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'createCursor',\n\t\t\t\tprecondition: undefined\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tlet newState: PartialCursorState;\n\t\t\tif (args.wholeLine) {\n\t\t\t\tnewState = CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n\t\t\t} else {\n\t\t\t\tnewState = CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n\t\t\t}\n\n\t\t\tconst states: PartialCursorState[] = viewModel.getCursorStates();\n\n\t\t\t// Check if we should remove a cursor (sort of like a toggle)\n\t\t\tif (states.length > 1) {\n\t\t\t\tconst newModelPosition = (newState.modelState ? newState.modelState.position : null);\n\t\t\t\tconst newViewPosition = (newState.viewState ? newState.viewState.position : null);\n\n\t\t\t\tfor (let i = 0, len = states.length; i < len; i++) {\n\t\t\t\t\tconst state = states[i];\n\n\t\t\t\t\tif (newModelPosition && !state.modelState!.selection.containsPosition(newModelPosition)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (newViewPosition && !state.viewState!.selection.containsPosition(newViewPosition)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// => Remove the cursor\n\t\t\t\t\tstates.splice(i, 1);\n\n\t\t\t\t\tviewModel.model.pushStackElement();\n\t\t\t\t\tviewModel.setCursorStates(\n\t\t\t\t\t\targs.source,\n\t\t\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t\t\tstates\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// => Add the new cursor\n\t\t\tstates.push(newState);\n\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tstates\n\t\t\t);\n\t\t}\n\t});\n\n\texport const LastCursorMoveToSelect: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: '_lastCursorMoveToSelect',\n\t\t\t\tprecondition: undefined\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n\n\t\t\tconst states = viewModel.getCursorStates();\n\t\t\tconst newStates: PartialCursorState[] = states.slice(0);\n\t\t\tnewStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(viewModel, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tnewStates\n\t\t\t);\n\t\t}\n\t});\n\n\tclass HomeCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.moveToBeginningOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const CursorHome: CoreEditorCommand = registerEditorCommand(new HomeCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorHome',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.Home,\n\t\t\tmac: { primary: KeyCode.Home, secondary: [KeyMod.CtrlCmd | KeyCode.LeftArrow] }\n\t\t}\n\t}));\n\n\texport const CursorHomeSelect: CoreEditorCommand = registerEditorCommand(new HomeCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorHomeSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.Home,\n\t\t\tmac: { primary: KeyMod.Shift | KeyCode.Home, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow] }\n\t\t}\n\t}));\n\n\tclass LineStartCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tthis._exec(viewModel.getCursorStates())\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\n\t\tprivate _exec(cursors: CursorState[]): PartialCursorState[] {\n\t\t\tconst result: PartialCursorState[] = [];\n\t\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\t\tconst cursor = cursors[i];\n\t\t\t\tconst lineNumber = cursor.modelState.position.lineNumber;\n\t\t\t\tresult[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, 1, 0));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\texport const CursorLineStart: CoreEditorCommand = registerEditorCommand(new LineStartCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorLineStart',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: 0,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_A }\n\t\t}\n\t}));\n\n\texport const CursorLineStartSelect: CoreEditorCommand = registerEditorCommand(new LineStartCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorLineStartSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: 0,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_A }\n\t\t}\n\t}));\n\n\tclass EndCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.moveToEndOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode, args.sticky || false)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const CursorEnd: CoreEditorCommand = registerEditorCommand(new EndCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorEnd',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\targs: { sticky: false },\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyCode.End,\n\t\t\tmac: { primary: KeyCode.End, secondary: [KeyMod.CtrlCmd | KeyCode.RightArrow] }\n\t\t},\n\t\tdescription: {\n\t\t\tdescription: `Go to End`,\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t'sticky': {\n\t\t\t\t\t\t\tdescription: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t}));\n\n\texport const CursorEndSelect: CoreEditorCommand = registerEditorCommand(new EndCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorEndSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\targs: { sticky: false },\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.Shift | KeyCode.End,\n\t\t\tmac: { primary: KeyMod.Shift | KeyCode.End, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow] }\n\t\t},\n\t\tdescription: {\n\t\t\tdescription: `Select to End`,\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t'sticky': {\n\t\t\t\t\t\t\tdescription: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t}));\n\n\tclass LineEndCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tthis._exec(viewModel, viewModel.getCursorStates())\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\n\t\tprivate _exec(viewModel: IViewModel, cursors: CursorState[]): PartialCursorState[] {\n\t\t\tconst result: PartialCursorState[] = [];\n\t\t\tfor (let i = 0, len = cursors.length; i < len; i++) {\n\t\t\t\tconst cursor = cursors[i];\n\t\t\t\tconst lineNumber = cursor.modelState.position.lineNumber;\n\t\t\t\tconst maxColumn = viewModel.model.getLineMaxColumn(lineNumber);\n\t\t\t\tresult[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, maxColumn, 0));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\texport const CursorLineEnd: CoreEditorCommand = registerEditorCommand(new LineEndCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorLineEnd',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: 0,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_E }\n\t\t}\n\t}));\n\n\texport const CursorLineEndSelect: CoreEditorCommand = registerEditorCommand(new LineEndCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorLineEndSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: 0,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_E }\n\t\t}\n\t}));\n\n\tclass TopCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.moveToBeginningOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const CursorTop: CoreEditorCommand = registerEditorCommand(new TopCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorTop',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.UpArrow }\n\t\t}\n\t}));\n\n\texport const CursorTopSelect: CoreEditorCommand = registerEditorCommand(new TopCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorTopSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Home,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow }\n\t\t}\n\t}));\n\n\tclass BottomCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.moveToEndOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode)\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const CursorBottom: CoreEditorCommand = registerEditorCommand(new BottomCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'cursorBottom',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.DownArrow }\n\t\t}\n\t}));\n\n\texport const CursorBottomSelect: CoreEditorCommand = registerEditorCommand(new BottomCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'cursorBottomSelect',\n\t\tprecondition: undefined,\n\t\tkbOpts: {\n\t\t\tweight: CORE_WEIGHT,\n\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.End,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow }\n\t\t}\n\t}));\n\n\texport class EditorScrollImpl extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'editorScroll',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tdescription: EditorScroll_.description\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst parsed = EditorScroll_.parse(args);\n\t\t\tif (!parsed) {\n\t\t\t\t// illegal arguments\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._runEditorScroll(viewModel, args.source, parsed);\n\t\t}\n\n\t\t_runEditorScroll(viewModel: IViewModel, source: string | null | undefined, args: EditorScroll_.ParsedArguments): void {\n\n\t\t\tconst desiredScrollTop = this._computeDesiredScrollTop(viewModel, args);\n\n\t\t\tif (args.revealCursor) {\n\t\t\t\t// must ensure cursor is in new visible range\n\t\t\t\tconst desiredVisibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n\t\t\t\tviewModel.setCursorStates(\n\t\t\t\t\tsource,\n\t\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t\t[\n\t\t\t\t\t\tCursorMoveCommands.findPositionInViewportIfOutside(viewModel, viewModel.getPrimaryCursorState(), desiredVisibleViewRange, args.select)\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tviewModel.setScrollTop(desiredScrollTop, ScrollType.Smooth);\n\t\t}\n\n\t\tprivate _computeDesiredScrollTop(viewModel: IViewModel, args: EditorScroll_.ParsedArguments): number {\n\n\t\t\tif (args.unit === EditorScroll_.Unit.Line) {\n\t\t\t\t// scrolling by model lines\n\t\t\t\tconst visibleViewRange = viewModel.getCompletelyVisibleViewRange();\n\t\t\t\tconst visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n\n\t\t\t\tlet desiredTopModelLineNumber: number;\n\t\t\t\tif (args.direction === EditorScroll_.Direction.Up) {\n\t\t\t\t\t// must go x model lines up\n\t\t\t\t\tdesiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n\t\t\t\t} else {\n\t\t\t\t\t// must go x model lines down\n\t\t\t\t\tdesiredTopModelLineNumber = Math.min(viewModel.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n\t\t\t\t}\n\n\t\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n\t\t\t\treturn viewModel.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n\t\t\t}\n\n\t\t\tlet noOfLines: number;\n\t\t\tif (args.unit === EditorScroll_.Unit.Page) {\n\t\t\t\tnoOfLines = viewModel.cursorConfig.pageSize * args.value;\n\t\t\t} else if (args.unit === EditorScroll_.Unit.HalfPage) {\n\t\t\t\tnoOfLines = Math.round(viewModel.cursorConfig.pageSize / 2) * args.value;\n\t\t\t} else {\n\t\t\t\tnoOfLines = args.value;\n\t\t\t}\n\t\t\tconst deltaLines = (args.direction === EditorScroll_.Direction.Up ? -1 : 1) * noOfLines;\n\t\t\treturn viewModel.getScrollTop() + deltaLines * viewModel.cursorConfig.lineHeight;\n\t\t}\n\t}\n\n\texport const EditorScroll: EditorScrollImpl = registerEditorCommand(new EditorScrollImpl());\n\n\texport const ScrollLineUp: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'scrollLineUp',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.PageUp }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trunCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tEditorScroll._runEditorScroll(viewModel, args.source, {\n\t\t\t\tdirection: EditorScroll_.Direction.Up,\n\t\t\t\tunit: EditorScroll_.Unit.WrappedLine,\n\t\t\t\tvalue: 1,\n\t\t\t\trevealCursor: false,\n\t\t\t\tselect: false\n\t\t\t});\n\t\t}\n\t});\n\n\texport const ScrollPageUp: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'scrollPageUp',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\t\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.PageUp },\n\t\t\t\t\tlinux: { primary: KeyMod.Alt | KeyCode.PageUp }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trunCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tEditorScroll._runEditorScroll(viewModel, args.source, {\n\t\t\t\tdirection: EditorScroll_.Direction.Up,\n\t\t\t\tunit: EditorScroll_.Unit.Page,\n\t\t\t\tvalue: 1,\n\t\t\t\trevealCursor: false,\n\t\t\t\tselect: false\n\t\t\t});\n\t\t}\n\t});\n\n\texport const ScrollLineDown: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'scrollLineDown',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.PageDown }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trunCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tEditorScroll._runEditorScroll(viewModel, args.source, {\n\t\t\t\tdirection: EditorScroll_.Direction.Down,\n\t\t\t\tunit: EditorScroll_.Unit.WrappedLine,\n\t\t\t\tvalue: 1,\n\t\t\t\trevealCursor: false,\n\t\t\t\tselect: false\n\t\t\t});\n\t\t}\n\t});\n\n\texport const ScrollPageDown: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'scrollPageDown',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\t\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.PageDown },\n\t\t\t\t\tlinux: { primary: KeyMod.Alt | KeyCode.PageDown }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trunCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tEditorScroll._runEditorScroll(viewModel, args.source, {\n\t\t\t\tdirection: EditorScroll_.Direction.Down,\n\t\t\t\tunit: EditorScroll_.Unit.Page,\n\t\t\t\tvalue: 1,\n\t\t\t\trevealCursor: false,\n\t\t\t\tselect: false\n\t\t\t});\n\t\t}\n\t});\n\n\tclass WordCommand extends CoreEditorCommand {\n\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorMoveCommands.word(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position)\n\t\t\t\t]\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t}\n\n\texport const WordSelect: CoreEditorCommand = registerEditorCommand(new WordCommand({\n\t\tinSelectionMode: false,\n\t\tid: '_wordSelect',\n\t\tprecondition: undefined\n\t}));\n\n\texport const WordSelectDrag: CoreEditorCommand = registerEditorCommand(new WordCommand({\n\t\tinSelectionMode: true,\n\t\tid: '_wordSelectDrag',\n\t\tprecondition: undefined\n\t}));\n\n\texport const LastCursorWordSelect: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'lastCursorWordSelect',\n\t\t\t\tprecondition: undefined\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n\n\t\t\tconst states = viewModel.getCursorStates();\n\t\t\tconst newStates: PartialCursorState[] = states.slice(0);\n\t\t\tconst lastAddedState = states[lastAddedCursorIndex];\n\t\t\tnewStates[lastAddedCursorIndex] = CursorMoveCommands.word(viewModel, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tnewStates\n\t\t\t);\n\t\t}\n\t});\n\n\tclass LineCommand extends CoreEditorCommand {\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n\t\t\t\t]\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, false);\n\t\t}\n\t}\n\n\texport const LineSelect: CoreEditorCommand = registerEditorCommand(new LineCommand({\n\t\tinSelectionMode: false,\n\t\tid: '_lineSelect',\n\t\tprecondition: undefined\n\t}));\n\n\texport const LineSelectDrag: CoreEditorCommand = registerEditorCommand(new LineCommand({\n\t\tinSelectionMode: true,\n\t\tid: '_lineSelectDrag',\n\t\tprecondition: undefined\n\t}));\n\n\tclass LastCursorLineCommand extends CoreEditorCommand {\n\t\tprivate readonly _inSelectionMode: boolean;\n\n\t\tconstructor(opts: ICommandOptions & { inSelectionMode: boolean; }) {\n\t\t\tsuper(opts);\n\t\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n\n\t\t\tconst states = viewModel.getCursorStates();\n\t\t\tconst newStates: PartialCursorState[] = states.slice(0);\n\t\t\tnewStates[lastAddedCursorIndex] = CursorMoveCommands.line(viewModel, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tnewStates\n\t\t\t);\n\t\t}\n\t}\n\n\texport const LastCursorLineSelect: CoreEditorCommand = registerEditorCommand(new LastCursorLineCommand({\n\t\tinSelectionMode: false,\n\t\tid: 'lastCursorLineSelect',\n\t\tprecondition: undefined\n\t}));\n\n\texport const LastCursorLineSelectDrag: CoreEditorCommand = registerEditorCommand(new LastCursorLineCommand({\n\t\tinSelectionMode: true,\n\t\tid: 'lastCursorLineSelectDrag',\n\t\tprecondition: undefined\n\t}));\n\n\texport const ExpandLineSelection: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'expandLineSelection',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_L\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\tCursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates())\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\n\t});\n\n\texport const CancelSelection: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'cancelSelection',\n\t\t\t\tprecondition: EditorContextKeys.hasNonEmptySelection,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorMoveCommands.cancelSelection(viewModel, viewModel.getPrimaryCursorState())\n\t\t\t\t]\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t}\n\t});\n\n\texport const RemoveSecondaryCursors: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'removeSecondaryCursors',\n\t\t\t\tprecondition: EditorContextKeys.hasMultipleSelections,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT + 1,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tviewModel.getPrimaryCursorState()\n\t\t\t\t]\n\t\t\t);\n\t\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t\t\tstatus(nls.localize('removedCursor', \"Removed secondary cursors\"));\n\t\t}\n\t});\n\n\texport const RevealLine: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'revealLine',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tdescription: RevealLine_.description\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tconst revealLineArg = <RevealLine_.RawArguments>args;\n\t\t\tconst lineNumberArg = revealLineArg.lineNumber || 0;\n\t\t\tlet lineNumber = typeof lineNumberArg === 'number' ? (lineNumberArg + 1) : (parseInt(lineNumberArg) + 1);\n\t\t\tif (lineNumber < 1) {\n\t\t\t\tlineNumber = 1;\n\t\t\t}\n\t\t\tconst lineCount = viewModel.model.getLineCount();\n\t\t\tif (lineNumber > lineCount) {\n\t\t\t\tlineNumber = lineCount;\n\t\t\t}\n\n\t\t\tconst range = new Range(\n\t\t\t\tlineNumber, 1,\n\t\t\t\tlineNumber, viewModel.model.getLineMaxColumn(lineNumber)\n\t\t\t);\n\n\t\t\tlet revealAt = VerticalRevealType.Simple;\n\t\t\tif (revealLineArg.at) {\n\t\t\t\tswitch (revealLineArg.at) {\n\t\t\t\t\tcase RevealLine_.RawAtArgument.Top:\n\t\t\t\t\t\trevealAt = VerticalRevealType.Top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RevealLine_.RawAtArgument.Center:\n\t\t\t\t\t\trevealAt = VerticalRevealType.Center;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RevealLine_.RawAtArgument.Bottom:\n\t\t\t\t\t\trevealAt = VerticalRevealType.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst viewRange = viewModel.coordinatesConverter.convertModelRangeToViewRange(range);\n\n\t\t\tviewModel.revealRange(args.source, false, viewRange, revealAt, ScrollType.Smooth);\n\t\t}\n\t});\n\n\texport const SelectAll = new class extends EditorOrNativeTextInputCommand {\n\t\tconstructor() {\n\t\t\tsuper(SelectAllCommand);\n\t\t}\n\t\tpublic runDOMCommand(): void {\n\t\t\tif (isFirefox) {\n\t\t\t\t(<HTMLInputElement>document.activeElement).focus();\n\t\t\t\t(<HTMLInputElement>document.activeElement).select();\n\t\t\t}\n\n\t\t\tdocument.execCommand('selectAll');\n\t\t}\n\t\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\t\tconst viewModel = editor._getViewModel();\n\t\t\tif (!viewModel) {\n\t\t\t\t// the editor has no view => has no cursors\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runCoreEditorCommand(viewModel, args);\n\t\t}\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\t'keyboard',\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorMoveCommands.selectAll(viewModel, viewModel.getPrimaryCursorState())\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}();\n\n\texport const SetSelection: CoreEditorCommand = registerEditorCommand(new class extends CoreEditorCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'setSelection',\n\t\t\t\tprecondition: undefined\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditorCommand(viewModel: IViewModel, args: any): void {\n\t\t\tviewModel.model.pushStackElement();\n\t\t\tviewModel.setCursorStates(\n\t\t\t\targs.source,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t[\n\t\t\t\t\tCursorState.fromModelSelection(args.selection)\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t});\n}\n\nconst columnSelectionCondition = ContextKeyExpr.and(\n\tEditorContextKeys.textInputFocus,\n\tEditorContextKeys.columnSelection\n);\nfunction registerColumnSelection(id: string, keybinding: number): void {\n\tKeybindingsRegistry.registerKeybindingRule({\n\t\tid: id,\n\t\tprimary: keybinding,\n\t\twhen: columnSelectionCondition,\n\t\tweight: CORE_WEIGHT + 1\n\t});\n}\n\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id, KeyMod.Shift | KeyCode.LeftArrow);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id, KeyMod.Shift | KeyCode.RightArrow);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id, KeyMod.Shift | KeyCode.UpArrow);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id, KeyMod.Shift | KeyCode.PageUp);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id, KeyMod.Shift | KeyCode.DownArrow);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id, KeyMod.Shift | KeyCode.PageDown);\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport namespace CoreEditingCommands {\n\n\texport abstract class CoreEditingCommand extends EditorCommand {\n\t\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\t\tconst viewModel = editor._getViewModel();\n\t\t\tif (!viewModel) {\n\t\t\t\t// the editor has no view => has no cursors\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runCoreEditingCommand(editor, viewModel, args || {});\n\t\t}\n\n\t\tpublic abstract runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void;\n\t}\n\n\texport const LineBreakInsert: EditorCommand = registerEditorCommand(new class extends CoreEditingCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'lineBreakInsert',\n\t\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: 0,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_O }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, TypeOperations.lineBreakInsert(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n\t\t}\n\t});\n\n\texport const Outdent: EditorCommand = registerEditorCommand(new class extends CoreEditingCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'outdent',\n\t\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\t\t\tEditorContextKeys.tabDoesNotMoveFocus\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, TypeOperations.outdent(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t});\n\n\texport const Tab: EditorCommand = registerEditorCommand(new class extends CoreEditingCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'tab',\n\t\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\t\t\tEditorContextKeys.tabDoesNotMoveFocus\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Tab\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeCommands(this.id, TypeOperations.tab(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t});\n\n\texport const DeleteLeft: EditorCommand = registerEditorCommand(new class extends CoreEditingCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'deleteLeft',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyCode.Backspace,\n\t\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Backspace],\n\t\t\t\t\tmac: { primary: KeyCode.Backspace, secondary: [KeyMod.Shift | KeyCode.Backspace, KeyMod.WinCtrl | KeyCode.KEY_H, KeyMod.WinCtrl | KeyCode.Backspace] }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void {\n\t\t\tconst [shouldPushStackElementBefore, commands] = DeleteOperations.deleteLeft(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection), viewModel.getCursorAutoClosedCharacters());\n\t\t\tif (shouldPushStackElementBefore) {\n\t\t\t\teditor.pushUndoStop();\n\t\t\t}\n\t\t\teditor.executeCommands(this.id, commands);\n\t\t\tviewModel.setPrevEditOperationType(EditOperationType.DeletingLeft);\n\t\t}\n\t});\n\n\texport const DeleteRight: EditorCommand = registerEditorCommand(new class extends CoreEditingCommand {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'deleteRight',\n\t\t\t\tprecondition: undefined,\n\t\t\t\tkbOpts: {\n\t\t\t\t\tweight: CORE_WEIGHT,\n\t\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyCode.Delete,\n\t\t\t\t\tmac: { primary: KeyCode.Delete, secondary: [KeyMod.WinCtrl | KeyCode.KEY_D, KeyMod.WinCtrl | KeyCode.Delete] }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic runCoreEditingCommand(editor: ICodeEditor, viewModel: IViewModel, args: any): void {\n\t\t\tconst [shouldPushStackElementBefore, commands] = DeleteOperations.deleteRight(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection));\n\t\t\tif (shouldPushStackElementBefore) {\n\t\t\t\teditor.pushUndoStop();\n\t\t\t}\n\t\t\teditor.executeCommands(this.id, commands);\n\t\t\tviewModel.setPrevEditOperationType(EditOperationType.DeletingRight);\n\t\t}\n\t});\n\n\texport const Undo = new class extends EditorOrNativeTextInputCommand {\n\t\tconstructor() {\n\t\t\tsuper(UndoCommand);\n\t\t}\n\t\tpublic runDOMCommand(): void {\n\t\t\tdocument.execCommand('undo');\n\t\t}\n\t\tpublic runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): void | Promise<void> {\n\t\t\tif (!editor.hasModel() || editor.getOption(EditorOption.readOnly) === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn editor.getModel().undo();\n\t\t}\n\t}();\n\n\texport const Redo = new class extends EditorOrNativeTextInputCommand {\n\t\tconstructor() {\n\t\t\tsuper(RedoCommand);\n\t\t}\n\t\tpublic runDOMCommand(): void {\n\t\t\tdocument.execCommand('redo');\n\t\t}\n\t\tpublic runEditorCommand(accessor: ServicesAccessor | null, editor: ICodeEditor, args: any): void | Promise<void> {\n\t\t\tif (!editor.hasModel() || editor.getOption(EditorOption.readOnly) === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn editor.getModel().redo();\n\t\t}\n\t}();\n}\n\n/**\n * A command that will invoke a command on the focused editor.\n */\nclass EditorHandlerCommand extends Command {\n\n\tprivate readonly _handlerId: string;\n\n\tconstructor(id: string, handlerId: string, description?: ICommandHandlerDescription) {\n\t\tsuper({\n\t\t\tid: id,\n\t\t\tprecondition: undefined,\n\t\t\tdescription: description\n\t\t});\n\t\tthis._handlerId = handlerId;\n\t}\n\n\tpublic runCommand(accessor: ServicesAccessor, args: any): void {\n\t\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.trigger('keyboard', this._handlerId, args);\n\t}\n}\n\nfunction registerOverwritableCommand(handlerId: string, description?: ICommandHandlerDescription): void {\n\tregisterCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n\tregisterCommand(new EditorHandlerCommand(handlerId, handlerId, description));\n}\n\nregisterOverwritableCommand(Handler.Type, {\n\tdescription: `Type`,\n\targs: [{\n\t\tname: 'args',\n\t\tschema: {\n\t\t\t'type': 'object',\n\t\t\t'required': ['text'],\n\t\t\t'properties': {\n\t\t\t\t'text': {\n\t\t\t\t\t'type': 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}]\n});\nregisterOverwritableCommand(Handler.ReplacePreviousChar);\nregisterOverwritableCommand(Handler.CompositionType);\nregisterOverwritableCommand(Handler.CompositionStart);\nregisterOverwritableCommand(Handler.CompositionEnd);\nregisterOverwritableCommand(Handler.Paste);\nregisterOverwritableCommand(Handler.Cut);\n"]}