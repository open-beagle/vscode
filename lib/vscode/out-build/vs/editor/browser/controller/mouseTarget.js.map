{"version":3,"file":"mouseTarget.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/browser/controller/mouseTarget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPointerHandlerHelper } from 'vs/editor/browser/controller/mouseHandler';\nimport { IMouseTarget, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { ClientCoordinates, EditorMouseEvent, EditorPagePosition, PageCoordinates } from 'vs/editor/browser/editorDom';\nimport { PartFingerprint, PartFingerprints } from 'vs/editor/browser/view/viewPart';\nimport { ViewLine } from 'vs/editor/browser/viewParts/lines/viewLine';\nimport { IViewCursorRenderData } from 'vs/editor/browser/viewParts/viewCursors/viewCursor';\nimport { EditorLayoutInfo, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range as EditorRange } from 'vs/editor/common/core/range';\nimport { HorizontalPosition } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport { IViewModel } from 'vs/editor/common/viewModel/viewModel';\nimport { CursorColumns } from 'vs/editor/common/controller/cursorCommon';\nimport * as dom from 'vs/base/browser/dom';\nimport { AtomicTabMoveOperations, Direction } from 'vs/editor/common/controller/cursorAtomicMoveOperations';\n\nexport interface IViewZoneData {\n\tviewZoneId: string;\n\tpositionBefore: Position | null;\n\tpositionAfter: Position | null;\n\tposition: Position;\n\tafterLineNumber: number;\n}\n\nexport interface IMarginData {\n\tisAfterLines: boolean;\n\tglyphMarginLeft: number;\n\tglyphMarginWidth: number;\n\tlineNumbersWidth: number;\n\toffsetX: number;\n}\n\nexport interface IEmptyContentData {\n\tisAfterLines: boolean;\n\thorizontalDistanceToText?: number;\n}\n\ninterface IETextRange {\n\tboundingHeight: number;\n\tboundingLeft: number;\n\tboundingTop: number;\n\tboundingWidth: number;\n\thtmlText: string;\n\toffsetLeft: number;\n\toffsetTop: number;\n\ttext: string;\n\tcollapse(start?: boolean): void;\n\tcompareEndPoints(how: string, sourceRange: IETextRange): number;\n\tduplicate(): IETextRange;\n\texecCommand(cmdID: string, showUI?: boolean, value?: any): boolean;\n\texecCommandShowHelp(cmdID: string): boolean;\n\texpand(Unit: string): boolean;\n\tfindText(string: string, count?: number, flags?: number): boolean;\n\tgetBookmark(): string;\n\tgetBoundingClientRect(): ClientRect;\n\tgetClientRects(): ClientRectList;\n\tinRange(range: IETextRange): boolean;\n\tisEqual(range: IETextRange): boolean;\n\tmove(unit: string, count?: number): number;\n\tmoveEnd(unit: string, count?: number): number;\n\tmoveStart(unit: string, count?: number): number;\n\tmoveToBookmark(bookmark: string): boolean;\n\tmoveToElementText(element: Element): void;\n\tmoveToPoint(x: number, y: number): void;\n\tparentElement(): Element;\n\tpasteHTML(html: string): void;\n\tqueryCommandEnabled(cmdID: string): boolean;\n\tqueryCommandIndeterm(cmdID: string): boolean;\n\tqueryCommandState(cmdID: string): boolean;\n\tqueryCommandSupported(cmdID: string): boolean;\n\tqueryCommandText(cmdID: string): string;\n\tqueryCommandValue(cmdID: string): any;\n\tscrollIntoView(fStart?: boolean): void;\n\tselect(): void;\n\tsetEndPoint(how: string, SourceRange: IETextRange): void;\n}\n\ndeclare const IETextRange: {\n\tprototype: IETextRange;\n\tnew(): IETextRange;\n};\n\ninterface IHitTestResult {\n\tposition: Position | null;\n\thitTarget: Element | null;\n}\n\nexport class PointerHandlerLastRenderData {\n\tconstructor(\n\t\tpublic readonly lastViewCursorsRenderData: IViewCursorRenderData[],\n\t\tpublic readonly lastTextareaPosition: Position | null\n\t) { }\n}\n\nexport class MouseTarget implements IMouseTarget {\n\n\tpublic readonly element: Element | null;\n\tpublic readonly type: MouseTargetType;\n\tpublic readonly mouseColumn: number;\n\tpublic readonly position: Position | null;\n\tpublic readonly range: EditorRange | null;\n\tpublic readonly detail: any;\n\n\tconstructor(element: Element | null, type: MouseTargetType, mouseColumn: number = 0, position: Position | null = null, range: EditorRange | null = null, detail: any = null) {\n\t\tthis.element = element;\n\t\tthis.type = type;\n\t\tthis.mouseColumn = mouseColumn;\n\t\tthis.position = position;\n\t\tif (!range && position) {\n\t\t\trange = new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t}\n\t\tthis.range = range;\n\t\tthis.detail = detail;\n\t}\n\n\tprivate static _typeToString(type: MouseTargetType): string {\n\t\tif (type === MouseTargetType.TEXTAREA) {\n\t\t\treturn 'TEXTAREA';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\treturn 'GUTTER_GLYPH_MARGIN';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\treturn 'GUTTER_LINE_NUMBERS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn 'GUTTER_LINE_DECORATIONS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\treturn 'GUTTER_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn 'CONTENT_TEXT';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\treturn 'CONTENT_EMPTY';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\treturn 'CONTENT_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_WIDGET) {\n\t\t\treturn 'CONTENT_WIDGET';\n\t\t}\n\t\tif (type === MouseTargetType.OVERVIEW_RULER) {\n\t\t\treturn 'OVERVIEW_RULER';\n\t\t}\n\t\tif (type === MouseTargetType.SCROLLBAR) {\n\t\t\treturn 'SCROLLBAR';\n\t\t}\n\t\tif (type === MouseTargetType.OVERLAY_WIDGET) {\n\t\t\treturn 'OVERLAY_WIDGET';\n\t\t}\n\t\treturn 'UNKNOWN';\n\t}\n\n\tpublic static toString(target: IMouseTarget): string {\n\t\treturn this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + target.detail;\n\t}\n\n\tpublic toString(): string {\n\t\treturn MouseTarget.toString(this);\n\t}\n}\n\nclass ElementPath {\n\n\tpublic static isTextArea(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length === 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.TextArea\n\t\t);\n\t}\n\n\tpublic static isChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isStrictChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length > 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isChildOfScrollableElement(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.ScrollableElement\n\t\t);\n\t}\n\n\tpublic static isChildOfMinimap(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.Minimap\n\t\t);\n\t}\n\n\tpublic static isChildOfContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowingContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowingContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverlayWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.OverlayWidgets\n\t\t);\n\t}\n}\n\nexport class HitTestContext {\n\n\tpublic readonly model: IViewModel;\n\tpublic readonly layoutInfo: EditorLayoutInfo;\n\tpublic readonly viewDomNode: HTMLElement;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stickyTabStops: boolean;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lastRenderData: PointerHandlerLastRenderData;\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper, lastRenderData: PointerHandlerLastRenderData) {\n\t\tthis.model = context.model;\n\t\tconst options = context.configuration.options;\n\t\tthis.layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis.viewDomNode = viewHelper.viewDomNode;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stickyTabStops = options.get(EditorOption.stickyTabStops);\n\t\tthis.typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis.lastRenderData = lastRenderData;\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic getZoneAtCoord(mouseVerticalOffset: number): IViewZoneData | null {\n\t\treturn HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n\t}\n\n\tpublic static getZoneAtCoord(context: ViewContext, mouseVerticalOffset: number): IViewZoneData | null {\n\t\t// The target is either a view zone or the empty space after the last view-line\n\t\tconst viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n\n\t\tif (viewZoneWhitespace) {\n\t\t\tconst viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n\t\t\tconst lineCount = context.model.getLineCount();\n\t\t\tlet positionBefore: Position | null = null;\n\t\t\tlet position: Position | null;\n\t\t\tlet positionAfter: Position | null = null;\n\n\t\t\tif (viewZoneWhitespace.afterLineNumber !== lineCount) {\n\t\t\t\t// There are more lines after this view zone\n\t\t\t\tpositionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n\t\t\t}\n\t\t\tif (viewZoneWhitespace.afterLineNumber > 0) {\n\t\t\t\t// There are more lines above this view zone\n\t\t\t\tpositionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n\t\t\t}\n\n\t\t\tif (positionAfter === null) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else if (positionBefore === null) {\n\t\t\t\tposition = positionAfter;\n\t\t\t} else if (mouseVerticalOffset < viewZoneMiddle) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else {\n\t\t\t\tposition = positionAfter;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tviewZoneId: viewZoneWhitespace.id,\n\t\t\t\tafterLineNumber: viewZoneWhitespace.afterLineNumber,\n\t\t\t\tpositionBefore: positionBefore,\n\t\t\t\tpositionAfter: positionAfter,\n\t\t\t\tposition: position!\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFullLineRangeAtCoord(mouseVerticalOffset: number): { range: EditorRange; isAfterLines: boolean; } {\n\t\tif (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n\t\t\t// Below the last line\n\t\t\tconst lineNumber = this._context.model.getLineCount();\n\t\t\tconst maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\n\t\t\treturn {\n\t\t\t\trange: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n\t\t\t\tisAfterLines: true\n\t\t\t};\n\t\t}\n\n\t\tconst lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t\tconst maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\n\t\treturn {\n\t\t\trange: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n\t\t\tisAfterLines: false\n\t\t};\n\t}\n\n\tpublic getLineNumberAtVerticalOffset(mouseVerticalOffset: number): number {\n\t\treturn this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t}\n\n\tpublic isAfterLines(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n\t}\n\n\tpublic isInTopPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n\t}\n\n\tpublic isInBottomPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n\t}\n\n\tpublic getVerticalOffsetForLineNumber(lineNumber: number): number {\n\t\treturn this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t}\n\n\tpublic findAttribute(element: Element, attr: string): string | null {\n\t\treturn HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n\t}\n\n\tprivate static _findAttribute(element: Element, attr: string, stopAt: Element): string | null {\n\t\twhile (element && element !== document.body) {\n\t\t\tif (element.hasAttribute && element.hasAttribute(attr)) {\n\t\t\t\treturn element.getAttribute(attr);\n\t\t\t}\n\t\t\tif (element === stopAt) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telement = <Element>element.parentNode;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\treturn this._viewHelper.getLineWidth(lineNumber);\n\t}\n\n\tpublic visibleRangeForPosition(lineNumber: number, column: number): HorizontalPosition | null {\n\t\treturn this._viewHelper.visibleRangeForPosition(lineNumber, column);\n\t}\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\treturn this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n\t}\n\n\tpublic getCurrentScrollTop(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollTop();\n\t}\n\n\tpublic getCurrentScrollLeft(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollLeft();\n\t}\n}\n\nabstract class BareHitTestRequest {\n\n\tpublic readonly editorPos: EditorPagePosition;\n\tpublic readonly pos: PageCoordinates;\n\tpublic readonly mouseVerticalOffset: number;\n\tpublic readonly isInMarginArea: boolean;\n\tpublic readonly isInContentArea: boolean;\n\tpublic readonly mouseContentHorizontalOffset: number;\n\n\tprotected readonly mouseColumn: number;\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates) {\n\t\tthis.editorPos = editorPos;\n\t\tthis.pos = pos;\n\n\t\tthis.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + pos.y - editorPos.y);\n\t\tthis.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + pos.x - editorPos.x - ctx.layoutInfo.contentLeft;\n\t\tthis.isInMarginArea = (pos.x - editorPos.x < ctx.layoutInfo.contentLeft && pos.x - editorPos.x >= ctx.layoutInfo.glyphMarginLeft);\n\t\tthis.isInContentArea = !this.isInMarginArea;\n\t\tthis.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n\t}\n}\n\nclass HitTestRequest extends BareHitTestRequest {\n\tprivate readonly _ctx: HitTestContext;\n\tpublic readonly target: Element | null;\n\tpublic readonly targetPath: Uint8Array;\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates, target: Element | null) {\n\t\tsuper(ctx, editorPos, pos);\n\t\tthis._ctx = ctx;\n\n\t\tif (target) {\n\t\t\tthis.target = target;\n\t\t\tthis.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n\t\t} else {\n\t\t\tthis.target = null;\n\t\t\tthis.targetPath = new Uint8Array(0);\n\t\t}\n\t}\n\n\tpublic override toString(): string {\n\t\treturn `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? (<HTMLElement>this.target).outerHTML : null}`;\n\t}\n\n\tpublic fulfill(type: MouseTargetType, position: Position | null = null, range: EditorRange | null = null, detail: any = null): MouseTarget {\n\t\tlet mouseColumn = this.mouseColumn;\n\t\tif (position && position.column < this._ctx.model.getLineMaxColumn(position.lineNumber)) {\n\t\t\t// Most likely, the line contains foreign decorations...\n\t\t\tmouseColumn = CursorColumns.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber), position.column, this._ctx.model.getTextModelOptions().tabSize) + 1;\n\t\t}\n\t\treturn new MouseTarget(this.target, type, mouseColumn, position, range, detail);\n\t}\n\n\tpublic withTarget(target: Element | null): HitTestRequest {\n\t\treturn new HitTestRequest(this._ctx, this.editorPos, this.pos, target);\n\t}\n}\n\ninterface ResolvedHitTestRequest extends HitTestRequest {\n\treadonly target: Element;\n}\n\nconst EMPTY_CONTENT_AFTER_LINES: IEmptyContentData = { isAfterLines: true };\n\nfunction createEmptyContentDataInLines(horizontalDistanceToText: number): IEmptyContentData {\n\treturn {\n\t\tisAfterLines: false,\n\t\thorizontalDistanceToText: horizontalDistanceToText\n\t};\n}\n\nexport class MouseTargetFactory {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper) {\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic mouseTargetIsWidget(e: EditorMouseEvent): boolean {\n\t\tconst t = <Element>e.target;\n\t\tconst path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic createMouseTarget(lastRenderData: PointerHandlerLastRenderData, editorPos: EditorPagePosition, pos: PageCoordinates, target: HTMLElement | null): IMouseTarget {\n\t\tconst ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n\t\tconst request = new HitTestRequest(ctx, editorPos, pos, target);\n\t\ttry {\n\t\t\tconst r = MouseTargetFactory._createMouseTarget(ctx, request, false);\n\t\t\t// console.log(r.toString());\n\t\t\treturn r;\n\t\t} catch (err) {\n\t\t\t// console.log(err);\n\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN);\n\t\t}\n\t}\n\n\tprivate static _createMouseTarget(ctx: HitTestContext, request: HitTestRequest, domHitTestExecuted: boolean): MouseTarget {\n\n\t\t// console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n\n\t\t// First ensure the request has a target\n\t\tif (request.target === null) {\n\t\t\tif (domHitTestExecuted) {\n\t\t\t\t// Still no target... and we have already executed hit test...\n\t\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN);\n\t\t\t}\n\n\t\t\tconst hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n\n\t\t\tif (hitTestResult.position) {\n\t\t\t\treturn MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n\t\t\t}\n\n\t\t\treturn this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n\t\t}\n\n\t\t// we know for a fact that request.target is not null\n\t\tconst resolvedRequest = <ResolvedHitTestRequest>request;\n\n\t\tlet result: MouseTarget | null = null;\n\n\t\tresult = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n\n\t\treturn (result || request.fulfill(MouseTargetType.UNKNOWN));\n\t}\n\n\tprivate static _hitTestContentWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_WIDGET, null, null, widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestOverlayWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfill(MouseTargetType.OVERLAY_WIDGET, null, null, widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewCursor(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\n\t\tif (request.target) {\n\t\t\t// Check if we've hit a painted cursor\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (request.target === d.domNode) {\n\t\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, d.position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (request.isInContentArea) {\n\t\t\t// Edge has a bug when hit-testing the exact position of a cursor,\n\t\t\t// instead of returning the correct dom node, it returns the\n\t\t\t// first or last rendered view line dom node, therefore help it out\n\t\t\t// and first check if we are on top of a cursor\n\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\t\t\tconst mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n\t\t\tconst mouseVerticalOffset = request.mouseVerticalOffset;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (mouseContentHorizontalOffset < d.contentLeft) {\n\t\t\t\t\t// mouse position is to the left of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n\t\t\t\t\t// mouse position is to the right of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n\n\t\t\t\tif (\n\t\t\t\t\tcursorVerticalOffset <= mouseVerticalOffset\n\t\t\t\t\t&& mouseVerticalOffset <= cursorVerticalOffset + d.height\n\t\t\t\t) {\n\t\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, d.position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewZone(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\tconst viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n\t\tif (viewZoneData) {\n\t\t\tconst mouseTargetType = (request.isInContentArea ? MouseTargetType.CONTENT_VIEW_ZONE : MouseTargetType.GUTTER_VIEW_ZONE);\n\t\t\treturn request.fulfill(mouseTargetType, viewZoneData.position, null, viewZoneData);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestTextArea(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\t// Is it the textarea?\n\t\tif (ElementPath.isTextArea(request.targetPath)) {\n\t\t\tif (ctx.lastRenderData.lastTextareaPosition) {\n\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, ctx.lastRenderData.lastTextareaPosition);\n\t\t\t}\n\t\t\treturn request.fulfill(MouseTargetType.TEXTAREA, ctx.lastRenderData.lastTextareaPosition);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestMargin(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\tif (request.isInMarginArea) {\n\t\t\tconst res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n\t\t\tconst pos = res.range.getStartPosition();\n\t\t\tlet offset = Math.abs(request.pos.x - request.editorPos.x);\n\t\t\tconst detail: IMarginData = {\n\t\t\t\tisAfterLines: res.isAfterLines,\n\t\t\t\tglyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n\t\t\t\tglyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n\t\t\t\tlineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n\t\t\t\toffsetX: offset\n\t\t\t};\n\n\t\t\toffset -= ctx.layoutInfo.glyphMarginLeft;\n\n\t\t\tif (offset <= ctx.layoutInfo.glyphMarginWidth) {\n\t\t\t\t// On the glyph margin\n\t\t\t\treturn request.fulfill(MouseTargetType.GUTTER_GLYPH_MARGIN, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.glyphMarginWidth;\n\n\t\t\tif (offset <= ctx.layoutInfo.lineNumbersWidth) {\n\t\t\t\t// On the line numbers\n\t\t\t\treturn request.fulfill(MouseTargetType.GUTTER_LINE_NUMBERS, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.lineNumbersWidth;\n\n\t\t\t// On the line decorations\n\t\t\treturn request.fulfill(MouseTargetType.GUTTER_LINE_DECORATIONS, pos, res.range, detail);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewLines(ctx: HitTestContext, request: ResolvedHitTestRequest, domHitTestExecuted: boolean): MouseTarget | null {\n\t\tif (!ElementPath.isChildOfViewLines(request.targetPath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n\t\t\treturn request.fulfill(MouseTargetType.CONTENT_EMPTY, new Position(1, 1), undefined, EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\t// Check if it is below any lines and any view zones\n\t\tif (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n\t\t\t// This most likely indicates it happened after the last view-line\n\t\t\tconst lineCount = ctx.model.getLineCount();\n\t\t\tconst maxLineColumn = ctx.model.getLineMaxColumn(lineCount);\n\t\t\treturn request.fulfill(MouseTargetType.CONTENT_EMPTY, new Position(lineCount, maxLineColumn), undefined, EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\tif (domHitTestExecuted) {\n\t\t\t// Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n\t\t\t// See https://github.com/microsoft/vscode/issues/46942\n\t\t\tif (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n\t\t\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\tif (ctx.model.getLineLength(lineNumber) === 0) {\n\t\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_EMPTY, new Position(lineNumber, 1), undefined, detail);\n\t\t\t\t}\n\n\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\tif (request.mouseContentHorizontalOffset >= lineWidth) {\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\tconst pos = new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber));\n\t\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_EMPTY, pos, undefined, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We have already executed hit test...\n\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN);\n\t\t}\n\n\t\tconst hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n\n\t\tif (hitTestResult.position) {\n\t\t\treturn MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n\t\t}\n\n\t\treturn this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n\t}\n\n\tprivate static _hitTestMinimap(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\tif (ElementPath.isChildOfMinimap(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfill(MouseTargetType.SCROLLBAR, new Position(possibleLineNumber, maxColumn));\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbarSlider(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tif (request.target && request.target.nodeType === 1) {\n\t\t\t\tconst className = request.target.className;\n\t\t\t\tif (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n\t\t\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\t\tconst maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n\t\t\t\t\treturn request.fulfill(MouseTargetType.SCROLLBAR, new Position(possibleLineNumber, maxColumn));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbar(ctx: HitTestContext, request: ResolvedHitTestRequest): MouseTarget | null {\n\t\t// Is it the overview ruler?\n\t\t// Is it a child of the scrollable element?\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfill(MouseTargetType.SCROLLBAR, new Position(possibleLineNumber, maxColumn));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getMouseColumn(editorPos: EditorPagePosition, pos: PageCoordinates): number {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + pos.x - editorPos.x - layoutInfo.contentLeft;\n\t\treturn MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth);\n\t}\n\n\tpublic static _getMouseColumn(mouseContentHorizontalOffset: number, typicalHalfwidthCharacterWidth: number): number {\n\t\tif (mouseContentHorizontalOffset < 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n\t\treturn (chars + 1);\n\t}\n\n\tprivate static createMouseTargetFromHitTestPosition(ctx: HitTestContext, request: HitTestRequest, lineNumber: number, column: number): MouseTarget {\n\t\tconst pos = new Position(lineNumber, column);\n\n\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\n\t\tif (request.mouseContentHorizontalOffset > lineWidth) {\n\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\treturn request.fulfill(MouseTargetType.CONTENT_EMPTY, pos, undefined, detail);\n\t\t}\n\n\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n\n\t\tif (!visibleRange) {\n\t\t\treturn request.fulfill(MouseTargetType.UNKNOWN, pos);\n\t\t}\n\n\t\tconst columnHorizontalOffset = visibleRange.left;\n\n\t\tif (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\n\t\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, pos);\n\t\t}\n\n\t\t// Let's define a, b, c and check if the offset is in between them...\n\t\tinterface OffsetColumn { offset: number; column: number; }\n\n\t\tconst points: OffsetColumn[] = [];\n\t\tpoints.push({ offset: visibleRange.left, column: column });\n\t\tif (column > 1) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column - 1 });\n\t\t\t}\n\t\t}\n\t\tconst lineMaxColumn = ctx.model.getLineMaxColumn(lineNumber);\n\t\tif (column < lineMaxColumn) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column + 1 });\n\t\t\t}\n\t\t}\n\n\t\tpoints.sort((a, b) => a.offset - b.offset);\n\n\t\tfor (let i = 1; i < points.length; i++) {\n\t\t\tconst prev = points[i - 1];\n\t\t\tconst curr = points[i];\n\t\t\tif (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n\t\t\t\tconst rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n\t\t\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, pos, rng);\n\t\t\t}\n\t\t}\n\t\treturn request.fulfill(MouseTargetType.CONTENT_TEXT, pos);\n\t}\n\n\t/**\n\t * Most probably WebKit browsers and Edge\n\t */\n\tprivate static _doHitTestWithCaretRangeFromPoint(ctx: HitTestContext, request: BareHitTestRequest): IHitTestResult {\n\n\t\t// In Chrome, especially on Linux it is possible to click between lines,\n\t\t// so try to adjust the `hity` below so that it lands in the center of a line\n\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\tconst lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n\t\tconst lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\n\t\tlet adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n\n\t\tif (adjustedPageY <= request.editorPos.y) {\n\t\t\tadjustedPageY = request.editorPos.y + 1;\n\t\t}\n\t\tif (adjustedPageY >= request.editorPos.y + ctx.layoutInfo.height) {\n\t\t\tadjustedPageY = request.editorPos.y + ctx.layoutInfo.height - 1;\n\t\t}\n\n\t\tconst adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n\n\t\tconst r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n\t\tif (r.position) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n\t\treturn this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n\t}\n\n\tprivate static _actualDoHitTestWithCaretRangeFromPoint(ctx: HitTestContext, coords: ClientCoordinates): IHitTestResult {\n\t\tconst shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n\t\tlet range: Range;\n\t\tif (shadowRoot) {\n\t\t\tif (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n\t\t\t\trange = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n\t\t\t} else {\n\t\t\t\trange = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t\t}\n\t\t} else {\n\t\t\trange = document.caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t}\n\n\t\tif (!range || !range.startContainer) {\n\t\t\treturn {\n\t\t\t\tposition: null,\n\t\t\t\thitTarget: null\n\t\t\t};\n\t\t}\n\n\t\t// Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n\t\tconst startContainer = range.startContainer;\n\t\tlet hitTarget: HTMLElement | null = null;\n\n\t\tif (startContainer.nodeType === startContainer.TEXT_NODE) {\n\t\t\t// startContainer is expected to be the token text\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\tconst p = ctx.getPositionFromDOMInfo(<HTMLElement>parent1, range.startOffset);\n\t\t\t\treturn {\n\t\t\t\t\tposition: p,\n\t\t\t\t\thitTarget: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\thitTarget = <HTMLElement>startContainer.parentNode;\n\t\t\t}\n\t\t} else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n\t\t\t// startContainer is expected to be the token span\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the view line container span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\tconst p = ctx.getPositionFromDOMInfo(<HTMLElement>startContainer, (<HTMLElement>startContainer).textContent!.length);\n\t\t\t\treturn {\n\t\t\t\t\tposition: p,\n\t\t\t\t\thitTarget: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\thitTarget = <HTMLElement>startContainer;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tposition: null,\n\t\t\thitTarget: hitTarget\n\t\t};\n\t}\n\n\t/**\n\t * Most probably Gecko\n\t */\n\tprivate static _doHitTestWithCaretPositionFromPoint(ctx: HitTestContext, coords: ClientCoordinates): IHitTestResult {\n\t\tconst hitResult: { offsetNode: Node; offset: number; } = (<any>document).caretPositionFromPoint(coords.clientX, coords.clientY);\n\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n\t\t\t// offsetNode is expected to be the token text\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\tconst p = ctx.getPositionFromDOMInfo(<HTMLElement>hitResult.offsetNode.parentNode, hitResult.offset);\n\t\t\t\treturn {\n\t\t\t\t\tposition: p,\n\t\t\t\t\thitTarget: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tposition: null,\n\t\t\t\t\thitTarget: <HTMLElement>hitResult.offsetNode.parentNode\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t// Some other times, it returns the `<span>` with the inline decoration\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode;\n\t\t\tconst parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? (<HTMLElement>parent1).className : null;\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null;\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent1ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t\t\tconst tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n\t\t\t\tif (tokenSpan) {\n\t\t\t\t\tconst p = ctx.getPositionFromDOMInfo(<HTMLElement>tokenSpan, 0);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tposition: p,\n\t\t\t\t\t\thitTarget: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` with the inline decoration\n\t\t\t\tconst p = ctx.getPositionFromDOMInfo(<HTMLElement>hitResult.offsetNode, 0);\n\t\t\t\treturn {\n\t\t\t\t\tposition: p,\n\t\t\t\t\thitTarget: null\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tposition: null,\n\t\t\thitTarget: <HTMLElement>hitResult.offsetNode\n\t\t};\n\t}\n\n\tprivate static _snapToSoftTabBoundary(position: Position, viewModel: IViewModel): Position {\n\t\tconst lineContent = viewModel.getLineContent(position.lineNumber);\n\t\tconst { tabSize } = viewModel.getTextModelOptions();\n\t\tconst newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, Direction.Nearest);\n\t\tif (newPosition !== -1) {\n\t\t\treturn new Position(position.lineNumber, newPosition + 1);\n\t\t}\n\t\treturn position;\n\t}\n\n\tprivate static _doHitTest(ctx: HitTestContext, request: BareHitTestRequest): IHitTestResult {\n\n\t\tlet result: IHitTestResult;\n\t\tif (typeof document.caretRangeFromPoint === 'function') {\n\t\t\tresult = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n\t\t} else if ((<any>document).caretPositionFromPoint) {\n\t\t\tresult = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n\t\t} else {\n\t\t\tresult = {\n\t\t\t\tposition: null,\n\t\t\t\thitTarget: null\n\t\t\t};\n\t\t}\n\t\t// Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n\t\tif (result.position && ctx.stickyTabStops) {\n\t\t\tresult.position = this._snapToSoftTabBoundary(result.position, ctx.model);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport function shadowCaretRangeFromPoint(shadowRoot: ShadowRoot, x: number, y: number): Range {\n\tconst range = document.createRange();\n\n\t// Get the element under the point\n\tlet el: Element | null = shadowRoot.elementFromPoint(x, y);\n\n\tif (el !== null) {\n\t\t// Get the last child of the element until its firstChild is a text node\n\t\t// This assumes that the pointer is on the right of the line, out of the tokens\n\t\t// and that we want to get the offset of the last token of the line\n\t\twhile (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n\t\t\tel = <Element>el.lastChild;\n\t\t}\n\n\t\t// Grab its rect\n\t\tconst rect = el.getBoundingClientRect();\n\n\t\t// And its font\n\t\tconst font = window.getComputedStyle(el, null).getPropertyValue('font');\n\n\t\t// And also its txt content\n\t\tconst text = (el as any).innerText;\n\n\t\t// Position the pixel cursor at the left of the element\n\t\tlet pixelCursor = rect.left;\n\t\tlet offset = 0;\n\t\tlet step: number;\n\n\t\t// If the point is on the right of the box put the cursor after the last character\n\t\tif (x > rect.left + rect.width) {\n\t\t\toffset = text.length;\n\t\t} else {\n\t\t\tconst charWidthReader = CharWidthReader.getInstance();\n\t\t\t// Goes through all the characters of the innerText, and checks if the x of the point\n\t\t\t// belongs to the character.\n\t\t\tfor (let i = 0; i < text.length + 1; i++) {\n\t\t\t\t// The step is half the width of the character\n\t\t\t\tstep = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n\t\t\t\t// Move to the center of the character\n\t\t\t\tpixelCursor += step;\n\t\t\t\t// If the x of the point is smaller that the position of the cursor, the point is over that character\n\t\t\t\tif (x < pixelCursor) {\n\t\t\t\t\toffset = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Move between the current character and the next\n\t\t\t\tpixelCursor += step;\n\t\t\t}\n\t\t}\n\n\t\t// Creates a range with the text node of the element and set the offset found\n\t\trange.setStart(el.firstChild!, offset);\n\t\trange.setEnd(el.firstChild!, offset);\n\t}\n\n\treturn range;\n}\n\nclass CharWidthReader {\n\tprivate static _INSTANCE: CharWidthReader | null = null;\n\n\tpublic static getInstance(): CharWidthReader {\n\t\tif (!CharWidthReader._INSTANCE) {\n\t\t\tCharWidthReader._INSTANCE = new CharWidthReader();\n\t\t}\n\t\treturn CharWidthReader._INSTANCE;\n\t}\n\n\tprivate readonly _cache: { [cacheKey: string]: number; };\n\tprivate readonly _canvas: HTMLCanvasElement;\n\n\tprivate constructor() {\n\t\tthis._cache = {};\n\t\tthis._canvas = document.createElement('canvas');\n\t}\n\n\tpublic getCharWidth(char: string, font: string): number {\n\t\tconst cacheKey = char + font;\n\t\tif (this._cache[cacheKey]) {\n\t\t\treturn this._cache[cacheKey];\n\t\t}\n\n\t\tconst context = this._canvas.getContext('2d')!;\n\t\tcontext.font = font;\n\t\tconst metrics = context.measureText(char);\n\t\tconst width = metrics.width;\n\t\tthis._cache[cacheKey] = width;\n\t\treturn width;\n\t}\n}\n"]}