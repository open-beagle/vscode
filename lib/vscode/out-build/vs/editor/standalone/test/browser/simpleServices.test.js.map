{"version":3,"file":"simpleServices.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/test/browser/simpleServices.test.ts"],"names":[],"mappings":";;;IAcA,KAAK,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAEzC,MAAM,+BAAgC,SAAQ,4CAA2B;YACjE,YAAY,CAAC,CAAiB;gBACpC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAK,CAAC,CAAC;YAC3B,CAAC;SACD;QAED,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAE9C,IAAI,iBAAiB,GAAG,IAAI,qCAAiB,EAAE,CAAC;YAChD,MAAM,oBAAoB,GAAG,IAAI,2CAAoB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;YAE/E,IAAI,oBAAoB,GAAG,IAAI,2CAA0B,EAAE,CAAC;YAE5D,IAAI,iBAAiB,GAAG,IAAI,qCAAiB,CAAC,oBAAoB,CAAC,CAAC;YAEpE,IAAI,cAAc,GAAG,IAAI,yCAAwB,CAAC,oBAAoB,CAAC,CAAC;YAExE,IAAI,mBAAmB,GAAG,IAAI,0CAAyB,EAAE,CAAC;YAE1D,IAAI,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAE/C,IAAI,iBAAiB,GAAG,IAAI,+BAA+B,CAAC,iBAAiB,EAAE,cAAc,EAAE,qCAAoB,EAAE,mBAAmB,EAAE,IAAI,oBAAc,EAAE,EAAE,UAAU,CAAC,CAAC;YAE5K,IAAI,cAAc,GAAG,KAAK,CAAC;YAC3B,iBAAiB,CAAC,oBAAoB,CAAC,aAAa,eAAc,GAAG,EAAE;gBACtE,cAAc,GAAG,IAAI,CAAC;YACvB,CAAC,EAAE,SAAS,CAAC,CAAC;YAEd,iBAAiB,CAAC,YAAY,CAAC;gBAC9B,2BAA2B,EAAE,IAAI;gBACjC,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,KAAK;gBACd,OAAO,aAAY;gBACnB,IAAI,EAAE,IAAK;aACX,CAAC,CAAC;YAEH,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { SimpleConfigurationService, SimpleNotificationService, StandaloneCommandService, StandaloneKeybindingService } from 'vs/editor/standalone/browser/simpleServices';\nimport { ContextKeyService } from 'vs/platform/contextkey/browser/contextKeyService';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IKeyboardEvent } from 'vs/platform/keybinding/common/keybinding';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\n\nsuite('StandaloneKeybindingService', () => {\n\n\tclass TestStandaloneKeybindingService extends StandaloneKeybindingService {\n\t\tpublic testDispatch(e: IKeyboardEvent): void {\n\t\t\tsuper._dispatch(e, null!);\n\t\t}\n\t}\n\n\ttest('issue microsoft/monaco-editor#167', () => {\n\n\t\tlet serviceCollection = new ServiceCollection();\n\t\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\n\t\tlet configurationService = new SimpleConfigurationService();\n\n\t\tlet contextKeyService = new ContextKeyService(configurationService);\n\n\t\tlet commandService = new StandaloneCommandService(instantiationService);\n\n\t\tlet notificationService = new SimpleNotificationService();\n\n\t\tlet domElement = document.createElement('div');\n\n\t\tlet keybindingService = new TestStandaloneKeybindingService(contextKeyService, commandService, NullTelemetryService, notificationService, new NullLogService(), domElement);\n\n\t\tlet commandInvoked = false;\n\t\tkeybindingService.addDynamicKeybinding('testCommand', KeyCode.F9, () => {\n\t\t\tcommandInvoked = true;\n\t\t}, undefined);\n\n\t\tkeybindingService.testDispatch({\n\t\t\t_standardKeyboardEventBrand: true,\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\tkeyCode: KeyCode.F9,\n\t\t\tcode: null!\n\t\t});\n\n\t\tassert.ok(commandInvoked, 'command invoked');\n\t});\n});\n"]}