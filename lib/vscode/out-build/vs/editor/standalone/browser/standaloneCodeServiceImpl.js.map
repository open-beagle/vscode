{"version":3,"file":"standaloneCodeServiceImpl.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/standaloneCodeServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { windowOpenNoOpener } from 'vs/base/browser/dom';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { CodeEditorServiceImpl, GlobalStyleSheet } from 'vs/editor/browser/services/codeEditorServiceImpl';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\nexport class StandaloneCodeEditorServiceImpl extends CodeEditorServiceImpl {\n\n\tprivate readonly _editorIsOpen: IContextKey<boolean>;\n\n\tconstructor(\n\t\tstyleSheet: GlobalStyleSheet | null,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(styleSheet, themeService);\n\t\tthis.onCodeEditorAdd(() => this._checkContextKey());\n\t\tthis.onCodeEditorRemove(() => this._checkContextKey());\n\t\tthis._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\n\t}\n\n\tprivate _checkContextKey(): void {\n\t\tlet hasCodeEditor = false;\n\t\tfor (const editor of this.listCodeEditors()) {\n\t\t\tif (!editor.isSimpleWidget) {\n\t\t\t\thasCodeEditor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._editorIsOpen.set(hasCodeEditor);\n\t}\n\n\tpublic getActiveCodeEditor(): ICodeEditor | null {\n\t\treturn null; // not supported in the standalone case\n\t}\n\n\tpublic openCodeEditor(input: IResourceEditorInput, source: ICodeEditor | null, sideBySide?: boolean): Promise<ICodeEditor | null> {\n\t\tif (!source) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn Promise.resolve(this.doOpenEditor(source, input));\n\t}\n\n\tprivate doOpenEditor(editor: ICodeEditor, input: IResourceEditorInput): ICodeEditor | null {\n\t\tconst model = this.findModel(editor, input.resource);\n\t\tif (!model) {\n\t\t\tif (input.resource) {\n\n\t\t\t\tconst schema = input.resource.scheme;\n\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\twindowOpenNoOpener(input.resource.toString());\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = <IRange>(input.options ? input.options.selection : null);\n\t\tif (selection) {\n\t\t\tif (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection, ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tconst model = editor.getModel();\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n"]}