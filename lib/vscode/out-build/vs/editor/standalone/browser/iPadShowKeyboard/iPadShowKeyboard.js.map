{"version":3,"file":"iPadShowKeyboard.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,MAAa,gBAAiB,SAAQ,sBAAU;QAO/C,YAAY,MAAmB;YAC9B,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,OAAO,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,MAAM,EAAE,CAAC;aACd;QACF,CAAC;QAEO,MAAM;YACb,MAAM,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,mBAAuB,CAAC,CAAC;YAEzE,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,gBAAgB,EAAE;gBAErC,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAElD;iBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,EAAE;gBAE5C,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aAEnB;QACF,CAAC;QAEe,OAAO;YACtB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACnB;QACF,CAAC;;IAtCF,4CAuCC;IArCuB,mBAAE,GAAG,iCAAiC,CAAC;IAuC/D,MAAM,kBAAmB,SAAQ,sBAAU;QAQ1C,YAAY,MAAmB;YAC9B,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,kBAAkB,CAAC;YAE7C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE;gBAC3E,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACtE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QAEe,OAAO;YACtB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YACtC,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAED,2BAA2B;QAEpB,KAAK;YACX,OAAO,kBAAkB,CAAC,EAAE,CAAC;QAC9B,CAAC;QAEM,UAAU;YAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAEM,WAAW;YACjB,OAAO;gBACN,UAAU,6BAAqD;aAC/D,CAAC;QACH,CAAC;;IAzCuB,qBAAE,GAAG,mCAAmC,CAAC;IA4ClE,CAAA,GAAA,6CAA0B,CAAA,CAAC,gBAAgB,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./iPadShowKeyboard';\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\nexport class IPadShowKeyboard extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.iPadShowKeyboard';\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate widget: ShowKeyboardWidget | null;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis.editor = editor;\n\t\tthis.widget = null;\n\t\tif (browser.isIPad) {\n\t\t\tthis._register(editor.onDidChangeConfiguration(() => this.update()));\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tprivate update(): void {\n\t\tconst shouldHaveWidget = (!this.editor.getOption(EditorOption.readOnly));\n\n\t\tif (!this.widget && shouldHaveWidget) {\n\n\t\t\tthis.widget = new ShowKeyboardWidget(this.editor);\n\n\t\t} else if (this.widget && !shouldHaveWidget) {\n\n\t\t\tthis.widget.dispose();\n\t\t\tthis.widget = null;\n\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.widget) {\n\t\t\tthis.widget.dispose();\n\t\t\tthis.widget = null;\n\t\t}\n\t}\n}\n\nclass ShowKeyboardWidget extends Disposable implements IOverlayWidget {\n\n\tprivate static readonly ID = 'editor.contrib.ShowKeyboardWidget';\n\n\tprivate readonly editor: ICodeEditor;\n\n\tprivate readonly _domNode: HTMLElement;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis.editor = editor;\n\t\tthis._domNode = document.createElement('textarea');\n\t\tthis._domNode.className = 'iPadShowKeyboard';\n\n\t\tthis._register(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\n\t\t\tthis.editor.focus();\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._domNode, 'focus', (e) => {\n\t\t\tthis.editor.focus();\n\t\t}));\n\n\t\tthis.editor.addOverlayWidget(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\t// ----- IOverlayWidget API\n\n\tpublic getId(): string {\n\t\treturn ShowKeyboardWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n\t\t};\n\t}\n}\n\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard);\n"]}