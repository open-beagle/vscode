{"version":3,"file":"simpleServices.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/simpleServices.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Keybinding, ResolvedKeybinding, SimpleKeybinding, createKeybinding } from 'vs/base/common/keyCodes';\nimport { IDisposable, IReference, ImmortalReference, toDisposable, DisposableStore, Disposable } from 'vs/base/common/lifecycle';\nimport { OS, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor, IDiffEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditOptions, IBulkEditResult, IBulkEditService, ResourceEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from 'vs/editor/common/config/commonEditorConfig';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { IPosition, Position as Pos } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { IIdentifiedSingleEditOperation, ITextModel, ITextSnapshot } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IResolvedTextEditorModel, ITextModelContentProvider, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService, ITextResourceConfigurationChangeEvent } from 'vs/editor/common/services/textResourceConfigurationService';\nimport { CommandsRegistry, ICommandEvent, ICommandHandler, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationModel, IConfigurationValue, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from 'vs/platform/configuration/common/configurationModels';\nimport { IContextKeyService, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { IConfirmation, IConfirmationResult, IDialogOptions, IDialogService, IInputResult, IShowResult } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { AbstractKeybindingService } from 'vs/platform/keybinding/common/abstractKeybindingService';\nimport { IKeybindingEvent, IKeyboardEvent, KeybindingSource, KeybindingsSchemaContribution } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { IKeybindingItem, KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { ILabelService, ResourceLabelFormatter, IFormatterChangeEvent } from 'vs/platform/label/common/label';\nimport { INotification, INotificationHandle, INotificationService, IPromptChoice, IPromptOptions, NoOpNotification, IStatusMessageOptions, NotificationsFilter } from 'vs/platform/notification/common/notification';\nimport { IProgressRunner, IEditorProgressService } from 'vs/platform/progress/common/progress';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspace, IWorkspaceContextService, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, IWorkspaceFoldersWillChangeEvent, WorkbenchState, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { SimpleServicesNLS } from 'vs/editor/common/standaloneStrings';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { basename } from 'vs/base/common/resources';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class SimpleModel implements IResolvedTextEditorModel {\n\n\tprivate readonly model: ITextModel;\n\tprivate readonly _onWillDispose: Emitter<void>;\n\n\tconstructor(model: ITextModel) {\n\t\tthis.model = model;\n\t\tthis._onWillDispose = new Emitter<void>();\n\t}\n\n\tpublic get onWillDispose(): Event<void> {\n\t\treturn this._onWillDispose.event;\n\t}\n\n\tpublic resolve(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic get textEditorModel(): ITextModel {\n\t\treturn this.model;\n\t}\n\n\tpublic createSnapshot(): ITextSnapshot {\n\t\treturn this.model.createSnapshot();\n\t}\n\n\tpublic isReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate disposed = false;\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\n\t\tthis._onWillDispose.fire();\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getMode(): string | undefined {\n\t\treturn this.model.getModeId();\n\t}\n}\n\nexport interface IOpenEditorDelegate {\n\t(url: string): boolean;\n}\n\nfunction withTypedEditor<T>(widget: IEditor, codeEditorCallback: (editor: ICodeEditor) => T, diffEditorCallback: (editor: IDiffEditor) => T): T {\n\tif (isCodeEditor(widget)) {\n\t\t// Single Editor\n\t\treturn codeEditorCallback(<ICodeEditor>widget);\n\t} else {\n\t\t// Diff Editor\n\t\treturn diffEditorCallback(<IDiffEditor>widget);\n\t}\n}\n\nexport class SimpleEditorModelResolverService implements ITextModelService {\n\tpublic _serviceBrand: undefined;\n\n\tprivate editor?: IEditor;\n\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tpublic setEditor(editor: IEditor): void {\n\t\tthis.editor = editor;\n\t}\n\n\tpublic createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tlet model: ITextModel | null = null;\n\t\tif (this.editor) {\n\t\t\tmodel = withTypedEditor(this.editor,\n\t\t\t\t(editor) => this.findModel(editor, resource),\n\t\t\t\t(diffEditor) => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource)\n\t\t\t);\n\t\t}\n\n\t\tif (!model) {\n\t\t\treturn Promise.reject(new Error(`Model not found`));\n\t\t}\n\n\t\treturn Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n\t}\n\n\tpublic registerTextModelContentProvider(scheme: string, provider: ITextModelContentProvider): IDisposable {\n\t\treturn {\n\t\t\tdispose: function () { /* no op */ }\n\t\t};\n\t}\n\n\tpublic canHandleResource(resource: URI): boolean {\n\t\treturn false;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tlet model = this.modelService.getModel(resource);\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n\nexport class SimpleEditorProgressService implements IEditorProgressService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static NULL_PROGRESS_RUNNER: IProgressRunner = {\n\t\tdone: () => { },\n\t\ttotal: () => { },\n\t\tworked: () => { }\n\t};\n\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\tshow(): IProgressRunner {\n\t\treturn SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\n\t}\n\n\tasync showWhile(promise: Promise<any>, delay?: number): Promise<void> {\n\t\tawait promise;\n\t}\n}\n\nexport class SimpleDialogService implements IDialogService {\n\n\tpublic _serviceBrand: undefined;\n\n\tpublic confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\treturn this.doConfirm(confirmation).then(confirmed => {\n\t\t\treturn {\n\t\t\t\tconfirmed,\n\t\t\t\tcheckboxChecked: false // unsupported\n\t\t\t} as IConfirmationResult;\n\t\t});\n\t}\n\n\tprivate doConfirm(confirmation: IConfirmation): Promise<boolean> {\n\t\tlet messageText = confirmation.message;\n\t\tif (confirmation.detail) {\n\t\t\tmessageText = messageText + '\\n\\n' + confirmation.detail;\n\t\t}\n\n\t\treturn Promise.resolve(window.confirm(messageText));\n\t}\n\n\tpublic show(severity: Severity, message: string, buttons: string[], options?: IDialogOptions): Promise<IShowResult> {\n\t\treturn Promise.resolve({ choice: 0 });\n\t}\n\n\tpublic input(): Promise<IInputResult> {\n\t\treturn Promise.resolve({ choice: 0 }); // unsupported\n\t}\n\n\tpublic about(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class SimpleNotificationService implements INotificationService {\n\n\treadonly onDidAddNotification: Event<INotification> = Event.None;\n\n\treadonly onDidRemoveNotification: Event<INotification> = Event.None;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly NO_OP: INotificationHandle = new NoOpNotification();\n\n\tpublic info(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Info, message });\n\t}\n\n\tpublic warn(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Warning, message });\n\t}\n\n\tpublic error(error: string | Error): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Error, message: error });\n\t}\n\n\tpublic notify(notification: INotification): INotificationHandle {\n\t\tswitch (notification.severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(notification.message);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(notification.message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(notification.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn SimpleNotificationService.NO_OP;\n\t}\n\n\tpublic prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle {\n\t\treturn SimpleNotificationService.NO_OP;\n\t}\n\n\tpublic status(message: string | Error, options?: IStatusMessageOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tpublic setFilter(filter: NotificationsFilter): void { }\n}\n\nexport class StandaloneCommandService implements ICommandService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _instantiationService: IInstantiationService;\n\n\tprivate readonly _onWillExecuteCommand = new Emitter<ICommandEvent>();\n\tprivate readonly _onDidExecuteCommand = new Emitter<ICommandEvent>();\n\tpublic readonly onWillExecuteCommand: Event<ICommandEvent> = this._onWillExecuteCommand.event;\n\tpublic readonly onDidExecuteCommand: Event<ICommandEvent> = this._onDidExecuteCommand.event;\n\n\tconstructor(instantiationService: IInstantiationService) {\n\t\tthis._instantiationService = instantiationService;\n\t}\n\n\tpublic executeCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tconst command = CommandsRegistry.getCommand(id);\n\t\tif (!command) {\n\t\t\treturn Promise.reject(new Error(`command '${id}' not found`));\n\t\t}\n\n\t\ttry {\n\t\t\tthis._onWillExecuteCommand.fire({ commandId: id, args });\n\t\t\tconst result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]) as T;\n\n\t\t\tthis._onDidExecuteCommand.fire({ commandId: id, args });\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate readonly _dynamicKeybindings: IKeybindingItem[];\n\n\tconstructor(\n\t\tcontextKeyService: IContextKeyService,\n\t\tcommandService: ICommandService,\n\t\ttelemetryService: ITelemetryService,\n\t\tnotificationService: INotificationService,\n\t\tlogService: ILogService,\n\t\tdomNode: HTMLElement\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis._cachedResolver = null;\n\t\tthis._dynamicKeybindings = [];\n\n\t\t// for standard keybindings\n\t\tthis._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\tkeyEvent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\tthis._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic addDynamicKeybinding(commandId: string, _keybinding: number, handler: ICommandHandler, when: ContextKeyExpression | undefined): IDisposable {\n\t\tconst keybinding = createKeybinding(_keybinding, OS);\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tif (keybinding) {\n\t\t\tthis._dynamicKeybindings.push({\n\t\t\t\tkeybinding: keybinding,\n\t\t\t\tcommand: commandId,\n\t\t\t\twhen: when,\n\t\t\t\tweight1: 1000,\n\t\t\t\tweight2: 0,\n\t\t\t\textensionId: null,\n\t\t\t\tisBuiltinExtension: false\n\t\t\t});\n\n\t\t\ttoDispose.add(toDisposable(() => {\n\t\t\t\tfor (let i = 0; i < this._dynamicKeybindings.length; i++) {\n\t\t\t\t\tlet kb = this._dynamicKeybindings[i];\n\t\t\t\t\tif (kb.command === commandId) {\n\t\t\t\t\t\tthis._dynamicKeybindings.splice(i, 1);\n\t\t\t\t\t\tthis.updateResolver({ source: KeybindingSource.Default });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\ttoDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n\n\t\tthis.updateResolver({ source: KeybindingSource.Default });\n\n\t\treturn toDispose;\n\t}\n\n\tprivate updateResolver(event: IKeybindingEvent): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire(event);\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\treturn document.hasFocus();\n\t}\n\n\tprivate _toNormalizedKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tlet result: ResolvedKeybindingItem[] = [], resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = this.resolveKeybinding(keybinding);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn [new USLayoutResolvedKeybinding(keybinding, OS)];\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tlet keybinding = new SimpleKeybinding(\n\t\t\tkeyboardEvent.ctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\tkeyboardEvent.altKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t).toChord();\n\t\treturn new USLayoutResolvedKeybinding(keybinding, OS);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\treturn [];\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\treturn '';\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\treturn '';\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\t// noop\n\t}\n}\n\nfunction isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class SimpleConfigurationService implements IConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<IConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly _configuration: Configuration;\n\n\tconstructor() {\n\t\tthis._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this._configuration.getValue(section, overrides, undefined);\n\t}\n\n\tpublic updateValues(values: [string, any][]): Promise<void> {\n\t\tconst previous = { data: this._configuration.toData() };\n\n\t\tlet changedKeys: string[] = [];\n\n\t\tfor (const entry of values) {\n\t\t\tconst [key, value] = entry;\n\t\t\tif (this.getValue(key) === value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._configuration.updateValue(key, value);\n\t\t\tchangedKeys.push(key);\n\t\t}\n\n\t\tif (changedKeys.length > 0) {\n\t\t\tconst configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n\t\t\tconfigurationChangeEvent.source = ConfigurationTarget.MEMORY;\n\t\t\tconfigurationChangeEvent.sourceConfig = null;\n\t\t\tthis._onDidChangeConfiguration.fire(configurationChangeEvent);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic updateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn this.updateValues([[key, value]]);\n\t}\n\n\tpublic inspect<C>(key: string, options: IConfigurationOverrides = {}): IConfigurationValue<C> {\n\t\treturn this._configuration.inspect<C>(key, options, undefined);\n\t}\n\n\tpublic keys() {\n\t\treturn this._configuration.keys(undefined);\n\t}\n\n\tpublic reloadConfiguration(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic getConfigurationData(): IConfigurationData | null {\n\t\tconst emptyModel: IConfigurationModel = {\n\t\t\tcontents: {},\n\t\t\tkeys: [],\n\t\t\toverrides: []\n\t\t};\n\t\treturn {\n\t\t\tdefaults: emptyModel,\n\t\t\tuser: emptyModel,\n\t\t\tworkspace: emptyModel,\n\t\t\tfolders: []\n\t\t};\n\t}\n}\n\nexport class SimpleResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<ITextResourceConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tconstructor(private readonly configurationService: SimpleConfigurationService) {\n\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tthis._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource: URI, configuration: string) => e.affectsConfiguration(configuration) });\n\t\t});\n\t}\n\n\tgetValue<T>(resource: URI, section?: string): T;\n\tgetValue<T>(resource: URI, position?: IPosition, section?: string): T;\n\tgetValue<T>(resource: any, arg2?: any, arg3?: any) {\n\t\tconst position: IPosition | null = Pos.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\tif (typeof section === 'undefined') {\n\t\t\treturn this.configurationService.getValue<T>();\n\t\t}\n\t\treturn this.configurationService.getValue<T>(section);\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value, { resource }, configurationTarget);\n\t}\n}\n\nexport class SimpleResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue<string>('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nexport class StandaloneTelemetryService implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic isOptedIn = false;\n\tpublic sendErrorTelemetry = false;\n\n\tpublic setEnabled(value: boolean): void {\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t}\n\n\tpublic publicLog(eventName: string, data?: any): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as any);\n\t}\n\n\tpublic publicLogError(eventName: string, data?: any): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as any);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tthrow new Error(`Not available`);\n\t}\n}\n\nexport class SimpleWorkspaceContextService implements IWorkspaceContextService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly SCHEME = 'inmemory';\n\n\tprivate readonly _onDidChangeWorkspaceName = new Emitter<void>();\n\tpublic readonly onDidChangeWorkspaceName: Event<void> = this._onDidChangeWorkspaceName.event;\n\n\tprivate readonly _onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\tpublic readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent> = this._onWillChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\tpublic readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent> = this._onDidChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\tpublic readonly onDidChangeWorkbenchState: Event<WorkbenchState> = this._onDidChangeWorkbenchState.event;\n\n\tprivate readonly workspace: IWorkspace;\n\n\tconstructor() {\n\t\tconst resource = URI.from({ scheme: SimpleWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n\t\tthis.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace) {\n\t\t\tif (this.workspace.configuration) {\n\t\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t\t}\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tpublic getWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn resource && resource.scheme === SimpleWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\treturn resource && resource.scheme === SimpleWorkspaceContextService.SCHEME;\n\t}\n\n\tpublic isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn true;\n\t}\n}\n\nexport function updateConfigurationService(configurationService: IConfigurationService, source: any, isDiffEditor: boolean): void {\n\tif (!source) {\n\t\treturn;\n\t}\n\tif (!(configurationService instanceof SimpleConfigurationService)) {\n\t\treturn;\n\t}\n\tlet toUpdate: [string, any][] = [];\n\tObject.keys(source).forEach((key) => {\n\t\tif (isEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`editor.${key}`, source[key]]);\n\t\t}\n\t\tif (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`diffEditor.${key}`, source[key]]);\n\t\t}\n\t});\n\tif (toUpdate.length > 0) {\n\t\tconfigurationService.updateValues(toUpdate);\n\t}\n}\n\nexport class SimpleBulkEditService implements IBulkEditService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly _modelService: IModelService) {\n\t\t//\n\t}\n\n\thasPreviewHandler(): false {\n\t\treturn false;\n\t}\n\n\tsetPreviewHandler(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync apply(edits: ResourceEdit[], _options?: IBulkEditOptions): Promise<IBulkEditResult> {\n\n\t\tconst textEdits = new Map<ITextModel, IIdentifiedSingleEditOperation[]>();\n\n\t\tfor (let edit of edits) {\n\t\t\tif (!(edit instanceof ResourceTextEdit)) {\n\t\t\t\tthrow new Error('bad edit - only text edits are supported');\n\t\t\t}\n\t\t\tconst model = this._modelService.getModel(edit.resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow new Error('bad edit - model not found');\n\t\t\t}\n\t\t\tif (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n\t\t\t\tthrow new Error('bad state - model changed in the meantime');\n\t\t\t}\n\t\t\tlet array = textEdits.get(model);\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\ttextEdits.set(model, array);\n\t\t\t}\n\t\t\tarray.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n\t\t}\n\n\n\t\tlet totalEdits = 0;\n\t\tlet totalFiles = 0;\n\t\tfor (const [model, edits] of textEdits) {\n\t\t\tmodel.pushStackElement();\n\t\t\tmodel.pushEditOperations([], edits, () => []);\n\t\t\tmodel.pushStackElement();\n\t\t\ttotalFiles += 1;\n\t\t\ttotalEdits += edits.length;\n\t\t}\n\n\t\treturn {\n\t\t\tariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n\t\t};\n\t}\n}\n\nexport class SimpleUriLabelService implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic readonly onDidChangeFormatters: Event<IFormatterChangeEvent> = Event.None;\n\n\tpublic getUriLabel(resource: URI, options?: { relative?: boolean, forceNoTildify?: boolean }): string {\n\t\tif (resource.scheme === 'file') {\n\t\t\treturn resource.fsPath;\n\t\t}\n\t\treturn resource.path;\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\treturn basename(resource);\n\t}\n\n\tpublic getWorkspaceLabel(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace, options?: { verbose: boolean; }): string {\n\t\treturn '';\n\t}\n\n\tpublic getSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\treturn '/';\n\t}\n\n\tpublic registerFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic getHostLabel(): string {\n\t\treturn '';\n\t}\n}\n\nexport class SimpleLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic onDidLayout = Event.None;\n\n\tprivate _dimension?: dom.IDimension;\n\tget dimension(): dom.IDimension {\n\t\tif (!this._dimension) {\n\t\t\tthis._dimension = dom.getClientArea(window.document.body);\n\t\t}\n\n\t\treturn this._dimension;\n\t}\n\n\tget container(): HTMLElement {\n\t\treturn this._container;\n\t}\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\tconstructor(private _codeEditorService: ICodeEditorService, private _container: HTMLElement) { }\n}\n"]}