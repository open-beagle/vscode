{"version":3,"file":"standaloneGotoSymbolQuickAccess.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkBhG,IAAa,uCAAuC,GAApD,MAAa,uCAAwC,SAAQ,6DAAqC;QAIjG,YAAiD,aAAiC;YACjF,KAAK,EAAE,CAAC;YADwC,kBAAa,GAAb,aAAa,CAAoB;YAF/D,uCAAkC,GAAG,aAAK,CAAC,IAAI,CAAC;QAInE,CAAC;QAED,IAAc,uBAAuB;YACpC,OAAO,CAAA,GAAA,2BAAmB,CAAA,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC;QACvE,CAAC;KACD,CAAA;IAXY,uCAAuC;QAItC,WAAA,sCAAkB,CAAA;OAJnB,uCAAuC,CAWnD;IAXY,0FAAuC;IAapD,mBAAQ,CAAC,EAAE,CAAuB,wBAAU,CAAC,WAAW,CAAC,CAAC,2BAA2B,CAAC;QACrF,IAAI,EAAE,uCAAuC;QAC7C,MAAM,EAAE,6DAAqC,CAAC,MAAM;QACpD,WAAW,EAAE;YACZ,EAAE,WAAW,EAAE,mCAAe,CAAC,uBAAuB,EAAE,MAAM,EAAE,6DAAqC,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE;YACjI,EAAE,WAAW,EAAE,mCAAe,CAAC,iCAAiC,EAAE,MAAM,EAAE,6DAAqC,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,EAAE;SACvJ;KACD,CAAC,CAAC;IAEH,MAAa,cAAe,SAAQ,+BAAY;QAE/C;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,4BAA4B;gBAChC,KAAK,EAAE,mCAAe,CAAC,uBAAuB;gBAC9C,KAAK,EAAE,iBAAiB;gBACxB,YAAY,EAAE,qCAAiB,CAAC,yBAAyB;gBACzD,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;oBAC/B,OAAO,EAAE,qCAA6B,iBAAgB;oBACtD,MAAM,yBAAgC;iBACtC;gBACD,eAAe,EAAE;oBAChB,KAAK,EAAE,YAAY;oBACnB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,QAAQ,CAAC,GAAG,CAAC,+BAAkB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAqC,CAAC,MAAM,CAAC,CAAC;QACjG,CAAC;KACD;IAvBD,wCAuBC;IAED,CAAA,GAAA,uCAAoB,CAAA,CAAC,cAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/base/browser/ui/codicons/codiconStyles'; // The codicon symbol styles are defined here and must be loaded\nimport 'vs/editor/contrib/symbolIcons/symbolIcons'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport { AbstractGotoSymbolQuickAccessProvider } from 'vs/editor/contrib/quickAccess/gotoSymbolQuickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { QuickOutlineNLS } from 'vs/editor/common/standaloneStrings';\nimport { Event } from 'vs/base/common/event';\nimport { EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\n\nexport class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn withNullAsUndefined(this.editorService.getFocusedCodeEditor());\n\t}\n}\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoSymbolQuickAccessProvider,\n\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\thelpEntries: [\n\t\t{ description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, needsEditor: true },\n\t\t{ description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY, needsEditor: true }\n\t]\n});\n\nexport class GotoLineAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.quickOutline',\n\t\t\tlabel: QuickOutlineNLS.quickOutlineActionLabel,\n\t\t\talias: 'Go to Symbol...',\n\t\t\tprecondition: EditorContextKeys.hasDocumentSymbolProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_O,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n"]}