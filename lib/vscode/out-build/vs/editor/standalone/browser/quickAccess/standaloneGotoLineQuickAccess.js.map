{"version":3,"file":"standaloneGotoLineQuickAccess.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAehG,IAAa,qCAAqC,GAAlD,MAAa,qCAAsC,SAAQ,yDAAmC;QAI7F,YAAiD,aAAiC;YACjF,KAAK,EAAE,CAAC;YADwC,kBAAa,GAAb,aAAa,CAAoB;YAF/D,uCAAkC,GAAG,aAAK,CAAC,IAAI,CAAC;QAInE,CAAC;QAED,IAAc,uBAAuB;YACpC,OAAO,CAAA,GAAA,2BAAmB,CAAA,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC;QACvE,CAAC;KACD,CAAA;IAXY,qCAAqC;QAIpC,WAAA,sCAAkB,CAAA;OAJnB,qCAAqC,CAWjD;IAXY,sFAAqC;IAalD,mBAAQ,CAAC,EAAE,CAAuB,wBAAU,CAAC,WAAW,CAAC,CAAC,2BAA2B,CAAC;QACrF,IAAI,EAAE,qCAAqC;QAC3C,MAAM,EAAE,qCAAqC,CAAC,MAAM;QACpD,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,+BAAW,CAAC,mBAAmB,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;KAClF,CAAC,CAAC;IAEH,MAAa,cAAe,SAAQ,+BAAY;QAE/C;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,wBAAwB;gBAC5B,KAAK,EAAE,+BAAW,CAAC,mBAAmB;gBACtC,KAAK,EAAE,sBAAsB;gBAC7B,YAAY,EAAE,SAAS;gBACvB,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;oBAC/B,OAAO,EAAE,mCAA8B;oBACvC,GAAG,EAAE,EAAE,OAAO,EAAE,kCAA8B,EAAE;oBAChD,MAAM,yBAAgC;iBACtC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,QAAQ,CAAC,GAAG,CAAC,+BAAkB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,qCAAqC,CAAC,MAAM,CAAC,CAAC;QACjG,CAAC;KACD;IApBD,wCAoBC;IAED,CAAA,GAAA,uCAAoB,CAAA,CAAC,cAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractGotoLineQuickAccessProvider } from 'vs/editor/contrib/quickAccess/gotoLineQuickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { GoToLineNLS } from 'vs/editor/common/standaloneStrings';\nimport { Event } from 'vs/base/common/event';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\n\nexport class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn withNullAsUndefined(this.editorService.getFocusedCodeEditor());\n\t}\n}\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoLineQuickAccessProvider,\n\tprefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, needsEditor: true }]\n});\n\nexport class GotoLineAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.gotoLine',\n\t\t\tlabel: GoToLineNLS.gotoLineActionLabel,\n\t\t\talias: 'Go to Line/Column...',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_G,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_G },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n"]}