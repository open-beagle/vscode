{"version":3,"file":"standaloneEditor.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/standaloneEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./standalone-tokens';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { OpenerService } from 'vs/editor/browser/services/openerService';\nimport { DiffNavigator, IDiffNavigator } from 'vs/editor/browser/widget/diffNavigator';\nimport { EditorOptions, ConfigurationChangedEvent } from 'vs/editor/common/config/editorOptions';\nimport { BareFontInfo, FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { Token } from 'vs/editor/common/core/token';\nimport { IEditor, EditorType } from 'vs/editor/common/editorCommon';\nimport { FindMatch, ITextModel, TextModelResolvedOptions } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport { NULL_STATE, nullTokenize } from 'vs/editor/common/modes/nullMode';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IWebWorkerOptions, MonacoWebWorker, createWebWorker as actualCreateWebWorker } from 'vs/editor/common/services/webWorker';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\nimport { Colorizer, IColorizerElementOptions, IColorizerOptions } from 'vs/editor/standalone/browser/colorizer';\nimport { SimpleEditorModelResolverService } from 'vs/editor/standalone/browser/simpleServices';\nimport { IDiffEditorConstructionOptions, IStandaloneEditorConstructionOptions, IStandaloneCodeEditor, IStandaloneDiffEditor, StandaloneDiffEditor, StandaloneEditor, createTextModel } from 'vs/editor/standalone/browser/standaloneCodeEditor';\nimport { DynamicStandaloneServices, IEditorOverrideServices, StaticServices } from 'vs/editor/standalone/browser/standaloneServices';\nimport { IStandaloneThemeData, IStandaloneThemeService } from 'vs/editor/standalone/common/standaloneThemeService';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextViewService, IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IMarker, IMarkerData } from 'vs/platform/markers/common/markers';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { clearAllFontInfos } from 'vs/editor/browser/config/configuration';\nimport { IEditorProgressService } from 'vs/platform/progress/common/progress';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { StandaloneThemeServiceImpl } from 'vs/editor/standalone/browser/standaloneThemeServiceImpl';\nimport { splitLines } from 'vs/base/common/strings';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nfunction withAllStandaloneServices<T extends IEditor>(domElement: HTMLElement, override: IEditorOverrideServices, callback: (services: DynamicStandaloneServices) => T): T {\n\tlet services = new DynamicStandaloneServices(domElement, override);\n\n\tlet simpleEditorModelResolverService: SimpleEditorModelResolverService | null = null;\n\tif (!services.has(ITextModelService)) {\n\t\tsimpleEditorModelResolverService = new SimpleEditorModelResolverService(StaticServices.modelService.get());\n\t\tservices.set(ITextModelService, simpleEditorModelResolverService);\n\t}\n\n\tif (!services.has(IOpenerService)) {\n\t\tservices.set(IOpenerService, new OpenerService(services.get(ICodeEditorService), services.get(ICommandService)));\n\t}\n\n\tlet result = callback(services);\n\n\tif (simpleEditorModelResolverService) {\n\t\tsimpleEditorModelResolverService.setEditor(result);\n\t}\n\n\treturn result;\n}\n\n/**\n * Create a new editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function create(domElement: HTMLElement, options?: IStandaloneEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneCodeEditor {\n\treturn withAllStandaloneServices(domElement, override || {}, (services) => {\n\t\treturn new StandaloneEditor(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\tservices,\n\t\t\tservices.get(IInstantiationService),\n\t\t\tservices.get(ICodeEditorService),\n\t\t\tservices.get(ICommandService),\n\t\t\tservices.get(IContextKeyService),\n\t\t\tservices.get(IKeybindingService),\n\t\t\tservices.get(IContextViewService),\n\t\t\tservices.get(IStandaloneThemeService),\n\t\t\tservices.get(INotificationService),\n\t\t\tservices.get(IConfigurationService),\n\t\t\tservices.get(IAccessibilityService),\n\t\t\tservices.get(IModelService),\n\t\t\tservices.get(IModeService),\n\t\t);\n\t});\n}\n\n/**\n * Emitted when an editor is created.\n * Creating a diff editor might cause this listener to be invoked with the two editors.\n * @event\n */\nexport function onDidCreateEditor(listener: (codeEditor: ICodeEditor) => void): IDisposable {\n\treturn StaticServices.codeEditorService.get().onCodeEditorAdd((editor) => {\n\t\tlistener(<ICodeEditor>editor);\n\t});\n}\n\n/**\n * Create a new diff editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function createDiffEditor(domElement: HTMLElement, options?: IDiffEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneDiffEditor {\n\treturn withAllStandaloneServices(domElement, override || {}, (services) => {\n\t\treturn new StandaloneDiffEditor(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\tservices,\n\t\t\tservices.get(IInstantiationService),\n\t\t\tservices.get(IContextKeyService),\n\t\t\tservices.get(IKeybindingService),\n\t\t\tservices.get(IContextViewService),\n\t\t\tservices.get(IEditorWorkerService),\n\t\t\tservices.get(ICodeEditorService),\n\t\t\tservices.get(IStandaloneThemeService),\n\t\t\tservices.get(INotificationService),\n\t\t\tservices.get(IConfigurationService),\n\t\t\tservices.get(IContextMenuService),\n\t\t\tservices.get(IEditorProgressService),\n\t\t\tservices.get(IClipboardService)\n\t\t);\n\t});\n}\n\nexport interface IDiffNavigatorOptions {\n\treadonly followsCaret?: boolean;\n\treadonly ignoreCharChanges?: boolean;\n\treadonly alwaysRevealFirst?: boolean;\n}\n\nexport function createDiffNavigator(diffEditor: IStandaloneDiffEditor, opts?: IDiffNavigatorOptions): IDiffNavigator {\n\treturn new DiffNavigator(diffEditor, opts);\n}\n\n/**\n * Create a new editor model.\n * You can specify the language that should be set for this model or let the language be inferred from the `uri`.\n */\nexport function createModel(value: string, language?: string, uri?: URI): ITextModel {\n\treturn createTextModel(\n\t\tStaticServices.modelService.get(),\n\t\tStaticServices.modeService.get(),\n\t\tvalue,\n\t\tlanguage,\n\t\turi\n\t);\n}\n\n/**\n * Change the language for a model.\n */\nexport function setModelLanguage(model: ITextModel, languageId: string): void {\n\tStaticServices.modelService.get().setMode(model, StaticServices.modeService.get().create(languageId));\n}\n\n/**\n * Set the markers for a model.\n */\nexport function setModelMarkers(model: ITextModel, owner: string, markers: IMarkerData[]): void {\n\tif (model) {\n\t\tStaticServices.markerService.get().changeOne(owner, model.uri, markers);\n\t}\n}\n\n/**\n * Get markers for owner and/or resource\n *\n * @returns list of markers\n */\nexport function getModelMarkers(filter: { owner?: string, resource?: URI, take?: number }): IMarker[] {\n\treturn StaticServices.markerService.get().read(filter);\n}\n\n/**\n * Emitted when markers change for a model.\n * @event\n */\nexport function onDidChangeMarkers(listener: (e: readonly URI[]) => void): IDisposable {\n\treturn StaticServices.markerService.get().onMarkerChanged(listener);\n}\n\n/**\n * Get the model that has `uri` if it exists.\n */\nexport function getModel(uri: URI): ITextModel | null {\n\treturn StaticServices.modelService.get().getModel(uri);\n}\n\n/**\n * Get all the created models.\n */\nexport function getModels(): ITextModel[] {\n\treturn StaticServices.modelService.get().getModels();\n}\n\n/**\n * Emitted when a model is created.\n * @event\n */\nexport function onDidCreateModel(listener: (model: ITextModel) => void): IDisposable {\n\treturn StaticServices.modelService.get().onModelAdded(listener);\n}\n\n/**\n * Emitted right before a model is disposed.\n * @event\n */\nexport function onWillDisposeModel(listener: (model: ITextModel) => void): IDisposable {\n\treturn StaticServices.modelService.get().onModelRemoved(listener);\n}\n\n/**\n * Emitted when a different language is set to a model.\n * @event\n */\nexport function onDidChangeModelLanguage(listener: (e: { readonly model: ITextModel; readonly oldLanguage: string; }) => void): IDisposable {\n\treturn StaticServices.modelService.get().onModelModeChanged((e) => {\n\t\tlistener({\n\t\t\tmodel: e.model,\n\t\t\toldLanguage: e.oldModeId\n\t\t});\n\t});\n}\n\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker<T>(opts: IWebWorkerOptions): MonacoWebWorker<T> {\n\treturn actualCreateWebWorker<T>(StaticServices.modelService.get(), opts);\n}\n\n/**\n * Colorize the contents of `domNode` using attribute `data-lang`.\n */\nexport function colorizeElement(domNode: HTMLElement, options: IColorizerElementOptions): Promise<void> {\n\tconst themeService = <StandaloneThemeServiceImpl>StaticServices.standaloneThemeService.get();\n\tthemeService.registerEditorContainer(domNode);\n\treturn Colorizer.colorizeElement(themeService, StaticServices.modeService.get(), domNode, options);\n}\n\n/**\n * Colorize `text` using language `languageId`.\n */\nexport function colorize(text: string, languageId: string, options: IColorizerOptions): Promise<string> {\n\tconst themeService = <StandaloneThemeServiceImpl>StaticServices.standaloneThemeService.get();\n\tthemeService.registerEditorContainer(document.body);\n\treturn Colorizer.colorize(StaticServices.modeService.get(), text, languageId, options);\n}\n\n/**\n * Colorize a line in a model.\n */\nexport function colorizeModelLine(model: ITextModel, lineNumber: number, tabSize: number = 4): string {\n\tconst themeService = <StandaloneThemeServiceImpl>StaticServices.standaloneThemeService.get();\n\tthemeService.registerEditorContainer(document.body);\n\treturn Colorizer.colorizeModelLine(model, lineNumber, tabSize);\n}\n\n/**\n * @internal\n */\nfunction getSafeTokenizationSupport(language: string): Omit<modes.ITokenizationSupport, 'tokenize2'> {\n\tlet tokenizationSupport = modes.TokenizationRegistry.get(language);\n\tif (tokenizationSupport) {\n\t\treturn tokenizationSupport;\n\t}\n\treturn {\n\t\tgetInitialState: () => NULL_STATE,\n\t\ttokenize: (line: string, hasEOL: boolean, state: modes.IState, deltaOffset: number) => nullTokenize(language, line, state, deltaOffset)\n\t};\n}\n\n/**\n * Tokenize `text` using language `languageId`\n */\nexport function tokenize(text: string, languageId: string): Token[][] {\n\tlet modeService = StaticServices.modeService.get();\n\t// Needed in order to get the mode registered for subsequent look-ups\n\tmodeService.triggerMode(languageId);\n\n\tlet tokenizationSupport = getSafeTokenizationSupport(languageId);\n\tlet lines = splitLines(text);\n\tlet result: Token[][] = [];\n\tlet state = tokenizationSupport.getInitialState();\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tlet line = lines[i];\n\t\tlet tokenizationResult = tokenizationSupport.tokenize(line, true, state, 0);\n\n\t\tresult[i] = tokenizationResult.tokens;\n\t\tstate = tokenizationResult.endState;\n\t}\n\treturn result;\n}\n\n/**\n * Define a new theme or update an existing theme.\n */\nexport function defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\tStaticServices.standaloneThemeService.get().defineTheme(themeName, themeData);\n}\n\n/**\n * Switches to a theme.\n */\nexport function setTheme(themeName: string): void {\n\tStaticServices.standaloneThemeService.get().setTheme(themeName);\n}\n\n/**\n * Clears all cached font measurements and triggers re-measurement.\n */\nexport function remeasureFonts(): void {\n\tclearAllFontInfos();\n}\n\n/**\n * Register a command.\n */\nexport function registerCommand(id: string, handler: (accessor: any, ...args: any[]) => void): IDisposable {\n\treturn CommandsRegistry.registerCommand({ id, handler });\n}\n\n/**\n * @internal\n */\nexport function createMonacoEditorAPI(): typeof monaco.editor {\n\treturn {\n\t\t// methods\n\t\tcreate: <any>create,\n\t\tonDidCreateEditor: <any>onDidCreateEditor,\n\t\tcreateDiffEditor: <any>createDiffEditor,\n\t\tcreateDiffNavigator: <any>createDiffNavigator,\n\n\t\tcreateModel: <any>createModel,\n\t\tsetModelLanguage: <any>setModelLanguage,\n\t\tsetModelMarkers: <any>setModelMarkers,\n\t\tgetModelMarkers: <any>getModelMarkers,\n\t\tonDidChangeMarkers: <any>onDidChangeMarkers,\n\t\tgetModels: <any>getModels,\n\t\tgetModel: <any>getModel,\n\t\tonDidCreateModel: <any>onDidCreateModel,\n\t\tonWillDisposeModel: <any>onWillDisposeModel,\n\t\tonDidChangeModelLanguage: <any>onDidChangeModelLanguage,\n\n\n\t\tcreateWebWorker: <any>createWebWorker,\n\t\tcolorizeElement: <any>colorizeElement,\n\t\tcolorize: <any>colorize,\n\t\tcolorizeModelLine: <any>colorizeModelLine,\n\t\ttokenize: <any>tokenize,\n\t\tdefineTheme: <any>defineTheme,\n\t\tsetTheme: <any>setTheme,\n\t\tremeasureFonts: remeasureFonts,\n\t\tregisterCommand: registerCommand,\n\n\t\t// enums\n\t\tAccessibilitySupport: standaloneEnums.AccessibilitySupport,\n\t\tContentWidgetPositionPreference: standaloneEnums.ContentWidgetPositionPreference,\n\t\tCursorChangeReason: standaloneEnums.CursorChangeReason,\n\t\tDefaultEndOfLine: standaloneEnums.DefaultEndOfLine,\n\t\tEditorAutoIndentStrategy: standaloneEnums.EditorAutoIndentStrategy,\n\t\tEditorOption: standaloneEnums.EditorOption,\n\t\tEndOfLinePreference: standaloneEnums.EndOfLinePreference,\n\t\tEndOfLineSequence: standaloneEnums.EndOfLineSequence,\n\t\tMinimapPosition: standaloneEnums.MinimapPosition,\n\t\tMouseTargetType: standaloneEnums.MouseTargetType,\n\t\tOverlayWidgetPositionPreference: standaloneEnums.OverlayWidgetPositionPreference,\n\t\tOverviewRulerLane: standaloneEnums.OverviewRulerLane,\n\t\tRenderLineNumbersType: standaloneEnums.RenderLineNumbersType,\n\t\tRenderMinimap: standaloneEnums.RenderMinimap,\n\t\tScrollbarVisibility: standaloneEnums.ScrollbarVisibility,\n\t\tScrollType: standaloneEnums.ScrollType,\n\t\tTextEditorCursorBlinkingStyle: standaloneEnums.TextEditorCursorBlinkingStyle,\n\t\tTextEditorCursorStyle: standaloneEnums.TextEditorCursorStyle,\n\t\tTrackedRangeStickiness: standaloneEnums.TrackedRangeStickiness,\n\t\tWrappingIndent: standaloneEnums.WrappingIndent,\n\n\t\t// classes\n\t\tConfigurationChangedEvent: <any>ConfigurationChangedEvent,\n\t\tBareFontInfo: <any>BareFontInfo,\n\t\tFontInfo: <any>FontInfo,\n\t\tTextModelResolvedOptions: <any>TextModelResolvedOptions,\n\t\tFindMatch: <any>FindMatch,\n\n\t\t// vars\n\t\tEditorType: EditorType,\n\t\tEditorOptions: <any>EditorOptions\n\n\t};\n}\n"]}