{"version":3,"file":"standaloneLanguages.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/editor/standalone/browser/standaloneLanguages.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAsBhG;;OAEG;IACH,SAAgB,QAAQ,CAAC,QAAiC;QACzD,6BAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAFD,4BAEC;IAED;;OAEG;IACH,SAAgB,YAAY;QAC3B,IAAI,MAAM,GAA8B,EAAE,CAAC;QAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,6BAAa,CAAC,YAAY,EAAE,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC;IACf,CAAC;IAJD,oCAIC;IAED,SAAgB,oBAAoB,CAAC,UAAkB;QACtD,IAAI,GAAG,GAAG,mCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAC7E,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAHD,oDAGC;IAED;;;OAGG;IACH,SAAgB,UAAU,CAAC,UAAkB,EAAE,QAAoB;QAClE,IAAI,UAAU,GAAG,mCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1E,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,UAAU,EAAE;gBAChC,iBAAiB;gBACjB,UAAU,CAAC,OAAO,EAAE,CAAC;gBACrB,yBAAyB;gBACzB,QAAQ,EAAE,CAAC;aACX;QACF,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACnB,CAAC;IAVD,gCAUC;IAED;;OAEG;IACH,SAAgB,wBAAwB,CAAC,UAAkB,EAAE,aAAoC;QAChG,IAAI,kBAAkB,GAAG,mCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAC5F,IAAI,CAAC,kBAAkB,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,iDAAiD,UAAU,EAAE,CAAC,CAAC;SAC/E;QACD,OAAO,6DAA6B,CAAC,QAAQ,CAAC,kBAAkB,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;IACvF,CAAC;IAND,4DAMC;IAED;;OAEG;IACH,MAAa,kCAAkC;QAK9C,YAAY,kBAA4C,EAAE,MAA6B;YACtF,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,CAAC;QAEM,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QACvC,CAAC;QAEM,QAAQ,CAAC,IAAY,EAAE,MAAe,EAAE,KAAmB,EAAE,WAAmB;YACtF,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAChD,OAAO,2BAA2B,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAiE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;aAC3L;YACD,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC;QAEM,SAAS,CAAC,IAAY,EAAE,MAAe,EAAE,KAAmB;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACvD,OAAO,IAAI,2BAAmB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAChE,CAAC;KACD;IAzBD,gFAyBC;IAED;;OAEG;IACH,MAAa,2BAA2B;QAMvC,YAAY,sBAA+C,EAAE,kBAA4C,EAAE,MAAsB;YAChI,IAAI,CAAC,uBAAuB,GAAG,sBAAsB,CAAC;YACtD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,CAAC;QAEM,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QACvC,CAAC;QAEO,MAAM,CAAC,gBAAgB,CAAC,MAAgB,EAAE,QAAgB,EAAE,WAAmB;YACtF,IAAI,MAAM,GAAY,EAAE,CAAC;YACzB,IAAI,kBAAkB,GAAW,CAAC,CAAC;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;gBAE9B,2DAA2D;gBAC3D,IAAI,CAAC,KAAK,CAAC,EAAE;oBACZ,6CAA6C;oBAC7C,UAAU,GAAG,CAAC,CAAC;iBACf;qBAAM,IAAI,UAAU,GAAG,kBAAkB,EAAE;oBAC3C,wCAAwC;oBACxC,UAAU,GAAG,kBAAkB,CAAC;iBAChC;gBAED,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,aAAK,CAAC,UAAU,GAAG,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAEpE,kBAAkB,GAAG,UAAU,CAAC;aAChC;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,MAAM,CAAC,aAAa,CAAC,QAAgB,EAAE,MAAqE,EAAE,IAAY,EAAE,KAAmB,EAAE,WAAmB;YAC1K,IAAI,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAChD,IAAI,MAAM,GAAG,2BAA2B,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;YAEtG,IAAI,QAAsB,CAAC;YAC3B,oCAAoC;YACpC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACxC,QAAQ,GAAG,KAAK,CAAC;aACjB;iBAAM;gBACN,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;aACjC;YAED,OAAO,IAAI,0BAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC;QAEM,QAAQ,CAAC,IAAY,EAAE,MAAe,EAAE,KAAmB,EAAE,WAAmB;YACtF,OAAO,2BAA2B,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QAC7H,CAAC;QAEO,eAAe,CAAC,MAAgB,EAAE,WAAmB;YAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;YAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC,UAAU,CAAC;YAE3E,IAAI,MAAM,GAAa,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC;YACzC,IAAI,kBAAkB,GAAW,CAAC,CAAC;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;gBACxD,IAAI,SAAS,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACxD,gBAAgB;oBAChB,SAAS;iBACT;gBAED,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;gBAE9B,2DAA2D;gBAC3D,IAAI,CAAC,KAAK,CAAC,EAAE;oBACZ,6CAA6C;oBAC7C,UAAU,GAAG,CAAC,CAAC;iBACf;qBAAM,IAAI,UAAU,GAAG,kBAAkB,EAAE;oBAC3C,wCAAwC;oBACxC,UAAU,GAAG,kBAAkB,CAAC;iBAChC;gBAED,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,UAAU,GAAG,WAAW,CAAC;gBAC/C,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,QAAQ,CAAC;gBAE/B,kBAAkB,GAAG,UAAU,CAAC;aAChC;YAED,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBACnC,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aAC5B;YACD,OAAO,YAAY,CAAC;QACrB,CAAC;QAEM,SAAS,CAAC,IAAY,EAAE,MAAe,EAAE,KAAmB,EAAE,WAAmB;YACvF,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACtD,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAEpE,IAAI,QAAsB,CAAC;YAC3B,oCAAoC;YACpC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBACxC,QAAQ,GAAG,KAAK,CAAC;aACjB;iBAAM;gBACN,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;aACjC;YAED,OAAO,IAAI,2BAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC;KACD;IA9GD,kEA8GC;IAyFD,SAAS,uBAAuB,CAAC,QAAgD;QAChF,OAAO,iBAAiB,IAAI,QAAQ,CAAC;IACtC,CAAC;IAED,SAAS,UAAU,CAAI,GAAQ;QAC9B,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,SAAgB,WAAW,CAAC,QAAyB;QACpD,IAAI,QAAQ,EAAE;YACb,MAAM,MAAM,GAAY,CAAC,IAAK,CAAC,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACpD,MAAM,CAAC,CAAC,CAAC,GAAG,aAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;YACD,mCAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SACxE;aAAM;YACN,mCAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SACtE;IACF,CAAC;IAVD,kCAUC;IAED;;OAEG;IACH,SAAgB,iBAAiB,CAAC,UAAkB,EAAE,QAAmG;QACxJ,IAAI,kBAAkB,GAAG,mCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAC5F,IAAI,CAAC,kBAAkB,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,mDAAmD,UAAU,EAAE,CAAC,CAAC;SACjF;QACD,MAAM,MAAM,GAAG,CAAC,QAAgD,EAAE,EAAE;YACnE,IAAI,uBAAuB,CAAC,QAAQ,CAAC,EAAE;gBACtC,OAAO,IAAI,kCAAkC,CAAC,kBAAmB,EAAE,QAAQ,CAAC,CAAC;aAC7E;iBAAM;gBACN,OAAO,IAAI,2BAA2B,CAAC,mCAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,EAAE,kBAAmB,EAAE,QAAQ,CAAC,CAAC;aACnH;QACF,CAAC,CAAC;QACF,IAAI,UAAU,CAAyC,QAAQ,CAAC,EAAE;YACjE,OAAO,KAAK,CAAC,oBAAoB,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3G;QACD,OAAO,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1E,CAAC;IAhBD,8CAgBC;IAGD;;OAEG;IACH,SAAgB,wBAAwB,CAAC,UAAkB,EAAE,WAA0D;QACtH,MAAM,MAAM,GAAG,CAAC,WAA6B,EAAE,EAAE;YAChD,OAAO,CAAA,GAAA,wCAAyB,CAAA,CAAC,mCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,mCAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,CAAA,GAAA,wBAAO,CAAA,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;QAC/J,CAAC,CAAC;QACF,IAAI,UAAU,CAAmB,WAAW,CAAC,EAAE;YAC9C,OAAO,KAAK,CAAC,oBAAoB,CAAC,eAAe,CAAC,UAAU,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACpH;QACD,OAAO,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7E,CAAC;IARD,4DAQC;IAED;;OAEG;IACH,SAAgB,yBAAyB,CAAC,UAAkB,EAAE,QAAiC;QAC9F,OAAO,KAAK,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAFD,8DAEC;IAED;;OAEG;IACH,SAAgB,sBAAsB,CAAC,UAAkB,EAAE,QAA8B;QACxF,OAAO,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpE,CAAC;IAFD,wDAEC;IAED;;OAEG;IACH,SAAgB,6BAA6B,CAAC,UAAkB,EAAE,QAAqC;QACtG,OAAO,KAAK,CAAC,6BAA6B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC3E,CAAC;IAFD,sEAEC;IAED;;OAEG;IACH,SAAgB,qBAAqB,CAAC,UAAkB,EAAE,QAA6B;QACtF,OAAO,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,EAAE;YACvD,YAAY,EAAE,CAAC,KAAuB,EAAE,QAAkB,EAAE,KAAwB,EAAoC,EAAE;gBACzH,IAAI,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;gBAE7C,OAAO,OAAO,CAAC,OAAO,CAAiC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAA2B,EAAE;oBAC7I,IAAI,CAAC,KAAK,EAAE;wBACX,OAAO,SAAS,CAAC;qBACjB;oBACD,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;wBACzB,KAAK,CAAC,KAAK,GAAG,IAAI,aAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;qBACpG;oBACD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;wBACjB,KAAK,CAAC,KAAK,GAAG,IAAI,aAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;qBACpG;oBACD,OAAO,KAAK,CAAC;gBACd,CAAC,CAAC,CAAC;YACJ,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;IAnBD,sDAmBC;IAED;;OAEG;IACH,SAAgB,8BAA8B,CAAC,UAAkB,EAAE,QAAsC;QACxG,OAAO,KAAK,CAAC,8BAA8B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAFD,wEAEC;IAED;;OAEG;IACH,SAAgB,iCAAiC,CAAC,UAAkB,EAAE,QAAyC;QAC9G,OAAO,KAAK,CAAC,iCAAiC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC/E,CAAC;IAFD,8EAEC;IAED;;OAEG;IACH,SAAgB,kCAAkC,CAAC,UAAkB,EAAE,QAA0C;QAChH,OAAO,KAAK,CAAC,kCAAkC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAChF,CAAC;IAFD,gFAEC;IAED;;OAEG;IACH,SAAgB,0BAA0B,CAAC,UAAkB,EAAE,QAAkC;QAChG,OAAO,KAAK,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;IAFD,gEAEC;IAED;;OAEG;IACH,SAAgB,8BAA8B,CAAC,UAAkB,EAAE,QAAsC;QACxG,OAAO,KAAK,CAAC,8BAA8B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAFD,wEAEC;IAED;;OAEG;IACH,SAAgB,8BAA8B,CAAC,UAAkB,EAAE,QAAsC;QACxG,OAAO,KAAK,CAAC,8BAA8B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAFD,wEAEC;IAED;;OAEG;IACH,SAAgB,wBAAwB,CAAC,UAAkB,EAAE,QAAgC;QAC5F,OAAO,KAAK,CAAC,wBAAwB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtE,CAAC;IAFD,4DAEC;IAED;;OAEG;IACH,SAAgB,0BAA0B,CAAC,UAAkB,EAAE,QAA4B;QAC1F,OAAO,KAAK,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,EAAE;YAC5D,kBAAkB,EAAE,CAAC,KAAuB,EAAE,KAAY,EAAE,OAAgC,EAAE,KAAwB,EAA8C,EAAE;gBACrK,IAAI,OAAO,GAAG,mCAAc,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACzF,OAAO,aAAK,CAAC,yBAAyB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBACH,OAAO,QAAQ,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1F,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;IATD,gEASC;IAED;;OAEG;IACH,SAAgB,sCAAsC,CAAC,UAAkB,EAAE,QAA8C;QACxH,OAAO,KAAK,CAAC,sCAAsC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpF,CAAC;IAFD,wFAEC;IAED;;OAEG;IACH,SAAgB,2CAA2C,CAAC,UAAkB,EAAE,QAAmD;QAClI,OAAO,KAAK,CAAC,2CAA2C,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzF,CAAC;IAFD,kGAEC;IAED;;OAEG;IACH,SAAgB,oCAAoC,CAAC,UAAkB,EAAE,QAA4C;QACpH,OAAO,KAAK,CAAC,oCAAoC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAClF,CAAC;IAFD,oFAEC;IAED;;OAEG;IACH,SAAgB,oBAAoB,CAAC,UAAkB,EAAE,QAA4B;QACpF,OAAO,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;IAFD,oDAEC;IAED;;OAEG;IACH,SAAgB,8BAA8B,CAAC,UAAkB,EAAE,QAAsC;QACxG,OAAO,KAAK,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;IAFD,wEAEC;IAED;;OAEG;IACH,SAAgB,qBAAqB,CAAC,UAAkB,EAAE,QAAqC;QAC9F,OAAO,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACnE,CAAC;IAFD,sDAEC;IAED;;OAEG;IACH,SAAgB,4BAA4B,CAAC,UAAkB,EAAE,QAAoC;QACpG,OAAO,KAAK,CAAC,4BAA4B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAFD,oEAEC;IAED;;OAEG;IACH,SAAgB,2BAA2B,CAAC,UAAkB,EAAE,QAAmC;QAClG,OAAO,KAAK,CAAC,2BAA2B,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;IAFD,kEAEC;IAED;;OAEG;IACH,SAAgB,8BAA8B,CAAC,UAAkB,EAAE,QAAsC;QACxG,OAAO,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpE,CAAC;IAFD,wEAEC;IAED;;OAEG;IACH,SAAgB,sCAAsC,CAAC,UAAkB,EAAE,QAA8C;QACxH,OAAO,KAAK,CAAC,sCAAsC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpF,CAAC;IAFD,wFAEC;IAED;;OAEG;IACH,SAAgB,2CAA2C,CAAC,UAAkB,EAAE,QAAmD;QAClI,OAAO,KAAK,CAAC,2CAA2C,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzF,CAAC;IAFD,kGAEC;IA8BD;;OAEG;IACH,SAAgB,wBAAwB;QACvC,OAAO;YACN,QAAQ,EAAO,QAAQ;YACvB,YAAY,EAAO,YAAY;YAC/B,UAAU,EAAO,UAAU;YAC3B,oBAAoB,EAAO,oBAAoB;YAE/C,mBAAmB;YACnB,wBAAwB,EAAO,wBAAwB;YACvD,WAAW,EAAE,WAAW;YACxB,iBAAiB,EAAO,iBAAiB;YACzC,wBAAwB,EAAO,wBAAwB;YACvD,yBAAyB,EAAO,yBAAyB;YACzD,sBAAsB,EAAO,sBAAsB;YACnD,8BAA8B,EAAO,8BAA8B;YACnE,6BAA6B,EAAO,6BAA6B;YACjE,qBAAqB,EAAO,qBAAqB;YACjD,8BAA8B,EAAO,8BAA8B;YACnE,iCAAiC,EAAO,iCAAiC;YACzE,kCAAkC,EAAO,kCAAkC;YAC3E,0BAA0B,EAAO,0BAA0B;YAC3D,8BAA8B,EAAO,8BAA8B;YACnE,8BAA8B,EAAO,8BAA8B;YACnE,wBAAwB,EAAO,wBAAwB;YACvD,0BAA0B,EAAO,0BAA0B;YAC3D,sCAAsC,EAAO,sCAAsC;YACnF,2CAA2C,EAAO,2CAA2C;YAC7F,oCAAoC,EAAO,oCAAoC;YAC/E,oBAAoB,EAAO,oBAAoB;YAC/C,qBAAqB,EAAO,qBAAqB;YACjD,4BAA4B,EAAO,4BAA4B;YAC/D,2BAA2B,EAAO,2BAA2B;YAC7D,8BAA8B,EAAO,8BAA8B;YACnE,sCAAsC,EAAO,sCAAsC;YACnF,2CAA2C,EAAO,2CAA2C;YAE7F,QAAQ;YACR,qBAAqB,EAAE,eAAe,CAAC,qBAAqB;YAC5D,kBAAkB,EAAE,eAAe,CAAC,kBAAkB;YACtD,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;YACpD,4BAA4B,EAAE,eAAe,CAAC,4BAA4B;YAC1E,UAAU,EAAE,eAAe,CAAC,UAAU;YACtC,SAAS,EAAE,eAAe,CAAC,SAAS;YACpC,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,qBAAqB,EAAE,eAAe,CAAC,qBAAqB;YAC5D,wBAAwB,EAAE,eAAe,CAAC,wBAAwB;YAClE,cAAc,EAAE,eAAe,CAAC,cAAc;YAE9C,UAAU;YACV,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;SACxC,CAAC;IACH,CAAC;IAnDD,4DAmDC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color } from 'vs/base/common/color';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Token, TokenizationResult, TokenizationResult2 } from 'vs/editor/common/core/token';\nimport * as model from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport { LanguageConfiguration } from 'vs/editor/common/modes/languageConfiguration';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { ModesRegistry } from 'vs/editor/common/modes/modesRegistry';\nimport { ILanguageExtensionPoint } from 'vs/editor/common/services/modeService';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\nimport { StaticServices } from 'vs/editor/standalone/browser/standaloneServices';\nimport { compile } from 'vs/editor/standalone/common/monarch/monarchCompile';\nimport { createTokenizationSupport } from 'vs/editor/standalone/common/monarch/monarchLexer';\nimport { IMonarchLanguage } from 'vs/editor/standalone/common/monarch/monarchTypes';\nimport { IStandaloneThemeService } from 'vs/editor/standalone/common/standaloneThemeService';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\n\n/**\n * Register information about a new language.\n */\nexport function register(language: ILanguageExtensionPoint): void {\n\tModesRegistry.registerLanguage(language);\n}\n\n/**\n * Get the information of all the registered languages.\n */\nexport function getLanguages(): ILanguageExtensionPoint[] {\n\tlet result: ILanguageExtensionPoint[] = [];\n\tresult = result.concat(ModesRegistry.getLanguages());\n\treturn result;\n}\n\nexport function getEncodedLanguageId(languageId: string): number {\n\tlet lid = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n\treturn lid ? lid.id : 0;\n}\n\n/**\n * An event emitted when a language is first time needed (e.g. a model has it set).\n * @event\n */\nexport function onLanguage(languageId: string, callback: () => void): IDisposable {\n\tlet disposable = StaticServices.modeService.get().onDidCreateMode((mode) => {\n\t\tif (mode.getId() === languageId) {\n\t\t\t// stop listening\n\t\t\tdisposable.dispose();\n\t\t\t// invoke actual listener\n\t\t\tcallback();\n\t\t}\n\t});\n\treturn disposable;\n}\n\n/**\n * Set the editing configuration for a language.\n */\nexport function setLanguageConfiguration(languageId: string, configuration: LanguageConfiguration): IDisposable {\n\tlet languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n\tif (!languageIdentifier) {\n\t\tthrow new Error(`Cannot set configuration for unknown language ${languageId}`);\n\t}\n\treturn LanguageConfigurationRegistry.register(languageIdentifier, configuration, 100);\n}\n\n/**\n * @internal\n */\nexport class EncodedTokenizationSupport2Adapter implements modes.ITokenizationSupport {\n\n\tprivate readonly _languageIdentifier: modes.LanguageIdentifier;\n\tprivate readonly _actual: EncodedTokensProvider;\n\n\tconstructor(languageIdentifier: modes.LanguageIdentifier, actual: EncodedTokensProvider) {\n\t\tthis._languageIdentifier = languageIdentifier;\n\t\tthis._actual = actual;\n\t}\n\n\tpublic getInitialState(): modes.IState {\n\t\treturn this._actual.getInitialState();\n\t}\n\n\tpublic tokenize(line: string, hasEOL: boolean, state: modes.IState, offsetDelta: number): TokenizationResult {\n\t\tif (typeof this._actual.tokenize === 'function') {\n\t\t\treturn TokenizationSupport2Adapter.adaptTokenize(this._languageIdentifier.language, <{ tokenize(line: string, state: modes.IState): ILineTokens; }>this._actual, line, state, offsetDelta);\n\t\t}\n\t\tthrow new Error('Not supported!');\n\t}\n\n\tpublic tokenize2(line: string, hasEOL: boolean, state: modes.IState): TokenizationResult2 {\n\t\tlet result = this._actual.tokenizeEncoded(line, state);\n\t\treturn new TokenizationResult2(result.tokens, result.endState);\n\t}\n}\n\n/**\n * @internal\n */\nexport class TokenizationSupport2Adapter implements modes.ITokenizationSupport {\n\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\tprivate readonly _languageIdentifier: modes.LanguageIdentifier;\n\tprivate readonly _actual: TokensProvider;\n\n\tconstructor(standaloneThemeService: IStandaloneThemeService, languageIdentifier: modes.LanguageIdentifier, actual: TokensProvider) {\n\t\tthis._standaloneThemeService = standaloneThemeService;\n\t\tthis._languageIdentifier = languageIdentifier;\n\t\tthis._actual = actual;\n\t}\n\n\tpublic getInitialState(): modes.IState {\n\t\treturn this._actual.getInitialState();\n\t}\n\n\tprivate static _toClassicTokens(tokens: IToken[], language: string, offsetDelta: number): Token[] {\n\t\tlet result: Token[] = [];\n\t\tlet previousStartIndex: number = 0;\n\t\tfor (let i = 0, len = tokens.length; i < len; i++) {\n\t\t\tconst t = tokens[i];\n\t\t\tlet startIndex = t.startIndex;\n\n\t\t\t// Prevent issues stemming from a buggy external tokenizer.\n\t\t\tif (i === 0) {\n\t\t\t\t// Force first token to start at first index!\n\t\t\t\tstartIndex = 0;\n\t\t\t} else if (startIndex < previousStartIndex) {\n\t\t\t\t// Force tokens to be after one another!\n\t\t\t\tstartIndex = previousStartIndex;\n\t\t\t}\n\n\t\t\tresult[i] = new Token(startIndex + offsetDelta, t.scopes, language);\n\n\t\t\tpreviousStartIndex = startIndex;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static adaptTokenize(language: string, actual: { tokenize(line: string, state: modes.IState): ILineTokens; }, line: string, state: modes.IState, offsetDelta: number): TokenizationResult {\n\t\tlet actualResult = actual.tokenize(line, state);\n\t\tlet tokens = TokenizationSupport2Adapter._toClassicTokens(actualResult.tokens, language, offsetDelta);\n\n\t\tlet endState: modes.IState;\n\t\t// try to save an object if possible\n\t\tif (actualResult.endState.equals(state)) {\n\t\t\tendState = state;\n\t\t} else {\n\t\t\tendState = actualResult.endState;\n\t\t}\n\n\t\treturn new TokenizationResult(tokens, endState);\n\t}\n\n\tpublic tokenize(line: string, hasEOL: boolean, state: modes.IState, offsetDelta: number): TokenizationResult {\n\t\treturn TokenizationSupport2Adapter.adaptTokenize(this._languageIdentifier.language, this._actual, line, state, offsetDelta);\n\t}\n\n\tprivate _toBinaryTokens(tokens: IToken[], offsetDelta: number): Uint32Array {\n\t\tconst languageId = this._languageIdentifier.id;\n\t\tconst tokenTheme = this._standaloneThemeService.getColorTheme().tokenTheme;\n\n\t\tlet result: number[] = [], resultLen = 0;\n\t\tlet previousStartIndex: number = 0;\n\t\tfor (let i = 0, len = tokens.length; i < len; i++) {\n\t\t\tconst t = tokens[i];\n\t\t\tconst metadata = tokenTheme.match(languageId, t.scopes);\n\t\t\tif (resultLen > 0 && result[resultLen - 1] === metadata) {\n\t\t\t\t// same metadata\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet startIndex = t.startIndex;\n\n\t\t\t// Prevent issues stemming from a buggy external tokenizer.\n\t\t\tif (i === 0) {\n\t\t\t\t// Force first token to start at first index!\n\t\t\t\tstartIndex = 0;\n\t\t\t} else if (startIndex < previousStartIndex) {\n\t\t\t\t// Force tokens to be after one another!\n\t\t\t\tstartIndex = previousStartIndex;\n\t\t\t}\n\n\t\t\tresult[resultLen++] = startIndex + offsetDelta;\n\t\t\tresult[resultLen++] = metadata;\n\n\t\t\tpreviousStartIndex = startIndex;\n\t\t}\n\n\t\tlet actualResult = new Uint32Array(resultLen);\n\t\tfor (let i = 0; i < resultLen; i++) {\n\t\t\tactualResult[i] = result[i];\n\t\t}\n\t\treturn actualResult;\n\t}\n\n\tpublic tokenize2(line: string, hasEOL: boolean, state: modes.IState, offsetDelta: number): TokenizationResult2 {\n\t\tlet actualResult = this._actual.tokenize(line, state);\n\t\tlet tokens = this._toBinaryTokens(actualResult.tokens, offsetDelta);\n\n\t\tlet endState: modes.IState;\n\t\t// try to save an object if possible\n\t\tif (actualResult.endState.equals(state)) {\n\t\t\tendState = state;\n\t\t} else {\n\t\t\tendState = actualResult.endState;\n\t\t}\n\n\t\treturn new TokenizationResult2(tokens, endState);\n\t}\n}\n\n/**\n * A token.\n */\nexport interface IToken {\n\tstartIndex: number;\n\tscopes: string;\n}\n\n/**\n * The result of a line tokenization.\n */\nexport interface ILineTokens {\n\t/**\n\t * The list of tokens on the line.\n\t */\n\ttokens: IToken[];\n\t/**\n\t * The tokenization end state.\n\t * A pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned.\n\t */\n\tendState: modes.IState;\n}\n\n/**\n * The result of a line tokenization.\n */\nexport interface IEncodedLineTokens {\n\t/**\n\t * The tokens on the line in a binary, encoded format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t * Meta data is in binary format:\n\t * - -------------------------------------------\n\t *     3322 2222 2222 1111 1111 1100 0000 0000\n\t *     1098 7654 3210 9876 5432 1098 7654 3210\n\t * - -------------------------------------------\n\t *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n\t * - -------------------------------------------\n\t *  - L = EncodedLanguageId (8 bits): Use `getEncodedLanguageId` to get the encoded ID of a language.\n\t *  - T = StandardTokenType (3 bits): Other = 0, Comment = 1, String = 2, RegEx = 4.\n\t *  - F = FontStyle (3 bits): None = 0, Italic = 1, Bold = 2, Underline = 4.\n\t *  - f = foreground ColorId (9 bits)\n\t *  - b = background ColorId (9 bits)\n\t *  - The color value for each colorId is defined in IStandaloneThemeData.customTokenColors:\n\t * e.g. colorId = 1 is stored in IStandaloneThemeData.customTokenColors[1]. Color id = 0 means no color,\n\t * id = 1 is for the default foreground color, id = 2 for the default background.\n\t */\n\ttokens: Uint32Array;\n\t/**\n\t * The tokenization end state.\n\t * A pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned.\n\t */\n\tendState: modes.IState;\n}\n\n/**\n * A \"manual\" provider of tokens.\n */\nexport interface TokensProvider {\n\t/**\n\t * The initial state of a language. Will be the state passed in to tokenize the first line.\n\t */\n\tgetInitialState(): modes.IState;\n\t/**\n\t * Tokenize a line given the state at the beginning of the line.\n\t */\n\ttokenize(line: string, state: modes.IState): ILineTokens;\n}\n\n/**\n * A \"manual\" provider of tokens, returning tokens in a binary form.\n */\nexport interface EncodedTokensProvider {\n\t/**\n\t * The initial state of a language. Will be the state passed in to tokenize the first line.\n\t */\n\tgetInitialState(): modes.IState;\n\t/**\n\t * Tokenize a line given the state at the beginning of the line.\n\t */\n\ttokenizeEncoded(line: string, state: modes.IState): IEncodedLineTokens;\n\t/**\n\t * Tokenize a line given the state at the beginning of the line.\n\t */\n\ttokenize?(line: string, state: modes.IState): ILineTokens;\n}\n\nfunction isEncodedTokensProvider(provider: TokensProvider | EncodedTokensProvider): provider is EncodedTokensProvider {\n\treturn 'tokenizeEncoded' in provider;\n}\n\nfunction isThenable<T>(obj: any): obj is Thenable<T> {\n\treturn obj && typeof obj.then === 'function';\n}\n\n/**\n * Change the color map that is used for token colors.\n * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA\n */\nexport function setColorMap(colorMap: string[] | null): void {\n\tif (colorMap) {\n\t\tconst result: Color[] = [null!];\n\t\tfor (let i = 1, len = colorMap.length; i < len; i++) {\n\t\t\tresult[i] = Color.fromHex(colorMap[i]);\n\t\t}\n\t\tStaticServices.standaloneThemeService.get().setColorMapOverride(result);\n\t} else {\n\t\tStaticServices.standaloneThemeService.get().setColorMapOverride(null);\n\t}\n}\n\n/**\n * Set the tokens provider for a language (manual implementation).\n */\nexport function setTokensProvider(languageId: string, provider: TokensProvider | EncodedTokensProvider | Thenable<TokensProvider | EncodedTokensProvider>): IDisposable {\n\tlet languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n\tif (!languageIdentifier) {\n\t\tthrow new Error(`Cannot set tokens provider for unknown language ${languageId}`);\n\t}\n\tconst create = (provider: TokensProvider | EncodedTokensProvider) => {\n\t\tif (isEncodedTokensProvider(provider)) {\n\t\t\treturn new EncodedTokenizationSupport2Adapter(languageIdentifier!, provider);\n\t\t} else {\n\t\t\treturn new TokenizationSupport2Adapter(StaticServices.standaloneThemeService.get(), languageIdentifier!, provider);\n\t\t}\n\t};\n\tif (isThenable<TokensProvider | EncodedTokensProvider>(provider)) {\n\t\treturn modes.TokenizationRegistry.registerPromise(languageId, provider.then(provider => create(provider)));\n\t}\n\treturn modes.TokenizationRegistry.register(languageId, create(provider));\n}\n\n\n/**\n * Set the tokens provider for a language (monarch implementation).\n */\nexport function setMonarchTokensProvider(languageId: string, languageDef: IMonarchLanguage | Thenable<IMonarchLanguage>): IDisposable {\n\tconst create = (languageDef: IMonarchLanguage) => {\n\t\treturn createTokenizationSupport(StaticServices.modeService.get(), StaticServices.standaloneThemeService.get(), languageId, compile(languageId, languageDef));\n\t};\n\tif (isThenable<IMonarchLanguage>(languageDef)) {\n\t\treturn modes.TokenizationRegistry.registerPromise(languageId, languageDef.then(languageDef => create(languageDef)));\n\t}\n\treturn modes.TokenizationRegistry.register(languageId, create(languageDef));\n}\n\n/**\n * Register a reference provider (used by e.g. reference search).\n */\nexport function registerReferenceProvider(languageId: string, provider: modes.ReferenceProvider): IDisposable {\n\treturn modes.ReferenceProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a rename provider (used by e.g. rename symbol).\n */\nexport function registerRenameProvider(languageId: string, provider: modes.RenameProvider): IDisposable {\n\treturn modes.RenameProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a signature help provider (used by e.g. parameter hints).\n */\nexport function registerSignatureHelpProvider(languageId: string, provider: modes.SignatureHelpProvider): IDisposable {\n\treturn modes.SignatureHelpProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a hover provider (used by e.g. editor hover).\n */\nexport function registerHoverProvider(languageId: string, provider: modes.HoverProvider): IDisposable {\n\treturn modes.HoverProviderRegistry.register(languageId, {\n\t\tprovideHover: (model: model.ITextModel, position: Position, token: CancellationToken): Promise<modes.Hover | undefined> => {\n\t\t\tlet word = model.getWordAtPosition(position);\n\n\t\t\treturn Promise.resolve<modes.Hover | null | undefined>(provider.provideHover(model, position, token)).then((value): modes.Hover | undefined => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!value.range && word) {\n\t\t\t\t\tvalue.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n\t\t\t\t}\n\t\t\t\tif (!value.range) {\n\t\t\t\t\tvalue.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Register a document symbol provider (used by e.g. outline).\n */\nexport function registerDocumentSymbolProvider(languageId: string, provider: modes.DocumentSymbolProvider): IDisposable {\n\treturn modes.DocumentSymbolProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a document highlight provider (used by e.g. highlight occurrences).\n */\nexport function registerDocumentHighlightProvider(languageId: string, provider: modes.DocumentHighlightProvider): IDisposable {\n\treturn modes.DocumentHighlightProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register an linked editing range provider.\n */\nexport function registerLinkedEditingRangeProvider(languageId: string, provider: modes.LinkedEditingRangeProvider): IDisposable {\n\treturn modes.LinkedEditingRangeProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a definition provider (used by e.g. go to definition).\n */\nexport function registerDefinitionProvider(languageId: string, provider: modes.DefinitionProvider): IDisposable {\n\treturn modes.DefinitionProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a implementation provider (used by e.g. go to implementation).\n */\nexport function registerImplementationProvider(languageId: string, provider: modes.ImplementationProvider): IDisposable {\n\treturn modes.ImplementationProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a type definition provider (used by e.g. go to type definition).\n */\nexport function registerTypeDefinitionProvider(languageId: string, provider: modes.TypeDefinitionProvider): IDisposable {\n\treturn modes.TypeDefinitionProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a code lens provider (used by e.g. inline code lenses).\n */\nexport function registerCodeLensProvider(languageId: string, provider: modes.CodeLensProvider): IDisposable {\n\treturn modes.CodeLensProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a code action provider (used by e.g. quick fix).\n */\nexport function registerCodeActionProvider(languageId: string, provider: CodeActionProvider): IDisposable {\n\treturn modes.CodeActionProviderRegistry.register(languageId, {\n\t\tprovideCodeActions: (model: model.ITextModel, range: Range, context: modes.CodeActionContext, token: CancellationToken): modes.ProviderResult<modes.CodeActionList> => {\n\t\t\tlet markers = StaticServices.markerService.get().read({ resource: model.uri }).filter(m => {\n\t\t\t\treturn Range.areIntersectingOrTouching(m, range);\n\t\t\t});\n\t\t\treturn provider.provideCodeActions(model, range, { markers, only: context.only }, token);\n\t\t}\n\t});\n}\n\n/**\n * Register a formatter that can handle only entire models.\n */\nexport function registerDocumentFormattingEditProvider(languageId: string, provider: modes.DocumentFormattingEditProvider): IDisposable {\n\treturn modes.DocumentFormattingEditProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a formatter that can handle a range inside a model.\n */\nexport function registerDocumentRangeFormattingEditProvider(languageId: string, provider: modes.DocumentRangeFormattingEditProvider): IDisposable {\n\treturn modes.DocumentRangeFormattingEditProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a formatter than can do formatting as the user types.\n */\nexport function registerOnTypeFormattingEditProvider(languageId: string, provider: modes.OnTypeFormattingEditProvider): IDisposable {\n\treturn modes.OnTypeFormattingEditProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a link provider that can find links in text.\n */\nexport function registerLinkProvider(languageId: string, provider: modes.LinkProvider): IDisposable {\n\treturn modes.LinkProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a completion item provider (use by e.g. suggestions).\n */\nexport function registerCompletionItemProvider(languageId: string, provider: modes.CompletionItemProvider): IDisposable {\n\treturn modes.CompletionProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a document color provider (used by Color Picker, Color Decorator).\n */\nexport function registerColorProvider(languageId: string, provider: modes.DocumentColorProvider): IDisposable {\n\treturn modes.ColorProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a folding range provider\n */\nexport function registerFoldingRangeProvider(languageId: string, provider: modes.FoldingRangeProvider): IDisposable {\n\treturn modes.FoldingRangeProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a declaration provider\n */\nexport function registerDeclarationProvider(languageId: string, provider: modes.DeclarationProvider): IDisposable {\n\treturn modes.DeclarationProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a selection range provider\n */\nexport function registerSelectionRangeProvider(languageId: string, provider: modes.SelectionRangeProvider): IDisposable {\n\treturn modes.SelectionRangeRegistry.register(languageId, provider);\n}\n\n/**\n * Register a document semantic tokens provider\n */\nexport function registerDocumentSemanticTokensProvider(languageId: string, provider: modes.DocumentSemanticTokensProvider): IDisposable {\n\treturn modes.DocumentSemanticTokensProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Register a document range semantic tokens provider\n */\nexport function registerDocumentRangeSemanticTokensProvider(languageId: string, provider: modes.DocumentRangeSemanticTokensProvider): IDisposable {\n\treturn modes.DocumentRangeSemanticTokensProviderRegistry.register(languageId, provider);\n}\n\n/**\n * Contains additional diagnostic information about the context in which\n * a [code action](#CodeActionProvider.provideCodeActions) is run.\n */\nexport interface CodeActionContext {\n\n\t/**\n\t * An array of diagnostics.\n\t */\n\treadonly markers: IMarkerData[];\n\n\t/**\n\t * Requested kind of actions to return.\n\t */\n\treadonly only?: string;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n */\nexport interface CodeActionProvider {\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range, context: CodeActionContext, token: CancellationToken): modes.ProviderResult<modes.CodeActionList>;\n}\n\n/**\n * @internal\n */\nexport function createMonacoLanguagesAPI(): typeof monaco.languages {\n\treturn {\n\t\tregister: <any>register,\n\t\tgetLanguages: <any>getLanguages,\n\t\tonLanguage: <any>onLanguage,\n\t\tgetEncodedLanguageId: <any>getEncodedLanguageId,\n\n\t\t// provider methods\n\t\tsetLanguageConfiguration: <any>setLanguageConfiguration,\n\t\tsetColorMap: setColorMap,\n\t\tsetTokensProvider: <any>setTokensProvider,\n\t\tsetMonarchTokensProvider: <any>setMonarchTokensProvider,\n\t\tregisterReferenceProvider: <any>registerReferenceProvider,\n\t\tregisterRenameProvider: <any>registerRenameProvider,\n\t\tregisterCompletionItemProvider: <any>registerCompletionItemProvider,\n\t\tregisterSignatureHelpProvider: <any>registerSignatureHelpProvider,\n\t\tregisterHoverProvider: <any>registerHoverProvider,\n\t\tregisterDocumentSymbolProvider: <any>registerDocumentSymbolProvider,\n\t\tregisterDocumentHighlightProvider: <any>registerDocumentHighlightProvider,\n\t\tregisterLinkedEditingRangeProvider: <any>registerLinkedEditingRangeProvider,\n\t\tregisterDefinitionProvider: <any>registerDefinitionProvider,\n\t\tregisterImplementationProvider: <any>registerImplementationProvider,\n\t\tregisterTypeDefinitionProvider: <any>registerTypeDefinitionProvider,\n\t\tregisterCodeLensProvider: <any>registerCodeLensProvider,\n\t\tregisterCodeActionProvider: <any>registerCodeActionProvider,\n\t\tregisterDocumentFormattingEditProvider: <any>registerDocumentFormattingEditProvider,\n\t\tregisterDocumentRangeFormattingEditProvider: <any>registerDocumentRangeFormattingEditProvider,\n\t\tregisterOnTypeFormattingEditProvider: <any>registerOnTypeFormattingEditProvider,\n\t\tregisterLinkProvider: <any>registerLinkProvider,\n\t\tregisterColorProvider: <any>registerColorProvider,\n\t\tregisterFoldingRangeProvider: <any>registerFoldingRangeProvider,\n\t\tregisterDeclarationProvider: <any>registerDeclarationProvider,\n\t\tregisterSelectionRangeProvider: <any>registerSelectionRangeProvider,\n\t\tregisterDocumentSemanticTokensProvider: <any>registerDocumentSemanticTokensProvider,\n\t\tregisterDocumentRangeSemanticTokensProvider: <any>registerDocumentRangeSemanticTokensProvider,\n\n\t\t// enums\n\t\tDocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\n\t\tCompletionItemKind: standaloneEnums.CompletionItemKind,\n\t\tCompletionItemTag: standaloneEnums.CompletionItemTag,\n\t\tCompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\n\t\tSymbolKind: standaloneEnums.SymbolKind,\n\t\tSymbolTag: standaloneEnums.SymbolTag,\n\t\tIndentAction: standaloneEnums.IndentAction,\n\t\tCompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\n\t\tSignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\n\t\tInlineHintKind: standaloneEnums.InlineHintKind,\n\n\t\t// classes\n\t\tFoldingRangeKind: modes.FoldingRangeKind,\n\t};\n}\n"]}