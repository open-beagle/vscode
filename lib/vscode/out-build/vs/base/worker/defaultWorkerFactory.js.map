{"version":3,"file":"defaultWorkerFactory.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/worker/defaultWorkerFactory.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;IAKhG,MAAM,QAAQ,GAAG,MAAA,MAAM,CAAC,YAAY,0CAAE,YAAY,CAAC,sBAAsB,EAAE,EAAE,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAEhH,SAAS,SAAS,CAAC,QAAgB,EAAE,KAAa;QACjD,kFAAkF;QAClF,IAAI,kBAAO,CAAC,iBAAiB,EAAE;YAC9B,IAAI,OAAO,kBAAO,CAAC,iBAAiB,CAAC,SAAS,KAAK,UAAU,EAAE;gBAC9D,OAAO,kBAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aAC5D;YACD,IAAI,OAAO,kBAAO,CAAC,iBAAiB,CAAC,YAAY,KAAK,UAAU,EAAE;gBACjE,MAAM,QAAQ,GAAW,kBAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACjF,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAsB,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;aAClH;SACD;QACD,oBAAoB;QACpB,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YAClC,8CAA8C;YAC9C,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,iHAAiH;YACpK,MAAM,SAAS,GAAG,qBAAqB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC3D,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAsB,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;SACpH;QACD,kBAAkB;QAClB,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;IAC7G,CAAC;IAED,oBAAoB;IACpB,SAAgB,qBAAqB,CAAC,UAAkB,EAAE,KAAa;QACtE,IAAI,6BAA6B,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;YAClH,gCAAgC;YAChC,2FAA2F;YAC3F,MAAM,MAAM,GAAG,wCAAwC,CAAC;YACxD,MAAM,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,iHAAiH;YACvL,MAAM,EAAE,GAAG,KAAK,KAAK,uCAAuC,aAAa,qBAAqB,UAAU,QAAQ,KAAK,IAAI,CAAC;YAC1H,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC,CAAC;YAChE,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACjC;QACD,OAAO,UAAU,GAAG,GAAG,GAAG,KAAK,CAAC;IACjC,CAAC;IAXD,sDAWC;IACD,kBAAkB;IAElB,SAAS,aAAa,CAAI,GAAQ;QACjC,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;YACnC,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,MAAM,SAAS;QAKd,YAAY,QAAgB,EAAE,EAAU,EAAE,KAAa,EAAE,iBAAkC,EAAE,eAAmC;YAC/H,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,MAAM,eAAe,GAAG,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,aAAa,CAAC,eAAe,CAAC,EAAE;gBACnC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;aAC9B;iBAAM;gBACN,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACtB,CAAC,CAAC,SAAS,GAAG,UAAU,EAAO;oBAC9B,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC;gBACI,CAAE,CAAC,cAAc,GAAG,eAAe,CAAC;gBAC1C,IAAI,OAAO,CAAC,CAAC,gBAAgB,KAAK,UAAU,EAAE;oBAC7C,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,KAAK;YACX,OAAO,IAAI,CAAC,EAAE,CAAC;QAChB,CAAC;QAEM,WAAW,CAAC,OAAY,EAAE,QAAwB;YACxD,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;aACxD;QACF,CAAC;QAEM,OAAO;YACb,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,CAAC;KACD;IAED,MAAa,oBAAoB;QAOhC,YAAY,KAAyB;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QAC1C,CAAC;QAEM,MAAM,CAAC,QAAgB,EAAE,iBAAkC,EAAE,eAAmC;YACtG,IAAI,QAAQ,GAAG,CAAC,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;YAEvD,IAAI,IAAI,CAAC,2BAA2B,EAAE;gBACrC,MAAM,IAAI,CAAC,2BAA2B,CAAC;aACvC;YAED,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,WAAW,GAAG,QAAQ,EAAE,iBAAiB,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC1G,CAAA,GAAA,sCAAuB,CAAA,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,2BAA2B,GAAG,GAAG,CAAC;gBACvC,eAAe,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACJ,CAAC;;IAxBF,oDAyBC;IAvBe,mCAAc,GAAG,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\nimport { IWorker, IWorkerCallback, IWorkerFactory, logOnceWebWorkerWarning } from 'vs/base/common/worker/simpleWorker';\n\nconst ttPolicy = window.trustedTypes?.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });\n\nfunction getWorker(workerId: string, label: string): Worker | Promise<Worker> {\n\t// Option for hosts to overwrite the worker script (used in the standalone editor)\n\tif (globals.MonacoEnvironment) {\n\t\tif (typeof globals.MonacoEnvironment.getWorker === 'function') {\n\t\t\treturn globals.MonacoEnvironment.getWorker(workerId, label);\n\t\t}\n\t\tif (typeof globals.MonacoEnvironment.getWorkerUrl === 'function') {\n\t\t\tconst wokerUrl = <string>globals.MonacoEnvironment.getWorkerUrl(workerId, label);\n\t\t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(wokerUrl) as unknown as string : wokerUrl, { name: label });\n\t\t}\n\t}\n\t// ESM-comment-begin\n\tif (typeof require === 'function') {\n\t\t// check if the JS lives on a different origin\n\t\tconst workerMain = require.toUrl('./' + workerId); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n\t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\n\t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\n\t}\n\t// ESM-comment-end\n\tthrow new Error(`You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker`);\n}\n\n// ESM-comment-begin\nexport function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\n\tif (/^((http:)|(https:)|(file:))/.test(scriptPath) && scriptPath.substring(0, self.origin.length) !== self.origin) {\n\t\t// this is the cross-origin case\n\t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n\t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\n\t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n\t\tconst js = `/*${label}*/self.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};importScripts('${scriptPath}');/*${label}*/`;\n\t\tconst blob = new Blob([js], { type: 'application/javascript' });\n\t\treturn URL.createObjectURL(blob);\n\t}\n\treturn scriptPath + '#' + label;\n}\n// ESM-comment-end\n\nfunction isPromiseLike<T>(obj: any): obj is PromiseLike<T> {\n\tif (typeof obj.then === 'function') {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nclass WebWorker implements IWorker {\n\n\tprivate id: number;\n\tprivate worker: Promise<Worker> | null;\n\n\tconstructor(moduleId: string, id: number, label: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void) {\n\t\tthis.id = id;\n\t\tconst workerOrPromise = getWorker('workerMain.js', label);\n\t\tif (isPromiseLike(workerOrPromise)) {\n\t\t\tthis.worker = workerOrPromise;\n\t\t} else {\n\t\t\tthis.worker = Promise.resolve(workerOrPromise);\n\t\t}\n\t\tthis.postMessage(moduleId, []);\n\t\tthis.worker.then((w) => {\n\t\t\tw.onmessage = function (ev: any) {\n\t\t\t\tonMessageCallback(ev.data);\n\t\t\t};\n\t\t\t(<any>w).onmessageerror = onErrorCallback;\n\t\t\tif (typeof w.addEventListener === 'function') {\n\t\t\t\tw.addEventListener('error', onErrorCallback);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic postMessage(message: any, transfer: Transferable[]): void {\n\t\tif (this.worker) {\n\t\t\tthis.worker.then(w => w.postMessage(message, transfer));\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.worker) {\n\t\t\tthis.worker.then(w => w.terminate());\n\t\t}\n\t\tthis.worker = null;\n\t}\n}\n\nexport class DefaultWorkerFactory implements IWorkerFactory {\n\n\tprivate static LAST_WORKER_ID = 0;\n\n\tprivate _label: string | undefined;\n\tprivate _webWorkerFailedBeforeError: any;\n\n\tconstructor(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis._webWorkerFailedBeforeError = false;\n\t}\n\n\tpublic create(moduleId: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker {\n\t\tlet workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n\n\t\tif (this._webWorkerFailedBeforeError) {\n\t\t\tthrow this._webWorkerFailedBeforeError;\n\t\t}\n\n\t\treturn new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, (err) => {\n\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\tthis._webWorkerFailedBeforeError = err;\n\t\t\tonErrorCallback(err);\n\t\t});\n\t}\n}\n"]}