{"version":3,"file":"workerMain.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/worker/workerMain.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tconst MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tconst monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tconst trustedTypesPolicy = (\n\t\ttypeof self.trustedTypes?.createPolicy === 'function'\n\t\t\t? self.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL: value => value,\n\t\t\t\tcreateScript: (_, ...args: string[]) => {\n\t\t\t\t\t// workaround a chrome issue not allowing to create new functions\n\t\t\t\t\t// see https://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\n\t\t\t\t\tconst fnArgs = args.slice(0, -1).join(',');\n\t\t\t\t\tconst fnBody = args.pop()!.toString();\n\t\t\t\t\tconst body = `(function anonymous(${fnArgs}) {\\n${fnBody}\\n})`;\n\t\t\t\t\treturn body;\n\t\t\t\t}\n\t\t\t})\n\t\t\t: undefined\n\t);\n\n\tfunction loadAMDLoader() {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (typeof (<any>self).define === 'function' && (<any>self).define.amd) {\n\t\t\t\treturn resolve();\n\t\t\t}\n\t\t\tconst loaderSrc: string | TrustedScriptURL = monacoBaseUrl + 'vs/loader.js';\n\n\t\t\tconst isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(loaderSrc) && loaderSrc.substring(0, self.origin.length) !== self.origin);\n\t\t\tif (!isCrossOrigin) {\n\t\t\t\t// use `fetch` if possible because `importScripts`\n\t\t\t\t// is synchronous and can lead to deadlocks on Safari\n\t\t\t\tfetch(loaderSrc).then((response) => {\n\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t}\n\t\t\t\t\treturn response.text();\n\t\t\t\t}).then((text) => {\n\t\t\t\t\ttext = `${text}\\n//# sourceURL=${loaderSrc}`;\n\t\t\t\t\tconst func = (\n\t\t\t\t\t\ttrustedTypesPolicy\n\t\t\t\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', text) as unknown as string)\n\t\t\t\t\t\t\t: new Function(text)\n\t\t\t\t\t);\n\t\t\t\t\tfunc.call(self);\n\t\t\t\t\tresolve();\n\t\t\t\t}).then(undefined, reject);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (trustedTypesPolicy) {\n\t\t\t\timportScripts(trustedTypesPolicy.createScriptURL(loaderSrc) as unknown as string);\n\t\t\t} else {\n\t\t\t\timportScripts(loaderSrc as string);\n\t\t\t}\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tconst loadCode = function (moduleId: string) {\n\t\tloadAMDLoader().then(() => {\n\t\t\trequire.config({\n\t\t\t\tbaseUrl: monacoBaseUrl,\n\t\t\t\tcatchError: true,\n\t\t\t\ttrustedTypesPolicy,\n\t\t\t});\n\t\t\trequire([moduleId], function (ws) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tlet messageHandler = ws.create((msg: any, transfer?: Transferable[]) => {\n\t\t\t\t\t\t(<any>self).postMessage(msg, transfer);\n\t\t\t\t\t}, null);\n\n\t\t\t\t\tself.onmessage = (e: MessageEvent) => messageHandler.onmessage(e.data);\n\t\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message: MessageEvent) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}