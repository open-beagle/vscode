{"version":3,"file":"iconLabels.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/iconLabels.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAElC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;YACrB,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,gBAAgB,CAAC,CAAC;YAEtD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;YACvB,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,UAAU,CAAC,CAAC;YAEhD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACtC,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,wBAAwB,CAAC,CAAC;YAE9D,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,2DAA2D,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;YAC3B,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,kBAAkB,CAAC,CAAC;YAExD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,wFAAwF,CAAC,CAAC;QACxI,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,cAAc,CAAC,CAAC;YAEpD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,MAAM,MAAM,GAAG,CAAA,GAAA,iCAAoB,CAAA,CAAC,aAAa,CAAC,CAAC;YAEnD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,iEAAiE,CAAC,CAAC;QACjH,CAAC,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,CAAC,QAAqC,EAAU,EAAE;YAC1E,OAAO,QAAQ;iBACb,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,YAAY,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;iBAChE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\n\nsuite('renderLabelWithIcons', () => {\n\n\ttest('no icons', () => {\n\t\tconst result = renderLabelWithIcons(' hello World .');\n\n\t\tassert.strictEqual(elementsToString(result), ' hello World .');\n\t});\n\n\ttest('icons only', () => {\n\t\tconst result = renderLabelWithIcons('$(alert)');\n\n\t\tassert.strictEqual(elementsToString(result), '<span class=\"codicon codicon-alert\"></span>');\n\t});\n\n\ttest('icon and non-icon strings', () => {\n\t\tconst result = renderLabelWithIcons(` $(alert) Unresponsive`);\n\n\t\tassert.strictEqual(elementsToString(result), ' <span class=\"codicon codicon-alert\"></span> Unresponsive');\n\t});\n\n\ttest('multiple icons', () => {\n\t\tconst result = renderLabelWithIcons('$(check)$(error)');\n\n\t\tassert.strictEqual(elementsToString(result), '<span class=\"codicon codicon-check\"></span><span class=\"codicon codicon-error\"></span>');\n\t});\n\n\ttest('escaped icons', () => {\n\t\tconst result = renderLabelWithIcons('\\\\$(escaped)');\n\n\t\tassert.strictEqual(elementsToString(result), '$(escaped)');\n\t});\n\n\ttest('icon with animation', () => {\n\t\tconst result = renderLabelWithIcons('$(zip~anim)');\n\n\t\tassert.strictEqual(elementsToString(result), '<span class=\"codicon codicon-zip codicon-modifier-anim\"></span>');\n\t});\n\n\tconst elementsToString = (elements: Array<HTMLElement | string>): string => {\n\t\treturn elements\n\t\t\t.map(elem => elem instanceof HTMLElement ? elem.outerHTML : elem)\n\t\t\t.reduce((a, b) => a + b, '');\n\t};\n});\n"]}