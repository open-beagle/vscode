{"version":3,"file":"markdownRenderer.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/markdownRenderer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { renderMarkdown, renderMarkdownAsPlaintext } from 'vs/base/browser/markdownRenderer';\nimport { MarkdownString, IMarkdownString } from 'vs/base/common/htmlContent';\nimport { URI } from 'vs/base/common/uri';\nimport { parse } from 'vs/base/common/marshalling';\n\nsuite('MarkdownRenderer', () => {\n\tsuite('Images', () => {\n\n\t\ttest('image rendering conforms to default', () => {\n\t\t\tconst markdown = { value: `![image](someimageurl 'caption')` };\n\t\t\tconst result: HTMLElement = renderMarkdown(markdown);\n\t\t\tconst renderer = new marked.Renderer();\n\t\t\tconst imageFromMarked = marked(markdown.value, {\n\t\t\t\trenderer\n\t\t\t}).trim();\n\t\t\tassert.strictEqual(result.innerHTML, imageFromMarked);\n\t\t});\n\n\t\ttest('image rendering conforms to default without title', () => {\n\t\t\tconst markdown = { value: `![image](someimageurl)` };\n\t\t\tconst result: HTMLElement = renderMarkdown(markdown);\n\t\t\tconst renderer = new marked.Renderer();\n\t\t\tconst imageFromMarked = marked(markdown.value, {\n\t\t\t\trenderer\n\t\t\t}).trim();\n\t\t\tassert.strictEqual(result.innerHTML, imageFromMarked);\n\t\t});\n\n\t\ttest('image width from title params', () => {\n\t\t\tlet result: HTMLElement = renderMarkdown({ value: `![image](someimageurl|width=100 'caption')` });\n\t\t\tassert.strictEqual(result.innerHTML, `<p><img src=\"someimageurl\" alt=\"image\" title=\"caption\" width=\"100\"></p>`);\n\t\t});\n\n\t\ttest('image height from title params', () => {\n\t\t\tlet result: HTMLElement = renderMarkdown({ value: `![image](someimageurl|height=100 'caption')` });\n\t\t\tassert.strictEqual(result.innerHTML, `<p><img src=\"someimageurl\" alt=\"image\" title=\"caption\" height=\"100\"></p>`);\n\t\t});\n\n\t\ttest('image width and height from title params', () => {\n\t\t\tlet result: HTMLElement = renderMarkdown({ value: `![image](someimageurl|height=200,width=100 'caption')` });\n\t\t\tassert.strictEqual(result.innerHTML, `<p><img src=\"someimageurl\" alt=\"image\" title=\"caption\" width=\"100\" height=\"200\"></p>`);\n\t\t});\n\n\t});\n\n\tsuite('ThemeIcons Support On', () => {\n\n\t\ttest('render appendText', () => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\tmds.appendText('$(zap) $(not a theme icon) $(add)');\n\n\t\t\tlet result: HTMLElement = renderMarkdown(mds);\n\t\t\tassert.strictEqual(result.innerHTML, `<p>$(zap)&nbsp;$(not&nbsp;a&nbsp;theme&nbsp;icon)&nbsp;$(add)</p>`);\n\t\t});\n\n\t\ttest('render appendMarkdown', () => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\tmds.appendMarkdown('$(zap) $(not a theme icon) $(add)');\n\n\t\t\tlet result: HTMLElement = renderMarkdown(mds);\n\t\t\tassert.strictEqual(result.innerHTML, `<p><span class=\"codicon codicon-zap\"></span> $(not a theme icon) <span class=\"codicon codicon-add\"></span></p>`);\n\t\t});\n\n\t\ttest('render appendMarkdown with escaped icon', () => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\tmds.appendMarkdown('\\\\$(zap) $(not a theme icon) $(add)');\n\n\t\t\tlet result: HTMLElement = renderMarkdown(mds);\n\t\t\tassert.strictEqual(result.innerHTML, `<p>$(zap) $(not a theme icon) <span class=\"codicon codicon-add\"></span></p>`);\n\t\t});\n\n\t});\n\n\tsuite('ThemeIcons Support Off', () => {\n\n\t\ttest('render appendText', () => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: false });\n\t\t\tmds.appendText('$(zap) $(not a theme icon) $(add)');\n\n\t\t\tlet result: HTMLElement = renderMarkdown(mds);\n\t\t\tassert.strictEqual(result.innerHTML, `<p>$(zap)&nbsp;$(not&nbsp;a&nbsp;theme&nbsp;icon)&nbsp;$(add)</p>`);\n\t\t});\n\n\t\ttest('render appendMarkdown with escaped icon', () => {\n\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: false });\n\t\t\tmds.appendMarkdown('\\\\$(zap) $(not a theme icon) $(add)');\n\n\t\t\tlet result: HTMLElement = renderMarkdown(mds);\n\t\t\tassert.strictEqual(result.innerHTML, `<p>$(zap) $(not a theme icon) $(add)</p>`);\n\t\t});\n\n\t});\n\n\ttest('npm Hover Run Script not working #90855', function () {\n\n\t\tconst md: IMarkdownString = JSON.parse('{\"value\":\"[Run Script](command:npm.runScriptFromHover?%7B%22documentUri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22c%3A%5C%5CUsers%5C%5Cjrieken%5C%5CCode%5C%5C_sample%5C%5Cfoo%5C%5Cpackage.json%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fc%253A%2FUsers%2Fjrieken%2FCode%2F_sample%2Ffoo%2Fpackage.json%22%2C%22path%22%3A%22%2Fc%3A%2FUsers%2Fjrieken%2FCode%2F_sample%2Ffoo%2Fpackage.json%22%2C%22scheme%22%3A%22file%22%7D%2C%22script%22%3A%22echo%22%7D \\\\\"Run the script as a task\\\\\")\",\"supportThemeIcons\":false,\"isTrusted\":true,\"uris\":{\"__uri_e49443\":{\"$mid\":1,\"fsPath\":\"c:\\\\\\\\Users\\\\\\\\jrieken\\\\\\\\Code\\\\\\\\_sample\\\\\\\\foo\\\\\\\\package.json\",\"_sep\":1,\"external\":\"file:///c%3A/Users/jrieken/Code/_sample/foo/package.json\",\"path\":\"/c:/Users/jrieken/Code/_sample/foo/package.json\",\"scheme\":\"file\"},\"command:npm.runScriptFromHover?%7B%22documentUri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22c%3A%5C%5CUsers%5C%5Cjrieken%5C%5CCode%5C%5C_sample%5C%5Cfoo%5C%5Cpackage.json%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fc%253A%2FUsers%2Fjrieken%2FCode%2F_sample%2Ffoo%2Fpackage.json%22%2C%22path%22%3A%22%2Fc%3A%2FUsers%2Fjrieken%2FCode%2F_sample%2Ffoo%2Fpackage.json%22%2C%22scheme%22%3A%22file%22%7D%2C%22script%22%3A%22echo%22%7D\":{\"$mid\":1,\"path\":\"npm.runScriptFromHover\",\"scheme\":\"command\",\"query\":\"{\\\\\"documentUri\\\\\":\\\\\"__uri_e49443\\\\\",\\\\\"script\\\\\":\\\\\"echo\\\\\"}\"}}}');\n\t\tconst element = renderMarkdown(md);\n\n\t\tconst anchor = element.querySelector('a')!;\n\t\tassert.ok(anchor);\n\t\tassert.ok(anchor.dataset['href']);\n\n\t\tconst uri = URI.parse(anchor.dataset['href']!);\n\n\t\tconst data = <{ script: string, documentUri: URI }>parse(decodeURIComponent(uri.query));\n\t\tassert.ok(data);\n\t\tassert.strictEqual(data.script, 'echo');\n\t\tassert.ok(data.documentUri.toString().startsWith('file:///c%3A/'));\n\t});\n\n\tsuite('PlaintextMarkdownRender', () => {\n\n\t\ttest('test code, blockquote, heading, list, listitem, paragraph, table, tablerow, tablecell, strong, em, br, del, text are rendered plaintext', () => {\n\t\t\tconst markdown = { value: '`code`\\n>quote\\n# heading\\n- list\\n\\n\\ntable | table2\\n--- | --- \\none | two\\n\\n\\nbo**ld**\\n_italic_\\n~~del~~\\nsome text' };\n\t\t\tconst expected = 'code\\nquote\\nheading\\nlist\\ntable table2 one two \\nbold\\nitalic\\ndel\\nsome text\\n';\n\t\t\tconst result: string = renderMarkdownAsPlaintext(markdown);\n\t\t\tassert.strictEqual(result, expected);\n\t\t});\n\n\t\ttest('test html, hr, image, link are rendered plaintext', () => {\n\t\t\tconst markdown = { value: '<div>html</div>\\n\\n---\\n![image](imageLink)\\n[text](textLink)' };\n\t\t\tconst expected = '\\ntext\\n';\n\t\t\tconst result: string = renderMarkdownAsPlaintext(markdown);\n\t\t\tassert.strictEqual(result, expected);\n\t\t});\n\t});\n});\n"]}