{"version":3,"file":"splitview.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/splitview/splitview.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,MAAM,QAAQ;QA2Bb,YACS,YAAoB,EACpB,YAAoB,EACnB,yBAAgD;YAFjD,iBAAY,GAAZ,YAAY,CAAQ;YACpB,iBAAY,GAAZ,YAAY,CAAQ;YACnB,aAAQ,GAAR,QAAQ,CAAwC;YA5BzC,iBAAY,GAAG,IAAI,eAAO,EAAsB,CAAC;YACzD,gBAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAQvC,aAAQ,GAAgB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAG7C,qBAAgB,GAAG,IAAI,eAAO,EAAQ,CAAC;YAC/C,oBAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAE/C,UAAK,GAAG,CAAC,CAAC;YAEV,oBAAe,GAAuB,CAAC,CAAC;YAE/B,iBAAY,GAAG,IAAI,eAAO,EAAwD,CAAC;YAC3F,gBAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAE9B,gBAAW,GAAG,IAAI,eAAO,EAAQ,CAAC;YAC1C,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAO5C,MAAM,CAAC,YAAY,IAAI,YAAY,EAAE,qDAAqD,CAAC,CAAC;QAC7F,CAAC;QA5BD,IAAI,WAAW,KAAa,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACvD,IAAI,WAAW,CAAC,IAAY,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE9F,IAAI,WAAW,KAAa,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACvD,IAAI,WAAW,CAAC,IAAY,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAG9F,IAAI,OAAO,KAAkB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAMlF,IAAI,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEzC,IAAI,cAAc,KAAyB,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAezE,MAAM,CAAC,IAAY,EAAE,OAAe,EAAE,cAAkC;YACvE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;YACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;QAClD,CAAC;QAED,KAAK;YACJ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QAED,OAAO;YACN,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;KACD;IAED,SAAS,SAAS,CAAC,SAAoB;QACtC,OAAQ,SAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAW,CAAC;IACvE,CAAC;IAED,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE;QACvB,IAAI,SAAsB,CAAC;QAE3B,KAAK,CAAC,GAAG,EAAE;YACV,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;YACnC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;YAC1C,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAkB,CAAC,iBAAkB,CAAC,iBAAiB,EAAE,CAAC,EAAE,4BAA4B,CAAC,CAAC;YACvH,SAAS,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC7C,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACnC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACnC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACnC,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAE3C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7B,IAAI,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,6FAA6F,CAAC,CAAC;YAC1I,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,gCAAgC,CAAC,CAAC;YAE1E,IAAI,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,sDAAsD,CAAC,CAAC;YACnG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,iCAAiC,CAAC,CAAC;YAE3E,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAExB,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,6FAA6F,CAAC,CAAC;YACtI,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,gCAAgC,CAAC,CAAC;YAE1E,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,sDAAsD,CAAC,CAAC;YAC/F,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,+BAA+B,CAAC,CAAC;YAEzE,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAExB,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,6FAA6F,CAAC,CAAC;YACtI,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,+BAA+B,CAAC,CAAC;YAEzE,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,sDAAsD,CAAC,CAAC;YAC/F,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,kCAAkC,CAAC,CAAC;YAE5E,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAExB,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,6FAA6F,CAAC,CAAC;YACtI,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,iCAAiC,CAAC,CAAC;YAE3E,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,sDAAsD,CAAC,CAAC;YAC/F,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,kCAAkC,CAAC,CAAC;YAE5E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACzD,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAClC,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAE3C,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;YAElE,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;YAE/D,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAE5B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,qBAAqB,CAAC,CAAC;YACzD,MAAM,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAEtC,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC3B,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,GAAG,EAAE;YACvC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACxD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;YAExD,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC;YAE3D,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;YAExD,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAC;YAEvD,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;YAErD,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;YAExD,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC7B,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;YAEvD,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAE3D,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEzD,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEzD,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;YAEvD,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YAEvB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAE1D,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YAEvB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEzD,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YAExB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAE3D,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,iBAAiB,CAAC;YAC7C,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YAExB,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;YAE1D,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;YACjD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAE5C,IAAI,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;YAClC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,sBAAsB,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,yBAAyB,CAAC,CAAC;YAEnF,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,yBAAyB,CAAC,CAAC;YAEnF,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,oBAAsB,yBAAyB,CAAC,CAAC;YAEnF,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAqB,wBAAwB,CAAC,CAAC;YAEjF,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC1D,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAEnC,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,yBAAyB,CAAC,CAAC;YAE/D,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE;gBAC1B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,yBAAyB,CAAC,CAAC;YAEpE,MAAM,cAAc,GAAG,SAAS,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,+BAA+B,CAAC,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,+BAA+B,CAAC,CAAC;YAClH,MAAM,CAAC,WAAW,CAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,8BAA8B,CAAC,CAAC;YAE1H,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEpC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5D,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7D,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACpC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAE3C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC9B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7B,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7B,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEpC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7D,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;YAC3B,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEpC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7D,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC3C,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7D,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3D,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7D,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3D,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE;YACjC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,eAAsB,CAAC;YAC9E,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,cAAqB,CAAC;YAC7E,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,SAAS,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3E,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;YAE5E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,iBAAiB,cAAqB,CAAC;YAC7E,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAS,SAAS,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC;YAClF,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,kBAAM,CAAC,UAAU,CAAC,CAAC;YAE5C,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC3B,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE5G,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Emitter } from 'vs/base/common/event';\nimport { SplitView, IView, Sizing, LayoutPriority } from 'vs/base/browser/ui/splitview/splitview';\nimport { Sash, SashState } from 'vs/base/browser/ui/sash/sash';\n\nclass TestView implements IView<number> {\n\n\tprivate readonly _onDidChange = new Emitter<number | undefined>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tget minimumSize(): number { return this._minimumSize; }\n\tset minimumSize(size: number) { this._minimumSize = size; this._onDidChange.fire(undefined); }\n\n\tget maximumSize(): number { return this._maximumSize; }\n\tset maximumSize(size: number) { this._maximumSize = size; this._onDidChange.fire(undefined); }\n\n\tprivate _element: HTMLElement = document.createElement('div');\n\tget element(): HTMLElement { this._onDidGetElement.fire(); return this._element; }\n\n\tprivate readonly _onDidGetElement = new Emitter<void>();\n\treadonly onDidGetElement = this._onDidGetElement.event;\n\n\tprivate _size = 0;\n\tget size(): number { return this._size; }\n\tprivate _orthogonalSize: number | undefined = 0;\n\tget orthogonalSize(): number | undefined { return this._orthogonalSize; }\n\tprivate readonly _onDidLayout = new Emitter<{ size: number; orthogonalSize: number | undefined }>();\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\tprivate readonly _onDidFocus = new Emitter<void>();\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tconstructor(\n\t\tprivate _minimumSize: number,\n\t\tprivate _maximumSize: number,\n\t\treadonly priority: LayoutPriority = LayoutPriority.Normal\n\t) {\n\t\tassert(_minimumSize <= _maximumSize, 'splitview view minimum size must be <= maximum size');\n\t}\n\n\tlayout(size: number, _offset: number, orthogonalSize: number | undefined): void {\n\t\tthis._size = size;\n\t\tthis._orthogonalSize = orthogonalSize;\n\t\tthis._onDidLayout.fire({ size, orthogonalSize });\n\t}\n\n\tfocus(): void {\n\t\tthis._onDidFocus.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._onDidGetElement.dispose();\n\t\tthis._onDidLayout.dispose();\n\t\tthis._onDidFocus.dispose();\n\t}\n}\n\nfunction getSashes(splitview: SplitView): Sash[] {\n\treturn (splitview as any).sashItems.map((i: any) => i.sash) as Sash[];\n}\n\nsuite('Splitview', () => {\n\tlet container: HTMLElement;\n\n\tsetup(() => {\n\t\tcontainer = document.createElement('div');\n\t\tcontainer.style.position = 'absolute';\n\t\tcontainer.style.width = `${200}px`;\n\t\tcontainer.style.height = `${200}px`;\n\t});\n\n\ttest('empty splitview has empty DOM', () => {\n\t\tconst splitview = new SplitView(container);\n\t\tassert.strictEqual(container.firstElementChild!.firstElementChild!.childElementCount, 0, 'split view should be empty');\n\t\tsplitview.dispose();\n\t});\n\n\ttest('has views and sashes as children', () => {\n\t\tconst view1 = new TestView(20, 20);\n\t\tconst view2 = new TestView(20, 20);\n\t\tconst view3 = new TestView(20, 20);\n\t\tconst splitview = new SplitView(container);\n\n\t\tsplitview.addView(view1, 20);\n\t\tsplitview.addView(view2, 20);\n\t\tsplitview.addView(view3, 20);\n\n\t\tlet viewQuery = container.querySelectorAll('.monaco-split-view2 > .monaco-scrollable-element > .split-view-container > .split-view-view');\n\t\tassert.strictEqual(viewQuery.length, 3, 'split view should have 3 views');\n\n\t\tlet sashQuery = container.querySelectorAll('.monaco-split-view2 > .sash-container > .monaco-sash');\n\t\tassert.strictEqual(sashQuery.length, 2, 'split view should have 2 sashes');\n\n\t\tsplitview.removeView(2);\n\n\t\tviewQuery = container.querySelectorAll('.monaco-split-view2 > .monaco-scrollable-element > .split-view-container > .split-view-view');\n\t\tassert.strictEqual(viewQuery.length, 2, 'split view should have 2 views');\n\n\t\tsashQuery = container.querySelectorAll('.monaco-split-view2 > .sash-container > .monaco-sash');\n\t\tassert.strictEqual(sashQuery.length, 1, 'split view should have 1 sash');\n\n\t\tsplitview.removeView(0);\n\n\t\tviewQuery = container.querySelectorAll('.monaco-split-view2 > .monaco-scrollable-element > .split-view-container > .split-view-view');\n\t\tassert.strictEqual(viewQuery.length, 1, 'split view should have 1 view');\n\n\t\tsashQuery = container.querySelectorAll('.monaco-split-view2 > .sash-container > .monaco-sash');\n\t\tassert.strictEqual(sashQuery.length, 0, 'split view should have no sashes');\n\n\t\tsplitview.removeView(0);\n\n\t\tviewQuery = container.querySelectorAll('.monaco-split-view2 > .monaco-scrollable-element > .split-view-container > .split-view-view');\n\t\tassert.strictEqual(viewQuery.length, 0, 'split view should have no views');\n\n\t\tsashQuery = container.querySelectorAll('.monaco-split-view2 > .sash-container > .monaco-sash');\n\t\tassert.strictEqual(sashQuery.length, 0, 'split view should have no sashes');\n\n\t\tsplitview.dispose();\n\t\tview1.dispose();\n\t\tview2.dispose();\n\t\tview3.dispose();\n\t});\n\n\ttest('calls view methods on addView and removeView', () => {\n\t\tconst view = new TestView(20, 20);\n\t\tconst splitview = new SplitView(container);\n\n\t\tlet didLayout = false;\n\t\tconst layoutDisposable = view.onDidLayout(() => didLayout = true);\n\n\t\tconst renderDisposable = view.onDidGetElement(() => undefined);\n\n\t\tsplitview.addView(view, 20);\n\n\t\tassert.strictEqual(view.size, 20, 'view has right size');\n\t\tassert(didLayout, 'layout is called');\n\t\tassert(didLayout, 'render is called');\n\n\t\tsplitview.dispose();\n\t\tlayoutDisposable.dispose();\n\t\trenderDisposable.dispose();\n\t\tview.dispose();\n\t});\n\n\ttest('stretches view to viewport', () => {\n\t\tconst view = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view, 20);\n\t\tassert.strictEqual(view.size, 200, 'view is stretched');\n\n\t\tsplitview.layout(200);\n\t\tassert.strictEqual(view.size, 200, 'view stayed the same');\n\n\t\tsplitview.layout(100);\n\t\tassert.strictEqual(view.size, 100, 'view is collapsed');\n\n\t\tsplitview.layout(20);\n\t\tassert.strictEqual(view.size, 20, 'view is collapsed');\n\n\t\tsplitview.layout(10);\n\t\tassert.strictEqual(view.size, 20, 'view is clamped');\n\n\t\tsplitview.layout(200);\n\t\tassert.strictEqual(view.size, 200, 'view is stretched');\n\n\t\tsplitview.dispose();\n\t\tview.dispose();\n\t});\n\n\ttest('can resize views', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, 20);\n\t\tsplitview.addView(view2, 20);\n\t\tsplitview.addView(view3, 20);\n\n\t\tassert.strictEqual(view1.size, 160, 'view1 is stretched');\n\t\tassert.strictEqual(view2.size, 20, 'view2 size is 20');\n\t\tassert.strictEqual(view3.size, 20, 'view3 size is 20');\n\n\t\tsplitview.resizeView(1, 40);\n\n\t\tassert.strictEqual(view1.size, 140, 'view1 is collapsed');\n\t\tassert.strictEqual(view2.size, 40, 'view2 is stretched');\n\t\tassert.strictEqual(view3.size, 20, 'view3 stays the same');\n\n\t\tsplitview.resizeView(0, 70);\n\n\t\tassert.strictEqual(view1.size, 70, 'view1 is collapsed');\n\t\tassert.strictEqual(view2.size, 40, 'view2 stays the same');\n\t\tassert.strictEqual(view3.size, 90, 'view3 is stretched');\n\n\t\tsplitview.resizeView(2, 40);\n\n\t\tassert.strictEqual(view1.size, 70, 'view1 stays the same');\n\t\tassert.strictEqual(view2.size, 90, 'view2 is collapsed');\n\t\tassert.strictEqual(view3.size, 40, 'view3 is stretched');\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('reacts to view changes', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, 20);\n\t\tsplitview.addView(view2, 20);\n\t\tsplitview.addView(view3, 20);\n\n\t\tassert.strictEqual(view1.size, 160, 'view1 is stretched');\n\t\tassert.strictEqual(view2.size, 20, 'view2 size is 20');\n\t\tassert.strictEqual(view3.size, 20, 'view3 size is 20');\n\n\t\tview1.maximumSize = 20;\n\n\t\tassert.strictEqual(view1.size, 20, 'view1 is collapsed');\n\t\tassert.strictEqual(view2.size, 20, 'view2 stays the same');\n\t\tassert.strictEqual(view3.size, 160, 'view3 is stretched');\n\n\t\tview3.maximumSize = 40;\n\n\t\tassert.strictEqual(view1.size, 20, 'view1 stays the same');\n\t\tassert.strictEqual(view2.size, 140, 'view2 is stretched');\n\t\tassert.strictEqual(view3.size, 40, 'view3 is collapsed');\n\n\t\tview2.maximumSize = 200;\n\n\t\tassert.strictEqual(view1.size, 20, 'view1 stays the same');\n\t\tassert.strictEqual(view2.size, 140, 'view2 stays the same');\n\t\tassert.strictEqual(view3.size, 40, 'view3 stays the same');\n\n\t\tview3.maximumSize = Number.POSITIVE_INFINITY;\n\t\tview3.minimumSize = 100;\n\n\t\tassert.strictEqual(view1.size, 20, 'view1 is collapsed');\n\t\tassert.strictEqual(view2.size, 80, 'view2 is collapsed');\n\t\tassert.strictEqual(view3.size, 100, 'view3 is stretched');\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('sashes are properly enabled/disabled', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tsplitview.addView(view3, Sizing.Distribute);\n\n\t\tlet sashes = getSashes(splitview);\n\t\tassert.strictEqual(sashes.length, 2, 'there are two sashes');\n\t\tassert.strictEqual(sashes[0].state, SashState.Enabled, 'first sash is enabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Enabled, 'second sash is enabled');\n\n\t\tsplitview.layout(60);\n\t\tassert.strictEqual(sashes[0].state, SashState.Disabled, 'first sash is disabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Disabled, 'second sash is disabled');\n\n\t\tsplitview.layout(20);\n\t\tassert.strictEqual(sashes[0].state, SashState.Disabled, 'first sash is disabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Disabled, 'second sash is disabled');\n\n\t\tsplitview.layout(200);\n\t\tassert.strictEqual(sashes[0].state, SashState.Enabled, 'first sash is enabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Enabled, 'second sash is enabled');\n\n\t\tview1.maximumSize = 20;\n\t\tassert.strictEqual(sashes[0].state, SashState.Disabled, 'first sash is disabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Enabled, 'second sash is enabled');\n\n\t\tview2.maximumSize = 20;\n\t\tassert.strictEqual(sashes[0].state, SashState.Disabled, 'first sash is disabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Disabled, 'second sash is disabled');\n\n\t\tview1.maximumSize = 300;\n\t\tassert.strictEqual(sashes[0].state, SashState.Minimum, 'first sash is enabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Minimum, 'second sash is enabled');\n\n\t\tview2.maximumSize = 200;\n\t\tassert.strictEqual(sashes[0].state, SashState.Minimum, 'first sash is enabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Minimum, 'second sash is enabled');\n\n\t\tsplitview.resizeView(0, 40);\n\t\tassert.strictEqual(sashes[0].state, SashState.Enabled, 'first sash is enabled');\n\t\tassert.strictEqual(sashes[1].state, SashState.Enabled, 'second sash is enabled');\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('issue #35497', () => {\n\t\tconst view1 = new TestView(160, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(66, 66);\n\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(986);\n\n\t\tsplitview.addView(view1, 142, 0);\n\t\tassert.strictEqual(view1.size, 986, 'first view is stretched');\n\n\t\tview2.onDidGetElement(() => {\n\t\t\tassert.throws(() => splitview.resizeView(1, 922));\n\t\t\tassert.throws(() => splitview.resizeView(1, 922));\n\t\t});\n\n\t\tsplitview.addView(view2, 66, 0);\n\t\tassert.strictEqual(view2.size, 66, 'second view is fixed');\n\t\tassert.strictEqual(view1.size, 986 - 66, 'first view is collapsed');\n\n\t\tconst viewContainers = container.querySelectorAll('.split-view-view');\n\t\tassert.strictEqual(viewContainers.length, 2, 'there are two view containers');\n\t\tassert.strictEqual((viewContainers.item(0) as HTMLElement).style.height, '66px', 'second view container is 66px');\n\t\tassert.strictEqual((viewContainers.item(1) as HTMLElement).style.height, `${986 - 66}px`, 'first view container is 66px');\n\n\t\tsplitview.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('automatic size distribution', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tassert.strictEqual(view1.size, 200);\n\n\t\tsplitview.addView(view2, 50);\n\t\tassert.deepStrictEqual([view1.size, view2.size], [150, 50]);\n\n\t\tsplitview.addView(view3, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 66, 68]);\n\n\t\tsplitview.removeView(1, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view3.size], [100, 100]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('add views before layout', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\n\t\tsplitview.addView(view1, 100);\n\t\tsplitview.addView(view2, 75);\n\t\tsplitview.addView(view3, 25);\n\n\t\tsplitview.layout(200);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [67, 67, 66]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('split sizing', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tassert.strictEqual(view1.size, 200);\n\n\t\tsplitview.addView(view2, Sizing.Split(0));\n\t\tassert.deepStrictEqual([view1.size, view2.size], [100, 100]);\n\n\t\tsplitview.addView(view3, Sizing.Split(1));\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [100, 50, 50]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('split sizing 2', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tassert.strictEqual(view1.size, 200);\n\n\t\tsplitview.addView(view2, Sizing.Split(0));\n\t\tassert.deepStrictEqual([view1.size, view2.size], [100, 100]);\n\n\t\tsplitview.addView(view3, Sizing.Split(0));\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [50, 100, 50]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('proportional layout', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container);\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view2.size], [100, 100]);\n\n\t\tsplitview.layout(100);\n\t\tassert.deepStrictEqual([view1.size, view2.size], [50, 50]);\n\n\t\tsplitview.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('disable proportional layout', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container, { proportionalLayout: false });\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view2.size], [100, 100]);\n\n\t\tsplitview.layout(100);\n\t\tassert.deepStrictEqual([view1.size, view2.size], [80, 20]);\n\n\t\tsplitview.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('high layout priority', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY, LayoutPriority.High);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst splitview = new SplitView(container, { proportionalLayout: false });\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tsplitview.addView(view3, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 68, 66]);\n\n\t\tsplitview.layout(180);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 48, 66]);\n\n\t\tsplitview.layout(124);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 20, 38]);\n\n\t\tsplitview.layout(60);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [20, 20, 20]);\n\n\t\tsplitview.layout(200);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [20, 160, 20]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('low layout priority', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY, LayoutPriority.Low);\n\t\tconst splitview = new SplitView(container, { proportionalLayout: false });\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tsplitview.addView(view3, Sizing.Distribute);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 68, 66]);\n\n\t\tsplitview.layout(180);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [66, 48, 66]);\n\n\t\tsplitview.layout(132);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [46, 20, 66]);\n\n\t\tsplitview.layout(60);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [20, 20, 20]);\n\n\t\tsplitview.layout(200);\n\t\tassert.deepStrictEqual([view1.size, view2.size, view3.size], [20, 160, 20]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n\n\ttest('context propagates to views', () => {\n\t\tconst view1 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view2 = new TestView(20, Number.POSITIVE_INFINITY);\n\t\tconst view3 = new TestView(20, Number.POSITIVE_INFINITY, LayoutPriority.Low);\n\t\tconst splitview = new SplitView<number>(container, { proportionalLayout: false });\n\t\tsplitview.layout(200);\n\n\t\tsplitview.addView(view1, Sizing.Distribute);\n\t\tsplitview.addView(view2, Sizing.Distribute);\n\t\tsplitview.addView(view3, Sizing.Distribute);\n\n\t\tsplitview.layout(200, 100);\n\t\tassert.deepStrictEqual([view1.orthogonalSize, view2.orthogonalSize, view3.orthogonalSize], [100, 100, 100]);\n\n\t\tsplitview.dispose();\n\t\tview3.dispose();\n\t\tview2.dispose();\n\t\tview1.dispose();\n\t});\n});\n"]}