{"version":3,"file":"listView.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/list/listView.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,KAAK,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,uBAAuB,EAAE;YAC7B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAE9B,MAAM,QAAQ,GAAiC;gBAC9C,SAAS,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC1B,aAAa,KAAK,OAAO,UAAU,CAAC,CAAC,CAAC;aACtC,CAAC;YAEF,IAAI,cAAc,GAAG,CAAC,CAAC;YAEvB,MAAM,QAAQ,GAAgC;gBAC7C,UAAU,EAAE,UAAU;gBACtB,cAAc,KAAK,cAAc,EAAE,CAAC,CAAC,CAAC;gBACtC,aAAa,KAAK,CAAC;gBACnB,eAAe,KAAK,cAAc,EAAE,CAAC,CAAC,CAAC;aACvC,CAAC;YAEF,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAS,OAAO,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAErB,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,kCAAkC,CAAC,CAAC;YAC1E,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,cAAK,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,EAAE,oCAAoC,CAAC,CAAC;YAC7E,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnB,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,kCAAkC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ListView } from 'vs/base/browser/ui/list/listView';\nimport { IListVirtualDelegate, IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { range } from 'vs/base/common/arrays';\n\nsuite('ListView', function () {\n\ttest('all rows get disposed', function () {\n\t\tconst element = document.createElement('div');\n\t\telement.style.height = '200px';\n\t\telement.style.width = '200px';\n\n\t\tconst delegate: IListVirtualDelegate<number> = {\n\t\t\tgetHeight() { return 20; },\n\t\t\tgetTemplateId() { return 'template'; }\n\t\t};\n\n\t\tlet templatesCount = 0;\n\n\t\tconst renderer: IListRenderer<number, void> = {\n\t\t\ttemplateId: 'template',\n\t\t\trenderTemplate() { templatesCount++; },\n\t\t\trenderElement() { },\n\t\t\tdisposeTemplate() { templatesCount--; }\n\t\t};\n\n\t\tconst listView = new ListView<number>(element, delegate, [renderer]);\n\t\tlistView.layout(200);\n\n\t\tassert.strictEqual(templatesCount, 0, 'no templates have been allocated');\n\t\tlistView.splice(0, 0, range(100));\n\t\tassert.strictEqual(templatesCount, 10, 'some templates have been allocated');\n\t\tlistView.dispose();\n\t\tassert.strictEqual(templatesCount, 0, 'all templates have been disposed');\n\t});\n});\n"]}