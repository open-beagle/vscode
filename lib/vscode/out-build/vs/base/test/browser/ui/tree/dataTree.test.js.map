{"version":3,"file":"dataTree.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/tree/dataTree.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,KAAK,CAAC,UAAU,EAAE;QACjB,IAAI,IAAoB,CAAC;QAEzB,MAAM,IAAI,GAAM;YACf,KAAK,EAAE,CAAC,CAAC;YACT,QAAQ,EAAE;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE;gBACrE,EAAE,KAAK,EAAE,CAAC,EAAE;gBACZ,EAAE,KAAK,EAAE,CAAC,EAAE;aACZ;SACD,CAAC;QAEF,MAAM,KAAK,GAAM;YAChB,KAAK,EAAE,CAAC,CAAC;YACT,QAAQ,EAAE,EAAE;SACZ,CAAC;QAEF,KAAK,CAAC,GAAG,EAAE;YACV,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAChC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YAEjC,MAAM,QAAQ,GAAG,IAAI;gBACpB,SAAS,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC1B,aAAa,KAAa,OAAO,SAAS,CAAC,CAAC,CAAC;aAC7C,CAAC;YAEF,MAAM,QAAQ,GAAG,IAAI;gBAAA;oBACX,eAAU,GAAG,SAAS,CAAC;gBAQjC,CAAC;gBAPA,cAAc,CAAC,SAAsB;oBACpC,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,aAAa,CAAC,OAA2B,EAAE,KAAa,EAAE,YAAyB;oBAClF,YAAY,CAAC,WAAW,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACvD,CAAC;gBACD,eAAe,KAAW,CAAC;aAC3B,CAAC;YAEF,MAAM,UAAU,GAAG,IAAI;gBACtB,WAAW,CAAC,OAAU;oBACrB,OAAO,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;gBAC/B,CAAC;aACD,CAAC;YAEF,MAAM,gBAAgB,GAAG,IAAI;gBAC5B,KAAK,CAAC,OAAU;oBACf,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;gBAC3B,CAAC;aACD,CAAC;YAEF,IAAI,GAAG,IAAI,mBAAQ,CAAO,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE;gBAC9E,gBAAgB;aAChB,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;YAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEpB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEpB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAEtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC/B,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;YAE5C,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ITreeNode, ITreeRenderer, IDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { IListVirtualDelegate, IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { DataTree } from 'vs/base/browser/ui/tree/dataTree';\n\ninterface E {\n\tvalue: number;\n\tchildren?: E[];\n}\n\nsuite('DataTree', function () {\n\tlet tree: DataTree<E, E>;\n\n\tconst root: E = {\n\t\tvalue: -1,\n\t\tchildren: [\n\t\t\t{ value: 0, children: [{ value: 10 }, { value: 11 }, { value: 12 }] },\n\t\t\t{ value: 1 },\n\t\t\t{ value: 2 },\n\t\t]\n\t};\n\n\tconst empty: E = {\n\t\tvalue: -1,\n\t\tchildren: []\n\t};\n\n\tsetup(() => {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst delegate = new class implements IListVirtualDelegate<E> {\n\t\t\tgetHeight() { return 20; }\n\t\t\tgetTemplateId(): string { return 'default'; }\n\t\t};\n\n\t\tconst renderer = new class implements ITreeRenderer<E, void, HTMLElement> {\n\t\t\treadonly templateId = 'default';\n\t\t\trenderTemplate(container: HTMLElement): HTMLElement {\n\t\t\t\treturn container;\n\t\t\t}\n\t\t\trenderElement(element: ITreeNode<E, void>, index: number, templateData: HTMLElement): void {\n\t\t\t\ttemplateData.textContent = `${element.element.value}`;\n\t\t\t}\n\t\t\tdisposeTemplate(): void { }\n\t\t};\n\n\t\tconst dataSource = new class implements IDataSource<E, E> {\n\t\t\tgetChildren(element: E): E[] {\n\t\t\t\treturn element.children || [];\n\t\t\t}\n\t\t};\n\n\t\tconst identityProvider = new class implements IIdentityProvider<E> {\n\t\t\tgetId(element: E): { toString(): string; } {\n\t\t\t\treturn `${element.value}`;\n\t\t\t}\n\t\t};\n\n\t\ttree = new DataTree<E, E>('test', container, delegate, [renderer], dataSource, {\n\t\t\tidentityProvider\n\t\t});\n\t\ttree.layout(200);\n\t});\n\n\tteardown(() => {\n\t\ttree.dispose();\n\t});\n\n\ttest('view state is lost implicitly', () => {\n\t\ttree.setInput(root);\n\n\t\tlet navigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 10);\n\t\tassert.strictEqual(navigator.next()!.value, 11);\n\t\tassert.strictEqual(navigator.next()!.value, 12);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\ttree.collapse(root.children![0]);\n\t\tnavigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\ttree.setSelection([root.children![1]]);\n\t\ttree.setFocus([root.children![2]]);\n\n\t\ttree.setInput(empty);\n\t\ttree.setInput(root);\n\t\tnavigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 10);\n\t\tassert.strictEqual(navigator.next()!.value, 11);\n\t\tassert.strictEqual(navigator.next()!.value, 12);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\tassert.deepStrictEqual(tree.getSelection(), []);\n\t\tassert.deepStrictEqual(tree.getFocus(), []);\n\t});\n\n\ttest('view state can be preserved', () => {\n\t\ttree.setInput(root);\n\n\t\tlet navigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 10);\n\t\tassert.strictEqual(navigator.next()!.value, 11);\n\t\tassert.strictEqual(navigator.next()!.value, 12);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\ttree.collapse(root.children![0]);\n\t\tnavigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\ttree.setSelection([root.children![1]]);\n\t\ttree.setFocus([root.children![2]]);\n\n\t\tconst viewState = tree.getViewState();\n\n\t\ttree.setInput(empty);\n\t\ttree.setInput(root, viewState);\n\t\tnavigator = tree.navigate();\n\t\tassert.strictEqual(navigator.next()!.value, 0);\n\t\tassert.strictEqual(navigator.next()!.value, 1);\n\t\tassert.strictEqual(navigator.next()!.value, 2);\n\t\tassert.strictEqual(navigator.next()!, null);\n\n\t\tassert.deepStrictEqual(tree.getSelection(), [root.children![1]]);\n\t\tassert.deepStrictEqual(tree.getFocus(), [root.children![2]]);\n\t});\n});\n"]}