{"version":3,"file":"gridview.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/grid/gridview.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { $ } from 'vs/base/browser/dom';\nimport { GridView, IView, Sizing } from 'vs/base/browser/ui/grid/gridview';\nimport { nodesToArrays, TestView } from './util';\n\nsuite('Gridview', function () {\n\tlet gridview: GridView;\n\n\tsetup(function () {\n\t\tgridview = new GridView();\n\t\tconst container = $('.container');\n\n\t\tcontainer.style.position = 'absolute';\n\t\tcontainer.style.width = `${200}px`;\n\t\tcontainer.style.height = `${200}px`;\n\t\tcontainer.appendChild(gridview.element);\n\t});\n\n\ttest('empty gridview is empty', function () {\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), []);\n\t\tgridview.dispose();\n\t});\n\n\ttest('gridview addView', function () {\n\n\t\tconst view = new TestView(20, 20, 20, 20);\n\t\tassert.throws(() => gridview.addView(view, 200, []), 'empty location');\n\t\tassert.throws(() => gridview.addView(view, 200, [1]), 'index overflow');\n\t\tassert.throws(() => gridview.addView(view, 200, [0, 0]), 'hierarchy overflow');\n\n\t\tconst views = [\n\t\t\tnew TestView(20, 20, 20, 20),\n\t\t\tnew TestView(20, 20, 20, 20),\n\t\t\tnew TestView(20, 20, 20, 20)\n\t\t];\n\n\t\tgridview.addView(views[0], 200, [0]);\n\t\tgridview.addView(views[1], 200, [1]);\n\t\tgridview.addView(views[2], 200, [2]);\n\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), views);\n\n\t\tgridview.dispose();\n\t});\n\n\ttest('gridview addView nested', function () {\n\n\t\tconst views = [\n\t\t\tnew TestView(20, 20, 20, 20),\n\t\t\t[\n\t\t\t\tnew TestView(20, 20, 20, 20),\n\t\t\t\tnew TestView(20, 20, 20, 20)\n\t\t\t]\n\t\t];\n\n\t\tgridview.addView(views[0] as IView, 200, [0]);\n\t\tgridview.addView((views[1] as TestView[])[0] as IView, 200, [1]);\n\t\tgridview.addView((views[1] as TestView[])[1] as IView, 200, [1, 1]);\n\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), views);\n\n\t\tgridview.dispose();\n\t});\n\n\ttest('gridview addView deep nested', function () {\n\n\t\tconst view1 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view1 as IView, 200, [0]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1]);\n\n\t\tconst view2 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view2 as IView, 200, [1]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, view2]);\n\n\t\tconst view3 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view3 as IView, 200, [1, 0]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [view3, view2]]);\n\n\t\tconst view4 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view4 as IView, 200, [1, 0, 0]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [[view4, view3], view2]]);\n\n\t\tconst view5 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view5 as IView, 200, [1, 0]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [view5, [view4, view3], view2]]);\n\n\t\tconst view6 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view6 as IView, 200, [2]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [view5, [view4, view3], view2], view6]);\n\n\t\tconst view7 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view7 as IView, 200, [1, 1]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [view5, view7, [view4, view3], view2], view6]);\n\n\t\tconst view8 = new TestView(20, 20, 20, 20);\n\t\tgridview.addView(view8 as IView, 200, [1, 1, 0]);\n\t\tassert.deepStrictEqual(nodesToArrays(gridview.getView()), [view1, [view5, [view8, view7], [view4, view3], view2], view6]);\n\n\t\tgridview.dispose();\n\t});\n\n\ttest('simple layout', function () {\n\t\tgridview.layout(800, 600);\n\n\t\tconst view1 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view1, 200, [0]);\n\t\tassert.deepStrictEqual(view1.size, [800, 600]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0]), { width: 800, height: 600 });\n\n\t\tconst view2 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view2, 200, [0]);\n\t\tassert.deepStrictEqual(view1.size, [800, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1]), { width: 800, height: 400 });\n\t\tassert.deepStrictEqual(view2.size, [800, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0]), { width: 800, height: 200 });\n\n\t\tconst view3 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view3, 200, [1, 1]);\n\t\tassert.deepStrictEqual(view1.size, [600, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 0]), { width: 600, height: 400 });\n\t\tassert.deepStrictEqual(view2.size, [800, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0]), { width: 800, height: 200 });\n\t\tassert.deepStrictEqual(view3.size, [200, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 1]), { width: 200, height: 400 });\n\n\t\tconst view4 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view4, 200, [0, 0]);\n\t\tassert.deepStrictEqual(view1.size, [600, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 0]), { width: 600, height: 400 });\n\t\tassert.deepStrictEqual(view2.size, [600, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0, 1]), { width: 600, height: 200 });\n\t\tassert.deepStrictEqual(view3.size, [200, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 1]), { width: 200, height: 400 });\n\t\tassert.deepStrictEqual(view4.size, [200, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0, 0]), { width: 200, height: 200 });\n\n\t\tconst view5 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view5, 100, [1, 0, 1]);\n\t\tassert.deepStrictEqual(view1.size, [600, 300]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 0, 0]), { width: 600, height: 300 });\n\t\tassert.deepStrictEqual(view2.size, [600, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0, 1]), { width: 600, height: 200 });\n\t\tassert.deepStrictEqual(view3.size, [200, 400]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 1]), { width: 200, height: 400 });\n\t\tassert.deepStrictEqual(view4.size, [200, 200]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0, 0]), { width: 200, height: 200 });\n\t\tassert.deepStrictEqual(view5.size, [600, 100]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([1, 0, 1]), { width: 600, height: 100 });\n\t});\n\n\ttest('simple layout with automatic size distribution', function () {\n\t\tgridview.layout(800, 600);\n\n\t\tconst view1 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view1, Sizing.Distribute, [0]);\n\t\tassert.deepStrictEqual(view1.size, [800, 600]);\n\t\tassert.deepStrictEqual(gridview.getViewSize([0]), { width: 800, height: 600 });\n\n\t\tconst view2 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view2, Sizing.Distribute, [0]);\n\t\tassert.deepStrictEqual(view1.size, [800, 300]);\n\t\tassert.deepStrictEqual(view2.size, [800, 300]);\n\n\t\tconst view3 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view3, Sizing.Distribute, [1, 1]);\n\t\tassert.deepStrictEqual(view1.size, [400, 300]);\n\t\tassert.deepStrictEqual(view2.size, [800, 300]);\n\t\tassert.deepStrictEqual(view3.size, [400, 300]);\n\n\t\tconst view4 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view4, Sizing.Distribute, [0, 0]);\n\t\tassert.deepStrictEqual(view1.size, [400, 300]);\n\t\tassert.deepStrictEqual(view2.size, [400, 300]);\n\t\tassert.deepStrictEqual(view3.size, [400, 300]);\n\t\tassert.deepStrictEqual(view4.size, [400, 300]);\n\n\t\tconst view5 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view5, Sizing.Distribute, [1, 0, 1]);\n\t\tassert.deepStrictEqual(view1.size, [400, 150]);\n\t\tassert.deepStrictEqual(view2.size, [400, 300]);\n\t\tassert.deepStrictEqual(view3.size, [400, 300]);\n\t\tassert.deepStrictEqual(view4.size, [400, 300]);\n\t\tassert.deepStrictEqual(view5.size, [400, 150]);\n\t});\n\n\ttest('addviews before layout call 1', function () {\n\n\t\tconst view1 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view1, 200, [0]);\n\n\t\tconst view2 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view2, 200, [0]);\n\n\t\tconst view3 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view3, 200, [1, 1]);\n\n\t\tgridview.layout(800, 600);\n\n\t\tassert.deepStrictEqual(view1.size, [400, 300]);\n\t\tassert.deepStrictEqual(view2.size, [800, 300]);\n\t\tassert.deepStrictEqual(view3.size, [400, 300]);\n\t});\n\n\ttest('addviews before layout call 2', function () {\n\t\tconst view1 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view1, 200, [0]);\n\n\t\tconst view2 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view2, 200, [0]);\n\n\t\tconst view3 = new TestView(50, Number.POSITIVE_INFINITY, 50, Number.POSITIVE_INFINITY);\n\t\tgridview.addView(view3, 200, [0, 0]);\n\n\t\tgridview.layout(800, 600);\n\n\t\tassert.deepStrictEqual(view1.size, [800, 300]);\n\t\tassert.deepStrictEqual(view2.size, [400, 300]);\n\t\tassert.deepStrictEqual(view3.size, [400, 300]);\n\t});\n});\n"]}