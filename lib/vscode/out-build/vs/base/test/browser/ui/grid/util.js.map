{"version":3,"file":"util.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/grid/util.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { GridNode, isGridBranchNode } from 'vs/base/browser/ui/grid/gridview';\nimport { IView } from 'vs/base/browser/ui/grid/grid';\n\nexport class TestView implements IView {\n\n\tprivate readonly _onDidChange = new Emitter<{ width: number; height: number; } | undefined>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tget minimumWidth(): number { return this._minimumWidth; }\n\tset minimumWidth(size: number) { this._minimumWidth = size; this._onDidChange.fire(undefined); }\n\n\tget maximumWidth(): number { return this._maximumWidth; }\n\tset maximumWidth(size: number) { this._maximumWidth = size; this._onDidChange.fire(undefined); }\n\n\tget minimumHeight(): number { return this._minimumHeight; }\n\tset minimumHeight(size: number) { this._minimumHeight = size; this._onDidChange.fire(undefined); }\n\n\tget maximumHeight(): number { return this._maximumHeight; }\n\tset maximumHeight(size: number) { this._maximumHeight = size; this._onDidChange.fire(undefined); }\n\n\tprivate _element: HTMLElement = document.createElement('div');\n\tget element(): HTMLElement { this._onDidGetElement.fire(); return this._element; }\n\n\tprivate readonly _onDidGetElement = new Emitter<void>();\n\treadonly onDidGetElement = this._onDidGetElement.event;\n\n\tprivate _width = 0;\n\tget width(): number { return this._width; }\n\n\tprivate _height = 0;\n\tget height(): number { return this._height; }\n\n\tget size(): [number, number] { return [this.width, this.height]; }\n\n\tprivate readonly _onDidLayout = new Emitter<{ width: number; height: number; }>();\n\treadonly onDidLayout: Event<{ width: number; height: number; }> = this._onDidLayout.event;\n\n\tprivate readonly _onDidFocus = new Emitter<void>();\n\treadonly onDidFocus: Event<void> = this._onDidFocus.event;\n\n\tconstructor(\n\t\tprivate _minimumWidth: number,\n\t\tprivate _maximumWidth: number,\n\t\tprivate _minimumHeight: number,\n\t\tprivate _maximumHeight: number\n\t) {\n\t\tassert(_minimumWidth <= _maximumWidth, 'gridview view minimum width must be <= maximum width');\n\t\tassert(_minimumHeight <= _maximumHeight, 'gridview view minimum height must be <= maximum height');\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._onDidLayout.fire({ width, height });\n\t}\n\n\tfocus(): void {\n\t\tthis._onDidFocus.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._onDidGetElement.dispose();\n\t\tthis._onDidLayout.dispose();\n\t\tthis._onDidFocus.dispose();\n\t}\n}\n\nexport function nodesToArrays(node: GridNode): any {\n\tif (isGridBranchNode(node)) {\n\t\treturn node.children.map(nodesToArrays);\n\t} else {\n\t\treturn node.view;\n\t}\n}\n"]}