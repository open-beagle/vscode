{"version":3,"file":"menubar.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/browser/ui/menu/menubar.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { $ } from 'vs/base/browser/dom';\nimport { MenuBar } from 'vs/base/browser/ui/menu/menubar';\n\nfunction getButtonElementByAriaLabel(menubarElement: HTMLElement, ariaLabel: string): HTMLElement | null {\n\tlet i;\n\tfor (i = 0; i < menubarElement.childElementCount; i++) {\n\n\t\tif (menubarElement.children[i].getAttribute('aria-label') === ariaLabel) {\n\t\t\treturn menubarElement.children[i] as HTMLElement;\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction getTitleDivFromButtonDiv(menuButtonElement: HTMLElement): HTMLElement | null {\n\tlet i;\n\tfor (i = 0; i < menuButtonElement.childElementCount; i++) {\n\t\tif (menuButtonElement.children[i].classList.contains('menubar-menu-title')) {\n\t\t\treturn menuButtonElement.children[i] as HTMLElement;\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction getMnemonicFromTitleDiv(menuTitleDiv: HTMLElement): string | null {\n\tlet i;\n\tfor (i = 0; i < menuTitleDiv.childElementCount; i++) {\n\t\tif (menuTitleDiv.children[i].tagName.toLocaleLowerCase() === 'mnemonic') {\n\t\t\treturn menuTitleDiv.children[i].textContent;\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction validateMenuBarItem(menubar: MenuBar, menubarContainer: HTMLElement, label: string, readableLabel: string, mnemonic: string) {\n\tmenubar.push([\n\t\t{\n\t\t\tactions: [],\n\t\t\tlabel: label\n\t\t}\n\t]);\n\n\tconst buttonElement = getButtonElementByAriaLabel(menubarContainer, readableLabel);\n\tassert(buttonElement !== null, `Button element not found for ${readableLabel} button.`);\n\n\tconst titleDiv = getTitleDivFromButtonDiv(buttonElement!);\n\tassert(titleDiv !== null, `Title div not found for ${readableLabel} button.`);\n\n\tconst mnem = getMnemonicFromTitleDiv(titleDiv!);\n\tassert.strictEqual(mnem, mnemonic, 'Mnemonic not correct');\n}\n\nsuite('Menubar', () => {\n\tconst container = $('.container');\n\n\tconst menubar = new MenuBar(container, {\n\t\tenableMnemonics: true,\n\t\tvisibility: 'visible'\n\t});\n\n\ttest('English File menu renders mnemonics', function () {\n\t\tvalidateMenuBarItem(menubar, container, '&File', 'File', 'F');\n\t});\n\n\ttest('Russian File menu renders mnemonics', function () {\n\t\tvalidateMenuBarItem(menubar, container, '&Файл', 'Файл', 'Ф');\n\t});\n\n\ttest('Chinese File menu renders mnemonics', function () {\n\t\tvalidateMenuBarItem(menubar, container, '文件(&F)', '文件', 'F');\n\t});\n});\n"]}