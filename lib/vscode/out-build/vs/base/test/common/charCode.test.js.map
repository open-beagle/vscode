{"version":3,"file":"charCode.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/charCode.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { CharCode } from 'vs/base/common/charCode';\n\nsuite('CharCode', () => {\n\ttest('has good values', () => {\n\n\t\tfunction assertValue(actual: CharCode, expected: string): void {\n\t\t\tassert.strictEqual(actual, expected.charCodeAt(0), 'char code ok for <<' + expected + '>>');\n\t\t}\n\n\t\tassertValue(CharCode.Tab, '\\t');\n\t\tassertValue(CharCode.LineFeed, '\\n');\n\t\tassertValue(CharCode.CarriageReturn, '\\r');\n\t\tassertValue(CharCode.Space, ' ');\n\t\tassertValue(CharCode.ExclamationMark, '!');\n\t\tassertValue(CharCode.DoubleQuote, '\"');\n\t\tassertValue(CharCode.Hash, '#');\n\t\tassertValue(CharCode.DollarSign, '$');\n\t\tassertValue(CharCode.PercentSign, '%');\n\t\tassertValue(CharCode.Ampersand, '&');\n\t\tassertValue(CharCode.SingleQuote, '\\'');\n\t\tassertValue(CharCode.OpenParen, '(');\n\t\tassertValue(CharCode.CloseParen, ')');\n\t\tassertValue(CharCode.Asterisk, '*');\n\t\tassertValue(CharCode.Plus, '+');\n\t\tassertValue(CharCode.Comma, ',');\n\t\tassertValue(CharCode.Dash, '-');\n\t\tassertValue(CharCode.Period, '.');\n\t\tassertValue(CharCode.Slash, '/');\n\n\t\tassertValue(CharCode.Digit0, '0');\n\t\tassertValue(CharCode.Digit1, '1');\n\t\tassertValue(CharCode.Digit2, '2');\n\t\tassertValue(CharCode.Digit3, '3');\n\t\tassertValue(CharCode.Digit4, '4');\n\t\tassertValue(CharCode.Digit5, '5');\n\t\tassertValue(CharCode.Digit6, '6');\n\t\tassertValue(CharCode.Digit7, '7');\n\t\tassertValue(CharCode.Digit8, '8');\n\t\tassertValue(CharCode.Digit9, '9');\n\n\t\tassertValue(CharCode.Colon, ':');\n\t\tassertValue(CharCode.Semicolon, ';');\n\t\tassertValue(CharCode.LessThan, '<');\n\t\tassertValue(CharCode.Equals, '=');\n\t\tassertValue(CharCode.GreaterThan, '>');\n\t\tassertValue(CharCode.QuestionMark, '?');\n\t\tassertValue(CharCode.AtSign, '@');\n\n\t\tassertValue(CharCode.A, 'A');\n\t\tassertValue(CharCode.B, 'B');\n\t\tassertValue(CharCode.C, 'C');\n\t\tassertValue(CharCode.D, 'D');\n\t\tassertValue(CharCode.E, 'E');\n\t\tassertValue(CharCode.F, 'F');\n\t\tassertValue(CharCode.G, 'G');\n\t\tassertValue(CharCode.H, 'H');\n\t\tassertValue(CharCode.I, 'I');\n\t\tassertValue(CharCode.J, 'J');\n\t\tassertValue(CharCode.K, 'K');\n\t\tassertValue(CharCode.L, 'L');\n\t\tassertValue(CharCode.M, 'M');\n\t\tassertValue(CharCode.N, 'N');\n\t\tassertValue(CharCode.O, 'O');\n\t\tassertValue(CharCode.P, 'P');\n\t\tassertValue(CharCode.Q, 'Q');\n\t\tassertValue(CharCode.R, 'R');\n\t\tassertValue(CharCode.S, 'S');\n\t\tassertValue(CharCode.T, 'T');\n\t\tassertValue(CharCode.U, 'U');\n\t\tassertValue(CharCode.V, 'V');\n\t\tassertValue(CharCode.W, 'W');\n\t\tassertValue(CharCode.X, 'X');\n\t\tassertValue(CharCode.Y, 'Y');\n\t\tassertValue(CharCode.Z, 'Z');\n\n\t\tassertValue(CharCode.OpenSquareBracket, '[');\n\t\tassertValue(CharCode.Backslash, '\\\\');\n\t\tassertValue(CharCode.CloseSquareBracket, ']');\n\t\tassertValue(CharCode.Caret, '^');\n\t\tassertValue(CharCode.Underline, '_');\n\t\tassertValue(CharCode.BackTick, '`');\n\n\t\tassertValue(CharCode.a, 'a');\n\t\tassertValue(CharCode.b, 'b');\n\t\tassertValue(CharCode.c, 'c');\n\t\tassertValue(CharCode.d, 'd');\n\t\tassertValue(CharCode.e, 'e');\n\t\tassertValue(CharCode.f, 'f');\n\t\tassertValue(CharCode.g, 'g');\n\t\tassertValue(CharCode.h, 'h');\n\t\tassertValue(CharCode.i, 'i');\n\t\tassertValue(CharCode.j, 'j');\n\t\tassertValue(CharCode.k, 'k');\n\t\tassertValue(CharCode.l, 'l');\n\t\tassertValue(CharCode.m, 'm');\n\t\tassertValue(CharCode.n, 'n');\n\t\tassertValue(CharCode.o, 'o');\n\t\tassertValue(CharCode.p, 'p');\n\t\tassertValue(CharCode.q, 'q');\n\t\tassertValue(CharCode.r, 'r');\n\t\tassertValue(CharCode.s, 's');\n\t\tassertValue(CharCode.t, 't');\n\t\tassertValue(CharCode.u, 'u');\n\t\tassertValue(CharCode.v, 'v');\n\t\tassertValue(CharCode.w, 'w');\n\t\tassertValue(CharCode.x, 'x');\n\t\tassertValue(CharCode.y, 'y');\n\t\tassertValue(CharCode.z, 'z');\n\n\t\tassertValue(CharCode.OpenCurlyBrace, '{');\n\t\tassertValue(CharCode.Pipe, '|');\n\t\tassertValue(CharCode.CloseCurlyBrace, '}');\n\t\tassertValue(CharCode.Tilde, '~');\n\t});\n});\n"]}