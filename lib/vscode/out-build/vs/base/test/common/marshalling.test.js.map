{"version":3,"file":"marshalling.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/marshalling.test.ts"],"names":[],"mappings":";;;IAQA,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;QAEzB,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;YACnB,IAAI,KAAK,GAAG,QAAQ,CAAC;YACrB,IAAI,GAAG,GAAG,CAAA,GAAA,uBAAS,CAAA,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,GAAW,CAAA,GAAA,mBAAK,CAAA,CAAC,GAAG,CAAC,CAAC;YAE/B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE;YAChB,MAAM,KAAK,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;YACpH,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAS,CAAA,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,KAAK,GAAQ,CAAA,GAAA,mBAAK,CAAA,CAAC,GAAG,CAAC,CAAC;YAE9B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6DAA6D,EAAE,GAAG,EAAE;YACxE,MAAM,IAAI,GAAG,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC1C,MAAM,CAAC,WAAW,CAAC,CAAA,GAAA,mBAAK,CAAA,CAAC,CAAA,GAAA,uBAAS,CAAA,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { parse, stringify } from 'vs/base/common/marshalling';\n\nsuite('Marshalling', () => {\n\n\ttest('RegExp', () => {\n\t\tlet value = /foo/img;\n\t\tlet raw = stringify(value);\n\t\tlet clone = <RegExp>parse(raw);\n\n\t\tassert.strictEqual(value.source, clone.source);\n\t\tassert.strictEqual(value.global, clone.global);\n\t\tassert.strictEqual(value.ignoreCase, clone.ignoreCase);\n\t\tassert.strictEqual(value.multiline, clone.multiline);\n\t});\n\n\ttest('URI', () => {\n\t\tconst value = URI.from({ scheme: 'file', authority: 'server', path: '/shares/c#files', query: 'q', fragment: 'f' });\n\t\tconst raw = stringify(value);\n\t\tconst clone = <URI>parse(raw);\n\n\t\tassert.strictEqual(value.scheme, clone.scheme);\n\t\tassert.strictEqual(value.authority, clone.authority);\n\t\tassert.strictEqual(value.path, clone.path);\n\t\tassert.strictEqual(value.query, clone.query);\n\t\tassert.strictEqual(value.fragment, clone.fragment);\n\t});\n\n\ttest('Bug 16793:# in folder name => mirror models get out of sync', () => {\n\t\tconst uri1 = URI.file('C:\\\\C#\\\\file.txt');\n\t\tassert.strictEqual(parse(stringify(uri1)).toString(), uri1.toString());\n\t});\n});\n"]}