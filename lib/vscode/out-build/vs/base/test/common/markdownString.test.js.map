{"version":3,"file":"markdownString.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/markdownString.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\n\nsuite('MarkdownString', () => {\n\n\ttest('Escape leading whitespace', function () {\n\t\tconst mds = new MarkdownString();\n\t\tmds.appendText('Hello\\n    Not a code block');\n\t\tassert.strictEqual(mds.value, 'Hello\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;Not&nbsp;a&nbsp;code&nbsp;block');\n\t});\n\n\ttest('MarkdownString.appendText doesn\\'t escape quote #109040', function () {\n\t\tconst mds = new MarkdownString();\n\t\tmds.appendText('> Text\\n>More');\n\t\tassert.strictEqual(mds.value, '\\\\>&nbsp;Text\\n\\n\\\\>More');\n\t});\n\n\ttest('appendText', () => {\n\n\t\tconst mds = new MarkdownString();\n\t\tmds.appendText('# foo\\n*bar*');\n\n\t\tassert.strictEqual(mds.value, '\\\\#&nbsp;foo\\n\\n\\\\*bar\\\\*');\n\t});\n\n\tsuite('ThemeIcons', () => {\n\n\t\tsuite('Support On', () => {\n\n\t\t\ttest('appendText', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\t\tmds.appendText('$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '\\\\\\\\$\\\\(zap\\\\)&nbsp;$\\\\(not&nbsp;a&nbsp;theme&nbsp;icon\\\\)&nbsp;\\\\\\\\$\\\\(add\\\\)');\n\t\t\t});\n\n\t\t\ttest('appendMarkdown', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\t\tmds.appendMarkdown('$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '$(zap) $(not a theme icon) $(add)');\n\t\t\t});\n\n\t\t\ttest('appendMarkdown with escaped icon', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\t\tmds.appendMarkdown('\\\\$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '\\\\$(zap) $(not a theme icon) $(add)');\n\t\t\t});\n\n\t\t});\n\n\t\tsuite('Support Off', () => {\n\n\t\t\ttest('appendText', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: false });\n\t\t\t\tmds.appendText('$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '$\\\\(zap\\\\)&nbsp;$\\\\(not&nbsp;a&nbsp;theme&nbsp;icon\\\\)&nbsp;$\\\\(add\\\\)');\n\t\t\t});\n\n\t\t\ttest('appendMarkdown', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: false });\n\t\t\t\tmds.appendMarkdown('$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '$(zap) $(not a theme icon) $(add)');\n\t\t\t});\n\n\t\t\ttest('appendMarkdown with escaped icon', () => {\n\t\t\t\tconst mds = new MarkdownString(undefined, { supportThemeIcons: true });\n\t\t\t\tmds.appendMarkdown('\\\\$(zap) $(not a theme icon) $(add)');\n\n\t\t\t\tassert.strictEqual(mds.value, '\\\\$(zap) $(not a theme icon) $(add)');\n\t\t\t});\n\n\t\t});\n\n\t});\n});\n"]}