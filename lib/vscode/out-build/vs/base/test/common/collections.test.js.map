{"version":3,"file":"collections.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/collections.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as collections from 'vs/base/common/collections';\n\nsuite('Collections', () => {\n\n\ttest('forEach', () => {\n\t\tcollections.forEach({}, () => assert(false));\n\t\tcollections.forEach(Object.create(null), () => assert(false));\n\n\t\tlet count = 0;\n\t\tcollections.forEach({ toString: 123 }, () => count++);\n\t\tassert.strictEqual(count, 1);\n\n\t\tcount = 0;\n\t\tlet dict = Object.create(null);\n\t\tdict['toString'] = 123;\n\t\tcollections.forEach(dict, () => count++);\n\t\tassert.strictEqual(count, 1);\n\n\t\tcollections.forEach(dict, () => false);\n\n\t\tcollections.forEach(dict, (x, remove) => remove());\n\t\tassert.strictEqual(dict['toString'], undefined);\n\n\t\t// don't iterate over properties that are not on the object itself\n\t\tlet test = Object.create({ 'derived': true });\n\t\tcollections.forEach(test, () => assert(false));\n\t});\n\n\ttest('groupBy', () => {\n\n\t\tconst group1 = 'a', group2 = 'b';\n\t\tconst value1 = 1, value2 = 2, value3 = 3;\n\t\tlet source = [\n\t\t\t{ key: group1, value: value1 },\n\t\t\t{ key: group1, value: value2 },\n\t\t\t{ key: group2, value: value3 },\n\t\t];\n\n\t\tlet grouped = collections.groupBy(source, x => x.key);\n\n\t\t// Group 1\n\t\tassert.strictEqual(grouped[group1].length, 2);\n\t\tassert.strictEqual(grouped[group1][0].value, value1);\n\t\tassert.strictEqual(grouped[group1][1].value, value2);\n\n\t\t// Group 2\n\t\tassert.strictEqual(grouped[group2].length, 1);\n\t\tassert.strictEqual(grouped[group2][0].value, value3);\n\t});\n\n\ttest('groupByNumber', () => {\n\n\t\tconst group1 = 1, group2 = 2;\n\t\tconst value1 = 'a', value2 = 'b', value3 = 'c';\n\t\tlet source = [\n\t\t\t{ key: group1, value: value1 },\n\t\t\t{ key: group1, value: value2 },\n\t\t\t{ key: group2, value: value3 },\n\t\t];\n\n\t\tlet grouped = collections.groupByNumber(source, x => x.key);\n\n\t\t// Group 1\n\t\tassert.strictEqual(grouped.get(group1)!.length, 2);\n\t\tassert.strictEqual(grouped.get(group1)![0].value, value1);\n\t\tassert.strictEqual(grouped.get(group1)![1].value, value2);\n\n\t\t// Group 2\n\t\tassert.strictEqual(grouped.get(group2)!.length, 1);\n\t\tassert.strictEqual(grouped.get(group2)![0].value, value3);\n\t});\n});\n"]}