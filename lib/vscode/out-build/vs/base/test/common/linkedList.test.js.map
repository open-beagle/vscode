{"version":3,"file":"linkedList.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/linkedList.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\nsuite('LinkedList', function () {\n\n\tfunction assertElements<E>(list: LinkedList<E>, ...elements: E[]) {\n\n\t\t// check size\n\t\tassert.strictEqual(list.size, elements.length);\n\n\t\t// assert toArray\n\t\tassert.deepStrictEqual(Array.from(list), elements);\n\n\t\t// assert Symbol.iterator (1)\n\t\tassert.deepStrictEqual([...list], elements);\n\n\t\t// assert Symbol.iterator (2)\n\t\tfor (const item of list) {\n\t\t\tassert.strictEqual(item, elements.shift());\n\t\t}\n\t\tassert.strictEqual(elements.length, 0);\n\t}\n\n\ttest('Push/Iter', () => {\n\t\tconst list = new LinkedList<number>();\n\t\tlist.push(0);\n\t\tlist.push(1);\n\t\tlist.push(2);\n\t\tassertElements(list, 0, 1, 2);\n\t});\n\n\ttest('Push/Remove', () => {\n\t\tlet list = new LinkedList<number>();\n\t\tlet disp = list.push(0);\n\t\tlist.push(1);\n\t\tlist.push(2);\n\t\tdisp();\n\t\tassertElements(list, 1, 2);\n\n\t\tlist = new LinkedList<number>();\n\t\tlist.push(0);\n\t\tdisp = list.push(1);\n\t\tlist.push(2);\n\t\tdisp();\n\t\tassertElements(list, 0, 2);\n\n\t\tlist = new LinkedList<number>();\n\t\tlist.push(0);\n\t\tlist.push(1);\n\t\tdisp = list.push(2);\n\t\tdisp();\n\t\tassertElements(list, 0, 1);\n\n\t\tlist = new LinkedList<number>();\n\t\tlist.push(0);\n\t\tlist.push(1);\n\t\tdisp = list.push(2);\n\t\tdisp();\n\t\tdisp();\n\t\tassertElements(list, 0, 1);\n\t});\n\n\ttest('Push/toArray', () => {\n\t\tlet list = new LinkedList<string>();\n\t\tlist.push('foo');\n\t\tlist.push('bar');\n\t\tlist.push('far');\n\t\tlist.push('boo');\n\n\t\tassertElements(list, 'foo', 'bar', 'far', 'boo');\n\t});\n\n\ttest('unshift/Iter', () => {\n\t\tconst list = new LinkedList<number>();\n\t\tlist.unshift(0);\n\t\tlist.unshift(1);\n\t\tlist.unshift(2);\n\t\tassertElements(list, 2, 1, 0);\n\t});\n\n\ttest('unshift/Remove', () => {\n\t\tlet list = new LinkedList<number>();\n\t\tlet disp = list.unshift(0);\n\t\tlist.unshift(1);\n\t\tlist.unshift(2);\n\t\tdisp();\n\t\tassertElements(list, 2, 1);\n\n\t\tlist = new LinkedList<number>();\n\t\tlist.unshift(0);\n\t\tdisp = list.unshift(1);\n\t\tlist.unshift(2);\n\t\tdisp();\n\t\tassertElements(list, 2, 0);\n\n\t\tlist = new LinkedList<number>();\n\t\tlist.unshift(0);\n\t\tlist.unshift(1);\n\t\tdisp = list.unshift(2);\n\t\tdisp();\n\t\tassertElements(list, 1, 0);\n\t});\n\n\ttest('unshift/toArray', () => {\n\t\tlet list = new LinkedList<string>();\n\t\tlist.unshift('foo');\n\t\tlist.unshift('bar');\n\t\tlist.unshift('far');\n\t\tlist.unshift('boo');\n\t\tassertElements(list, 'boo', 'far', 'bar', 'foo');\n\t});\n\n\ttest('pop/unshift', function () {\n\t\tlet list = new LinkedList<string>();\n\t\tlist.push('a');\n\t\tlist.push('b');\n\n\t\tassertElements(list, 'a', 'b');\n\n\t\tlet a = list.shift();\n\t\tassert.strictEqual(a, 'a');\n\t\tassertElements(list, 'b');\n\n\t\tlist.unshift('a');\n\t\tassertElements(list, 'a', 'b');\n\n\t\tlet b = list.pop();\n\t\tassert.strictEqual(b, 'b');\n\t\tassertElements(list, 'a');\n\t});\n});\n"]}