{"version":3,"file":"path.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/path.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IA+BhG,KAAK,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACzC,MAAM,UAAU,GAAG,cAAc,CAAC;QAClC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;YACjB,MAAM,QAAQ,GAAG,EAAc,CAAC;YAChC,MAAM,WAAW,GAAG,KAAK,CAAC;YAE1B,MAAM,SAAS,GAAQ;gBACtB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACnC,uCAAuC;oBACvC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC;wBAC5C,CAAC,EAAE,EAAE,GAAG,CAAC;wBACT,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC;wBAC7C,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC;wBAClC,CAAC,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,WAAW,CAAC;wBACtC,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,WAAW,CAAC;wBACvC,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC;wBACrC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;wBACjC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;wBAClC,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC;wBACrC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;wBACd,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;wBACnB,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBACtB,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBACvB,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBACxB,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBAC5B,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;wBACZ,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBAChB,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;wBACpB,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC;wBAC5B,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;wBACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;wBAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;wBACxB,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;wBACpB,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC;wBACtB,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC;wBAChC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC;wBAChC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC;wBACzC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC;wBACxC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC;wBACvC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;wBACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBACjB,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;wBAClB,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;wBACxB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;wBACX,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;wBACf,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;wBACpB,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC;wBACvB,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;wBACjB,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;wBAClB,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;wBAChB,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC;wBACtB,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;wBACvB,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC;wBACxB,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;wBAC3B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC;wBAC1B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;qBAC1B;iBACA;aACD,CAAC;YAEF,8BAA8B;YAC9B,SAAS,CAAC,IAAI,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,IAAI;gBACf,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAC9B;oBACC,oBAAoB;oBACpB,CAAC,CAAC,WAAW,CAAC,EAAE,gBAAgB,CAAC;oBACjC,CAAC,CAAC,YAAY,CAAC,EAAE,gBAAgB,CAAC;oBAClC,CAAC,CAAC,aAAa,CAAC,EAAE,gBAAgB,CAAC;oBACnC,gDAAgD;oBAChD,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACpC,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACrC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,gBAAgB,CAAC;oBACrC,mCAAmC;oBACnC,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACxC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACzC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,gBAAgB,CAAC;oBAC1C,6CAA6C;oBAC7C,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACxC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC;oBACzC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,gBAAgB,CAAC;oBAC1C,4DAA4D;oBAC5D,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC;oBACjC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC;oBAClC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC;oBACrC,4DAA4D;oBAC5D,gBAAgB;oBAChB,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC;oBACjC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC;oBAClC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC;oBACzC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;oBACd,4DAA4D;oBAC5D,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;oBACpB,CAAC,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC;oBACvB,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC;oBAC3B,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC;oBAC/B,iEAAiE;oBACjE,CAAC,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC;oBAC9B,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,YAAY,CAAC;oBAClC,CAAC,CAAC,gBAAgB,CAAC,EAAE,YAAY,CAAC;oBAClC,oEAAoE;oBACpE,gDAAgD;oBAChD,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;oBACf,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;oBAChB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;oBACnB,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC;oBACnB,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC;oBACvB,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC;oBAC3B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC;oBACrB,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC;iBAC5B,CACD;aACD,CAAC,CAAC;YACH,SAAS,CAAC,OAAO,CAAC,CAAC,IAAW,EAAE,EAAE;gBACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpB;gBACD,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;oBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;wBAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBACzB,yEAAyE;wBACzE,yEAAyE;wBACzE,sBAAsB;wBACtB,IAAI,SAAS,CAAC;wBACd,IAAI,EAAE,CAAC;wBACP,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;4BAC7B,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;4BAC7C,EAAE,GAAG,OAAO,CAAC;yBACb;6BAAM;4BACN,EAAE,GAAG,OAAO,CAAC;yBACb;wBACD,MAAM,OAAO,GACZ,QAAQ,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;wBACvI,IAAI,MAAM,KAAK,QAAQ,IAAI,SAAS,KAAK,QAAQ,EAAE;4BAClD,QAAQ,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;yBAC9B;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;YACpB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YACjD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAEnD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,SAAS,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,YAAY,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,YAAY,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,EACtD,gBAAgB,CAAC,CAAC;YACnB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAC3D,kBAAkB,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAC7D,kBAAkB,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAChE,qBAAqB,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,4BAA4B,CAAC,EAClE,qBAAqB,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,+BAA+B,CAAC,EACrE,0BAA0B,CAAC,CAAC;YAC7B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YACjD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAEnD,oBAAoB;YAEpB,SAAS,aAAa,CAAC,CAAS,EAAE,QAAgB,EAAE,GAAG,GAAG,KAAK;gBAC9D,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAEnE,IAAI,MAAM,KAAK,QAAQ,EAAE;oBACxB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,QAAQ,WAAW,MAAM,EAAE,CAAC,CAAC;iBAC5D;YACF,CAAC;YAED,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAChC,aAAa,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACvC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAClC,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YAC3C,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC3B,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACnC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAChC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC1B,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACzB,aAAa,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YAC/B,aAAa,CAAC,oBAAoB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;YACtD,aAAa,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACxC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACpC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAChC,aAAa,CAAC,+BAA+B,EAAE,yBAAyB,EAAE,IAAI,CAAC,CAAC;YAChF,aAAa,CAAC,yBAAyB,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;YACtE,aAAa,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;YACpB,MAAM,QAAQ,GAAG,EAAc,CAAC;YAChC,MAAM,OAAO,GAAG,KAAK,CAAC;YAEtB;gBACC,CAAC,UAAU,EAAE,KAAK,CAAC;gBACnB,CAAC,EAAE,EAAE,EAAE,CAAC;gBACR,CAAC,eAAe,EAAE,EAAE,CAAC;gBACrB,CAAC,mBAAmB,EAAE,MAAM,CAAC;gBAC7B,CAAC,mBAAmB,EAAE,MAAM,CAAC;gBAC7B,CAAC,eAAe,EAAE,EAAE,CAAC;gBACrB,CAAC,gBAAgB,EAAE,EAAE,CAAC;gBACtB,CAAC,oBAAoB,EAAE,MAAM,CAAC;gBAC9B,CAAC,gBAAgB,EAAE,MAAM,CAAC;gBAC1B,CAAC,gBAAgB,EAAE,MAAM,CAAC;gBAC1B,CAAC,aAAa,EAAE,EAAE,CAAC;gBACnB,CAAC,MAAM,EAAE,EAAE,CAAC;gBACZ,CAAC,UAAU,EAAE,MAAM,CAAC;gBACpB,CAAC,OAAO,EAAE,EAAE,CAAC;gBACb,CAAC,WAAW,EAAE,MAAM,CAAC;gBACrB,CAAC,OAAO,EAAE,EAAE,CAAC;gBACb,CAAC,WAAW,EAAE,MAAM,CAAC;gBACrB,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACd,CAAC,YAAY,EAAE,MAAM,CAAC;gBACtB,CAAC,gBAAgB,EAAE,MAAM,CAAC;gBAC1B,CAAC,cAAc,EAAE,MAAM,CAAC;gBACxB,CAAC,OAAO,EAAE,GAAG,CAAC;gBACd,CAAC,GAAG,EAAE,EAAE,CAAC;gBACT,CAAC,IAAI,EAAE,EAAE,CAAC;gBACV,CAAC,WAAW,EAAE,MAAM,CAAC;gBACrB,CAAC,OAAO,EAAE,EAAE,CAAC;gBACb,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACf,CAAC,SAAS,EAAE,GAAG,CAAC;gBAChB,CAAC,IAAI,EAAE,EAAE,CAAC;gBACV,CAAC,KAAK,EAAE,EAAE,CAAC;gBACX,CAAC,YAAY,EAAE,MAAM,CAAC;gBACtB,CAAC,QAAQ,EAAE,OAAO,CAAC;gBACnB,CAAC,SAAS,EAAE,GAAG,CAAC;gBAChB,CAAC,UAAU,EAAE,GAAG,CAAC;gBACjB,CAAC,KAAK,EAAE,GAAG,CAAC;gBACZ,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAClB,CAAC,MAAM,EAAE,GAAG,CAAC;gBACb,CAAC,WAAW,EAAE,MAAM,CAAC;gBACrB,CAAC,YAAY,EAAE,MAAM,CAAC;gBACtB,CAAC,OAAO,EAAE,EAAE,CAAC;gBACb,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACd,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACf,CAAC,SAAS,EAAE,GAAG,CAAC;aAChB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC5D,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,IAAI,EAAE,CAAC;oBACP,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;wBACnC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACrC,EAAE,GAAG,OAAO,CAAC;qBACb;yBAAM;wBACN,EAAE,GAAG,OAAO,CAAC;qBACb;oBACD,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC9B,MAAM,OAAO,GAAG,QAAQ,EAAE,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;oBACzI,IAAI,MAAM,KAAK,QAAQ,EAAE;wBACxB,QAAQ,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;qBAC9B;gBACF,CAAC,CAAC,CAAC;gBACH;oBACC,MAAM,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;oBACpD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACzC,MAAM,OAAO,GAAG,sBAAsB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;oBACzI,IAAI,MAAM,KAAK,QAAQ,EAAE;wBACxB,QAAQ,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;qBAC9B;iBACD;YACF,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,6CAA6C;YAC7C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC;YAEzD,yEAAyE;YACzE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;YAE7D,oBAAoB;YACpB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,MAAM,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,CAAC,gBAAK,IAAI,oBAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,GAAG,EAAE;YACvD,MAAM,QAAQ,GAAG,EAAc,CAAC;YAChC,MAAM,OAAO,GAAG,KAAK,CAAC;YACtB,MAAM,WAAW,GAAG,KAAK,CAAC;YAE1B,MAAM,YAAY,GAAG;gBACpB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;oBACnB,iDAAiD;oBACjD,CAAC,CAAC,CAAC,eAAe,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC;wBACzD,CAAC,CAAC,WAAW,EAAE,cAAc,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC;wBACvD,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC;wBACjD,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC,EAAE,uBAAuB,CAAC;wBACxD,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;wBACtB,CAAC,CAAC,gBAAgB,EAAE,IAAI,EAAE,YAAY,CAAC,EAAE,6BAA6B,CAAC;wBACvE,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC;wBACvB,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC;wBAC7B,CAAC,CAAC,KAAK,EAAE,gBAAgB,CAAC,EAAE,qBAAqB,CAAC;wBAClD,CAAC,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAAE,qBAAqB,CAAC;wBACnD,CAAC,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,eAAe,CAAC;wBAC1C,CAAC,CAAC,kBAAkB,EAAE,4BAA4B,CAAC;4BAClD,iCAAiC,CAAC;qBAClC;iBACA;gBACD,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;oBACnB,sCAAsC;oBACtC,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;wBAC5C,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC;wBACxC,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;wBACvC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;wBACtB,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC;wBAC/C,CAAC,CAAC,aAAa,EAAE,yBAAyB,CAAC,EAAE,2BAA2B,CAAC;qBACxE;iBACA;aACD,CAAC;YACF,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,kBAAkB;gBAClB,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACxB,kBAAkB;oBAClB,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,IAAI,SAAS,CAAC;oBACd,MAAM,EAAE,GAAG,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;oBAC9D,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,oBAAS,EAAE;wBACjD,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;qBAC7C;yBACI,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,oBAAS,EAAE;wBACrD,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAC1C;oBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,MAAM,OAAO,GACZ,QAAQ,EAAE,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;oBAC1I,IAAI,MAAM,KAAK,QAAQ,IAAI,SAAS,KAAK,QAAQ,EAAE;wBAClD,QAAQ,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;qBAC9B;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,mBAAmB;YACnB,8EAA8E;YAC9E,qDAAqD;YACrD,8EAA8E;YAC9E,4DAA4D;YAC5D,wCAAwC;YACxC,4DAA4D;YAC5D,8DAA8D;YAC9D,gFAAgF;YAChF,IAAI;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;YACrB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,cAAc,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,cAAc,CAAC,CAAC;YACvE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,cAAc,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,cAAc,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,cAAc,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;YACjD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YAEhD,mDAAmD;YACnD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC/E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,UAAU,CAAC,CAAC;YACzE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE,cAAc,CAAC,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YAEtD,8DAA8D;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAC5D,qBAAqB,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAEtD,iDAAiD;YACjD,uEAAuE;YACvE,MAAM,mBAAmB,GAAG,OAAO,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,mBAAmB,EAAE,CAAC,EACpE,mBAAmB,CAAC,CAAC;YAEtB,oBAAoB;YACpB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACjD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACjD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAChD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;YACrB,MAAM,QAAQ,GAAG,EAAc,CAAC;YAEhC,MAAM,aAAa,GAAG;gBACrB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACpB,uCAAuC;oBACvC,CAAC,CAAC,eAAe,EAAE,UAAU,EAAE,WAAW,CAAC;wBAC3C,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC;wBACjC,CAAC,cAAc,EAAE,SAAS,EAAE,cAAc,CAAC;wBAC3C,CAAC,cAAc,EAAE,cAAc,EAAE,EAAE,CAAC;wBACpC,CAAC,cAAc,EAAE,cAAc,EAAE,UAAU,CAAC;wBAC5C,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,CAAC;wBACpC,CAAC,KAAK,EAAE,gBAAgB,EAAE,YAAY,CAAC;wBACvC,CAAC,cAAc,EAAE,MAAM,EAAE,MAAM,CAAC;wBAChC,CAAC,cAAc,EAAE,cAAc,EAAE,EAAE,CAAC;wBACpC,CAAC,WAAW,EAAE,cAAc,EAAE,gBAAgB,CAAC;wBAC/C,CAAC,yBAAyB,EAAE,MAAM,EAAE,gBAAgB,CAAC;wBACrD,CAAC,eAAe,EAAE,kCAAkC,EAAE,mBAAmB,CAAC;wBAC1E,CAAC,wBAAwB,EAAE,mBAAmB,EAAE,SAAS,CAAC;wBAC1D,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,cAAc,CAAC;wBAC/D,CAAC,cAAc,EAAE,mBAAmB,EAAE,KAAK,CAAC;wBAC5C,CAAC,mBAAmB,EAAE,cAAc,EAAE,IAAI,CAAC;wBAC3C,CAAC,wBAAwB,EAAE,mBAAmB,EAAE,SAAS,CAAC;wBAC1D,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,cAAc,CAAC;wBAC/D,CAAC,cAAc,EAAE,SAAS,EAAE,SAAS,CAAC;wBACtC,CAAC,SAAS,EAAE,cAAc,EAAE,cAAc,CAAC;wBAC3C,CAAC,mBAAmB,EAAE,cAAc,EAAE,SAAS,CAAC;wBAChD,CAAC,cAAc,EAAE,mBAAmB,EAAE,cAAc,CAAC;wBACrD,CAAC,SAAS,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;wBACrD,CAAC,mBAAmB,EAAE,SAAS,EAAE,SAAS,CAAC;qBAC1C;iBACA;gBACD,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACpB,4BAA4B;oBAC5B,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC;wBAC3B,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC;wBACjC,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC;wBAC5B,CAAC,UAAU,EAAE,aAAa,EAAE,WAAW,CAAC;wBACxC,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC;wBAC5B,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,CAAC;wBAC5B,CAAC,WAAW,EAAE,4BAA4B,EAAE,kBAAkB,CAAC;wBAC/D,CAAC,2BAA2B,EAAE,gBAAgB,EAAE,OAAO,CAAC;wBACxD,CAAC,mBAAmB,EAAE,cAAc,EAAE,QAAQ,CAAC;wBAC/C,CAAC,cAAc,EAAE,mBAAmB,EAAE,aAAa,CAAC;wBACpD,CAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,CAAC;wBAC/B,CAAC,MAAM,EAAE,WAAW,EAAE,aAAa,CAAC;qBACnC;iBACA;aACD,CAAC;YACF,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,kBAAkB;gBAClB,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACxB,kBAAkB;oBAClB,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,MAAM,EAAE,GAAG,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;oBAChE,MAAM,OAAO,GAAG,QAAQ,EAAE,aAAa,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;oBACnK,IAAI,MAAM,KAAK,QAAQ,EAAE;wBACxB,QAAQ,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;qBAC9B;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAClE,mBAAmB,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,OAAO,CAAC,CAAC;YACvE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,6BAA6B,CAAC,EACrE,kCAAkC,CAAC,CAAC;YACrC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,uBAAuB,CAAC,EAAE,WAAW,CAAC,CAAC;YAC/E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,CAAC,EAChE,eAAe,CAAC,CAAC;YAClB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,CAAC;YACvE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,OAAO,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,UAAU,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;YACzE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,CAAC,EAChE,aAAa,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kCAAkC,CAAC,EAC1E,aAAa,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,2BAA2B,CAAC,EACnE,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kCAAkC,CAAC,EAC1E,0BAA0B,CAAC,CAAC;YAC7B,MAAM,CAAC,WAAW,CACjB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,0CAA0C,CAAC,EAChE,UAAU,CACV,CAAC;YACF,MAAM,CAAC,WAAW,CACjB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,yCAAyC,CAAC,EAC/D,qBAAqB,CACrB,CAAC;YACF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,eAAe,CAAC,CAAC;YAE1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAClE,iBAAiB,CAAC,CAAC;YACpB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,MAAM,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,uBAAuB,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,UAAU,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,SAAS,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE,WAAW,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,2BAA2B,CAAC,EACnE,WAAW,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,2BAA2B,CAAC,EACnE,oBAAoB,CAAC,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kCAAkC,CAAC,EAC1E,oBAAoB,CAAC,CAAC;YACvB,MAAM,CAAC,WAAW,CACjB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,0CAA0C,CAAC,EAChE,QAAQ,CACR,CAAC;YACF,MAAM,CAAC,WAAW,CACjB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,yCAAyC,CAAC,EAC/D,iBAAiB,CACjB,CAAC;YACF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;YACvB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,KAAK,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE,KAAK,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,KAAK,CAAC,CAAC;YAEzE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;YAE1D,qBAAqB;YAErB,iBAAiB;YACjB;gBACC,KAAK;gBACL,MAAM;gBACN,QAAQ;gBACR,SAAS;gBACT,gBAAgB;gBAChB,kBAAkB;gBAElB,wBAAwB;gBAExB,GAAG;gBACH,MAAM;aACN,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBACxB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH;gBACC,GAAG;gBACH,MAAM;gBACN,cAAc;aACd,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBACxB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,iBAAiB;YACjB;gBACC,EAAE;gBACF,KAAK;gBACL,SAAS;gBACT,OAAO;gBACP,oBAAoB;aACpB,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;gBAC3B,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YAEH;gBACC,EAAE;gBACF,KAAK;gBACL,SAAS;gBACT,OAAO;gBACP,oBAAoB;gBACpB,gBAAgB;aAChB,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;gBAC3B,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;YACjB,iBAAiB;YACjB,UAAU;YACV,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACzC,QAAQ;YACR,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAExC,uBAAuB;YACvB,UAAU;YACV,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YAC9C,QAAQ;YACR,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YAE9C,mBAAmB;YACnB,yCAAyC;YACzC,WAAW;YACX,yCAAyC;YACzC,IAAI;QACL,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,yBAAyB;QACzB,WAAW;QACX,aAAa;QACb,4BAA4B;QAC5B,SAAS;QACT,wCAAwC;QACxC,WAAW;QACX,MAAM;QAEN,uBAAuB;QACvB,UAAU;QACV,QAAQ;QACR,MAAM;QAEN,wBAAwB;QACxB,UAAU;QACV,QAAQ;QACR,MAAM;QAEN,8CAA8C;QAC9C,6CAA6C;QAC7C,KAAK;QAEL,8BAA8B;QAC9B,yBAAyB;QACzB,UAAU;QACV,mCAAmC;QACnC,6DAA6D;QAC7D,0CAA0C;QAE1C,+EAA+E;QAC/E,iCAAiC;QACjC,gIAAgI;QAChI,MAAM;QAEN,4CAA4C;QAE5C,yBAAyB;QACzB,sCAAsC;QACtC,iCAAiC;QACjC,sHAAsH;QACtH,MAAM;QAEN,0CAA0C;QAC1C,KAAK;QAEL,oBAAoB;QAEpB,UAAU;QACV,6CAA6C;QAC7C,uCAAuC;QACvC,uCAAuC;QAEvC,wCAAwC;QACxC,6BAA6B;QAC7B,6CAA6C;QAC7C,KAAK;QAEL,4CAA4C;QAC5C,MAAM;IACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport * as assert from 'assert';\nimport * as path from 'vs/base/common/path';\nimport { isWeb, isWindows } from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nsuite('Paths (Node Implementation)', () => {\n\tconst __filename = 'path.test.js';\n\ttest('join', () => {\n\t\tconst failures = [] as string[];\n\t\tconst backslashRE = /\\\\/g;\n\n\t\tconst joinTests: any = [\n\t\t\t[[path.posix.join, path.win32.join],\n\t\t\t// arguments                     result\n\t\t\t[[['.', 'x/b', '..', '/b/c.js'], 'x/b/c.js'],\n\t\t\t[[], '.'],\n\t\t\t[['/.', 'x/b', '..', '/b/c.js'], '/x/b/c.js'],\n\t\t\t[['/foo', '../../../bar'], '/bar'],\n\t\t\t[['foo', '../../../bar'], '../../bar'],\n\t\t\t[['foo/', '../../../bar'], '../../bar'],\n\t\t\t[['foo/x', '../../../bar'], '../bar'],\n\t\t\t[['foo/x', './bar'], 'foo/x/bar'],\n\t\t\t[['foo/x/', './bar'], 'foo/x/bar'],\n\t\t\t[['foo/x/', '.', 'bar'], 'foo/x/bar'],\n\t\t\t[['./'], './'],\n\t\t\t[['.', './'], './'],\n\t\t\t[['.', '.', '.'], '.'],\n\t\t\t[['.', './', '.'], '.'],\n\t\t\t[['.', '/./', '.'], '.'],\n\t\t\t[['.', '/////./', '.'], '.'],\n\t\t\t[['.'], '.'],\n\t\t\t[['', '.'], '.'],\n\t\t\t[['', 'foo'], 'foo'],\n\t\t\t[['foo', '/bar'], 'foo/bar'],\n\t\t\t[['', '/foo'], '/foo'],\n\t\t\t[['', '', '/foo'], '/foo'],\n\t\t\t[['', '', 'foo'], 'foo'],\n\t\t\t[['foo', ''], 'foo'],\n\t\t\t[['foo/', ''], 'foo/'],\n\t\t\t[['foo', '', '/bar'], 'foo/bar'],\n\t\t\t[['./', '..', '/foo'], '../foo'],\n\t\t\t[['./', '..', '..', '/foo'], '../../foo'],\n\t\t\t[['.', '..', '..', '/foo'], '../../foo'],\n\t\t\t[['', '..', '..', '/foo'], '../../foo'],\n\t\t\t[['/'], '/'],\n\t\t\t[['/', '.'], '/'],\n\t\t\t[['/', '..'], '/'],\n\t\t\t[['/', '..', '..'], '/'],\n\t\t\t[[''], '.'],\n\t\t\t[['', ''], '.'],\n\t\t\t[[' /foo'], ' /foo'],\n\t\t\t[[' ', 'foo'], ' /foo'],\n\t\t\t[[' ', '.'], ' '],\n\t\t\t[[' ', '/'], ' /'],\n\t\t\t[[' ', ''], ' '],\n\t\t\t[['/', 'foo'], '/foo'],\n\t\t\t[['/', '/foo'], '/foo'],\n\t\t\t[['/', '//foo'], '/foo'],\n\t\t\t[['/', '', '/foo'], '/foo'],\n\t\t\t[['', '/', 'foo'], '/foo'],\n\t\t\t[['', '/', '/foo'], '/foo']\n\t\t\t]\n\t\t\t]\n\t\t];\n\n\t\t// Windows-specific join tests\n\t\tjoinTests.push([\n\t\t\tpath.win32.join,\n\t\t\tjoinTests[0][1].slice(0).concat(\n\t\t\t\t[// arguments                     result\n\t\t\t\t\t// UNC path expected\n\t\t\t\t\t[['//foo/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['\\\\/foo/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['\\\\\\\\foo/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t// UNC path expected - server and share separate\n\t\t\t\t\t[['//foo', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['//foo/', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['//foo', '/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t// UNC path expected - questionable\n\t\t\t\t\t[['//foo', '', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['//foo/', '', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['//foo/', '', '/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t// UNC path expected - even more questionable\n\t\t\t\t\t[['', '//foo', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['', '//foo/', 'bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t[['', '//foo/', '/bar'], '\\\\\\\\foo\\\\bar\\\\'],\n\t\t\t\t\t// No UNC path expected (no double slash in first component)\n\t\t\t\t\t[['\\\\', 'foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['\\\\', '/foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['', '/', '/foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t// No UNC path expected (no non-slashes in first component -\n\t\t\t\t\t// questionable)\n\t\t\t\t\t[['//', 'foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['//', '/foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['\\\\\\\\', '/', '/foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['//'], '\\\\'],\n\t\t\t\t\t// No UNC path expected (share name missing - questionable).\n\t\t\t\t\t[['//foo'], '\\\\foo'],\n\t\t\t\t\t[['//foo/'], '\\\\foo\\\\'],\n\t\t\t\t\t[['//foo', '/'], '\\\\foo\\\\'],\n\t\t\t\t\t[['//foo', '', '/'], '\\\\foo\\\\'],\n\t\t\t\t\t// No UNC path expected (too many leading slashes - questionable)\n\t\t\t\t\t[['///foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['////foo', 'bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t[['\\\\\\\\\\\\/foo/bar'], '\\\\foo\\\\bar'],\n\t\t\t\t\t// Drive-relative vs drive-absolute paths. This merely describes the\n\t\t\t\t\t// status quo, rather than being obviously right\n\t\t\t\t\t[['c:'], 'c:.'],\n\t\t\t\t\t[['c:.'], 'c:.'],\n\t\t\t\t\t[['c:', ''], 'c:.'],\n\t\t\t\t\t[['', 'c:'], 'c:.'],\n\t\t\t\t\t[['c:.', '/'], 'c:.\\\\'],\n\t\t\t\t\t[['c:.', 'file'], 'c:file'],\n\t\t\t\t\t[['c:', '/'], 'c:\\\\'],\n\t\t\t\t\t[['c:', 'file'], 'c:\\\\file']\n\t\t\t\t]\n\t\t\t)\n\t\t]);\n\t\tjoinTests.forEach((test: any[]) => {\n\t\t\tif (!Array.isArray(test[0])) {\n\t\t\t\ttest[0] = [test[0]];\n\t\t\t}\n\t\t\ttest[0].forEach((join: any) => {\n\t\t\t\ttest[1].forEach((test: any) => {\n\t\t\t\t\tconst actual = join.apply(null, test[0]);\n\t\t\t\t\tconst expected = test[1];\n\t\t\t\t\t// For non-Windows specific tests with the Windows join(), we need to try\n\t\t\t\t\t// replacing the slashes since the non-Windows specific tests' `expected`\n\t\t\t\t\t// use forward slashes\n\t\t\t\t\tlet actualAlt;\n\t\t\t\t\tlet os;\n\t\t\t\t\tif (join === path.win32.join) {\n\t\t\t\t\t\tactualAlt = actual.replace(backslashRE, '/');\n\t\t\t\t\t\tos = 'win32';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tos = 'posix';\n\t\t\t\t\t}\n\t\t\t\t\tconst message =\n\t\t\t\t\t\t`path.${os}.join(${test[0].map(JSON.stringify).join(',')})\\n  expect=${JSON.stringify(expected)}\\n  actual=${JSON.stringify(actual)}`;\n\t\t\t\t\tif (actual !== expected && actualAlt !== expected) {\n\t\t\t\t\t\tfailures.push(`\\n${message}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tassert.strictEqual(failures.length, 0, failures.join(''));\n\t});\n\n\ttest('dirname', () => {\n\t\tassert.strictEqual(path.posix.dirname('/a/b/'), '/a');\n\t\tassert.strictEqual(path.posix.dirname('/a/b'), '/a');\n\t\tassert.strictEqual(path.posix.dirname('/a'), '/');\n\t\tassert.strictEqual(path.posix.dirname(''), '.');\n\t\tassert.strictEqual(path.posix.dirname('/'), '/');\n\t\tassert.strictEqual(path.posix.dirname('////'), '/');\n\t\tassert.strictEqual(path.posix.dirname('//a'), '//');\n\t\tassert.strictEqual(path.posix.dirname('foo'), '.');\n\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\'), 'c:\\\\');\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\foo'), 'c:\\\\');\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\foo\\\\'), 'c:\\\\');\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\foo\\\\bar'), 'c:\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\foo\\\\bar\\\\'), 'c:\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('c:\\\\foo\\\\bar\\\\baz'), 'c:\\\\foo\\\\bar');\n\t\tassert.strictEqual(path.win32.dirname('\\\\'), '\\\\');\n\t\tassert.strictEqual(path.win32.dirname('\\\\foo'), '\\\\');\n\t\tassert.strictEqual(path.win32.dirname('\\\\foo\\\\'), '\\\\');\n\t\tassert.strictEqual(path.win32.dirname('\\\\foo\\\\bar'), '\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('\\\\foo\\\\bar\\\\'), '\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('\\\\foo\\\\bar\\\\baz'), '\\\\foo\\\\bar');\n\t\tassert.strictEqual(path.win32.dirname('c:'), 'c:');\n\t\tassert.strictEqual(path.win32.dirname('c:foo'), 'c:');\n\t\tassert.strictEqual(path.win32.dirname('c:foo\\\\'), 'c:');\n\t\tassert.strictEqual(path.win32.dirname('c:foo\\\\bar'), 'c:foo');\n\t\tassert.strictEqual(path.win32.dirname('c:foo\\\\bar\\\\'), 'c:foo');\n\t\tassert.strictEqual(path.win32.dirname('c:foo\\\\bar\\\\baz'), 'c:foo\\\\bar');\n\t\tassert.strictEqual(path.win32.dirname('file:stream'), '.');\n\t\tassert.strictEqual(path.win32.dirname('dir\\\\file:stream'), 'dir');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share'),\n\t\t\t'\\\\\\\\unc\\\\share');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share\\\\foo'),\n\t\t\t'\\\\\\\\unc\\\\share\\\\');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share\\\\foo\\\\'),\n\t\t\t'\\\\\\\\unc\\\\share\\\\');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share\\\\foo\\\\bar'),\n\t\t\t'\\\\\\\\unc\\\\share\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share\\\\foo\\\\bar\\\\'),\n\t\t\t'\\\\\\\\unc\\\\share\\\\foo');\n\t\tassert.strictEqual(path.win32.dirname('\\\\\\\\unc\\\\share\\\\foo\\\\bar\\\\baz'),\n\t\t\t'\\\\\\\\unc\\\\share\\\\foo\\\\bar');\n\t\tassert.strictEqual(path.win32.dirname('/a/b/'), '/a');\n\t\tassert.strictEqual(path.win32.dirname('/a/b'), '/a');\n\t\tassert.strictEqual(path.win32.dirname('/a'), '/');\n\t\tassert.strictEqual(path.win32.dirname(''), '.');\n\t\tassert.strictEqual(path.win32.dirname('/'), '/');\n\t\tassert.strictEqual(path.win32.dirname('////'), '/');\n\t\tassert.strictEqual(path.win32.dirname('foo'), '.');\n\n\t\t// Tests from VSCode\n\n\t\tfunction assertDirname(p: string, expected: string, win = false) {\n\t\t\tconst actual = win ? path.win32.dirname(p) : path.posix.dirname(p);\n\n\t\t\tif (actual !== expected) {\n\t\t\t\tassert.fail(`${p}: expected: ${expected}, ours: ${actual}`);\n\t\t\t}\n\t\t}\n\n\t\tassertDirname('foo/bar', 'foo');\n\t\tassertDirname('foo\\\\bar', 'foo', true);\n\t\tassertDirname('/foo/bar', '/foo');\n\t\tassertDirname('\\\\foo\\\\bar', '\\\\foo', true);\n\t\tassertDirname('/foo', '/');\n\t\tassertDirname('\\\\foo', '\\\\', true);\n\t\tassertDirname('/', '/');\n\t\tassertDirname('\\\\', '\\\\', true);\n\t\tassertDirname('foo', '.');\n\t\tassertDirname('f', '.');\n\t\tassertDirname('f/', '.');\n\t\tassertDirname('/folder/', '/');\n\t\tassertDirname('c:\\\\some\\\\file.txt', 'c:\\\\some', true);\n\t\tassertDirname('c:\\\\some', 'c:\\\\', true);\n\t\tassertDirname('c:\\\\', 'c:\\\\', true);\n\t\tassertDirname('c:', 'c:', true);\n\t\tassertDirname('\\\\\\\\server\\\\share\\\\some\\\\path', '\\\\\\\\server\\\\share\\\\some', true);\n\t\tassertDirname('\\\\\\\\server\\\\share\\\\some', '\\\\\\\\server\\\\share\\\\', true);\n\t\tassertDirname('\\\\\\\\server\\\\share\\\\', '\\\\\\\\server\\\\share\\\\', true);\n\t});\n\n\ttest('extname', () => {\n\t\tconst failures = [] as string[];\n\t\tconst slashRE = /\\//g;\n\n\t\t[\n\t\t\t[__filename, '.js'],\n\t\t\t['', ''],\n\t\t\t['/path/to/file', ''],\n\t\t\t['/path/to/file.ext', '.ext'],\n\t\t\t['/path.to/file.ext', '.ext'],\n\t\t\t['/path.to/file', ''],\n\t\t\t['/path.to/.file', ''],\n\t\t\t['/path.to/.file.ext', '.ext'],\n\t\t\t['/path/to/f.ext', '.ext'],\n\t\t\t['/path/to/..ext', '.ext'],\n\t\t\t['/path/to/..', ''],\n\t\t\t['file', ''],\n\t\t\t['file.ext', '.ext'],\n\t\t\t['.file', ''],\n\t\t\t['.file.ext', '.ext'],\n\t\t\t['/file', ''],\n\t\t\t['/file.ext', '.ext'],\n\t\t\t['/.file', ''],\n\t\t\t['/.file.ext', '.ext'],\n\t\t\t['.path/file.ext', '.ext'],\n\t\t\t['file.ext.ext', '.ext'],\n\t\t\t['file.', '.'],\n\t\t\t['.', ''],\n\t\t\t['./', ''],\n\t\t\t['.file.ext', '.ext'],\n\t\t\t['.file', ''],\n\t\t\t['.file.', '.'],\n\t\t\t['.file..', '.'],\n\t\t\t['..', ''],\n\t\t\t['../', ''],\n\t\t\t['..file.ext', '.ext'],\n\t\t\t['..file', '.file'],\n\t\t\t['..file.', '.'],\n\t\t\t['..file..', '.'],\n\t\t\t['...', '.'],\n\t\t\t['...ext', '.ext'],\n\t\t\t['....', '.'],\n\t\t\t['file.ext/', '.ext'],\n\t\t\t['file.ext//', '.ext'],\n\t\t\t['file/', ''],\n\t\t\t['file//', ''],\n\t\t\t['file./', '.'],\n\t\t\t['file.//', '.'],\n\t\t].forEach((test) => {\n\t\t\tconst expected = test[1];\n\t\t\t[path.posix.extname, path.win32.extname].forEach((extname) => {\n\t\t\t\tlet input = test[0];\n\t\t\t\tlet os;\n\t\t\t\tif (extname === path.win32.extname) {\n\t\t\t\t\tinput = input.replace(slashRE, '\\\\');\n\t\t\t\t\tos = 'win32';\n\t\t\t\t} else {\n\t\t\t\t\tos = 'posix';\n\t\t\t\t}\n\t\t\t\tconst actual = extname(input);\n\t\t\t\tconst message = `path.${os}.extname(${JSON.stringify(input)})\\n  expect=${JSON.stringify(expected)}\\n  actual=${JSON.stringify(actual)}`;\n\t\t\t\tif (actual !== expected) {\n\t\t\t\t\tfailures.push(`\\n${message}`);\n\t\t\t\t}\n\t\t\t});\n\t\t\t{\n\t\t\t\tconst input = `C:${test[0].replace(slashRE, '\\\\')}`;\n\t\t\t\tconst actual = path.win32.extname(input);\n\t\t\t\tconst message = `path.win32.extname(${JSON.stringify(input)})\\n  expect=${JSON.stringify(expected)}\\n  actual=${JSON.stringify(actual)}`;\n\t\t\t\tif (actual !== expected) {\n\t\t\t\t\tfailures.push(`\\n${message}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tassert.strictEqual(failures.length, 0, failures.join(''));\n\n\t\t// On Windows, backslash is a path separator.\n\t\tassert.strictEqual(path.win32.extname('.\\\\'), '');\n\t\tassert.strictEqual(path.win32.extname('..\\\\'), '');\n\t\tassert.strictEqual(path.win32.extname('file.ext\\\\'), '.ext');\n\t\tassert.strictEqual(path.win32.extname('file.ext\\\\\\\\'), '.ext');\n\t\tassert.strictEqual(path.win32.extname('file\\\\'), '');\n\t\tassert.strictEqual(path.win32.extname('file\\\\\\\\'), '');\n\t\tassert.strictEqual(path.win32.extname('file.\\\\'), '.');\n\t\tassert.strictEqual(path.win32.extname('file.\\\\\\\\'), '.');\n\n\t\t// On *nix, backslash is a valid name component like any other character.\n\t\tassert.strictEqual(path.posix.extname('.\\\\'), '');\n\t\tassert.strictEqual(path.posix.extname('..\\\\'), '.\\\\');\n\t\tassert.strictEqual(path.posix.extname('file.ext\\\\'), '.ext\\\\');\n\t\tassert.strictEqual(path.posix.extname('file.ext\\\\\\\\'), '.ext\\\\\\\\');\n\t\tassert.strictEqual(path.posix.extname('file\\\\'), '');\n\t\tassert.strictEqual(path.posix.extname('file\\\\\\\\'), '');\n\t\tassert.strictEqual(path.posix.extname('file.\\\\'), '.\\\\');\n\t\tassert.strictEqual(path.posix.extname('file.\\\\\\\\'), '.\\\\\\\\');\n\n\t\t// Tests from VSCode\n\t\tassert.strictEqual(path.extname('far.boo'), '.boo');\n\t\tassert.strictEqual(path.extname('far.b'), '.b');\n\t\tassert.strictEqual(path.extname('far.'), '.');\n\t\tassert.strictEqual(path.extname('far.boo/boo.far'), '.far');\n\t\tassert.strictEqual(path.extname('far.boo/boo'), '');\n\t});\n\n\t(isWeb && isWindows ? test.skip : test)('resolve', () => { // TODO@sbatten fails on windows & browser only\n\t\tconst failures = [] as string[];\n\t\tconst slashRE = /\\//g;\n\t\tconst backslashRE = /\\\\/g;\n\n\t\tconst resolveTests = [\n\t\t\t[path.win32.resolve,\n\t\t\t// arguments                               result\n\t\t\t[[['c:/blah\\\\blah', 'd:/games', 'c:../a'], 'c:\\\\blah\\\\a'],\n\t\t\t[['c:/ignore', 'd:\\\\a/b\\\\c/d', '\\\\e.exe'], 'd:\\\\e.exe'],\n\t\t\t[['c:/ignore', 'c:/some/file'], 'c:\\\\some\\\\file'],\n\t\t\t[['d:/ignore', 'd:some/dir//'], 'd:\\\\ignore\\\\some\\\\dir'],\n\t\t\t[['.'], process.cwd()],\n\t\t\t[['//server/share', '..', 'relative\\\\'], '\\\\\\\\server\\\\share\\\\relative'],\n\t\t\t[['c:/', '//'], 'c:\\\\'],\n\t\t\t[['c:/', '//dir'], 'c:\\\\dir'],\n\t\t\t[['c:/', '//server/share'], '\\\\\\\\server\\\\share\\\\'],\n\t\t\t[['c:/', '//server//share'], '\\\\\\\\server\\\\share\\\\'],\n\t\t\t[['c:/', '///some//dir'], 'c:\\\\some\\\\dir'],\n\t\t\t[['C:\\\\foo\\\\tmp.3\\\\', '..\\\\tmp.3\\\\cycles\\\\root.js'],\n\t\t\t\t'C:\\\\foo\\\\tmp.3\\\\cycles\\\\root.js']\n\t\t\t]\n\t\t\t],\n\t\t\t[path.posix.resolve,\n\t\t\t// arguments                    result\n\t\t\t[[['/var/lib', '../', 'file/'], '/var/file'],\n\t\t\t[['/var/lib', '/../', 'file/'], '/file'],\n\t\t\t[['a/b/c/', '../../..'], process.cwd()],\n\t\t\t[['.'], process.cwd()],\n\t\t\t[['/some/dir', '.', '/absolute/'], '/absolute'],\n\t\t\t[['/foo/tmp.3/', '../tmp.3/cycles/root.js'], '/foo/tmp.3/cycles/root.js']\n\t\t\t]\n\t\t\t]\n\t\t];\n\t\tresolveTests.forEach((test) => {\n\t\t\tconst resolve = test[0];\n\t\t\t//@ts-expect-error\n\t\t\ttest[1].forEach((test) => {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tconst actual = resolve.apply(null, test[0]);\n\t\t\t\tlet actualAlt;\n\t\t\t\tconst os = resolve === path.win32.resolve ? 'win32' : 'posix';\n\t\t\t\tif (resolve === path.win32.resolve && !isWindows) {\n\t\t\t\t\tactualAlt = actual.replace(backslashRE, '/');\n\t\t\t\t}\n\t\t\t\telse if (resolve !== path.win32.resolve && isWindows) {\n\t\t\t\t\tactualAlt = actual.replace(slashRE, '\\\\');\n\t\t\t\t}\n\n\t\t\t\tconst expected = test[1];\n\t\t\t\tconst message =\n\t\t\t\t\t`path.${os}.resolve(${test[0].map(JSON.stringify).join(',')})\\n  expect=${JSON.stringify(expected)}\\n  actual=${JSON.stringify(actual)}`;\n\t\t\t\tif (actual !== expected && actualAlt !== expected) {\n\t\t\t\t\tfailures.push(`\\n${message}`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tassert.strictEqual(failures.length, 0, failures.join(''));\n\n\t\t// if (isWindows) {\n\t\t// \t// Test resolving the current Windows drive letter from a spawned process.\n\t\t// \t// See https://github.com/nodejs/node/issues/7215\n\t\t// \tconst currentDriveLetter = path.parse(process.cwd()).root.substring(0, 2);\n\t\t// \tconst resolveFixture = fixtures.path('path-resolve.js');\n\t\t// \tconst spawnResult = child.spawnSync(\n\t\t// \t\tprocess.argv[0], [resolveFixture, currentDriveLetter]);\n\t\t// \tconst resolvedPath = spawnResult.stdout.toString().trim();\n\t\t// \tassert.strictEqual(resolvedPath.toLowerCase(), process.cwd().toLowerCase());\n\t\t// }\n\t});\n\n\ttest('basename', () => {\n\t\tassert.strictEqual(path.basename(__filename), 'path.test.js');\n\t\tassert.strictEqual(path.basename(__filename, '.js'), 'path.test');\n\t\tassert.strictEqual(path.basename('.js', '.js'), '');\n\t\tassert.strictEqual(path.basename(''), '');\n\t\tassert.strictEqual(path.basename('/dir/basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.basename('/basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.basename('basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.basename('basename.ext/'), 'basename.ext');\n\t\tassert.strictEqual(path.basename('basename.ext//'), 'basename.ext');\n\t\tassert.strictEqual(path.basename('aaa/bbb', '/bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('aaa/bbb', 'a/bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('aaa/bbb', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('aaa/bbb//', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('aaa/bbb', 'bb'), 'b');\n\t\tassert.strictEqual(path.basename('aaa/bbb', 'b'), 'bb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb', '/bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb', 'a/bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb//', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb', 'bb'), 'b');\n\t\tassert.strictEqual(path.basename('/aaa/bbb', 'b'), 'bb');\n\t\tassert.strictEqual(path.basename('/aaa/bbb'), 'bbb');\n\t\tassert.strictEqual(path.basename('/aaa/'), 'aaa');\n\t\tassert.strictEqual(path.basename('/aaa/b'), 'b');\n\t\tassert.strictEqual(path.basename('/a/b'), 'b');\n\t\tassert.strictEqual(path.basename('//a'), 'a');\n\t\tassert.strictEqual(path.basename('a', 'a'), '');\n\n\t\t// On Windows a backslash acts as a path separator.\n\t\tassert.strictEqual(path.win32.basename('\\\\dir\\\\basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('\\\\basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('basename.ext\\\\'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('basename.ext\\\\\\\\'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('foo'), 'foo');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb', '\\\\bbb'), 'bbb');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb', 'a\\\\bbb'), 'bbb');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb\\\\\\\\\\\\\\\\', 'bbb'), 'bbb');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb', 'bb'), 'b');\n\t\tassert.strictEqual(path.win32.basename('aaa\\\\bbb', 'b'), 'bb');\n\t\tassert.strictEqual(path.win32.basename('C:'), '');\n\t\tassert.strictEqual(path.win32.basename('C:.'), '.');\n\t\tassert.strictEqual(path.win32.basename('C:\\\\'), '');\n\t\tassert.strictEqual(path.win32.basename('C:\\\\dir\\\\base.ext'), 'base.ext');\n\t\tassert.strictEqual(path.win32.basename('C:\\\\basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('C:basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('C:basename.ext\\\\'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('C:basename.ext\\\\\\\\'), 'basename.ext');\n\t\tassert.strictEqual(path.win32.basename('C:foo'), 'foo');\n\t\tassert.strictEqual(path.win32.basename('file:stream'), 'file:stream');\n\t\tassert.strictEqual(path.win32.basename('a', 'a'), '');\n\n\t\t// On unix a backslash is just treated as any other character.\n\t\tassert.strictEqual(path.posix.basename('\\\\dir\\\\basename.ext'),\n\t\t\t'\\\\dir\\\\basename.ext');\n\t\tassert.strictEqual(path.posix.basename('\\\\basename.ext'), '\\\\basename.ext');\n\t\tassert.strictEqual(path.posix.basename('basename.ext'), 'basename.ext');\n\t\tassert.strictEqual(path.posix.basename('basename.ext\\\\'), 'basename.ext\\\\');\n\t\tassert.strictEqual(path.posix.basename('basename.ext\\\\\\\\'), 'basename.ext\\\\\\\\');\n\t\tassert.strictEqual(path.posix.basename('foo'), 'foo');\n\n\t\t// POSIX filenames may include control characters\n\t\t// c.f. http://www.dwheeler.com/essays/fixing-unix-linux-filenames.html\n\t\tconst controlCharFilename = `Icon${String.fromCharCode(13)}`;\n\t\tassert.strictEqual(path.posix.basename(`/a/b/${controlCharFilename}`),\n\t\t\tcontrolCharFilename);\n\n\t\t// Tests from VSCode\n\t\tassert.strictEqual(path.basename('foo/bar'), 'bar');\n\t\tassert.strictEqual(path.posix.basename('foo\\\\bar'), 'foo\\\\bar');\n\t\tassert.strictEqual(path.win32.basename('foo\\\\bar'), 'bar');\n\t\tassert.strictEqual(path.basename('/foo/bar'), 'bar');\n\t\tassert.strictEqual(path.posix.basename('\\\\foo\\\\bar'), '\\\\foo\\\\bar');\n\t\tassert.strictEqual(path.win32.basename('\\\\foo\\\\bar'), 'bar');\n\t\tassert.strictEqual(path.basename('./bar'), 'bar');\n\t\tassert.strictEqual(path.posix.basename('.\\\\bar'), '.\\\\bar');\n\t\tassert.strictEqual(path.win32.basename('.\\\\bar'), 'bar');\n\t\tassert.strictEqual(path.basename('/bar'), 'bar');\n\t\tassert.strictEqual(path.posix.basename('\\\\bar'), '\\\\bar');\n\t\tassert.strictEqual(path.win32.basename('\\\\bar'), 'bar');\n\t\tassert.strictEqual(path.basename('bar/'), 'bar');\n\t\tassert.strictEqual(path.posix.basename('bar\\\\'), 'bar\\\\');\n\t\tassert.strictEqual(path.win32.basename('bar\\\\'), 'bar');\n\t\tassert.strictEqual(path.basename('bar'), 'bar');\n\t\tassert.strictEqual(path.basename('////////'), '');\n\t\tassert.strictEqual(path.posix.basename('\\\\\\\\\\\\\\\\'), '\\\\\\\\\\\\\\\\');\n\t\tassert.strictEqual(path.win32.basename('\\\\\\\\\\\\\\\\'), '');\n\t});\n\n\ttest('relative', () => {\n\t\tconst failures = [] as string[];\n\n\t\tconst relativeTests = [\n\t\t\t[path.win32.relative,\n\t\t\t// arguments                     result\n\t\t\t[['c:/blah\\\\blah', 'd:/games', 'd:\\\\games'],\n\t\t\t['c:/aaaa/bbbb', 'c:/aaaa', '..'],\n\t\t\t['c:/aaaa/bbbb', 'c:/cccc', '..\\\\..\\\\cccc'],\n\t\t\t['c:/aaaa/bbbb', 'c:/aaaa/bbbb', ''],\n\t\t\t['c:/aaaa/bbbb', 'c:/aaaa/cccc', '..\\\\cccc'],\n\t\t\t['c:/aaaa/', 'c:/aaaa/cccc', 'cccc'],\n\t\t\t['c:/', 'c:\\\\aaaa\\\\bbbb', 'aaaa\\\\bbbb'],\n\t\t\t['c:/aaaa/bbbb', 'd:\\\\', 'd:\\\\'],\n\t\t\t['c:/AaAa/bbbb', 'c:/aaaa/bbbb', ''],\n\t\t\t['c:/aaaaa/', 'c:/aaaa/cccc', '..\\\\aaaa\\\\cccc'],\n\t\t\t['C:\\\\foo\\\\bar\\\\baz\\\\quux', 'C:\\\\', '..\\\\..\\\\..\\\\..'],\n\t\t\t['C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json', 'bar\\\\package.json'],\n\t\t\t['C:\\\\foo\\\\bar\\\\baz-quux', 'C:\\\\foo\\\\bar\\\\baz', '..\\\\baz'],\n\t\t\t['C:\\\\foo\\\\bar\\\\baz', 'C:\\\\foo\\\\bar\\\\baz-quux', '..\\\\baz-quux'],\n\t\t\t['\\\\\\\\foo\\\\bar', '\\\\\\\\foo\\\\bar\\\\baz', 'baz'],\n\t\t\t['\\\\\\\\foo\\\\bar\\\\baz', '\\\\\\\\foo\\\\bar', '..'],\n\t\t\t['\\\\\\\\foo\\\\bar\\\\baz-quux', '\\\\\\\\foo\\\\bar\\\\baz', '..\\\\baz'],\n\t\t\t['\\\\\\\\foo\\\\bar\\\\baz', '\\\\\\\\foo\\\\bar\\\\baz-quux', '..\\\\baz-quux'],\n\t\t\t['C:\\\\baz-quux', 'C:\\\\baz', '..\\\\baz'],\n\t\t\t['C:\\\\baz', 'C:\\\\baz-quux', '..\\\\baz-quux'],\n\t\t\t['\\\\\\\\foo\\\\baz-quux', '\\\\\\\\foo\\\\baz', '..\\\\baz'],\n\t\t\t['\\\\\\\\foo\\\\baz', '\\\\\\\\foo\\\\baz-quux', '..\\\\baz-quux'],\n\t\t\t['C:\\\\baz', '\\\\\\\\foo\\\\bar\\\\baz', '\\\\\\\\foo\\\\bar\\\\baz'],\n\t\t\t['\\\\\\\\foo\\\\bar\\\\baz', 'C:\\\\baz', 'C:\\\\baz']\n\t\t\t]\n\t\t\t],\n\t\t\t[path.posix.relative,\n\t\t\t// arguments          result\n\t\t\t[['/var/lib', '/var', '..'],\n\t\t\t['/var/lib', '/bin', '../../bin'],\n\t\t\t['/var/lib', '/var/lib', ''],\n\t\t\t['/var/lib', '/var/apache', '../apache'],\n\t\t\t['/var/', '/var/lib', 'lib'],\n\t\t\t['/', '/var/lib', 'var/lib'],\n\t\t\t['/foo/test', '/foo/test/bar/package.json', 'bar/package.json'],\n\t\t\t['/Users/a/web/b/test/mails', '/Users/a/web/b', '../..'],\n\t\t\t['/foo/bar/baz-quux', '/foo/bar/baz', '../baz'],\n\t\t\t['/foo/bar/baz', '/foo/bar/baz-quux', '../baz-quux'],\n\t\t\t['/baz-quux', '/baz', '../baz'],\n\t\t\t['/baz', '/baz-quux', '../baz-quux']\n\t\t\t]\n\t\t\t]\n\t\t];\n\t\trelativeTests.forEach((test) => {\n\t\t\tconst relative = test[0];\n\t\t\t//@ts-expect-error\n\t\t\ttest[1].forEach((test) => {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tconst actual = relative(test[0], test[1]);\n\t\t\t\tconst expected = test[2];\n\t\t\t\tconst os = relative === path.win32.relative ? 'win32' : 'posix';\n\t\t\t\tconst message = `path.${os}.relative(${test.slice(0, 2).map(JSON.stringify).join(',')})\\n  expect=${JSON.stringify(expected)}\\n  actual=${JSON.stringify(actual)}`;\n\t\t\t\tif (actual !== expected) {\n\t\t\t\t\tfailures.push(`\\n${message}`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tassert.strictEqual(failures.length, 0, failures.join(''));\n\t});\n\n\ttest('normalize', () => {\n\t\tassert.strictEqual(path.win32.normalize('./fixtures///b/../b/c.js'),\n\t\t\t'fixtures\\\\b\\\\c.js');\n\t\tassert.strictEqual(path.win32.normalize('/foo/../../../bar'), '\\\\bar');\n\t\tassert.strictEqual(path.win32.normalize('a//b//../b'), 'a\\\\b');\n\t\tassert.strictEqual(path.win32.normalize('a//b//./c'), 'a\\\\b\\\\c');\n\t\tassert.strictEqual(path.win32.normalize('a//b//.'), 'a\\\\b');\n\t\tassert.strictEqual(path.win32.normalize('//server/share/dir/file.ext'),\n\t\t\t'\\\\\\\\server\\\\share\\\\dir\\\\file.ext');\n\t\tassert.strictEqual(path.win32.normalize('/a/b/c/../../../x/y/z'), '\\\\x\\\\y\\\\z');\n\t\tassert.strictEqual(path.win32.normalize('C:'), 'C:.');\n\t\tassert.strictEqual(path.win32.normalize('C:..\\\\abc'), 'C:..\\\\abc');\n\t\tassert.strictEqual(path.win32.normalize('C:..\\\\..\\\\abc\\\\..\\\\def'),\n\t\t\t'C:..\\\\..\\\\def');\n\t\tassert.strictEqual(path.win32.normalize('C:\\\\.'), 'C:\\\\');\n\t\tassert.strictEqual(path.win32.normalize('file:stream'), 'file:stream');\n\t\tassert.strictEqual(path.win32.normalize('bar\\\\foo..\\\\..\\\\'), 'bar\\\\');\n\t\tassert.strictEqual(path.win32.normalize('bar\\\\foo..\\\\..'), 'bar');\n\t\tassert.strictEqual(path.win32.normalize('bar\\\\foo..\\\\..\\\\baz'), 'bar\\\\baz');\n\t\tassert.strictEqual(path.win32.normalize('bar\\\\foo..\\\\'), 'bar\\\\foo..\\\\');\n\t\tassert.strictEqual(path.win32.normalize('bar\\\\foo..'), 'bar\\\\foo..');\n\t\tassert.strictEqual(path.win32.normalize('..\\\\foo..\\\\..\\\\..\\\\bar'),\n\t\t\t'..\\\\..\\\\bar');\n\t\tassert.strictEqual(path.win32.normalize('..\\\\...\\\\..\\\\.\\\\...\\\\..\\\\..\\\\bar'),\n\t\t\t'..\\\\..\\\\bar');\n\t\tassert.strictEqual(path.win32.normalize('../../../foo/../../../bar'),\n\t\t\t'..\\\\..\\\\..\\\\..\\\\..\\\\bar');\n\t\tassert.strictEqual(path.win32.normalize('../../../foo/../../../bar/../../'),\n\t\t\t'..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\');\n\t\tassert.strictEqual(\n\t\t\tpath.win32.normalize('../foobar/barfoo/foo/../../../bar/../../'),\n\t\t\t'..\\\\..\\\\'\n\t\t);\n\t\tassert.strictEqual(\n\t\t\tpath.win32.normalize('../.../../foobar/../../../bar/../../baz'),\n\t\t\t'..\\\\..\\\\..\\\\..\\\\baz'\n\t\t);\n\t\tassert.strictEqual(path.win32.normalize('foo/bar\\\\baz'), 'foo\\\\bar\\\\baz');\n\n\t\tassert.strictEqual(path.posix.normalize('./fixtures///b/../b/c.js'),\n\t\t\t'fixtures/b/c.js');\n\t\tassert.strictEqual(path.posix.normalize('/foo/../../../bar'), '/bar');\n\t\tassert.strictEqual(path.posix.normalize('a//b//../b'), 'a/b');\n\t\tassert.strictEqual(path.posix.normalize('a//b//./c'), 'a/b/c');\n\t\tassert.strictEqual(path.posix.normalize('a//b//.'), 'a/b');\n\t\tassert.strictEqual(path.posix.normalize('/a/b/c/../../../x/y/z'), '/x/y/z');\n\t\tassert.strictEqual(path.posix.normalize('///..//./foo/.//bar'), '/foo/bar');\n\t\tassert.strictEqual(path.posix.normalize('bar/foo../../'), 'bar/');\n\t\tassert.strictEqual(path.posix.normalize('bar/foo../..'), 'bar');\n\t\tassert.strictEqual(path.posix.normalize('bar/foo../../baz'), 'bar/baz');\n\t\tassert.strictEqual(path.posix.normalize('bar/foo../'), 'bar/foo../');\n\t\tassert.strictEqual(path.posix.normalize('bar/foo..'), 'bar/foo..');\n\t\tassert.strictEqual(path.posix.normalize('../foo../../../bar'), '../../bar');\n\t\tassert.strictEqual(path.posix.normalize('../.../.././.../../../bar'),\n\t\t\t'../../bar');\n\t\tassert.strictEqual(path.posix.normalize('../../../foo/../../../bar'),\n\t\t\t'../../../../../bar');\n\t\tassert.strictEqual(path.posix.normalize('../../../foo/../../../bar/../../'),\n\t\t\t'../../../../../../');\n\t\tassert.strictEqual(\n\t\t\tpath.posix.normalize('../foobar/barfoo/foo/../../../bar/../../'),\n\t\t\t'../../'\n\t\t);\n\t\tassert.strictEqual(\n\t\t\tpath.posix.normalize('../.../../foobar/../../../bar/../../baz'),\n\t\t\t'../../../../baz'\n\t\t);\n\t\tassert.strictEqual(path.posix.normalize('foo/bar\\\\baz'), 'foo/bar\\\\baz');\n\t});\n\n\ttest('isAbsolute', () => {\n\t\tassert.strictEqual(path.win32.isAbsolute('/'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('//'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('//server'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('//server/file'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('\\\\\\\\server\\\\file'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('\\\\\\\\server'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('\\\\\\\\'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('c'), false);\n\t\tassert.strictEqual(path.win32.isAbsolute('c:'), false);\n\t\tassert.strictEqual(path.win32.isAbsolute('c:\\\\'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('c:/'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('c://'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('C:/Users/'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('C:\\\\Users\\\\'), true);\n\t\tassert.strictEqual(path.win32.isAbsolute('C:cwd/another'), false);\n\t\tassert.strictEqual(path.win32.isAbsolute('C:cwd\\\\another'), false);\n\t\tassert.strictEqual(path.win32.isAbsolute('directory/directory'), false);\n\t\tassert.strictEqual(path.win32.isAbsolute('directory\\\\directory'), false);\n\n\t\tassert.strictEqual(path.posix.isAbsolute('/home/foo'), true);\n\t\tassert.strictEqual(path.posix.isAbsolute('/home/foo/..'), true);\n\t\tassert.strictEqual(path.posix.isAbsolute('bar/'), false);\n\t\tassert.strictEqual(path.posix.isAbsolute('./baz'), false);\n\n\t\t// Tests from VSCode:\n\n\t\t// Absolute Paths\n\t\t[\n\t\t\t'C:/',\n\t\t\t'C:\\\\',\n\t\t\t'C:/foo',\n\t\t\t'C:\\\\foo',\n\t\t\t'z:/foo/bar.txt',\n\t\t\t'z:\\\\foo\\\\bar.txt',\n\n\t\t\t'\\\\\\\\localhost\\\\c$\\\\foo',\n\n\t\t\t'/',\n\t\t\t'/foo'\n\t\t].forEach(absolutePath => {\n\t\t\tassert.ok(path.win32.isAbsolute(absolutePath), absolutePath);\n\t\t});\n\n\t\t[\n\t\t\t'/',\n\t\t\t'/foo',\n\t\t\t'/foo/bar.txt'\n\t\t].forEach(absolutePath => {\n\t\t\tassert.ok(path.posix.isAbsolute(absolutePath), absolutePath);\n\t\t});\n\n\t\t// Relative Paths\n\t\t[\n\t\t\t'',\n\t\t\t'foo',\n\t\t\t'foo/bar',\n\t\t\t'./foo',\n\t\t\t'http://foo.com/bar'\n\t\t].forEach(nonAbsolutePath => {\n\t\t\tassert.ok(!path.win32.isAbsolute(nonAbsolutePath), nonAbsolutePath);\n\t\t});\n\n\t\t[\n\t\t\t'',\n\t\t\t'foo',\n\t\t\t'foo/bar',\n\t\t\t'./foo',\n\t\t\t'http://foo.com/bar',\n\t\t\t'z:/foo/bar.txt',\n\t\t].forEach(nonAbsolutePath => {\n\t\t\tassert.ok(!path.posix.isAbsolute(nonAbsolutePath), nonAbsolutePath);\n\t\t});\n\t});\n\n\ttest('path', () => {\n\t\t// path.sep tests\n\t\t// windows\n\t\tassert.strictEqual(path.win32.sep, '\\\\');\n\t\t// posix\n\t\tassert.strictEqual(path.posix.sep, '/');\n\n\t\t// path.delimiter tests\n\t\t// windows\n\t\tassert.strictEqual(path.win32.delimiter, ';');\n\t\t// posix\n\t\tassert.strictEqual(path.posix.delimiter, ':');\n\n\t\t// if (isWindows) {\n\t\t// \tassert.strictEqual(path, path.win32);\n\t\t// } else {\n\t\t// \tassert.strictEqual(path, path.posix);\n\t\t// }\n\t});\n\n\t// test('perf', () => {\n\t// \tconst folderNames = [\n\t// \t\t'abc',\n\t// \t\t'Users',\n\t// \t\t'reallylongfoldername',\n\t// \t\t's',\n\t// \t\t'reallyreallyreallylongfoldername',\n\t// \t\t'home'\n\t// \t];\n\n\t// \tconst basePaths = [\n\t// \t\t'C:',\n\t// \t\t'',\n\t// \t];\n\n\t// \tconst separators = [\n\t// \t\t'\\\\',\n\t// \t\t'/'\n\t// \t];\n\n\t// \tfunction randomInt(ciel: number): number {\n\t// \t\treturn Math.floor(Math.random() * ciel);\n\t// \t}\n\n\t// \tlet pathsToNormalize = [];\n\t// \tlet pathsToJoin = [];\n\t// \tlet i;\n\t// \tfor (i = 0; i < 1000000; i++) {\n\t// \t\tconst basePath = basePaths[randomInt(basePaths.length)];\n\t// \t\tlet lengthOfPath = randomInt(10) + 2;\n\n\t// \t\tlet pathToNormalize = basePath + separators[randomInt(separators.length)];\n\t// \t\twhile (lengthOfPath-- > 0) {\n\t// \t\t\tpathToNormalize = pathToNormalize + folderNames[randomInt(folderNames.length)] + separators[randomInt(separators.length)];\n\t// \t\t}\n\n\t// \t\tpathsToNormalize.push(pathToNormalize);\n\n\t// \t\tlet pathToJoin = '';\n\t// \t\tlengthOfPath = randomInt(10) + 2;\n\t// \t\twhile (lengthOfPath-- > 0) {\n\t// \t\t\tpathToJoin = pathToJoin + folderNames[randomInt(folderNames.length)] + separators[randomInt(separators.length)];\n\t// \t\t}\n\n\t// \t\tpathsToJoin.push(pathToJoin + '.ts');\n\t// \t}\n\n\t// \tlet newTime = 0;\n\n\t// \tlet j;\n\t// \tfor(j = 0; j < pathsToJoin.length; j++) {\n\t// \t\tconst path1 = pathsToNormalize[j];\n\t// \t\tconst path2 = pathsToNormalize[j];\n\n\t// \t\tconst newStart = performance.now();\n\t// \t\tpath.join(path1, path2);\n\t// \t\tnewTime += performance.now() - newStart;\n\t// \t}\n\n\t// \tassert.ok(false, `Time: ${newTime}ms.`);\n\t// });\n});\n"]}