{"version":3,"file":"utils.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/utils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,SAAgB,UAAU,CAAY,IAAY;QACjD,IAAI,oBAAS,EAAE;YACd,OAAO,SAAG,CAAC,IAAI,CAAC,CAAA,GAAA,WAAI,CAAA,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;SACjE;QAED,OAAO,SAAG,CAAC,IAAI,CAAC,CAAA,GAAA,WAAI,CAAA,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IAND,gCAMC;IAED,SAAgB,WAAW,CAAC,CAAS,EAAE,WAAmB,EAAE,QAA6B;QACxF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,KAAK,CAAC,GAAG,WAAW,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SACnD;IACF,CAAC;IAJD,kCAIC;IAED,SAAgB,UAAU,CAAC,CAAS,EAAE,WAAmB,EAAE,QAA4B;QACtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,GAAG,WAAW,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAClD;IACF,CAAC;IAJD,gCAIC;IAEM,KAAK,UAAU,iBAAiB,CAAC,KAAgB,EAAE,UAA0B,4BAA4B;QAC/G,IAAI;YACH,MAAM,KAAK,EAAE,CAAC;SACd;QAAC,WAAM;YACP,OAAO;SACP;QAED,MAAM,GAAG,GAAG,OAAO,YAAY,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;QACpE,MAAM,GAAG,CAAC;IACX,CAAC;IATD,8CASC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { isWindows } from 'vs/base/common/platform';\n\nexport type ValueCallback<T = any> = (value: T | Promise<T>) => void;\n\nexport function toResource(this: any, path: string) {\n\tif (isWindows) {\n\t\treturn URI.file(join('C:\\\\', btoa(this.test.fullTitle()), path));\n\t}\n\n\treturn URI.file(join('/', btoa(this.test.fullTitle()), path));\n}\n\nexport function suiteRepeat(n: number, description: string, callback: (this: any) => void): void {\n\tfor (let i = 0; i < n; i++) {\n\t\tsuite(`${description} (iteration ${i})`, callback);\n\t}\n}\n\nexport function testRepeat(n: number, description: string, callback: (this: any) => any): void {\n\tfor (let i = 0; i < n; i++) {\n\t\ttest(`${description} (iteration ${i})`, callback);\n\t}\n}\n\nexport async function assertThrowsAsync(block: () => any, message: string | Error = 'Missing expected exception'): Promise<void> {\n\ttry {\n\t\tawait block();\n\t} catch {\n\t\treturn;\n\t}\n\n\tconst err = message instanceof Error ? message : new Error(message);\n\tthrow err;\n}\n"]}