{"version":3,"file":"resourceTree.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/resourceTree.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ResourceTree } from 'vs/base/common/resourceTree';\nimport { URI } from 'vs/base/common/uri';\n\nsuite('ResourceTree', function () {\n\ttest('ctor', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\t});\n\n\ttest('simple', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\n\t\ttree.add(URI.file('/foo/bar.txt'), 'bar contents');\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\n\t\tlet foo = tree.root.get('foo')!;\n\t\tassert(foo);\n\t\tassert.strictEqual(foo.childrenCount, 1);\n\n\t\tlet bar = foo.get('bar.txt')!;\n\t\tassert(bar);\n\t\tassert.strictEqual(bar.element, 'bar contents');\n\n\t\ttree.add(URI.file('/hello.txt'), 'hello contents');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\n\t\tlet hello = tree.root.get('hello.txt')!;\n\t\tassert(hello);\n\t\tassert.strictEqual(hello.element, 'hello contents');\n\n\t\ttree.delete(URI.file('/foo/bar.txt'));\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\thello = tree.root.get('hello.txt')!;\n\t\tassert(hello);\n\t\tassert.strictEqual(hello.element, 'hello contents');\n\t});\n\n\ttest('folders with data', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\n\t\ttree.add(URI.file('/foo'), 'foo');\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\tassert.strictEqual(tree.root.get('foo')!.element, 'foo');\n\n\t\ttree.add(URI.file('/bar'), 'bar');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\n\t\ttree.add(URI.file('/foo/file.txt'), 'file');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\t\tassert.strictEqual(tree.root.get('foo')!.element, 'foo');\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\t\tassert.strictEqual(tree.root.get('foo')!.get('file.txt')!.element, 'file');\n\n\t\ttree.delete(URI.file('/foo'));\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\tassert(!tree.root.get('foo'));\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\n\t\ttree.delete(URI.file('/bar'));\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\t\tassert(!tree.root.get('foo'));\n\t\tassert(!tree.root.get('bar'));\n\t});\n});\n"]}