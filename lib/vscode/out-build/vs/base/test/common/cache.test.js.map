{"version":3,"file":"cache.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/cache.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Cache } from 'vs/base/common/cache';\nimport { timeout } from 'vs/base/common/async';\n\nsuite('Cache', () => {\n\n\ttest('simple value', () => {\n\t\tlet counter = 0;\n\t\tconst cache = new Cache(_ => Promise.resolve(counter++));\n\n\t\treturn cache.get().promise\n\t\t\t.then(c => assert.strictEqual(c, 0), () => assert.fail('Unexpected assertion error'))\n\t\t\t.then(() => cache.get().promise)\n\t\t\t.then(c => assert.strictEqual(c, 0), () => assert.fail('Unexpected assertion error'));\n\t});\n\n\ttest('simple error', () => {\n\t\tlet counter = 0;\n\t\tconst cache = new Cache(_ => Promise.reject(new Error(String(counter++))));\n\n\t\treturn cache.get().promise\n\t\t\t.then(() => assert.fail('Unexpected assertion error'), err => assert.strictEqual(err.message, '0'))\n\t\t\t.then(() => cache.get().promise)\n\t\t\t.then(() => assert.fail('Unexpected assertion error'), err => assert.strictEqual(err.message, '0'));\n\t});\n\n\ttest('should retry cancellations', () => {\n\t\tlet counter1 = 0, counter2 = 0;\n\n\t\tconst cache = new Cache(token => {\n\t\t\tcounter1++;\n\t\t\treturn Promise.resolve(timeout(2, token).then(() => counter2++));\n\t\t});\n\n\t\tassert.strictEqual(counter1, 0);\n\t\tassert.strictEqual(counter2, 0);\n\t\tlet result = cache.get();\n\t\tassert.strictEqual(counter1, 1);\n\t\tassert.strictEqual(counter2, 0);\n\t\tresult.promise.then(undefined, () => assert(true));\n\t\tresult.dispose();\n\t\tassert.strictEqual(counter1, 1);\n\t\tassert.strictEqual(counter2, 0);\n\n\t\tresult = cache.get();\n\t\tassert.strictEqual(counter1, 2);\n\t\tassert.strictEqual(counter2, 0);\n\n\t\treturn result.promise\n\t\t\t.then(c => {\n\t\t\t\tassert.strictEqual(counter1, 2);\n\t\t\t\tassert.strictEqual(counter2, 1);\n\t\t\t})\n\t\t\t.then(() => cache.get().promise)\n\t\t\t.then(c => {\n\t\t\t\tassert.strictEqual(counter1, 2);\n\t\t\t\tassert.strictEqual(counter2, 1);\n\t\t\t});\n\t});\n});\n"]}