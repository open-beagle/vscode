{"version":3,"file":"jsonFormatter.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/jsonFormatter.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Formatter from 'vs/base/common/jsonFormatter';\nimport * as assert from 'assert';\n\nsuite('JSON - formatter', () => {\n\n\tfunction format(content: string, expected: string, insertSpaces = true) {\n\t\tlet range: Formatter.Range | undefined = undefined;\n\t\tconst rangeStart = content.indexOf('|');\n\t\tconst rangeEnd = content.lastIndexOf('|');\n\t\tif (rangeStart !== -1 && rangeEnd !== -1) {\n\t\t\tcontent = content.substring(0, rangeStart) + content.substring(rangeStart + 1, rangeEnd) + content.substring(rangeEnd + 1);\n\t\t\trange = { offset: rangeStart, length: rangeEnd - rangeStart };\n\t\t}\n\n\t\tconst edits = Formatter.format(content, range, { tabSize: 2, insertSpaces: insertSpaces, eol: '\\n' });\n\n\t\tlet lastEditOffset = content.length;\n\t\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\t\tlet edit = edits[i];\n\t\t\tassert(edit.offset >= 0 && edit.length >= 0 && edit.offset + edit.length <= content.length);\n\t\t\tassert(typeof edit.content === 'string');\n\t\t\tassert(lastEditOffset >= edit.offset + edit.length); // make sure all edits are ordered\n\t\t\tlastEditOffset = edit.offset;\n\t\t\tcontent = content.substring(0, edit.offset) + edit.content + content.substring(edit.offset + edit.length);\n\t\t}\n\n\t\tassert.strictEqual(content, expected);\n\t}\n\n\ttest('object - single property', () => {\n\t\tconst content = [\n\t\t\t'{\"x\" : 1}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"x\": 1',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('object - multiple properties', () => {\n\t\tconst content = [\n\t\t\t'{\"x\" : 1,  \"y\" : \"foo\", \"z\"  : true}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"x\": 1,',\n\t\t\t'  \"y\": \"foo\",',\n\t\t\t'  \"z\": true',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('object - no properties ', () => {\n\t\tconst content = [\n\t\t\t'{\"x\" : {    },  \"y\" : {}}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"x\": {},',\n\t\t\t'  \"y\": {}',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('object - nesting', () => {\n\t\tconst content = [\n\t\t\t'{\"x\" : {  \"y\" : { \"z\"  : { }}, \"a\": true}}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"x\": {',\n\t\t\t'    \"y\": {',\n\t\t\t'      \"z\": {}',\n\t\t\t'    },',\n\t\t\t'    \"a\": true',\n\t\t\t'  }',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('array - single items', () => {\n\t\tconst content = [\n\t\t\t'[\"[]\"]'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  \"[]\"',\n\t\t\t']'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('array - multiple items', () => {\n\t\tconst content = [\n\t\t\t'[true,null,1.2]'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  true,',\n\t\t\t'  null,',\n\t\t\t'  1.2',\n\t\t\t']'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('array - no items', () => {\n\t\tconst content = [\n\t\t\t'[      ]'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[]'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('array - nesting', () => {\n\t\tconst content = [\n\t\t\t'[ [], [ [ {} ], \"a\" ]  ]'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  [],',\n\t\t\t'  [',\n\t\t\t'    [',\n\t\t\t'      {}',\n\t\t\t'    ],',\n\t\t\t'    \"a\"',\n\t\t\t'  ]',\n\t\t\t']',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('syntax errors', () => {\n\t\tconst content = [\n\t\t\t'[ null 1.2 ]'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  null 1.2',\n\t\t\t']',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('empty lines', () => {\n\t\tconst content = [\n\t\t\t'{',\n\t\t\t'\"a\": true,',\n\t\t\t'',\n\t\t\t'\"b\": true',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'\\t\"a\": true,',\n\t\t\t'\\t\"b\": true',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected, false);\n\t});\n\ttest('single line comment', () => {\n\t\tconst content = [\n\t\t\t'[ ',\n\t\t\t'//comment',\n\t\t\t'\"foo\", \"bar\"',\n\t\t\t'] '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  //comment',\n\t\t\t'  \"foo\",',\n\t\t\t'  \"bar\"',\n\t\t\t']',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('block line comment', () => {\n\t\tconst content = [\n\t\t\t'[{',\n\t\t\t'        /*comment*/     ',\n\t\t\t'\"foo\" : true',\n\t\t\t'}] '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[',\n\t\t\t'  {',\n\t\t\t'    /*comment*/',\n\t\t\t'    \"foo\": true',\n\t\t\t'  }',\n\t\t\t']',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('single line comment on same line', () => {\n\t\tconst content = [\n\t\t\t' {  ',\n\t\t\t'        \"a\": {}// comment    ',\n\t\t\t' } '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"a\": {} // comment    ',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('single line comment on same line 2', () => {\n\t\tconst content = [\n\t\t\t'{ //comment',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{ //comment',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('block comment on same line', () => {\n\t\tconst content = [\n\t\t\t'{      \"a\": {}, /*comment*/    ',\n\t\t\t'        /*comment*/ \"b\": {},    ',\n\t\t\t'        \"c\": {/*comment*/}    } ',\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"a\": {}, /*comment*/',\n\t\t\t'  /*comment*/ \"b\": {},',\n\t\t\t'  \"c\": { /*comment*/}',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('block comment on same line advanced', () => {\n\t\tconst content = [\n\t\t\t' {       \"d\": [',\n\t\t\t'             null',\n\t\t\t'        ] /*comment*/',\n\t\t\t'        ,\"e\": /*comment*/ [null] }',\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"d\": [',\n\t\t\t'    null',\n\t\t\t'  ] /*comment*/,',\n\t\t\t'  \"e\": /*comment*/ [',\n\t\t\t'    null',\n\t\t\t'  ]',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('multiple block comments on same line', () => {\n\t\tconst content = [\n\t\t\t'{      \"a\": {} /*comment*/, /*comment*/   ',\n\t\t\t'        /*comment*/ \"b\": {}  /*comment*/  } '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"a\": {} /*comment*/, /*comment*/',\n\t\t\t'  /*comment*/ \"b\": {} /*comment*/',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('multiple mixed comments on same line', () => {\n\t\tconst content = [\n\t\t\t'[ /*comment*/  /*comment*/   // comment ',\n\t\t\t']'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'[ /*comment*/ /*comment*/ // comment ',\n\t\t\t']'\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('range', () => {\n\t\tconst content = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'|\"b\": [null, null]|',\n\t\t\t'} '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'\"b\": [',\n\t\t\t'  null,',\n\t\t\t'  null',\n\t\t\t']',\n\t\t\t'} ',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('range with existing indent', () => {\n\t\tconst content = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'   |\"b\": [null],',\n\t\t\t'\"c\": {}',\n\t\t\t'}|'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'   \"b\": [',\n\t\t\t'    null',\n\t\t\t'  ],',\n\t\t\t'  \"c\": {}',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\n\ttest('range with existing indent - tabs', () => {\n\t\tconst content = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'|  \"b\": [null],   ',\n\t\t\t'\"c\": {}',\n\t\t\t'} |    '\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{ \"a\": {},',\n\t\t\t'\\t\"b\": [',\n\t\t\t'\\t\\tnull',\n\t\t\t'\\t],',\n\t\t\t'\\t\"c\": {}',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected, false);\n\t});\n\n\n\ttest('block comment none-line breaking symbols', () => {\n\t\tconst content = [\n\t\t\t'{ \"a\": [ 1',\n\t\t\t'/* comment */',\n\t\t\t', 2',\n\t\t\t'/* comment */',\n\t\t\t']',\n\t\t\t'/* comment */',\n\t\t\t',',\n\t\t\t' \"b\": true',\n\t\t\t'/* comment */',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"a\": [',\n\t\t\t'    1',\n\t\t\t'    /* comment */',\n\t\t\t'    ,',\n\t\t\t'    2',\n\t\t\t'    /* comment */',\n\t\t\t'  ]',\n\t\t\t'  /* comment */',\n\t\t\t'  ,',\n\t\t\t'  \"b\": true',\n\t\t\t'  /* comment */',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n\ttest('line comment after none-line breaking symbols', () => {\n\t\tconst content = [\n\t\t\t'{ \"a\":',\n\t\t\t'// comment',\n\t\t\t'null,',\n\t\t\t' \"b\"',\n\t\t\t'// comment',\n\t\t\t': null',\n\t\t\t'// comment',\n\t\t\t'}'\n\t\t].join('\\n');\n\n\t\tconst expected = [\n\t\t\t'{',\n\t\t\t'  \"a\":',\n\t\t\t'  // comment',\n\t\t\t'  null,',\n\t\t\t'  \"b\"',\n\t\t\t'  // comment',\n\t\t\t'  : null',\n\t\t\t'  // comment',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\tformat(content, expected);\n\t});\n});\n"]}