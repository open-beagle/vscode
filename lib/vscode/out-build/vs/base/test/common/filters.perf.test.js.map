{"version":3,"file":"filters.perf.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/filters.perf.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as filters from 'vs/base/common/filters';\nimport { data } from 'vs/base/test/common/filters.perf.data';\n\nconst patterns = ['cci', 'ida', 'pos', 'CCI', 'enbled', 'callback', 'gGame', 'cons', 'zyx', 'aBc'];\n\nconst _enablePerf = false;\n\nfunction perfSuite(name: string, callback: (this: Mocha.Suite) => void) {\n\tif (_enablePerf) {\n\t\tsuite(name, callback);\n\t}\n}\n\nperfSuite('Performance - fuzzyMatch', function () {\n\n\t// suiteSetup(() => console.profile());\n\t// suiteTeardown(() => console.profileEnd());\n\n\tconsole.log(`Matching ${data.length} items against ${patterns.length} patterns (${data.length * patterns.length} operations) `);\n\n\tfunction perfTest(name: string, match: filters.FuzzyScorer) {\n\t\ttest(name, () => {\n\n\t\t\tconst t1 = Date.now();\n\t\t\tlet count = 0;\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tfor (const pattern of patterns) {\n\t\t\t\t\tconst patternLow = pattern.toLowerCase();\n\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\tmatch(pattern, patternLow, 0, item, item.toLowerCase(), 0, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst d = Date.now() - t1;\n\t\t\tconsole.log(name, `${d}ms, ${Math.round(count / d) * 15}/15ms, ${Math.round(count / d)}/1ms`);\n\t\t});\n\t}\n\n\tperfTest('fuzzyScore', filters.fuzzyScore);\n\tperfTest('fuzzyScoreGraceful', filters.fuzzyScoreGraceful);\n\tperfTest('fuzzyScoreGracefulAggressive', filters.fuzzyScoreGracefulAggressive);\n});\n\n\nperfSuite('Performance - IFilter', function () {\n\n\tfunction perfTest(name: string, match: filters.IFilter) {\n\t\ttest(name, () => {\n\n\t\t\tconst t1 = Date.now();\n\t\t\tlet count = 0;\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tfor (const pattern of patterns) {\n\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\tmatch(pattern, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst d = Date.now() - t1;\n\t\t\tconsole.log(name, `${d}ms, ${Math.round(count / d) * 15}/15ms, ${Math.round(count / d)}/1ms`);\n\t\t});\n\t}\n\n\tperfTest('matchesFuzzy', filters.matchesFuzzy);\n\tperfTest('matchesFuzzy2', filters.matchesFuzzy2);\n\tperfTest('matchesPrefix', filters.matchesPrefix);\n\tperfTest('matchesContiguousSubString', filters.matchesContiguousSubString);\n\tperfTest('matchesCamelCase', filters.matchesCamelCase);\n});\n"]}