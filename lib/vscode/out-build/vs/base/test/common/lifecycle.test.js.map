{"version":3,"file":"lifecycle.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/test/common/lifecycle.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore, dispose, IDisposable, MultiDisposeError, ReferenceCollection, toDisposable } from 'vs/base/common/lifecycle';\n\nclass Disposable implements IDisposable {\n\tisDisposed = false;\n\tdispose() { this.isDisposed = true; }\n}\n\nsuite('Lifecycle', () => {\n\n\ttest('dispose single disposable', () => {\n\t\tconst disposable = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\n\t\tdispose(disposable);\n\n\t\tassert(disposable.isDisposed);\n\t});\n\n\ttest('dispose disposable array', () => {\n\t\tconst disposable = new Disposable();\n\t\tconst disposable2 = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\t\tassert(!disposable2.isDisposed);\n\n\t\tdispose([disposable, disposable2]);\n\n\t\tassert(disposable.isDisposed);\n\t\tassert(disposable2.isDisposed);\n\t});\n\n\ttest('dispose disposables', () => {\n\t\tconst disposable = new Disposable();\n\t\tconst disposable2 = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\t\tassert(!disposable2.isDisposed);\n\n\t\tdispose(disposable);\n\t\tdispose(disposable2);\n\n\t\tassert(disposable.isDisposed);\n\t\tassert(disposable2.isDisposed);\n\t});\n\n\ttest('dispose array should dispose all if a child throws on dispose', () => {\n\t\tconst disposedValues = new Set<number>();\n\n\t\tlet thrownError: any;\n\t\ttry {\n\t\t\tdispose([\n\t\t\t\ttoDisposable(() => { disposedValues.add(1); }),\n\t\t\t\ttoDisposable(() => { throw new Error('I am error'); }),\n\t\t\t\ttoDisposable(() => { disposedValues.add(3); }),\n\t\t\t]);\n\t\t} catch (e) {\n\t\t\tthrownError = e;\n\t\t}\n\n\t\tassert.ok(disposedValues.has(1));\n\t\tassert.ok(disposedValues.has(3));\n\t\tassert.strictEqual(thrownError.message, 'I am error');\n\t});\n\n\ttest('dispose array should rethrow composite error if multiple entries throw on dispose', () => {\n\t\tconst disposedValues = new Set<number>();\n\n\t\tlet thrownError: any;\n\t\ttry {\n\t\t\tdispose([\n\t\t\t\ttoDisposable(() => { disposedValues.add(1); }),\n\t\t\t\ttoDisposable(() => { throw new Error('I am error 1'); }),\n\t\t\t\ttoDisposable(() => { throw new Error('I am error 2'); }),\n\t\t\t\ttoDisposable(() => { disposedValues.add(4); }),\n\t\t\t]);\n\t\t} catch (e) {\n\t\t\tthrownError = e;\n\t\t}\n\n\t\tassert.ok(disposedValues.has(1));\n\t\tassert.ok(disposedValues.has(4));\n\t\tassert.ok(thrownError instanceof MultiDisposeError);\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors.length, 2);\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors[0].message, 'I am error 1');\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors[1].message, 'I am error 2');\n\t});\n\n\ttest('Action bar has broken accessibility #100273', function () {\n\t\tlet array = [{ dispose() { } }, { dispose() { } }];\n\t\tlet array2 = dispose(array);\n\n\t\tassert.strictEqual(array.length, 2);\n\t\tassert.strictEqual(array2.length, 0);\n\t\tassert.ok(array !== array2);\n\n\t\tlet set = new Set<IDisposable>([{ dispose() { } }, { dispose() { } }]);\n\t\tlet setValues = set.values();\n\t\tlet setValues2 = dispose(setValues);\n\t\tassert.ok(setValues === setValues2);\n\t});\n});\n\nsuite('DisposableStore', () => {\n\ttest('dispose should call all child disposes even if a child throws on dispose', () => {\n\t\tconst disposedValues = new Set<number>();\n\n\t\tconst store = new DisposableStore();\n\t\tstore.add(toDisposable(() => { disposedValues.add(1); }));\n\t\tstore.add(toDisposable(() => { throw new Error('I am error'); }));\n\t\tstore.add(toDisposable(() => { disposedValues.add(3); }));\n\n\t\tlet thrownError: any;\n\t\ttry {\n\t\t\tstore.dispose();\n\t\t} catch (e) {\n\t\t\tthrownError = e;\n\t\t}\n\n\t\tassert.ok(disposedValues.has(1));\n\t\tassert.ok(disposedValues.has(3));\n\t\tassert.strictEqual(thrownError.message, 'I am error');\n\t});\n\n\ttest('dispose should throw composite error if multiple children throw on dispose', () => {\n\t\tconst disposedValues = new Set<number>();\n\n\t\tconst store = new DisposableStore();\n\t\tstore.add(toDisposable(() => { disposedValues.add(1); }));\n\t\tstore.add(toDisposable(() => { throw new Error('I am error 1'); }));\n\t\tstore.add(toDisposable(() => { throw new Error('I am error 2'); }));\n\t\tstore.add(toDisposable(() => { disposedValues.add(4); }));\n\n\t\tlet thrownError: any;\n\t\ttry {\n\t\t\tstore.dispose();\n\t\t} catch (e) {\n\t\t\tthrownError = e;\n\t\t}\n\n\t\tassert.ok(disposedValues.has(1));\n\t\tassert.ok(disposedValues.has(4));\n\t\tassert.ok(thrownError instanceof MultiDisposeError);\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors.length, 2);\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors[0].message, 'I am error 1');\n\t\tassert.strictEqual((thrownError as MultiDisposeError).errors[1].message, 'I am error 2');\n\t});\n});\n\nsuite('Reference Collection', () => {\n\tclass Collection extends ReferenceCollection<number> {\n\t\tprivate _count = 0;\n\t\tget count() { return this._count; }\n\t\tprotected createReferencedObject(key: string): number { this._count++; return key.length; }\n\t\tprotected destroyReferencedObject(key: string, object: number): void { this._count--; }\n\t}\n\n\ttest('simple', () => {\n\t\tconst collection = new Collection();\n\n\t\tconst ref1 = collection.acquire('test');\n\t\tassert(ref1);\n\t\tassert.strictEqual(ref1.object, 4);\n\t\tassert.strictEqual(collection.count, 1);\n\t\tref1.dispose();\n\t\tassert.strictEqual(collection.count, 0);\n\n\t\tconst ref2 = collection.acquire('test');\n\t\tconst ref3 = collection.acquire('test');\n\t\tassert.strictEqual(ref2.object, ref3.object);\n\t\tassert.strictEqual(collection.count, 1);\n\n\t\tconst ref4 = collection.acquire('monkey');\n\t\tassert.strictEqual(ref4.object, 6);\n\t\tassert.strictEqual(collection.count, 2);\n\n\t\tref2.dispose();\n\t\tassert.strictEqual(collection.count, 2);\n\n\t\tref3.dispose();\n\t\tassert.strictEqual(collection.count, 1);\n\n\t\tref4.dispose();\n\t\tassert.strictEqual(collection.count, 0);\n\t});\n});\n"]}