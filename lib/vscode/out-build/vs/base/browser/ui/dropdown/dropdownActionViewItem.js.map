{"version":3,"file":"dropdownActionViewItem.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/ui/dropdown/dropdownActionViewItem.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./dropdown';\nimport { Action, IAction, IActionRunner } from 'vs/base/common/actions';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { KeyCode, ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { append, $, addDisposableListener, EventType } from 'vs/base/browser/dom';\nimport { Emitter } from 'vs/base/common/event';\nimport { ActionViewItem, BaseActionViewItem, IActionViewItemOptions, IBaseActionViewItemOptions } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { IActionProvider, DropdownMenu, IDropdownMenuOptions, ILabelRenderer } from 'vs/base/browser/ui/dropdown/dropdown';\nimport { IContextMenuProvider } from 'vs/base/browser/contextmenu';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\n\nexport interface IKeybindingProvider {\n\t(action: IAction): ResolvedKeybinding | undefined;\n}\n\nexport interface IAnchorAlignmentProvider {\n\t(): AnchorAlignment;\n}\n\nexport interface IDropdownMenuActionViewItemOptions extends IBaseActionViewItemOptions {\n\treadonly actionViewItemProvider?: IActionViewItemProvider;\n\treadonly keybindingProvider?: IKeybindingProvider;\n\treadonly actionRunner?: IActionRunner;\n\treadonly classNames?: string[] | string;\n\treadonly anchorAlignmentProvider?: IAnchorAlignmentProvider;\n\treadonly menuAsChild?: boolean;\n}\n\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\n\tprivate menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\tprivate dropdownMenu: DropdownMenu | undefined;\n\tprivate contextMenuProvider: IContextMenuProvider;\n\tprivate actionItem: HTMLElement | null = null;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprotected override readonly options: IDropdownMenuActionViewItemOptions;\n\n\tconstructor(\n\t\taction: IAction,\n\t\tmenuActionsOrProvider: readonly IAction[] | IActionProvider,\n\t\tcontextMenuProvider: IContextMenuProvider,\n\t\toptions: IDropdownMenuActionViewItemOptions = Object.create(null)\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis.menuActionsOrProvider = menuActionsOrProvider;\n\t\tthis.contextMenuProvider = contextMenuProvider;\n\t\tthis.options = options;\n\n\t\tif (this.options.actionRunner) {\n\t\t\tthis.actionRunner = this.options.actionRunner;\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.actionItem = container;\n\n\t\tconst labelRenderer: ILabelRenderer = (el: HTMLElement): IDisposable | null => {\n\t\t\tthis.element = append(el, $('a.action-label'));\n\n\t\t\tlet classNames: string[] = [];\n\n\t\t\tif (typeof this.options.classNames === 'string') {\n\t\t\t\tclassNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\n\t\t\t} else if (this.options.classNames) {\n\t\t\t\tclassNames = this.options.classNames;\n\t\t\t}\n\n\t\t\t// todo@aeschli: remove codicon, should come through `this.options.classNames`\n\t\t\tif (!classNames.find(c => c === 'icon')) {\n\t\t\t\tclassNames.push('codicon');\n\t\t\t}\n\n\t\t\tthis.element.classList.add(...classNames);\n\n\t\t\tthis.element.setAttribute('role', 'button');\n\t\t\tthis.element.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.element.setAttribute('aria-expanded', 'false');\n\t\t\tthis.element.title = this._action.label || '';\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst isActionsArray = Array.isArray(this.menuActionsOrProvider);\n\t\tconst options: IDropdownMenuOptions = {\n\t\t\tcontextMenuProvider: this.contextMenuProvider,\n\t\t\tlabelRenderer: labelRenderer,\n\t\t\tmenuAsChild: this.options.menuAsChild,\n\t\t\tactions: isActionsArray ? this.menuActionsOrProvider as IAction[] : undefined,\n\t\t\tactionProvider: isActionsArray ? undefined : this.menuActionsOrProvider as IActionProvider\n\t\t};\n\n\t\tthis.dropdownMenu = this._register(new DropdownMenu(container, options));\n\t\tthis._register(this.dropdownMenu.onDidChangeVisibility(visible => {\n\t\t\tthis.element?.setAttribute('aria-expanded', `${visible}`);\n\t\t\tthis._onDidChangeVisibility.fire(visible);\n\t\t}));\n\n\t\tthis.dropdownMenu.menuOptions = {\n\t\t\tactionViewItemProvider: this.options.actionViewItemProvider,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeyBinding: this.options.keybindingProvider,\n\t\t\tcontext: this._context\n\t\t};\n\n\t\tif (this.options.anchorAlignmentProvider) {\n\t\t\tconst that = this;\n\n\t\t\tthis.dropdownMenu.menuOptions = {\n\t\t\t\t...this.dropdownMenu.menuOptions,\n\t\t\t\tget anchorAlignment(): AnchorAlignment {\n\t\t\t\t\treturn that.options.anchorAlignmentProvider!();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis.updateEnabled();\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\n\t\tif (this.dropdownMenu) {\n\t\t\tif (this.dropdownMenu.menuOptions) {\n\t\t\t\tthis.dropdownMenu.menuOptions.context = newContext;\n\t\t\t} else {\n\t\t\t\tthis.dropdownMenu.menuOptions = { context: newContext };\n\t\t\t}\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tif (this.dropdownMenu) {\n\t\t\tthis.dropdownMenu.show();\n\t\t}\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tconst disabled = !this.getAction().enabled;\n\t\tthis.actionItem?.classList.toggle('disabled', disabled);\n\t\tthis.element?.classList.toggle('disabled', disabled);\n\t}\n}\n\nexport interface IActionWithDropdownActionViewItemOptions extends IActionViewItemOptions {\n\treadonly menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\treadonly menuActionClassNames?: string[];\n}\n\nexport class ActionWithDropdownActionViewItem extends ActionViewItem {\n\n\tprotected dropdownMenuActionViewItem: DropdownMenuActionViewItem | undefined;\n\n\tconstructor(\n\t\tcontext: unknown,\n\t\taction: IAction,\n\t\toptions: IActionWithDropdownActionViewItemOptions,\n\t\tprivate readonly contextMenuProvider: IContextMenuProvider\n\t) {\n\t\tsuper(context, action, options);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tif (this.element) {\n\t\t\tthis.element.classList.add('action-dropdown-item');\n\t\t\tconst menuActionsProvider = {\n\t\t\t\tgetActions: () => {\n\t\t\t\t\tconst actionsProvider = (<IActionWithDropdownActionViewItemOptions>this.options).menuActionsOrProvider;\n\t\t\t\t\treturn [this._action, ...(Array.isArray(actionsProvider)\n\t\t\t\t\t\t? actionsProvider\n\t\t\t\t\t\t: (actionsProvider as IActionProvider).getActions()) // TODO: microsoft/TypeScript#42768\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.dropdownMenuActionViewItem = new DropdownMenuActionViewItem(this._register(new Action('dropdownAction', undefined)), menuActionsProvider, this.contextMenuProvider, { classNames: ['dropdown', ...Codicon.dropDownButton.classNamesArray, ...(<IActionWithDropdownActionViewItemOptions>this.options).menuActionClassNames || []] });\n\t\t\tthis.dropdownMenuActionViewItem.render(this.element);\n\n\t\t\tthis._register(addDisposableListener(this.element, EventType.KEY_DOWN, e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tlet handled: boolean = false;\n\t\t\t\tif (this.dropdownMenuActionViewItem?.isFocused() && event.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.blur();\n\t\t\t\t\tthis.focus();\n\t\t\t\t} else if (this.isFocused() && event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.blur();\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.focus();\n\t\t\t\t}\n\t\t\t\tif (handled) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tsuper.blur();\n\t\tthis.dropdownMenuActionViewItem?.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tsuper.setFocusable(focusable);\n\t\tthis.dropdownMenuActionViewItem?.setFocusable(focusable);\n\t}\n}\n\n\n"]}