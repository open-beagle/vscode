{"version":3,"file":"countBadge.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/ui/countBadge/countBadge.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAqBhG,MAAM,WAAW,GAAG;QACnB,eAAe,EAAE,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,eAAe,EAAE,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC;KACzC,CAAC;IAEF,MAAa,UAAU;QAatB,YAAY,SAAsB,EAAE,OAA4B;YAVxD,UAAK,GAAW,CAAC,CAAC;YAWzB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAA,GAAA,eAAK,CAAA,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;YAExC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACpD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAE5C,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,YAAM,CAAA,CAAC,SAAS,EAAE,CAAA,GAAA,OAAC,CAAA,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,KAAK,CAAC;YACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACxC,CAAC;QAED,QAAQ,CAAC,KAAa;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QAED,cAAc,CAAC,WAAmB;YACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QAED,cAAc,CAAC,WAAmB;YACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QAEO,MAAM;YACb,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAA,GAAA,gBAAM,CAAA,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAChE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAA,GAAA,gBAAM,CAAA,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAE1D,IAAI,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC;QAED,KAAK,CAAC,MAAwB;YAC7B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAEtC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC;QAEO,WAAW;YAClB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/E,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/E,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEnE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC;gBAChD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;gBAEtC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACrD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;aACxC;QACF,CAAC;KACD;IAvED,gCAuEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./countBadge';\nimport { $, append } from 'vs/base/browser/dom';\nimport { format } from 'vs/base/common/strings';\nimport { Color } from 'vs/base/common/color';\nimport { mixin } from 'vs/base/common/objects';\nimport { IThemable } from 'vs/base/common/styler';\n\nexport interface ICountBadgeOptions extends ICountBadgetyles {\n\tcount?: number;\n\tcountFormat?: string;\n\ttitleFormat?: string;\n}\n\nexport interface ICountBadgetyles {\n\tbadgeBackground?: Color;\n\tbadgeForeground?: Color;\n\tbadgeBorder?: Color;\n}\n\nconst defaultOpts = {\n\tbadgeBackground: Color.fromHex('#4D4D4D'),\n\tbadgeForeground: Color.fromHex('#FFFFFF')\n};\n\nexport class CountBadge implements IThemable {\n\n\tprivate element: HTMLElement;\n\tprivate count: number = 0;\n\tprivate countFormat: string;\n\tprivate titleFormat: string;\n\n\tprivate badgeBackground: Color | undefined;\n\tprivate badgeForeground: Color | undefined;\n\tprivate badgeBorder: Color | undefined;\n\n\tprivate options: ICountBadgeOptions;\n\n\tconstructor(container: HTMLElement, options?: ICountBadgeOptions) {\n\t\tthis.options = options || Object.create(null);\n\t\tmixin(this.options, defaultOpts, false);\n\n\t\tthis.badgeBackground = this.options.badgeBackground;\n\t\tthis.badgeForeground = this.options.badgeForeground;\n\t\tthis.badgeBorder = this.options.badgeBorder;\n\n\t\tthis.element = append(container, $('.monaco-count-badge'));\n\t\tthis.countFormat = this.options.countFormat || '{0}';\n\t\tthis.titleFormat = this.options.titleFormat || '';\n\t\tthis.setCount(this.options.count || 0);\n\t}\n\n\tsetCount(count: number) {\n\t\tthis.count = count;\n\t\tthis.render();\n\t}\n\n\tsetCountFormat(countFormat: string) {\n\t\tthis.countFormat = countFormat;\n\t\tthis.render();\n\t}\n\n\tsetTitleFormat(titleFormat: string) {\n\t\tthis.titleFormat = titleFormat;\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tthis.element.textContent = format(this.countFormat, this.count);\n\t\tthis.element.title = format(this.titleFormat, this.count);\n\n\t\tthis.applyStyles();\n\t}\n\n\tstyle(styles: ICountBadgetyles): void {\n\t\tthis.badgeBackground = styles.badgeBackground;\n\t\tthis.badgeForeground = styles.badgeForeground;\n\t\tthis.badgeBorder = styles.badgeBorder;\n\n\t\tthis.applyStyles();\n\t}\n\n\tprivate applyStyles(): void {\n\t\tif (this.element) {\n\t\t\tconst background = this.badgeBackground ? this.badgeBackground.toString() : '';\n\t\t\tconst foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n\t\t\tconst border = this.badgeBorder ? this.badgeBorder.toString() : '';\n\n\t\t\tthis.element.style.backgroundColor = background;\n\t\t\tthis.element.style.color = foreground;\n\n\t\t\tthis.element.style.borderWidth = border ? '1px' : '';\n\t\t\tthis.element.style.borderStyle = border ? 'solid' : '';\n\t\t\tthis.element.style.borderColor = border;\n\t\t}\n\t}\n}\n"]}