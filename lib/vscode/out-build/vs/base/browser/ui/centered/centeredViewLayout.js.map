{"version":3,"file":"centeredViewLayout.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/ui/centered/centeredViewLayout.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SplitView, Orientation, ISplitViewStyles, IView as ISplitViewView } from 'vs/base/browser/ui/splitview/splitview';\nimport { $ } from 'vs/base/browser/dom';\nimport { Event } from 'vs/base/common/event';\nimport { IView, IViewSize } from 'vs/base/browser/ui/grid/grid';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Color } from 'vs/base/common/color';\nimport { IBoundarySashes } from 'vs/base/browser/ui/grid/gridview';\n\nexport interface CenteredViewState {\n\tleftMarginRatio: number;\n\trightMarginRatio: number;\n}\n\nconst GOLDEN_RATIO = {\n\tleftMarginRatio: 0.1909,\n\trightMarginRatio: 0.1909\n};\n\nfunction createEmptyView(background: Color | undefined): ISplitViewView {\n\tconst element = $('.centered-layout-margin');\n\telement.style.height = '100%';\n\tif (background) {\n\t\telement.style.backgroundColor = background.toString();\n\t}\n\n\treturn {\n\t\telement,\n\t\tlayout: () => undefined,\n\t\tminimumSize: 60,\n\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\tonDidChange: Event.None\n\t};\n}\n\nfunction toSplitViewView(view: IView, getHeight: () => number): ISplitViewView {\n\treturn {\n\t\telement: view.element,\n\t\tget maximumSize() { return view.maximumWidth; },\n\t\tget minimumSize() { return view.minimumWidth; },\n\t\tonDidChange: Event.map(view.onDidChange, e => e && e.width),\n\t\tlayout: (size, offset) => view.layout(size, getHeight(), 0, offset)\n\t};\n}\n\nexport interface ICenteredViewStyles extends ISplitViewStyles {\n\tbackground: Color;\n}\n\nexport class CenteredViewLayout implements IDisposable {\n\n\tprivate splitView?: SplitView;\n\tprivate width: number = 0;\n\tprivate height: number = 0;\n\tprivate style!: ICenteredViewStyles;\n\tprivate didLayout = false;\n\tprivate emptyViews: ISplitViewView[] | undefined;\n\tprivate readonly splitViewDisposables = new DisposableStore();\n\n\tconstructor(private container: HTMLElement, private view: IView, public readonly state: CenteredViewState = { leftMarginRatio: GOLDEN_RATIO.leftMarginRatio, rightMarginRatio: GOLDEN_RATIO.rightMarginRatio }) {\n\t\tthis.container.appendChild(this.view.element);\n\t\t// Make sure to hide the split view overflow like sashes #52892\n\t\tthis.container.style.overflow = 'hidden';\n\t}\n\n\tget minimumWidth(): number { return this.splitView ? this.splitView.minimumSize : this.view.minimumWidth; }\n\tget maximumWidth(): number { return this.splitView ? this.splitView.maximumSize : this.view.maximumWidth; }\n\tget minimumHeight(): number { return this.view.minimumHeight; }\n\tget maximumHeight(): number { return this.view.maximumHeight; }\n\tget onDidChange(): Event<IViewSize | undefined> { return this.view.onDidChange; }\n\n\tprivate _boundarySashes: IBoundarySashes = {};\n\tget boundarySashes(): IBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitView.orthogonalStartSash = boundarySashes.top;\n\t\tthis.splitView.orthogonalEndSash = boundarySashes.bottom;\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.layout(width);\n\t\t\tif (!this.didLayout) {\n\t\t\t\tthis.resizeMargins();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.view.layout(width, height, 0, 0);\n\t\t}\n\t\tthis.didLayout = true;\n\t}\n\n\tprivate resizeMargins(): void {\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\t\tthis.splitView.resizeView(0, this.state.leftMarginRatio * this.width);\n\t\tthis.splitView.resizeView(2, this.state.rightMarginRatio * this.width);\n\t}\n\n\tisActive(): boolean {\n\t\treturn !!this.splitView;\n\t}\n\n\tstyles(style: ICenteredViewStyles): void {\n\t\tthis.style = style;\n\t\tif (this.splitView && this.emptyViews) {\n\t\t\tthis.splitView.style(this.style);\n\t\t\tthis.emptyViews[0].element.style.backgroundColor = this.style.background.toString();\n\t\t\tthis.emptyViews[1].element.style.backgroundColor = this.style.background.toString();\n\t\t}\n\t}\n\n\tactivate(active: boolean): void {\n\t\tif (active === this.isActive()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (active) {\n\t\t\tthis.container.removeChild(this.view.element);\n\t\t\tthis.splitView = new SplitView(this.container, {\n\t\t\t\tinverseAltBehavior: true,\n\t\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\t\tstyles: this.style\n\t\t\t});\n\t\t\tthis.splitView.orthogonalStartSash = this.boundarySashes.top;\n\t\t\tthis.splitView.orthogonalEndSash = this.boundarySashes.bottom;\n\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashChange(() => {\n\t\t\t\tif (this.splitView) {\n\t\t\t\t\tthis.state.leftMarginRatio = this.splitView.getViewSize(0) / this.width;\n\t\t\t\t\tthis.state.rightMarginRatio = this.splitView.getViewSize(2) / this.width;\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashReset(() => {\n\t\t\t\tthis.state.leftMarginRatio = GOLDEN_RATIO.leftMarginRatio;\n\t\t\t\tthis.state.rightMarginRatio = GOLDEN_RATIO.rightMarginRatio;\n\t\t\t\tthis.resizeMargins();\n\t\t\t}));\n\n\t\t\tthis.splitView.layout(this.width);\n\t\t\tthis.splitView.addView(toSplitViewView(this.view, () => this.height), 0);\n\t\t\tconst backgroundColor = this.style ? this.style.background : undefined;\n\t\t\tthis.emptyViews = [createEmptyView(backgroundColor), createEmptyView(backgroundColor)];\n\t\t\tthis.splitView.addView(this.emptyViews[0], this.state.leftMarginRatio * this.width, 0);\n\t\t\tthis.splitView.addView(this.emptyViews[1], this.state.rightMarginRatio * this.width, 2);\n\t\t} else {\n\t\t\tif (this.splitView) {\n\t\t\t\tthis.container.removeChild(this.splitView.el);\n\t\t\t}\n\t\t\tthis.splitViewDisposables.clear();\n\t\t\tif (this.splitView) {\n\t\t\t\tthis.splitView.dispose();\n\t\t\t}\n\t\t\tthis.splitView = undefined;\n\t\t\tthis.emptyViews = undefined;\n\t\t\tthis.container.appendChild(this.view.element);\n\t\t}\n\t}\n\n\tisDefault(state: CenteredViewState): boolean {\n\t\treturn state.leftMarginRatio === GOLDEN_RATIO.leftMarginRatio && state.rightMarginRatio === GOLDEN_RATIO.rightMarginRatio;\n\t}\n\n\tdispose(): void {\n\t\tthis.splitViewDisposables.dispose();\n\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.dispose();\n\t\t\tthis.splitView = undefined;\n\t\t}\n\t}\n}\n"]}