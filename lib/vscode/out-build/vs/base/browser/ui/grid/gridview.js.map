{"version":3,"file":"gridview.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/ui/grid/gridview.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./gridview';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { Orientation, Sash } from 'vs/base/browser/ui/sash/sash';\nimport { SplitView, IView as ISplitView, Sizing, LayoutPriority, ISplitViewStyles } from 'vs/base/browser/ui/splitview/splitview';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { $ } from 'vs/base/browser/dom';\nimport { tail2 as tail } from 'vs/base/common/arrays';\nimport { Color } from 'vs/base/common/color';\nimport { clamp } from 'vs/base/common/numbers';\n\nexport { Sizing, LayoutPriority } from 'vs/base/browser/ui/splitview/splitview';\nexport { Orientation } from 'vs/base/browser/ui/sash/sash';\n\nexport interface IViewSize {\n\treadonly width: number;\n\treadonly height: number;\n}\n\ninterface IRelativeBoundarySashes {\n\treadonly start?: Sash;\n\treadonly end?: Sash;\n\treadonly orthogonalStart?: Sash;\n\treadonly orthogonalEnd?: Sash;\n}\n\nexport interface IBoundarySashes {\n\treadonly top?: Sash;\n\treadonly right?: Sash;\n\treadonly bottom?: Sash;\n\treadonly left?: Sash;\n}\n\nexport interface IView {\n\treadonly element: HTMLElement;\n\treadonly minimumWidth: number;\n\treadonly maximumWidth: number;\n\treadonly minimumHeight: number;\n\treadonly maximumHeight: number;\n\treadonly onDidChange: Event<IViewSize | undefined>;\n\treadonly priority?: LayoutPriority;\n\treadonly snap?: boolean;\n\tlayout(width: number, height: number, top: number, left: number): void;\n\tsetVisible?(visible: boolean): void;\n\tsetBoundarySashes?(sashes: IBoundarySashes): void;\n}\n\nexport interface ISerializableView extends IView {\n\ttoJSON(): object;\n}\n\nexport interface IViewDeserializer<T extends ISerializableView> {\n\tfromJSON(json: any): T;\n}\n\nexport interface ISerializedLeafNode {\n\ttype: 'leaf';\n\tdata: any;\n\tsize: number;\n\tvisible?: boolean;\n}\n\nexport interface ISerializedBranchNode {\n\ttype: 'branch';\n\tdata: ISerializedNode[];\n\tsize: number;\n}\n\nexport type ISerializedNode = ISerializedLeafNode | ISerializedBranchNode;\n\nexport interface ISerializedGridView {\n\troot: ISerializedNode;\n\torientation: Orientation;\n\twidth: number;\n\theight: number;\n}\n\nexport function orthogonal(orientation: Orientation): Orientation {\n\treturn orientation === Orientation.VERTICAL ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n}\n\nexport interface Box {\n\treadonly top: number;\n\treadonly left: number;\n\treadonly width: number;\n\treadonly height: number;\n}\n\nexport interface GridLeafNode {\n\treadonly view: IView;\n\treadonly box: Box;\n\treadonly cachedVisibleSize: number | undefined;\n}\n\nexport interface GridBranchNode {\n\treadonly children: GridNode[];\n\treadonly box: Box;\n}\n\nexport type GridNode = GridLeafNode | GridBranchNode;\n\nexport function isGridBranchNode(node: GridNode): node is GridBranchNode {\n\treturn !!(node as any).children;\n}\n\nexport interface IGridViewStyles extends ISplitViewStyles { }\n\nconst defaultStyles: IGridViewStyles = {\n\tseparatorBorder: Color.transparent\n};\n\nexport interface ILayoutController {\n\treadonly isLayoutEnabled: boolean;\n}\n\nexport class LayoutController implements ILayoutController {\n\tconstructor(public isLayoutEnabled: boolean) { }\n}\n\nexport class MultiplexLayoutController implements ILayoutController {\n\tget isLayoutEnabled(): boolean { return this.layoutControllers.every(l => l.isLayoutEnabled); }\n\tconstructor(private layoutControllers: ILayoutController[]) { }\n}\n\nexport interface IGridViewOptions {\n\treadonly styles?: IGridViewStyles;\n\treadonly proportionalLayout?: boolean; // default true\n\treadonly layoutController?: ILayoutController;\n}\n\ninterface ILayoutContext {\n\treadonly orthogonalSize: number;\n\treadonly absoluteOffset: number;\n\treadonly absoluteOrthogonalOffset: number;\n\treadonly absoluteSize: number;\n\treadonly absoluteOrthogonalSize: number;\n}\n\nfunction toAbsoluteBoundarySashes(sashes: IRelativeBoundarySashes, orientation: Orientation): IBoundarySashes {\n\tif (orientation === Orientation.HORIZONTAL) {\n\t\treturn { left: sashes.start, right: sashes.end, top: sashes.orthogonalStart, bottom: sashes.orthogonalEnd };\n\t} else {\n\t\treturn { top: sashes.start, bottom: sashes.end, left: sashes.orthogonalStart, right: sashes.orthogonalEnd };\n\t}\n}\n\nfunction fromAbsoluteBoundarySashes(sashes: IBoundarySashes, orientation: Orientation): IRelativeBoundarySashes {\n\tif (orientation === Orientation.HORIZONTAL) {\n\t\treturn { start: sashes.left, end: sashes.right, orthogonalStart: sashes.top, orthogonalEnd: sashes.bottom };\n\t} else {\n\t\treturn { start: sashes.top, end: sashes.bottom, orthogonalStart: sashes.left, orthogonalEnd: sashes.right };\n\t}\n}\n\nclass BranchNode implements ISplitView<ILayoutContext>, IDisposable {\n\n\treadonly element: HTMLElement;\n\treadonly children: Node[] = [];\n\tprivate splitview: SplitView<ILayoutContext>;\n\n\tprivate _size: number;\n\tget size(): number { return this._size; }\n\n\tprivate _orthogonalSize: number;\n\tget orthogonalSize(): number { return this._orthogonalSize; }\n\n\tprivate absoluteOffset: number = 0;\n\tprivate absoluteOrthogonalOffset: number = 0;\n\tprivate absoluteOrthogonalSize: number = 0;\n\n\tprivate _styles: IGridViewStyles;\n\tget styles(): IGridViewStyles { return this._styles; }\n\n\tget width(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.size : this.orthogonalSize;\n\t}\n\n\tget height(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.orthogonalSize : this.size;\n\t}\n\n\tget top(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.absoluteOffset : this.absoluteOrthogonalOffset;\n\t}\n\n\tget left(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.absoluteOrthogonalOffset : this.absoluteOffset;\n\t}\n\n\tget minimumSize(): number {\n\t\treturn this.children.length === 0 ? 0 : Math.max(...this.children.map(c => c.minimumOrthogonalSize));\n\t}\n\n\tget maximumSize(): number {\n\t\treturn Math.min(...this.children.map(c => c.maximumOrthogonalSize));\n\t}\n\n\tget priority(): LayoutPriority {\n\t\tif (this.children.length === 0) {\n\t\t\treturn LayoutPriority.Normal;\n\t\t}\n\n\t\tconst priorities = this.children.map(c => typeof c.priority === 'undefined' ? LayoutPriority.Normal : c.priority);\n\n\t\tif (priorities.some(p => p === LayoutPriority.High)) {\n\t\t\treturn LayoutPriority.High;\n\t\t} else if (priorities.some(p => p === LayoutPriority.Low)) {\n\t\t\treturn LayoutPriority.Low;\n\t\t}\n\n\t\treturn LayoutPriority.Normal;\n\t}\n\n\tget minimumOrthogonalSize(): number {\n\t\treturn this.splitview.minimumSize;\n\t}\n\n\tget maximumOrthogonalSize(): number {\n\t\treturn this.splitview.maximumSize;\n\t}\n\n\tget minimumWidth(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.minimumOrthogonalSize : this.minimumSize;\n\t}\n\n\tget minimumHeight(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.minimumSize : this.minimumOrthogonalSize;\n\t}\n\n\tget maximumWidth(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.maximumOrthogonalSize : this.maximumSize;\n\t}\n\n\tget maximumHeight(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.maximumSize : this.maximumOrthogonalSize;\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<number | undefined>();\n\treadonly onDidChange: Event<number | undefined> = this._onDidChange.event;\n\n\tprivate childrenChangeDisposable: IDisposable = Disposable.None;\n\n\tprivate readonly _onDidSashReset = new Emitter<number[]>();\n\treadonly onDidSashReset: Event<number[]> = this._onDidSashReset.event;\n\tprivate splitviewSashResetDisposable: IDisposable = Disposable.None;\n\tprivate childrenSashResetDisposable: IDisposable = Disposable.None;\n\n\tprivate _boundarySashes: IRelativeBoundarySashes = {};\n\tget boundarySashes(): IRelativeBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IRelativeBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\n\t\tthis.splitview.orthogonalStartSash = boundarySashes.orthogonalStart;\n\t\tthis.splitview.orthogonalEndSash = boundarySashes.orthogonalEnd;\n\n\t\tfor (let index = 0; index < this.children.length; index++) {\n\t\t\tconst child = this.children[index];\n\t\t\tconst first = index === 0;\n\t\t\tconst last = index === this.children.length - 1;\n\n\t\t\tchild.boundarySashes = {\n\t\t\t\tstart: boundarySashes.orthogonalStart,\n\t\t\t\tend: boundarySashes.orthogonalEnd,\n\t\t\t\torthogonalStart: first ? boundarySashes.start : child.boundarySashes.orthogonalStart,\n\t\t\t\torthogonalEnd: last ? boundarySashes.end : child.boundarySashes.orthogonalEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _edgeSnapping = false;\n\tget edgeSnapping(): boolean { return this._edgeSnapping; }\n\tset edgeSnapping(edgeSnapping: boolean) {\n\t\tif (this._edgeSnapping === edgeSnapping) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._edgeSnapping = edgeSnapping;\n\n\t\tfor (const child of this.children) {\n\t\t\tif (child instanceof BranchNode) {\n\t\t\t\tchild.edgeSnapping = edgeSnapping;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateSplitviewEdgeSnappingEnablement();\n\t}\n\n\tconstructor(\n\t\treadonly orientation: Orientation,\n\t\treadonly layoutController: ILayoutController,\n\t\tstyles: IGridViewStyles,\n\t\treadonly proportionalLayout: boolean,\n\t\tsize: number = 0,\n\t\torthogonalSize: number = 0,\n\t\tedgeSnapping: boolean = false,\n\t\tchildDescriptors?: INodeDescriptor[]\n\t) {\n\t\tthis._styles = styles;\n\t\tthis._size = size;\n\t\tthis._orthogonalSize = orthogonalSize;\n\n\t\tthis.element = $('.monaco-grid-branch-node');\n\n\t\tif (!childDescriptors) {\n\t\t\t// Normal behavior, we have no children yet, just set up the splitview\n\t\t\tthis.splitview = new SplitView(this.element, { orientation, styles, proportionalLayout });\n\t\t\tthis.splitview.layout(size, { orthogonalSize, absoluteOffset: 0, absoluteOrthogonalOffset: 0, absoluteSize: size, absoluteOrthogonalSize: orthogonalSize });\n\t\t} else {\n\t\t\t// Reconstruction behavior, we want to reconstruct a splitview\n\t\t\tconst descriptor = {\n\t\t\t\tviews: childDescriptors.map(childDescriptor => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tview: childDescriptor.node,\n\t\t\t\t\t\tsize: childDescriptor.node.size,\n\t\t\t\t\t\tvisible: childDescriptor.node instanceof LeafNode && childDescriptor.visible !== undefined ? childDescriptor.visible : true\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tsize: this.orthogonalSize\n\t\t\t};\n\n\t\t\tconst options = { proportionalLayout, orientation, styles };\n\n\t\t\tthis.children = childDescriptors.map(c => c.node);\n\t\t\tthis.splitview = new SplitView(this.element, { ...options, descriptor });\n\n\t\t\tthis.children.forEach((node, index) => {\n\t\t\t\tconst first = index === 0;\n\t\t\t\tconst last = index === this.children.length;\n\n\t\t\t\tnode.boundarySashes = {\n\t\t\t\t\tstart: this.boundarySashes.orthogonalStart,\n\t\t\t\t\tend: this.boundarySashes.orthogonalEnd,\n\t\t\t\t\torthogonalStart: first ? this.boundarySashes.start : this.splitview.sashes[index - 1],\n\t\t\t\t\torthogonalEnd: last ? this.boundarySashes.end : this.splitview.sashes[index],\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tconst onDidSashReset = Event.map(this.splitview.onDidSashReset, i => [i]);\n\t\tthis.splitviewSashResetDisposable = onDidSashReset(this._onDidSashReset.fire, this._onDidSashReset);\n\n\t\tconst onDidChildrenChange = Event.map(Event.any(...this.children.map(c => c.onDidChange)), () => undefined);\n\t\tthis.childrenChangeDisposable = onDidChildrenChange(this._onDidChange.fire, this._onDidChange);\n\n\t\tconst onDidChildrenSashReset = Event.any(...this.children.map((c, i) => Event.map(c.onDidSashReset, location => [i, ...location])));\n\t\tthis.childrenSashResetDisposable = onDidChildrenSashReset(this._onDidSashReset.fire, this._onDidSashReset);\n\t}\n\n\tstyle(styles: IGridViewStyles): void {\n\t\tthis._styles = styles;\n\t\tthis.splitview.style(styles);\n\n\t\tfor (const child of this.children) {\n\t\t\tif (child instanceof BranchNode) {\n\t\t\t\tchild.style(styles);\n\t\t\t}\n\t\t}\n\t}\n\n\tlayout(size: number, offset: number, ctx: ILayoutContext | undefined): void {\n\t\tif (!this.layoutController.isLayoutEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof ctx === 'undefined') {\n\t\t\tthrow new Error('Invalid state');\n\t\t}\n\n\t\t// branch nodes should flip the normal/orthogonal directions\n\t\tthis._size = ctx.orthogonalSize;\n\t\tthis._orthogonalSize = size;\n\t\tthis.absoluteOffset = ctx.absoluteOffset + offset;\n\t\tthis.absoluteOrthogonalOffset = ctx.absoluteOrthogonalOffset;\n\t\tthis.absoluteOrthogonalSize = ctx.absoluteOrthogonalSize;\n\n\t\tthis.splitview.layout(ctx.orthogonalSize, {\n\t\t\torthogonalSize: size,\n\t\t\tabsoluteOffset: this.absoluteOrthogonalOffset,\n\t\t\tabsoluteOrthogonalOffset: this.absoluteOffset,\n\t\t\tabsoluteSize: ctx.absoluteOrthogonalSize,\n\t\t\tabsoluteOrthogonalSize: ctx.absoluteSize\n\t\t});\n\n\t\tthis.updateSplitviewEdgeSnappingEnablement();\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tfor (const child of this.children) {\n\t\t\tchild.setVisible(visible);\n\t\t}\n\t}\n\n\taddChild(node: Node, size: number | Sizing, index: number, skipLayout?: boolean): void {\n\t\tif (index < 0 || index > this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\tthis.splitview.addView(node, size, index, skipLayout);\n\t\tthis._addChild(node, index);\n\t\tthis.onDidChildrenChange();\n\t}\n\n\tprivate _addChild(node: Node, index: number): void {\n\t\tconst first = index === 0;\n\t\tconst last = index === this.children.length;\n\t\tthis.children.splice(index, 0, node);\n\n\t\tnode.boundarySashes = {\n\t\t\tstart: this.boundarySashes.orthogonalStart,\n\t\t\tend: this.boundarySashes.orthogonalEnd,\n\t\t\torthogonalStart: first ? this.boundarySashes.start : this.splitview.sashes[index - 1],\n\t\t\torthogonalEnd: last ? this.boundarySashes.end : this.splitview.sashes[index],\n\t\t};\n\n\t\tif (!first) {\n\t\t\tthis.children[index - 1].boundarySashes = {\n\t\t\t\t...this.children[index - 1].boundarySashes,\n\t\t\t\torthogonalEnd: this.splitview.sashes[index - 1]\n\t\t\t};\n\t\t}\n\n\t\tif (!last) {\n\t\t\tthis.children[index + 1].boundarySashes = {\n\t\t\t\t...this.children[index + 1].boundarySashes,\n\t\t\t\torthogonalStart: this.splitview.sashes[index]\n\t\t\t};\n\t\t}\n\t}\n\n\tremoveChild(index: number, sizing?: Sizing): void {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\tthis.splitview.removeView(index, sizing);\n\t\tthis._removeChild(index);\n\t\tthis.onDidChildrenChange();\n\t}\n\n\tprivate _removeChild(index: number): Node {\n\t\tconst first = index === 0;\n\t\tconst last = index === this.children.length - 1;\n\t\tconst [child] = this.children.splice(index, 1);\n\n\t\tif (!first) {\n\t\t\tthis.children[index - 1].boundarySashes = {\n\t\t\t\t...this.children[index - 1].boundarySashes,\n\t\t\t\torthogonalEnd: this.splitview.sashes[index - 1]\n\t\t\t};\n\t\t}\n\n\t\tif (!last) { // [0,1,2,3] (2) => [0,1,3]\n\t\t\tthis.children[index].boundarySashes = {\n\t\t\t\t...this.children[index].boundarySashes,\n\t\t\t\torthogonalStart: this.splitview.sashes[Math.max(index - 1, 0)]\n\t\t\t};\n\t\t}\n\n\t\treturn child;\n\t}\n\n\tmoveChild(from: number, to: number): void {\n\t\tif (from === to) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (from < 0 || from >= this.children.length) {\n\t\t\tthrow new Error('Invalid from index');\n\t\t}\n\n\t\tto = clamp(to, 0, this.children.length);\n\n\t\tif (from < to) {\n\t\t\tto--;\n\t\t}\n\n\t\tthis.splitview.moveView(from, to);\n\n\t\tconst child = this._removeChild(from);\n\t\tthis._addChild(child, to);\n\n\t\tthis.onDidChildrenChange();\n\t}\n\n\tswapChildren(from: number, to: number): void {\n\t\tif (from === to) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (from < 0 || from >= this.children.length) {\n\t\t\tthrow new Error('Invalid from index');\n\t\t}\n\n\t\tto = clamp(to, 0, this.children.length);\n\n\t\tthis.splitview.swapViews(from, to);\n\n\t\t// swap boundary sashes\n\t\t[this.children[from].boundarySashes, this.children[to].boundarySashes]\n\t\t\t= [this.children[from].boundarySashes, this.children[to].boundarySashes];\n\n\t\t// swap children\n\t\t[this.children[from], this.children[to]] = [this.children[to], this.children[from]];\n\n\t\tthis.onDidChildrenChange();\n\t}\n\n\tresizeChild(index: number, size: number): void {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\tthis.splitview.resizeView(index, size);\n\t}\n\n\tdistributeViewSizes(recursive = false): void {\n\t\tthis.splitview.distributeViewSizes();\n\n\t\tif (recursive) {\n\t\t\tfor (const child of this.children) {\n\t\t\t\tif (child instanceof BranchNode) {\n\t\t\t\t\tchild.distributeViewSizes(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetChildSize(index: number): number {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\treturn this.splitview.getViewSize(index);\n\t}\n\n\tisChildVisible(index: number): boolean {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\treturn this.splitview.isViewVisible(index);\n\t}\n\n\tsetChildVisible(index: number, visible: boolean): void {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\tif (this.splitview.isViewVisible(index) === visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitview.setViewVisible(index, visible);\n\t}\n\n\tgetChildCachedVisibleSize(index: number): number | undefined {\n\t\tif (index < 0 || index >= this.children.length) {\n\t\t\tthrow new Error('Invalid index');\n\t\t}\n\n\t\treturn this.splitview.getViewCachedVisibleSize(index);\n\t}\n\n\tprivate onDidChildrenChange(): void {\n\t\tconst onDidChildrenChange = Event.map(Event.any(...this.children.map(c => c.onDidChange)), () => undefined);\n\t\tthis.childrenChangeDisposable.dispose();\n\t\tthis.childrenChangeDisposable = onDidChildrenChange(this._onDidChange.fire, this._onDidChange);\n\n\t\tconst onDidChildrenSashReset = Event.any(...this.children.map((c, i) => Event.map(c.onDidSashReset, location => [i, ...location])));\n\t\tthis.childrenSashResetDisposable.dispose();\n\t\tthis.childrenSashResetDisposable = onDidChildrenSashReset(this._onDidSashReset.fire, this._onDidSashReset);\n\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\ttrySet2x2(other: BranchNode): IDisposable {\n\t\tif (this.children.length !== 2 || other.children.length !== 2) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tif (this.getChildSize(0) !== other.getChildSize(0)) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tconst [firstChild, secondChild] = this.children;\n\t\tconst [otherFirstChild, otherSecondChild] = other.children;\n\n\t\tif (!(firstChild instanceof LeafNode) || !(secondChild instanceof LeafNode)) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tif (!(otherFirstChild instanceof LeafNode) || !(otherSecondChild instanceof LeafNode)) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tsecondChild.linkedWidthNode = otherFirstChild.linkedHeightNode = firstChild;\n\t\t\tfirstChild.linkedWidthNode = otherSecondChild.linkedHeightNode = secondChild;\n\t\t\totherSecondChild.linkedWidthNode = firstChild.linkedHeightNode = otherFirstChild;\n\t\t\totherFirstChild.linkedWidthNode = secondChild.linkedHeightNode = otherSecondChild;\n\t\t} else {\n\t\t\totherFirstChild.linkedWidthNode = secondChild.linkedHeightNode = firstChild;\n\t\t\totherSecondChild.linkedWidthNode = firstChild.linkedHeightNode = secondChild;\n\t\t\tfirstChild.linkedWidthNode = otherSecondChild.linkedHeightNode = otherFirstChild;\n\t\t\tsecondChild.linkedWidthNode = otherFirstChild.linkedHeightNode = otherSecondChild;\n\t\t}\n\n\t\tconst mySash = this.splitview.sashes[0];\n\t\tconst otherSash = other.splitview.sashes[0];\n\t\tmySash.linkedSash = otherSash;\n\t\totherSash.linkedSash = mySash;\n\n\t\tthis._onDidChange.fire(undefined);\n\t\tother._onDidChange.fire(undefined);\n\n\t\treturn toDisposable(() => {\n\t\t\tmySash.linkedSash = otherSash.linkedSash = undefined;\n\t\t\tfirstChild.linkedHeightNode = firstChild.linkedWidthNode = undefined;\n\t\t\tsecondChild.linkedHeightNode = secondChild.linkedWidthNode = undefined;\n\t\t\totherFirstChild.linkedHeightNode = otherFirstChild.linkedWidthNode = undefined;\n\t\t\totherSecondChild.linkedHeightNode = otherSecondChild.linkedWidthNode = undefined;\n\t\t});\n\t}\n\n\tprivate updateSplitviewEdgeSnappingEnablement(): void {\n\t\tthis.splitview.startSnappingEnabled = this._edgeSnapping || this.absoluteOrthogonalOffset > 0;\n\t\tthis.splitview.endSnappingEnabled = this._edgeSnapping || this.absoluteOrthogonalOffset + this._size < this.absoluteOrthogonalSize;\n\t}\n\n\tdispose(): void {\n\t\tfor (const child of this.children) {\n\t\t\tchild.dispose();\n\t\t}\n\n\t\tthis._onDidChange.dispose();\n\t\tthis._onDidSashReset.dispose();\n\n\t\tthis.splitviewSashResetDisposable.dispose();\n\t\tthis.childrenSashResetDisposable.dispose();\n\t\tthis.childrenChangeDisposable.dispose();\n\t\tthis.splitview.dispose();\n\t}\n}\n\nclass LeafNode implements ISplitView<ILayoutContext>, IDisposable {\n\n\tprivate _size: number = 0;\n\tget size(): number { return this._size; }\n\n\tprivate _orthogonalSize: number;\n\tget orthogonalSize(): number { return this._orthogonalSize; }\n\n\tprivate absoluteOffset: number = 0;\n\tprivate absoluteOrthogonalOffset: number = 0;\n\n\treadonly onDidSashReset: Event<number[]> = Event.None;\n\n\tprivate _onDidLinkedWidthNodeChange = new Relay<number | undefined>();\n\tprivate _linkedWidthNode: LeafNode | undefined = undefined;\n\tget linkedWidthNode(): LeafNode | undefined { return this._linkedWidthNode; }\n\tset linkedWidthNode(node: LeafNode | undefined) {\n\t\tthis._onDidLinkedWidthNodeChange.input = node ? node._onDidViewChange : Event.None;\n\t\tthis._linkedWidthNode = node;\n\t\tthis._onDidSetLinkedNode.fire(undefined);\n\t}\n\n\tprivate _onDidLinkedHeightNodeChange = new Relay<number | undefined>();\n\tprivate _linkedHeightNode: LeafNode | undefined = undefined;\n\tget linkedHeightNode(): LeafNode | undefined { return this._linkedHeightNode; }\n\tset linkedHeightNode(node: LeafNode | undefined) {\n\t\tthis._onDidLinkedHeightNodeChange.input = node ? node._onDidViewChange : Event.None;\n\t\tthis._linkedHeightNode = node;\n\t\tthis._onDidSetLinkedNode.fire(undefined);\n\t}\n\n\tprivate readonly _onDidSetLinkedNode = new Emitter<number | undefined>();\n\tprivate _onDidViewChange: Event<number | undefined>;\n\treadonly onDidChange: Event<number | undefined>;\n\n\tconstructor(\n\t\treadonly view: IView,\n\t\treadonly orientation: Orientation,\n\t\treadonly layoutController: ILayoutController,\n\t\torthogonalSize: number,\n\t\tsize: number = 0\n\t) {\n\t\tthis._orthogonalSize = orthogonalSize;\n\t\tthis._size = size;\n\n\t\tthis._onDidViewChange = Event.map(this.view.onDidChange, e => e && (this.orientation === Orientation.VERTICAL ? e.width : e.height));\n\t\tthis.onDidChange = Event.any(this._onDidViewChange, this._onDidSetLinkedNode.event, this._onDidLinkedWidthNodeChange.event, this._onDidLinkedHeightNodeChange.event);\n\t}\n\n\tget width(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.orthogonalSize : this.size;\n\t}\n\n\tget height(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.size : this.orthogonalSize;\n\t}\n\n\tget top(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.absoluteOffset : this.absoluteOrthogonalOffset;\n\t}\n\n\tget left(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.absoluteOrthogonalOffset : this.absoluteOffset;\n\t}\n\n\tget element(): HTMLElement {\n\t\treturn this.view.element;\n\t}\n\n\tprivate get minimumWidth(): number {\n\t\treturn this.linkedWidthNode ? Math.max(this.linkedWidthNode.view.minimumWidth, this.view.minimumWidth) : this.view.minimumWidth;\n\t}\n\n\tprivate get maximumWidth(): number {\n\t\treturn this.linkedWidthNode ? Math.min(this.linkedWidthNode.view.maximumWidth, this.view.maximumWidth) : this.view.maximumWidth;\n\t}\n\n\tprivate get minimumHeight(): number {\n\t\treturn this.linkedHeightNode ? Math.max(this.linkedHeightNode.view.minimumHeight, this.view.minimumHeight) : this.view.minimumHeight;\n\t}\n\n\tprivate get maximumHeight(): number {\n\t\treturn this.linkedHeightNode ? Math.min(this.linkedHeightNode.view.maximumHeight, this.view.maximumHeight) : this.view.maximumHeight;\n\t}\n\n\tget minimumSize(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.minimumHeight : this.minimumWidth;\n\t}\n\n\tget maximumSize(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.maximumHeight : this.maximumWidth;\n\t}\n\n\tget priority(): LayoutPriority | undefined {\n\t\treturn this.view.priority;\n\t}\n\n\tget snap(): boolean | undefined {\n\t\treturn this.view.snap;\n\t}\n\n\tget minimumOrthogonalSize(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.minimumWidth : this.minimumHeight;\n\t}\n\n\tget maximumOrthogonalSize(): number {\n\t\treturn this.orientation === Orientation.HORIZONTAL ? this.maximumWidth : this.maximumHeight;\n\t}\n\n\tprivate _boundarySashes: IRelativeBoundarySashes = {};\n\tget boundarySashes(): IRelativeBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IRelativeBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\n\t\tif (this.view.setBoundarySashes) {\n\t\t\tthis.view.setBoundarySashes(toAbsoluteBoundarySashes(boundarySashes, this.orientation));\n\t\t}\n\t}\n\n\tlayout(size: number, offset: number, ctx: ILayoutContext | undefined): void {\n\t\tif (!this.layoutController.isLayoutEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof ctx === 'undefined') {\n\t\t\tthrow new Error('Invalid state');\n\t\t}\n\n\t\tthis._size = size;\n\t\tthis._orthogonalSize = ctx.orthogonalSize;\n\t\tthis.absoluteOffset = ctx.absoluteOffset + offset;\n\t\tthis.absoluteOrthogonalOffset = ctx.absoluteOrthogonalOffset;\n\t\tthis.view.layout(this.width, this.height, this.top, this.left);\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (this.view.setVisible) {\n\t\t\tthis.view.setVisible(visible);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\ntype Node = BranchNode | LeafNode;\n\nexport interface INodeDescriptor {\n\tnode: Node;\n\tvisible?: boolean;\n}\n\nfunction flipNode<T extends Node>(node: T, size: number, orthogonalSize: number): T {\n\tif (node instanceof BranchNode) {\n\t\tconst result = new BranchNode(orthogonal(node.orientation), node.layoutController, node.styles, node.proportionalLayout, size, orthogonalSize, node.edgeSnapping);\n\n\t\tlet totalSize = 0;\n\n\t\tfor (let i = node.children.length - 1; i >= 0; i--) {\n\t\t\tconst child = node.children[i];\n\t\t\tconst childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n\n\t\t\tlet newSize = node.size === 0 ? 0 : Math.round((size * childSize) / node.size);\n\t\t\ttotalSize += newSize;\n\n\t\t\t// The last view to add should adjust to rounding errors\n\t\t\tif (i === 0) {\n\t\t\t\tnewSize += size - totalSize;\n\t\t\t}\n\n\t\t\tresult.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n\t\t}\n\n\t\treturn result as T;\n\t} else {\n\t\treturn new LeafNode((node as LeafNode).view, orthogonal(node.orientation), node.layoutController, orthogonalSize) as T;\n\t}\n}\n\nexport class GridView implements IDisposable {\n\n\treadonly element: HTMLElement;\n\tprivate styles: IGridViewStyles;\n\tprivate proportionalLayout: boolean;\n\n\tprivate _root!: BranchNode;\n\tprivate onDidSashResetRelay = new Relay<number[]>();\n\treadonly onDidSashReset: Event<number[]> = this.onDidSashResetRelay.event;\n\n\tprivate disposable2x2: IDisposable = Disposable.None;\n\n\tprivate get root(): BranchNode {\n\t\treturn this._root;\n\t}\n\n\tprivate set root(root: BranchNode) {\n\t\tconst oldRoot = this._root;\n\n\t\tif (oldRoot) {\n\t\t\tthis.element.removeChild(oldRoot.element);\n\t\t\toldRoot.dispose();\n\t\t}\n\n\t\tthis._root = root;\n\t\tthis.element.appendChild(root.element);\n\t\tthis.onDidSashResetRelay.input = root.onDidSashReset;\n\t\tthis._onDidChange.input = Event.map(root.onDidChange, () => undefined); // TODO\n\t}\n\n\tget orientation(): Orientation {\n\t\treturn this._root.orientation;\n\t}\n\n\tset orientation(orientation: Orientation) {\n\t\tif (this._root.orientation === orientation) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { size, orthogonalSize } = this._root;\n\t\tthis.root = flipNode(this._root, orthogonalSize, size);\n\t\tthis.root.layout(size, 0, { orthogonalSize, absoluteOffset: 0, absoluteOrthogonalOffset: 0, absoluteSize: size, absoluteOrthogonalSize: orthogonalSize });\n\t\tthis.boundarySashes = this.boundarySashes;\n\t}\n\n\tget width(): number { return this.root.width; }\n\tget height(): number { return this.root.height; }\n\n\tget minimumWidth(): number { return this.root.minimumWidth; }\n\tget minimumHeight(): number { return this.root.minimumHeight; }\n\tget maximumWidth(): number { return this.root.maximumHeight; }\n\tget maximumHeight(): number { return this.root.maximumHeight; }\n\n\tprivate _onDidChange = new Relay<IViewSize | undefined>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _boundarySashes: IBoundarySashes = {};\n\tget boundarySashes(): IBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\t\tthis.root.boundarySashes = fromAbsoluteBoundarySashes(boundarySashes, this.orientation);\n\t}\n\n\tset edgeSnapping(edgeSnapping: boolean) {\n\t\tthis.root.edgeSnapping = edgeSnapping;\n\t}\n\n\t/**\n\t * The first layout controller makes sure layout only propagates\n\t * to the views after the very first call to gridview.layout()\n\t */\n\tprivate firstLayoutController: LayoutController;\n\tprivate layoutController: LayoutController;\n\n\tconstructor(options: IGridViewOptions = {}) {\n\t\tthis.element = $('.monaco-grid-view');\n\t\tthis.styles = options.styles || defaultStyles;\n\t\tthis.proportionalLayout = typeof options.proportionalLayout !== 'undefined' ? !!options.proportionalLayout : true;\n\n\t\tthis.firstLayoutController = new LayoutController(false);\n\t\tthis.layoutController = new MultiplexLayoutController([\n\t\t\tthis.firstLayoutController,\n\t\t\t...(options.layoutController ? [options.layoutController] : [])\n\t\t]);\n\n\t\tthis.root = new BranchNode(Orientation.VERTICAL, this.layoutController, this.styles, this.proportionalLayout);\n\t}\n\n\tgetViewMap(map: Map<IView, HTMLElement>, node?: Node): void {\n\t\tif (!node) {\n\t\t\tnode = this.root;\n\t\t}\n\n\t\tif (node instanceof BranchNode) {\n\t\t\tnode.children.forEach(child => this.getViewMap(map, child));\n\t\t} else {\n\t\t\tmap.set(node.view, node.element);\n\t\t}\n\t}\n\n\tstyle(styles: IGridViewStyles): void {\n\t\tthis.styles = styles;\n\t\tthis.root.style(styles);\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis.firstLayoutController.isLayoutEnabled = true;\n\n\t\tconst [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL ? [height, width] : [width, height];\n\t\tthis.root.layout(size, 0, { orthogonalSize, absoluteOffset: 0, absoluteOrthogonalOffset: 0, absoluteSize: size, absoluteOrthogonalSize: orthogonalSize });\n\t}\n\n\taddView(view: IView, size: number | Sizing, location: number[]): void {\n\t\tthis.disposable2x2.dispose();\n\t\tthis.disposable2x2 = Disposable.None;\n\n\t\tconst [rest, index] = tail(location);\n\t\tconst [pathToParent, parent] = this.getNode(rest);\n\n\t\tif (parent instanceof BranchNode) {\n\t\t\tconst node = new LeafNode(view, orthogonal(parent.orientation), this.layoutController, parent.orthogonalSize);\n\t\t\tparent.addChild(node, size, index);\n\n\t\t} else {\n\t\t\tconst [, grandParent] = tail(pathToParent);\n\t\t\tconst [, parentIndex] = tail(rest);\n\n\t\t\tlet newSiblingSize: number | Sizing = 0;\n\n\t\t\tconst newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n\t\t\tif (typeof newSiblingCachedVisibleSize === 'number') {\n\t\t\t\tnewSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n\t\t\t}\n\n\t\t\tgrandParent.removeChild(parentIndex);\n\n\t\t\tconst newParent = new BranchNode(parent.orientation, parent.layoutController, this.styles, this.proportionalLayout, parent.size, parent.orthogonalSize, grandParent.edgeSnapping);\n\t\t\tgrandParent.addChild(newParent, parent.size, parentIndex);\n\n\t\t\tconst newSibling = new LeafNode(parent.view, grandParent.orientation, this.layoutController, parent.size);\n\t\t\tnewParent.addChild(newSibling, newSiblingSize, 0);\n\n\t\t\tif (typeof size !== 'number' && size.type === 'split') {\n\t\t\t\tsize = Sizing.Split(0);\n\t\t\t}\n\n\t\t\tconst node = new LeafNode(view, grandParent.orientation, this.layoutController, parent.size);\n\t\t\tnewParent.addChild(node, size, index);\n\t\t}\n\t}\n\n\tremoveView(location: number[], sizing?: Sizing): IView {\n\t\tthis.disposable2x2.dispose();\n\t\tthis.disposable2x2 = Disposable.None;\n\n\t\tconst [rest, index] = tail(location);\n\t\tconst [pathToParent, parent] = this.getNode(rest);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tconst node = parent.children[index];\n\n\t\tif (!(node instanceof LeafNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tparent.removeChild(index, sizing);\n\n\t\tif (parent.children.length === 0) {\n\t\t\tthrow new Error('Invalid grid state');\n\t\t}\n\n\t\tif (parent.children.length > 1) {\n\t\t\treturn node.view;\n\t\t}\n\n\t\tif (pathToParent.length === 0) { // parent is root\n\t\t\tconst sibling = parent.children[0];\n\n\t\t\tif (sibling instanceof LeafNode) {\n\t\t\t\treturn node.view;\n\t\t\t}\n\n\t\t\t// we must promote sibling to be the new root\n\t\t\tparent.removeChild(0);\n\t\t\tthis.root = sibling;\n\t\t\tthis.boundarySashes = this.boundarySashes;\n\t\t\treturn node.view;\n\t\t}\n\n\t\tconst [, grandParent] = tail(pathToParent);\n\t\tconst [, parentIndex] = tail(rest);\n\n\t\tconst sibling = parent.children[0];\n\t\tconst isSiblingVisible = parent.isChildVisible(0);\n\t\tparent.removeChild(0);\n\n\t\tconst sizes = grandParent.children.map((_, i) => grandParent.getChildSize(i));\n\t\tgrandParent.removeChild(parentIndex, sizing);\n\n\t\tif (sibling instanceof BranchNode) {\n\t\t\tsizes.splice(parentIndex, 1, ...sibling.children.map(c => c.size));\n\n\t\t\tfor (let i = 0; i < sibling.children.length; i++) {\n\t\t\t\tconst child = sibling.children[i];\n\t\t\t\tgrandParent.addChild(child, child.size, parentIndex + i);\n\t\t\t}\n\t\t} else {\n\t\t\tconst newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), this.layoutController, sibling.size);\n\t\t\tconst sizing = isSiblingVisible ? sibling.orthogonalSize : Sizing.Invisible(sibling.orthogonalSize);\n\t\t\tgrandParent.addChild(newSibling, sizing, parentIndex);\n\t\t}\n\n\t\tfor (let i = 0; i < sizes.length; i++) {\n\t\t\tgrandParent.resizeChild(i, sizes[i]);\n\t\t}\n\n\t\treturn node.view;\n\t}\n\n\tmoveView(parentLocation: number[], from: number, to: number): void {\n\t\tconst [, parent] = this.getNode(parentLocation);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tparent.moveChild(from, to);\n\t}\n\n\tswapViews(from: number[], to: number[]): void {\n\t\tconst [fromRest, fromIndex] = tail(from);\n\t\tconst [, fromParent] = this.getNode(fromRest);\n\n\t\tif (!(fromParent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid from location');\n\t\t}\n\n\t\tconst fromSize = fromParent.getChildSize(fromIndex);\n\t\tconst fromNode = fromParent.children[fromIndex];\n\n\t\tif (!(fromNode instanceof LeafNode)) {\n\t\t\tthrow new Error('Invalid from location');\n\t\t}\n\n\t\tconst [toRest, toIndex] = tail(to);\n\t\tconst [, toParent] = this.getNode(toRest);\n\n\t\tif (!(toParent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid to location');\n\t\t}\n\n\t\tconst toSize = toParent.getChildSize(toIndex);\n\t\tconst toNode = toParent.children[toIndex];\n\n\t\tif (!(toNode instanceof LeafNode)) {\n\t\t\tthrow new Error('Invalid to location');\n\t\t}\n\n\t\tif (fromParent === toParent) {\n\t\t\tfromParent.swapChildren(fromIndex, toIndex);\n\t\t} else {\n\t\t\tfromParent.removeChild(fromIndex);\n\t\t\ttoParent.removeChild(toIndex);\n\n\t\t\tfromParent.addChild(toNode, fromSize, fromIndex);\n\t\t\ttoParent.addChild(fromNode, toSize, toIndex);\n\t\t}\n\t}\n\n\tresizeView(location: number[], { width, height }: Partial<IViewSize>): void {\n\t\tconst [rest, index] = tail(location);\n\t\tconst [pathToParent, parent] = this.getNode(rest);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tif (!width && !height) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [parentSize, grandParentSize] = parent.orientation === Orientation.HORIZONTAL ? [width, height] : [height, width];\n\n\t\tif (typeof grandParentSize === 'number' && pathToParent.length > 0) {\n\t\t\tconst [, grandParent] = tail(pathToParent);\n\t\t\tconst [, parentIndex] = tail(rest);\n\n\t\t\tgrandParent.resizeChild(parentIndex, grandParentSize);\n\t\t}\n\n\t\tif (typeof parentSize === 'number') {\n\t\t\tparent.resizeChild(index, parentSize);\n\t\t}\n\t}\n\n\tgetViewSize(location?: number[]): IViewSize {\n\t\tif (!location) {\n\t\t\treturn { width: this.root.width, height: this.root.height };\n\t\t}\n\n\t\tconst [, node] = this.getNode(location);\n\t\treturn { width: node.width, height: node.height };\n\t}\n\n\tgetViewCachedVisibleSize(location: number[]): number | undefined {\n\t\tconst [rest, index] = tail(location);\n\t\tconst [, parent] = this.getNode(rest);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\treturn parent.getChildCachedVisibleSize(index);\n\t}\n\n\tmaximizeViewSize(location: number[]): void {\n\t\tconst [ancestors, node] = this.getNode(location);\n\n\t\tif (!(node instanceof LeafNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tfor (let i = 0; i < ancestors.length; i++) {\n\t\t\tancestors[i].resizeChild(location[i], Number.POSITIVE_INFINITY);\n\t\t}\n\t}\n\n\tdistributeViewSizes(location?: number[]): void {\n\t\tif (!location) {\n\t\t\tthis.root.distributeViewSizes(true);\n\t\t\treturn;\n\t\t}\n\n\t\tconst [, node] = this.getNode(location);\n\n\t\tif (!(node instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tnode.distributeViewSizes();\n\t}\n\n\tisViewVisible(location: number[]): boolean {\n\t\tconst [rest, index] = tail(location);\n\t\tconst [, parent] = this.getNode(rest);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid from location');\n\t\t}\n\n\t\treturn parent.isChildVisible(index);\n\t}\n\n\tsetViewVisible(location: number[], visible: boolean): void {\n\t\tconst [rest, index] = tail(location);\n\t\tconst [, parent] = this.getNode(rest);\n\n\t\tif (!(parent instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid from location');\n\t\t}\n\n\t\tparent.setChildVisible(index, visible);\n\t}\n\n\tgetView(): GridBranchNode;\n\tgetView(location?: number[]): GridNode;\n\tgetView(location?: number[]): GridNode {\n\t\tconst node = location ? this.getNode(location)[1] : this._root;\n\t\treturn this._getViews(node, this.orientation);\n\t}\n\n\tstatic deserialize<T extends ISerializableView>(json: ISerializedGridView, deserializer: IViewDeserializer<T>, options: IGridViewOptions = {}): GridView {\n\t\tif (typeof json.orientation !== 'number') {\n\t\t\tthrow new Error('Invalid JSON: \\'orientation\\' property must be a number.');\n\t\t} else if (typeof json.width !== 'number') {\n\t\t\tthrow new Error('Invalid JSON: \\'width\\' property must be a number.');\n\t\t} else if (typeof json.height !== 'number') {\n\t\t\tthrow new Error('Invalid JSON: \\'height\\' property must be a number.');\n\t\t} else if (json.root?.type !== 'branch') {\n\t\t\tthrow new Error('Invalid JSON: \\'root\\' property must have \\'type\\' value of branch.');\n\t\t}\n\n\t\tconst orientation = json.orientation;\n\t\tconst height = json.height;\n\n\t\tconst result = new GridView(options);\n\t\tresult._deserialize(json.root as ISerializedBranchNode, orientation, deserializer, height);\n\n\t\treturn result;\n\t}\n\n\tprivate _deserialize(root: ISerializedBranchNode, orientation: Orientation, deserializer: IViewDeserializer<ISerializableView>, orthogonalSize: number): void {\n\t\tthis.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize) as BranchNode;\n\t}\n\n\tprivate _deserializeNode(node: ISerializedNode, orientation: Orientation, deserializer: IViewDeserializer<ISerializableView>, orthogonalSize: number): Node {\n\t\tlet result: Node;\n\t\tif (node.type === 'branch') {\n\t\t\tconst serializedChildren = node.data as ISerializedNode[];\n\t\t\tconst children = serializedChildren.map(serializedChild => {\n\t\t\t\treturn {\n\t\t\t\t\tnode: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n\t\t\t\t\tvisible: (serializedChild as { visible?: boolean }).visible\n\t\t\t\t} as INodeDescriptor;\n\t\t\t});\n\n\t\t\tresult = new BranchNode(orientation, this.layoutController, this.styles, this.proportionalLayout, node.size, orthogonalSize, undefined, children);\n\t\t} else {\n\t\t\tresult = new LeafNode(deserializer.fromJSON(node.data), orientation, this.layoutController, orthogonalSize, node.size);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _getViews(node: Node, orientation: Orientation, cachedVisibleSize?: number): GridNode {\n\t\tconst box = { top: node.top, left: node.left, width: node.width, height: node.height };\n\n\t\tif (node instanceof LeafNode) {\n\t\t\treturn { view: node.view, box, cachedVisibleSize };\n\t\t}\n\n\t\tconst children: GridNode[] = [];\n\n\t\tfor (let i = 0; i < node.children.length; i++) {\n\t\t\tconst child = node.children[i];\n\t\t\tconst cachedVisibleSize = node.getChildCachedVisibleSize(i);\n\n\t\t\tchildren.push(this._getViews(child, orthogonal(orientation), cachedVisibleSize));\n\t\t}\n\n\t\treturn { children, box };\n\t}\n\n\tprivate getNode(location: number[], node: Node = this.root, path: BranchNode[] = []): [BranchNode[], Node] {\n\t\tif (location.length === 0) {\n\t\t\treturn [path, node];\n\t\t}\n\n\t\tif (!(node instanceof BranchNode)) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tconst [index, ...rest] = location;\n\n\t\tif (index < 0 || index >= node.children.length) {\n\t\t\tthrow new Error('Invalid location');\n\t\t}\n\n\t\tconst child = node.children[index];\n\t\tpath.push(node);\n\n\t\treturn this.getNode(rest, child, path);\n\t}\n\n\ttrySet2x2(): void {\n\t\tthis.disposable2x2.dispose();\n\t\tthis.disposable2x2 = Disposable.None;\n\n\t\tif (this.root.children.length !== 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [first, second] = this.root.children;\n\n\t\tif (!(first instanceof BranchNode) || !(second instanceof BranchNode)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.disposable2x2 = first.trySet2x2(second);\n\t}\n\n\tdispose(): void {\n\t\tthis.onDidSashResetRelay.dispose();\n\t\tthis.root.dispose();\n\n\t\tif (this.element && this.element.parentElement) {\n\t\t\tthis.element.parentElement.removeChild(this.element);\n\t\t}\n\t}\n}\n"]}