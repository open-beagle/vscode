{"version":3,"sources":["vs/base/browser/ui/findinput/findInputCheckboxes.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAehG,MAAM,iCAAiC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAY,CAAC,CAAC;IACxF,MAAM,6BAA6B,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAkB,CAAC,CAAC;IAC3F,MAAM,wBAAwB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAwB,CAAC,CAAC;IAE5F,MAAa,qBAAsB,SAAQ,mBAAQ;QAClD,YAAY,IAA4B;YACvC,KAAK,CAAC;gBACL,IAAI,EAAE,kBAAO,CAAC,aAAa;gBAC3B,KAAK,EAAE,iCAAiC,GAAG,IAAI,CAAC,WAAW;gBAC3D,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;gBACrD,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;gBAC7D,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;aAC7D,CAAC,CAAC;QACJ,CAAC;KACD;IAXD,sDAWC;IAED,MAAa,kBAAmB,SAAQ,mBAAQ;QAC/C,YAAY,IAA4B;YACvC,KAAK,CAAC;gBACL,IAAI,EAAE,kBAAO,CAAC,SAAS;gBACvB,KAAK,EAAE,6BAA6B,GAAG,IAAI,CAAC,WAAW;gBACvD,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;gBACrD,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;gBAC7D,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;aAC7D,CAAC,CAAC;QACJ,CAAC;KACD;IAXD,gDAWC;IAED,MAAa,aAAc,SAAQ,mBAAQ;QAC1C,YAAY,IAA4B;YACvC,KAAK,CAAC;gBACL,IAAI,EAAE,kBAAO,CAAC,KAAK;gBACnB,KAAK,EAAE,wBAAwB,GAAG,IAAI,CAAC,WAAW;gBAClD,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;gBACrD,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;gBAC7D,2BAA2B,EAAE,IAAI,CAAC,2BAA2B;aAC7D,CAAC,CAAC;QACJ,CAAC;KACD;IAXD,sCAWC","file":"findInputCheckboxes.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Checkbox } from 'vs/base/browser/ui/checkbox/checkbox';\nimport { Color } from 'vs/base/common/color';\nimport * as nls from 'vs/nls';\nimport { Codicon } from 'vs/base/common/codicons';\n\nexport interface IFindInputCheckboxOpts {\n\treadonly appendTitle: string;\n\treadonly isChecked: boolean;\n\treadonly inputActiveOptionBorder?: Color;\n\treadonly inputActiveOptionForeground?: Color;\n\treadonly inputActiveOptionBackground?: Color;\n}\n\nconst NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\nconst NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\nconst NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\n\nexport class CaseSensitiveCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\ticon: Codicon.caseSensitive,\n\t\t\ttitle: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder,\n\t\t\tinputActiveOptionForeground: opts.inputActiveOptionForeground,\n\t\t\tinputActiveOptionBackground: opts.inputActiveOptionBackground\n\t\t});\n\t}\n}\n\nexport class WholeWordsCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\ticon: Codicon.wholeWord,\n\t\t\ttitle: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder,\n\t\t\tinputActiveOptionForeground: opts.inputActiveOptionForeground,\n\t\t\tinputActiveOptionBackground: opts.inputActiveOptionBackground\n\t\t});\n\t}\n}\n\nexport class RegexCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\ticon: Codicon.regex,\n\t\t\ttitle: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder,\n\t\t\tinputActiveOptionForeground: opts.inputActiveOptionForeground,\n\t\t\tinputActiveOptionBackground: opts.inputActiveOptionBackground\n\t\t});\n\t}\n}\n"]}