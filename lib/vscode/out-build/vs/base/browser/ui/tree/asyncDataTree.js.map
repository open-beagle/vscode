{"version":3,"file":"asyncDataTree.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/ui/tree/asyncDataTree.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ComposedTreeDelegate, IAbstractTreeOptions, IAbstractTreeOptionsUpdate } from 'vs/base/browser/ui/tree/abstractTree';\nimport { ObjectTree, IObjectTreeOptions, CompressibleObjectTree, ICompressibleTreeRenderer, ICompressibleKeyboardNavigationLabelProvider, ICompressibleObjectTreeOptions, IObjectTreeSetChildrenOptions } from 'vs/base/browser/ui/tree/objectTree';\nimport { IListVirtualDelegate, IIdentityProvider, IListDragAndDrop, IListDragOverReaction } from 'vs/base/browser/ui/list/list';\nimport { ITreeElement, ITreeNode, ITreeRenderer, ITreeEvent, ITreeMouseEvent, ITreeContextMenuEvent, ITreeSorter, ICollapseStateChangeEvent, IAsyncDataSource, ITreeDragAndDrop, TreeError, WeakMapper, ITreeFilter, TreeVisibility, TreeFilterResult } from 'vs/base/browser/ui/tree/tree';\nimport { IDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { timeout, CancelablePromise, createCancelablePromise, Promises } from 'vs/base/common/async';\nimport { IListStyles } from 'vs/base/browser/ui/list/listWidget';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { IDragAndDropData } from 'vs/base/browser/dnd';\nimport { ElementsDragAndDropData } from 'vs/base/browser/ui/list/listView';\nimport { isPromiseCanceledError, onUnexpectedError } from 'vs/base/common/errors';\nimport { ScrollEvent } from 'vs/base/common/scrollable';\nimport { ICompressedTreeNode, ICompressedTreeElement } from 'vs/base/browser/ui/tree/compressedObjectTreeModel';\nimport { IThemable } from 'vs/base/common/styler';\nimport { isFilterResult, getVisibleState } from 'vs/base/browser/ui/tree/indexTreeModel';\nimport { treeItemLoadingIcon } from 'vs/base/browser/ui/tree/treeIcons';\n\ninterface IAsyncDataTreeNode<TInput, T> {\n\telement: TInput | T;\n\treadonly parent: IAsyncDataTreeNode<TInput, T> | null;\n\treadonly children: IAsyncDataTreeNode<TInput, T>[];\n\treadonly id?: string | null;\n\trefreshPromise: Promise<void> | undefined;\n\thasChildren: boolean;\n\tstale: boolean;\n\tslow: boolean;\n\tcollapsedByDefault: boolean | undefined;\n}\n\ninterface IAsyncDataTreeNodeRequiredProps<TInput, T> extends Partial<IAsyncDataTreeNode<TInput, T>> {\n\treadonly element: TInput | T;\n\treadonly parent: IAsyncDataTreeNode<TInput, T> | null;\n\treadonly hasChildren: boolean;\n}\n\nfunction createAsyncDataTreeNode<TInput, T>(props: IAsyncDataTreeNodeRequiredProps<TInput, T>): IAsyncDataTreeNode<TInput, T> {\n\treturn {\n\t\t...props,\n\t\tchildren: [],\n\t\trefreshPromise: undefined,\n\t\tstale: true,\n\t\tslow: false,\n\t\tcollapsedByDefault: undefined\n\t};\n}\n\nfunction isAncestor<TInput, T>(ancestor: IAsyncDataTreeNode<TInput, T>, descendant: IAsyncDataTreeNode<TInput, T>): boolean {\n\tif (!descendant.parent) {\n\t\treturn false;\n\t} else if (descendant.parent === ancestor) {\n\t\treturn true;\n\t} else {\n\t\treturn isAncestor(ancestor, descendant.parent);\n\t}\n}\n\nfunction intersects<TInput, T>(node: IAsyncDataTreeNode<TInput, T>, other: IAsyncDataTreeNode<TInput, T>): boolean {\n\treturn node === other || isAncestor(node, other) || isAncestor(other, node);\n}\n\ninterface IDataTreeListTemplateData<T> {\n\ttemplateData: T;\n}\n\ntype AsyncDataTreeNodeMapper<TInput, T, TFilterData> = WeakMapper<ITreeNode<IAsyncDataTreeNode<TInput, T> | null, TFilterData>, ITreeNode<TInput | T, TFilterData>>;\n\nclass AsyncDataTreeNodeWrapper<TInput, T, TFilterData> implements ITreeNode<TInput | T, TFilterData> {\n\n\tget element(): T { return this.node.element!.element as T; }\n\tget children(): ITreeNode<T, TFilterData>[] { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n\tget depth(): number { return this.node.depth; }\n\tget visibleChildrenCount(): number { return this.node.visibleChildrenCount; }\n\tget visibleChildIndex(): number { return this.node.visibleChildIndex; }\n\tget collapsible(): boolean { return this.node.collapsible; }\n\tget collapsed(): boolean { return this.node.collapsed; }\n\tget visible(): boolean { return this.node.visible; }\n\tget filterData(): TFilterData | undefined { return this.node.filterData; }\n\n\tconstructor(private node: ITreeNode<IAsyncDataTreeNode<TInput, T> | null, TFilterData>) { }\n}\n\nclass AsyncDataTreeRenderer<TInput, T, TFilterData, TTemplateData> implements ITreeRenderer<IAsyncDataTreeNode<TInput, T>, TFilterData, IDataTreeListTemplateData<TTemplateData>> {\n\n\treadonly templateId: string;\n\tprivate renderedNodes = new Map<IAsyncDataTreeNode<TInput, T>, IDataTreeListTemplateData<TTemplateData>>();\n\n\tconstructor(\n\t\tprotected renderer: ITreeRenderer<T, TFilterData, TTemplateData>,\n\t\tprotected nodeMapper: AsyncDataTreeNodeMapper<TInput, T, TFilterData>,\n\t\treadonly onDidChangeTwistieState: Event<IAsyncDataTreeNode<TInput, T>>\n\t) {\n\t\tthis.templateId = renderer.templateId;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataTreeListTemplateData<TTemplateData> {\n\t\tconst templateData = this.renderer.renderTemplate(container);\n\t\treturn { templateData };\n\t}\n\n\trenderElement(node: ITreeNode<IAsyncDataTreeNode<TInput, T>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tthis.renderer.renderElement(this.nodeMapper.map(node) as ITreeNode<T, TFilterData>, index, templateData.templateData, height);\n\t}\n\n\trenderTwistie(element: IAsyncDataTreeNode<TInput, T>, twistieElement: HTMLElement): boolean {\n\t\tif (element.slow) {\n\t\t\ttwistieElement.classList.add(...treeItemLoadingIcon.classNamesArray);\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttwistieElement.classList.remove(...treeItemLoadingIcon.classNamesArray);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisposeElement(node: ITreeNode<IAsyncDataTreeNode<TInput, T>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tif (this.renderer.disposeElement) {\n\t\t\tthis.renderer.disposeElement(this.nodeMapper.map(node) as ITreeNode<T, TFilterData>, index, templateData.templateData, height);\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IDataTreeListTemplateData<TTemplateData>): void {\n\t\tthis.renderer.disposeTemplate(templateData.templateData);\n\t}\n\n\tdispose(): void {\n\t\tthis.renderedNodes.clear();\n\t}\n}\n\nfunction asTreeEvent<TInput, T>(e: ITreeEvent<IAsyncDataTreeNode<TInput, T> | null>): ITreeEvent<T> {\n\treturn {\n\t\tbrowserEvent: e.browserEvent,\n\t\telements: e.elements.map(e => e!.element as T)\n\t};\n}\n\nfunction asTreeMouseEvent<TInput, T>(e: ITreeMouseEvent<IAsyncDataTreeNode<TInput, T> | null>): ITreeMouseEvent<T> {\n\treturn {\n\t\tbrowserEvent: e.browserEvent,\n\t\telement: e.element && e.element.element as T,\n\t\ttarget: e.target\n\t};\n}\n\nfunction asTreeContextMenuEvent<TInput, T>(e: ITreeContextMenuEvent<IAsyncDataTreeNode<TInput, T> | null>): ITreeContextMenuEvent<T> {\n\treturn {\n\t\tbrowserEvent: e.browserEvent,\n\t\telement: e.element && e.element.element as T,\n\t\tanchor: e.anchor\n\t};\n}\n\nclass AsyncDataTreeElementsDragAndDropData<TInput, T, TContext> extends ElementsDragAndDropData<T, TContext> {\n\n\toverride set context(context: TContext | undefined) {\n\t\tthis.data.context = context;\n\t}\n\n\toverride get context(): TContext | undefined {\n\t\treturn this.data.context;\n\t}\n\n\tconstructor(private data: ElementsDragAndDropData<IAsyncDataTreeNode<TInput, T>, TContext>) {\n\t\tsuper(data.elements.map(node => node.element as T));\n\t}\n}\n\nfunction asAsyncDataTreeDragAndDropData<TInput, T>(data: IDragAndDropData): IDragAndDropData {\n\tif (data instanceof ElementsDragAndDropData) {\n\t\treturn new AsyncDataTreeElementsDragAndDropData(data);\n\t}\n\n\treturn data;\n}\n\nclass AsyncDataTreeNodeListDragAndDrop<TInput, T> implements IListDragAndDrop<IAsyncDataTreeNode<TInput, T>> {\n\n\tconstructor(private dnd: ITreeDragAndDrop<T>) { }\n\n\tgetDragURI(node: IAsyncDataTreeNode<TInput, T>): string | null {\n\t\treturn this.dnd.getDragURI(node.element as T);\n\t}\n\n\tgetDragLabel(nodes: IAsyncDataTreeNode<TInput, T>[], originalEvent: DragEvent): string | undefined {\n\t\tif (this.dnd.getDragLabel) {\n\t\t\treturn this.dnd.getDragLabel(nodes.map(node => node.element as T), originalEvent);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tif (this.dnd.onDragStart) {\n\t\t\tthis.dnd.onDragStart(asAsyncDataTreeDragAndDropData(data), originalEvent);\n\t\t}\n\t}\n\n\tonDragOver(data: IDragAndDropData, targetNode: IAsyncDataTreeNode<TInput, T> | undefined, targetIndex: number | undefined, originalEvent: DragEvent, raw = true): boolean | IListDragOverReaction {\n\t\treturn this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element as T, targetIndex, originalEvent);\n\t}\n\n\tdrop(data: IDragAndDropData, targetNode: IAsyncDataTreeNode<TInput, T> | undefined, targetIndex: number | undefined, originalEvent: DragEvent): void {\n\t\tthis.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element as T, targetIndex, originalEvent);\n\t}\n\n\tonDragEnd(originalEvent: DragEvent): void {\n\t\tif (this.dnd.onDragEnd) {\n\t\t\tthis.dnd.onDragEnd(originalEvent);\n\t\t}\n\t}\n}\n\nfunction asObjectTreeOptions<TInput, T, TFilterData>(options?: IAsyncDataTreeOptions<T, TFilterData>): IObjectTreeOptions<IAsyncDataTreeNode<TInput, T>, TFilterData> | undefined {\n\treturn options && {\n\t\t...options,\n\t\tcollapseByDefault: true,\n\t\tidentityProvider: options.identityProvider && {\n\t\t\tgetId(el) {\n\t\t\t\treturn options.identityProvider!.getId(el.element as T);\n\t\t\t}\n\t\t},\n\t\tdnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd),\n\t\tmultipleSelectionController: options.multipleSelectionController && {\n\t\t\tisSelectionSingleChangeEvent(e) {\n\t\t\t\treturn options.multipleSelectionController!.isSelectionSingleChangeEvent({ ...e, element: e.element } as any);\n\t\t\t},\n\t\t\tisSelectionRangeChangeEvent(e) {\n\t\t\t\treturn options.multipleSelectionController!.isSelectionRangeChangeEvent({ ...e, element: e.element } as any);\n\t\t\t}\n\t\t},\n\t\taccessibilityProvider: options.accessibilityProvider && {\n\t\t\t...options.accessibilityProvider,\n\t\t\tgetPosInSet: undefined,\n\t\t\tgetSetSize: undefined,\n\t\t\tgetRole: options.accessibilityProvider!.getRole ? (el) => {\n\t\t\t\treturn options.accessibilityProvider!.getRole!(el.element as T);\n\t\t\t} : () => 'treeitem',\n\t\t\tisChecked: options.accessibilityProvider!.isChecked ? (e) => {\n\t\t\t\treturn !!(options.accessibilityProvider?.isChecked!(e.element as T));\n\t\t\t} : undefined,\n\t\t\tgetAriaLabel(e) {\n\t\t\t\treturn options.accessibilityProvider!.getAriaLabel(e.element as T);\n\t\t\t},\n\t\t\tgetWidgetAriaLabel() {\n\t\t\t\treturn options.accessibilityProvider!.getWidgetAriaLabel();\n\t\t\t},\n\t\t\tgetWidgetRole: options.accessibilityProvider!.getWidgetRole ? () => options.accessibilityProvider!.getWidgetRole!() : () => 'tree',\n\t\t\tgetAriaLevel: options.accessibilityProvider!.getAriaLevel && (node => {\n\t\t\t\treturn options.accessibilityProvider!.getAriaLevel!(node.element as T);\n\t\t\t}),\n\t\t\tgetActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n\t\t\t\treturn options.accessibilityProvider!.getActiveDescendantId!(node.element as T);\n\t\t\t})\n\t\t},\n\t\tfilter: options.filter && {\n\t\t\tfilter(e, parentVisibility) {\n\t\t\t\treturn options.filter!.filter(e.element as T, parentVisibility);\n\t\t\t}\n\t\t},\n\t\tkeyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n\t\t\t...options.keyboardNavigationLabelProvider,\n\t\t\tgetKeyboardNavigationLabel(e) {\n\t\t\t\treturn options.keyboardNavigationLabelProvider!.getKeyboardNavigationLabel(e.element as T);\n\t\t\t}\n\t\t},\n\t\tsorter: undefined,\n\t\texpandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (\n\t\t\ttypeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (\n\t\t\t\te => (options.expandOnlyOnTwistieClick as ((e: T) => boolean))(e.element as T)\n\t\t\t)\n\t\t),\n\t\tadditionalScrollHeight: options.additionalScrollHeight\n\t};\n}\n\nexport interface IAsyncDataTreeOptionsUpdate extends IAbstractTreeOptionsUpdate { }\nexport interface IAsyncDataTreeUpdateChildrenOptions<T> extends IObjectTreeSetChildrenOptions<T> { }\n\nexport interface IAsyncDataTreeOptions<T, TFilterData = void> extends IAsyncDataTreeOptionsUpdate, Pick<IAbstractTreeOptions<T, TFilterData>, Exclude<keyof IAbstractTreeOptions<T, TFilterData>, 'collapseByDefault'>> {\n\treadonly collapseByDefault?: { (e: T): boolean; };\n\treadonly identityProvider?: IIdentityProvider<T>;\n\treadonly sorter?: ITreeSorter<T>;\n\treadonly autoExpandSingleChildren?: boolean;\n}\n\nexport interface IAsyncDataTreeViewState {\n\treadonly focus?: string[];\n\treadonly selection?: string[];\n\treadonly expanded?: string[];\n\treadonly scrollTop?: number;\n}\n\ninterface IAsyncDataTreeViewStateContext<TInput, T> {\n\treadonly viewState: IAsyncDataTreeViewState;\n\treadonly selection: IAsyncDataTreeNode<TInput, T>[];\n\treadonly focus: IAsyncDataTreeNode<TInput, T>[];\n}\n\nfunction dfs<TInput, T>(node: IAsyncDataTreeNode<TInput, T>, fn: (node: IAsyncDataTreeNode<TInput, T>) => void): void {\n\tfn(node);\n\tnode.children.forEach(child => dfs(child, fn));\n}\n\nexport class AsyncDataTree<TInput, T, TFilterData = void> implements IDisposable, IThemable {\n\n\tprotected readonly tree: ObjectTree<IAsyncDataTreeNode<TInput, T>, TFilterData>;\n\tprotected readonly root: IAsyncDataTreeNode<TInput, T>;\n\tprivate readonly nodes = new Map<null | T, IAsyncDataTreeNode<TInput, T>>();\n\tprivate readonly sorter?: ITreeSorter<T>;\n\tprivate readonly collapseByDefault?: { (e: T): boolean; };\n\n\tprivate readonly subTreeRefreshPromises = new Map<IAsyncDataTreeNode<TInput, T>, Promise<void>>();\n\tprivate readonly refreshPromises = new Map<IAsyncDataTreeNode<TInput, T>, CancelablePromise<Iterable<T>>>();\n\n\tprotected readonly identityProvider?: IIdentityProvider<T>;\n\tprivate readonly autoExpandSingleChildren: boolean;\n\n\tprivate readonly _onDidRender = new Emitter<void>();\n\tprotected readonly _onDidChangeNodeSlowState = new Emitter<IAsyncDataTreeNode<TInput, T>>();\n\n\tprotected readonly nodeMapper: AsyncDataTreeNodeMapper<TInput, T, TFilterData> = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n\n\tprotected readonly disposables = new DisposableStore();\n\n\tget onDidScroll(): Event<ScrollEvent> { return this.tree.onDidScroll; }\n\n\tget onDidChangeFocus(): Event<ITreeEvent<T>> { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n\tget onDidChangeSelection(): Event<ITreeEvent<T>> { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n\n\tget onKeyDown(): Event<KeyboardEvent> { return this.tree.onKeyDown; }\n\tget onMouseClick(): Event<ITreeMouseEvent<T>> { return Event.map(this.tree.onMouseClick, asTreeMouseEvent); }\n\tget onMouseDblClick(): Event<ITreeMouseEvent<T>> { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n\tget onContextMenu(): Event<ITreeContextMenuEvent<T>> { return Event.map(this.tree.onContextMenu, asTreeContextMenuEvent); }\n\tget onTap(): Event<ITreeMouseEvent<T>> { return Event.map(this.tree.onTap, asTreeMouseEvent); }\n\tget onPointer(): Event<ITreeMouseEvent<T>> { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n\tget onDidFocus(): Event<void> { return this.tree.onDidFocus; }\n\tget onDidBlur(): Event<void> { return this.tree.onDidBlur; }\n\n\tget onDidChangeCollapseState(): Event<ICollapseStateChangeEvent<IAsyncDataTreeNode<TInput, T> | null, TFilterData>> { return this.tree.onDidChangeCollapseState; }\n\n\tget onDidUpdateOptions(): Event<IAsyncDataTreeOptionsUpdate> { return this.tree.onDidUpdateOptions; }\n\n\tget filterOnType(): boolean { return this.tree.filterOnType; }\n\tget expandOnlyOnTwistieClick(): boolean | ((e: T) => boolean) {\n\t\tif (typeof this.tree.expandOnlyOnTwistieClick === 'boolean') {\n\t\t\treturn this.tree.expandOnlyOnTwistieClick;\n\t\t}\n\n\t\tconst fn = this.tree.expandOnlyOnTwistieClick;\n\t\treturn element => fn(this.nodes.get((element === this.root.element ? null : element) as T) || null);\n\t}\n\n\tget onDidDispose(): Event<void> { return this.tree.onDidDispose; }\n\n\tconstructor(\n\t\tprotected user: string,\n\t\tcontainer: HTMLElement,\n\t\tdelegate: IListVirtualDelegate<T>,\n\t\trenderers: ITreeRenderer<T, TFilterData, any>[],\n\t\tprivate dataSource: IAsyncDataSource<TInput, T>,\n\t\toptions: IAsyncDataTreeOptions<T, TFilterData> = {}\n\t) {\n\t\tthis.identityProvider = options.identityProvider;\n\t\tthis.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n\t\tthis.sorter = options.sorter;\n\t\tthis.collapseByDefault = options.collapseByDefault;\n\n\t\tthis.tree = this.createTree(user, container, delegate, renderers, options);\n\n\t\tthis.root = createAsyncDataTreeNode({\n\t\t\telement: undefined!,\n\t\t\tparent: null,\n\t\t\thasChildren: true\n\t\t});\n\n\t\tif (this.identityProvider) {\n\t\t\tthis.root = {\n\t\t\t\t...this.root,\n\t\t\t\tid: null\n\t\t\t};\n\t\t}\n\n\t\tthis.nodes.set(null, this.root);\n\n\t\tthis.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n\t}\n\n\tprotected createTree(\n\t\tuser: string,\n\t\tcontainer: HTMLElement,\n\t\tdelegate: IListVirtualDelegate<T>,\n\t\trenderers: ITreeRenderer<T, TFilterData, any>[],\n\t\toptions: IAsyncDataTreeOptions<T, TFilterData>\n\t): ObjectTree<IAsyncDataTreeNode<TInput, T>, TFilterData> {\n\t\tconst objectTreeDelegate = new ComposedTreeDelegate<TInput | T, IAsyncDataTreeNode<TInput, T>>(delegate);\n\t\tconst objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n\t\tconst objectTreeOptions = asObjectTreeOptions<TInput, T, TFilterData>(options) || {};\n\n\t\treturn new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n\t}\n\n\tupdateOptions(options: IAsyncDataTreeOptionsUpdate = {}): void {\n\t\tthis.tree.updateOptions(options);\n\t}\n\n\tget options(): IAsyncDataTreeOptions<T, TFilterData> {\n\t\treturn this.tree.options as IAsyncDataTreeOptions<T, TFilterData>;\n\t}\n\n\t// Widget\n\n\tgetHTMLElement(): HTMLElement {\n\t\treturn this.tree.getHTMLElement();\n\t}\n\n\tget contentHeight(): number {\n\t\treturn this.tree.contentHeight;\n\t}\n\n\tget onDidChangeContentHeight(): Event<number> {\n\t\treturn this.tree.onDidChangeContentHeight;\n\t}\n\n\tget scrollTop(): number {\n\t\treturn this.tree.scrollTop;\n\t}\n\n\tset scrollTop(scrollTop: number) {\n\t\tthis.tree.scrollTop = scrollTop;\n\t}\n\n\tget scrollLeft(): number {\n\t\treturn this.tree.scrollLeft;\n\t}\n\n\tset scrollLeft(scrollLeft: number) {\n\t\tthis.tree.scrollLeft = scrollLeft;\n\t}\n\n\tget scrollHeight(): number {\n\t\treturn this.tree.scrollHeight;\n\t}\n\n\tget renderHeight(): number {\n\t\treturn this.tree.renderHeight;\n\t}\n\n\tget lastVisibleElement(): T {\n\t\treturn this.tree.lastVisibleElement!.element as T;\n\t}\n\n\tget ariaLabel(): string {\n\t\treturn this.tree.ariaLabel;\n\t}\n\n\tset ariaLabel(value: string) {\n\t\tthis.tree.ariaLabel = value;\n\t}\n\n\tdomFocus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tlayout(height?: number, width?: number): void {\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tstyle(styles: IListStyles): void {\n\t\tthis.tree.style(styles);\n\t}\n\n\t// Model\n\n\tgetInput(): TInput | undefined {\n\t\treturn this.root.element as TInput;\n\t}\n\n\tasync setInput(input: TInput, viewState?: IAsyncDataTreeViewState): Promise<void> {\n\t\tthis.refreshPromises.forEach(promise => promise.cancel());\n\t\tthis.refreshPromises.clear();\n\n\t\tthis.root.element = input!;\n\n\t\tconst viewStateContext = viewState && { viewState, focus: [], selection: [] } as IAsyncDataTreeViewStateContext<TInput, T>;\n\n\t\tawait this._updateChildren(input, true, false, viewStateContext);\n\n\t\tif (viewStateContext) {\n\t\t\tthis.tree.setFocus(viewStateContext.focus);\n\t\t\tthis.tree.setSelection(viewStateContext.selection);\n\t\t}\n\n\t\tif (viewState && typeof viewState.scrollTop === 'number') {\n\t\t\tthis.scrollTop = viewState.scrollTop;\n\t\t}\n\t}\n\n\tasync updateChildren(element: TInput | T = this.root.element, recursive = true, rerender = false, options?: IAsyncDataTreeUpdateChildrenOptions<T>): Promise<void> {\n\t\tawait this._updateChildren(element, recursive, rerender, undefined, options);\n\t}\n\n\tprivate async _updateChildren(element: TInput | T = this.root.element, recursive = true, rerender = false, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>, options?: IAsyncDataTreeUpdateChildrenOptions<T>): Promise<void> {\n\t\tif (typeof this.root.element === 'undefined') {\n\t\t\tthrow new TreeError(this.user, 'Tree input not set');\n\t\t}\n\n\t\tif (this.root.refreshPromise) {\n\t\t\tawait this.root.refreshPromise;\n\t\t\tawait Event.toPromise(this._onDidRender.event);\n\t\t}\n\n\t\tconst node = this.getDataNode(element);\n\t\tawait this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n\n\t\tif (rerender) {\n\t\t\ttry {\n\t\t\t\tthis.tree.rerender(node);\n\t\t\t} catch {\n\t\t\t\t// missing nodes are fine, this could've resulted from\n\t\t\t\t// parallel refresh calls, removing `node` altogether\n\t\t\t}\n\t\t}\n\t}\n\n\tresort(element: TInput | T = this.root.element, recursive = true): void {\n\t\tthis.tree.resort(this.getDataNode(element), recursive);\n\t}\n\n\thasNode(element: TInput | T): boolean {\n\t\treturn element === this.root.element || this.nodes.has(element as T);\n\t}\n\n\t// View\n\n\trerender(element?: T): void {\n\t\tif (element === undefined || element === this.root.element) {\n\t\t\tthis.tree.rerender();\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = this.getDataNode(element);\n\t\tthis.tree.rerender(node);\n\t}\n\n\tupdateWidth(element: T): void {\n\t\tconst node = this.getDataNode(element);\n\t\tthis.tree.updateWidth(node);\n\t}\n\n\t// Tree\n\n\tgetNode(element: TInput | T = this.root.element): ITreeNode<TInput | T, TFilterData> {\n\t\tconst dataNode = this.getDataNode(element);\n\t\tconst node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n\t\treturn this.nodeMapper.map(node);\n\t}\n\n\tcollapse(element: T, recursive: boolean = false): boolean {\n\t\tconst node = this.getDataNode(element);\n\t\treturn this.tree.collapse(node === this.root ? null : node, recursive);\n\t}\n\n\tasync expand(element: T, recursive: boolean = false): Promise<boolean> {\n\t\tif (typeof this.root.element === 'undefined') {\n\t\t\tthrow new TreeError(this.user, 'Tree input not set');\n\t\t}\n\n\t\tif (this.root.refreshPromise) {\n\t\t\tawait this.root.refreshPromise;\n\t\t\tawait Event.toPromise(this._onDidRender.event);\n\t\t}\n\n\t\tconst node = this.getDataNode(element);\n\n\t\tif (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (node.refreshPromise) {\n\t\t\tawait this.root.refreshPromise;\n\t\t\tawait Event.toPromise(this._onDidRender.event);\n\t\t}\n\n\t\tif (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = this.tree.expand(node === this.root ? null : node, recursive);\n\n\t\tif (node.refreshPromise) {\n\t\t\tawait this.root.refreshPromise;\n\t\t\tawait Event.toPromise(this._onDidRender.event);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\ttoggleCollapsed(element: T, recursive: boolean = false): boolean {\n\t\treturn this.tree.toggleCollapsed(this.getDataNode(element), recursive);\n\t}\n\n\texpandAll(): void {\n\t\tthis.tree.expandAll();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tisCollapsible(element: T): boolean {\n\t\treturn this.tree.isCollapsible(this.getDataNode(element));\n\t}\n\n\tisCollapsed(element: TInput | T): boolean {\n\t\treturn this.tree.isCollapsed(this.getDataNode(element));\n\t}\n\n\ttoggleKeyboardNavigation(): void {\n\t\tthis.tree.toggleKeyboardNavigation();\n\t}\n\n\trefilter(): void {\n\t\tthis.tree.refilter();\n\t}\n\n\tsetAnchor(element: T | undefined): void {\n\t\tthis.tree.setAnchor(typeof element === 'undefined' ? undefined : this.getDataNode(element));\n\t}\n\n\tgetAnchor(): T | undefined {\n\t\tconst node = this.tree.getAnchor();\n\t\treturn node?.element as T;\n\t}\n\n\tsetSelection(elements: T[], browserEvent?: UIEvent): void {\n\t\tconst nodes = elements.map(e => this.getDataNode(e));\n\t\tthis.tree.setSelection(nodes, browserEvent);\n\t}\n\n\tgetSelection(): T[] {\n\t\tconst nodes = this.tree.getSelection();\n\t\treturn nodes.map(n => n!.element as T);\n\t}\n\n\tsetFocus(elements: T[], browserEvent?: UIEvent): void {\n\t\tconst nodes = elements.map(e => this.getDataNode(e));\n\t\tthis.tree.setFocus(nodes, browserEvent);\n\t}\n\n\tfocusNext(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.tree.focusNext(n, loop, browserEvent);\n\t}\n\n\tfocusPrevious(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.tree.focusPrevious(n, loop, browserEvent);\n\t}\n\n\tfocusNextPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.tree.focusNextPage(browserEvent);\n\t}\n\n\tfocusPreviousPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.tree.focusPreviousPage(browserEvent);\n\t}\n\n\tfocusLast(browserEvent?: UIEvent): void {\n\t\tthis.tree.focusLast(browserEvent);\n\t}\n\n\tfocusFirst(browserEvent?: UIEvent): void {\n\t\tthis.tree.focusFirst(browserEvent);\n\t}\n\n\tgetFocus(): T[] {\n\t\tconst nodes = this.tree.getFocus();\n\t\treturn nodes.map(n => n!.element as T);\n\t}\n\n\treveal(element: T, relativeTop?: number): void {\n\t\tthis.tree.reveal(this.getDataNode(element), relativeTop);\n\t}\n\n\tgetRelativeTop(element: T): number | null {\n\t\treturn this.tree.getRelativeTop(this.getDataNode(element));\n\t}\n\n\t// Tree navigation\n\n\tgetParentElement(element: T): TInput | T {\n\t\tconst node = this.tree.getParentElement(this.getDataNode(element));\n\t\treturn (node && node.element)!;\n\t}\n\n\tgetFirstElementChild(element: TInput | T = this.root.element): TInput | T | undefined {\n\t\tconst dataNode = this.getDataNode(element);\n\t\tconst node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n\t\treturn (node && node.element)!;\n\t}\n\n\t// Implementation\n\n\tprivate getDataNode(element: TInput | T): IAsyncDataTreeNode<TInput, T> {\n\t\tconst node: IAsyncDataTreeNode<TInput, T> | undefined = this.nodes.get((element === this.root.element ? null : element) as T);\n\n\t\tif (!node) {\n\t\t\tthrow new TreeError(this.user, `Data tree node not found: ${element}`);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tprivate async refreshAndRenderNode(node: IAsyncDataTreeNode<TInput, T>, recursive: boolean, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>, options?: IAsyncDataTreeUpdateChildrenOptions<T>): Promise<void> {\n\t\tawait this.refreshNode(node, recursive, viewStateContext);\n\t\tthis.render(node, viewStateContext, options);\n\t}\n\n\tprivate async refreshNode(node: IAsyncDataTreeNode<TInput, T>, recursive: boolean, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): Promise<void> {\n\t\tlet result: Promise<void> | undefined;\n\n\t\tthis.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n\t\t\tif (!result && intersects(refreshNode, node)) {\n\t\t\t\tresult = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n\t\t\t}\n\t\t});\n\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.doRefreshSubTree(node, recursive, viewStateContext);\n\t}\n\n\tprivate async doRefreshSubTree(node: IAsyncDataTreeNode<TInput, T>, recursive: boolean, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): Promise<void> {\n\t\tlet done: () => void;\n\t\tnode.refreshPromise = new Promise(c => done = c);\n\t\tthis.subTreeRefreshPromises.set(node, node.refreshPromise);\n\n\t\tnode.refreshPromise.finally(() => {\n\t\t\tnode.refreshPromise = undefined;\n\t\t\tthis.subTreeRefreshPromises.delete(node);\n\t\t});\n\n\t\ttry {\n\t\t\tconst childrenToRefresh = await this.doRefreshNode(node, recursive, viewStateContext);\n\t\t\tnode.stale = false;\n\n\t\t\tawait Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n\t\t} finally {\n\t\t\tdone!();\n\t\t}\n\t}\n\n\tprivate async doRefreshNode(node: IAsyncDataTreeNode<TInput, T>, recursive: boolean, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): Promise<IAsyncDataTreeNode<TInput, T>[]> {\n\t\tnode.hasChildren = !!this.dataSource.hasChildren(node.element!);\n\n\t\tlet childrenPromise: Promise<Iterable<T>>;\n\n\t\tif (!node.hasChildren) {\n\t\t\tchildrenPromise = Promise.resolve(Iterable.empty());\n\t\t} else {\n\t\t\tconst slowTimeout = timeout(800);\n\n\t\t\tslowTimeout.then(() => {\n\t\t\t\tnode.slow = true;\n\t\t\t\tthis._onDidChangeNodeSlowState.fire(node);\n\t\t\t}, _ => null);\n\n\t\t\tchildrenPromise = this.doGetChildren(node)\n\t\t\t\t.finally(() => slowTimeout.cancel());\n\t\t}\n\n\t\ttry {\n\t\t\tconst children = await childrenPromise;\n\t\t\treturn this.setChildren(node, children, recursive, viewStateContext);\n\t\t} catch (err) {\n\t\t\tif (node !== this.root && this.tree.hasElement(node)) {\n\t\t\t\tthis.tree.collapse(node);\n\t\t\t}\n\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (node.slow) {\n\t\t\t\tnode.slow = false;\n\t\t\t\tthis._onDidChangeNodeSlowState.fire(node);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate doGetChildren(node: IAsyncDataTreeNode<TInput, T>): Promise<Iterable<T>> {\n\t\tlet result = this.refreshPromises.get(node);\n\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = createCancelablePromise(async () => {\n\t\t\tconst children = await this.dataSource.getChildren(node.element!);\n\t\t\treturn this.processChildren(children);\n\t\t});\n\n\t\tthis.refreshPromises.set(node, result);\n\n\t\treturn result.finally(() => { this.refreshPromises.delete(node); });\n\t}\n\n\tprivate _onDidChangeCollapseState({ node, deep }: ICollapseStateChangeEvent<IAsyncDataTreeNode<TInput, T> | null, any>): void {\n\t\tif (node.element === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!node.collapsed && node.element.stale) {\n\t\t\tif (deep) {\n\t\t\t\tthis.collapse(node.element.element as T);\n\t\t\t} else {\n\t\t\t\tthis.refreshAndRenderNode(node.element, false)\n\t\t\t\t\t.catch(onUnexpectedError);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setChildren(node: IAsyncDataTreeNode<TInput, T>, childrenElementsIterable: Iterable<T>, recursive: boolean, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): IAsyncDataTreeNode<TInput, T>[] {\n\t\tconst childrenElements = [...childrenElementsIterable];\n\n\t\t// perf: if the node was and still is a leaf, avoid all this hassle\n\t\tif (node.children.length === 0 && childrenElements.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst nodesToForget = new Map<T, IAsyncDataTreeNode<TInput, T>>();\n\t\tconst childrenTreeNodesById = new Map<string, { node: IAsyncDataTreeNode<TInput, T>, collapsed: boolean }>();\n\n\t\tfor (const child of node.children) {\n\t\t\tnodesToForget.set(child.element as T, child);\n\n\t\t\tif (this.identityProvider) {\n\t\t\t\tconst collapsed = this.tree.isCollapsed(child);\n\t\t\t\tchildrenTreeNodesById.set(child.id!, { node: child, collapsed });\n\t\t\t}\n\t\t}\n\n\t\tconst childrenToRefresh: IAsyncDataTreeNode<TInput, T>[] = [];\n\n\t\tconst children = childrenElements.map<IAsyncDataTreeNode<TInput, T>>(element => {\n\t\t\tconst hasChildren = !!this.dataSource.hasChildren(element);\n\n\t\t\tif (!this.identityProvider) {\n\t\t\t\tconst asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren });\n\n\t\t\t\tif (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n\t\t\t\t\tasyncDataTreeNode.collapsedByDefault = false;\n\t\t\t\t\tchildrenToRefresh.push(asyncDataTreeNode);\n\t\t\t\t}\n\n\t\t\t\treturn asyncDataTreeNode;\n\t\t\t}\n\n\t\t\tconst id = this.identityProvider.getId(element).toString();\n\t\t\tconst result = childrenTreeNodesById.get(id);\n\n\t\t\tif (result) {\n\t\t\t\tconst asyncDataTreeNode = result.node;\n\n\t\t\t\tnodesToForget.delete(asyncDataTreeNode.element as T);\n\t\t\t\tthis.nodes.delete(asyncDataTreeNode.element as T);\n\t\t\t\tthis.nodes.set(element, asyncDataTreeNode);\n\n\t\t\t\tasyncDataTreeNode.element = element;\n\t\t\t\tasyncDataTreeNode.hasChildren = hasChildren;\n\n\t\t\t\tif (recursive) {\n\t\t\t\t\tif (result.collapsed) {\n\t\t\t\t\t\tasyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element as T)));\n\t\t\t\t\t\tasyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n\t\t\t\t\t\tasyncDataTreeNode.stale = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildrenToRefresh.push(asyncDataTreeNode);\n\t\t\t\t\t}\n\t\t\t\t} else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n\t\t\t\t\tasyncDataTreeNode.collapsedByDefault = false;\n\t\t\t\t\tchildrenToRefresh.push(asyncDataTreeNode);\n\t\t\t\t}\n\n\t\t\t\treturn asyncDataTreeNode;\n\t\t\t}\n\n\t\t\tconst childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren });\n\n\t\t\tif (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n\t\t\t\tviewStateContext.focus.push(childAsyncDataTreeNode);\n\t\t\t}\n\n\t\t\tif (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n\t\t\t\tviewStateContext.selection.push(childAsyncDataTreeNode);\n\t\t\t}\n\n\t\t\tif (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n\t\t\t\tchildrenToRefresh.push(childAsyncDataTreeNode);\n\t\t\t} else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n\t\t\t\tchildAsyncDataTreeNode.collapsedByDefault = false;\n\t\t\t\tchildrenToRefresh.push(childAsyncDataTreeNode);\n\t\t\t}\n\n\t\t\treturn childAsyncDataTreeNode;\n\t\t});\n\n\t\tfor (const node of nodesToForget.values()) {\n\t\t\tdfs(node, node => this.nodes.delete(node.element as T));\n\t\t}\n\n\t\tfor (const child of children) {\n\t\t\tthis.nodes.set(child.element as T, child);\n\t\t}\n\n\t\tnode.children.splice(0, node.children.length, ...children);\n\n\t\t// TODO@joao this doesn't take filter into account\n\t\tif (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n\t\t\tchildren[0].collapsedByDefault = false;\n\t\t\tchildrenToRefresh.push(children[0]);\n\t\t}\n\n\t\treturn childrenToRefresh;\n\t}\n\n\tprotected render(node: IAsyncDataTreeNode<TInput, T>, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>, options?: IAsyncDataTreeUpdateChildrenOptions<T>): void {\n\t\tconst children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n\t\tconst objectTreeOptions: IObjectTreeSetChildrenOptions<IAsyncDataTreeNode<TInput, T>> | undefined = options && {\n\t\t\t...options,\n\t\t\tdiffIdentityProvider: options!.diffIdentityProvider && {\n\t\t\t\tgetId(node: IAsyncDataTreeNode<TInput, T>): { toString(): string; } {\n\t\t\t\t\treturn options!.diffIdentityProvider!.getId(node.element as T);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n\n\t\tif (node !== this.root) {\n\t\t\tthis.tree.setCollapsible(node, node.hasChildren);\n\t\t}\n\n\t\tthis._onDidRender.fire();\n\t}\n\n\tprotected asTreeElement(node: IAsyncDataTreeNode<TInput, T>, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): ITreeElement<IAsyncDataTreeNode<TInput, T>> {\n\t\tif (node.stale) {\n\t\t\treturn {\n\t\t\t\telement: node,\n\t\t\t\tcollapsible: node.hasChildren,\n\t\t\t\tcollapsed: true\n\t\t\t};\n\t\t}\n\n\t\tlet collapsed: boolean | undefined;\n\n\t\tif (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n\t\t\tcollapsed = false;\n\t\t} else {\n\t\t\tcollapsed = node.collapsedByDefault;\n\t\t}\n\n\t\tnode.collapsedByDefault = undefined;\n\n\t\treturn {\n\t\t\telement: node,\n\t\t\tchildren: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n\t\t\tcollapsible: node.hasChildren,\n\t\t\tcollapsed\n\t\t};\n\t}\n\n\tprotected processChildren(children: Iterable<T>): Iterable<T> {\n\t\tif (this.sorter) {\n\t\t\tchildren = [...children].sort(this.sorter.compare.bind(this.sorter));\n\t\t}\n\n\t\treturn children;\n\t}\n\n\t// view state\n\n\tgetViewState(): IAsyncDataTreeViewState {\n\t\tif (!this.identityProvider) {\n\t\t\tthrow new TreeError(this.user, 'Can\\'t get tree view state without an identity provider');\n\t\t}\n\n\t\tconst getId = (element: T) => this.identityProvider!.getId(element).toString();\n\t\tconst focus = this.getFocus().map(getId);\n\t\tconst selection = this.getSelection().map(getId);\n\n\t\tconst expanded: string[] = [];\n\t\tconst root = this.tree.getNode();\n\t\tconst stack = [root];\n\n\t\twhile (stack.length > 0) {\n\t\t\tconst node = stack.pop()!;\n\n\t\t\tif (node !== root && node.collapsible && !node.collapsed) {\n\t\t\t\texpanded.push(getId(node.element!.element as T));\n\t\t\t}\n\n\t\t\tstack.push(...node.children);\n\t\t}\n\n\t\treturn { focus, selection, expanded, scrollTop: this.scrollTop };\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\ntype CompressibleAsyncDataTreeNodeMapper<TInput, T, TFilterData> = WeakMapper<ITreeNode<ICompressedTreeNode<IAsyncDataTreeNode<TInput, T>>, TFilterData>, ITreeNode<ICompressedTreeNode<TInput | T>, TFilterData>>;\n\nclass CompressibleAsyncDataTreeNodeWrapper<TInput, T, TFilterData> implements ITreeNode<ICompressedTreeNode<TInput | T>, TFilterData> {\n\n\tget element(): ICompressedTreeNode<TInput | T> {\n\t\treturn {\n\t\t\telements: this.node.element.elements.map(e => e.element),\n\t\t\tincompressible: this.node.element.incompressible\n\t\t};\n\t}\n\n\tget children(): ITreeNode<ICompressedTreeNode<TInput | T>, TFilterData>[] { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n\tget depth(): number { return this.node.depth; }\n\tget visibleChildrenCount(): number { return this.node.visibleChildrenCount; }\n\tget visibleChildIndex(): number { return this.node.visibleChildIndex; }\n\tget collapsible(): boolean { return this.node.collapsible; }\n\tget collapsed(): boolean { return this.node.collapsed; }\n\tget visible(): boolean { return this.node.visible; }\n\tget filterData(): TFilterData | undefined { return this.node.filterData; }\n\n\tconstructor(private node: ITreeNode<ICompressedTreeNode<IAsyncDataTreeNode<TInput, T>>, TFilterData>) { }\n}\n\nclass CompressibleAsyncDataTreeRenderer<TInput, T, TFilterData, TTemplateData> implements ICompressibleTreeRenderer<IAsyncDataTreeNode<TInput, T>, TFilterData, IDataTreeListTemplateData<TTemplateData>> {\n\n\treadonly templateId: string;\n\tprivate renderedNodes = new Map<IAsyncDataTreeNode<TInput, T>, IDataTreeListTemplateData<TTemplateData>>();\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprotected renderer: ICompressibleTreeRenderer<T, TFilterData, TTemplateData>,\n\t\tprotected nodeMapper: AsyncDataTreeNodeMapper<TInput, T, TFilterData>,\n\t\tprivate compressibleNodeMapperProvider: () => CompressibleAsyncDataTreeNodeMapper<TInput, T, TFilterData>,\n\t\treadonly onDidChangeTwistieState: Event<IAsyncDataTreeNode<TInput, T>>\n\t) {\n\t\tthis.templateId = renderer.templateId;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataTreeListTemplateData<TTemplateData> {\n\t\tconst templateData = this.renderer.renderTemplate(container);\n\t\treturn { templateData };\n\t}\n\n\trenderElement(node: ITreeNode<IAsyncDataTreeNode<TInput, T>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tthis.renderer.renderElement(this.nodeMapper.map(node) as ITreeNode<T, TFilterData>, index, templateData.templateData, height);\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<IAsyncDataTreeNode<TInput, T>>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tthis.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node) as ITreeNode<ICompressedTreeNode<T>, TFilterData>, index, templateData.templateData, height);\n\t}\n\n\trenderTwistie(element: IAsyncDataTreeNode<TInput, T>, twistieElement: HTMLElement): boolean {\n\t\tif (element.slow) {\n\t\t\ttwistieElement.classList.add(...treeItemLoadingIcon.classNamesArray);\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttwistieElement.classList.remove(...treeItemLoadingIcon.classNamesArray);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisposeElement(node: ITreeNode<IAsyncDataTreeNode<TInput, T>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tif (this.renderer.disposeElement) {\n\t\t\tthis.renderer.disposeElement(this.nodeMapper.map(node) as ITreeNode<T, TFilterData>, index, templateData.templateData, height);\n\t\t}\n\t}\n\n\tdisposeCompressedElements(node: ITreeNode<ICompressedTreeNode<IAsyncDataTreeNode<TInput, T>>, TFilterData>, index: number, templateData: IDataTreeListTemplateData<TTemplateData>, height: number | undefined): void {\n\t\tif (this.renderer.disposeCompressedElements) {\n\t\t\tthis.renderer.disposeCompressedElements(this.compressibleNodeMapperProvider().map(node) as ITreeNode<ICompressedTreeNode<T>, TFilterData>, index, templateData.templateData, height);\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IDataTreeListTemplateData<TTemplateData>): void {\n\t\tthis.renderer.disposeTemplate(templateData.templateData);\n\t}\n\n\tdispose(): void {\n\t\tthis.renderedNodes.clear();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport interface ITreeCompressionDelegate<T> {\n\tisIncompressible(element: T): boolean;\n}\n\nfunction asCompressibleObjectTreeOptions<TInput, T, TFilterData>(options?: ICompressibleAsyncDataTreeOptions<T, TFilterData>): ICompressibleObjectTreeOptions<IAsyncDataTreeNode<TInput, T>, TFilterData> | undefined {\n\tconst objectTreeOptions = options && asObjectTreeOptions(options);\n\n\treturn objectTreeOptions && {\n\t\t...objectTreeOptions,\n\t\tkeyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && {\n\t\t\t...objectTreeOptions.keyboardNavigationLabelProvider,\n\t\t\tgetCompressedNodeKeyboardNavigationLabel(els) {\n\t\t\t\treturn options!.keyboardNavigationLabelProvider!.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element as T));\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport interface ICompressibleAsyncDataTreeOptions<T, TFilterData = void> extends IAsyncDataTreeOptions<T, TFilterData> {\n\treadonly compressionEnabled?: boolean;\n\treadonly keyboardNavigationLabelProvider?: ICompressibleKeyboardNavigationLabelProvider<T>;\n}\n\nexport interface ICompressibleAsyncDataTreeOptionsUpdate extends IAsyncDataTreeOptionsUpdate {\n\treadonly compressionEnabled?: boolean;\n}\n\nexport class CompressibleAsyncDataTree<TInput, T, TFilterData = void> extends AsyncDataTree<TInput, T, TFilterData> {\n\n\tprotected override readonly tree!: CompressibleObjectTree<IAsyncDataTreeNode<TInput, T>, TFilterData>;\n\tprotected readonly compressibleNodeMapper: CompressibleAsyncDataTreeNodeMapper<TInput, T, TFilterData> = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n\tprivate filter?: ITreeFilter<T, TFilterData>;\n\n\tconstructor(\n\t\tuser: string,\n\t\tcontainer: HTMLElement,\n\t\tvirtualDelegate: IListVirtualDelegate<T>,\n\t\tprivate compressionDelegate: ITreeCompressionDelegate<T>,\n\t\trenderers: ICompressibleTreeRenderer<T, TFilterData, any>[],\n\t\tdataSource: IAsyncDataSource<TInput, T>,\n\t\toptions: ICompressibleAsyncDataTreeOptions<T, TFilterData> = {}\n\t) {\n\t\tsuper(user, container, virtualDelegate, renderers, dataSource, options);\n\t\tthis.filter = options.filter;\n\t}\n\n\tprotected override createTree(\n\t\tuser: string,\n\t\tcontainer: HTMLElement,\n\t\tdelegate: IListVirtualDelegate<T>,\n\t\trenderers: ICompressibleTreeRenderer<T, TFilterData, any>[],\n\t\toptions: ICompressibleAsyncDataTreeOptions<T, TFilterData>\n\t): ObjectTree<IAsyncDataTreeNode<TInput, T>, TFilterData> {\n\t\tconst objectTreeDelegate = new ComposedTreeDelegate<TInput | T, IAsyncDataTreeNode<TInput, T>>(delegate);\n\t\tconst objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n\t\tconst objectTreeOptions = asCompressibleObjectTreeOptions<TInput, T, TFilterData>(options) || {};\n\n\t\treturn new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n\t}\n\n\tprotected override asTreeElement(node: IAsyncDataTreeNode<TInput, T>, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): ICompressedTreeElement<IAsyncDataTreeNode<TInput, T>> {\n\t\treturn {\n\t\t\tincompressible: this.compressionDelegate.isIncompressible(node.element as T),\n\t\t\t...super.asTreeElement(node, viewStateContext)\n\t\t};\n\t}\n\n\toverride updateOptions(options: ICompressibleAsyncDataTreeOptionsUpdate = {}): void {\n\t\tthis.tree.updateOptions(options);\n\t}\n\n\toverride getViewState(): IAsyncDataTreeViewState {\n\t\tif (!this.identityProvider) {\n\t\t\tthrow new TreeError(this.user, 'Can\\'t get tree view state without an identity provider');\n\t\t}\n\n\t\tconst getId = (element: T) => this.identityProvider!.getId(element).toString();\n\t\tconst focus = this.getFocus().map(getId);\n\t\tconst selection = this.getSelection().map(getId);\n\n\t\tconst expanded: string[] = [];\n\t\tconst root = this.tree.getCompressedTreeNode();\n\t\tconst queue = [root];\n\n\t\twhile (queue.length > 0) {\n\t\t\tconst node = queue.shift()!;\n\n\t\t\tif (node !== root && node.collapsible && !node.collapsed) {\n\t\t\t\tfor (const asyncNode of node.element!.elements) {\n\t\t\t\t\texpanded.push(getId(asyncNode.element as T));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tqueue.push(...node.children);\n\t\t}\n\n\t\treturn { focus, selection, expanded, scrollTop: this.scrollTop };\n\t}\n\n\tprotected override render(node: IAsyncDataTreeNode<TInput, T>, viewStateContext?: IAsyncDataTreeViewStateContext<TInput, T>): void {\n\t\tif (!this.identityProvider) {\n\t\t\treturn super.render(node, viewStateContext);\n\t\t}\n\n\t\t// Preserve traits across compressions. Hacky but does the trick.\n\t\t// This is hard to fix properly since it requires rewriting the traits\n\t\t// across trees and lists. Let's just keep it this way for now.\n\t\tconst getId = (element: T) => this.identityProvider!.getId(element).toString();\n\t\tconst getUncompressedIds = (nodes: IAsyncDataTreeNode<TInput, T>[]): Set<string> => {\n\t\t\tconst result = new Set<string>();\n\n\t\t\tfor (const node of nodes) {\n\t\t\t\tconst compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n\n\t\t\t\tif (!compressedNode.element) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (const node of compressedNode.element.elements) {\n\t\t\t\t\tresult.add(getId(node.element as T));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst oldSelection = getUncompressedIds(this.tree.getSelection() as IAsyncDataTreeNode<TInput, T>[]);\n\t\tconst oldFocus = getUncompressedIds(this.tree.getFocus() as IAsyncDataTreeNode<TInput, T>[]);\n\n\t\tsuper.render(node, viewStateContext);\n\n\t\tconst selection = this.getSelection();\n\t\tlet didChangeSelection = false;\n\n\t\tconst focus = this.getFocus();\n\t\tlet didChangeFocus = false;\n\n\t\tconst visit = (node: ITreeNode<ICompressedTreeNode<IAsyncDataTreeNode<TInput, T>> | null, TFilterData>) => {\n\t\t\tconst compressedNode = node.element;\n\n\t\t\tif (compressedNode) {\n\t\t\t\tfor (let i = 0; i < compressedNode.elements.length; i++) {\n\t\t\t\t\tconst id = getId(compressedNode.elements[i].element as T);\n\t\t\t\t\tconst element = compressedNode.elements[compressedNode.elements.length - 1].element as T;\n\n\t\t\t\t\t// github.com/microsoft/vscode/issues/85938\n\t\t\t\t\tif (oldSelection.has(id) && selection.indexOf(element) === -1) {\n\t\t\t\t\t\tselection.push(element);\n\t\t\t\t\t\tdidChangeSelection = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oldFocus.has(id) && focus.indexOf(element) === -1) {\n\t\t\t\t\t\tfocus.push(element);\n\t\t\t\t\t\tdidChangeFocus = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnode.children.forEach(visit);\n\t\t};\n\n\t\tvisit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n\n\t\tif (didChangeSelection) {\n\t\t\tthis.setSelection(selection);\n\t\t}\n\n\t\tif (didChangeFocus) {\n\t\t\tthis.setFocus(focus);\n\t\t}\n\t}\n\n\t// For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n\t// and we have to filter everything beforehand\n\t// Related to #85193 and #85835\n\tprotected override processChildren(children: Iterable<T>): Iterable<T> {\n\t\tif (this.filter) {\n\t\t\tchildren = Iterable.filter(children, e => {\n\t\t\t\tconst result = this.filter!.filter(e, TreeVisibility.Visible);\n\t\t\t\tconst visibility = getVisibility(result);\n\n\t\t\t\tif (visibility === TreeVisibility.Recurse) {\n\t\t\t\t\tthrow new Error('Recursive tree visibility not supported in async data compressed trees');\n\t\t\t\t}\n\n\t\t\t\treturn visibility === TreeVisibility.Visible;\n\t\t\t});\n\t\t}\n\n\t\treturn super.processChildren(children);\n\t}\n}\n\nfunction getVisibility<TFilterData>(filterResult: TreeFilterResult<TFilterData>): TreeVisibility {\n\tif (typeof filterResult === 'boolean') {\n\t\treturn filterResult ? TreeVisibility.Visible : TreeVisibility.Hidden;\n\t} else if (isFilterResult(filterResult)) {\n\t\treturn getVisibleState(filterResult.visibility);\n\t} else {\n\t\treturn getVisibleState(filterResult);\n\t}\n}\n"]}