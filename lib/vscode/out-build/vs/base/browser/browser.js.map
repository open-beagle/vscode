{"version":3,"file":"browser.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/browser.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nclass WindowManager {\n\n\tpublic static readonly INSTANCE = new WindowManager();\n\n\t// --- Zoom Level\n\tprivate _zoomLevel: number = 0;\n\tprivate _lastZoomLevelChangeTime: number = 0;\n\tprivate readonly _onDidChangeZoomLevel = new Emitter<number>();\n\n\tpublic readonly onDidChangeZoomLevel: Event<number> = this._onDidChangeZoomLevel.event;\n\tpublic getZoomLevel(): number {\n\t\treturn this._zoomLevel;\n\t}\n\tpublic getTimeSinceLastZoomLevelChanged(): number {\n\t\treturn Date.now() - this._lastZoomLevelChangeTime;\n\t}\n\tpublic setZoomLevel(zoomLevel: number, isTrusted: boolean): void {\n\t\tif (this._zoomLevel === zoomLevel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._zoomLevel = zoomLevel;\n\t\t// See https://github.com/microsoft/vscode/issues/26151\n\t\tthis._lastZoomLevelChangeTime = isTrusted ? 0 : Date.now();\n\t\tthis._onDidChangeZoomLevel.fire(this._zoomLevel);\n\t}\n\n\t// --- Zoom Factor\n\tprivate _zoomFactor: number = 1;\n\n\tpublic getZoomFactor(): number {\n\t\treturn this._zoomFactor;\n\t}\n\tpublic setZoomFactor(zoomFactor: number): void {\n\t\tthis._zoomFactor = zoomFactor;\n\t}\n\n\t// --- Pixel Ratio\n\tpublic getPixelRatio(): number {\n\t\tlet ctx: any = document.createElement('canvas').getContext('2d');\n\t\tlet dpr = window.devicePixelRatio || 1;\n\t\tlet bsr = ctx.webkitBackingStorePixelRatio ||\n\t\t\tctx.mozBackingStorePixelRatio ||\n\t\t\tctx.msBackingStorePixelRatio ||\n\t\t\tctx.oBackingStorePixelRatio ||\n\t\t\tctx.backingStorePixelRatio || 1;\n\t\treturn dpr / bsr;\n\t}\n\n\t// --- Fullscreen\n\tprivate _fullscreen: boolean = false;\n\tprivate readonly _onDidChangeFullscreen = new Emitter<void>();\n\n\tpublic readonly onDidChangeFullscreen: Event<void> = this._onDidChangeFullscreen.event;\n\tpublic setFullscreen(fullscreen: boolean): void {\n\t\tif (this._fullscreen === fullscreen) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._fullscreen = fullscreen;\n\t\tthis._onDidChangeFullscreen.fire();\n\t}\n\tpublic isFullscreen(): boolean {\n\t\treturn this._fullscreen;\n\t}\n}\n\n/** A zoom index, e.g. 1, 2, 3 */\nexport function setZoomLevel(zoomLevel: number, isTrusted: boolean): void {\n\tWindowManager.INSTANCE.setZoomLevel(zoomLevel, isTrusted);\n}\nexport function getZoomLevel(): number {\n\treturn WindowManager.INSTANCE.getZoomLevel();\n}\n/** Returns the time (in ms) since the zoom level was changed */\nexport function getTimeSinceLastZoomLevelChanged(): number {\n\treturn WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\n}\nexport function onDidChangeZoomLevel(callback: (zoomLevel: number) => void): IDisposable {\n\treturn WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\n}\n\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor(): number {\n\treturn WindowManager.INSTANCE.getZoomFactor();\n}\nexport function setZoomFactor(zoomFactor: number): void {\n\tWindowManager.INSTANCE.setZoomFactor(zoomFactor);\n}\n\nexport function getPixelRatio(): number {\n\treturn WindowManager.INSTANCE.getPixelRatio();\n}\n\nexport function setFullscreen(fullscreen: boolean): void {\n\tWindowManager.INSTANCE.setFullscreen(fullscreen);\n}\nexport function isFullscreen(): boolean {\n\treturn WindowManager.INSTANCE.isFullscreen();\n}\nexport const onDidChangeFullscreen = WindowManager.INSTANCE.onDidChangeFullscreen;\n\nconst userAgent = navigator.userAgent;\n\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isIPad = (userAgent.indexOf('iPad') >= 0 || (isSafari && navigator.maxTouchPoints > 0));\nexport const isEdgeLegacyWebView = (userAgent.indexOf('Edge/') >= 0) && (userAgent.indexOf('WebView/') >= 0);\nexport const isElectron = (userAgent.indexOf('Electron/') >= 0);\nexport const isAndroid = (userAgent.indexOf('Android') >= 0);\nexport const isStandalone = (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n"]}