{"version":3,"file":"markdownRenderer.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/markdownRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { createElement, FormattedTextRenderOptions } from 'vs/base/browser/formattedTextRenderer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IMarkdownString, parseHrefAndDimensions, removeMarkdownEscapes } from 'vs/base/common/htmlContent';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { insane, InsaneOptions } from 'vs/base/common/insane/insane';\nimport { parse } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { escape } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { markdownEscapeEscapedIcons } from 'vs/base/common/iconLabels';\nimport { resolvePath } from 'vs/base/common/resources';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { Event } from 'vs/base/common/event';\nimport { domEvent } from 'vs/base/browser/event';\n\nexport interface MarkedOptions extends marked.MarkedOptions {\n\tbaseUrl?: never;\n}\n\nexport interface MarkdownRenderOptions extends FormattedTextRenderOptions {\n\tcodeBlockRenderer?: (modeId: string, value: string) => Promise<HTMLElement>;\n\tasyncRenderCallback?: () => void;\n\tbaseUrl?: URI;\n}\n\nconst _ttpInsane = window.trustedTypes?.createPolicy('insane', {\n\tcreateHTML(value, options: InsaneOptions): string {\n\t\treturn insane(value, options);\n\t}\n});\n\n/**\n * Low-level way create a html element from a markdown string.\n *\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\n */\nexport function renderMarkdown(markdown: IMarkdownString, options: MarkdownRenderOptions = {}, markedOptions: MarkedOptions = {}): HTMLElement {\n\tconst element = createElement(options);\n\n\tconst _uriMassage = function (part: string): string {\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(decodeURIComponent(part));\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (markdown.uris && markdown.uris[value]) {\n\t\t\t\treturn URI.revive(markdown.uris[value]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\treturn encodeURIComponent(JSON.stringify(data));\n\t};\n\n\tconst _href = function (href: string, isDomUri: boolean): string {\n\t\tconst data = markdown.uris && markdown.uris[href];\n\t\tif (!data) {\n\t\t\treturn href; // no uri exists\n\t\t}\n\t\tlet uri = URI.revive(data);\n\t\tif (URI.parse(href).toString() === uri.toString()) {\n\t\t\treturn href; // no tranformation performed\n\t\t}\n\t\tif (isDomUri) {\n\t\t\t// this URI will end up as \"src\"-attribute of a dom node\n\t\t\t// and because of that special rewriting needs to be done\n\t\t\t// so that the URI uses a protocol that's understood by\n\t\t\t// browsers (like http or https)\n\t\t\treturn FileAccess.asBrowserUri(uri).toString(true);\n\t\t}\n\t\tif (uri.query) {\n\t\t\turi = uri.with({ query: _uriMassage(uri.query) });\n\t\t}\n\t\treturn uri.toString();\n\t};\n\n\t// signal to code-block render that the\n\t// element has been created\n\tlet signalInnerHTML: () => void;\n\tconst withInnerHTML = new Promise<void>(c => signalInnerHTML = c);\n\n\tconst renderer = new marked.Renderer();\n\trenderer.image = (href: string, title: string, text: string) => {\n\t\tlet dimensions: string[] = [];\n\t\tlet attributes: string[] = [];\n\t\tif (href) {\n\t\t\t({ href, dimensions } = parseHrefAndDimensions(href));\n\t\t\thref = _href(href, true);\n\t\t\ttry {\n\t\t\t\tconst hrefAsUri = URI.parse(href);\n\t\t\t\tif (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\n\t\t\t\t\thref = resolvePath(options.baseUrl, href).toString();\n\t\t\t\t}\n\t\t\t} catch (err) { }\n\n\t\t\tattributes.push(`src=\"${href}\"`);\n\t\t}\n\t\tif (text) {\n\t\t\tattributes.push(`alt=\"${text}\"`);\n\t\t}\n\t\tif (title) {\n\t\t\tattributes.push(`title=\"${title}\"`);\n\t\t}\n\t\tif (dimensions.length) {\n\t\t\tattributes = attributes.concat(dimensions);\n\t\t}\n\t\treturn '<img ' + attributes.join(' ') + '>';\n\t};\n\trenderer.link = (href, title, text): string => {\n\t\t// Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n\t\tif (href === text) { // raw link case\n\t\t\ttext = removeMarkdownEscapes(text);\n\t\t}\n\t\thref = _href(href, false);\n\t\tif (options.baseUrl) {\n\t\t\tconst hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n\t\t\tif (!hasScheme) {\n\t\t\t\thref = resolvePath(options.baseUrl, href).toString();\n\t\t\t}\n\t\t}\n\t\ttitle = removeMarkdownEscapes(title);\n\t\thref = removeMarkdownEscapes(href);\n\t\tif (\n\t\t\t!href\n\t\t\t|| href.match(/^data:|javascript:/i)\n\t\t\t|| (href.match(/^command:/i) && !markdown.isTrusted)\n\t\t\t|| href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)\n\t\t) {\n\t\t\t// drop the link\n\t\t\treturn text;\n\n\t\t} else {\n\t\t\t// HTML Encode href\n\t\t\thref = href.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;')\n\t\t\t\t.replace(/'/g, '&#39;');\n\t\t\treturn `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\n\t\t}\n\t};\n\trenderer.paragraph = (text): string => {\n\t\tif (markdown.supportThemeIcons) {\n\t\t\tconst elements = renderLabelWithIcons(text);\n\t\t\ttext = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\n\t\t}\n\t\treturn `<p>${text}</p>`;\n\t};\n\n\tif (options.codeBlockRenderer) {\n\t\trenderer.code = (code, lang) => {\n\t\t\tconst value = options.codeBlockRenderer!(lang, code);\n\t\t\t// when code-block rendering is async we return sync\n\t\t\t// but update the node with the real result later.\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst promise = Promise.all([value, withInnerHTML]).then(values => {\n\t\t\t\tconst span = <HTMLDivElement>element.querySelector(`div[data-code=\"${id}\"]`);\n\t\t\t\tif (span) {\n\t\t\t\t\tDOM.reset(span, values[0]);\n\t\t\t\t}\n\t\t\t}).catch(_err => {\n\t\t\t\t// ignore\n\t\t\t});\n\n\t\t\tif (options.asyncRenderCallback) {\n\t\t\t\tpromise.then(options.asyncRenderCallback);\n\t\t\t}\n\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\n\t\t};\n\t}\n\n\tif (options.actionHandler) {\n\t\toptions.actionHandler.disposeables.add(Event.any<MouseEvent>(domEvent(element, 'click'), domEvent(element, 'auxclick'))(e => {\n\t\t\tconst mouseEvent = new StandardMouseEvent(e);\n\t\t\tif (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet target: HTMLElement | null = mouseEvent.target;\n\t\t\tif (target.tagName !== 'A') {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t\tif (!target || target.tagName !== 'A') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst href = target.dataset['href'];\n\t\t\t\tif (href) {\n\t\t\t\t\toptions.actionHandler!.callback(href, mouseEvent);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tmouseEvent.preventDefault();\n\t\t\t}\n\t\t}));\n\t}\n\n\t// Use our own sanitizer so that we can let through only spans.\n\t// Otherwise, we'd be letting all html be rendered.\n\t// If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\n\t// We always pass the output through insane after this so that we don't rely on\n\t// marked for sanitization.\n\tmarkedOptions.sanitizer = (html: string): string => {\n\t\tconst match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\n\t\treturn match ? html : '';\n\t};\n\tmarkedOptions.sanitize = true;\n\tmarkedOptions.silent = true;\n\n\tmarkedOptions.renderer = renderer;\n\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? '';\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}…`;\n\t}\n\t// escape theme icons\n\tif (markdown.supportThemeIcons) {\n\t\tvalue = markdownEscapeEscapedIcons(value);\n\t}\n\n\tconst renderedMarkdown = marked.parse(value, markedOptions);\n\n\t// sanitize with insane\n\telement.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown) as string;\n\n\t// signal that async code blocks can be now be inserted\n\tsignalInnerHTML!();\n\n\t// signal size changes for image tags\n\tif (options.asyncRenderCallback) {\n\t\tfor (const img of element.getElementsByTagName('img')) {\n\t\t\tconst listener = DOM.addDisposableListener(img, 'load', () => {\n\t\t\t\tlistener.dispose();\n\t\t\t\toptions.asyncRenderCallback!();\n\t\t\t});\n\t\t}\n\t}\n\n\n\treturn element;\n}\n\nfunction sanitizeRenderedMarkdown(\n\toptions: { isTrusted?: boolean },\n\trenderedMarkdown: string,\n): string | TrustedHTML {\n\tconst insaneOptions = getInsaneOptions(options);\n\treturn _ttpInsane?.createHTML(renderedMarkdown, insaneOptions) ?? insane(renderedMarkdown, insaneOptions);\n}\n\nfunction getInsaneOptions(options: { readonly isTrusted?: boolean }): InsaneOptions {\n\tconst allowedSchemes = [\n\t\tSchemas.http,\n\t\tSchemas.https,\n\t\tSchemas.mailto,\n\t\tSchemas.data,\n\t\tSchemas.file,\n\t\tSchemas.vscodeRemote,\n\t\tSchemas.vscodeRemoteResource,\n\t];\n\n\tif (options.isTrusted) {\n\t\tallowedSchemes.push(Schemas.command);\n\t}\n\n\treturn {\n\t\tallowedSchemes,\n\t\t// allowedTags should included everything that markdown renders to.\n\t\t// Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\n\t\t// HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n\t\t// HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n\t\tallowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\n\t\tallowedAttributes: {\n\t\t\t'a': ['href', 'name', 'target', 'data-href'],\n\t\t\t'img': ['src', 'title', 'alt', 'width', 'height'],\n\t\t\t'div': ['class', 'data-code'],\n\t\t\t'span': ['class', 'style'],\n\t\t\t// https://github.com/microsoft/vscode/issues/95937\n\t\t\t'th': ['align'],\n\t\t\t'td': ['align']\n\t\t},\n\t\tfilter(token: { tag: string; attrs: { readonly [key: string]: string; }; }): boolean {\n\t\t\tif (token.tag === 'span' && options.isTrusted) {\n\t\t\t\tif (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\n\t\t\t\t\treturn !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\n\t\t\t\t} else if (token.attrs['class']) {\n\t\t\t\t\t// The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\n\t\t\t\t\treturn !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\n/**\n * Strips all markdown from `markdown`. For example `# Header` would be output as `Header`.\n */\nexport function renderMarkdownAsPlaintext(markdown: IMarkdownString) {\n\tconst renderer = new marked.Renderer();\n\n\trenderer.code = (code: string): string => {\n\t\treturn code;\n\t};\n\trenderer.blockquote = (quote: string): string => {\n\t\treturn quote;\n\t};\n\trenderer.html = (_html: string): string => {\n\t\treturn '';\n\t};\n\trenderer.heading = (text: string, _level: 1 | 2 | 3 | 4 | 5 | 6, _raw: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.hr = (): string => {\n\t\treturn '';\n\t};\n\trenderer.list = (body: string, _ordered: boolean): string => {\n\t\treturn body;\n\t};\n\trenderer.listitem = (text: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.paragraph = (text: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.table = (header: string, body: string): string => {\n\t\treturn header + body + '\\n';\n\t};\n\trenderer.tablerow = (content: string): string => {\n\t\treturn content;\n\t};\n\trenderer.tablecell = (content: string, _flags: {\n\t\theader: boolean;\n\t\talign: 'center' | 'left' | 'right' | null;\n\t}): string => {\n\t\treturn content + ' ';\n\t};\n\trenderer.strong = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.em = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.codespan = (code: string): string => {\n\t\treturn code;\n\t};\n\trenderer.br = (): string => {\n\t\treturn '\\n';\n\t};\n\trenderer.del = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.image = (_href: string, _title: string, _text: string): string => {\n\t\treturn '';\n\t};\n\trenderer.text = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.link = (_href: string, _title: string, text: string): string => {\n\t\treturn text;\n\t};\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? '';\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}…`;\n\t}\n\n\tconst unescapeInfo = new Map<string, string>([\n\t\t['&quot;', '\"'],\n\t\t['&amp;', '&'],\n\t\t['&#39;', '\\''],\n\t\t['&lt;', '<'],\n\t\t['&gt;', '>'],\n\t]);\n\n\tconst html = marked.parse(value, { renderer }).replace(/&(#\\d+|[a-zA-Z]+);/g, m => unescapeInfo.get(m) ?? m);\n\n\treturn sanitizeRenderedMarkdown({ isTrusted: false }, html).toString();\n}\n"]}