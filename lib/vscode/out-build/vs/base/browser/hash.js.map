{"version":3,"file":"hash.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/browser/hash.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKzF,KAAK,UAAU,OAAO,CAAC,GAAW;;QAExC,wCAAwC;QACxC,IAAI,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,0CAAE,MAAM,EAAE;YAE/B,sDAAsD;YACtD,qDAAqD;YACrD,sDAAsD;YACtD,0CAA0C;YAC1C,sDAAsD;YACtD,MAAM,MAAM,GAAG,iBAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;YAC5E,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;YAE9E,OAAO,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,qCAAqC;aAChC;YACJ,MAAM,QAAQ,GAAG,IAAI,iBAAU,EAAE,CAAC;YAClC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAErB,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;SACzB;IACF,CAAC;IAvBD,0BAuBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { StringSHA1, toHexString } from 'vs/base/common/hash';\n\nexport async function sha1Hex(str: string): Promise<string> {\n\n\t// Prefer to use browser's crypto module\n\tif (globalThis?.crypto?.subtle) {\n\n\t\t// Careful to use `dontUseNodeBuffer` when passing the\n\t\t// buffer to the browser `crypto` API. Users reported\n\t\t// native crashes in certain cases that we could trace\n\t\t// back to passing node.js `Buffer` around\n\t\t// (https://github.com/microsoft/vscode/issues/114227)\n\t\tconst buffer = VSBuffer.fromString(str, { dontUseNodeBuffer: true }).buffer;\n\t\tconst hash = await globalThis.crypto.subtle.digest({ name: 'sha-1' }, buffer);\n\n\t\treturn toHexString(hash);\n\t}\n\n\t// Otherwise fallback to `StringSHA1`\n\telse {\n\t\tconst computer = new StringSHA1();\n\t\tcomputer.update(str);\n\n\t\treturn computer.digest();\n\t}\n}\n"]}