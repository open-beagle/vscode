{"version":3,"file":"quickInputBox.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/parts/quickinput/browser/quickInputBox.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAEhB,MAAa,aAAc,SAAQ,sBAAU;QAK5C,YACS,MAAmB;YAE3B,KAAK,EAAE,CAAC;YAFA,WAAM,GAAN,MAAM,CAAa;YAO5B,cAAS,GAAG,CAAC,OAA+C,EAAe,EAAE;gBAC5E,OAAO,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAgB,EAAE,EAAE;oBACzG,OAAO,CAAC,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,gBAAW,GAAG,CAAC,OAA4C,EAAe,EAAE;gBAC3E,OAAO,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAa,EAAE,EAAE;oBACxG,OAAO,CAAC,IAAI,+BAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,gBAAW,GAAG,CAAC,OAAgC,EAAe,EAAE;gBAC/D,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC3C,CAAC,CAAC;YAlBD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;QACzE,CAAC;QAkBD,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5B,CAAC;QAED,IAAI,KAAK,CAAC,KAAa;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,CAAC;QAED,MAAM,CAAC,QAAuB,IAAI;YACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QAED,gBAAgB;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QACzC,CAAC;QAED,cAAc,CAAC,WAAmB;YACjC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QACrE,CAAC;QAED,IAAI,WAAW,CAAC,WAAmB;YAClC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,SAAS;YACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,SAAS,CAAC,SAAiB;YAC9B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;QAED,IAAI,QAAQ;YACX,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,KAAK,UAAU,CAAC;QACvD,CAAC;QAED,IAAI,QAAQ,CAAC,QAAiB;YAC7B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;QAClE,CAAC;QAED,IAAI,OAAO,CAAC,OAAgB;YAC3B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,QAAQ;YACP,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACjC,CAAC;QAED,YAAY,CAAC,IAAY,EAAE,KAAa;YACvC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC;QAED,eAAe,CAAC,IAAY;YAC3B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;QAED,cAAc,CAAC,UAAoB;YAClC,IAAI,UAAU,KAAK,kBAAQ,CAAC,MAAM,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;aAC5B;iBAAM;gBACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,UAAU,KAAK,kBAAQ,CAAC,IAAI,CAAC,CAAC,cAAkB,CAAC,CAAC,UAAU,KAAK,kBAAQ,CAAC,OAAO,CAAC,CAAC,iBAAqB,CAAC,cAAkB,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;aAC9K;QACF,CAAC;QAED,aAAa,CAAC,UAAoB;YACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,KAAK,kBAAQ,CAAC,IAAI,CAAC,CAAC,cAAkB,CAAC,CAAC,UAAU,KAAK,kBAAQ,CAAC,OAAO,CAAC,CAAC,iBAAqB,CAAC,cAAkB,CAAC,CAAC;QACjK,CAAC;QAED,QAAQ;YACP,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;QAED,MAAM;YACL,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC;QAED,KAAK,CAAC,MAAuB;YAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;KACD;IAhHD,sCAgHC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/quickInput';\nimport * as dom from 'vs/base/browser/dom';\nimport { InputBox, IRange, MessageType, IInputBoxStyles } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport Severity from 'vs/base/common/severity';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\n\nconst $ = dom.$;\n\nexport class QuickInputBox extends Disposable {\n\n\tprivate container: HTMLElement;\n\tprivate inputBox: InputBox;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement\n\t) {\n\t\tsuper();\n\t\tthis.container = dom.append(this.parent, $('.quick-input-box'));\n\t\tthis.inputBox = this._register(new InputBox(this.container, undefined));\n\t}\n\n\tonKeyDown = (handler: (event: StandardKeyboardEvent) => void): IDisposable => {\n\t\treturn dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\thandler(new StandardKeyboardEvent(e));\n\t\t});\n\t};\n\n\tonMouseDown = (handler: (event: StandardMouseEvent) => void): IDisposable => {\n\t\treturn dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, (e: MouseEvent) => {\n\t\t\thandler(new StandardMouseEvent(e));\n\t\t});\n\t};\n\n\tonDidChange = (handler: (event: string) => void): IDisposable => {\n\t\treturn this.inputBox.onDidChange(handler);\n\t};\n\n\tget value() {\n\t\treturn this.inputBox.value;\n\t}\n\n\tset value(value: string) {\n\t\tthis.inputBox.value = value;\n\t}\n\n\tselect(range: IRange | null = null): void {\n\t\tthis.inputBox.select(range);\n\t}\n\n\tisSelectionAtEnd(): boolean {\n\t\treturn this.inputBox.isSelectionAtEnd();\n\t}\n\n\tsetPlaceholder(placeholder: string): void {\n\t\tthis.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget placeholder() {\n\t\treturn this.inputBox.inputElement.getAttribute('placeholder') || '';\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget ariaLabel() {\n\t\treturn this.inputBox.getAriaLabel();\n\t}\n\n\tset ariaLabel(ariaLabel: string) {\n\t\tthis.inputBox.setAriaLabel(ariaLabel);\n\t}\n\n\tget password() {\n\t\treturn this.inputBox.inputElement.type === 'password';\n\t}\n\n\tset password(password: boolean) {\n\t\tthis.inputBox.inputElement.type = password ? 'password' : 'text';\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tthis.inputBox.setEnabled(enabled);\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.inputBox.hasFocus();\n\t}\n\n\tsetAttribute(name: string, value: string): void {\n\t\tthis.inputBox.inputElement.setAttribute(name, value);\n\t}\n\n\tremoveAttribute(name: string): void {\n\t\tthis.inputBox.inputElement.removeAttribute(name);\n\t}\n\n\tshowDecoration(decoration: Severity): void {\n\t\tif (decoration === Severity.Ignore) {\n\t\t\tthis.inputBox.hideMessage();\n\t\t} else {\n\t\t\tthis.inputBox.showMessage({ type: decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR, content: '' });\n\t\t}\n\t}\n\n\tstylesForType(decoration: Severity) {\n\t\treturn this.inputBox.stylesForType(decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR);\n\t}\n\n\tsetFocus(): void {\n\t\tthis.inputBox.focus();\n\t}\n\n\tlayout(): void {\n\t\tthis.inputBox.layout();\n\t}\n\n\tstyle(styles: IInputBoxStyles): void {\n\t\tthis.inputBox.style(styles);\n\t}\n}\n"]}