{"version":3,"file":"ipc.mp.test.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/parts/ipc/test/electron-sandbox/ipc.mp.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAE/B,IAAI,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,cAAc,EAAE,CAAC;YAE9C,MAAM,OAAO,GAAG,IAAI,eAAiB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACxD,MAAM,OAAO,GAAG,IAAI,eAAiB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAExD,4DAA4D;YAC5D,yDAAyD;YACzD,+BAA+B;YAC/B,EAAE;YACF,gEAAgE;YAChE,MAAM,UAAU,GAAG,IAAI,OAAO,CAAU,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzG,OAAO,CAAC,OAAO,EAAE,CAAC;YAElB,MAAM,CAAC,EAAE,CAAC,MAAM,UAAU,CAAC,CAAC;YAE5B,OAAO,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Client as MessagePortClient } from 'vs/base/parts/ipc/browser/ipc.mp';\n\nsuite('IPC, MessagePorts', () => {\n\n\ttest('message port close event', async () => {\n\t\tconst { port1, port2 } = new MessageChannel();\n\n\t\tconst client1 = new MessagePortClient(port1, 'client1');\n\t\tconst client2 = new MessagePortClient(port2, 'client2');\n\n\t\t// This test ensures that Electron's API for the close event\n\t\t// does not break because we rely on it to dispose client\n\t\t// connections from the server.\n\t\t//\n\t\t// This event is not provided by browser MessagePort API though.\n\t\tconst whenClosed = new Promise<boolean>(resolve => port1.addEventListener('close', () => resolve(true)));\n\n\t\tclient2.dispose();\n\n\t\tassert.ok(await whenClosed);\n\n\t\tclient1.dispose();\n\t});\n});\n"]}