{"version":3,"file":"ipc.net.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/parts/ipc/node/ipc.net.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport * as zlib from 'zlib';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Platform, platform } from 'vs/base/common/platform';\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t\tthis._errorListener = (err: any) => {\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tpublic readonly permessageDeflate: boolean;\n\tprivate _totalIncomingWireBytes: number;\n\tprivate _totalIncomingDataBytes: number;\n\tprivate _totalOutgoingWireBytes: number;\n\tprivate _totalOutgoingDataBytes: number;\n\tprivate readonly _zlibInflate: zlib.InflateRaw | null;\n\tprivate readonly _zlibDeflate: zlib.DeflateRaw | null;\n\tprivate _zlibDeflateFlushWaitingCount: number;\n\tprivate readonly _onDidZlibFlush = this._register(new Emitter<void>());\n\tprivate readonly _recordInflateBytes: boolean;\n\tprivate readonly _recordedInflateBytes: Buffer[] = [];\n\tprivate readonly _pendingInflateData: Buffer[] = [];\n\tprivate readonly _pendingDeflateData: Buffer[] = [];\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<void>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tmask: 0\n\t};\n\n\tpublic get totalIncomingWireBytes(): number {\n\t\treturn this._totalIncomingWireBytes;\n\t}\n\n\tpublic get totalIncomingDataBytes(): number {\n\t\treturn this._totalIncomingDataBytes;\n\t}\n\n\tpublic get totalOutgoingWireBytes(): number {\n\t\treturn this._totalOutgoingWireBytes;\n\t}\n\n\tpublic get totalOutgoingDataBytes(): number {\n\t\treturn this._totalOutgoingDataBytes;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.wrap(Buffer.concat(this._recordedInflateBytes));\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._totalIncomingWireBytes = 0;\n\t\tthis._totalIncomingDataBytes = 0;\n\t\tthis._totalOutgoingWireBytes = 0;\n\t\tthis._totalOutgoingDataBytes = 0;\n\t\tthis.permessageDeflate = permessageDeflate;\n\t\tthis._recordInflateBytes = recordInflateBytes;\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negociate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflate = zlib.createInflateRaw({\n\t\t\t\twindowBits: 15\n\t\t\t});\n\t\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\t\tconsole.error(err);\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tthis._onClose.fire();\n\t\t\t});\n\t\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\t\tthis._pendingInflateData.push(data);\n\t\t\t});\n\t\t\tif (inflateBytes) {\n\t\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._zlibDeflate = zlib.createDeflateRaw({\n\t\t\t\twindowBits: 15\n\t\t\t});\n\t\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\t\tconsole.error(err);\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tthis._onClose.fire();\n\t\t\t});\n\t\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\t\tthis._pendingDeflateData.push(data);\n\t\t\t});\n\t\t} else {\n\t\t\tthis._zlibInflate = null;\n\t\t\tthis._zlibDeflate = null;\n\t\t}\n\t\tthis._zlibDeflateFlushWaitingCount = 0;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._zlibDeflateFlushWaitingCount > 0) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._onDidZlibFlush.event(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._totalOutgoingDataBytes += buffer.byteLength;\n\n\t\tif (this._zlibDeflate) {\n\t\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\n\t\t\tthis._zlibDeflateFlushWaitingCount++;\n\t\t\t// See https://zlib.net/manual.html#Constants\n\t\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\t\tthis._zlibDeflateFlushWaitingCount--;\n\t\t\t\tlet data = Buffer.concat(this._pendingDeflateData);\n\t\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\t\tdata = data.slice(0, data.length - 4);\n\n\t\t\t\tif (!this._isEnded) {\n\t\t\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\t\t\tthis._write(VSBuffer.wrap(data), true);\n\t\t\t\t}\n\n\t\t\t\tif (this._zlibDeflateFlushWaitingCount === 0) {\n\t\t\t\t\tthis._onDidZlibFlush.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._write(buffer, false);\n\t\t}\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis._totalOutgoingWireBytes += header.byteLength + buffer.byteLength;\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._totalIncomingWireBytes += data.byteLength;\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tif (this._zlibInflate) {\n\t\t\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\t\t\tif (this._recordInflateBytes) {\n\t\t\t\t\t\tthis._recordedInflateBytes.push(Buffer.from(<Buffer>body.buffer));\n\t\t\t\t\t}\n\t\t\t\t\tthis._zlibInflate.write(<Buffer>body.buffer);\n\t\t\t\t\tif (this._state.fin) {\n\t\t\t\t\t\tif (this._recordInflateBytes) {\n\t\t\t\t\t\t\tthis._recordedInflateBytes.push(Buffer.from([0x00, 0x00, 0xff, 0xff]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._zlibInflate.write(Buffer.from([0x00, 0x00, 0xff, 0xff]));\n\t\t\t\t\t}\n\t\t\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\t\t\tconst data = Buffer.concat(this._pendingInflateData);\n\t\t\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t\t\t\tthis._totalIncomingDataBytes += data.length;\n\t\t\t\t\t\tthis._onData.fire(VSBuffer.wrap(data));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._totalIncomingDataBytes += body.byteLength;\n\t\t\t\t\tthis._onData.fire(body);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tif (this._zlibDeflateFlushWaitingCount > 0) {\n\t\t\tawait Event.toPromise(this._onDidZlibFlush.event);\n\t\t}\n\t\tawait this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n"]}