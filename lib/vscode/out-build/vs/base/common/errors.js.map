{"version":3,"file":"errors.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/errors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n"]}