{"version":3,"file":"process.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/process.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,IAAI,WAAuF,CAAC;IAG5F,6BAA6B;IAC7B,IAAI,OAAO,kBAAO,CAAC,MAAM,KAAK,WAAW,EAAE;QAC1C,MAAM,cAAc,GAAiB,kBAAO,CAAC,MAAM,CAAC,OAAO,CAAC;QAC5D,WAAW,GAAG;YACb,IAAI,QAAQ,KAAK,OAAO,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClD,IAAI,GAAG,KAAK,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,GAAG,KAAK,OAAO,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACtC,QAAQ,CAAC,QAAkC,IAAU,OAAO,CAAA,GAAA,uBAAY,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACrF,CAAC;KACF;IAED,6BAA6B;SACxB,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;QACxC,WAAW,GAAG;YACb,IAAI,QAAQ,KAAK,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3C,IAAI,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC5D,QAAQ,CAAC,QAAkC,IAAU,OAAO,OAAO,CAAC,QAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC1F,CAAC;KACF;IAED,kBAAkB;SACb;QACJ,WAAW,GAAG;YAEb,YAAY;YACZ,IAAI,QAAQ,KAAK,OAAO,oBAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACjF,QAAQ,CAAC,QAAkC,IAAU,OAAO,CAAA,GAAA,uBAAY,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAErF,cAAc;YACd,IAAI,GAAG,KAAK,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzC,GAAG,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;SACrB,CAAC;KACF;IAED;;;;;OAKG;IACU,QAAA,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;IAEnC;;;;;OAKG;IACU,QAAA,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;IAEnC;;;OAGG;IACU,QAAA,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAE7C;;;OAGG;IACU,QAAA,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\nlet safeProcess: INodeProcess & { nextTick: (callback: (...args: any[]) => void) => void; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return process.nextTick!(callback); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `nextTick` method in node.js, sandboxed or web\n * environments.\n */\nexport const nextTick = safeProcess.nextTick;\n"]}