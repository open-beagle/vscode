{"version":3,"file":"resourceTree.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/resourceTree.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from 'vs/base/common/decorators';\nimport * as paths from 'vs/base/common/path';\nimport { IExtUri, extUri as defaultExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { PathIterator } from 'vs/base/common/map';\n\nexport interface IResourceNode<T, C = void> {\n\treadonly uri: URI;\n\treadonly relativePath: string;\n\treadonly name: string;\n\treadonly element: T | undefined;\n\treadonly children: Iterable<IResourceNode<T, C>>;\n\treadonly childrenCount: number;\n\treadonly parent: IResourceNode<T, C> | undefined;\n\treadonly context: C;\n\tget(childName: string): IResourceNode<T, C> | undefined;\n}\n\nclass Node<T, C> implements IResourceNode<T, C> {\n\n\tprivate _children = new Map<string, Node<T, C>>();\n\n\tget childrenCount(): number {\n\t\treturn this._children.size;\n\t}\n\n\tget children(): Iterable<Node<T, C>> {\n\t\treturn this._children.values();\n\t}\n\n\t@memoize\n\tget name(): string {\n\t\treturn paths.posix.basename(this.relativePath);\n\t}\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly relativePath: string,\n\t\treadonly context: C,\n\t\tpublic element: T | undefined = undefined,\n\t\treadonly parent: IResourceNode<T, C> | undefined = undefined\n\t) { }\n\n\tget(path: string): Node<T, C> | undefined {\n\t\treturn this._children.get(path);\n\t}\n\n\tset(path: string, child: Node<T, C>): void {\n\t\tthis._children.set(path, child);\n\t}\n\n\tdelete(path: string): void {\n\t\tthis._children.delete(path);\n\t}\n\n\tclear(): void {\n\t\tthis._children.clear();\n\t}\n}\n\nfunction collect<T, C>(node: IResourceNode<T, C>, result: T[]): T[] {\n\tif (typeof node.element !== 'undefined') {\n\t\tresult.push(node.element);\n\t}\n\n\tfor (const child of node.children) {\n\t\tcollect(child, result);\n\t}\n\n\treturn result;\n}\n\nexport class ResourceTree<T extends NonNullable<any>, C> {\n\n\treadonly root: Node<T, C>;\n\n\tstatic getRoot<T, C>(node: IResourceNode<T, C>): IResourceNode<T, C> {\n\t\twhile (node.parent) {\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tstatic collect<T, C>(node: IResourceNode<T, C>): T[] {\n\t\treturn collect(node, []);\n\t}\n\n\tstatic isResourceNode<T, C>(obj: any): obj is IResourceNode<T, C> {\n\t\treturn obj instanceof Node;\n\t}\n\n\tconstructor(context: C, rootURI: URI = URI.file('/'), private extUri: IExtUri = defaultExtUri) {\n\t\tthis.root = new Node(rootURI, '', context);\n\t}\n\n\tadd(uri: URI, element: T): void {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\tlet node = this.root;\n\t\tlet path = '';\n\n\t\twhile (true) {\n\t\t\tconst name = iterator.value();\n\t\t\tpath = path + '/' + name;\n\n\t\t\tlet child = node.get(name);\n\n\t\t\tif (!child) {\n\t\t\t\tchild = new Node(\n\t\t\t\t\tthis.extUri.joinPath(this.root.uri, path),\n\t\t\t\t\tpath,\n\t\t\t\t\tthis.root.context,\n\t\t\t\t\titerator.hasNext() ? undefined : element,\n\t\t\t\t\tnode\n\t\t\t\t);\n\n\t\t\t\tnode.set(name, child);\n\t\t\t} else if (!iterator.hasNext()) {\n\t\t\t\tchild.element = element;\n\t\t\t}\n\n\t\t\tnode = child;\n\n\t\t\tif (!iterator.hasNext()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titerator.next();\n\t\t}\n\t}\n\n\tdelete(uri: URI): T | undefined {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\treturn this._delete(this.root, iterator);\n\t}\n\n\tprivate _delete(node: Node<T, C>, iterator: PathIterator): T | undefined {\n\t\tconst name = iterator.value();\n\t\tconst child = node.get(name);\n\n\t\tif (!child) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (iterator.hasNext()) {\n\t\t\tconst result = this._delete(child, iterator.next());\n\n\t\t\tif (typeof result !== 'undefined' && child.childrenCount === 0) {\n\t\t\t\tnode.delete(name);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tnode.delete(name);\n\t\treturn child.element;\n\t}\n\n\tclear(): void {\n\t\tthis.root.clear();\n\t}\n\n\tgetNode(uri: URI): IResourceNode<T, C> | undefined {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\tlet node = this.root;\n\n\t\twhile (true) {\n\t\t\tconst name = iterator.value();\n\t\t\tconst child = node.get(name);\n\n\t\t\tif (!child || !iterator.hasNext()) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\tnode = child;\n\t\t\titerator.next();\n\t\t}\n\t}\n}\n"]}