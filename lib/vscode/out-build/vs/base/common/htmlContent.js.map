{"version":3,"file":"htmlContent.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/htmlContent.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { escapeIcons } from 'vs/base/common/iconLabels';\nimport { illegalArgument } from 'vs/base/common/errors';\n\nexport interface IMarkdownString {\n\treadonly value: string;\n\treadonly isTrusted?: boolean;\n\treadonly supportThemeIcons?: boolean;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport const enum MarkdownStringTextNewlineStyle {\n\tParagraph = 0,\n\tBreak = 1,\n}\n\nexport class MarkdownString implements IMarkdownString {\n\n\tpublic value: string;\n\tpublic isTrusted?: boolean;\n\tpublic supportThemeIcons?: boolean;\n\n\tconstructor(\n\t\tvalue: string = '',\n\t\tisTrustedOrOptions: boolean | { isTrusted?: boolean, supportThemeIcons?: boolean } = false,\n\t) {\n\t\tthis.value = value;\n\t\tif (typeof this.value !== 'string') {\n\t\t\tthrow illegalArgument('value');\n\t\t}\n\n\t\tif (typeof isTrustedOrOptions === 'boolean') {\n\t\t\tthis.isTrusted = isTrustedOrOptions;\n\t\t\tthis.supportThemeIcons = false;\n\t\t}\n\t\telse {\n\t\t\tthis.isTrusted = isTrustedOrOptions.isTrusted ?? undefined;\n\t\t\tthis.supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n\t\t}\n\t}\n\n\tappendText(value: string, newlineStyle: MarkdownStringTextNewlineStyle = MarkdownStringTextNewlineStyle.Paragraph): MarkdownString {\n\t\tthis.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n\t\t\t.replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n\t\t\t.replace(/^>/gm, '\\\\>')\n\t\t\t.replace(/\\n/g, newlineStyle === MarkdownStringTextNewlineStyle.Break ? '\\\\\\n' : '\\n\\n');\n\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += langId;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || (<IMarkdownString>thing).isTrusted === undefined)\n\t\t\t&& (typeof (<IMarkdownString>thing).supportThemeIcons === 'boolean' || (<IMarkdownString>thing).supportThemeIcons === undefined);\n\t}\n\treturn false;\n}\n\nexport function markedStringsEquals(a: IMarkdownString | IMarkdownString[], b: IMarkdownString | IMarkdownString[]): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn equals(a, b, markdownStringEqual);\n\t} else if (isMarkdownString(a) && isMarkdownString(b)) {\n\t\treturn markdownStringEqual(a, b);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value && a.isTrusted === b.isTrusted && a.supportThemeIcons === b.supportThemeIcons;\n\t}\n}\n\nexport function escapeMarkdownSyntaxTokens(text: string): string {\n\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\treturn text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\n\nexport function parseHrefAndDimensions(href: string): { href: string, dimensions: string[] } {\n\tconst dimensions: string[] = [];\n\tconst splitted = href.split('|').map(s => s.trim());\n\thref = splitted[0];\n\tconst parameters = splitted[1];\n\tif (parameters) {\n\t\tconst heightFromParams = /height=(\\d+)/.exec(parameters);\n\t\tconst widthFromParams = /width=(\\d+)/.exec(parameters);\n\t\tconst height = heightFromParams ? heightFromParams[1] : '';\n\t\tconst width = widthFromParams ? widthFromParams[1] : '';\n\t\tconst widthIsFinite = isFinite(parseInt(width));\n\t\tconst heightIsFinite = isFinite(parseInt(height));\n\t\tif (widthIsFinite) {\n\t\t\tdimensions.push(`width=\"${width}\"`);\n\t\t}\n\t\tif (heightIsFinite) {\n\t\t\tdimensions.push(`height=\"${height}\"`);\n\t\t}\n\t}\n\treturn { href, dimensions };\n}\n"]}