{"version":3,"file":"keyCodes.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/keyCodes.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\tDependsOnKbLayout = -1,\n\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic getHashCode(): string {\n\t\tconst ctrl = this.ctrlKey ? '1' : '0';\n\t\tconst shift = this.shiftKey ? '1' : '0';\n\t\tconst alt = this.altKey ? '1' : '0';\n\t\tconst meta = this.metaKey ? '1' : '0';\n\t\treturn `${ctrl}${shift}${alt}${meta}${this.keyCode}`;\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic getHashCode(): string {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this.parts.length; i < len; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tresult += ';';\n\t\t\t}\n\t\t\tresult += this.parts[i].getHashCode();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic abstract getElectronAccelerator(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for user settings.\n\t */\n\tpublic abstract getUserSettingsLabel(): string | null;\n\t/**\n\t * Is the user settings label reflecting the label?\n\t */\n\tpublic abstract isWYSIWYG(): boolean;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t * Returns null for parts consisting of only modifier keys\n\t * @example keybinding \"Shift\" -> null\n\t * @example keybinding (\"D\" with shift == true) -> \"shift+D\"\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching single modifier keys\n\t * Returns null for parts that contain more than one modifier or a regular key.\n\t * @example keybinding \"Shift\" -> \"shift\"\n\t * @example keybinding (\"D\" with shift == true\") -> null\n\t */\n\tpublic abstract getSingleModifierDispatchParts(): (string | null)[];\n}\n"]}