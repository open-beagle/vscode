{"version":3,"file":"skipList.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/common/skipList.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nclass Node<K, V> {\n\treadonly forward: Node<K, V>[];\n\tconstructor(readonly level: number, readonly key: K, public value: V) {\n\t\tthis.forward = [];\n\t}\n}\n\nconst NIL: undefined = undefined;\n\ninterface Comparator<K> {\n\t(a: K, b: K): number;\n}\n\nexport class SkipList<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'SkipList';\n\n\tprivate _maxLevel: number;\n\tprivate _level: number = 0;\n\tprivate _header: Node<K, V>;\n\tprivate _size: number = 0;\n\n\t/**\n\t *\n\t * @param capacity Capacity at which the list performs best\n\t */\n\tconstructor(\n\t\treadonly comparator: (a: K, b: K) => number,\n\t\tcapacity: number = 2 ** 16\n\t) {\n\t\tthis._maxLevel = Math.max(1, Math.log2(capacity) | 0);\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tclear(): void {\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn Boolean(SkipList._search(this, key, this.comparator));\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn SkipList._search(this, key, this.comparator)?.value;\n\t}\n\n\tset(key: K, value: V): this {\n\t\tif (SkipList._insert(this, key, value, this.comparator)) {\n\t\t\tthis._size += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst didDelete = SkipList._delete(this, key, this.comparator);\n\t\tif (didDelete) {\n\t\t\tthis._size -= 1;\n\t\t}\n\t\treturn didDelete;\n\t}\n\n\t// --- iteration\n\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tcallbackfn.call(thisArg, node.value, node.key, this);\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\t*entries(): IterableIterator<[K, V]> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield [node.key, node.value];\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<K> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.key;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*values(): IterableIterator<V> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\t// debug string...\n\t\tlet result = '[SkipList]:';\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tresult += `node(${node.key}, ${node.value}, lvl:${node.level})`;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t\treturn result;\n\t}\n\n\t// from https://www.epaperpress.com/sortsearch/download/skiplist.pdf\n\n\tprivate static _search<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\treturn x;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate static _insert<K, V>(list: SkipList<K, V>, searchKey: K, value: V, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\t// update\n\t\t\tx.value = value;\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// insert\n\t\t\tlet lvl = SkipList._randomLevel(list);\n\t\t\tif (lvl > list._level) {\n\t\t\t\tfor (let i = list._level; i < lvl; i++) {\n\t\t\t\t\tupdate[i] = list._header;\n\t\t\t\t}\n\t\t\t\tlist._level = lvl;\n\t\t\t}\n\t\t\tx = new Node<K, V>(lvl, searchKey, value);\n\t\t\tfor (let i = 0; i < lvl; i++) {\n\t\t\t\tx.forward[i] = update[i].forward[i];\n\t\t\t\tupdate[i].forward[i] = x;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate static _randomLevel(list: SkipList<any, any>, p: number = 0.5): number {\n\t\tlet lvl = 1;\n\t\twhile (Math.random() < p && lvl < list._maxLevel) {\n\t\t\tlvl += 1;\n\t\t}\n\t\treturn lvl;\n\t}\n\n\tprivate static _delete<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (!x || comparator(x.key, searchKey) !== 0) {\n\t\t\t// not found\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < list._level; i++) {\n\t\t\tif (update[i].forward[i] !== x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupdate[i].forward[i] = x.forward[i];\n\t\t}\n\t\twhile (list._level > 0 && list._header.forward[list._level - 1] === NIL) {\n\t\t\tlist._level -= 1;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n"]}