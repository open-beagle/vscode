{"version":3,"file":"watcher.js","sourceRoot":"file:///go/src/gitlab.wodcloud.com/cloud/vscode/lib/vscode/src","sources":["vs/base/node/watcher.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n"]}